Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f8fa
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6c3 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca8                Krnl::firstTask()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006e96                Computer::setBootMessage(char const*)
                0x00000000c0006e98                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070ec                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007128                Computer::shutdown()
                0x00000000c0007140                Computer::restart()
                0x00000000c0007158                Computer::sleep()
                0x00000000c000716c                Computer::nmiEnabled()
                0x00000000c0007178                Computer::readCMOS(unsigned char)
                0x00000000c0007196                Computer::enableNMI(bool)
                0x00000000c00071ae                Computer::open(int, int, void*)
                0x00000000c0007282                Computer::disableNMI()
                0x00000000c0007292                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072b6                Computer::handleNMI()
 *fill*         0x00000000c0007321        0x1 
 .text          0x00000000c0007322      0x1db core/gdt.32
                0x00000000c0007322                GDTEntry::setBase(unsigned int)
                0x00000000c000733e                GDTEntry::setLimit(unsigned int)
                0x00000000c000735c                GDT::GDT()
                0x00000000c000735c                GDT::GDT()
                0x00000000c0007372                GDT::addEntry(GDTEntry)
                0x00000000c0007394                GDT::getNumberOfEntries()
                0x00000000c000739c                GDT::flush()
                0x00000000c00073be                GDT::setup()
 .text          0x00000000c00074fd       0x1d core/idle.32
                0x00000000c00074fd                idleFunction(void*)
 *fill*         0x00000000c000751a        0x2 
 .text          0x00000000c000751c      0x46c core/idt.32
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c0007596                IDTEntry::setOffset(unsigned int)
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ae                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075b6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007608                IDT::flush()
                0x00000000c0007622                IDT::setup()
 .text          0x00000000c0007988      0x188 core/kheap.32
                0x00000000c0007988                sbrk
                0x00000000c0007a1f                mmap
                0x00000000c0007a35                munmap
                0x00000000c0007a4b                liballoc_lock()
                0x00000000c0007a59                liballoc_unlock()
                0x00000000c0007a6f                liballoc_alloc(int)
                0x00000000c0007a87                liballoc_free(void*, int)
                0x00000000c0007aa2                realloc
                0x00000000c0007ab6                malloc
                0x00000000c0007ac6                free
                0x00000000c0007ad6                rfree
                0x00000000c0007ae6                calloc
 .text          0x00000000c0007b10       0xc7 core/main.32
                0x00000000c0007b10                KeEntryPoint
 .text          0x00000000c0007bd7      0x644 core/physmgr.32
                0x00000000c0007bd7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cbf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfa                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3a                Phys::getPageState(unsigned long)
                0x00000000c0007d56                Phys::freePage(unsigned long)
                0x00000000c0007dbf                Phys::allocatePage()
                0x00000000c0007e8e                Phys::allocateContiguousPages(int)
                0x00000000c0007ef5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f2d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000821b        0x1 
 .text          0x00000000c000821c      0x273 core/pipe.32
                0x00000000c000821c                Pipe::isAtty()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008244                Pipe::~Pipe()
                0x00000000c000826c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000832c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xab3 core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a60                VgaText::putx(unsigned int)
                0x00000000c0008aa6                VgaText::puts(char const*)
                0x00000000c0008acc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b18                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008db6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f42                VgaText::doUpdate()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x1a1 core/tss.32
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f54                TSS::setESP(unsigned long)
                0x00000000c0008f68                TSS::flush()
                0x00000000c0008f88                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090e5        0x1 
 .text          0x00000000c00090e6      0x4ca core/unixfile.32
                0x00000000c00090e6                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000913c                ReservedFilename::isAtty()
                0x00000000c0009158                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091b6                UnixFile::getFileDescriptor()
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c0009440                UnixFile::~UnixFile()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c000948c                ReservedFilename::~ReservedFilename()
                0x00000000c00094b3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b0     0x1218 core/virtmgr.32
                0x00000000c00095b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ea                Virt::getPageState(unsigned long)
                0x00000000c000960d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009732                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009755                Virt::swapIDToSector(unsigned long)
                0x00000000c000976b                Virt::allocateSwapfilePage()
                0x00000000c00097eb                Virt::virtualMemorySetup()
                0x00000000c000983c                Virt::setupPageSwapping(int)
                0x00000000c00098ae                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098de                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000992b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a68                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a8c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aa6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009b52                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b86                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009d20                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e24                VAS::allocatePages(int, int)
                0x00000000c0009f1a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f72                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a2b2                VAS::evict(unsigned long)
                0x00000000c000a390                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a52a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a59e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ca                VAS::scanForEviction()
                0x00000000c000a6cd                mapVASFirstTime
 .text          0x00000000c000a7c8       0x5f coreobjs/c++.32
                0x00000000c000a7c8                __cxa_atexit
                0x00000000c000a7cb                __cxa_finalize
                0x00000000c000a7cc                __stack_chk_fail
                0x00000000c000a802                __cxa_pure_virtual
                0x00000000c000a813                operator new[](unsigned long)
                0x00000000c000a818                operator delete(void*, unsigned long)
                0x00000000c000a81d                operator delete[](void*)
                0x00000000c000a822                operator delete[](void*, unsigned long)
 .text          0x00000000c000a827      0x254 dbg/kconsole.32
                0x00000000c000a827                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8c7                Dbg::logc(char)
                0x00000000c000a8e7                Dbg::logs(char*)
                0x00000000c000a906                Dbg::logWriteInt(unsigned int)
                0x00000000c000a924                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a945                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa7b        0x1 
 .text          0x00000000c000aa7c      0x2d4 dbg/usban.32
                0x00000000c000aa7c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aae8                __ubsan_handle_type_mismatch_v1
                0x00000000c000abc4                __ubsan_handle_pointer_overflow
                0x00000000c000abf0                __ubsan_handle_out_of_bounds
                0x00000000c000ac1c                __ubsan_handle_add_overflow
                0x00000000c000ac48                __ubsan_handle_load_invalid_value
                0x00000000c000ac74                __ubsan_handle_divrem_overflow
                0x00000000c000aca0                __ubsan_handle_mul_overflow
                0x00000000c000accc                __ubsan_handle_sub_overflow
                0x00000000c000acf8                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad24                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad50      0x81b fs/symlink.32
                0x00000000c000ae9f                KiDeinitialiseSymlinks(void*)
                0x00000000c000af32                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000afb5                KiIsSymlinkRegistered(char const*)
                0x00000000c000b12b                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b2bf                KeCreateSymlink(char const*, char const*)
                0x00000000c000b3fb                KeInitialiseSymlinks()
 *fill*         0x00000000c000b56b        0x1 
 .text          0x00000000c000b56c      0xd68 fs/vfs.32
                0x00000000c000b56c                File::read(unsigned long long, void*, int*)
                0x00000000c000b5c4                File::write(unsigned long long, void*, int*)
                0x00000000c000b61c                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b674                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b6a2                File::isAtty()
                0x00000000c000b6a6                Directory::isAtty()
                0x00000000c000b6aa                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b6b0                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b6b6                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b6bc                File::~File()
                0x00000000c000b6bc                File::~File()
                0x00000000c000b6e0                File::~File()
                0x00000000c000b70a                Directory::~Directory()
                0x00000000c000b70a                Directory::~Directory()
                0x00000000c000b72e                Directory::~Directory()
                0x00000000c000b758                Filesystem::Filesystem()
                0x00000000c000b758                Filesystem::Filesystem()
                0x00000000c000b77c                Filesystem::~Filesystem()
                0x00000000c000b77c                Filesystem::~Filesystem()
                0x00000000c000b78a                Filesystem::~Filesystem()
                0x00000000c000b7ae                Fs::getcwd(Process*, char*, int)
                0x00000000c000b7d8                Fs::initVFS()
                0x00000000c000b802                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba1c                File::File(char const*, Process*, bool)
                0x00000000c000ba1c                File::File(char const*, Process*, bool)
                0x00000000c000bafa                File::File(char const*, Process*)
                0x00000000c000bafa                File::File(char const*, Process*)
                0x00000000c000bb18                File::open(FileOpenMode)
                0x00000000c000bb76                File::close()
                0x00000000c000bbd6                File::seek(unsigned long long)
                0x00000000c000bc2c                File::truncate(unsigned long long)
                0x00000000c000bc82                File::tell(unsigned long long*)
                0x00000000c000bcd2                File::rewind()
                0x00000000c000bce6                File::unlink()
                0x00000000c000bd32                File::rename(char const*)
                0x00000000c000bd80                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bddc                File::exists()
                0x00000000c000be1a                File::stat(unsigned long long*, bool*)
                0x00000000c000be7b                Fs::setcwd(Process*, char*)
                0x00000000c000bfda                Directory::Directory(char const*, Process*)
                0x00000000c000bfda                Directory::Directory(char const*, Process*)
                0x00000000c000c0a2                Directory::open()
                0x00000000c000c0fe                Directory::close()
                0x00000000c000c15e                Directory::unlink()
                0x00000000c000c1aa                Directory::rename(char const*)
                0x00000000c000c1f8                Directory::exists()
                0x00000000c000c236                Directory::read(dirent*)
                0x00000000c000c282                Directory::create()
                0x00000000c000c2ce                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c2d4       0x86 hal/bus.32
                0x00000000c000c2d4                Bus::Bus(char const*)
                0x00000000c000c2d4                Bus::Bus(char const*)
                0x00000000c000c30c                Bus::~Bus()
                0x00000000c000c30c                Bus::~Bus()
                0x00000000c000c330                Bus::~Bus()
 .text          0x00000000c000c35a       0x96 hal/buzzer.32
                0x00000000c000c35a                beepThread(void*)
                0x00000000c000c397                Krnl::beep(int, int, bool)
 .text          0x00000000c000c3f0      0x45f hal/clock.32
                0x00000000c000c3f0                User::loadClockSettings(int)
                0x00000000c000c442                Clock::Clock(char const*)
                0x00000000c000c442                Clock::Clock(char const*)
                0x00000000c000c478                Clock::~Clock()
                0x00000000c000c478                Clock::~Clock()
                0x00000000c000c49c                Clock::~Clock()
                0x00000000c000c4c6                Clock::timeInSecondsLocal()
                0x00000000c000c50e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c567                datetimeToSeconds(datetime_t)
                0x00000000c000c686                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c6e6                secondsToDatetime(unsigned long long)
                0x00000000c000c82a                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c84f        0x1 
 .text          0x00000000c000c850      0x464 hal/device.32
                0x00000000c000c850                Device::hibernate()
                0x00000000c000c852                Device::wake()
                0x00000000c000c854                Device::detect()
                0x00000000c000c856                Device::disableLegacy()
                0x00000000c000c858                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c85a                DriverlessDevice::close(int, int, void*)
                0x00000000c000c85e                DriverlessDevice::detect()
                0x00000000c000c860                DriverlessDevice::open(int, int, void*)
                0x00000000c000c874                Device::~Device()
                0x00000000c000c874                Device::~Device()
                0x00000000c000c882                Device::~Device()
                0x00000000c000c8aa                Device::findAndLoadDriver()
                0x00000000c000c8b8                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c8de                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c91e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c948                Device::getParent()
                0x00000000c000c954                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c972                Device::addChild(Device*)
                0x00000000c000c9b6                Device::removeAllChildren()
                0x00000000c000c9fc                Device::hibernateAll()
                0x00000000c000ca2c                Device::wakeAll()
                0x00000000c000ca5c                Device::detectAll()
                0x00000000c000ca8c                Device::disableLegacyAll()
                0x00000000c000ca8e                Device::loadDriversForAll()
                0x00000000c000ca90                Device::closeAll()
                0x00000000c000cac6                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cafc                Device::setName(char const*)
                0x00000000c000cb0a                Device::Device(char const*)
                0x00000000c000cb0a                Device::Device(char const*)
                0x00000000c000cc06                Device::getName()
                0x00000000c000cc10                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc10                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc46                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cc8a                getDevicesOfType(DeviceType)
 .text          0x00000000c000ccb4       0x86 hal/diskctrl.32
                0x00000000c000ccb4                HardDiskController::HardDiskController(char const*)
                0x00000000c000ccb4                HardDiskController::HardDiskController(char const*)
                0x00000000c000ccec                HardDiskController::~HardDiskController()
                0x00000000c000ccec                HardDiskController::~HardDiskController()
                0x00000000c000cd10                HardDiskController::~HardDiskController()
 .text          0x00000000c000cd3a       0xe2 hal/diskphys.32
                0x00000000c000cd3a                PhysicalDisk::eject()
                0x00000000c000cd3e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cd3e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cda6                PhysicalDisk::startCache()
                0x00000000c000cdce                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cdce                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cdf2                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ce1c        0x0 hal/fpu.32
 .text          0x00000000c000ce1c      0x359 hal/intctrl.32
                0x00000000c000ce1c                int_handler
                0x00000000c000cea6                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cef0                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d024                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d058                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d0d6                setupINTS()
                0x00000000c000d133                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000d175        0x1 
 .text          0x00000000c000d176      0x8be hal/keybrd.32
                0x00000000c000d176                startGUI(void*)
                0x00000000c000d1e4                startGUIVESA(void*)
                0x00000000c000d252                sendKeyToTerminal(unsigned char)
                0x00000000c000d32d                sendKeyboardToken(KeyboardToken)
                0x00000000c000d817                clearInternalKeybuffer(VgaText*)
                0x00000000c000d84c                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d9aa                Keyboard::Keyboard(char const*)
                0x00000000c000d9aa                Keyboard::Keyboard(char const*)
                0x00000000c000d9e6                Keyboard::~Keyboard()
                0x00000000c000d9e6                Keyboard::~Keyboard()
                0x00000000c000da0a                Keyboard::~Keyboard()
 .text          0x00000000c000da34      0x3f8 hal/logidisk.32
                0x00000000c000da34                LogicalDisk::close(int, int, void*)
                0x00000000c000da38                LogicalDisk::~LogicalDisk()
                0x00000000c000da38                LogicalDisk::~LogicalDisk()
                0x00000000c000da5c                LogicalDisk::~LogicalDisk()
                0x00000000c000da86                LogicalDisk::open(int, int, void*)
                0x00000000c000da9a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000dad2                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000db18                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000db18                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dbd8                LogicalDisk::assignDriveLetter()
                0x00000000c000dc92                LogicalDisk::mount()
                0x00000000c000dcda                LogicalDisk::unmount()
                0x00000000c000dcea                LogicalDisk::eject()
                0x00000000c000dcfe                LogicalDisk::unassignDriveLetter()
                0x00000000c000dd54                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ddc0                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000de2c       0x86 hal/mouse.32
                0x00000000c000de2c                Mouse::Mouse(char const*)
                0x00000000c000de2c                Mouse::Mouse(char const*)
                0x00000000c000de64                Mouse::~Mouse()
                0x00000000c000de64                Mouse::~Mouse()
                0x00000000c000de88                Mouse::~Mouse()
 .text          0x00000000c000deb2       0x90 hal/nic.32
                0x00000000c000deb2                NIC::getMAC()
                0x00000000c000deb8                NIC::write(int, unsigned char*, int*)
                0x00000000c000debe                NIC::NIC(char const*)
                0x00000000c000debe                NIC::NIC(char const*)
                0x00000000c000def4                NIC::~NIC()
                0x00000000c000def4                NIC::~NIC()
                0x00000000c000df18                NIC::~NIC()
 .text          0x00000000c000df42      0x33b hal/partition.32
                0x00000000c000df42                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dfea                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e27d        0x3 
 .text          0x00000000c000e280       0x86 hal/serial.32
                0x00000000c000e280                Serial::Serial(char const*)
                0x00000000c000e280                Serial::Serial(char const*)
                0x00000000c000e2b8                Serial::~Serial()
                0x00000000c000e2b8                Serial::~Serial()
                0x00000000c000e2dc                Serial::~Serial()
 *fill*         0x00000000c000e306        0x2 
 .text          0x00000000c000e308      0x234 hal/timer.32
                0x00000000c000e308                Timer::Timer(char const*)
                0x00000000c000e308                Timer::Timer(char const*)
                0x00000000c000e340                Timer::~Timer()
                0x00000000c000e340                Timer::~Timer()
                0x00000000c000e364                Timer::~Timer()
                0x00000000c000e38e                Timer::read()
                0x00000000c000e399                setupTimer(int)
                0x00000000c000e3d4                timerHandler(unsigned int)
 .text          0x00000000c000e53c      0x444 hal/vcache.32
                0x00000000c000e53c                VCache::VCache(PhysicalDisk*)
                0x00000000c000e53c                VCache::VCache(PhysicalDisk*)
                0x00000000c000e6ac                VCache::invalidateReadBuffer()
                0x00000000c000e6bc                VCache::writeWriteBuffer()
                0x00000000c000e708                VCache::~VCache()
                0x00000000c000e708                VCache::~VCache()
                0x00000000c000e760                VCache::~VCache()
                0x00000000c000e788                VCache::write(unsigned long long, int, void*)
                0x00000000c000e876                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e980      0x4c7 hal/video.32
                0x00000000c000e980                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e9cc                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ea3c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eaba                Video::clearScreen(unsigned int)
                0x00000000c000eaee                Video::putpixel(int, int, unsigned int)
                0x00000000c000eafc                Video::readPixelApprox(int, int)
                0x00000000c000eb10                Video::Video(char const*)
                0x00000000c000eb10                Video::Video(char const*)
                0x00000000c000eb46                Video::~Video()
                0x00000000c000eb46                Video::~Video()
                0x00000000c000eb6a                Video::~Video()
                0x00000000c000eb94                Video::isMonochrome()
                0x00000000c000eba0                Video::getWidth()
                0x00000000c000ebac                Video::getHeight()
                0x00000000c000ebb8                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ec74                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000eddc                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ee47        0x1 
 .text          0x00000000c000ee48     0x138b hw/acpi.32
                0x00000000c000ee48                ACPI::close(int, int, void*)
                0x00000000c000eefc                findRSDP()
                0x00000000c000ef94                loadACPITables(unsigned char*)
                0x00000000c000f200                findRSDT(unsigned char*)
                0x00000000c000f358                findDataTable(unsigned char*, char*)
                0x00000000c000f3d8                scanMADT()
                0x00000000c000f890                ACPI::ACPI()
                0x00000000c000f890                ACPI::ACPI()
                0x00000000c000f8e4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f9e0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000faac                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fab4                ACPI::detectPCI()
                0x00000000c000fcd4                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fd1c                ACPI::sleep()
                0x00000000c000fd38                ACPI::open(int, int, void*)
 *fill*         0x00000000c00101d3        0x1 
 .text          0x00000000c00101d4      0xbc5 hw/cpu.32
                0x00000000c00101d4                CPU::close(int, int, void*)
                0x00000000c00101d8                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c00101f4                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001020c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0010280                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010304                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010332                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0010360                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001038e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00103bc                CPU::CPU()
                0x00000000c00103bc                CPU::CPU()
                0x00000000c001044a                CPU::displayFeatures()
                0x00000000c001044c                CPU::detectFeatures()
                0x00000000c0010b20                CPU::setupSMEP()
                0x00000000c0010b2c                CPU::setupUMIP()
                0x00000000c0010b36                CPU::setupTSC()
                0x00000000c0010b40                CPU::setupLargePages()
                0x00000000c0010b4a                CPU::setupPAT()
                0x00000000c0010b86                CPU::setupMTRR()
                0x00000000c0010b88                CPU::setupGlobalPages()
                0x00000000c0010b92                CPU::allowUsermodeDataAccess()
                0x00000000c0010ba4                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010bb6                CPU::setupSMAP()
                0x00000000c0010bc4                CPU::setupFeatures()
                0x00000000c0010c90                CPU::open(int, int, void*)
 .text          0x00000000c0010d99       0xb6 krnl/atexit.32
                0x00000000c0010d99                KeInitialiseAtexit()
                0x00000000c0010db8                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010dec                KeExecuteAtexit()
 .text          0x00000000c0010e4f       0xdf krnl/bootmsg.32
                0x00000000c0010e4f                KeDisplaySplashScreen()
                0x00000000c0010ecb                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010f2e        0x2 
 .text          0x00000000c0010f30       0x1d krnl/compat.32
                0x00000000c0010f30                Krnl::handlePowerButton()
                0x00000000c0010f40                Krnl::handleSleepButton()
 .text          0x00000000c0010f4d       0x2b krnl/crc32.32
                0x00000000c0010f4d                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010f78      0x5bf krnl/env.32
                0x00000000c0010f78                EnvVarContainer::getEnv(char const*)
                0x00000000c0010fb6                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0011078                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001107a                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001129e                EnvVarContainer::__loadSystem()
                0x00000000c00112b8                EnvVarContainer::__loadUser()
                0x00000000c00112ba                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112ba                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112dc                EnvVarContainer::~EnvVarContainer()
                0x00000000c00112dc                EnvVarContainer::~EnvVarContainer()
                0x00000000c001130c                KeGetEnv(Process*, char const*)
                0x00000000c0011371                KeSetEnvSystem(char const*, char const*)
                0x00000000c001138b                KeSetEnvUser(char const*, char const*)
                0x00000000c00113aa                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00113bd                KeDeleteEnvSystem(char const*)
                0x00000000c00113be                KeDeleteEnvUser(char const*)
                0x00000000c00113bf                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00113c0                KeNewProcessEnv(Process*)
                0x00000000c00113e2                KeCopyProcessEnv(Process*, Process*)
                0x00000000c001142e                KeLoadSystemEnv()
                0x00000000c001145c                KeLoadUserEnv()
                0x00000000c0011482                KeFlushEnv()
                0x00000000c0011483                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00114a3                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011537       0x94 krnl/inlines.32
                0x00000000c0011537                CPU::current()
                0x00000000c0011543                operator new(unsigned long)
                0x00000000c0011548                operator delete(void*)
                0x00000000c001154d                disableIRQs()
                0x00000000c001154f                enableIRQs()
                0x00000000c0011551                lockScheduler()
                0x00000000c0011559                unlockScheduler()
                0x00000000c0011568                lockStuff()
                0x00000000c0011576                unlockStuff()
                0x00000000c00115b0                Virt::getAKernelVAS()
                0x00000000c00115b6                __not_memcpy
 .text          0x00000000c00115cb        0xc krnl/panic.32
                0x00000000c00115cb                KePanic(char const*)
 .text          0x00000000c00115d7      0x142 krnl/powctrl.32
                0x00000000c00115d7                KePowerThread(void*)
                0x00000000c0011605                KeChangePowerSettings(PowerSettings)
                0x00000000c001161b                KeUserIOReceived()
                0x00000000c0011626                KeHandlePowerButton()
                0x00000000c001165b                KeHandleSleepButton()
                0x00000000c0011690                KeSetupPowerManager()
 .text          0x00000000c0011719       0x9d krnl/random.32
                0x00000000c0011719                KeRand()
                0x00000000c001175b                KeSeedRand(unsigned int)
                0x00000000c0011784                KeInitRand()
 *fill*         0x00000000c00117b6        0x2 
 .text          0x00000000c00117b8      0x1bc krnl/resolve.32
                0x00000000c00117b8                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011974      0x322 krnl/signal.32
                0x00000000c0011974                KiSigKill(int)
                0x00000000c0011988                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011989                KiDefaultSignalHandlerPause(int)
                0x00000000c00119b5                KiDefaultSignalHandlerResume(int)
                0x00000000c00119e1                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00119e6                KeInitSignals()
                0x00000000c0011a38                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011a6e                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011aeb                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011be2                KiCheckSignalZ
                0x00000000c0011c24                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011c5f                KiFinishSignalZ
 .text          0x00000000c0011c96      0xe10 krnl/syscalls.32
                0x00000000c0011c96                SysSeekDir(regs*)
                0x00000000c0011c9b                SysTellDir(regs*)
                0x00000000c0011ca0                SysVerify(regs*)
                0x00000000c0011caa                SysGetArgc(regs*)
                0x00000000c0011cbe                SysTTYName(regs*)
                0x00000000c0011cc6                SysFormatDisk(regs*)
                0x00000000c0011d3d                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011d91                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011dea                SysShutdown(regs*)
                0x00000000c0011e48                SysRealpath(regs*)
                0x00000000c0011e8c                SysReadDir(regs*)
                0x00000000c0011f0c                SysIsATTY(regs*)
                0x00000000c0011f66                SysSeek(regs*)
                0x00000000c0011fbd                SysTell(regs*)
                0x00000000c001202a                SysSize(regs*)
                0x00000000c001209d                SysSizeFromFilename(regs*)
                0x00000000c00121ce                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00122ff                SysClose(regs*)
                0x00000000c001235f                SysOpenDir(regs*)
                0x00000000c00123dc                SysMakeDir(regs*)
                0x00000000c001244a                SysCloseDir(regs*)
                0x00000000c001249e                SysWait(regs*)
                0x00000000c00124bf                SysNotImpl(regs*)
                0x00000000c00124da                SysPanic(regs*)
                0x00000000c00124f5                SysRmdir(regs*)
                0x00000000c001255a                SysUnlink(regs*)
                0x00000000c00125bf                SysGetArgv(regs*)
                0x00000000c001260c                SysUSleep(regs*)
                0x00000000c0012635                SysSpawn(regs*)
                0x00000000c00126a8                SysGetEnv(regs*)
                0x00000000c0012759                SysSetFatAttrib(regs*)
                0x00000000c00127cc                SysPipe(regs*)
                0x00000000c0012811                SysGetUnixTime(regs*)
                0x00000000c0012825                string_ends_with(char const*, char const*)
                0x00000000c001286d                SysOpen(regs*)
                0x00000000c0012a64                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012aa6        0x2 
 .text          0x00000000c0012aa8      0x159 net/ethernet.32
                0x00000000c0012aa8                KeSwitchEndian16(unsigned short)
                0x00000000c0012acc                KeSwitchEndian32(unsigned int)
                0x00000000c0012afc                EthernetCRC32(unsigned char*, int)
                0x00000000c0012ba0                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012c01      0xd56 reg/cm.32
                0x00000000c0012c01                CmOpen(char const*)
                0x00000000c0012d1f                CmClose(Reghive_Tag*)
                0x00000000c0012d35                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012d71                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012de8                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012e27                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012e59                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012e95                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012ebd                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012ede                CmExpand(Reghive_Tag*, int)
                0x00000000c0012f59                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012fdf                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c00130d3                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c001320f                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0013270                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00132a0                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c00132d7                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0013301                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013341                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00133e5                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0013413                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00135b1                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00135fe                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013678                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00136cb                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001378f                zStrtok(char*, char const*)
                0x00000000c0013801                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013882                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013925                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0013957      0x52a reg/registry.32
                0x00000000c0013957                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013ac8                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013c1d                Reg::getLine(char*, char*, char*)
                0x00000000c0013c54                Reg::readInt(char*, char*, int*)
                0x00000000c0013d42                Reg::readString(char*, char*, char*, int)
                0x00000000c0013dc3                Reg::readBool(char*, char*, bool*)
                0x00000000c0013de8                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013e14                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013e40                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013e81       0x36 sys/eject.32
                0x00000000c0013e81                SysEject(regs*)
 .text          0x00000000c0013eb7       0x18 sys/exit.32
                0x00000000c0013eb7                SysExit(regs*)
 .text          0x00000000c0013ecf       0x1f sys/getcwd.32
                0x00000000c0013ecf                SysGetCwd(regs*)
 .text          0x00000000c0013eee        0xc sys/getpid.32
                0x00000000c0013eee                SysGetPID(regs*)
 .text          0x00000000c0013efa       0x1a sys/getramdata.32
                0x00000000c0013efa                SysGetRAMData(regs*)
 .text          0x00000000c0013f14       0x82 sys/getvgaptr.32
                0x00000000c0013f14                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013f96        0x2 
 .text          0x00000000c0013f98       0xb9 sys/kill.32
                0x00000000c0013f98                SysKill(regs*)
 .text          0x00000000c0014051       0xa8 sys/loaddll.32
                0x00000000c0014051                SysLoadDLL(regs*)
 .text          0x00000000c00140f9       0x68 sys/read.32
                0x00000000c00140f9                SysRead(regs*)
 .text          0x00000000c0014161       0x29 sys/registersignal.32
                0x00000000c0014161                SysRegisterSignal(regs*)
 .text          0x00000000c001418a      0x19c sys/registry.32
                0x00000000c001418a                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014201                SysRegistryReadExtent(regs*)
                0x00000000c0014249                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014271                SysRegistryEnterDirectory(regs*)
                0x00000000c0014299                SysRegistryGetNext(regs*)
                0x00000000c00142c1                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00142fb                SysRegistryOpen(regs*)
                0x00000000c001430f                SysRegistryClose(regs*)
 .text          0x00000000c0014326       0x55 sys/sbrk.32
                0x00000000c0014326                SysSbrk(regs*)
 .text          0x00000000c001437b       0x1c sys/setcwd.32
                0x00000000c001437b                SysSetCwd(regs*)
 .text          0x00000000c0014397       0x96 sys/settime.32
                0x00000000c0014397                SysSetTime(regs*)
 .text          0x00000000c001442d       0x2d sys/symlink.32
                0x00000000c001442d                SysSymlink(regs*)
 .text          0x00000000c001445a       0x4a sys/timezone.32
                0x00000000c001445a                SysTimezone(regs*)
 .text          0x00000000c00144a4       0xfc sys/truncate.32
                0x00000000c00144a4                SysTruncate(regs*)
 .text          0x00000000c00145a0       0x68 sys/write.32
                0x00000000c00145a0                SysWrite(regs*)
 .text          0x00000000c0014608       0x62 sys/wsbe.32
                0x00000000c0014608                SysWsbe(regs*)
 .text          0x00000000c001466a       0x25 sys/yield.32
                0x00000000c001466a                SysYield(regs*)
 .text          0x00000000c001468f     0x11e6 thr/elf.32
                0x00000000c001468f                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001491d                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014b2f                Thr::runtimeReferenceHelper()
                0x00000000c0014b42                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014b91                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014e4f                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015588                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00155ba                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00155f1                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001560b                Thr::loadDLL(char const*, bool)
                0x00000000c001583c                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0015875        0x3 
 .text          0x00000000c0015878     0x13d9 thr/prcssthr.32
                0x00000000c0015878                userModeEntryPoint(void*)
                0x00000000c00158a0                changeTSS
                0x00000000c00158d0                switchToThread(ThreadControlBlock*)
                0x00000000c0015980                Process::addArgs(char**)
                0x00000000c00159ec                Process::Process(char const*, Process*, char**)
                0x00000000c00159ec                Process::Process(char const*, Process*, char**)
                0x00000000c0015bf8                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015bf8                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015dcc                taskStartupFunction
                0x00000000c0015dd8                Semaphore::Semaphore(int)
                0x00000000c0015dd8                Semaphore::Semaphore(int)
                0x00000000c0015e08                Mutex::Mutex()
                0x00000000c0015e08                Mutex::Mutex()
                0x00000000c0015e1c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015f28                Process::createUserThread()
                0x00000000c0015f48                setupMultitasking(void (*)())
                0x00000000c001606c                schedule()
                0x00000000c0016100                Semaphore::tryAcquire()
                0x00000000c00161d4                Semaphore::assertLocked(char const*)
                0x00000000c0016258                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016280                blockTask(TaskState)
                0x00000000c00162b8                waitTask(int, int*, int)
                0x00000000c00162fc                milliTenthSleepUntil(unsigned int)
                0x00000000c001639c                milliTenthSleep(unsigned int)
                0x00000000c00163b0                sleep(unsigned int)
                0x00000000c00163cc                Semaphore::acquire()
                0x00000000c0016494                taskReturned
                0x00000000c00164d8                Thr::processFromPID(int)
                0x00000000c0016584                unblockTask(ThreadControlBlock*)
                0x00000000c0016630                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016904                cleanerTaskFunction(void*)
                0x00000000c0016a0c                terminateTask(int)
                0x00000000c0016af8                Thr::terminateFromIRQ(int)
                0x00000000c0016b08                Semaphore::release()
 .text          0x00000000c0016c51      0xc27 vm86/vm8086.32
                0x00000000c0016c51                Vm::inbv(unsigned short)
                0x00000000c0016c64                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016c9a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016caa                Vm::getSegment(unsigned int)
                0x00000000c0016cb2                Vm::getOffset(unsigned int)
                0x00000000c0016cb7                Vm::mainloop2()
                0x00000000c0016cf1                Vm::mainVm8086Loop(void*)
                0x00000000c0016d01                Vm::mainloop3(unsigned long)
                0x00000000c0016d27                Vm::initialise8086()
                0x00000000c0016d6a                Vm::finish8086()
                0x00000000c0016dcb                Vm::getOutput8086(unsigned char*)
                0x00000000c0016df0                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016ea9                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017047                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00170e0                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00170f1                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017103                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017114                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017129                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001713f                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017154                Vm::faultHandler(regs*)
 .text          0x00000000c0017878      0xaf0 arch/i386/hal.32
                0x00000000c0017878                noCopro(unsigned long)
                0x00000000c0017879                nmiHandler(regs*, void*)
                0x00000000c0017892                doubleFault(regs*, void*)
                0x00000000c00178ab                displayDebugInfo(regs*)
                0x00000000c0017c30                HalSystemIdle()
                0x00000000c0017cac                displayProgramFault(char const*)
                0x00000000c0017cf8                gpFault(regs*, void*)
                0x00000000c0017d5f                pgFault(regs*, void*)
                0x00000000c0017de8                otherISRHandler(regs*, void*)
                0x00000000c0017e1c                opcodeFault(regs*, void*)
                0x00000000c0017e9f                i386SaveCoprocessor(void*)
                0x00000000c0017eb3                i386LoadCoprocessor(void*)
                0x00000000c0017ec7                x87EmulHandler(regs*, void*)
                0x00000000c0017f64                HalInitialiseCoprocessor()
                0x00000000c0018012                HalPanic(char const*)
                0x00000000c0018126                HalQueryPerformanceCounter()
                0x00000000c0018141                HalInitialise()
                0x00000000c00182f7                HalMakeBeep(int)
                0x00000000c0018331                HalGetRand()
                0x00000000c0018334                HalEndOfInterrupt(int)
                0x00000000c0018365                HalRestart()
                0x00000000c0018366                HalShutdown()
                0x00000000c0018367                HalSleep()
 .text          0x00000000c0018368      0x2dc arch/i386/pic.32
                0x00000000c0018368                picIoWait()
                0x00000000c0018370                picDisable()
                0x00000000c00183a4                picGetIRQReg(int)
                0x00000000c0018420                picOpen()
                0x00000000c00185a4                picEOI(int)
 .text          0x00000000c0018644      0x674 arch/i386/rtc.32
                0x00000000c0018644                RTC::open(int, int, void*)
                0x00000000c0018648                RTC::close(int, int, void*)
                0x00000000c001864c                RTC::timeInSecondsUTC()
                0x00000000c001865e                RTC::timeInDatetimeUTC()
                0x00000000c0018684                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00186c2                RTC::~RTC()
                0x00000000c00186c2                RTC::~RTC()
                0x00000000c00186e6                RTC::~RTC()
                0x00000000c0018710                RTC::get_update_in_progress_flag()
                0x00000000c001872a                RTC::completeRTCRefresh()
                0x00000000c0018a0a                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018bb8                rtcIRQHandler(regs*, void*)
                0x00000000c0018bfe                RTC::RTC()
                0x00000000c0018bfe                RTC::RTC()
 .text          0x00000000c0018cb8      0x1f4 arch/i386/vga.32
                0x00000000c0018cb8                HalConsoleScroll(int, int)
                0x00000000c0018dc0                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018e24                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018eac     0x14cf fs/fat/vfslink.32
                0x00000000c0018eac                FAT::getName()
                0x00000000c0018eb4                FAT::tell(void*, unsigned long long*)
                0x00000000c0018ef0                FAT::stat(void*, unsigned long long*)
                0x00000000c0018f2c                FAT::~FAT()
                0x00000000c0018f2c                FAT::~FAT()
                0x00000000c0018f50                FAT::~FAT()
                0x00000000c0018f78                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001901c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00190e0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00192c4                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00194e0                FAT::allocateSwapfile(char const*, int)
                0x00000000c00196a0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019810                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019870                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00198d0                FAT::close(void*)
                0x00000000c0019924                FAT::closeDir(void*)
                0x00000000c0019978                FAT::truncate(void*, unsigned long long)
                0x00000000c00199e4                FAT::seek(void*, unsigned long long)
                0x00000000c0019a3c                fatWrapperReadDisk
                0x00000000c0019a7c                fatWrapperWriteDisk
                0x00000000c0019abc                fatWrapperIoctl
                0x00000000c0019bd8                FAT::FAT()
                0x00000000c0019bd8                FAT::FAT()
                0x00000000c0019c30                FAT::fixFilepath(char*)
                0x00000000c0019c70                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019de4                FAT::openDir(char const*, void**)
                0x00000000c0019e94                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019f8c                FAT::unlink(char const*)
                0x00000000c001a00c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a1c0                FAT::rename(char const*, char const*)
                0x00000000c001a28c                FAT::mkdir(char const*)
                0x00000000c001a30c                FAT::exists(char const*)
 *fill*         0x00000000c001a37b        0x1 
 .text          0x00000000c001a37c       0x94 fs/iso9660/helper.32
                0x00000000c001a37c                isoReadDiscSectorHelper
                0x00000000c001a3d8                iso_kprintf
                0x00000000c001a3f4                iso_kprintfd
 .text          0x00000000c001a410      0x71c fs/iso9660/vfslink.32
                0x00000000c001a410                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a416                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a41c                ISO9660::getName()
                0x00000000c001a422                ISO9660::closeDir(void*)
                0x00000000c001a42c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a432                ISO9660::unlink(char const*)
                0x00000000c001a438                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a43e                ISO9660::rename(char const*, char const*)
                0x00000000c001a444                ISO9660::mkdir(char const*)
                0x00000000c001a44a                ISO9660::~ISO9660()
                0x00000000c001a44a                ISO9660::~ISO9660()
                0x00000000c001a46e                ISO9660::~ISO9660()
                0x00000000c001a496                ISO9660::exists(char const*)
                0x00000000c001a4aa                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a590                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a5d8                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a61a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a658                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a6aa                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a7ec                ISO9660::close(void*)
                0x00000000c001a81c                ISO9660::openDir(char const*, void**)
                0x00000000c001a8f6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001aa13                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001aa92                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ab04                ISO9660::ISO9660()
                0x00000000c001ab04                ISO9660::ISO9660()
 .text          0x00000000c001ab2c      0x26c hal/sound/sndcard.32
                0x00000000c001ab2c                SoundCard::beginPlayback()
                0x00000000c001ab3a                SoundCard::stopPlayback()
                0x00000000c001ab48                SoundCard::SoundCard(char const*)
                0x00000000c001ab48                SoundCard::SoundCard(char const*)
                0x00000000c001abe6                SoundCard::~SoundCard()
                0x00000000c001abe6                SoundCard::~SoundCard()
                0x00000000c001ac0a                SoundCard::~SoundCard()
                0x00000000c001ac34                SoundCard::configureRates(int, int, int)
                0x00000000c001ac64                SoundCard::getSamples16(int, short*)
                0x00000000c001acc0                SoundCard::getSamples32(int, int*)
                0x00000000c001ad46                SoundCard::addChannel(SoundPort*)
                0x00000000c001ad84                SoundCard::removeChannel(int)
 .text          0x00000000c001ad98      0x38a hal/sound/sndport.32
                0x00000000c001ad98                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ad98                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ae24                SoundPort::~SoundPort()
                0x00000000c001ae24                SoundPort::~SoundPort()
                0x00000000c001ae58                SoundPort::unpause()
                0x00000000c001ae64                SoundPort::pause()
                0x00000000c001ae70                SoundPort::getBufferUsed()
                0x00000000c001ae78                SoundPort::getBufferSize()
                0x00000000c001ae80                SoundPort::buffer16(short*, int)
                0x00000000c001af0c                SoundPort::buffer32(int*, int)
                0x00000000c001af98                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b064                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b122        0x0 hw/bus/isa.32
 .text          0x00000000c001b122      0xbb7 hw/bus/pci.32
                0x00000000c001b122                PCI::open(int, int, void*)
                0x00000000c001b140                PCI::close(int, int, void*)
                0x00000000c001b144                PCI::PCI()
                0x00000000c001b144                PCI::PCI()
                0x00000000c001b1dc                PCI::readBAR8(unsigned int, int)
                0x00000000c001b1f8                PCI::readBAR16(unsigned int, int)
                0x00000000c001b216                PCI::readBAR32(unsigned int, int)
                0x00000000c001b232                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b252                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b274                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b294                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b30a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b3b4                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b3d8                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b400                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b44a                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b472                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b496                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4ba                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4e2                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b546                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b62e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b8f4                PCI::checkBus(unsigned char)
                0x00000000c001b918                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001ba92                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc0e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bc80                PCI::detect()
 *fill*         0x00000000c001bcd9        0x1 
 .text          0x00000000c001bcda      0xb9a hw/diskctrl/ide.32
                0x00000000c001bcda                IDE::close(int, int, void*)
                0x00000000c001bcde                IDE::IDE()
                0x00000000c001bcde                IDE::IDE()
                0x00000000c001bd12                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bd24                selectDrive(unsigned char, unsigned char)
                0x00000000c001bd26                IDE::getBase(unsigned char)
                0x00000000c001bd38                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bdf8                IDE::read(unsigned char, unsigned char)
                0x00000000c001bea6                IDE::waitInterrupt(unsigned char)
                0x00000000c001bf08                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bf24                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bf40                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bf8a                IDE::open(int, int, void*)
                0x00000000c001c3c8                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c498                IDE::detect()
                0x00000000c001c766                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c820                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c874      0x32a hw/diskctrl/satabus.32
                0x00000000c001c874                SATABus::close(int, int, void*)
                0x00000000c001c878                SATABus::detect()
                0x00000000c001c87a                SATABus::SATABus()
                0x00000000c001c87a                SATABus::SATABus()
                0x00000000c001c900                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c932                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c97a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c99a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c9c4                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cad4                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cb7e                SATABus::open(int, int, void*)
 .text          0x00000000c001cb9e      0x93f hw/diskphys/ata.32
                0x00000000c001cb9e                ATA::close(int, int, void*)
                0x00000000c001cbc2                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cbc4                ATA::ATA()
                0x00000000c001cbc4                ATA::ATA()
                0x00000000c001cbf2                ATA::flush(bool)
                0x00000000c001cc40                ATA::readyForCommand()
                0x00000000c001cc8c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d022                ATA::detectCHS()
                0x00000000c001d04c                ATA::open(int, int, void*)
                0x00000000c001d118                combineCharAndColour(char, unsigned char)
                0x00000000c001d129                combineColours(unsigned char, unsigned char)
                0x00000000c001d136                ATA::read(unsigned long long, int, void*)
                0x00000000c001d30c                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d4dd        0x1 
 .text          0x00000000c001d4de      0x618 hw/diskphys/atapi.32
                0x00000000c001d4de                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d4e4                ATAPI::close(int, int, void*)
                0x00000000c001d508                ATAPI::ATAPI()
                0x00000000c001d508                ATAPI::ATAPI()
                0x00000000c001d536                ATAPI::readyForCommand()
                0x00000000c001d588                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d850                ATAPI::diskRemoved()
                0x00000000c001d88a                ATAPI::eject()
                0x00000000c001d8d2                ATAPI::diskInserted()
                0x00000000c001d8de                ATAPI::detectMedia()
                0x00000000c001d99c                ATAPI::open(int, int, void*)
                0x00000000c001da7c                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001daf6      0x807 hw/diskphys/sata.32
                0x00000000c001daf6                SATA::close(int, int, void*)
                0x00000000c001db1a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001db1c                SATA::open(int, int, void*)
                0x00000000c001dbc6                SATA::SATA()
                0x00000000c001dbc6                SATA::SATA()
                0x00000000c001dbf4                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001de48                SATA::read(unsigned long long, int, void*)
                0x00000000c001e098                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e2fd        0x1 
 .text          0x00000000c001e2fe      0x5d0 hw/diskphys/satapi.32
                0x00000000c001e2fe                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e304                SATAPI::close(int, int, void*)
                0x00000000c001e328                SATAPI::SATAPI()
                0x00000000c001e328                SATAPI::SATAPI()
                0x00000000c001e356                SATAPI::diskRemoved()
                0x00000000c001e358                SATAPI::diskInserted()
                0x00000000c001e374                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e652                SATAPI::eject()
                0x00000000c001e68e                SATAPI::detectMedia()
                0x00000000c001e6e4                SATAPI::open(int, int, void*)
                0x00000000c001e7e4                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e8ce      0x45b hw/intctrl/apic.32
                0x00000000c001e8ce                IOAPIC::close(int, int, void*)
                0x00000000c001e8d4                apicGetBase()
                0x00000000c001e91a                IOAPIC::IOAPIC()
                0x00000000c001e91a                IOAPIC::IOAPIC()
                0x00000000c001e942                apicOpen()
                0x00000000c001eabe                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001eaf0                IOAPIC::read(int)
                0x00000000c001eb18                IOAPIC::open(int, int, void*)
                0x00000000c001ebfe                IOAPIC::write(int, int)
                0x00000000c001ec2a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ed29        0x3 
 .text          0x00000000c001ed2c       0xf0 hw/timer/apictimer.32
                0x00000000c001ed2c                APICTimer::close(int, int, void*)
                0x00000000c001ed34                apicTimerHandler(regs*, void*)
                0x00000000c001ed5c                APICTimer::open(int, int, void*)
                0x00000000c001edcc                APICTimer::write(int)
                0x00000000c001edf4                APICTimer::APICTimer()
                0x00000000c001edf4                APICTimer::APICTimer()
 .text          0x00000000c001ee1c      0x1ad hw/timer/pit.32
                0x00000000c001ee1c                PIT::write(int)
                0x00000000c001eea0                pitHandler(regs*, void*)
                0x00000000c001eec8                PIT::open(int, int, void*)
                0x00000000c001ef18                PIT::close(int, int, void*)
                0x00000000c001ef48                PIT::PIT()
                0x00000000c001ef48                PIT::PIT()
 *fill*         0x00000000c001efc9        0x7 
 .text          0x00000000c001efd0       0x83 arch/i386/avx.32
                0x00000000c001efd0                avxDetect
                0x00000000c001effa                avxSave
                0x00000000c001f00b                avxLoad
                0x00000000c001f01c                avxInit
                0x00000000c001f03e                avxClose
                0x00000000c001f03f                wouldSheSayYes
 *fill*         0x00000000c001f053        0xd 
 .text          0x00000000c001f060      0x2ec arch/i386/interrupt.32
                0x00000000c001f060                isr0
                0x00000000c001f070                isr1
                0x00000000c001f07a                isr2
                0x00000000c001f084                isr3
                0x00000000c001f08e                isr4
                0x00000000c001f098                isr5
                0x00000000c001f0a2                isr6
                0x00000000c001f0ac                isr7
                0x00000000c001f0b6                isr8
                0x00000000c001f0be                isr9
                0x00000000c001f0c8                isr10
                0x00000000c001f0d0                isr11
                0x00000000c001f0d8                isr12
                0x00000000c001f0e0                isr13
                0x00000000c001f0fa                isr14
                0x00000000c001f102                isr15
                0x00000000c001f10c                isr16
                0x00000000c001f116                isr17
                0x00000000c001f120                isr18
                0x00000000c001f12a                irq3
                0x00000000c001f134                irq4
                0x00000000c001f13e                irq5
                0x00000000c001f148                irq6
                0x00000000c001f152                irq7
                0x00000000c001f15c                irq8
                0x00000000c001f166                irq9
                0x00000000c001f170                irq10
                0x00000000c001f17a                irq11
                0x00000000c001f184                irq12
                0x00000000c001f18e                irq13
                0x00000000c001f198                irq14
                0x00000000c001f1a2                irq15
                0x00000000c001f1ac                irq1
                0x00000000c001f1b3                irq2
                0x00000000c001f1ba                isr96
                0x00000000c001f1c1                irq0
                0x00000000c001f1c6                int_common_stub
                0x00000000c001f1f8                syscall_common_stub
                0x00000000c001f2fc                irq16
                0x00000000c001f306                irq17
                0x00000000c001f310                irq18
                0x00000000c001f31a                irq19
                0x00000000c001f324                irq20
                0x00000000c001f32e                irq21
                0x00000000c001f338                irq22
                0x00000000c001f342                irq23
 *fill*         0x00000000c001f34c        0x4 
 .text          0x00000000c001f350       0x10 arch/i386/rdrand.32
                0x00000000c001f350                i386GetRDRAND
 .text          0x00000000c001f360       0x39 arch/i386/sse.32
                0x00000000c001f360                absolutelyNoChanceInHell
                0x00000000c001f360                sseDetect
                0x00000000c001f378                sseSave
                0x00000000c001f380                sseLoad
                0x00000000c001f388                sseInit
                0x00000000c001f398                sseClose
 *fill*         0x00000000c001f399        0x7 
 .text          0x00000000c001f3a0       0x49 arch/i386/x87.32
                0x00000000c001f3a6                x87Detect
                0x00000000c001f3c1                x87Save
                0x00000000c001f3c8                x87Load
                0x00000000c001f3cf                x87Init
                0x00000000c001f3e8                x87Close
 *fill*         0x00000000c001f3e9        0x3 
 .text          0x00000000c001f3ec       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f411        0x0 crtn.32
 *fill*         0x00000000c001f411        0x3 
 .text          0x00000000c001f414      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f414                __divdi3
 *fill*         0x00000000c001f55f        0x1 
 .text          0x00000000c001f560      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f560                __moddi3
 *fill*         0x00000000c001f6de        0x2 
 .text          0x00000000c001f6e0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f6e0                __udivdi3
 *fill*         0x00000000c001f7df        0x1 
 .text          0x00000000c001f7e0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f7e0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f900        0x0
 .iplt          0x00000000c001f900        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f8fa        0xf
 .init          0x00000000c001f8fa        0x3 crti.32
                0x00000000c001f8fa                _init
 .init          0x00000000c001f8fd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f902        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f907        0x2 crtn.32

.fini           0x00000000c001f909        0xa
 .fini          0x00000000c001f909        0x3 crti.32
                0x00000000c001f909                _fini
 .fini          0x00000000c001f90c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f911        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f914       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f914       0x23 core/computer.32
                0x00000000c001f914                Computer::~Computer()
                0x00000000c001f914                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f938       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f938       0x2a core/computer.32
                0x00000000c001f938                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f962       0x21
 .text._Z10idleCommonv
                0x00000000c001f962       0x21 core/idle.32
                0x00000000c001f962                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f984        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f984        0x2 core/unixfile.32
                0x00000000c001f984                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f984                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f986       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f986       0x42 core/unixfile.32
                0x00000000c001f986                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f986                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f9c8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f9c8       0xd3 core/unixfile.32
                0x00000000c001f9c8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fa9c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fa9c        0x7 core/unixfile.32
                0x00000000c001fa9c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001faa4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001faa4       0xa1 core/unixfile.32
                0x00000000c001faa4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb46        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb46        0x8 core/unixfile.32
                0x00000000c001fb46                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb4e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb4e       0x1a hal/device.32
                0x00000000c001fb4e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fb4e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb68       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb68       0x2a hal/device.32
                0x00000000c001fb68                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fb92       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fb92       0xdc hal/device.32
                0x00000000c001fb92                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc6e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc6e       0x42 hal/device.32
                0x00000000c001fc6e                LinkedList<Device>::LinkedList()
                0x00000000c001fc6e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fcb0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fcb0       0x1c hal/timer.32
                0x00000000c001fcb0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fccc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fccc        0x7 hal/timer.32
                0x00000000c001fccc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fcd4       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fcd4       0xbc hal/timer.32
                0x00000000c001fcd4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fd90       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fd90       0xda hal/timer.32
                0x00000000c001fd90                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fe6c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fe6c       0x23 hw/acpi.32
                0x00000000c001fe6c                ACPI::~ACPI()
                0x00000000c001fe6c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fe90       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fe90       0x2a hw/acpi.32
                0x00000000c001fe90                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001febc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001febc        0x2 hw/acpi.32
                0x00000000c001febc                LinkedList<Device>::~LinkedList()
                0x00000000c001febc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fec0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fec0       0x1c hw/acpi.32
                0x00000000c001fec0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fedc        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fedc        0x7 hw/acpi.32
                0x00000000c001fedc                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fee4       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fee4       0xb8 hw/acpi.32
                0x00000000c001fee4                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ff9c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ff9c       0x23 hw/cpu.32
                0x00000000c001ff9c                CPU::~CPU()
                0x00000000c001ff9c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ffc0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ffc0       0x2a hw/cpu.32
                0x00000000c001ffc0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ffec        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ffec        0x8 sys/kill.32
                0x00000000c001ffec                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fff4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fff4        0x2 thr/prcssthr.32
                0x00000000c001fff4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fff4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fff8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fff8       0x49 thr/prcssthr.32
                0x00000000c001fff8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fff8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020044       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020044       0x42 thr/prcssthr.32
                0x00000000c0020044                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020044                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c0020086       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020086       0x23 hw/bus/pci.32
                0x00000000c0020086                PCI::~PCI()
                0x00000000c0020086                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00200aa       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00200aa       0x2a hw/bus/pci.32
                0x00000000c00200aa                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00200d4       0x23
 .text._ZN3IDED2Ev
                0x00000000c00200d4       0x23 hw/diskctrl/ide.32
                0x00000000c00200d4                IDE::~IDE()
                0x00000000c00200d4                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00200f8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00200f8       0x2a hw/diskctrl/ide.32
                0x00000000c00200f8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020122       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020122       0x23 hw/diskctrl/satabus.32
                0x00000000c0020122                SATABus::~SATABus()
                0x00000000c0020122                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020146       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020146       0x2a hw/diskctrl/satabus.32
                0x00000000c0020146                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020170       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020170       0x23 hw/diskphys/ata.32
                0x00000000c0020170                ATA::~ATA()
                0x00000000c0020170                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020194       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020194       0x2a hw/diskphys/ata.32
                0x00000000c0020194                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00201be       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00201be       0x23 hw/diskphys/atapi.32
                0x00000000c00201be                ATAPI::~ATAPI()
                0x00000000c00201be                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00201e2       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00201e2       0x2a hw/diskphys/atapi.32
                0x00000000c00201e2                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002020c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002020c       0x23 hw/diskphys/sata.32
                0x00000000c002020c                SATA::~SATA()
                0x00000000c002020c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020230       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020230       0x2a hw/diskphys/sata.32
                0x00000000c0020230                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002025a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002025a       0x23 hw/diskphys/satapi.32
                0x00000000c002025a                SATAPI::~SATAPI()
                0x00000000c002025a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002027e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002027e       0x2a hw/diskphys/satapi.32
                0x00000000c002027e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00202a8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00202a8       0x23 hw/intctrl/apic.32
                0x00000000c00202a8                IOAPIC::~IOAPIC()
                0x00000000c00202a8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00202cc       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00202cc       0x2a hw/intctrl/apic.32
                0x00000000c00202cc                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00202f8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00202f8       0x23 hw/timer/apictimer.32
                0x00000000c00202f8                APICTimer::~APICTimer()
                0x00000000c00202f8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002031c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002031c       0x2a hw/timer/apictimer.32
                0x00000000c002031c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020348       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020348       0x23 hw/timer/pit.32
                0x00000000c0020348                PIT::~PIT()
                0x00000000c0020348                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002036c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002036c       0x2a hw/timer/pit.32
                0x00000000c002036c                PIT::~PIT()

.rodata         0x00000000c0020396     0x321a
                0x00000000c0020396                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020396        0x2 
 .ctors         0x00000000c0020398        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c002039c        0x4 core/unixfile.32
 .ctors         0x00000000c00203a0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00203a4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00203a8                end_ctors = .
                0x00000000c00203a8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00203a8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00203ac        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00203ac                __DTOR_END__
                0x00000000c00203b0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00203b0       0x10 
 .rodata        0x00000000c00203c0      0x101 acpica/utclib.32
                0x00000000c00203c0                AcpiGbl_Ctypes
 *fill*         0x00000000c00204c1        0x3 
 .rodata        0x00000000c00204c4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c00204dc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020526       0x1a 
 .rodata        0x00000000c0020540       0xed fs/fat/ff.32
 *fill*         0x00000000c002062d       0x13 
 .rodata        0x00000000c0020640      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020a40       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020aaf      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020bc4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020c2c       0x2c core/computer.32
                0x00000000c0020c2c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020c58       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020c88        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020c94       0x17 core/main.32
 *fill*         0x00000000c0020cab        0x1 
 .rodata.str1.4
                0x00000000c0020cac       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020d51       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020da9       0x39 core/pipe.32
 *fill*         0x00000000c0020de2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020de4       0x1c core/pipe.32
                0x00000000c0020de4                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020e00       0x2b core/terminal.32
 *fill*         0x00000000c0020e2b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020e2c       0x1c core/terminal.32
                0x00000000c0020e2c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020e48       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020e6a       0x15 core/unixfile.32
 *fill*         0x00000000c0020e7f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020e80       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020ecb        0x8 core/unixfile.32
 *fill*         0x00000000c0020ed3        0x1 
 .rodata.str1.4
                0x00000000c0020ed4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020ef4       0x1c core/unixfile.32
                0x00000000c0020ef4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020f10       0x1c core/unixfile.32
                0x00000000c0020f10                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020f2c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00211c0      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00212e6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0021319       0x11 dbg/kconsole.32
 *fill*         0x00000000c0021319        0x3 
 .rodata        0x00000000c002131c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002146c      0x169 dbg/usban.32
 *fill*         0x00000000c00215d5        0x3 
 .rodata.str1.4
                0x00000000c00215d8      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002170f      0x19e fs/symlink.32
 .rodata.str1.1
                0x00000000c00218ad       0x3d fs/vfs.32
                                         0x3f (size before relaxing)
 *fill*         0x00000000c00218ea        0x2 
 .rodata._ZTV10Filesystem
                0x00000000c00218ec       0x6c fs/vfs.32
                0x00000000c00218ec                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021958       0x1c fs/vfs.32
                0x00000000c0021958                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021974       0x1c fs/vfs.32
                0x00000000c0021974                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021990       0x2c hal/bus.32
                0x00000000c0021990                vtable for Bus
 .rodata.str1.1
                0x00000000c00219bc       0x1e hal/clock.32
 *fill*         0x00000000c00219da        0x2 
 .rodata._ZTV5Clock
                0x00000000c00219dc       0x3c hal/clock.32
                0x00000000c00219dc                vtable for Clock
 *fill*         0x00000000c0021a18        0x8 
 .rodata        0x00000000c0021a20       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021a50       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021aa8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021aa8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021aa8       0x2c hal/device.32
                0x00000000c0021aa8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021ad4       0x2c hal/device.32
                0x00000000c0021ad4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021b00       0x2c hal/diskctrl.32
                0x00000000c0021b00                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021b2c       0x38 hal/diskphys.32
                0x00000000c0021b2c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021b64       0x3e hal/intctrl.32
 *fill*         0x00000000c0021ba2        0x2 
 .rodata.str1.4
                0x00000000c0021ba4       0x5d hal/intctrl.32
 .rodata        0x00000000c0021c01       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021c54       0x34 hal/keybrd.32
                0x00000000c0021c54                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021c88       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021ccc       0x2c hal/logidisk.32
                0x00000000c0021ccc                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021cf8       0x2c hal/mouse.32
                0x00000000c0021cf8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021d24       0x34 hal/nic.32
                0x00000000c0021d24                vtable for NIC
 .rodata.str1.1
                0x00000000c0021d58        0xb hal/partition.32
 *fill*         0x00000000c0021d63        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021d64       0x44 hal/serial.32
                0x00000000c0021d64                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021da8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021da8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021da8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021da8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021da8       0x30 hal/timer.32
                0x00000000c0021da8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021dd8       0x10 hal/vcache.32
                0x00000000c0021dd8                vtable for VCache
 .rodata.str1.1
                0x00000000c0021de8       0x93 hal/video.32
 *fill*         0x00000000c0021e7b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021e7c       0x4c hal/video.32
                0x00000000c0021e7c                vtable for Video
 .rodata.str1.4
                0x00000000c0021ec8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021f63      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00220b9       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00220b9        0x8 hw/acpi.32
 *fill*         0x00000000c00220b9        0x3 
 .rodata._ZTV4ACPI
                0x00000000c00220bc       0x2c hw/acpi.32
                0x00000000c00220bc                vtable for ACPI
 .rodata.str1.1
                0x00000000c00220e8      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022263        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022264       0x2c hw/cpu.32
                0x00000000c0022264                vtable for CPU
 .rodata.str1.1
                0x00000000c0022290       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00222d0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c002230c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c002239d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022466       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00224ae       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00224d9       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002254f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022594        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002259e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00225bf       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022655       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00226a9       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00226d5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00228a1       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00228f8      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022a08       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022a08       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022a08       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022a08        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022a08       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022aca        0x2 
 .rodata        0x00000000c0022acc       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022afc      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022c9b        0x1 
 .rodata.str1.4
                0x00000000c0022c9c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022d0f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022d24       0x3c arch/i386/rtc.32
                0x00000000c0022d24                vtable for RTC
 .rodata.str1.1
                0x00000000c0022d60       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022da1        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022da4       0x6c fs/fat/vfslink.32
                0x00000000c0022da4                vtable for FAT
 .rodata.str1.1
                0x00000000c0022e10       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022e10      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022f48       0x6c fs/iso9660/vfslink.32
                0x00000000c0022f48                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022fb4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022ff8       0x34 hal/sound/sndcard.32
                0x00000000c0022ff8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c002302c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002306b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00230a3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023144       0x2c hw/bus/pci.32
                0x00000000c0023144                vtable for PCI
 .rodata.str1.1
                0x00000000c0023170       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c00231f7        0x1 
 .rodata._ZTV3IDE
                0x00000000c00231f8       0x2c hw/diskctrl/ide.32
                0x00000000c00231f8                vtable for IDE
 .rodata.str1.4
                0x00000000c0023224       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023248       0x2c hw/diskctrl/satabus.32
                0x00000000c0023248                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023274       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023286        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023288       0x38 hw/diskphys/ata.32
                0x00000000c0023288                vtable for ATA
 .rodata.str1.1
                0x00000000c00232c0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00232cd        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00232d0       0x38 hw/diskphys/atapi.32
                0x00000000c00232d0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0023308       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023384       0x38 hw/diskphys/sata.32
                0x00000000c0023384                vtable for SATA
 .rodata.str1.1
                0x00000000c00233bc       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00234a6        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00234a8       0x38 hw/diskphys/satapi.32
                0x00000000c00234a8                vtable for SATAPI
 .rodata        0x00000000c00234e0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00234e8       0x2c hw/intctrl/apic.32
                0x00000000c00234e8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023514       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002352f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023530       0x30 hw/timer/apictimer.32
                0x00000000c0023530                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023560       0x1d hw/timer/pit.32
 *fill*         0x00000000c002357d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023580       0x30 hw/timer/pit.32
                0x00000000c0023580                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00235b0      0xbb1
 *(.data)
 .data          0x00000000c00235b0        0x0 crti.32
 .data          0x00000000c00235b0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00235b0                __dso_handle
 .data          0x00000000c00235b4        0x0 acpica/utclib.32
 .data          0x00000000c00235b4        0x0 core/malloc.32
 .data          0x00000000c00235b4        0x0 libk/ctype.32
 .data          0x00000000c00235b4        0x0 libk/string.32
 .data          0x00000000c00235b4        0x0 fs/fat/diskio.32
 .data          0x00000000c00235b4        0x0 fs/fat/ff.32
 .data          0x00000000c00235b4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00235b4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00235b4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00235b4        0x0 core/computer.32
 .data          0x00000000c00235b4        0x0 core/gdt.32
 .data          0x00000000c00235b4        0x0 core/idle.32
 .data          0x00000000c00235b4        0x0 core/idt.32
 .data          0x00000000c00235b4        0x4 core/kheap.32
 .data          0x00000000c00235b8        0x0 core/main.32
 .data          0x00000000c00235b8        0x4 core/physmgr.32
                0x00000000c00235b8                Phys::bitmap
 .data          0x00000000c00235bc        0x0 core/pipe.32
 *fill*         0x00000000c00235bc        0x4 
 .data          0x00000000c00235c0       0x60 core/terminal.32
                0x00000000c00235c0                VgaText::hiddenOut
                0x00000000c00235e0                ansiToVGAMappings
 .data          0x00000000c0023620        0x0 core/tss.32
 .data          0x00000000c0023620        0x4 core/unixfile.32
                0x00000000c0023620                UnixFile::nextFd
 .data          0x00000000c0023624       0x15 core/virtmgr.32
                0x00000000c0023624                Virt::pageAllocPtr
                0x00000000c0023628                Virt::bitmap
                0x00000000c002362c                Virt::swapfileSectorsPerPage
                0x00000000c0023630                Virt::swapfileLength
                0x00000000c0023634                Virt::swapfileSector
                0x00000000c0023638                Virt::swapfileDrive
 *fill*         0x00000000c0023639        0x3 
 .data          0x00000000c002363c        0x4 coreobjs/c++.32
                0x00000000c002363c                __stack_chk_guard
 .data          0x00000000c0023640        0x0 dbg/kconsole.32
 .data          0x00000000c0023640       0x28 dbg/usban.32
                0x00000000c0023640                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023668        0x0 fs/symlink.32
 .data          0x00000000c0023668        0x0 fs/vfs.32
 .data          0x00000000c0023668        0x0 hal/bus.32
 .data          0x00000000c0023668        0x0 hal/buzzer.32
 .data          0x00000000c0023668        0x0 hal/clock.32
 .data          0x00000000c0023668        0x0 hal/device.32
 .data          0x00000000c0023668        0x0 hal/diskctrl.32
 .data          0x00000000c0023668        0x0 hal/diskphys.32
 .data          0x00000000c0023668        0x0 hal/fpu.32
 .data          0x00000000c0023668        0x0 hal/intctrl.32
 .data          0x00000000c0023668        0x0 hal/keybrd.32
 .data          0x00000000c0023668        0x0 hal/logidisk.32
 .data          0x00000000c0023668        0x0 hal/mouse.32
 .data          0x00000000c0023668        0x0 hal/nic.32
 .data          0x00000000c0023668        0x0 hal/partition.32
 .data          0x00000000c0023668        0x0 hal/serial.32
 .data          0x00000000c0023668        0x0 hal/timer.32
 .data          0x00000000c0023668        0x0 hal/vcache.32
 .data          0x00000000c0023668        0x0 hal/video.32
 .data          0x00000000c0023668       0x10 hw/acpi.32
                0x00000000c0023668                legacyIRQRemaps
 .data          0x00000000c0023678        0x4 hw/cpu.32
                0x00000000c0023678                lastCode
 .data          0x00000000c002367c        0x0 krnl/atexit.32
 *fill*         0x00000000c002367c        0x4 
 .data          0x00000000c0023680      0x142 krnl/bootmsg.32
                0x00000000c0023680                KiSplashScreen
 .data          0x00000000c00237c2        0x0 krnl/compat.32
 *fill*         0x00000000c00237c2       0x1e 
 .data          0x00000000c00237e0      0x400 krnl/crc32.32
                0x00000000c00237e0                KiPolyLookupCRC32
 .data          0x00000000c0023be0       0x4d krnl/env.32
                0x00000000c0023be0                defaultSysEnv
 .data          0x00000000c0023c2d        0x0 krnl/inlines.32
 .data          0x00000000c0023c2d        0x0 krnl/panic.32
 .data          0x00000000c0023c2d        0x0 krnl/powctrl.32
 .data          0x00000000c0023c2d        0x0 krnl/random.32
 .data          0x00000000c0023c2d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023c2d       0x13 
 .data          0x00000000c0023c40       0x4c krnl/signal.32
                0x00000000c0023c40                KiDefaultSignalHandlers
 *fill*         0x00000000c0023c8c       0x14 
 .data          0x00000000c0023ca0       0xfc krnl/syscalls.32
                0x00000000c0023ca0                systemCallHandlers
 .data          0x00000000c0023d9c        0x0 net/ethernet.32
 *fill*         0x00000000c0023d9c        0x4 
 .data          0x00000000c0023da0      0x100 reg/cm.32
                0x00000000c0023da0                CmComponents
 .data          0x00000000c0023ea0        0x0 reg/registry.32
 .data          0x00000000c0023ea0        0x0 sys/eject.32
 .data          0x00000000c0023ea0        0x0 sys/exit.32
 .data          0x00000000c0023ea0        0x0 sys/getcwd.32
 .data          0x00000000c0023ea0        0x0 sys/getpid.32
 .data          0x00000000c0023ea0        0x0 sys/getramdata.32
 .data          0x00000000c0023ea0        0x0 sys/getvgaptr.32
 .data          0x00000000c0023ea0        0x0 sys/kill.32
 .data          0x00000000c0023ea0        0x0 sys/loaddll.32
 .data          0x00000000c0023ea0        0x0 sys/read.32
 .data          0x00000000c0023ea0        0x0 sys/registersignal.32
 .data          0x00000000c0023ea0        0x0 sys/registry.32
 .data          0x00000000c0023ea0        0x0 sys/sbrk.32
 .data          0x00000000c0023ea0        0x0 sys/setcwd.32
 .data          0x00000000c0023ea0        0x0 sys/settime.32
 .data          0x00000000c0023ea0        0x0 sys/symlink.32
 .data          0x00000000c0023ea0        0x0 sys/timezone.32
 .data          0x00000000c0023ea0        0x0 sys/truncate.32
 .data          0x00000000c0023ea0        0x0 sys/write.32
 .data          0x00000000c0023ea0        0x0 sys/wsbe.32
 .data          0x00000000c0023ea0        0x0 sys/yield.32
 .data          0x00000000c0023ea0        0x0 thr/elf.32
 .data          0x00000000c0023ea0        0x4 thr/prcssthr.32
                0x00000000c0023ea0                Thr::nextPID
 .data          0x00000000c0023ea4        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023ea4       0x1c 
 .data          0x00000000c0023ec0      0x2a0 arch/i386/hal.32
                0x00000000c0023ec0                exceptionNames
 .data          0x00000000c0024160        0x0 arch/i386/pic.32
 .data          0x00000000c0024160        0x0 arch/i386/rtc.32
 .data          0x00000000c0024160        0x0 arch/i386/vga.32
 .data          0x00000000c0024160        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024160        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024160        0x1 fs/iso9660/vfslink.32
                0x00000000c0024160                recentDriveletter
 .data          0x00000000c0024161        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024161        0x0 hal/sound/sndport.32
 .data          0x00000000c0024161        0x0 hw/bus/isa.32
 .data          0x00000000c0024161        0x0 hw/bus/pci.32
 .data          0x00000000c0024161        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024161        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024161        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024161        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024161        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024161        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024161        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024161        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024161        0x0 hw/timer/pit.32
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024161        0x0 crtn.32
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024164        0x0
 .got           0x00000000c0024164        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024164        0x0
 .got.plt       0x00000000c0024164        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024164        0x0
 .igot.plt      0x00000000c0024164        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024164        0x0
 .tm_clone_table
                0x00000000c0024164        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024164        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024161      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024161        0x3 
 .eh_frame      0x00000000c0024164        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024164        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024164       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00241bc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00241fc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024268       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
