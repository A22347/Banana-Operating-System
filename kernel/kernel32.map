Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2062a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x254 dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f06                Dbg::logs(char*)
                0x00000000c0006f25                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f43                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f64                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000709a        0x2 
 .text          0x00000000c000709c      0x2d4 dbg/usban.32
                0x00000000c000709c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007108                __ubsan_handle_type_mismatch_v1
                0x00000000c00071e4                __ubsan_handle_pointer_overflow
                0x00000000c0007210                __ubsan_handle_out_of_bounds
                0x00000000c000723c                __ubsan_handle_add_overflow
                0x00000000c0007268                __ubsan_handle_load_invalid_value
                0x00000000c0007294                __ubsan_handle_divrem_overflow
                0x00000000c00072c0                __ubsan_handle_mul_overflow
                0x00000000c00072ec                __ubsan_handle_sub_overflow
                0x00000000c0007318                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007344                __ubsan_handle_negate_overflow
 .text          0x00000000c0007370      0x814 fs/symlink.32
                0x00000000c00074bf                KiDeinitialiseSymlinks(void*)
                0x00000000c0007552                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075d5                KeInitialiseSymlinks()
                0x00000000c0007737                KiIsSymlinkRegistered(char const*)
                0x00000000c00078a1                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a48                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b84      0xd68 fs/vfs.32
                0x00000000c0007b84                File::read(unsigned long long, void*, int*)
                0x00000000c0007bdc                File::write(unsigned long long, void*, int*)
                0x00000000c0007c34                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cba                File::isAtty()
                0x00000000c0007cbe                Directory::isAtty()
                0x00000000c0007cc2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cc8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cce                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cf8                File::~File()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d46                Directory::~Directory()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007da2                Filesystem::~Filesystem()
                0x00000000c0007dc6                Fs::getcwd(Process*, char*, int)
                0x00000000c0007df0                Fs::initVFS()
                0x00000000c0007e1a                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008112                File::File(char const*, Process*)
                0x00000000c0008112                File::File(char const*, Process*)
                0x00000000c0008130                File::open(FileOpenMode)
                0x00000000c000818e                File::close()
                0x00000000c00081ee                File::seek(unsigned long long)
                0x00000000c0008244                File::truncate(unsigned long long)
                0x00000000c000829a                File::tell(unsigned long long*)
                0x00000000c00082ea                File::rewind()
                0x00000000c00082fe                File::unlink()
                0x00000000c000834a                File::rename(char const*)
                0x00000000c0008398                File::chfatattr(unsigned char, unsigned char)
                0x00000000c00083f4                File::exists()
                0x00000000c0008432                File::stat(unsigned long long*, bool*)
                0x00000000c0008493                Fs::setcwd(Process*, char*)
                0x00000000c00085f2                Directory::Directory(char const*, Process*)
                0x00000000c00085f2                Directory::Directory(char const*, Process*)
                0x00000000c00086ba                Directory::open()
                0x00000000c0008716                Directory::close()
                0x00000000c0008776                Directory::unlink()
                0x00000000c00087c2                Directory::rename(char const*)
                0x00000000c0008810                Directory::exists()
                0x00000000c000884e                Directory::read(dirent*)
                0x00000000c000889a                Directory::create()
                0x00000000c00088e6                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c00088ec       0x86 hal/bus.32
                0x00000000c00088ec                Bus::Bus(char const*)
                0x00000000c00088ec                Bus::Bus(char const*)
                0x00000000c0008924                Bus::~Bus()
                0x00000000c0008924                Bus::~Bus()
                0x00000000c0008948                Bus::~Bus()
 .text          0x00000000c0008972       0x96 hal/buzzer.32
                0x00000000c0008972                beepThread(void*)
                0x00000000c00089af                Krnl::beep(int, int, bool)
 .text          0x00000000c0008a08      0x513 hal/clock.32
                0x00000000c0008a08                User::loadClockSettings()
                0x00000000c0008b0e                Clock::Clock(char const*)
                0x00000000c0008b0e                Clock::Clock(char const*)
                0x00000000c0008b44                Clock::~Clock()
                0x00000000c0008b44                Clock::~Clock()
                0x00000000c0008b68                Clock::~Clock()
                0x00000000c0008b92                Clock::timeInSecondsLocal()
                0x00000000c0008bda                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0008c33                datetimeToSeconds(datetime_t)
                0x00000000c0008d52                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0008db2                secondsToDatetime(unsigned long long)
                0x00000000c0008ef6                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0008f1b        0x1 
 .text          0x00000000c0008f1c      0x47a hal/device.32
                0x00000000c0008f1c                Device::hibernate()
                0x00000000c0008f1e                Device::wake()
                0x00000000c0008f20                Device::detect()
                0x00000000c0008f22                Device::disableLegacy()
                0x00000000c0008f24                Device::powerSaving(PowerSavingLevel)
                0x00000000c0008f26                DriverlessDevice::close(int, int, void*)
                0x00000000c0008f2a                DriverlessDevice::detect()
                0x00000000c0008f2c                DriverlessDevice::open(int, int, void*)
                0x00000000c0008f40                Device::~Device()
                0x00000000c0008f40                Device::~Device()
                0x00000000c0008f4e                Device::~Device()
                0x00000000c0008f76                Device::findAndLoadDriver()
                0x00000000c0008f84                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0008faa                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0008fea                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009014                Device::getParent()
                0x00000000c0009020                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000903e                Device::addChild(Device*)
                0x00000000c0009082                Device::removeAllChildren()
                0x00000000c00090c8                Device::hibernateAll()
                0x00000000c00090f8                Device::wakeAll()
                0x00000000c0009128                Device::detectAll()
                0x00000000c0009158                Device::disableLegacyAll()
                0x00000000c000915a                Device::loadDriversForAll()
                0x00000000c000915c                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009192                Device::setName(char const*)
                0x00000000c00091a0                Device::Device(char const*)
                0x00000000c00091a0                Device::Device(char const*)
                0x00000000c000929c                Device::getName()
                0x00000000c00092a6                Device::closeAll()
                0x00000000c00092f2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00092f2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009328                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000936c                getDevicesOfType(DeviceType)
 *fill*         0x00000000c0009396        0x2 
 .text          0x00000000c0009398       0x86 hal/diskctrl.32
                0x00000000c0009398                HardDiskController::HardDiskController(char const*)
                0x00000000c0009398                HardDiskController::HardDiskController(char const*)
                0x00000000c00093d0                HardDiskController::~HardDiskController()
                0x00000000c00093d0                HardDiskController::~HardDiskController()
                0x00000000c00093f4                HardDiskController::~HardDiskController()
 .text          0x00000000c000941e       0xe2 hal/diskphys.32
                0x00000000c000941e                PhysicalDisk::eject()
                0x00000000c0009422                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009422                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000948a                PhysicalDisk::startCache()
                0x00000000c00094b2                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094b2                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094d6                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009500        0x0 hal/fpu.32
 .text          0x00000000c0009500      0x359 hal/intctrl.32
                0x00000000c0009500                int_handler
                0x00000000c000958a                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c00095d4                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009708                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000973c                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00097ba                setupINTS()
                0x00000000c0009817                convertLegacyIRQNumber(int)
 *fill*         0x00000000c0009859        0x1 
 .text          0x00000000c000985a      0x8bc hal/keybrd.32
                0x00000000c000985a                startGUI(void*)
                0x00000000c00098c4                startGUIVESA(void*)
                0x00000000c000992e                sendKeyToTerminal(unsigned char)
                0x00000000c0009a09                sendKeyboardToken(KeyboardToken)
                0x00000000c0009ec5                clearInternalKeybuffer(VgaText*)
                0x00000000c0009efa                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a08c                Keyboard::Keyboard(char const*)
                0x00000000c000a08c                Keyboard::Keyboard(char const*)
                0x00000000c000a0c8                Keyboard::~Keyboard()
                0x00000000c000a0c8                Keyboard::~Keyboard()
                0x00000000c000a0ec                Keyboard::~Keyboard()
 .text          0x00000000c000a116      0x3f8 hal/logidisk.32
                0x00000000c000a116                LogicalDisk::close(int, int, void*)
                0x00000000c000a11a                LogicalDisk::~LogicalDisk()
                0x00000000c000a11a                LogicalDisk::~LogicalDisk()
                0x00000000c000a13e                LogicalDisk::~LogicalDisk()
                0x00000000c000a168                LogicalDisk::open(int, int, void*)
                0x00000000c000a17c                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a1b4                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a1fa                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a1fa                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a2ba                LogicalDisk::assignDriveLetter()
                0x00000000c000a374                LogicalDisk::mount()
                0x00000000c000a3bc                LogicalDisk::unmount()
                0x00000000c000a3cc                LogicalDisk::eject()
                0x00000000c000a3e0                LogicalDisk::unassignDriveLetter()
                0x00000000c000a436                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000a4a2                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000a50e        0x2 
 .text          0x00000000c000a510       0x86 hal/mouse.32
                0x00000000c000a510                Mouse::Mouse(char const*)
                0x00000000c000a510                Mouse::Mouse(char const*)
                0x00000000c000a548                Mouse::~Mouse()
                0x00000000c000a548                Mouse::~Mouse()
                0x00000000c000a56c                Mouse::~Mouse()
 .text          0x00000000c000a596       0x90 hal/nic.32
                0x00000000c000a596                NIC::getMAC()
                0x00000000c000a59c                NIC::write(int, unsigned char*, int*)
                0x00000000c000a5a2                NIC::NIC(char const*)
                0x00000000c000a5a2                NIC::NIC(char const*)
                0x00000000c000a5d8                NIC::~NIC()
                0x00000000c000a5d8                NIC::~NIC()
                0x00000000c000a5fc                NIC::~NIC()
 .text          0x00000000c000a626      0x33b hal/partition.32
                0x00000000c000a626                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a6ce                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000a961        0x3 
 .text          0x00000000c000a964       0x86 hal/serial.32
                0x00000000c000a964                Serial::Serial(char const*)
                0x00000000c000a964                Serial::Serial(char const*)
                0x00000000c000a99c                Serial::~Serial()
                0x00000000c000a99c                Serial::~Serial()
                0x00000000c000a9c0                Serial::~Serial()
 *fill*         0x00000000c000a9ea        0x2 
 .text          0x00000000c000a9ec      0x230 hal/timer.32
                0x00000000c000a9ec                Timer::Timer(char const*)
                0x00000000c000a9ec                Timer::Timer(char const*)
                0x00000000c000aa24                Timer::~Timer()
                0x00000000c000aa24                Timer::~Timer()
                0x00000000c000aa48                Timer::~Timer()
                0x00000000c000aa72                Timer::read()
                0x00000000c000aa7d                setupTimer(int)
                0x00000000c000aab8                timerHandler(unsigned int)
 .text          0x00000000c000ac1c      0x444 hal/vcache.32
                0x00000000c000ac1c                VCache::VCache(PhysicalDisk*)
                0x00000000c000ac1c                VCache::VCache(PhysicalDisk*)
                0x00000000c000ad8c                VCache::invalidateReadBuffer()
                0x00000000c000ad9c                VCache::writeWriteBuffer()
                0x00000000c000ade8                VCache::~VCache()
                0x00000000c000ade8                VCache::~VCache()
                0x00000000c000ae40                VCache::~VCache()
                0x00000000c000ae68                VCache::write(unsigned long long, int, void*)
                0x00000000c000af5c                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b060      0x70e hal/video.32
                0x00000000c000b060                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b0ac                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b11c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b19a                Video::clearScreen(unsigned int)
                0x00000000c000b1ce                Video::putpixel(int, int, unsigned int)
                0x00000000c000b1dc                Video::readPixelApprox(int, int)
                0x00000000c000b1f0                Video::Video(char const*)
                0x00000000c000b1f0                Video::Video(char const*)
                0x00000000c000b226                Video::~Video()
                0x00000000c000b226                Video::~Video()
                0x00000000c000b24a                Video::~Video()
                0x00000000c000b274                Video::isMonochrome()
                0x00000000c000b280                Video::getWidth()
                0x00000000c000b28c                Video::getHeight()
                0x00000000c000b298                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000b354                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000b6fe                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000b76e        0x2 
 .text          0x00000000c000b770     0x1413 hw/acpi.32
                0x00000000c000b770                ACPI::close(int, int, void*)
                0x00000000c000b8ac                findRSDP()
                0x00000000c000b944                loadACPITables(unsigned char*)
                0x00000000c000bbb0                findRSDT(unsigned char*)
                0x00000000c000bd08                findDataTable(unsigned char*, char*)
                0x00000000c000bd88                scanMADT()
                0x00000000c000c240                ACPI::ACPI()
                0x00000000c000c240                ACPI::ACPI()
                0x00000000c000c294                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c390                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000c45c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000c464                ACPI::detectPCI()
                0x00000000c000c684                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000c6cc                ACPI::sleep()
                0x00000000c000c6e8                ACPI::open(int, int, void*)
 *fill*         0x00000000c000cb83        0x1 
 .text          0x00000000c000cb84      0xbc5 hw/cpu.32
                0x00000000c000cb84                CPU::close(int, int, void*)
                0x00000000c000cb88                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000cba4                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000cbbc                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000cc30                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000ccb4                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000cce2                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000cd10                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000cd3e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000cd6c                CPU::CPU()
                0x00000000c000cd6c                CPU::CPU()
                0x00000000c000cdfa                CPU::displayFeatures()
                0x00000000c000cdfc                CPU::detectFeatures()
                0x00000000c000d4d0                CPU::setupSMEP()
                0x00000000c000d4dc                CPU::setupUMIP()
                0x00000000c000d4e6                CPU::setupTSC()
                0x00000000c000d4f0                CPU::setupLargePages()
                0x00000000c000d4fa                CPU::setupPAT()
                0x00000000c000d536                CPU::setupMTRR()
                0x00000000c000d538                CPU::setupGlobalPages()
                0x00000000c000d542                CPU::allowUsermodeDataAccess()
                0x00000000c000d554                CPU::prohibitUsermodeDataAccess()
                0x00000000c000d566                CPU::setupSMAP()
                0x00000000c000d574                CPU::setupFeatures()
                0x00000000c000d640                CPU::open(int, int, void*)
 .text          0x00000000c000d749       0xb6 krnl/atexit.32
                0x00000000c000d749                KeInitialiseAtexit()
                0x00000000c000d768                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d79c                KeExecuteAtexit()
 .text          0x00000000c000d7ff       0x92 krnl/bootmsg.32
                0x00000000c000d7ff                KeDisplaySplashScreen()
                0x00000000c000d82e                KeSetBootMessage(char const*)
 .text          0x00000000c000d891       0x5f krnl/c++.32
                0x00000000c000d891                __cxa_atexit
                0x00000000c000d894                __cxa_finalize
                0x00000000c000d895                __stack_chk_fail
                0x00000000c000d8cb                __cxa_pure_virtual
                0x00000000c000d8dc                operator new[](unsigned long)
                0x00000000c000d8e1                operator delete(void*, unsigned long)
                0x00000000c000d8e6                operator delete[](void*)
                0x00000000c000d8eb                operator delete[](void*, unsigned long)
 .text          0x00000000c000d8f0       0x48 krnl/cdefs.32
                0x00000000c000d8f0                CUnlockScheduler
                0x00000000c000d90c                CLockScheduler
                0x00000000c000d91c                CPrintf
 .text          0x00000000c000d938       0x1d krnl/compat.32
                0x00000000c000d938                Krnl::handlePowerButton()
                0x00000000c000d948                Krnl::handleSleepButton()
 *fill*         0x00000000c000d955        0x1 
 .text          0x00000000c000d956      0x6af krnl/computer.32
                0x00000000c000d956                Computer::close(int, int, void*)
                0x00000000c000d9a4                Krnl::firstTask()
                0x00000000c000daca                Computer::Computer()
                0x00000000c000daca                Computer::Computer()
                0x00000000c000db7a                Computer::setBootMessage(char const*)
                0x00000000c000db7c                Computer::detectFeatures()
                0x00000000c000dda2                Computer::displayFeatures()
                0x00000000c000dda4                Computer::rdmsr(unsigned int)
                0x00000000c000ddd0                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000de0c                Computer::shutdown()
                0x00000000c000de24                Computer::restart()
                0x00000000c000de3c                Computer::sleep()
                0x00000000c000de50                Computer::nmiEnabled()
                0x00000000c000de5c                Computer::readCMOS(unsigned char)
                0x00000000c000de7a                Computer::enableNMI(bool)
                0x00000000c000de92                Computer::open(int, int, void*)
                0x00000000c000df66                Computer::disableNMI()
                0x00000000c000df76                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000df9a                Computer::handleNMI()
 .text          0x00000000c000e005       0x2b krnl/crc32.32
                0x00000000c000e005                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e030      0x5bf krnl/env.32
                0x00000000c000e030                EnvVarContainer::getEnv(char const*)
                0x00000000c000e06e                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e130                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e132                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e356                EnvVarContainer::__loadSystem()
                0x00000000c000e370                EnvVarContainer::__loadUser()
                0x00000000c000e372                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e372                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e394                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e394                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e3c4                KeGetEnv(Process*, char const*)
                0x00000000c000e429                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e443                KeSetEnvUser(char const*, char const*)
                0x00000000c000e462                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e475                KeDeleteEnvSystem(char const*)
                0x00000000c000e476                KeDeleteEnvUser(char const*)
                0x00000000c000e477                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e478                KeNewProcessEnv(Process*)
                0x00000000c000e49a                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e4e6                KeLoadSystemEnv()
                0x00000000c000e514                KeLoadUserEnv()
                0x00000000c000e53a                KeFlushEnv()
                0x00000000c000e53b                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e55b                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e5ef        0x1 
 .text          0x00000000c000e5f0      0x1db krnl/gdt.32
                0x00000000c000e5f0                GDTEntry::setBase(unsigned int)
                0x00000000c000e60c                GDTEntry::setLimit(unsigned int)
                0x00000000c000e62a                GDT::GDT()
                0x00000000c000e62a                GDT::GDT()
                0x00000000c000e640                GDT::addEntry(GDTEntry)
                0x00000000c000e662                GDT::getNumberOfEntries()
                0x00000000c000e66a                GDT::flush()
                0x00000000c000e68c                GDT::setup()
 .text          0x00000000c000e7cb       0x1d krnl/idle.32
                0x00000000c000e7cb                idleFunction(void*)
 .text          0x00000000c000e7e8      0x46c krnl/idt.32
                0x00000000c000e7e8                IDTEntry::IDTEntry(bool)
                0x00000000c000e7e8                IDTEntry::IDTEntry(bool)
                0x00000000c000e862                IDTEntry::setOffset(unsigned int)
                0x00000000c000e878                IDT::IDT()
                0x00000000c000e878                IDT::IDT()
                0x00000000c000e87a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000e882                IDT::addEntry(IDTEntry, int)
                0x00000000c000e89c                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000e8d4                IDT::flush()
                0x00000000c000e8ee                IDT::setup()
 .text          0x00000000c000ec54       0x94 krnl/inlines.32
                0x00000000c000ec54                CPU::current()
                0x00000000c000ec60                operator new(unsigned long)
                0x00000000c000ec65                operator delete(void*)
                0x00000000c000ec6a                disableIRQs()
                0x00000000c000ec6c                enableIRQs()
                0x00000000c000ec6e                lockScheduler()
                0x00000000c000ec76                unlockScheduler()
                0x00000000c000ec85                lockStuff()
                0x00000000c000ec93                unlockStuff()
                0x00000000c000eccd                Virt::getAKernelVAS()
                0x00000000c000ecd3                __not_memcpy
 .text          0x00000000c000ece8      0x205 krnl/kheap.32
                0x00000000c000ece8                sbrk
                0x00000000c000ed7f                sbrk_thunk
                0x00000000c000edb5                mmap
                0x00000000c000ee13                munmap
                0x00000000c000ee28                liballoc_lock()
                0x00000000c000ee36                liballoc_unlock()
                0x00000000c000ee4c                liballoc_alloc(int)
                0x00000000c000ee64                liballoc_free(void*, int)
                0x00000000c000ee7f                realloc
                0x00000000c000ee93                malloc
                0x00000000c000eea3                free
                0x00000000c000eeb3                rfree
                0x00000000c000eec3                calloc
 *fill*         0x00000000c000eeed        0x3 
 .text          0x00000000c000eef0      0x1e3 krnl/mailbox.32
                0x00000000c000eef0                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000ef54                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000efb8                KeMailboxCreate()
                0x00000000c000efec                KeMailboxPost(Mailbox*, void*)
                0x00000000c000f054                KeMailboxGet(Mailbox*, void**)
                0x00000000c000f0bc                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000f0d3       0xc7 krnl/main.32
                0x00000000c000f0d3                KeEntryPoint
 *fill*         0x00000000c000f19a        0x2 
 .text          0x00000000c000f19c       0x1a krnl/mutex.32
                0x00000000c000f19c                Mutex::Mutex()
                0x00000000c000f19c                Mutex::Mutex()
 .text          0x00000000c000f1b6        0xc krnl/panic.32
                0x00000000c000f1b6                KePanic(char const*)
 .text          0x00000000c000f1c2      0x644 krnl/physmgr.32
                0x00000000c000f1c2                Phys::allocateDMA(unsigned long)
                0x00000000c000f2aa                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000f2e5                Phys::setPageState(unsigned long, bool)
                0x00000000c000f325                Phys::getPageState(unsigned long)
                0x00000000c000f341                Phys::freePage(unsigned long)
                0x00000000c000f3aa                Phys::allocatePage()
                0x00000000c000f479                Phys::allocateContiguousPages(int)
                0x00000000c000f4e0                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000f518                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000f806      0x273 krnl/pipe.32
                0x00000000c000f806                Pipe::isAtty()
                0x00000000c000f80a                Pipe::~Pipe()
                0x00000000c000f80a                Pipe::~Pipe()
                0x00000000c000f82e                Pipe::~Pipe()
                0x00000000c000f856                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000f916                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000fa12                Pipe::Pipe(int)
                0x00000000c000fa12                Pipe::Pipe(int)
 .text          0x00000000c000fa79      0x142 krnl/powctrl.32
                0x00000000c000fa79                KePowerThread(void*)
                0x00000000c000faa7                KeChangePowerSettings(PowerSettings)
                0x00000000c000fabd                KeUserIOReceived()
                0x00000000c000fac8                KeHandlePowerButton()
                0x00000000c000fafd                KeHandleSleepButton()
                0x00000000c000fb32                KeSetupPowerManager()
 .text          0x00000000c000fbbb       0x9d krnl/random.32
                0x00000000c000fbbb                KeRand()
                0x00000000c000fbfd                KeSeedRand(unsigned int)
                0x00000000c000fc26                KeInitRand()
 .text          0x00000000c000fc58      0x1bc krnl/resolve.32
                0x00000000c000fc58                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c000fe14      0x415 krnl/semaphore.32
                0x00000000c000fe14                Semaphore::Semaphore(int)
                0x00000000c000fe14                Semaphore::Semaphore(int)
                0x00000000c000fe44                Semaphore::tryAcquire()
                0x00000000c000ff20                Semaphore::assertLocked(char const*)
                0x00000000c000ffb0                Semaphore::acquire(int)
                0x00000000c0010158                Semaphore::acquire()
                0x00000000c0010174                Semaphore::release()
 .text          0x00000000c0010229      0x322 krnl/signal.32
                0x00000000c0010229                KiSigKill(int)
                0x00000000c001023d                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001023e                KiDefaultSignalHandlerPause(int)
                0x00000000c001026a                KiDefaultSignalHandlerResume(int)
                0x00000000c0010296                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001029b                KeInitSignals()
                0x00000000c00102ed                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010323                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00103a0                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010497                KiCheckSignalZ
                0x00000000c00104d9                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010514                KiFinishSignalZ
 .text          0x00000000c001054b      0xe1d krnl/syscalls.32
                0x00000000c001054b                SysSeekDir(regs*)
                0x00000000c0010550                SysTellDir(regs*)
                0x00000000c0010555                SysVerify(regs*)
                0x00000000c001055f                SysGetArgc(regs*)
                0x00000000c0010573                SysTTYName(regs*)
                0x00000000c001057b                SysFormatDisk(regs*)
                0x00000000c00105f2                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010646                SysGetDiskVolumeLabel(regs*)
                0x00000000c001069f                SysShutdown(regs*)
                0x00000000c00106fd                SysRealpath(regs*)
                0x00000000c0010741                SysReadDir(regs*)
                0x00000000c00107c1                SysIsATTY(regs*)
                0x00000000c001081b                SysSeek(regs*)
                0x00000000c0010872                SysTell(regs*)
                0x00000000c00108df                SysSize(regs*)
                0x00000000c0010952                SysSizeFromFilename(regs*)
                0x00000000c0010a83                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0010bb4                SysClose(regs*)
                0x00000000c0010c14                SysOpenDir(regs*)
                0x00000000c0010c91                SysMakeDir(regs*)
                0x00000000c0010cff                SysCloseDir(regs*)
                0x00000000c0010d53                SysWait(regs*)
                0x00000000c0010d74                SysNotImpl(regs*)
                0x00000000c0010d8f                SysPanic(regs*)
                0x00000000c0010daa                SysRmdir(regs*)
                0x00000000c0010e0f                SysUnlink(regs*)
                0x00000000c0010e74                SysGetArgv(regs*)
                0x00000000c0010ec1                SysUSleep(regs*)
                0x00000000c0010eea                SysSpawn(regs*)
                0x00000000c0010f5d                SysGetEnv(regs*)
                0x00000000c001100e                SysSetFatAttrib(regs*)
                0x00000000c0011081                SysPipe(regs*)
                0x00000000c00110c6                SysGetUnixTime(regs*)
                0x00000000c00110da                string_ends_with(char const*, char const*)
                0x00000000c0011122                SysOpen(regs*)
                0x00000000c0011319                KeSystemCall(regs*, void*)
 .text          0x00000000c0011368      0xab3 krnl/terminal.32
                0x00000000c0011368                VgaText::isAtty()
                0x00000000c001136c                VgaText::~VgaText()
                0x00000000c001136c                VgaText::~VgaText()
                0x00000000c0011390                VgaText::~VgaText()
                0x00000000c00113ba                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00113da                setTerminalScrollLock(bool)
                0x00000000c00113db                doTerminalCycle()
                0x00000000c00113dc                addToTerminalCycle(VgaText*)
                0x00000000c00113dd                scrollTerminalScrollLock(int)
                0x00000000c00113de                VgaText::updateTitle()
                0x00000000c00113e0                VgaText::load()
                0x00000000c00113e2                VgaText::updateCursor()
                0x00000000c00113f8                VgaText::doANSI_SGR(int)
                0x00000000c001146c                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c001147c                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c001148c                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00114ac                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00114b8                VgaText::setTitleColour(VgaColour)
                0x00000000c00114c4                VgaText::setTitle(char*)
                0x00000000c00114c6                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00114d8                VgaText::scrollScreen()
                0x00000000c001156a                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c001157a                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c001160a                VgaText::getCursorX()
                0x00000000c0011612                VgaText::getCursorY()
                0x00000000c001161a                VgaText::setCursor(int, int)
                0x00000000c0011631                setActiveTerminal(VgaText*)
                0x00000000c001167c                VgaText::clearScreen()
                0x00000000c00116ca                VgaText::setCursorX(int)
                0x00000000c00116e2                VgaText::setCursorY(int)
                0x00000000c00116fa                VgaText::incrementCursor(bool)
                0x00000000c001174e                VgaText::decrementCursor(bool)
                0x00000000c0011770                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0011840                VgaText::putchar(char)
                0x00000000c0011938                VgaText::putx(unsigned int)
                0x00000000c001197e                VgaText::puts(char const*)
                0x00000000c00119a4                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00119f0                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0011b3e                VgaText::VgaText(char const*)
                0x00000000c0011b3e                VgaText::VgaText(char const*)
                0x00000000c0011c8e                VgaText::receiveKey(unsigned char)
                0x00000000c0011e1a                VgaText::doUpdate()
 *fill*         0x00000000c0011e1b        0x1 
 .text          0x00000000c0011e1c      0x1a1 krnl/tss.32
                0x00000000c0011e1c                TSS::TSS()
                0x00000000c0011e1c                TSS::TSS()
                0x00000000c0011e2c                TSS::setESP(unsigned long)
                0x00000000c0011e40                TSS::flush()
                0x00000000c0011e60                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0011fbd        0x1 
 .text          0x00000000c0011fbe      0x4ca krnl/unixfile.32
                0x00000000c0011fbe                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012014                ReservedFilename::isAtty()
                0x00000000c0012030                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c001208e                UnixFile::getFileDescriptor()
                0x00000000c0012096                UnixFile::UnixFile(int)
                0x00000000c0012096                UnixFile::UnixFile(int)
                0x00000000c001224a                ReservedFilename::ReservedFilename(int)
                0x00000000c001224a                ReservedFilename::ReservedFilename(int)
                0x00000000c001227c                UnixFile::~UnixFile()
                0x00000000c001227c                UnixFile::~UnixFile()
                0x00000000c0012318                UnixFile::~UnixFile()
                0x00000000c0012340                ReservedFilename::~ReservedFilename()
                0x00000000c0012340                ReservedFilename::~ReservedFilename()
                0x00000000c0012364                ReservedFilename::~ReservedFilename()
                0x00000000c001238b                KeGetFileFromDescriptor(int)
 .text          0x00000000c0012488     0x1210 krnl/virtmgr.32
                0x00000000c0012488                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00124c2                Virt::getPageState(unsigned long)
                0x00000000c00124e5                Virt::allocateKernelVirtualPages(int)
                0x00000000c001260a                Virt::freeSwapfilePage(unsigned long)
                0x00000000c001262d                Virt::swapIDToSector(unsigned long)
                0x00000000c0012643                Virt::allocateSwapfilePage()
                0x00000000c00126c3                Virt::virtualMemorySetup()
                0x00000000c0012714                Virt::setupPageSwapping(int)
                0x00000000c0012786                VAS::setCPUSpecific(unsigned long)
                0x00000000c0012788                VAS::VAS(VAS*)
                0x00000000c0012788                VAS::VAS(VAS*)
                0x00000000c00127a0                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00127ce                VAS::getPageTableEntry(unsigned long)
                0x00000000c00127ed                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001292a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c001294e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0012968                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c00129aa                VAS::VAS()
                0x00000000c00129aa                VAS::VAS()
                0x00000000c0012a14                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0012a48                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0012a74                VAS::~VAS()
                0x00000000c0012a74                VAS::~VAS()
                0x00000000c0012be2                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0012ce6                VAS::allocatePages(int, int)
                0x00000000c0012ddc                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0012e34                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0012f2a                VAS::VAS(bool)
                0x00000000c0012f2a                VAS::VAS(bool)
                0x00000000c0013174                VAS::evict(unsigned long)
                0x00000000c0013252                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c00133fa                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c001346e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c001349a                VAS::scanForEviction()
                0x00000000c001359d                mapVASFirstTime
 .text          0x00000000c0013698      0xd56 reg/cm.32
                0x00000000c0013698                CmOpen(char const*)
                0x00000000c00137b6                CmClose(Reghive_Tag*)
                0x00000000c00137cc                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0013808                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c001387f                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c00138be                CmGetNext(Reghive_Tag*, int)
                0x00000000c00138f0                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c001392c                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0013954                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0013975                CmExpand(Reghive_Tag*, int)
                0x00000000c00139f0                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0013a76                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0013b6a                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0013ca6                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0013d07                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0013d37                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0013d6e                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0013d98                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013dd8                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013e7c                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0013eaa                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0014048                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0014095                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001410f                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0014162                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0014226                zStrtok(char*, char const*)
                0x00000000c0014298                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0014319                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00143bc                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00143ee      0x52a reg/registry.32
                0x00000000c00143ee                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c001455f                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00146b4                Reg::getLine(char*, char*, char*)
                0x00000000c00146eb                Reg::readInt(char*, char*, int*)
                0x00000000c00147d9                Reg::readString(char*, char*, char*, int)
                0x00000000c001485a                Reg::readBool(char*, char*, bool*)
                0x00000000c001487f                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00148ab                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00148d7                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0014918       0x36 sys/eject.32
                0x00000000c0014918                SysEject(regs*)
 .text          0x00000000c001494e       0x18 sys/exit.32
                0x00000000c001494e                SysExit(regs*)
 .text          0x00000000c0014966       0x1f sys/getcwd.32
                0x00000000c0014966                SysGetCwd(regs*)
 .text          0x00000000c0014985        0xc sys/getpid.32
                0x00000000c0014985                SysGetPID(regs*)
 .text          0x00000000c0014991       0x1a sys/getramdata.32
                0x00000000c0014991                SysGetRAMData(regs*)
 .text          0x00000000c00149ab       0x82 sys/getvgaptr.32
                0x00000000c00149ab                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014a2d        0x3 
 .text          0x00000000c0014a30       0xb9 sys/kill.32
                0x00000000c0014a30                SysKill(regs*)
 .text          0x00000000c0014ae9       0xa8 sys/loaddll.32
                0x00000000c0014ae9                SysLoadDLL(regs*)
 .text          0x00000000c0014b91       0x68 sys/read.32
                0x00000000c0014b91                SysRead(regs*)
 .text          0x00000000c0014bf9       0x29 sys/registersignal.32
                0x00000000c0014bf9                SysRegisterSignal(regs*)
 .text          0x00000000c0014c22      0x1cc sys/registry.32
                0x00000000c0014c22                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014c66                SysRegistryReadExtent(regs*)
                0x00000000c0014cae                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014cc5                SysRegistryEnterDirectory(regs*)
                0x00000000c0014cdc                SysRegistryGetNext(regs*)
                0x00000000c0014cf3                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014d2d                SysRegistryOpen(regs*)
                0x00000000c0014d41                SysRegistryClose(regs*)
                0x00000000c0014d58                SysRegistryEasyReadString(regs*)
                0x00000000c0014da4                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014dee       0x55 sys/sbrk.32
                0x00000000c0014dee                SysSbrk(regs*)
 .text          0x00000000c0014e43       0x1c sys/setcwd.32
                0x00000000c0014e43                SysSetCwd(regs*)
 .text          0x00000000c0014e5f       0x96 sys/settime.32
                0x00000000c0014e5f                SysSetTime(regs*)
 .text          0x00000000c0014ef5       0x73 sys/symlink.32
                0x00000000c0014ef5                SysSymlink(regs*)
 .text          0x00000000c0014f68       0x3f sys/timezone.32
                0x00000000c0014f68                SysTimezone(regs*)
 .text          0x00000000c0014fa7       0xfc sys/truncate.32
                0x00000000c0014fa7                SysTruncate(regs*)
 .text          0x00000000c00150a3       0x68 sys/write.32
                0x00000000c00150a3                SysWrite(regs*)
 .text          0x00000000c001510b       0x9d sys/wsbe.32
                0x00000000c001510b                SysWsbe(regs*)
 .text          0x00000000c00151a8       0x25 sys/yield.32
                0x00000000c00151a8                SysYield(regs*)
 .text          0x00000000c00151cd     0x1207 thr/elf.32
                0x00000000c00151cd                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001545b                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001566d                Thr::runtimeReferenceHelper()
                0x00000000c0015680                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00156cf                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001598d                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00160c6                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00160f8                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001612f                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0016149                Thr::loadDLL(char const*, bool)
                0x00000000c001639b                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00163d4       0x5a thr/exec.32
                0x00000000c00163d4                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c001642e        0x2 
 .text          0x00000000c0016430     0x1131 thr/prcssthr.32
                0x00000000c0016430                userModeEntryPoint(void*)
                0x00000000c0016458                changeTSS
                0x00000000c0016488                switchToThread(ThreadControlBlock*)
                0x00000000c0016538                Process::addArgs(char**)
                0x00000000c00165a4                Process::Process(char const*, Process*, char**)
                0x00000000c00165a4                Process::Process(char const*, Process*, char**)
                0x00000000c00167b0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00167b0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016984                taskStartupFunction
                0x00000000c0016990                KeDisablePreemption()
                0x00000000c00169b8                KeRestorePreemption()
                0x00000000c00169d8                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016ae4                Process::createUserThread()
                0x00000000c0016b04                setupMultitasking(void (*)())
                0x00000000c0016c28                schedule()
                0x00000000c0016cbc                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016ce4                blockTask(TaskState)
                0x00000000c0016d1c                waitTask(int, int*, int)
                0x00000000c0016d60                milliTenthSleepUntil(unsigned int)
                0x00000000c0016e00                milliTenthSleep(unsigned int)
                0x00000000c0016e14                sleep(unsigned int)
                0x00000000c0016e30                taskReturned
                0x00000000c0016e74                Thr::processFromPID(int)
                0x00000000c0016f20                unblockTask(ThreadControlBlock*)
                0x00000000c0016fcc                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00172a0                cleanerTaskFunction(void*)
                0x00000000c00173a8                terminateTask(int)
                0x00000000c0017494                Thr::terminateFromIRQ(int)
 .text          0x00000000c0017561      0xd00 vm86/vm8086.32
                0x00000000c0017561                Vm::inbv(unsigned short)
                0x00000000c0017574                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00175aa                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00175ba                Vm::getSegment(unsigned int)
                0x00000000c00175c2                Vm::getOffset(unsigned int)
                0x00000000c00175c7                Vm::mainloop2()
                0x00000000c0017601                Vm::mainVm8086Loop(void*)
                0x00000000c0017611                Vm::mainloop3(unsigned long)
                0x00000000c0017637                Vm::initialise8086()
                0x00000000c001767a                Vm::resetConventionalMemory8086()
                0x00000000c001767b                Vm::finish8086()
                0x00000000c00176dc                Vm::getOutput8086(unsigned char*)
                0x00000000c0017701                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017828                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017a30                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017ac9                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017ada                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017aec                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017afd                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017b12                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017b28                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017b3d                Vm::faultHandler(regs*)
 .text          0x00000000c0018261      0xacb arch/i386/hal.32
                0x00000000c0018261                noCopro(unsigned long)
                0x00000000c0018262                nmiHandler(regs*, void*)
                0x00000000c001827b                doubleFault(regs*, void*)
                0x00000000c0018294                displayDebugInfo(regs*)
                0x00000000c0018619                HalSystemIdle()
                0x00000000c0018695                displayProgramFault(char const*)
                0x00000000c00186e1                gpFault(regs*, void*)
                0x00000000c0018748                pgFault(regs*, void*)
                0x00000000c00187d1                otherISRHandler(regs*, void*)
                0x00000000c0018805                opcodeFault(regs*, void*)
                0x00000000c0018888                i386SaveCoprocessor(void*)
                0x00000000c001889c                i386LoadCoprocessor(void*)
                0x00000000c00188b0                x87EmulHandler(regs*, void*)
                0x00000000c001894d                HalInitialiseCoprocessor()
                0x00000000c00189d6                HalPanic(char const*)
                0x00000000c0018aea                HalQueryPerformanceCounter()
                0x00000000c0018b05                HalInitialise()
                0x00000000c0018cbb                HalMakeBeep(int)
                0x00000000c0018cf5                HalGetRand()
                0x00000000c0018cf8                HalEndOfInterrupt(int)
                0x00000000c0018d29                HalRestart()
                0x00000000c0018d2a                HalShutdown()
                0x00000000c0018d2b                HalSleep()
 .text          0x00000000c0018d2c      0x2dc arch/i386/pic.32
                0x00000000c0018d2c                picIoWait()
                0x00000000c0018d34                picDisable()
                0x00000000c0018d68                picGetIRQReg(int)
                0x00000000c0018de4                picOpen()
                0x00000000c0018f68                picEOI(int)
 .text          0x00000000c0019008      0x674 arch/i386/rtc.32
                0x00000000c0019008                RTC::open(int, int, void*)
                0x00000000c001900c                RTC::close(int, int, void*)
                0x00000000c0019010                RTC::timeInSecondsUTC()
                0x00000000c0019022                RTC::timeInDatetimeUTC()
                0x00000000c0019048                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0019086                RTC::~RTC()
                0x00000000c0019086                RTC::~RTC()
                0x00000000c00190aa                RTC::~RTC()
                0x00000000c00190d4                RTC::get_update_in_progress_flag()
                0x00000000c00190ee                RTC::completeRTCRefresh()
                0x00000000c00193ce                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001957c                rtcIRQHandler(regs*, void*)
                0x00000000c00195c2                RTC::RTC()
                0x00000000c00195c2                RTC::RTC()
 .text          0x00000000c001967c      0x1f4 arch/i386/vga.32
                0x00000000c001967c                HalConsoleScroll(int, int)
                0x00000000c0019784                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00197e8                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0019870     0x14cf fs/fat/vfslink.32
                0x00000000c0019870                FAT::getName()
                0x00000000c0019878                FAT::tell(void*, unsigned long long*)
                0x00000000c00198b4                FAT::stat(void*, unsigned long long*)
                0x00000000c00198f0                FAT::~FAT()
                0x00000000c00198f0                FAT::~FAT()
                0x00000000c0019914                FAT::~FAT()
                0x00000000c001993c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00199e0                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019aa4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019c88                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019ea4                FAT::allocateSwapfile(char const*, int)
                0x00000000c001a064                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a1d4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001a234                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a294                FAT::close(void*)
                0x00000000c001a2e8                FAT::closeDir(void*)
                0x00000000c001a33c                FAT::truncate(void*, unsigned long long)
                0x00000000c001a3a8                FAT::seek(void*, unsigned long long)
                0x00000000c001a400                fatWrapperReadDisk
                0x00000000c001a440                fatWrapperWriteDisk
                0x00000000c001a480                fatWrapperIoctl
                0x00000000c001a59c                FAT::FAT()
                0x00000000c001a59c                FAT::FAT()
                0x00000000c001a5f4                FAT::fixFilepath(char*)
                0x00000000c001a634                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a7a8                FAT::openDir(char const*, void**)
                0x00000000c001a858                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a950                FAT::unlink(char const*)
                0x00000000c001a9d0                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ab84                FAT::rename(char const*, char const*)
                0x00000000c001ac50                FAT::mkdir(char const*)
                0x00000000c001acd0                FAT::exists(char const*)
 *fill*         0x00000000c001ad3f        0x1 
 .text          0x00000000c001ad40       0x94 fs/iso9660/helper.32
                0x00000000c001ad40                isoReadDiscSectorHelper
                0x00000000c001ad9c                iso_kprintf
                0x00000000c001adb8                iso_kprintfd
 .text          0x00000000c001add4      0x71c fs/iso9660/vfslink.32
                0x00000000c001add4                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001adda                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001ade0                ISO9660::getName()
                0x00000000c001ade6                ISO9660::closeDir(void*)
                0x00000000c001adf0                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001adf6                ISO9660::unlink(char const*)
                0x00000000c001adfc                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001ae02                ISO9660::rename(char const*, char const*)
                0x00000000c001ae08                ISO9660::mkdir(char const*)
                0x00000000c001ae0e                ISO9660::~ISO9660()
                0x00000000c001ae0e                ISO9660::~ISO9660()
                0x00000000c001ae32                ISO9660::~ISO9660()
                0x00000000c001ae5a                ISO9660::exists(char const*)
                0x00000000c001ae6e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001af54                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001af9c                ISO9660::seek(void*, unsigned long long)
                0x00000000c001afde                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001b01c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001b06e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b1b0                ISO9660::close(void*)
                0x00000000c001b1e0                ISO9660::openDir(char const*, void**)
                0x00000000c001b2ba                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b3d7                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b456                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b4c8                ISO9660::ISO9660()
                0x00000000c001b4c8                ISO9660::ISO9660()
 .text          0x00000000c001b4f0      0x26c hal/sound/sndcard.32
                0x00000000c001b4f0                SoundCard::beginPlayback()
                0x00000000c001b4fe                SoundCard::stopPlayback()
                0x00000000c001b50c                SoundCard::SoundCard(char const*)
                0x00000000c001b50c                SoundCard::SoundCard(char const*)
                0x00000000c001b5aa                SoundCard::~SoundCard()
                0x00000000c001b5aa                SoundCard::~SoundCard()
                0x00000000c001b5ce                SoundCard::~SoundCard()
                0x00000000c001b5f8                SoundCard::configureRates(int, int, int)
                0x00000000c001b628                SoundCard::getSamples16(int, short*)
                0x00000000c001b684                SoundCard::getSamples32(int, int*)
                0x00000000c001b70a                SoundCard::addChannel(SoundPort*)
                0x00000000c001b748                SoundCard::removeChannel(int)
 .text          0x00000000c001b75c      0x38a hal/sound/sndport.32
                0x00000000c001b75c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b75c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b7e8                SoundPort::~SoundPort()
                0x00000000c001b7e8                SoundPort::~SoundPort()
                0x00000000c001b81c                SoundPort::unpause()
                0x00000000c001b828                SoundPort::pause()
                0x00000000c001b834                SoundPort::getBufferUsed()
                0x00000000c001b83c                SoundPort::getBufferSize()
                0x00000000c001b844                SoundPort::buffer16(short*, int)
                0x00000000c001b8d0                SoundPort::buffer32(int*, int)
                0x00000000c001b95c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001ba28                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001bae6        0x0 hw/bus/isa.32
 .text          0x00000000c001bae6      0xc23 hw/bus/pci.32
                0x00000000c001bae6                PCI::open(int, int, void*)
                0x00000000c001bb04                PCI::close(int, int, void*)
                0x00000000c001bb08                PCI::PCI()
                0x00000000c001bb08                PCI::PCI()
                0x00000000c001bba0                PCI::readBAR8(unsigned int, int)
                0x00000000c001bbbc                PCI::readBAR16(unsigned int, int)
                0x00000000c001bbda                PCI::readBAR32(unsigned int, int)
                0x00000000c001bbf6                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001bc16                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001bc38                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001bc58                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bcce                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bd78                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001bd9c                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001bdc4                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001be0e                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001be36                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001be5a                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001be7e                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001bea6                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bf0a                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001bff2                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001c2b8                PCI::checkBus(unsigned char)
                0x00000000c001c2dc                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001c4c2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001c63e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001c6b0                PCI::detect()
 *fill*         0x00000000c001c709        0x1 
 .text          0x00000000c001c70a      0xe16 hw/diskctrl/ide.32
                0x00000000c001c70a                IDE::close(int, int, void*)
                0x00000000c001c70e                IDE::IDE()
                0x00000000c001c70e                IDE::IDE()
                0x00000000c001c742                IDE::prepareInterrupt(unsigned char)
                0x00000000c001c754                selectDrive(unsigned char, unsigned char)
                0x00000000c001c756                IDE::getBase(unsigned char)
                0x00000000c001c768                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001c828                IDE::read(unsigned char, unsigned char)
                0x00000000c001c8d6                IDE::waitInterrupt(unsigned char)
                0x00000000c001c938                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c954                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c970                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c9ba                IDE::open(int, int, void*)
                0x00000000c001cf00                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001cfd0                IDE::detect()
                0x00000000c001d412                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001d4cc                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001d520      0x33d hw/diskctrl/satabus.32
                0x00000000c001d520                SATABus::close(int, int, void*)
                0x00000000c001d524                SATABus::detect()
                0x00000000c001d526                SATABus::SATABus()
                0x00000000c001d526                SATABus::SATABus()
                0x00000000c001d5ac                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d5de                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d626                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d646                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d670                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001d780                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001d82a                SATABus::open(int, int, void*)
 *fill*         0x00000000c001d85d        0x1 
 .text          0x00000000c001d85e      0x987 hw/diskphys/ata.32
                0x00000000c001d85e                ATA::close(int, int, void*)
                0x00000000c001d882                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001d884                ATA::ATA()
                0x00000000c001d884                ATA::ATA()
                0x00000000c001d8b2                ATA::flush(bool)
                0x00000000c001d900                ATA::readyForCommand()
                0x00000000c001d94c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001dd2a                ATA::detectCHS()
                0x00000000c001dd54                ATA::open(int, int, void*)
                0x00000000c001de20                combineCharAndColour(char, unsigned char)
                0x00000000c001de31                combineColours(unsigned char, unsigned char)
                0x00000000c001de3e                ATA::read(unsigned long long, int, void*)
                0x00000000c001e014                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e1e5        0x1 
 .text          0x00000000c001e1e6      0x618 hw/diskphys/atapi.32
                0x00000000c001e1e6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001e1ec                ATAPI::close(int, int, void*)
                0x00000000c001e210                ATAPI::ATAPI()
                0x00000000c001e210                ATAPI::ATAPI()
                0x00000000c001e23e                ATAPI::readyForCommand()
                0x00000000c001e290                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001e558                ATAPI::diskRemoved()
                0x00000000c001e592                ATAPI::eject()
                0x00000000c001e5da                ATAPI::diskInserted()
                0x00000000c001e5e6                ATAPI::detectMedia()
                0x00000000c001e6a4                ATAPI::open(int, int, void*)
                0x00000000c001e784                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e7fe      0x849 hw/diskphys/sata.32
                0x00000000c001e7fe                SATA::close(int, int, void*)
                0x00000000c001e822                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001e824                SATA::open(int, int, void*)
                0x00000000c001e8dc                SATA::SATA()
                0x00000000c001e8dc                SATA::SATA()
                0x00000000c001e90a                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001eb92                SATA::read(unsigned long long, int, void*)
                0x00000000c001ede2                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001f047        0x1 
 .text          0x00000000c001f048      0x5d0 hw/diskphys/satapi.32
                0x00000000c001f048                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001f04e                SATAPI::close(int, int, void*)
                0x00000000c001f072                SATAPI::SATAPI()
                0x00000000c001f072                SATAPI::SATAPI()
                0x00000000c001f0a0                SATAPI::diskRemoved()
                0x00000000c001f0a2                SATAPI::diskInserted()
                0x00000000c001f0be                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001f39c                SATAPI::eject()
                0x00000000c001f3d8                SATAPI::detectMedia()
                0x00000000c001f42e                SATAPI::open(int, int, void*)
                0x00000000c001f52e                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f618      0x45b hw/intctrl/apic.32
                0x00000000c001f618                IOAPIC::close(int, int, void*)
                0x00000000c001f61e                apicGetBase()
                0x00000000c001f664                IOAPIC::IOAPIC()
                0x00000000c001f664                IOAPIC::IOAPIC()
                0x00000000c001f68c                apicOpen()
                0x00000000c001f808                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001f83a                IOAPIC::read(int)
                0x00000000c001f862                IOAPIC::open(int, int, void*)
                0x00000000c001f948                IOAPIC::write(int, int)
                0x00000000c001f974                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001fa73        0x1 
 .text          0x00000000c001fa74       0xf0 hw/timer/apictimer.32
                0x00000000c001fa74                APICTimer::close(int, int, void*)
                0x00000000c001fa7c                apicTimerHandler(regs*, void*)
                0x00000000c001faa4                APICTimer::open(int, int, void*)
                0x00000000c001fb14                APICTimer::write(int)
                0x00000000c001fb3c                APICTimer::APICTimer()
                0x00000000c001fb3c                APICTimer::APICTimer()
 .text          0x00000000c001fb64      0x1ad hw/timer/pit.32
                0x00000000c001fb64                PIT::write(int)
                0x00000000c001fbe8                pitHandler(regs*, void*)
                0x00000000c001fc10                PIT::open(int, int, void*)
                0x00000000c001fc60                PIT::close(int, int, void*)
                0x00000000c001fc90                PIT::PIT()
                0x00000000c001fc90                PIT::PIT()
 *fill*         0x00000000c001fd11        0xf 
 .text          0x00000000c001fd20       0x6f arch/i386/avx.32
                0x00000000c001fd20                avxDetect
                0x00000000c001fd4a                avxSave
                0x00000000c001fd5b                avxLoad
                0x00000000c001fd6c                avxInit
                0x00000000c001fd8e                avxClose
 *fill*         0x00000000c001fd8f        0x1 
 .text          0x00000000c001fd90      0x2ec arch/i386/interrupt.32
                0x00000000c001fd90                isr0
                0x00000000c001fda0                isr1
                0x00000000c001fdaa                isr2
                0x00000000c001fdb4                isr3
                0x00000000c001fdbe                isr4
                0x00000000c001fdc8                isr5
                0x00000000c001fdd2                isr6
                0x00000000c001fddc                isr7
                0x00000000c001fde6                isr8
                0x00000000c001fdee                isr9
                0x00000000c001fdf8                isr10
                0x00000000c001fe00                isr11
                0x00000000c001fe08                isr12
                0x00000000c001fe10                isr13
                0x00000000c001fe2a                isr14
                0x00000000c001fe32                isr15
                0x00000000c001fe3c                isr16
                0x00000000c001fe46                isr17
                0x00000000c001fe50                isr18
                0x00000000c001fe5a                irq3
                0x00000000c001fe64                irq4
                0x00000000c001fe6e                irq5
                0x00000000c001fe78                irq6
                0x00000000c001fe82                irq7
                0x00000000c001fe8c                irq8
                0x00000000c001fe96                irq9
                0x00000000c001fea0                irq10
                0x00000000c001feaa                irq11
                0x00000000c001feb4                irq12
                0x00000000c001febe                irq13
                0x00000000c001fec8                irq14
                0x00000000c001fed2                irq15
                0x00000000c001fedc                irq1
                0x00000000c001fee3                irq2
                0x00000000c001feea                isr96
                0x00000000c001fef1                irq0
                0x00000000c001fef6                int_common_stub
                0x00000000c001ff28                syscall_common_stub
                0x00000000c002002c                irq16
                0x00000000c0020036                irq17
                0x00000000c0020040                irq18
                0x00000000c002004a                irq19
                0x00000000c0020054                irq20
                0x00000000c002005e                irq21
                0x00000000c0020068                irq22
                0x00000000c0020072                irq23
 *fill*         0x00000000c002007c        0x4 
 .text          0x00000000c0020080       0x10 arch/i386/rdrand.32
                0x00000000c0020080                i386GetRDRAND
 .text          0x00000000c0020090       0x39 arch/i386/sse.32
                0x00000000c0020090                sseDetect
                0x00000000c00200a8                sseSave
                0x00000000c00200b0                sseLoad
                0x00000000c00200b8                sseInit
                0x00000000c00200c8                sseClose
 *fill*         0x00000000c00200c9        0x7 
 .text          0x00000000c00200d0       0x49 arch/i386/x87.32
                0x00000000c00200d6                x87Detect
                0x00000000c00200f1                x87Save
                0x00000000c00200f8                x87Load
                0x00000000c00200ff                x87Init
                0x00000000c0020118                x87Close
 *fill*         0x00000000c0020119        0x3 
 .text          0x00000000c002011c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0020141        0x0 crtn.32
 *fill*         0x00000000c0020141        0x3 
 .text          0x00000000c0020144      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0020144                __divdi3
 *fill*         0x00000000c002028f        0x1 
 .text          0x00000000c0020290      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0020290                __moddi3
 *fill*         0x00000000c002040e        0x2 
 .text          0x00000000c0020410       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0020410                __udivdi3
 *fill*         0x00000000c002050f        0x1 
 .text          0x00000000c0020510      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0020510                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0020630        0x0
 .iplt          0x00000000c0020630        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002062a        0xf
 .init          0x00000000c002062a        0x3 crti.32
                0x00000000c002062a                _init
 .init          0x00000000c002062d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0020632        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0020637        0x2 crtn.32

.fini           0x00000000c0020639        0xa
 .fini          0x00000000c0020639        0x3 crti.32
                0x00000000c0020639                _fini
 .fini          0x00000000c002063c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0020641        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020644       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020644       0x1a hal/device.32
                0x00000000c0020644                DriverlessDevice::~DriverlessDevice()
                0x00000000c0020644                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c002065e       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c002065e       0x2a hal/device.32
                0x00000000c002065e                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0020688       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0020688       0xdc hal/device.32
                0x00000000c0020688                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020764       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020764       0x42 hal/device.32
                0x00000000c0020764                LinkedList<Device>::LinkedList()
                0x00000000c0020764                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00207a8       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00207a8       0x1c hal/timer.32
                0x00000000c00207a8                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00207c4        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00207c4        0x7 hal/timer.32
                0x00000000c00207c4                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00207cc       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00207cc       0xbc hal/timer.32
                0x00000000c00207cc                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0020888       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0020888       0xda hal/timer.32
                0x00000000c0020888                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0020964       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0020964       0x23 hw/acpi.32
                0x00000000c0020964                ACPI::~ACPI()
                0x00000000c0020964                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0020988       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0020988       0x2a hw/acpi.32
                0x00000000c0020988                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00209b4        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00209b4        0x2 hw/acpi.32
                0x00000000c00209b4                LinkedList<Device>::~LinkedList()
                0x00000000c00209b4                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00209b8       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00209b8       0x1c hw/acpi.32
                0x00000000c00209b8                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00209d4        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00209d4        0x7 hw/acpi.32
                0x00000000c00209d4                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00209dc       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00209dc       0xb8 hw/acpi.32
                0x00000000c00209dc                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c0020a94       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0020a94       0x23 hw/cpu.32
                0x00000000c0020a94                CPU::~CPU()
                0x00000000c0020a94                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020ab8       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020ab8       0x2a hw/cpu.32
                0x00000000c0020ab8                CPU::~CPU()

.text._ZN8ComputerD2Ev
                0x00000000c0020ae2       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0020ae2       0x23 krnl/computer.32
                0x00000000c0020ae2                Computer::~Computer()
                0x00000000c0020ae2                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0020b06       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0020b06       0x2a krnl/computer.32
                0x00000000c0020b06                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0020b30       0x21
 .text._Z10idleCommonv
                0x00000000c0020b30       0x21 krnl/idle.32
                0x00000000c0020b30                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0020b52        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0020b52        0x2 krnl/unixfile.32
                0x00000000c0020b52                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0020b52                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0020b54       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0020b54       0x42 krnl/unixfile.32
                0x00000000c0020b54                LinkedList<UnixFile>::LinkedList()
                0x00000000c0020b54                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0020b96       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0020b96       0xd3 krnl/unixfile.32
                0x00000000c0020b96                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0020c6a        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0020c6a        0x7 krnl/unixfile.32
                0x00000000c0020c6a                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0020c72       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0020c72       0xa1 krnl/unixfile.32
                0x00000000c0020c72                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0020d14        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0020d14        0x8 krnl/unixfile.32
                0x00000000c0020d14                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020d1c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020d1c        0x8 sys/kill.32
                0x00000000c0020d1c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020d24        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020d24        0x2 thr/prcssthr.32
                0x00000000c0020d24                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020d24                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020d28       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020d28       0x49 thr/prcssthr.32
                0x00000000c0020d28                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020d28                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020d74       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020d74       0x42 thr/prcssthr.32
                0x00000000c0020d74                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020d74                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c0020db6       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020db6       0x23 hw/bus/pci.32
                0x00000000c0020db6                PCI::~PCI()
                0x00000000c0020db6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0020dda       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0020dda       0x2a hw/bus/pci.32
                0x00000000c0020dda                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020e04       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020e04       0x23 hw/diskctrl/ide.32
                0x00000000c0020e04                IDE::~IDE()
                0x00000000c0020e04                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020e28       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020e28       0x2a hw/diskctrl/ide.32
                0x00000000c0020e28                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020e52       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020e52       0x23 hw/diskctrl/satabus.32
                0x00000000c0020e52                SATABus::~SATABus()
                0x00000000c0020e52                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020e76       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020e76       0x2a hw/diskctrl/satabus.32
                0x00000000c0020e76                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020ea0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020ea0       0x23 hw/diskphys/ata.32
                0x00000000c0020ea0                ATA::~ATA()
                0x00000000c0020ea0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020ec4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020ec4       0x2a hw/diskphys/ata.32
                0x00000000c0020ec4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0020eee       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0020eee       0x23 hw/diskphys/atapi.32
                0x00000000c0020eee                ATAPI::~ATAPI()
                0x00000000c0020eee                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020f12       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020f12       0x2a hw/diskphys/atapi.32
                0x00000000c0020f12                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0020f3c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0020f3c       0x23 hw/diskphys/sata.32
                0x00000000c0020f3c                SATA::~SATA()
                0x00000000c0020f3c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020f60       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020f60       0x2a hw/diskphys/sata.32
                0x00000000c0020f60                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0020f8a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0020f8a       0x23 hw/diskphys/satapi.32
                0x00000000c0020f8a                SATAPI::~SATAPI()
                0x00000000c0020f8a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0020fae       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0020fae       0x2a hw/diskphys/satapi.32
                0x00000000c0020fae                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020fd8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020fd8       0x23 hw/intctrl/apic.32
                0x00000000c0020fd8                IOAPIC::~IOAPIC()
                0x00000000c0020fd8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0020ffc       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0020ffc       0x2a hw/intctrl/apic.32
                0x00000000c0020ffc                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0021028       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0021028       0x23 hw/timer/apictimer.32
                0x00000000c0021028                APICTimer::~APICTimer()
                0x00000000c0021028                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002104c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002104c       0x2a hw/timer/apictimer.32
                0x00000000c002104c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0021078       0x23
 .text._ZN3PITD2Ev
                0x00000000c0021078       0x23 hw/timer/pit.32
                0x00000000c0021078                PIT::~PIT()
                0x00000000c0021078                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002109c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002109c       0x2a hw/timer/pit.32
                0x00000000c002109c                PIT::~PIT()

.rodata         0x00000000c00210c6     0x333a
                0x00000000c00210c6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00210c6        0x2 
 .ctors         0x00000000c00210c8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00210cc        0x4 krnl/unixfile.32
 .ctors         0x00000000c00210d0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00210d4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00210d8                end_ctors = .
                0x00000000c00210d8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00210d8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00210dc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00210dc                __DTOR_END__
                0x00000000c00210e0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00210e0        0x0 
 .rodata        0x00000000c00210e0      0x101 acpica/utclib.32
                0x00000000c00210e0                AcpiGbl_Ctypes
 *fill*         0x00000000c00211e1        0x3 
 .rodata        0x00000000c00211e4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c00211fc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0021246       0x1a 
 .rodata        0x00000000c0021260       0xed fs/fat/ff.32
 *fill*         0x00000000c002134d       0x13 
 .rodata        0x00000000c0021360      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0021760       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c00217cf       0x11 dbg/kconsole.32
 .rodata        0x00000000c00217e0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021930      0x169 dbg/usban.32
 *fill*         0x00000000c0021a99        0x3 
 .rodata.str1.4
                0x00000000c0021a9c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0021bd3      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c0021cf6       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c0021d37        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021d38       0x6c fs/vfs.32
                0x00000000c0021d38                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021da4       0x1c fs/vfs.32
                0x00000000c0021da4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021dc0       0x1c fs/vfs.32
                0x00000000c0021dc0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021ddc       0x2c hal/bus.32
                0x00000000c0021ddc                vtable for Bus
 .rodata.str1.1
                0x00000000c0021e08       0x70 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0021e78       0x3c hal/clock.32
                0x00000000c0021e78                vtable for Clock
 *fill*         0x00000000c0021eb4        0xc 
 .rodata        0x00000000c0021ec0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021ef0       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021f54       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021f76       0x15 hal/device.32
 *fill*         0x00000000c0021f8b        0x1 
 .rodata._ZTV6Device
                0x00000000c0021f8c       0x2c hal/device.32
                0x00000000c0021f8c                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021fb8       0x2c hal/device.32
                0x00000000c0021fb8                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021fe4       0x2c hal/diskctrl.32
                0x00000000c0021fe4                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0022010       0x38 hal/diskphys.32
                0x00000000c0022010                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0022048       0x3e hal/intctrl.32
 *fill*         0x00000000c0022086        0x2 
 .rodata.str1.4
                0x00000000c0022088       0x5d hal/intctrl.32
 .rodata        0x00000000c00220e5       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0022138       0x34 hal/keybrd.32
                0x00000000c0022138                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002216c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00221b0       0x2c hal/logidisk.32
                0x00000000c00221b0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00221dc       0x2c hal/mouse.32
                0x00000000c00221dc                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0022208       0x34 hal/nic.32
                0x00000000c0022208                vtable for NIC
 .rodata.str1.1
                0x00000000c002223c        0xb hal/partition.32
 *fill*         0x00000000c0022247        0x1 
 .rodata._ZTV6Serial
                0x00000000c0022248       0x44 hal/serial.32
                0x00000000c0022248                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002228c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00222d7        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00222df       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00222df       0x15 hal/timer.32
 *fill*         0x00000000c00222df        0x1 
 .rodata._ZTV5Timer
                0x00000000c00222e0       0x30 hal/timer.32
                0x00000000c00222e0                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0022310       0x10 hal/vcache.32
                0x00000000c0022310                vtable for VCache
 .rodata.str1.1
                0x00000000c0022320       0xba hal/video.32
 *fill*         0x00000000c00223da        0x2 
 .rodata._ZTV5Video
                0x00000000c00223dc       0x4c hal/video.32
                0x00000000c00223dc                vtable for Video
 .rodata.str1.1
                0x00000000c0022428      0x217 hw/acpi.32
 *fill*         0x00000000c002263f        0x1 
 .rodata.str1.4
                0x00000000c0022640       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00226db       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00226db        0x8 hw/acpi.32
 *fill*         0x00000000c00226db        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00226dc       0x2c hw/acpi.32
                0x00000000c00226dc                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022708      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022883        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022884       0x2c hw/cpu.32
                0x00000000c0022884                vtable for CPU
 .rodata.str1.1
                0x00000000c00228b0       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00228f0       0x13 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0022903       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0022936        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0022939      0x100 krnl/computer.32
                                        0x11a (size before relaxing)
 *fill*         0x00000000c0022a39        0x3 
 .rodata.str1.4
                0x00000000c0022a3c       0x68 krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c0022aa4       0x2c krnl/computer.32
                0x00000000c0022aa4                vtable for Computer
 .rodata.str1.1
                0x00000000c0022ad0       0x3c krnl/env.32
 .rodata.str1.4
                0x00000000c0022b0c       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0022b3c        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0022b4b       0x17 krnl/main.32
 *fill*         0x00000000c0022b62        0x2 
 .rodata.str1.4
                0x00000000c0022b64       0xa5 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0022c09       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0022c61       0x39 krnl/pipe.32
 *fill*         0x00000000c0022c9a        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0022c9c       0x1c krnl/pipe.32
                0x00000000c0022c9c                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022cb8       0x91 krnl/resolve.32
 *fill*         0x00000000c0022d49        0x3 
 .rodata.str1.4
                0x00000000c0022d4c       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c0022d6b       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022e34       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022e7c       0x1a krnl/terminal.32
                                         0x2b (size before relaxing)
 *fill*         0x00000000c0022e96        0x2 
 .rodata._ZTV7VgaText
                0x00000000c0022e98       0x1c krnl/terminal.32
                0x00000000c0022e98                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0022eb4       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0022eb4       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0022eb4       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0022eb4        0x8 krnl/unixfile.32
 .rodata.str1.4
                0x00000000c0022eb4       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0022ed4       0x1c krnl/unixfile.32
                0x00000000c0022ed4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0022ef0       0x1c krnl/unixfile.32
                0x00000000c0022ef0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0022f0c      0x270 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c002317c      0x126 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c00232a2       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0023318       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002335d        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0023367       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0023388       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00233dc       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0023408      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023612       0x57 thr/prcssthr.32
 *fill*         0x00000000c0023669        0x3 
 .rodata.str1.4
                0x00000000c002366c       0xf0 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002375c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002375c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002375c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002375c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002375c       0xdd vm86/vm8086.32
 *fill*         0x00000000c0023839        0x3 
 .rodata        0x00000000c002383c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002386c      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0023a0b        0x1 
 .rodata.str1.4
                0x00000000c0023a0c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0023a7f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0023a94       0x3c arch/i386/rtc.32
                0x00000000c0023a94                vtable for RTC
 .rodata.str1.1
                0x00000000c0023ad0       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0023b11        0x3 
 .rodata._ZTV3FAT
                0x00000000c0023b14       0x6c fs/fat/vfslink.32
                0x00000000c0023b14                vtable for FAT
 .rodata.str1.1
                0x00000000c0023b80       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0023b80      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0023cb8       0x6c fs/iso9660/vfslink.32
                0x00000000c0023cb8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023d24       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0023d68       0x34 hal/sound/sndcard.32
                0x00000000c0023d68                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023d9c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023ddb       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023e13       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0023eb4       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023f18       0x2c hw/bus/pci.32
                0x00000000c0023f18                vtable for PCI
 .rodata.str1.1
                0x00000000c0023f44       0xf7 hw/diskctrl/ide.32
                                        0x10d (size before relaxing)
 *fill*         0x00000000c002403b        0x1 
 .rodata._ZTV3IDE
                0x00000000c002403c       0x2c hw/diskctrl/ide.32
                0x00000000c002403c                vtable for IDE
 .rodata.str1.4
                0x00000000c0024068       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c002408c       0x2c hw/diskctrl/satabus.32
                0x00000000c002408c                vtable for SATABus
 .rodata.str1.1
                0x00000000c00240b8       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c00240ca        0x2 
 .rodata._ZTV3ATA
                0x00000000c00240cc       0x38 hw/diskphys/ata.32
                0x00000000c00240cc                vtable for ATA
 .rodata.str1.1
                0x00000000c0024104        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0024111        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0024114       0x38 hw/diskphys/atapi.32
                0x00000000c0024114                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002414c       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00241d4       0x38 hw/diskphys/sata.32
                0x00000000c00241d4                vtable for SATA
 .rodata.str1.1
                0x00000000c002420c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00242f6        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00242f8       0x38 hw/diskphys/satapi.32
                0x00000000c00242f8                vtable for SATAPI
 .rodata        0x00000000c0024330        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0024338       0x2c hw/intctrl/apic.32
                0x00000000c0024338                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0024364       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002437f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0024380       0x30 hw/timer/apictimer.32
                0x00000000c0024380                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00243b0       0x1d hw/timer/pit.32
 *fill*         0x00000000c00243cd        0x3 
 .rodata._ZTV3PIT
                0x00000000c00243d0       0x30 hw/timer/pit.32
                0x00000000c00243d0                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0024400      0xa81
 *(.data)
 .data          0x00000000c0024400        0x0 crti.32
 .data          0x00000000c0024400        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0024400                __dso_handle
 .data          0x00000000c0024404        0x0 acpica/utclib.32
 .data          0x00000000c0024404        0x0 krnl/malloc.32
 .data          0x00000000c0024404        0x0 libk/ctype.32
 .data          0x00000000c0024404        0x0 libk/string.32
 .data          0x00000000c0024404        0x0 arch/i386/cc.32
 .data          0x00000000c0024404        0x0 fs/fat/diskio.32
 .data          0x00000000c0024404        0x0 fs/fat/ff.32
 .data          0x00000000c0024404        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0024404        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0024404        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0024404        0x0 dbg/kconsole.32
 *fill*         0x00000000c0024404       0x1c 
 .data          0x00000000c0024420       0x28 dbg/usban.32
                0x00000000c0024420                KiUsbanTypeMismatchTypes
 .data          0x00000000c0024448        0x0 fs/symlink.32
 .data          0x00000000c0024448        0x0 fs/vfs.32
 .data          0x00000000c0024448        0x0 hal/bus.32
 .data          0x00000000c0024448        0x0 hal/buzzer.32
 .data          0x00000000c0024448        0x0 hal/clock.32
 .data          0x00000000c0024448        0x0 hal/device.32
 .data          0x00000000c0024448        0x0 hal/diskctrl.32
 .data          0x00000000c0024448        0x0 hal/diskphys.32
 .data          0x00000000c0024448        0x0 hal/fpu.32
 .data          0x00000000c0024448        0x0 hal/intctrl.32
 .data          0x00000000c0024448        0x0 hal/keybrd.32
 .data          0x00000000c0024448        0x0 hal/logidisk.32
 .data          0x00000000c0024448        0x0 hal/mouse.32
 .data          0x00000000c0024448        0x0 hal/nic.32
 .data          0x00000000c0024448        0x0 hal/partition.32
 .data          0x00000000c0024448        0x0 hal/serial.32
 .data          0x00000000c0024448        0x0 hal/timer.32
 .data          0x00000000c0024448        0x0 hal/vcache.32
 .data          0x00000000c0024448        0x0 hal/video.32
 .data          0x00000000c0024448       0x10 hw/acpi.32
                0x00000000c0024448                legacyIRQRemaps
 .data          0x00000000c0024458        0x4 hw/cpu.32
                0x00000000c0024458                lastCode
 .data          0x00000000c002445c        0x0 krnl/atexit.32
 .data          0x00000000c002445c        0x0 krnl/bootmsg.32
 .data          0x00000000c002445c        0x4 krnl/c++.32
                0x00000000c002445c                __stack_chk_guard
 .data          0x00000000c0024460        0x0 krnl/cdefs.32
 .data          0x00000000c0024460        0x0 krnl/compat.32
 .data          0x00000000c0024460        0x0 krnl/computer.32
 .data          0x00000000c0024460      0x400 krnl/crc32.32
                0x00000000c0024460                KiPolyLookupCRC32
 .data          0x00000000c0024860       0x4d krnl/env.32
                0x00000000c0024860                defaultSysEnv
 .data          0x00000000c00248ad        0x0 krnl/gdt.32
 .data          0x00000000c00248ad        0x0 krnl/idle.32
 .data          0x00000000c00248ad        0x0 krnl/idt.32
 .data          0x00000000c00248ad        0x0 krnl/inlines.32
 *fill*         0x00000000c00248ad        0x3 
 .data          0x00000000c00248b0        0x4 krnl/kheap.32
 .data          0x00000000c00248b4        0x0 krnl/mailbox.32
 .data          0x00000000c00248b4        0x0 krnl/main.32
 .data          0x00000000c00248b4        0x0 krnl/mutex.32
 .data          0x00000000c00248b4        0x0 krnl/panic.32
 .data          0x00000000c00248b4        0x4 krnl/physmgr.32
                0x00000000c00248b4                Phys::bitmap
 .data          0x00000000c00248b8        0x0 krnl/pipe.32
 .data          0x00000000c00248b8        0x0 krnl/powctrl.32
 .data          0x00000000c00248b8        0x0 krnl/random.32
 .data          0x00000000c00248b8        0x0 krnl/resolve.32
 .data          0x00000000c00248b8        0x0 krnl/semaphore.32
 *fill*         0x00000000c00248b8        0x8 
 .data          0x00000000c00248c0       0x4c krnl/signal.32
                0x00000000c00248c0                KiDefaultSignalHandlers
 *fill*         0x00000000c002490c       0x14 
 .data          0x00000000c0024920      0x104 krnl/syscalls.32
                0x00000000c0024920                systemCallHandlers
 *fill*         0x00000000c0024a24       0x1c 
 .data          0x00000000c0024a40       0x60 krnl/terminal.32
                0x00000000c0024a40                VgaText::hiddenOut
                0x00000000c0024a60                ansiToVGAMappings
 .data          0x00000000c0024aa0        0x0 krnl/tss.32
 .data          0x00000000c0024aa0        0x4 krnl/unixfile.32
                0x00000000c0024aa0                UnixFile::nextFd
 .data          0x00000000c0024aa4       0x15 krnl/virtmgr.32
                0x00000000c0024aa4                Virt::pageAllocPtr
                0x00000000c0024aa8                Virt::bitmap
                0x00000000c0024aac                Virt::swapfileSectorsPerPage
                0x00000000c0024ab0                Virt::swapfileLength
                0x00000000c0024ab4                Virt::swapfileSector
                0x00000000c0024ab8                Virt::swapfileDrive
 *fill*         0x00000000c0024ab9        0x7 
 .data          0x00000000c0024ac0      0x100 reg/cm.32
                0x00000000c0024ac0                CmComponents
 .data          0x00000000c0024bc0        0x0 reg/registry.32
 .data          0x00000000c0024bc0        0x0 sys/eject.32
 .data          0x00000000c0024bc0        0x0 sys/exit.32
 .data          0x00000000c0024bc0        0x0 sys/getcwd.32
 .data          0x00000000c0024bc0        0x0 sys/getpid.32
 .data          0x00000000c0024bc0        0x0 sys/getramdata.32
 .data          0x00000000c0024bc0        0x0 sys/getvgaptr.32
 .data          0x00000000c0024bc0        0x0 sys/kill.32
 .data          0x00000000c0024bc0        0x0 sys/loaddll.32
 .data          0x00000000c0024bc0        0x0 sys/read.32
 .data          0x00000000c0024bc0        0x0 sys/registersignal.32
 .data          0x00000000c0024bc0        0x0 sys/registry.32
 .data          0x00000000c0024bc0        0x0 sys/sbrk.32
 .data          0x00000000c0024bc0        0x0 sys/setcwd.32
 .data          0x00000000c0024bc0        0x0 sys/settime.32
 .data          0x00000000c0024bc0        0x0 sys/symlink.32
 .data          0x00000000c0024bc0        0x0 sys/timezone.32
 .data          0x00000000c0024bc0        0x0 sys/truncate.32
 .data          0x00000000c0024bc0        0x0 sys/write.32
 .data          0x00000000c0024bc0        0x0 sys/wsbe.32
 .data          0x00000000c0024bc0        0x0 sys/yield.32
 .data          0x00000000c0024bc0        0x0 thr/elf.32
 .data          0x00000000c0024bc0        0x0 thr/exec.32
 .data          0x00000000c0024bc0        0x4 thr/prcssthr.32
                0x00000000c0024bc0                Thr::nextPID
 .data          0x00000000c0024bc4        0x0 vm86/vm8086.32
 *fill*         0x00000000c0024bc4       0x1c 
 .data          0x00000000c0024be0      0x2a0 arch/i386/hal.32
                0x00000000c0024be0                exceptionNames
 .data          0x00000000c0024e80        0x0 arch/i386/pic.32
 .data          0x00000000c0024e80        0x0 arch/i386/rtc.32
 .data          0x00000000c0024e80        0x0 arch/i386/vga.32
 .data          0x00000000c0024e80        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024e80        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024e80        0x1 fs/iso9660/vfslink.32
                0x00000000c0024e80                recentDriveletter
 .data          0x00000000c0024e81        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024e81        0x0 hal/sound/sndport.32
 .data          0x00000000c0024e81        0x0 hw/bus/isa.32
 .data          0x00000000c0024e81        0x0 hw/bus/pci.32
 .data          0x00000000c0024e81        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024e81        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024e81        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024e81        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024e81        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024e81        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024e81        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024e81        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024e81        0x0 hw/timer/pit.32
 .data          0x00000000c0024e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024e81        0x0 crtn.32
 .data          0x00000000c0024e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024e84        0x0
 .got           0x00000000c0024e84        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024e84        0x0
 .got.plt       0x00000000c0024e84        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024e84        0x0
 .igot.plt      0x00000000c0024e84        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024e84        0x0
 .tm_clone_table
                0x00000000c0024e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024e81      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024e81        0x3 
 .eh_frame      0x00000000c0024e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024e84       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0024edc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0024f1c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024f88       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0026000       0x7d
 *(userkernel)
 userkernel     0x00000000c0026000       0x52 krnl/signal.32
                0x00000000c0026000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002602c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0026052       0x2b krnl/syscalls.32
                0x00000000c0026052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0027000        0x1
 *(align_previous)
 align_previous
                0x00000000c0027000        0x1 krnl/signal.32
                0x00000000c0027000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0027004        0x0
 .rel.got       0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0027004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0027001     0x70e7
                0x00000000c0027001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0027001       0x1f 
 COMMON         0x00000000c0027020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0027020                dcache
                0x00000000c0027060                cdDriveLetter
                0x00000000c0027080                icache
 *(.bss)
 .bss           0x00000000c00270c0        0x0 crti.32
 .bss           0x00000000c00270c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00270e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00270e4       0x1c 
 .bss           0x00000000c0027100      0x378 krnl/malloc.32
 .bss           0x00000000c0027478        0x0 libk/ctype.32
 .bss           0x00000000c0027478        0x0 libk/string.32
 .bss           0x00000000c0027478        0x0 arch/i386/cc.32
 .bss           0x00000000c0027478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0027478        0x8 
 .bss           0x00000000c0027480       0x88 fs/fat/ff.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0027508       0x18 
 .bss           0x00000000c0027520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0027eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0027eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0027eb8        0x8 
 .bss           0x00000000c0027ec0     0x2444 fs/symlink.32
                0x00000000c0027ec0                kiNumWaitingRoomSymlinks
                0x00000000c0027ee0                kiNewlyCreatedIDs
                0x00000000c0027f00                kiNewlyCreatedSymlinks
                0x00000000c0028300                kiSymlinkHashTable
                0x00000000c002a300                kiBaseSymlinkID
 .bss           0x00000000c002a304        0x4 fs/vfs.32
                0x00000000c002a304                installedFilesystems
 .bss           0x00000000c002a308        0x0 hal/bus.32
 .bss           0x00000000c002a308        0x0 hal/buzzer.32
 .bss           0x00000000c002a308        0x8 hal/clock.32
                0x00000000c002a308                User::dstOn
                0x00000000c002a309                User::timezoneHalfHourOffset
                0x00000000c002a30c                User::timezoneHourOffset
 .bss           0x00000000c002a310        0x0 hal/device.32
 .bss           0x00000000c002a310        0x0 hal/diskctrl.32
 .bss           0x00000000c002a310        0x0 hal/diskphys.32
 .bss           0x00000000c002a310        0x0 hal/fpu.32
 *fill*         0x00000000c002a310       0x10 
 .bss           0x00000000c002a320     0x2000 hal/intctrl.32
                0x00000000c002a320                INT_contexts
                0x00000000c002b320                INT_handlers
 .bss           0x00000000c002c320      0x428 hal/keybrd.32
                0x00000000c002c320                keyboardWaitingTaskList
                0x00000000c002c324                keyboardSetupYet
                0x00000000c002c328                guiKeyboardHandler
                0x00000000c002c32c                kiKeyboardGUILock
                0x00000000c002c32d                kiKeyboardGUILatch
                0x00000000c002c340                keystates
 *fill*         0x00000000c002c748       0x18 
 .bss           0x00000000c002c760       0x88 hal/logidisk.32
                0x00000000c002c760                diskAssignments
                0x00000000c002c780                disks
 .bss           0x00000000c002c7e8        0x4 hal/mouse.32
                0x00000000c002c7e8                guiMouseHandler
 .bss           0x00000000c002c7ec        0x0 hal/nic.32
 .bss           0x00000000c002c7ec        0x0 hal/partition.32
 .bss           0x00000000c002c7ec        0x0 hal/serial.32
 .bss           0x00000000c002c7ec        0x4 hal/timer.32
                0x00000000c002c7ec                milliTenthsSinceBoot
 .bss           0x00000000c002c7f0        0x0 hal/vcache.32
 .bss           0x00000000c002c7f0        0x4 hal/video.32
                0x00000000c002c7f0                screen
 *fill*         0x00000000c002c7f4        0xc 
 .bss           0x00000000c002c800      0x480 hw/acpi.32
                0x00000000c002c800                systemSleepFunction
                0x00000000c002c804                systemResetFunction
                0x00000000c002c808                systemShutdownFunction
                0x00000000c002c80c                nextACPITable
                0x00000000c002c820                acpiTables
                0x00000000c002ca20                usingXSDT
                0x00000000c002ca24                MADTpointer
                0x00000000c002ca28                RSDTpointer
                0x00000000c002ca2c                RSDPpointer
                0x00000000c002ca30                nextAPICNMI
                0x00000000c002ca40                apicNMIInfo
                0x00000000c002cac0                legacyIRQFlags
                0x00000000c002cae0                ioapicDiscoveryNumber
                0x00000000c002cb00                ioapicFoundInMADT
                0x00000000c002cb20                ioapicAddresses
                0x00000000c002cba0                ioapicGSIBase
                0x00000000c002cc20                processorDiscoveryNumber
                0x00000000c002cc40                matchingAPICID
                0x00000000c002cc60                processorID
 .bss           0x00000000c002cc80       0x10 hw/cpu.32
                0x00000000c002cc80                lastD
                0x00000000c002cc84                lastC
                0x00000000c002cc88                lastB
                0x00000000c002cc8c                lastA
 *fill*         0x00000000c002cc90       0x10 
 .bss           0x00000000c002cca0       0xe0 krnl/atexit.32
                0x00000000c002cca0                KiNextAtexitHandler
                0x00000000c002ccc0                KiAtexitContexts
                0x00000000c002cd20                KiAtexitHandlers
 .bss           0x00000000c002cd80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002cd80        0x0 krnl/c++.32
 .bss           0x00000000c002cd80        0x0 krnl/cdefs.32
 .bss           0x00000000c002cd80        0x0 krnl/compat.32
 .bss           0x00000000c002cd80        0x6 krnl/computer.32
                0x00000000c002cd80                Krnl::computer
                0x00000000c002cd84                KeIsPreemptionOn
                0x00000000c002cd85                KeIsSchedulingOn
 .bss           0x00000000c002cd86        0x0 krnl/crc32.32
 *fill*         0x00000000c002cd86        0x2 
 .bss           0x00000000c002cd88        0x8 krnl/env.32
                0x00000000c002cd88                KeUserEnv
                0x00000000c002cd8c                KeSystemEnv
 .bss           0x00000000c002cd90        0x6 krnl/gdt.32
                0x00000000c002cd90                gdtDescr
 .bss           0x00000000c002cd96        0x0 krnl/idle.32
 *fill*         0x00000000c002cd96        0x2 
 .bss           0x00000000c002cd98        0x6 krnl/idt.32
                0x00000000c002cd98                idtDescr
 .bss           0x00000000c002cd9e        0x0 krnl/inlines.32
 .bss           0x00000000c002cd9e        0x0 krnl/kheap.32
 .bss           0x00000000c002cd9e        0x0 krnl/mailbox.32
 *fill*         0x00000000c002cd9e        0x2 
 .bss           0x00000000c002cda0        0x4 krnl/main.32
                0x00000000c002cda0                sysBootSettings
 .bss           0x00000000c002cda4        0x0 krnl/mutex.32
 .bss           0x00000000c002cda4        0x1 krnl/panic.32
                0x00000000c002cda4                KeIsKernelInPanic
 *fill*         0x00000000c002cda5        0x3 
 .bss           0x00000000c002cda8       0x29 krnl/physmgr.32
                0x00000000c002cda8                Phys::forbidEvictions
                0x00000000c002cdac                Phys::currentPagePointer
                0x00000000c002cdb0                Phys::highestMem
                0x00000000c002cdb4                Phys::oldPercent
                0x00000000c002cdb8                Phys::usedPages
                0x00000000c002cdbc                Phys::usablePages
                0x00000000c002cdc0                Phys::dmaUsage
 .bss           0x00000000c002cdd1        0x0 krnl/pipe.32
 *fill*         0x00000000c002cdd1        0xf 
 .bss           0x00000000c002cde0       0x48 krnl/powctrl.32
                0x00000000c002cde0                powCtrlOnBattery
                0x00000000c002ce00                currentPowerSettings
                0x00000000c002ce24                secondsSinceLastUserIO
 .bss           0x00000000c002ce28        0x8 krnl/random.32
                0x00000000c002ce28                kiRandSeed
 .bss           0x00000000c002ce30        0x0 krnl/resolve.32
 .bss           0x00000000c002ce30        0x0 krnl/semaphore.32
 .bss           0x00000000c002ce30        0x0 krnl/signal.32
 .bss           0x00000000c002ce30        0x0 krnl/syscalls.32
 .bss           0x00000000c002ce30        0x9 krnl/terminal.32
                0x00000000c002ce30                terminalCycle
                0x00000000c002ce34                activeTerminal
                0x00000000c002ce38                VgaText::graphicMode
 *fill*         0x00000000c002ce39        0x1 
 .bss           0x00000000c002ce3a        0x2 krnl/tss.32
                0x00000000c002ce3a                doubleFaultSelector
 *fill*         0x00000000c002ce3c        0x4 
 .bss           0x00000000c002ce40       0x84 krnl/unixfile.32
                0x00000000c002ce40                sfileLpt
                0x00000000c002ce80                sfileCom
                0x00000000c002cea4                sfileNul
                0x00000000c002cea8                sfilePnt
                0x00000000c002ceac                sfileAux
                0x00000000c002ceb0                sfileCon
                0x00000000c002ceb4                initialFilesAdded
                0x00000000c002ceb8                unixFileLinkedList
 .bss           0x00000000c002cec4       0x10 krnl/virtmgr.32
                0x00000000c002cec4                twswaps
                0x00000000c002cec8                swapBalance
                0x00000000c002cecc                Virt::swapfileBitmap
                0x00000000c002ced0                firstVAS
 .bss           0x00000000c002ced4        0x4 reg/cm.32
 .bss           0x00000000c002ced8        0x0 reg/registry.32
 .bss           0x00000000c002ced8        0x0 sys/eject.32
 .bss           0x00000000c002ced8        0x0 sys/exit.32
 .bss           0x00000000c002ced8        0x0 sys/getcwd.32
 .bss           0x00000000c002ced8        0x0 sys/getpid.32
 .bss           0x00000000c002ced8        0x0 sys/getramdata.32
 .bss           0x00000000c002ced8        0x0 sys/getvgaptr.32
 .bss           0x00000000c002ced8        0x0 sys/kill.32
 .bss           0x00000000c002ced8        0x0 sys/loaddll.32
 .bss           0x00000000c002ced8        0x0 sys/read.32
 .bss           0x00000000c002ced8        0x0 sys/registersignal.32
 .bss           0x00000000c002ced8        0x0 sys/registry.32
 .bss           0x00000000c002ced8        0x0 sys/sbrk.32
 .bss           0x00000000c002ced8        0x0 sys/setcwd.32
 .bss           0x00000000c002ced8        0x0 sys/settime.32
 .bss           0x00000000c002ced8        0x0 sys/symlink.32
 .bss           0x00000000c002ced8        0x0 sys/timezone.32
 .bss           0x00000000c002ced8        0x0 sys/truncate.32
 .bss           0x00000000c002ced8        0x0 sys/write.32
 .bss           0x00000000c002ced8        0x0 sys/wsbe.32
 .bss           0x00000000c002ced8        0x0 sys/yield.32
 *fill*         0x00000000c002ced8        0x8 
 .bss           0x00000000c002cee0      0x7a4 thr/elf.32
                0x00000000c002cee0                Thr::driverLookupNext
                0x00000000c002cf00                Thr::driverLookupLen
                0x00000000c002d100                Thr::driverLookupAddr
                0x00000000c002d300                Thr::driverNameLookup
                0x00000000c002d500                Thr::kernelSymbols
                0x00000000c002d580                Thr::kernelStringTable
                0x00000000c002d600                Thr::kernelSymbolTable
                0x00000000c002d680                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002d684        0x0 thr/exec.32
 *fill*         0x00000000c002d684        0x4 
 .bss           0x00000000c002d688       0x70 thr/prcssthr.32
                0x00000000c002d688                KiRestorePreemptionValue
                0x00000000c002d68c                KiPreemptionDisableCounter
                0x00000000c002d690                cleanerThread
                0x00000000c002d694                weNeedTheCleanerToNotBlock
                0x00000000c002d698                retValLockStuff
                0x00000000c002d69c                retValSchedLock
                0x00000000c002d6a0                lockStuffLock
                0x00000000c002d6a4                schedulerLock
                0x00000000c002d6a8                taskSwitchesPostponedFlag
                0x00000000c002d6ac                postponeTaskSwitchesCounter
                0x00000000c002d6b0                irqDisableCounter
                0x00000000c002d6b4                terminatedTaskList
                0x00000000c002d6c0                sleepingTaskList
                0x00000000c002d6cc                taskList
                0x00000000c002d6d8                kernelProcess
 *fill*         0x00000000c002d6f8        0x8 
 .bss           0x00000000c002d700       0x40 vm86/vm8086.32
                0x00000000c002d700                Vm::started8086Yet
                0x00000000c002d704                Vm::vmRetV
                0x00000000c002d708                Vm::vmDone
                0x00000000c002d709                Vm::vmReady
                0x00000000c002d70c                Vm::vm86Thread
                0x00000000c002d710                Vm::vmToHostCommsPtr
                0x00000000c002d720                Vm::vmToHostComms
 .bss           0x00000000c002d740       0x18 arch/i386/hal.32
                0x00000000c002d740                apic
                0x00000000c002d744                guiPanicHandler
                0x00000000c002d748                fpuOwner
                0x00000000c002d74c                coproLoadFunc
                0x00000000c002d750                coproSaveFunc
                0x00000000c002d754                gpFaultIntercept
 .bss           0x00000000c002d758        0x0 arch/i386/pic.32
 .bss           0x00000000c002d758        0x2 arch/i386/rtc.32
 .bss           0x00000000c002d75a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002d75a        0x6 
 .bss           0x00000000c002d760       0xf0 fs/fat/vfslink.32
                0x00000000c002d760                FAT::fats
                0x00000000c002d780                FAT::vfsToFatRemaps
                0x00000000c002d800                fatToVFSRemaps
 .bss           0x00000000c002d850        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002d850       0x10 
 .bss           0x00000000c002d860      0x820 fs/iso9660/vfslink.32
                0x00000000c002d860                iso9660Owner
                0x00000000c002d864                recentSector
                0x00000000c002d880                recentBuffer
 .bss           0x00000000c002e080        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002e080        0x0 hal/sound/sndport.32
 .bss           0x00000000c002e080        0x0 hw/bus/isa.32
 .bss           0x00000000c002e080        0xd hw/bus/pci.32
                0x00000000c002e080                thePCI
 .bss           0x00000000c002e08d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002e08d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002e08d        0x3 
 .bss           0x00000000c002e090        0x8 hw/diskphys/ata.32
                0x00000000c002e090                ataSectorsWritten
                0x00000000c002e094                ataSectorsRead
 .bss           0x00000000c002e098        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002e098        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002e098        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002e098        0x8 
 .bss           0x00000000c002e0a0       0x41 hw/intctrl/apic.32
                0x00000000c002e0a0                noOfIOAPICs
                0x00000000c002e0c0                ioapics
                0x00000000c002e0e0                IOAPICsSetupYet
 .bss           0x00000000c002e0e1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002e0e1        0x3 
 .bss           0x00000000c002e0e4        0x4 hw/timer/pit.32
                0x00000000c002e0e4                pitFreq
 .bss           0x00000000c002e0e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002e0e8        0x0 crtn.32
 .bss           0x00000000c002e0e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002e0e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002e0e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002e0e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002e0e8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00351cf                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
