Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f35a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6c3 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca8                Krnl::firstTask()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006e96                Computer::setBootMessage(char const*)
                0x00000000c0006e98                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070ec                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007128                Computer::shutdown()
                0x00000000c0007140                Computer::restart()
                0x00000000c0007158                Computer::sleep()
                0x00000000c000716c                Computer::nmiEnabled()
                0x00000000c0007178                Computer::readCMOS(unsigned char)
                0x00000000c0007196                Computer::enableNMI(bool)
                0x00000000c00071ae                Computer::open(int, int, void*)
                0x00000000c0007282                Computer::disableNMI()
                0x00000000c0007292                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072b6                Computer::handleNMI()
 *fill*         0x00000000c0007321        0x1 
 .text          0x00000000c0007322      0x1db core/gdt.32
                0x00000000c0007322                GDTEntry::setBase(unsigned int)
                0x00000000c000733e                GDTEntry::setLimit(unsigned int)
                0x00000000c000735c                GDT::GDT()
                0x00000000c000735c                GDT::GDT()
                0x00000000c0007372                GDT::addEntry(GDTEntry)
                0x00000000c0007394                GDT::getNumberOfEntries()
                0x00000000c000739c                GDT::flush()
                0x00000000c00073be                GDT::setup()
 .text          0x00000000c00074fd       0x1d core/idle.32
                0x00000000c00074fd                idleFunction(void*)
 *fill*         0x00000000c000751a        0x2 
 .text          0x00000000c000751c      0x46c core/idt.32
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c0007596                IDTEntry::setOffset(unsigned int)
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ae                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075b6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007608                IDT::flush()
                0x00000000c0007622                IDT::setup()
 .text          0x00000000c0007988      0x188 core/kheap.32
                0x00000000c0007988                sbrk
                0x00000000c0007a1f                mmap
                0x00000000c0007a35                munmap
                0x00000000c0007a4b                liballoc_lock()
                0x00000000c0007a59                liballoc_unlock()
                0x00000000c0007a6f                liballoc_alloc(int)
                0x00000000c0007a87                liballoc_free(void*, int)
                0x00000000c0007aa2                realloc
                0x00000000c0007ab6                malloc
                0x00000000c0007ac6                free
                0x00000000c0007ad6                rfree
                0x00000000c0007ae6                calloc
 .text          0x00000000c0007b10       0xc7 core/main.32
                0x00000000c0007b10                KeEntryPoint
 .text          0x00000000c0007bd7      0x644 core/physmgr.32
                0x00000000c0007bd7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cbf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfa                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3a                Phys::getPageState(unsigned long)
                0x00000000c0007d56                Phys::freePage(unsigned long)
                0x00000000c0007dbf                Phys::allocatePage()
                0x00000000c0007e8e                Phys::allocateContiguousPages(int)
                0x00000000c0007ef5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f2d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000821b        0x1 
 .text          0x00000000c000821c      0x273 core/pipe.32
                0x00000000c000821c                Pipe::isAtty()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008244                Pipe::~Pipe()
                0x00000000c000826c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000832c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xab3 core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a60                VgaText::putx(unsigned int)
                0x00000000c0008aa6                VgaText::puts(char const*)
                0x00000000c0008acc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b18                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008db6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f42                VgaText::doUpdate()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x1a1 core/tss.32
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f54                TSS::setESP(unsigned long)
                0x00000000c0008f68                TSS::flush()
                0x00000000c0008f88                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090e5        0x1 
 .text          0x00000000c00090e6      0x4ca core/unixfile.32
                0x00000000c00090e6                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000913c                ReservedFilename::isAtty()
                0x00000000c0009158                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091b6                UnixFile::getFileDescriptor()
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c0009440                UnixFile::~UnixFile()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c000948c                ReservedFilename::~ReservedFilename()
                0x00000000c00094b3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b0     0x1218 core/virtmgr.32
                0x00000000c00095b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ea                Virt::getPageState(unsigned long)
                0x00000000c000960d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009732                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009755                Virt::swapIDToSector(unsigned long)
                0x00000000c000976b                Virt::allocateSwapfilePage()
                0x00000000c00097eb                Virt::virtualMemorySetup()
                0x00000000c000983c                Virt::setupPageSwapping(int)
                0x00000000c00098ae                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098de                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000992b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a68                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a8c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aa6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009b52                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b86                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009d20                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e24                VAS::allocatePages(int, int)
                0x00000000c0009f1a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f72                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a2b2                VAS::evict(unsigned long)
                0x00000000c000a390                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a52a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a59e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ca                VAS::scanForEviction()
                0x00000000c000a6cd                mapVASFirstTime
 .text          0x00000000c000a7c8       0x5f coreobjs/c++.32
                0x00000000c000a7c8                __cxa_atexit
                0x00000000c000a7cb                __cxa_finalize
                0x00000000c000a7cc                __stack_chk_fail
                0x00000000c000a802                __cxa_pure_virtual
                0x00000000c000a813                operator new[](unsigned long)
                0x00000000c000a818                operator delete(void*, unsigned long)
                0x00000000c000a81d                operator delete[](void*)
                0x00000000c000a822                operator delete[](void*, unsigned long)
 .text          0x00000000c000a827      0x254 dbg/kconsole.32
                0x00000000c000a827                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8c7                Dbg::logc(char)
                0x00000000c000a8e7                Dbg::logs(char*)
                0x00000000c000a906                Dbg::logWriteInt(unsigned int)
                0x00000000c000a924                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a945                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa7b        0x1 
 .text          0x00000000c000aa7c      0x2d4 dbg/usban.32
                0x00000000c000aa7c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aae8                __ubsan_handle_type_mismatch_v1
                0x00000000c000abc4                __ubsan_handle_pointer_overflow
                0x00000000c000abf0                __ubsan_handle_out_of_bounds
                0x00000000c000ac1c                __ubsan_handle_add_overflow
                0x00000000c000ac48                __ubsan_handle_load_invalid_value
                0x00000000c000ac74                __ubsan_handle_divrem_overflow
                0x00000000c000aca0                __ubsan_handle_mul_overflow
                0x00000000c000accc                __ubsan_handle_sub_overflow
                0x00000000c000acf8                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad24                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad50      0x55e fs/symlink.32
                0x00000000c000ad50                KiCreateSymlinkID()
                0x00000000c000adbd                KiFlushSymlinkChanges()
                0x00000000c000ae90                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae95                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000af04                KiIsSymlinkRegistered(char const*)
                0x00000000c000af09                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b0bb                KeCreateSymlink(char const*, char const*)
                0x00000000c000b1f8                KeInitialiseSymlinks()
 .text          0x00000000c000b2ae      0xcb6 fs/vfs.32
                0x00000000c000b2ae                File::read(unsigned long long, void*, int*)
                0x00000000c000b306                File::write(unsigned long long, void*, int*)
                0x00000000c000b35e                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b3b6                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b3e4                File::isAtty()
                0x00000000c000b3e8                Directory::isAtty()
                0x00000000c000b3ec                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b3f2                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b3f8                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b3fe                File::~File()
                0x00000000c000b3fe                File::~File()
                0x00000000c000b422                File::~File()
                0x00000000c000b44c                Directory::~Directory()
                0x00000000c000b44c                Directory::~Directory()
                0x00000000c000b470                Directory::~Directory()
                0x00000000c000b49a                Filesystem::Filesystem()
                0x00000000c000b49a                Filesystem::Filesystem()
                0x00000000c000b4be                Filesystem::~Filesystem()
                0x00000000c000b4be                Filesystem::~Filesystem()
                0x00000000c000b4cc                Filesystem::~Filesystem()
                0x00000000c000b4f0                Fs::getcwd(Process*, char*, int)
                0x00000000c000b51a                Fs::initVFS()
                0x00000000c000b544                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b6fa                File::File(char const*, Process*)
                0x00000000c000b6fa                File::File(char const*, Process*)
                0x00000000c000b7b6                File::open(FileOpenMode)
                0x00000000c000b814                File::close()
                0x00000000c000b874                File::seek(unsigned long long)
                0x00000000c000b8ca                File::truncate(unsigned long long)
                0x00000000c000b920                File::tell(unsigned long long*)
                0x00000000c000b970                File::rewind()
                0x00000000c000b984                File::unlink()
                0x00000000c000b9d0                File::rename(char const*)
                0x00000000c000ba1e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ba7a                File::exists()
                0x00000000c000bab8                File::stat(unsigned long long*, bool*)
                0x00000000c000bb19                Fs::setcwd(Process*, char*)
                0x00000000c000bc76                Directory::Directory(char const*, Process*)
                0x00000000c000bc76                Directory::Directory(char const*, Process*)
                0x00000000c000bd32                Directory::open()
                0x00000000c000bd8e                Directory::close()
                0x00000000c000bdee                Directory::unlink()
                0x00000000c000be3a                Directory::rename(char const*)
                0x00000000c000be88                Directory::exists()
                0x00000000c000bec6                Directory::read(dirent*)
                0x00000000c000bf12                Directory::create()
                0x00000000c000bf5e                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000bf64       0x86 hal/bus.32
                0x00000000c000bf64                Bus::Bus(char const*)
                0x00000000c000bf64                Bus::Bus(char const*)
                0x00000000c000bf9c                Bus::~Bus()
                0x00000000c000bf9c                Bus::~Bus()
                0x00000000c000bfc0                Bus::~Bus()
 .text          0x00000000c000bfea       0x96 hal/buzzer.32
                0x00000000c000bfea                beepThread(void*)
                0x00000000c000c027                Krnl::beep(int, int, bool)
 .text          0x00000000c000c080      0x45f hal/clock.32
                0x00000000c000c080                User::loadClockSettings(int)
                0x00000000c000c0d2                Clock::Clock(char const*)
                0x00000000c000c0d2                Clock::Clock(char const*)
                0x00000000c000c108                Clock::~Clock()
                0x00000000c000c108                Clock::~Clock()
                0x00000000c000c12c                Clock::~Clock()
                0x00000000c000c156                Clock::timeInSecondsLocal()
                0x00000000c000c19e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c1f7                datetimeToSeconds(datetime_t)
                0x00000000c000c316                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c376                secondsToDatetime(unsigned long long)
                0x00000000c000c4ba                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c4df        0x1 
 .text          0x00000000c000c4e0      0x464 hal/device.32
                0x00000000c000c4e0                Device::hibernate()
                0x00000000c000c4e2                Device::wake()
                0x00000000c000c4e4                Device::detect()
                0x00000000c000c4e6                Device::disableLegacy()
                0x00000000c000c4e8                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c4ea                DriverlessDevice::close(int, int, void*)
                0x00000000c000c4ee                DriverlessDevice::detect()
                0x00000000c000c4f0                DriverlessDevice::open(int, int, void*)
                0x00000000c000c504                Device::~Device()
                0x00000000c000c504                Device::~Device()
                0x00000000c000c512                Device::~Device()
                0x00000000c000c53a                Device::findAndLoadDriver()
                0x00000000c000c548                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c56e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c5ae                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c5d8                Device::getParent()
                0x00000000c000c5e4                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c602                Device::addChild(Device*)
                0x00000000c000c646                Device::removeAllChildren()
                0x00000000c000c68c                Device::hibernateAll()
                0x00000000c000c6bc                Device::wakeAll()
                0x00000000c000c6ec                Device::detectAll()
                0x00000000c000c71c                Device::disableLegacyAll()
                0x00000000c000c71e                Device::loadDriversForAll()
                0x00000000c000c720                Device::closeAll()
                0x00000000c000c756                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c78c                Device::setName(char const*)
                0x00000000c000c79a                Device::Device(char const*)
                0x00000000c000c79a                Device::Device(char const*)
                0x00000000c000c896                Device::getName()
                0x00000000c000c8a0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c8a0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c8d6                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c91a                getDevicesOfType(DeviceType)
 .text          0x00000000c000c944       0x86 hal/diskctrl.32
                0x00000000c000c944                HardDiskController::HardDiskController(char const*)
                0x00000000c000c944                HardDiskController::HardDiskController(char const*)
                0x00000000c000c97c                HardDiskController::~HardDiskController()
                0x00000000c000c97c                HardDiskController::~HardDiskController()
                0x00000000c000c9a0                HardDiskController::~HardDiskController()
 .text          0x00000000c000c9ca       0xe2 hal/diskphys.32
                0x00000000c000c9ca                PhysicalDisk::eject()
                0x00000000c000c9ce                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c9ce                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ca36                PhysicalDisk::startCache()
                0x00000000c000ca5e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ca5e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ca82                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000caac        0x0 hal/fpu.32
 .text          0x00000000c000caac      0x359 hal/intctrl.32
                0x00000000c000caac                int_handler
                0x00000000c000cb36                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cb80                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ccb4                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000cce8                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000cd66                setupINTS()
                0x00000000c000cdc3                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000ce05        0x1 
 .text          0x00000000c000ce06      0x8be hal/keybrd.32
                0x00000000c000ce06                startGUI(void*)
                0x00000000c000ce74                startGUIVESA(void*)
                0x00000000c000cee2                sendKeyToTerminal(unsigned char)
                0x00000000c000cfbd                sendKeyboardToken(KeyboardToken)
                0x00000000c000d4a7                clearInternalKeybuffer(VgaText*)
                0x00000000c000d4dc                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d63a                Keyboard::Keyboard(char const*)
                0x00000000c000d63a                Keyboard::Keyboard(char const*)
                0x00000000c000d676                Keyboard::~Keyboard()
                0x00000000c000d676                Keyboard::~Keyboard()
                0x00000000c000d69a                Keyboard::~Keyboard()
 .text          0x00000000c000d6c4      0x3f8 hal/logidisk.32
                0x00000000c000d6c4                LogicalDisk::close(int, int, void*)
                0x00000000c000d6c8                LogicalDisk::~LogicalDisk()
                0x00000000c000d6c8                LogicalDisk::~LogicalDisk()
                0x00000000c000d6ec                LogicalDisk::~LogicalDisk()
                0x00000000c000d716                LogicalDisk::open(int, int, void*)
                0x00000000c000d72a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d762                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d7a8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d7a8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d868                LogicalDisk::assignDriveLetter()
                0x00000000c000d922                LogicalDisk::mount()
                0x00000000c000d96a                LogicalDisk::unmount()
                0x00000000c000d97a                LogicalDisk::eject()
                0x00000000c000d98e                LogicalDisk::unassignDriveLetter()
                0x00000000c000d9e4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000da50                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000dabc       0x86 hal/mouse.32
                0x00000000c000dabc                Mouse::Mouse(char const*)
                0x00000000c000dabc                Mouse::Mouse(char const*)
                0x00000000c000daf4                Mouse::~Mouse()
                0x00000000c000daf4                Mouse::~Mouse()
                0x00000000c000db18                Mouse::~Mouse()
 .text          0x00000000c000db42       0x90 hal/nic.32
                0x00000000c000db42                NIC::getMAC()
                0x00000000c000db48                NIC::write(int, unsigned char*, int*)
                0x00000000c000db4e                NIC::NIC(char const*)
                0x00000000c000db4e                NIC::NIC(char const*)
                0x00000000c000db84                NIC::~NIC()
                0x00000000c000db84                NIC::~NIC()
                0x00000000c000dba8                NIC::~NIC()
 .text          0x00000000c000dbd2      0x33b hal/partition.32
                0x00000000c000dbd2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc7a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000df0d        0x3 
 .text          0x00000000c000df10       0x86 hal/serial.32
                0x00000000c000df10                Serial::Serial(char const*)
                0x00000000c000df10                Serial::Serial(char const*)
                0x00000000c000df48                Serial::~Serial()
                0x00000000c000df48                Serial::~Serial()
                0x00000000c000df6c                Serial::~Serial()
 *fill*         0x00000000c000df96        0x2 
 .text          0x00000000c000df98      0x234 hal/timer.32
                0x00000000c000df98                Timer::Timer(char const*)
                0x00000000c000df98                Timer::Timer(char const*)
                0x00000000c000dfd0                Timer::~Timer()
                0x00000000c000dfd0                Timer::~Timer()
                0x00000000c000dff4                Timer::~Timer()
                0x00000000c000e01e                Timer::read()
                0x00000000c000e029                setupTimer(int)
                0x00000000c000e064                timerHandler(unsigned int)
 .text          0x00000000c000e1cc      0x444 hal/vcache.32
                0x00000000c000e1cc                VCache::VCache(PhysicalDisk*)
                0x00000000c000e1cc                VCache::VCache(PhysicalDisk*)
                0x00000000c000e33c                VCache::invalidateReadBuffer()
                0x00000000c000e34c                VCache::writeWriteBuffer()
                0x00000000c000e398                VCache::~VCache()
                0x00000000c000e398                VCache::~VCache()
                0x00000000c000e3f0                VCache::~VCache()
                0x00000000c000e418                VCache::write(unsigned long long, int, void*)
                0x00000000c000e506                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e610      0x4c7 hal/video.32
                0x00000000c000e610                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e65c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e6cc                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e74a                Video::clearScreen(unsigned int)
                0x00000000c000e77e                Video::putpixel(int, int, unsigned int)
                0x00000000c000e78c                Video::readPixelApprox(int, int)
                0x00000000c000e7a0                Video::Video(char const*)
                0x00000000c000e7a0                Video::Video(char const*)
                0x00000000c000e7d6                Video::~Video()
                0x00000000c000e7d6                Video::~Video()
                0x00000000c000e7fa                Video::~Video()
                0x00000000c000e824                Video::isMonochrome()
                0x00000000c000e830                Video::getWidth()
                0x00000000c000e83c                Video::getHeight()
                0x00000000c000e848                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e904                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ea6c                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ead7        0x1 
 .text          0x00000000c000ead8     0x138b hw/acpi.32
                0x00000000c000ead8                ACPI::close(int, int, void*)
                0x00000000c000eb8c                findRSDP()
                0x00000000c000ec24                loadACPITables(unsigned char*)
                0x00000000c000ee90                findRSDT(unsigned char*)
                0x00000000c000efe8                findDataTable(unsigned char*, char*)
                0x00000000c000f068                scanMADT()
                0x00000000c000f520                ACPI::ACPI()
                0x00000000c000f520                ACPI::ACPI()
                0x00000000c000f574                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f670                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f73c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f744                ACPI::detectPCI()
                0x00000000c000f964                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f9ac                ACPI::sleep()
                0x00000000c000f9c8                ACPI::open(int, int, void*)
 *fill*         0x00000000c000fe63        0x1 
 .text          0x00000000c000fe64      0xbc5 hw/cpu.32
                0x00000000c000fe64                CPU::close(int, int, void*)
                0x00000000c000fe68                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000fe84                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000fe9c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ff10                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000ff94                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000ffc2                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000fff0                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001001e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c001004c                CPU::CPU()
                0x00000000c001004c                CPU::CPU()
                0x00000000c00100da                CPU::displayFeatures()
                0x00000000c00100dc                CPU::detectFeatures()
                0x00000000c00107b0                CPU::setupSMEP()
                0x00000000c00107bc                CPU::setupUMIP()
                0x00000000c00107c6                CPU::setupTSC()
                0x00000000c00107d0                CPU::setupLargePages()
                0x00000000c00107da                CPU::setupPAT()
                0x00000000c0010816                CPU::setupMTRR()
                0x00000000c0010818                CPU::setupGlobalPages()
                0x00000000c0010822                CPU::allowUsermodeDataAccess()
                0x00000000c0010834                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010846                CPU::setupSMAP()
                0x00000000c0010854                CPU::setupFeatures()
                0x00000000c0010920                CPU::open(int, int, void*)
 .text          0x00000000c0010a29       0x91 krnl/atexit.32
                0x00000000c0010a29                KeInitialiseAtexit()
                0x00000000c0010a4b                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010a7f                KeExecuteAtexit()
 .text          0x00000000c0010aba       0xdf krnl/bootmsg.32
                0x00000000c0010aba                KeDisplaySplashScreen()
                0x00000000c0010b36                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010b99        0x3 
 .text          0x00000000c0010b9c       0x1d krnl/compat.32
                0x00000000c0010b9c                Krnl::handlePowerButton()
                0x00000000c0010bac                Krnl::handleSleepButton()
 *fill*         0x00000000c0010bb9        0x1 
 .text          0x00000000c0010bba      0x5bf krnl/env.32
                0x00000000c0010bba                EnvVarContainer::getEnv(char const*)
                0x00000000c0010bf8                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010cba                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010cbc                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010ee0                EnvVarContainer::__loadSystem()
                0x00000000c0010efa                EnvVarContainer::__loadUser()
                0x00000000c0010efc                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010efc                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010f1e                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010f1e                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010f4e                KeGetEnv(Process*, char const*)
                0x00000000c0010fb3                KeSetEnvSystem(char const*, char const*)
                0x00000000c0010fcd                KeSetEnvUser(char const*, char const*)
                0x00000000c0010fec                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0010fff                KeDeleteEnvSystem(char const*)
                0x00000000c0011000                KeDeleteEnvUser(char const*)
                0x00000000c0011001                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0011002                KeNewProcessEnv(Process*)
                0x00000000c0011024                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0011070                KeLoadSystemEnv()
                0x00000000c001109e                KeLoadUserEnv()
                0x00000000c00110c4                KeFlushEnv()
                0x00000000c00110c5                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00110e5                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011179       0x94 krnl/inlines.32
                0x00000000c0011179                CPU::current()
                0x00000000c0011185                operator new(unsigned long)
                0x00000000c001118a                operator delete(void*)
                0x00000000c001118f                disableIRQs()
                0x00000000c0011191                enableIRQs()
                0x00000000c0011193                lockScheduler()
                0x00000000c001119b                unlockScheduler()
                0x00000000c00111aa                lockStuff()
                0x00000000c00111b8                unlockStuff()
                0x00000000c00111f2                Virt::getAKernelVAS()
                0x00000000c00111f8                __not_memcpy
 .text          0x00000000c001120d        0xc krnl/panic.32
                0x00000000c001120d                KePanic(char const*)
 .text          0x00000000c0011219      0x142 krnl/powctrl.32
                0x00000000c0011219                KePowerThread(void*)
                0x00000000c0011247                KeChangePowerSettings(PowerSettings)
                0x00000000c001125d                KeUserIOReceived()
                0x00000000c0011268                KeHandlePowerButton()
                0x00000000c001129d                KeHandleSleepButton()
                0x00000000c00112d2                KeSetupPowerManager()
 .text          0x00000000c001135b       0x9d krnl/random.32
                0x00000000c001135b                KeRand()
                0x00000000c001139d                KeSeedRand(unsigned int)
                0x00000000c00113c6                KeInitRand()
 .text          0x00000000c00113f8      0x1bc krnl/resolve.32
                0x00000000c00113f8                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00115b4      0x322 krnl/signal.32
                0x00000000c00115b4                KiSigKill(int)
                0x00000000c00115c8                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00115c9                KiDefaultSignalHandlerPause(int)
                0x00000000c00115f5                KiDefaultSignalHandlerResume(int)
                0x00000000c0011621                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011626                KeInitSignals()
                0x00000000c0011678                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00116ae                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001172b                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011822                KiCheckSignalZ
                0x00000000c0011864                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c001189f                KiFinishSignalZ
 .text          0x00000000c00118d6      0xc61 krnl/syscalls.32
                0x00000000c00118d6                SysSeekDir(regs*)
                0x00000000c00118db                SysTellDir(regs*)
                0x00000000c00118e0                SysVerify(regs*)
                0x00000000c00118ea                SysGetArgc(regs*)
                0x00000000c00118fe                SysTTYName(regs*)
                0x00000000c0011906                SysFormatDisk(regs*)
                0x00000000c001197d                SysSetDiskVolumeLabel(regs*)
                0x00000000c00119d1                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011a2a                SysShutdown(regs*)
                0x00000000c0011a88                SysRealpath(regs*)
                0x00000000c0011acd                SysReadDir(regs*)
                0x00000000c0011b4d                SysIsATTY(regs*)
                0x00000000c0011ba7                SysSeek(regs*)
                0x00000000c0011bfe                SysTell(regs*)
                0x00000000c0011c6b                SysSize(regs*)
                0x00000000c0011cde                SysSizeFromFilename(regs*)
                0x00000000c0011d8f                SysClose(regs*)
                0x00000000c0011def                SysOpenDir(regs*)
                0x00000000c0011e6c                SysMakeDir(regs*)
                0x00000000c0011eda                SysCloseDir(regs*)
                0x00000000c0011f2e                SysWait(regs*)
                0x00000000c0011f4f                SysNotImpl(regs*)
                0x00000000c0011f6a                SysPanic(regs*)
                0x00000000c0011f85                SysRmdir(regs*)
                0x00000000c0011fea                SysUnlink(regs*)
                0x00000000c001204f                SysGetArgv(regs*)
                0x00000000c001209c                SysUSleep(regs*)
                0x00000000c00120c5                SysSpawn(regs*)
                0x00000000c0012138                SysGetEnv(regs*)
                0x00000000c00121e9                SysSetFatAttrib(regs*)
                0x00000000c001225c                SysPipe(regs*)
                0x00000000c00122a1                SysGetUnixTime(regs*)
                0x00000000c00122b5                string_ends_with(char const*, char const*)
                0x00000000c00122fd                SysOpen(regs*)
                0x00000000c00124f5                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012537        0x1 
 .text          0x00000000c0012538      0x159 net/ethernet.32
                0x00000000c0012538                KeSwitchEndian16(unsigned short)
                0x00000000c001255c                KeSwitchEndian32(unsigned int)
                0x00000000c001258c                EthernetCRC32(unsigned char*, int)
                0x00000000c0012630                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012691      0xd56 reg/cm.32
                0x00000000c0012691                CmOpen(char const*)
                0x00000000c00127af                CmClose(Reghive_Tag*)
                0x00000000c00127c5                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012801                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012878                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c00128b7                CmGetNext(Reghive_Tag*, int)
                0x00000000c00128e9                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012925                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c001294d                CmUpdateHeader(Reghive_Tag*)
                0x00000000c001296e                CmExpand(Reghive_Tag*, int)
                0x00000000c00129e9                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012a6f                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012b63                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012c9f                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012d00                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012d30                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012d67                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012d91                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012dd1                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012e75                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012ea3                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013041                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c001308e                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013108                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001315b                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001321f                zStrtok(char*, char const*)
                0x00000000c0013291                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013312                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00133b5                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00133e7      0x52a reg/registry.32
                0x00000000c00133e7                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013558                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00136ad                Reg::getLine(char*, char*, char*)
                0x00000000c00136e4                Reg::readInt(char*, char*, int*)
                0x00000000c00137d2                Reg::readString(char*, char*, char*, int)
                0x00000000c0013853                Reg::readBool(char*, char*, bool*)
                0x00000000c0013878                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00138a4                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00138d0                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013911       0x36 sys/eject.32
                0x00000000c0013911                SysEject(regs*)
 .text          0x00000000c0013947       0x18 sys/exit.32
                0x00000000c0013947                SysExit(regs*)
 .text          0x00000000c001395f       0x1f sys/getcwd.32
                0x00000000c001395f                SysGetCwd(regs*)
 .text          0x00000000c001397e        0xc sys/getpid.32
                0x00000000c001397e                SysGetPID(regs*)
 .text          0x00000000c001398a       0x1a sys/getramdata.32
                0x00000000c001398a                SysGetRAMData(regs*)
 .text          0x00000000c00139a4       0x82 sys/getvgaptr.32
                0x00000000c00139a4                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013a26        0x2 
 .text          0x00000000c0013a28       0xb9 sys/kill.32
                0x00000000c0013a28                SysKill(regs*)
 .text          0x00000000c0013ae1       0xa8 sys/loaddll.32
                0x00000000c0013ae1                SysLoadDLL(regs*)
 .text          0x00000000c0013b89       0x68 sys/read.32
                0x00000000c0013b89                SysRead(regs*)
 .text          0x00000000c0013bf1       0x29 sys/registersignal.32
                0x00000000c0013bf1                SysRegisterSignal(regs*)
 .text          0x00000000c0013c1a      0x19c sys/registry.32
                0x00000000c0013c1a                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013c91                SysRegistryReadExtent(regs*)
                0x00000000c0013cd9                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013d01                SysRegistryEnterDirectory(regs*)
                0x00000000c0013d29                SysRegistryGetNext(regs*)
                0x00000000c0013d51                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013d8b                SysRegistryOpen(regs*)
                0x00000000c0013d9f                SysRegistryClose(regs*)
 .text          0x00000000c0013db6       0x55 sys/sbrk.32
                0x00000000c0013db6                SysSbrk(regs*)
 .text          0x00000000c0013e0b       0x1c sys/setcwd.32
                0x00000000c0013e0b                SysSetCwd(regs*)
 .text          0x00000000c0013e27       0x96 sys/settime.32
                0x00000000c0013e27                SysSetTime(regs*)
 .text          0x00000000c0013ebd       0x4a sys/timezone.32
                0x00000000c0013ebd                SysTimezone(regs*)
 .text          0x00000000c0013f07       0xfc sys/truncate.32
                0x00000000c0013f07                SysTruncate(regs*)
 .text          0x00000000c0014003       0x68 sys/write.32
                0x00000000c0014003                SysWrite(regs*)
 .text          0x00000000c001406b       0x62 sys/wsbe.32
                0x00000000c001406b                SysWsbe(regs*)
 .text          0x00000000c00140cd       0x25 sys/yield.32
                0x00000000c00140cd                SysYield(regs*)
 .text          0x00000000c00140f2     0x11e6 thr/elf.32
                0x00000000c00140f2                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014380                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014592                Thr::runtimeReferenceHelper()
                0x00000000c00145a5                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00145f4                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00148b2                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014feb                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001501d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015054                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001506e                Thr::loadDLL(char const*, bool)
                0x00000000c001529f                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00152d8     0x13d9 thr/prcssthr.32
                0x00000000c00152d8                userModeEntryPoint(void*)
                0x00000000c0015300                changeTSS
                0x00000000c0015330                switchToThread(ThreadControlBlock*)
                0x00000000c00153e0                Process::addArgs(char**)
                0x00000000c001544c                Process::Process(char const*, Process*, char**)
                0x00000000c001544c                Process::Process(char const*, Process*, char**)
                0x00000000c0015658                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015658                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001582c                taskStartupFunction
                0x00000000c0015838                Semaphore::Semaphore(int)
                0x00000000c0015838                Semaphore::Semaphore(int)
                0x00000000c0015868                Mutex::Mutex()
                0x00000000c0015868                Mutex::Mutex()
                0x00000000c001587c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015988                Process::createUserThread()
                0x00000000c00159a8                setupMultitasking(void (*)())
                0x00000000c0015acc                schedule()
                0x00000000c0015b60                Semaphore::tryAcquire()
                0x00000000c0015c34                Semaphore::assertLocked(char const*)
                0x00000000c0015cb8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015ce0                blockTask(TaskState)
                0x00000000c0015d18                waitTask(int, int*, int)
                0x00000000c0015d5c                milliTenthSleepUntil(unsigned int)
                0x00000000c0015dfc                milliTenthSleep(unsigned int)
                0x00000000c0015e10                sleep(unsigned int)
                0x00000000c0015e2c                Semaphore::acquire()
                0x00000000c0015ef4                taskReturned
                0x00000000c0015f38                Thr::processFromPID(int)
                0x00000000c0015fe4                unblockTask(ThreadControlBlock*)
                0x00000000c0016090                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016364                cleanerTaskFunction(void*)
                0x00000000c001646c                terminateTask(int)
                0x00000000c0016558                Thr::terminateFromIRQ(int)
                0x00000000c0016568                Semaphore::release()
 .text          0x00000000c00166b1      0xc27 vm86/vm8086.32
                0x00000000c00166b1                Vm::inbv(unsigned short)
                0x00000000c00166c4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00166fa                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001670a                Vm::getSegment(unsigned int)
                0x00000000c0016712                Vm::getOffset(unsigned int)
                0x00000000c0016717                Vm::mainloop2()
                0x00000000c0016751                Vm::mainVm8086Loop(void*)
                0x00000000c0016761                Vm::mainloop3(unsigned long)
                0x00000000c0016787                Vm::initialise8086()
                0x00000000c00167ca                Vm::finish8086()
                0x00000000c001682b                Vm::getOutput8086(unsigned char*)
                0x00000000c0016850                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016909                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016aa7                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016b40                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016b51                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016b63                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016b74                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016b89                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016b9f                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016bb4                Vm::faultHandler(regs*)
 .text          0x00000000c00172d8      0xaf0 arch/i386/hal.32
                0x00000000c00172d8                noCopro(unsigned long)
                0x00000000c00172d9                nmiHandler(regs*, void*)
                0x00000000c00172f2                doubleFault(regs*, void*)
                0x00000000c001730b                displayDebugInfo(regs*)
                0x00000000c0017690                HalSystemIdle()
                0x00000000c001770c                displayProgramFault(char const*)
                0x00000000c0017758                gpFault(regs*, void*)
                0x00000000c00177bf                pgFault(regs*, void*)
                0x00000000c0017848                otherISRHandler(regs*, void*)
                0x00000000c001787c                opcodeFault(regs*, void*)
                0x00000000c00178ff                i386SaveCoprocessor(void*)
                0x00000000c0017913                i386LoadCoprocessor(void*)
                0x00000000c0017927                x87EmulHandler(regs*, void*)
                0x00000000c00179c4                HalInitialiseCoprocessor()
                0x00000000c0017a72                HalPanic(char const*)
                0x00000000c0017b86                HalQueryPerformanceCounter()
                0x00000000c0017ba1                HalInitialise()
                0x00000000c0017d57                HalMakeBeep(int)
                0x00000000c0017d91                HalGetRand()
                0x00000000c0017d94                HalEndOfInterrupt(int)
                0x00000000c0017dc5                HalRestart()
                0x00000000c0017dc6                HalShutdown()
                0x00000000c0017dc7                HalSleep()
 .text          0x00000000c0017dc8      0x2dc arch/i386/pic.32
                0x00000000c0017dc8                picIoWait()
                0x00000000c0017dd0                picDisable()
                0x00000000c0017e04                picGetIRQReg(int)
                0x00000000c0017e80                picOpen()
                0x00000000c0018004                picEOI(int)
 .text          0x00000000c00180a4      0x674 arch/i386/rtc.32
                0x00000000c00180a4                RTC::open(int, int, void*)
                0x00000000c00180a8                RTC::close(int, int, void*)
                0x00000000c00180ac                RTC::timeInSecondsUTC()
                0x00000000c00180be                RTC::timeInDatetimeUTC()
                0x00000000c00180e4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018122                RTC::~RTC()
                0x00000000c0018122                RTC::~RTC()
                0x00000000c0018146                RTC::~RTC()
                0x00000000c0018170                RTC::get_update_in_progress_flag()
                0x00000000c001818a                RTC::completeRTCRefresh()
                0x00000000c001846a                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018618                rtcIRQHandler(regs*, void*)
                0x00000000c001865e                RTC::RTC()
                0x00000000c001865e                RTC::RTC()
 .text          0x00000000c0018718      0x1f4 arch/i386/vga.32
                0x00000000c0018718                HalConsoleScroll(int, int)
                0x00000000c0018820                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018884                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001890c     0x14cf fs/fat/vfslink.32
                0x00000000c001890c                FAT::getName()
                0x00000000c0018914                FAT::tell(void*, unsigned long long*)
                0x00000000c0018950                FAT::stat(void*, unsigned long long*)
                0x00000000c001898c                FAT::~FAT()
                0x00000000c001898c                FAT::~FAT()
                0x00000000c00189b0                FAT::~FAT()
                0x00000000c00189d8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018a7c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018b40                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018d24                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018f40                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019100                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019270                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00192d0                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019330                FAT::close(void*)
                0x00000000c0019384                FAT::closeDir(void*)
                0x00000000c00193d8                FAT::truncate(void*, unsigned long long)
                0x00000000c0019444                FAT::seek(void*, unsigned long long)
                0x00000000c001949c                fatWrapperReadDisk
                0x00000000c00194dc                fatWrapperWriteDisk
                0x00000000c001951c                fatWrapperIoctl
                0x00000000c0019638                FAT::FAT()
                0x00000000c0019638                FAT::FAT()
                0x00000000c0019690                FAT::fixFilepath(char*)
                0x00000000c00196d0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019844                FAT::openDir(char const*, void**)
                0x00000000c00198f4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00199ec                FAT::unlink(char const*)
                0x00000000c0019a6c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019c20                FAT::rename(char const*, char const*)
                0x00000000c0019cec                FAT::mkdir(char const*)
                0x00000000c0019d6c                FAT::exists(char const*)
 *fill*         0x00000000c0019ddb        0x1 
 .text          0x00000000c0019ddc       0x94 fs/iso9660/helper.32
                0x00000000c0019ddc                isoReadDiscSectorHelper
                0x00000000c0019e38                iso_kprintf
                0x00000000c0019e54                iso_kprintfd
 .text          0x00000000c0019e70      0x71c fs/iso9660/vfslink.32
                0x00000000c0019e70                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019e76                ISO9660::truncate(void*, unsigned long long)
                0x00000000c0019e7c                ISO9660::getName()
                0x00000000c0019e82                ISO9660::closeDir(void*)
                0x00000000c0019e8c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019e92                ISO9660::unlink(char const*)
                0x00000000c0019e98                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019e9e                ISO9660::rename(char const*, char const*)
                0x00000000c0019ea4                ISO9660::mkdir(char const*)
                0x00000000c0019eaa                ISO9660::~ISO9660()
                0x00000000c0019eaa                ISO9660::~ISO9660()
                0x00000000c0019ece                ISO9660::~ISO9660()
                0x00000000c0019ef6                ISO9660::exists(char const*)
                0x00000000c0019f0a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0019ff0                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a038                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a07a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a0b8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a10a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a24c                ISO9660::close(void*)
                0x00000000c001a27c                ISO9660::openDir(char const*, void**)
                0x00000000c001a356                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a473                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a4f2                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a564                ISO9660::ISO9660()
                0x00000000c001a564                ISO9660::ISO9660()
 .text          0x00000000c001a58c      0x26c hal/sound/sndcard.32
                0x00000000c001a58c                SoundCard::beginPlayback()
                0x00000000c001a59a                SoundCard::stopPlayback()
                0x00000000c001a5a8                SoundCard::SoundCard(char const*)
                0x00000000c001a5a8                SoundCard::SoundCard(char const*)
                0x00000000c001a646                SoundCard::~SoundCard()
                0x00000000c001a646                SoundCard::~SoundCard()
                0x00000000c001a66a                SoundCard::~SoundCard()
                0x00000000c001a694                SoundCard::configureRates(int, int, int)
                0x00000000c001a6c4                SoundCard::getSamples16(int, short*)
                0x00000000c001a720                SoundCard::getSamples32(int, int*)
                0x00000000c001a7a6                SoundCard::addChannel(SoundPort*)
                0x00000000c001a7e4                SoundCard::removeChannel(int)
 .text          0x00000000c001a7f8      0x38a hal/sound/sndport.32
                0x00000000c001a7f8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a7f8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a884                SoundPort::~SoundPort()
                0x00000000c001a884                SoundPort::~SoundPort()
                0x00000000c001a8b8                SoundPort::unpause()
                0x00000000c001a8c4                SoundPort::pause()
                0x00000000c001a8d0                SoundPort::getBufferUsed()
                0x00000000c001a8d8                SoundPort::getBufferSize()
                0x00000000c001a8e0                SoundPort::buffer16(short*, int)
                0x00000000c001a96c                SoundPort::buffer32(int*, int)
                0x00000000c001a9f8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001aac4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001ab82        0x0 hw/bus/isa.32
 .text          0x00000000c001ab82      0xbb7 hw/bus/pci.32
                0x00000000c001ab82                PCI::open(int, int, void*)
                0x00000000c001aba0                PCI::close(int, int, void*)
                0x00000000c001aba4                PCI::PCI()
                0x00000000c001aba4                PCI::PCI()
                0x00000000c001ac3c                PCI::readBAR8(unsigned int, int)
                0x00000000c001ac58                PCI::readBAR16(unsigned int, int)
                0x00000000c001ac76                PCI::readBAR32(unsigned int, int)
                0x00000000c001ac92                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001acb2                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001acd4                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001acf4                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ad6a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ae14                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae38                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae60                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001aeaa                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001aed2                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001aef6                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001af1a                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001af42                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001afa6                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b08e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b354                PCI::checkBus(unsigned char)
                0x00000000c001b378                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b4f2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b66e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b6e0                PCI::detect()
 *fill*         0x00000000c001b739        0x1 
 .text          0x00000000c001b73a      0xb9a hw/diskctrl/ide.32
                0x00000000c001b73a                IDE::close(int, int, void*)
                0x00000000c001b73e                IDE::IDE()
                0x00000000c001b73e                IDE::IDE()
                0x00000000c001b772                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b784                selectDrive(unsigned char, unsigned char)
                0x00000000c001b786                IDE::getBase(unsigned char)
                0x00000000c001b798                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b858                IDE::read(unsigned char, unsigned char)
                0x00000000c001b906                IDE::waitInterrupt(unsigned char)
                0x00000000c001b968                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b984                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001b9a0                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001b9ea                IDE::open(int, int, void*)
                0x00000000c001be28                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001bef8                IDE::detect()
                0x00000000c001c1c6                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c280                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c2d4      0x32a hw/diskctrl/satabus.32
                0x00000000c001c2d4                SATABus::close(int, int, void*)
                0x00000000c001c2d8                SATABus::detect()
                0x00000000c001c2da                SATABus::SATABus()
                0x00000000c001c2da                SATABus::SATABus()
                0x00000000c001c360                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c392                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c3da                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c3fa                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c424                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c534                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c5de                SATABus::open(int, int, void*)
 .text          0x00000000c001c5fe      0x93f hw/diskphys/ata.32
                0x00000000c001c5fe                ATA::close(int, int, void*)
                0x00000000c001c622                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c624                ATA::ATA()
                0x00000000c001c624                ATA::ATA()
                0x00000000c001c652                ATA::flush(bool)
                0x00000000c001c6a0                ATA::readyForCommand()
                0x00000000c001c6ec                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ca82                ATA::detectCHS()
                0x00000000c001caac                ATA::open(int, int, void*)
                0x00000000c001cb78                combineCharAndColour(char, unsigned char)
                0x00000000c001cb89                combineColours(unsigned char, unsigned char)
                0x00000000c001cb96                ATA::read(unsigned long long, int, void*)
                0x00000000c001cd6c                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001cf3d        0x1 
 .text          0x00000000c001cf3e      0x618 hw/diskphys/atapi.32
                0x00000000c001cf3e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001cf44                ATAPI::close(int, int, void*)
                0x00000000c001cf68                ATAPI::ATAPI()
                0x00000000c001cf68                ATAPI::ATAPI()
                0x00000000c001cf96                ATAPI::readyForCommand()
                0x00000000c001cfe8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d2b0                ATAPI::diskRemoved()
                0x00000000c001d2ea                ATAPI::eject()
                0x00000000c001d332                ATAPI::diskInserted()
                0x00000000c001d33e                ATAPI::detectMedia()
                0x00000000c001d3fc                ATAPI::open(int, int, void*)
                0x00000000c001d4dc                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d556      0x807 hw/diskphys/sata.32
                0x00000000c001d556                SATA::close(int, int, void*)
                0x00000000c001d57a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d57c                SATA::open(int, int, void*)
                0x00000000c001d626                SATA::SATA()
                0x00000000c001d626                SATA::SATA()
                0x00000000c001d654                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d8a8                SATA::read(unsigned long long, int, void*)
                0x00000000c001daf8                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001dd5d        0x1 
 .text          0x00000000c001dd5e      0x5d0 hw/diskphys/satapi.32
                0x00000000c001dd5e                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001dd64                SATAPI::close(int, int, void*)
                0x00000000c001dd88                SATAPI::SATAPI()
                0x00000000c001dd88                SATAPI::SATAPI()
                0x00000000c001ddb6                SATAPI::diskRemoved()
                0x00000000c001ddb8                SATAPI::diskInserted()
                0x00000000c001ddd4                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e0b2                SATAPI::eject()
                0x00000000c001e0ee                SATAPI::detectMedia()
                0x00000000c001e144                SATAPI::open(int, int, void*)
                0x00000000c001e244                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e32e      0x45b hw/intctrl/apic.32
                0x00000000c001e32e                IOAPIC::close(int, int, void*)
                0x00000000c001e334                apicGetBase()
                0x00000000c001e37a                IOAPIC::IOAPIC()
                0x00000000c001e37a                IOAPIC::IOAPIC()
                0x00000000c001e3a2                apicOpen()
                0x00000000c001e51e                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e550                IOAPIC::read(int)
                0x00000000c001e578                IOAPIC::open(int, int, void*)
                0x00000000c001e65e                IOAPIC::write(int, int)
                0x00000000c001e68a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e789        0x3 
 .text          0x00000000c001e78c       0xf0 hw/timer/apictimer.32
                0x00000000c001e78c                APICTimer::close(int, int, void*)
                0x00000000c001e794                apicTimerHandler(regs*, void*)
                0x00000000c001e7bc                APICTimer::open(int, int, void*)
                0x00000000c001e82c                APICTimer::write(int)
                0x00000000c001e854                APICTimer::APICTimer()
                0x00000000c001e854                APICTimer::APICTimer()
 .text          0x00000000c001e87c      0x1ad hw/timer/pit.32
                0x00000000c001e87c                PIT::write(int)
                0x00000000c001e900                pitHandler(regs*, void*)
                0x00000000c001e928                PIT::open(int, int, void*)
                0x00000000c001e978                PIT::close(int, int, void*)
                0x00000000c001e9a8                PIT::PIT()
                0x00000000c001e9a8                PIT::PIT()
 *fill*         0x00000000c001ea29        0x7 
 .text          0x00000000c001ea30       0x83 arch/i386/avx.32
                0x00000000c001ea30                avxDetect
                0x00000000c001ea5a                avxSave
                0x00000000c001ea6b                avxLoad
                0x00000000c001ea7c                avxInit
                0x00000000c001ea9e                avxClose
                0x00000000c001ea9f                wouldSheSayYes
 *fill*         0x00000000c001eab3        0xd 
 .text          0x00000000c001eac0      0x2ec arch/i386/interrupt.32
                0x00000000c001eac0                isr0
                0x00000000c001ead0                isr1
                0x00000000c001eada                isr2
                0x00000000c001eae4                isr3
                0x00000000c001eaee                isr4
                0x00000000c001eaf8                isr5
                0x00000000c001eb02                isr6
                0x00000000c001eb0c                isr7
                0x00000000c001eb16                isr8
                0x00000000c001eb1e                isr9
                0x00000000c001eb28                isr10
                0x00000000c001eb30                isr11
                0x00000000c001eb38                isr12
                0x00000000c001eb40                isr13
                0x00000000c001eb5a                isr14
                0x00000000c001eb62                isr15
                0x00000000c001eb6c                isr16
                0x00000000c001eb76                isr17
                0x00000000c001eb80                isr18
                0x00000000c001eb8a                irq3
                0x00000000c001eb94                irq4
                0x00000000c001eb9e                irq5
                0x00000000c001eba8                irq6
                0x00000000c001ebb2                irq7
                0x00000000c001ebbc                irq8
                0x00000000c001ebc6                irq9
                0x00000000c001ebd0                irq10
                0x00000000c001ebda                irq11
                0x00000000c001ebe4                irq12
                0x00000000c001ebee                irq13
                0x00000000c001ebf8                irq14
                0x00000000c001ec02                irq15
                0x00000000c001ec0c                irq1
                0x00000000c001ec13                irq2
                0x00000000c001ec1a                isr96
                0x00000000c001ec21                irq0
                0x00000000c001ec26                int_common_stub
                0x00000000c001ec58                syscall_common_stub
                0x00000000c001ed5c                irq16
                0x00000000c001ed66                irq17
                0x00000000c001ed70                irq18
                0x00000000c001ed7a                irq19
                0x00000000c001ed84                irq20
                0x00000000c001ed8e                irq21
                0x00000000c001ed98                irq22
                0x00000000c001eda2                irq23
 *fill*         0x00000000c001edac        0x4 
 .text          0x00000000c001edb0       0x10 arch/i386/rdrand.32
                0x00000000c001edb0                i386GetRDRAND
 .text          0x00000000c001edc0       0x39 arch/i386/sse.32
                0x00000000c001edc0                absolutelyNoChanceInHell
                0x00000000c001edc0                sseDetect
                0x00000000c001edd8                sseSave
                0x00000000c001ede0                sseLoad
                0x00000000c001ede8                sseInit
                0x00000000c001edf8                sseClose
 *fill*         0x00000000c001edf9        0x7 
 .text          0x00000000c001ee00       0x49 arch/i386/x87.32
                0x00000000c001ee06                x87Detect
                0x00000000c001ee21                x87Save
                0x00000000c001ee28                x87Load
                0x00000000c001ee2f                x87Init
                0x00000000c001ee48                x87Close
 *fill*         0x00000000c001ee49        0x3 
 .text          0x00000000c001ee4c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001ee71        0x0 crtn.32
 *fill*         0x00000000c001ee71        0x3 
 .text          0x00000000c001ee74      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001ee74                __divdi3
 *fill*         0x00000000c001efbf        0x1 
 .text          0x00000000c001efc0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001efc0                __moddi3
 *fill*         0x00000000c001f13e        0x2 
 .text          0x00000000c001f140       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f140                __udivdi3
 *fill*         0x00000000c001f23f        0x1 
 .text          0x00000000c001f240      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f240                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f360        0x0
 .iplt          0x00000000c001f360        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f35a        0xf
 .init          0x00000000c001f35a        0x3 crti.32
                0x00000000c001f35a                _init
 .init          0x00000000c001f35d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f362        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f367        0x2 crtn.32

.fini           0x00000000c001f369        0xa
 .fini          0x00000000c001f369        0x3 crti.32
                0x00000000c001f369                _fini
 .fini          0x00000000c001f36c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f371        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f374       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f374       0x23 core/computer.32
                0x00000000c001f374                Computer::~Computer()
                0x00000000c001f374                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f398       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f398       0x2a core/computer.32
                0x00000000c001f398                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f3c2       0x21
 .text._Z10idleCommonv
                0x00000000c001f3c2       0x21 core/idle.32
                0x00000000c001f3c2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f3e4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f3e4        0x2 core/unixfile.32
                0x00000000c001f3e4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f3e4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f3e6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f3e6       0x42 core/unixfile.32
                0x00000000c001f3e6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f3e6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f428       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f428       0xd3 core/unixfile.32
                0x00000000c001f428                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f4fc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f4fc        0x7 core/unixfile.32
                0x00000000c001f4fc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f504       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f504       0xa1 core/unixfile.32
                0x00000000c001f504                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f5a6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f5a6        0x8 core/unixfile.32
                0x00000000c001f5a6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f5ae       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f5ae       0x1a hal/device.32
                0x00000000c001f5ae                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f5ae                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f5c8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f5c8       0x2a hal/device.32
                0x00000000c001f5c8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f5f2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f5f2       0xdc hal/device.32
                0x00000000c001f5f2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f6ce       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f6ce       0x42 hal/device.32
                0x00000000c001f6ce                LinkedList<Device>::LinkedList()
                0x00000000c001f6ce                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f710       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f710       0x1c hal/timer.32
                0x00000000c001f710                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f72c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f72c        0x7 hal/timer.32
                0x00000000c001f72c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f734       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f734       0xbc hal/timer.32
                0x00000000c001f734                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f7f0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f7f0       0xda hal/timer.32
                0x00000000c001f7f0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f8cc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f8cc       0x23 hw/acpi.32
                0x00000000c001f8cc                ACPI::~ACPI()
                0x00000000c001f8cc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f8f0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f8f0       0x2a hw/acpi.32
                0x00000000c001f8f0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f91c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f91c        0x2 hw/acpi.32
                0x00000000c001f91c                LinkedList<Device>::~LinkedList()
                0x00000000c001f91c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f920       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f920       0x1c hw/acpi.32
                0x00000000c001f920                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f93c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f93c        0x7 hw/acpi.32
                0x00000000c001f93c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f944       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f944       0xb8 hw/acpi.32
                0x00000000c001f944                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001f9fc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001f9fc       0x23 hw/cpu.32
                0x00000000c001f9fc                CPU::~CPU()
                0x00000000c001f9fc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fa20       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fa20       0x2a hw/cpu.32
                0x00000000c001fa20                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fa4c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fa4c        0x8 sys/kill.32
                0x00000000c001fa4c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fa54        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fa54        0x2 thr/prcssthr.32
                0x00000000c001fa54                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fa54                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fa58       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fa58       0x49 thr/prcssthr.32
                0x00000000c001fa58                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fa58                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001faa4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001faa4       0x42 thr/prcssthr.32
                0x00000000c001faa4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001faa4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fae6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fae6       0x23 hw/bus/pci.32
                0x00000000c001fae6                PCI::~PCI()
                0x00000000c001fae6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fb0a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fb0a       0x2a hw/bus/pci.32
                0x00000000c001fb0a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fb34       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fb34       0x23 hw/diskctrl/ide.32
                0x00000000c001fb34                IDE::~IDE()
                0x00000000c001fb34                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fb58       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fb58       0x2a hw/diskctrl/ide.32
                0x00000000c001fb58                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fb82       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fb82       0x23 hw/diskctrl/satabus.32
                0x00000000c001fb82                SATABus::~SATABus()
                0x00000000c001fb82                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fba6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fba6       0x2a hw/diskctrl/satabus.32
                0x00000000c001fba6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fbd0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fbd0       0x23 hw/diskphys/ata.32
                0x00000000c001fbd0                ATA::~ATA()
                0x00000000c001fbd0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fbf4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fbf4       0x2a hw/diskphys/ata.32
                0x00000000c001fbf4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fc1e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fc1e       0x23 hw/diskphys/atapi.32
                0x00000000c001fc1e                ATAPI::~ATAPI()
                0x00000000c001fc1e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fc42       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fc42       0x2a hw/diskphys/atapi.32
                0x00000000c001fc42                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001fc6c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001fc6c       0x23 hw/diskphys/sata.32
                0x00000000c001fc6c                SATA::~SATA()
                0x00000000c001fc6c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001fc90       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001fc90       0x2a hw/diskphys/sata.32
                0x00000000c001fc90                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001fcba       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001fcba       0x23 hw/diskphys/satapi.32
                0x00000000c001fcba                SATAPI::~SATAPI()
                0x00000000c001fcba                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001fcde       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001fcde       0x2a hw/diskphys/satapi.32
                0x00000000c001fcde                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001fd08       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001fd08       0x23 hw/intctrl/apic.32
                0x00000000c001fd08                IOAPIC::~IOAPIC()
                0x00000000c001fd08                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001fd2c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001fd2c       0x2a hw/intctrl/apic.32
                0x00000000c001fd2c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001fd58       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001fd58       0x23 hw/timer/apictimer.32
                0x00000000c001fd58                APICTimer::~APICTimer()
                0x00000000c001fd58                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001fd7c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001fd7c       0x2a hw/timer/apictimer.32
                0x00000000c001fd7c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001fda8       0x23
 .text._ZN3PITD2Ev
                0x00000000c001fda8       0x23 hw/timer/pit.32
                0x00000000c001fda8                PIT::~PIT()
                0x00000000c001fda8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001fdcc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001fdcc       0x2a hw/timer/pit.32
                0x00000000c001fdcc                PIT::~PIT()

.rodata         0x00000000c001fdf6     0x3116
                0x00000000c001fdf6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001fdf6        0x2 
 .ctors         0x00000000c001fdf8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001fdfc        0x4 core/unixfile.32
 .ctors         0x00000000c001fe00        0x4 thr/prcssthr.32
 .ctors         0x00000000c001fe04        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fe08                end_ctors = .
                0x00000000c001fe08                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001fe08        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001fe0c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fe0c                __DTOR_END__
                0x00000000c001fe10                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001fe10       0x10 
 .rodata        0x00000000c001fe20      0x101 acpica/utclib.32
                0x00000000c001fe20                AcpiGbl_Ctypes
 *fill*         0x00000000c001ff21        0x3 
 .rodata        0x00000000c001ff24       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001ff3c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001ff86       0x1a 
 .rodata        0x00000000c001ffa0       0xed fs/fat/ff.32
 *fill*         0x00000000c002008d       0x13 
 .rodata        0x00000000c00200a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00204a0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002050f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020624       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c002068c       0x2c core/computer.32
                0x00000000c002068c                vtable for Computer
 .rodata.str1.4
                0x00000000c00206b8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00206e8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00206f4       0x17 core/main.32
 *fill*         0x00000000c002070b        0x1 
 .rodata.str1.4
                0x00000000c002070c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c00207b1       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020809       0x39 core/pipe.32
 *fill*         0x00000000c0020842        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020844       0x1c core/pipe.32
                0x00000000c0020844                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020860       0x2b core/terminal.32
 *fill*         0x00000000c002088b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c002088c       0x1c core/terminal.32
                0x00000000c002088c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00208a8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00208ca       0x15 core/unixfile.32
 *fill*         0x00000000c00208df        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00208e0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002092b        0x8 core/unixfile.32
 *fill*         0x00000000c0020933        0x1 
 .rodata.str1.4
                0x00000000c0020934       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020954       0x1c core/unixfile.32
                0x00000000c0020954                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020970       0x1c core/unixfile.32
                0x00000000c0020970                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002098c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020c20      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020d46       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0020d79       0x11 dbg/kconsole.32
 *fill*         0x00000000c0020d79        0x3 
 .rodata        0x00000000c0020d7c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020ecc      0x169 dbg/usban.32
 *fill*         0x00000000c0021035        0x3 
 .rodata.str1.4
                0x00000000c0021038      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002116f       0xe3 fs/symlink.32
 .rodata        0x00000000c0021252        0x9 fs/symlink.32
 .rodata.str1.1
                0x00000000c002125b       0xe3 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c002125b        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c002125c       0x6c fs/vfs.32
                0x00000000c002125c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00212c8       0x1c fs/vfs.32
                0x00000000c00212c8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00212e4       0x1c fs/vfs.32
                0x00000000c00212e4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021300       0x2c hal/bus.32
                0x00000000c0021300                vtable for Bus
 .rodata.str1.1
                0x00000000c002132c       0x1e hal/clock.32
 *fill*         0x00000000c002134a        0x2 
 .rodata._ZTV5Clock
                0x00000000c002134c       0x3c hal/clock.32
                0x00000000c002134c                vtable for Clock
 *fill*         0x00000000c0021388       0x18 
 .rodata        0x00000000c00213a0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00213d0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021428       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021428       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021428       0x2c hal/device.32
                0x00000000c0021428                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021454       0x2c hal/device.32
                0x00000000c0021454                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021480       0x2c hal/diskctrl.32
                0x00000000c0021480                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00214ac       0x38 hal/diskphys.32
                0x00000000c00214ac                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00214e4       0x3e hal/intctrl.32
 *fill*         0x00000000c0021522        0x2 
 .rodata.str1.4
                0x00000000c0021524       0x5d hal/intctrl.32
 .rodata        0x00000000c0021581       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c00215d4       0x34 hal/keybrd.32
                0x00000000c00215d4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021608       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002164c       0x2c hal/logidisk.32
                0x00000000c002164c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021678       0x2c hal/mouse.32
                0x00000000c0021678                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00216a4       0x34 hal/nic.32
                0x00000000c00216a4                vtable for NIC
 .rodata.str1.1
                0x00000000c00216d8        0xb hal/partition.32
 *fill*         0x00000000c00216e3        0x1 
 .rodata._ZTV6Serial
                0x00000000c00216e4       0x44 hal/serial.32
                0x00000000c00216e4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021728       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021728        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021728       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021728       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021728       0x30 hal/timer.32
                0x00000000c0021728                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021758       0x10 hal/vcache.32
                0x00000000c0021758                vtable for VCache
 .rodata.str1.1
                0x00000000c0021768       0x93 hal/video.32
 *fill*         0x00000000c00217fb        0x1 
 .rodata._ZTV5Video
                0x00000000c00217fc       0x4c hal/video.32
                0x00000000c00217fc                vtable for Video
 .rodata.str1.4
                0x00000000c0021848       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c00218e3      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021a39       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021a39        0x8 hw/acpi.32
 *fill*         0x00000000c0021a39        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021a3c       0x2c hw/acpi.32
                0x00000000c0021a3c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021a68      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021be3        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021be4       0x2c hw/cpu.32
                0x00000000c0021be4                vtable for CPU
 .rodata.str1.1
                0x00000000c0021c10       0x19 krnl/atexit.32
 .rodata.str1.1
                0x00000000c0021c29       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021c65       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021cf6       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0021dbf       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021e07       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0021e32       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0021ea8       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021eed        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0021ef7       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0021f18       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0021fae       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022002       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c002202e      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00221fa       0x57 thr/prcssthr.32
 *fill*         0x00000000c0022251        0x3 
 .rodata.str1.4
                0x00000000c0022254      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022364       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022364       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022364       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022364        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022364       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022426        0x2 
 .rodata        0x00000000c0022428       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022458      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c00225f7        0x1 
 .rodata.str1.4
                0x00000000c00225f8       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002266b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022680       0x3c arch/i386/rtc.32
                0x00000000c0022680                vtable for RTC
 .rodata.str1.1
                0x00000000c00226bc       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00226fd        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022700       0x6c fs/fat/vfslink.32
                0x00000000c0022700                vtable for FAT
 .rodata.str1.1
                0x00000000c002276c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c002276c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00228a4       0x6c fs/iso9660/vfslink.32
                0x00000000c00228a4                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022910       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022954       0x34 hal/sound/sndcard.32
                0x00000000c0022954                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022988       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00229c7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00229ff       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022aa0       0x2c hw/bus/pci.32
                0x00000000c0022aa0                vtable for PCI
 .rodata.str1.1
                0x00000000c0022acc       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022b53        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022b54       0x2c hw/diskctrl/ide.32
                0x00000000c0022b54                vtable for IDE
 .rodata.str1.4
                0x00000000c0022b80       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022ba4       0x2c hw/diskctrl/satabus.32
                0x00000000c0022ba4                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022bd0       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022be2        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022be4       0x38 hw/diskphys/ata.32
                0x00000000c0022be4                vtable for ATA
 .rodata.str1.1
                0x00000000c0022c1c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022c29        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022c2c       0x38 hw/diskphys/atapi.32
                0x00000000c0022c2c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022c64       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022ce0       0x38 hw/diskphys/sata.32
                0x00000000c0022ce0                vtable for SATA
 .rodata.str1.1
                0x00000000c0022d18       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0022e02        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0022e04       0x38 hw/diskphys/satapi.32
                0x00000000c0022e04                vtable for SATAPI
 .rodata        0x00000000c0022e3c        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0022e44       0x2c hw/intctrl/apic.32
                0x00000000c0022e44                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0022e70       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0022e8b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022e8c       0x30 hw/timer/apictimer.32
                0x00000000c0022e8c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0022ebc       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022ed9        0x3 
 .rodata._ZTV3PIT
                0x00000000c0022edc       0x30 hw/timer/pit.32
                0x00000000c0022edc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0022f0c      0x7b5
 *(.data)
 .data          0x00000000c0022f0c        0x0 crti.32
 .data          0x00000000c0022f0c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0022f0c                __dso_handle
 .data          0x00000000c0022f10        0x0 acpica/utclib.32
 .data          0x00000000c0022f10        0x0 core/malloc.32
 .data          0x00000000c0022f10        0x0 libk/ctype.32
 .data          0x00000000c0022f10        0x0 libk/string.32
 .data          0x00000000c0022f10        0x0 fs/fat/diskio.32
 .data          0x00000000c0022f10        0x0 fs/fat/ff.32
 .data          0x00000000c0022f10        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022f10        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022f10        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0022f10        0x0 core/computer.32
 .data          0x00000000c0022f10        0x0 core/gdt.32
 .data          0x00000000c0022f10        0x0 core/idle.32
 .data          0x00000000c0022f10        0x0 core/idt.32
 .data          0x00000000c0022f10        0x4 core/kheap.32
 .data          0x00000000c0022f14        0x0 core/main.32
 .data          0x00000000c0022f14        0x4 core/physmgr.32
                0x00000000c0022f14                Phys::bitmap
 .data          0x00000000c0022f18        0x0 core/pipe.32
 *fill*         0x00000000c0022f18        0x8 
 .data          0x00000000c0022f20       0x60 core/terminal.32
                0x00000000c0022f20                VgaText::hiddenOut
                0x00000000c0022f40                ansiToVGAMappings
 .data          0x00000000c0022f80        0x0 core/tss.32
 .data          0x00000000c0022f80        0x4 core/unixfile.32
                0x00000000c0022f80                UnixFile::nextFd
 .data          0x00000000c0022f84       0x15 core/virtmgr.32
                0x00000000c0022f84                Virt::pageAllocPtr
                0x00000000c0022f88                Virt::bitmap
                0x00000000c0022f8c                Virt::swapfileSectorsPerPage
                0x00000000c0022f90                Virt::swapfileLength
                0x00000000c0022f94                Virt::swapfileSector
                0x00000000c0022f98                Virt::swapfileDrive
 *fill*         0x00000000c0022f99        0x3 
 .data          0x00000000c0022f9c        0x4 coreobjs/c++.32
                0x00000000c0022f9c                __stack_chk_guard
 .data          0x00000000c0022fa0        0x0 dbg/kconsole.32
 .data          0x00000000c0022fa0       0x28 dbg/usban.32
                0x00000000c0022fa0                KiUsbanTypeMismatchTypes
 .data          0x00000000c0022fc8        0x0 fs/symlink.32
 .data          0x00000000c0022fc8        0x0 fs/vfs.32
 .data          0x00000000c0022fc8        0x0 hal/bus.32
 .data          0x00000000c0022fc8        0x0 hal/buzzer.32
 .data          0x00000000c0022fc8        0x0 hal/clock.32
 .data          0x00000000c0022fc8        0x0 hal/device.32
 .data          0x00000000c0022fc8        0x0 hal/diskctrl.32
 .data          0x00000000c0022fc8        0x0 hal/diskphys.32
 .data          0x00000000c0022fc8        0x0 hal/fpu.32
 .data          0x00000000c0022fc8        0x0 hal/intctrl.32
 .data          0x00000000c0022fc8        0x0 hal/keybrd.32
 .data          0x00000000c0022fc8        0x0 hal/logidisk.32
 .data          0x00000000c0022fc8        0x0 hal/mouse.32
 .data          0x00000000c0022fc8        0x0 hal/nic.32
 .data          0x00000000c0022fc8        0x0 hal/partition.32
 .data          0x00000000c0022fc8        0x0 hal/serial.32
 .data          0x00000000c0022fc8        0x0 hal/timer.32
 .data          0x00000000c0022fc8        0x0 hal/vcache.32
 .data          0x00000000c0022fc8        0x0 hal/video.32
 .data          0x00000000c0022fc8       0x10 hw/acpi.32
                0x00000000c0022fc8                legacyIRQRemaps
 .data          0x00000000c0022fd8        0x4 hw/cpu.32
                0x00000000c0022fd8                lastCode
 .data          0x00000000c0022fdc        0x0 krnl/atexit.32
 *fill*         0x00000000c0022fdc        0x4 
 .data          0x00000000c0022fe0      0x142 krnl/bootmsg.32
                0x00000000c0022fe0                KiSplashScreen
 .data          0x00000000c0023122        0x0 krnl/compat.32
 *fill*         0x00000000c0023122       0x1e 
 .data          0x00000000c0023140       0x4d krnl/env.32
                0x00000000c0023140                defaultSysEnv
 .data          0x00000000c002318d        0x0 krnl/inlines.32
 .data          0x00000000c002318d        0x0 krnl/panic.32
 .data          0x00000000c002318d        0x0 krnl/powctrl.32
 .data          0x00000000c002318d        0x0 krnl/random.32
 .data          0x00000000c002318d        0x0 krnl/resolve.32
 *fill*         0x00000000c002318d       0x13 
 .data          0x00000000c00231a0       0x4c krnl/signal.32
                0x00000000c00231a0                KiDefaultSignalHandlers
 *fill*         0x00000000c00231ec       0x14 
 .data          0x00000000c0023200       0xf0 krnl/syscalls.32
                0x00000000c0023200                systemCallHandlers
 .data          0x00000000c00232f0        0x0 net/ethernet.32
 *fill*         0x00000000c00232f0       0x10 
 .data          0x00000000c0023300      0x100 reg/cm.32
                0x00000000c0023300                CmComponents
 .data          0x00000000c0023400        0x0 reg/registry.32
 .data          0x00000000c0023400        0x0 sys/eject.32
 .data          0x00000000c0023400        0x0 sys/exit.32
 .data          0x00000000c0023400        0x0 sys/getcwd.32
 .data          0x00000000c0023400        0x0 sys/getpid.32
 .data          0x00000000c0023400        0x0 sys/getramdata.32
 .data          0x00000000c0023400        0x0 sys/getvgaptr.32
 .data          0x00000000c0023400        0x0 sys/kill.32
 .data          0x00000000c0023400        0x0 sys/loaddll.32
 .data          0x00000000c0023400        0x0 sys/read.32
 .data          0x00000000c0023400        0x0 sys/registersignal.32
 .data          0x00000000c0023400        0x0 sys/registry.32
 .data          0x00000000c0023400        0x0 sys/sbrk.32
 .data          0x00000000c0023400        0x0 sys/setcwd.32
 .data          0x00000000c0023400        0x0 sys/settime.32
 .data          0x00000000c0023400        0x0 sys/timezone.32
 .data          0x00000000c0023400        0x0 sys/truncate.32
 .data          0x00000000c0023400        0x0 sys/write.32
 .data          0x00000000c0023400        0x0 sys/wsbe.32
 .data          0x00000000c0023400        0x0 sys/yield.32
 .data          0x00000000c0023400        0x0 thr/elf.32
 .data          0x00000000c0023400        0x4 thr/prcssthr.32
                0x00000000c0023400                Thr::nextPID
 .data          0x00000000c0023404        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023404       0x1c 
 .data          0x00000000c0023420      0x2a0 arch/i386/hal.32
                0x00000000c0023420                exceptionNames
 .data          0x00000000c00236c0        0x0 arch/i386/pic.32
 .data          0x00000000c00236c0        0x0 arch/i386/rtc.32
 .data          0x00000000c00236c0        0x0 arch/i386/vga.32
 .data          0x00000000c00236c0        0x0 fs/fat/vfslink.32
 .data          0x00000000c00236c0        0x0 fs/iso9660/helper.32
 .data          0x00000000c00236c0        0x1 fs/iso9660/vfslink.32
                0x00000000c00236c0                recentDriveletter
 .data          0x00000000c00236c1        0x0 hal/sound/sndcard.32
 .data          0x00000000c00236c1        0x0 hal/sound/sndport.32
 .data          0x00000000c00236c1        0x0 hw/bus/isa.32
 .data          0x00000000c00236c1        0x0 hw/bus/pci.32
 .data          0x00000000c00236c1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00236c1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00236c1        0x0 hw/diskphys/ata.32
 .data          0x00000000c00236c1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00236c1        0x0 hw/diskphys/sata.32
 .data          0x00000000c00236c1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00236c1        0x0 hw/intctrl/apic.32
 .data          0x00000000c00236c1        0x0 hw/timer/apictimer.32
 .data          0x00000000c00236c1        0x0 hw/timer/pit.32
 .data          0x00000000c00236c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00236c1        0x0 crtn.32
 .data          0x00000000c00236c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00236c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00236c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00236c1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00236c4        0x0
 .got           0x00000000c00236c4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00236c4        0x0
 .got.plt       0x00000000c00236c4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00236c4        0x0
 .igot.plt      0x00000000c00236c4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00236c4        0x0
 .tm_clone_table
                0x00000000c00236c4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00236c4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00236c1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00236c1        0x3 
 .eh_frame      0x00000000c00236c4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00236c4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00236c4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002371c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002375c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00237c8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5ea7
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0     0x10a4 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026060                KiNewlyCreatedSymlinks
                0x00000000c0027060                KiBaseSymlinkID
 .bss           0x00000000c0027064        0x4 fs/vfs.32
                0x00000000c0027064                installedFilesystems
 .bss           0x00000000c0027068        0x0 hal/bus.32
 .bss           0x00000000c0027068        0x0 hal/buzzer.32
 .bss           0x00000000c0027068        0x8 hal/clock.32
                0x00000000c0027068                User::dstOn
                0x00000000c0027069                User::timezoneHalfHourOffset
                0x00000000c002706c                User::timezoneHourOffset
 .bss           0x00000000c0027070        0x0 hal/device.32
 .bss           0x00000000c0027070        0x0 hal/diskctrl.32
 .bss           0x00000000c0027070        0x0 hal/diskphys.32
 .bss           0x00000000c0027070        0x0 hal/fpu.32
 *fill*         0x00000000c0027070       0x10 
 .bss           0x00000000c0027080     0x2000 hal/intctrl.32
                0x00000000c0027080                INT_contexts
                0x00000000c0028080                INT_handlers
 .bss           0x00000000c0029080      0x429 hal/keybrd.32
                0x00000000c0029080                keyboardWaitingTaskList
                0x00000000c0029084                keyboardSetupYet
                0x00000000c0029088                guiKeyboardHandler
                0x00000000c00290a0                keystates
 *fill*         0x00000000c00294a9       0x17 
 .bss           0x00000000c00294c0       0x88 hal/logidisk.32
                0x00000000c00294c0                diskAssignments
                0x00000000c00294e0                disks
 .bss           0x00000000c0029548        0x4 hal/mouse.32
                0x00000000c0029548                guiMouseHandler
 .bss           0x00000000c002954c        0x0 hal/nic.32
 .bss           0x00000000c002954c        0x0 hal/partition.32
 .bss           0x00000000c002954c        0x0 hal/serial.32
 .bss           0x00000000c002954c        0x4 hal/timer.32
                0x00000000c002954c                milliTenthsSinceBoot
 .bss           0x00000000c0029550        0x0 hal/vcache.32
 .bss           0x00000000c0029550        0x4 hal/video.32
                0x00000000c0029550                screen
 *fill*         0x00000000c0029554        0xc 
 .bss           0x00000000c0029560      0x480 hw/acpi.32
                0x00000000c0029560                systemSleepFunction
                0x00000000c0029564                systemResetFunction
                0x00000000c0029568                systemShutdownFunction
                0x00000000c002956c                nextACPITable
                0x00000000c0029580                acpiTables
                0x00000000c0029780                usingXSDT
                0x00000000c0029784                MADTpointer
                0x00000000c0029788                RSDTpointer
                0x00000000c002978c                RSDPpointer
                0x00000000c0029790                nextAPICNMI
                0x00000000c00297a0                apicNMIInfo
                0x00000000c0029820                legacyIRQFlags
                0x00000000c0029840                ioapicDiscoveryNumber
                0x00000000c0029860                ioapicFoundInMADT
                0x00000000c0029880                ioapicAddresses
                0x00000000c0029900                ioapicGSIBase
                0x00000000c0029980                processorDiscoveryNumber
                0x00000000c00299a0                matchingAPICID
                0x00000000c00299c0                processorID
 .bss           0x00000000c00299e0       0x10 hw/cpu.32
                0x00000000c00299e0                lastD
                0x00000000c00299e4                lastC
                0x00000000c00299e8                lastB
                0x00000000c00299ec                lastA
 *fill*         0x00000000c00299f0       0x10 
 .bss           0x00000000c0029a00      0x220 krnl/atexit.32
                0x00000000c0029a00                KiNextAtexitHandler
                0x00000000c0029a20                KiAtexitContexts
                0x00000000c0029b20                KiAtexitHandlers
 .bss           0x00000000c0029c20        0x0 krnl/bootmsg.32
 .bss           0x00000000c0029c20        0x0 krnl/compat.32
 .bss           0x00000000c0029c20        0x8 krnl/env.32
                0x00000000c0029c20                KeUserEnv
                0x00000000c0029c24                KeSystemEnv
 .bss           0x00000000c0029c28        0x0 krnl/inlines.32
 .bss           0x00000000c0029c28        0x1 krnl/panic.32
                0x00000000c0029c28                KeIsKernelInPanic
 *fill*         0x00000000c0029c29       0x17 
 .bss           0x00000000c0029c40       0x48 krnl/powctrl.32
                0x00000000c0029c40                powCtrlOnBattery
                0x00000000c0029c60                currentPowerSettings
                0x00000000c0029c84                secondsSinceLastUserIO
 .bss           0x00000000c0029c88        0x8 krnl/random.32
                0x00000000c0029c88                kiRandSeed
 .bss           0x00000000c0029c90        0x0 krnl/resolve.32
 .bss           0x00000000c0029c90        0x0 krnl/signal.32
 .bss           0x00000000c0029c90        0x0 krnl/syscalls.32
 .bss           0x00000000c0029c90        0x0 net/ethernet.32
 .bss           0x00000000c0029c90        0x4 reg/cm.32
 .bss           0x00000000c0029c94        0x0 reg/registry.32
 .bss           0x00000000c0029c94        0x0 sys/eject.32
 .bss           0x00000000c0029c94        0x0 sys/exit.32
 .bss           0x00000000c0029c94        0x0 sys/getcwd.32
 .bss           0x00000000c0029c94        0x0 sys/getpid.32
 .bss           0x00000000c0029c94        0x0 sys/getramdata.32
 .bss           0x00000000c0029c94        0x0 sys/getvgaptr.32
 .bss           0x00000000c0029c94        0x0 sys/kill.32
 .bss           0x00000000c0029c94        0x0 sys/loaddll.32
 .bss           0x00000000c0029c94        0x0 sys/read.32
 .bss           0x00000000c0029c94        0x0 sys/registersignal.32
 .bss           0x00000000c0029c94        0x0 sys/registry.32
 .bss           0x00000000c0029c94        0x0 sys/sbrk.32
 .bss           0x00000000c0029c94        0x0 sys/setcwd.32
 .bss           0x00000000c0029c94        0x0 sys/settime.32
 .bss           0x00000000c0029c94        0x0 sys/timezone.32
 .bss           0x00000000c0029c94        0x0 sys/truncate.32
 .bss           0x00000000c0029c94        0x0 sys/write.32
 .bss           0x00000000c0029c94        0x0 sys/wsbe.32
 .bss           0x00000000c0029c94        0x0 sys/yield.32
 *fill*         0x00000000c0029c94        0xc 
 .bss           0x00000000c0029ca0      0x7a4 thr/elf.32
                0x00000000c0029ca0                Thr::driverLookupNext
                0x00000000c0029cc0                Thr::driverLookupLen
                0x00000000c0029ec0                Thr::driverLookupAddr
                0x00000000c002a0c0                Thr::driverNameLookup
                0x00000000c002a2c0                Thr::kernelSymbols
                0x00000000c002a340                Thr::kernelStringTable
                0x00000000c002a3c0                Thr::kernelSymbolTable
                0x00000000c002a440                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002a444        0x4 
 .bss           0x00000000c002a448       0x68 thr/prcssthr.32
                0x00000000c002a448                cleanerThread
                0x00000000c002a44c                weNeedTheCleanerToNotBlock
                0x00000000c002a450                retValLockStuff
                0x00000000c002a454                retValSchedLock
                0x00000000c002a458                lockStuffLock
                0x00000000c002a45c                schedulerLock
                0x00000000c002a460                taskSwitchesPostponedFlag
                0x00000000c002a464                postponeTaskSwitchesCounter
                0x00000000c002a468                irqDisableCounter
                0x00000000c002a46c                terminatedTaskList
                0x00000000c002a478                sleepingTaskList
                0x00000000c002a484                taskList
                0x00000000c002a490                kernelProcess
 *fill*         0x00000000c002a4b0       0x10 
 .bss           0x00000000c002a4c0       0x40 vm86/vm8086.32
                0x00000000c002a4c0                Vm::vmRetV
                0x00000000c002a4c4                Vm::vmDone
                0x00000000c002a4c5                Vm::vmReady
                0x00000000c002a4c8                Vm::vm86Thread
                0x00000000c002a4cc                Vm::vmToHostCommsPtr
                0x00000000c002a4e0                Vm::vmToHostComms
 .bss           0x00000000c002a500       0x18 arch/i386/hal.32
                0x00000000c002a500                apic
                0x00000000c002a504                guiPanicHandler
                0x00000000c002a508                fpuOwner
                0x00000000c002a50c                coproLoadFunc
                0x00000000c002a510                coproSaveFunc
                0x00000000c002a514                gpFaultIntercept
 .bss           0x00000000c002a518        0x0 arch/i386/pic.32
 .bss           0x00000000c002a518        0x2 arch/i386/rtc.32
 .bss           0x00000000c002a51a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002a51a        0x6 
 .bss           0x00000000c002a520       0xf0 fs/fat/vfslink.32
                0x00000000c002a520                FAT::fats
                0x00000000c002a540                FAT::vfsToFatRemaps
                0x00000000c002a5c0                fatToVFSRemaps
 .bss           0x00000000c002a610        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002a610       0x10 
 .bss           0x00000000c002a620      0x820 fs/iso9660/vfslink.32
                0x00000000c002a620                iso9660Owner
                0x00000000c002a624                recentSector
                0x00000000c002a640                recentBuffer
 .bss           0x00000000c002ae40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002ae40        0x0 hal/sound/sndport.32
 .bss           0x00000000c002ae40        0x0 hw/bus/isa.32
 .bss           0x00000000c002ae40        0xd hw/bus/pci.32
                0x00000000c002ae40                thePCI
 .bss           0x00000000c002ae4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002ae4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002ae4d        0x3 
 .bss           0x00000000c002ae50        0x8 hw/diskphys/ata.32
                0x00000000c002ae50                ataSectorsWritten
                0x00000000c002ae54                ataSectorsRead
 .bss           0x00000000c002ae58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002ae58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002ae58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002ae58        0x8 
 .bss           0x00000000c002ae60       0x41 hw/intctrl/apic.32
                0x00000000c002ae60                noOfIOAPICs
                0x00000000c002ae80                ioapics
                0x00000000c002aea0                IOAPICsSetupYet
 .bss           0x00000000c002aea1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002aea1        0x3 
 .bss           0x00000000c002aea4        0x4 hw/timer/pit.32
                0x00000000c002aea4                pitFreq
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002aea8        0x0 crtn.32
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002aea8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0030d4f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
