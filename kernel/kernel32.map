Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

cdDriveLetter       0x1               fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1d89a
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 *fill*         0x00000000c0001afb        0x1 
 .text          0x00000000c0001afc      0x239 libk/ctype.32
                0x00000000c0001afc                isblank
                0x00000000c0001b1c                iscntrl
                0x00000000c0001b3c                isdigit
                0x00000000c0001b58                islower
                0x00000000c0001b74                isspace
                0x00000000c0001b9c                isupper
                0x00000000c0001bb8                isalpha
                0x00000000c0001be8                isalnum
                0x00000000c0001c18                ispunct
                0x00000000c0001c58                isgraph
                0x00000000c0001c88                isprint
                0x00000000c0001cb0                isxdigit
 *fill*         0x00000000c0001d35        0x3 
 .text          0x00000000c0001d38       0xd1 libk/string.32
 .text          0x00000000c0001e09       0x51 fs/fat/diskio.32
                0x00000000c0001e09                disk_status
                0x00000000c0001e0c                disk_initialize
                0x00000000c0001e0f                disk_read
                0x00000000c0001e25                disk_write
                0x00000000c0001e3b                disk_ioctl
 .text          0x00000000c0001e5a     0x3d4b fs/fat/ff.32
                0x00000000c0003bf6                f_mount
                0x00000000c0003c58                f_open
                0x00000000c0003f23                f_read
                0x00000000c0004122                f_write
                0x00000000c0004356                f_sync
                0x00000000c000440b                f_close
                0x00000000c000443a                f_lseek
                0x00000000c00045e1                f_opendir
                0x00000000c00046ac                f_closedir
                0x00000000c00046ce                f_readdir
                0x00000000c0004760                f_stat
                0x00000000c00047df                f_getfree
                0x00000000c00048e1                f_truncate
                0x00000000c00049c5                f_unlink
                0x00000000c0004ae7                f_mkdir
                0x00000000c0004c82                f_rename
                0x00000000c0004e38                f_chmod
                0x00000000c0004ee1                f_utime
                0x00000000c0004f8f                f_getlabel
                0x00000000c00050e0                f_setlabel
                0x00000000c0005270                f_expand
                0x00000000c00053d0                f_mkfs
 *fill*         0x00000000c0005ba5        0x3 
 .text          0x00000000c0005ba8       0x2f fs/fat/ffsystem.32
                0x00000000c0005ba8                ff_memalloc
                0x00000000c0005bc0                ff_memfree
 *fill*         0x00000000c0005bd7        0x1 
 .text          0x00000000c0005bd8      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005bd8                ff_uni2oem
                0x00000000c0005c78                ff_oem2uni
                0x00000000c0005cf0                ff_wtoupper
 .text          0x00000000c0005e80     0x1e4d fs/iso9660/iso9660.32
                0x00000000c0005e80                isoReadDiscSector
                0x00000000c0005ea4                strnicmp
                0x00000000c0005f38                stricmp
                0x00000000c0006588                iso_close
                0x00000000c00065b4                iso_seek
                0x00000000c0006770                iso_tell
                0x00000000c00067e0                iso_total
                0x00000000c0006848                fn_postprocess
                0x00000000c00068bc                iso_reset
                0x00000000c0006bc8                iso_read
                0x00000000c00073d0                iso_readdir
                0x00000000c00079bc                iso_open
                0x00000000c0007b40                iso_ioctl
                0x00000000c0007b4c                fs_iso9660_init
                0x00000000c0007c2c                fs_iso9660_shutdown
 .text          0x00000000c0007ccd       0x94 compat/inlines.32
                0x00000000c0007ccd                CPU::current()
                0x00000000c0007cd9                operator new(unsigned long)
                0x00000000c0007cde                operator delete(void*)
                0x00000000c0007ce3                disableIRQs()
                0x00000000c0007ce5                enableIRQs()
                0x00000000c0007ce7                lockScheduler()
                0x00000000c0007cef                unlockScheduler()
                0x00000000c0007cfe                lockStuff()
                0x00000000c0007d0c                unlockStuff()
                0x00000000c0007d46                Virt::getAKernelVAS()
                0x00000000c0007d4c                __not_memcpy
 *fill*         0x00000000c0007d61        0x3 
 .text          0x00000000c0007d64      0x118 compat/resolve.32
                0x00000000c0007d64                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0007e7c      0x68b core/computer.32
                0x00000000c0007e7c                Computer::close(int, int, void*)
                0x00000000c0007ec1                Krnl::firstTask()
                0x00000000c0007ffa                Computer::Computer()
                0x00000000c0007ffa                Computer::Computer()
                0x00000000c00080ac                Computer::setBootMessage(char const*)
                0x00000000c00080ae                Computer::detectFeatures()
                0x00000000c00082b8                Computer::displayFeatures()
                0x00000000c00082ba                Computer::rdmsr(unsigned int)
                0x00000000c00082e6                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000831e                Computer::shutdown()
                0x00000000c0008336                Computer::restart()
                0x00000000c000834e                Computer::sleep()
                0x00000000c0008362                Computer::nmiEnabled()
                0x00000000c000836e                Computer::readCMOS(unsigned char)
                0x00000000c0008388                Computer::enableNMI(bool)
                0x00000000c00083a0                Computer::open(int, int, void*)
                0x00000000c0008474                Computer::disableNMI()
                0x00000000c0008484                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00084a2                Computer::handleNMI()
 *fill*         0x00000000c0008507        0x1 
 .text          0x00000000c0008508      0x1cf core/gdt.32
                0x00000000c0008508                GDTEntry::setBase(unsigned int)
                0x00000000c0008524                GDTEntry::setLimit(unsigned int)
                0x00000000c0008542                GDT::GDT()
                0x00000000c0008542                GDT::GDT()
                0x00000000c0008558                GDT::addEntry(GDTEntry)
                0x00000000c000857a                GDT::getNumberOfEntries()
                0x00000000c0008582                GDT::flush()
                0x00000000c00085a4                GDT::setup()
 .text          0x00000000c00086d7       0x19 core/idle.32
                0x00000000c00086d7                idleFunction(void*)
 .text          0x00000000c00086f0      0x464 core/idt.32
                0x00000000c00086f0                IDTEntry::IDTEntry(bool)
                0x00000000c00086f0                IDTEntry::IDTEntry(bool)
                0x00000000c0008762                IDTEntry::setOffset(unsigned int)
                0x00000000c0008778                IDT::IDT()
                0x00000000c0008778                IDT::IDT()
                0x00000000c000877a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0008782                IDT::addEntry(IDTEntry, int)
                0x00000000c000879c                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00087d4                IDT::flush()
                0x00000000c00087ee                IDT::setup()
 .text          0x00000000c0008b54      0x183 core/kheap.32
                0x00000000c0008b54                sbrk
                0x00000000c0008be9                mmap
                0x00000000c0008bff                munmap
                0x00000000c0008c15                liballoc_lock()
                0x00000000c0008c22                liballoc_unlock()
                0x00000000c0008c36                liballoc_alloc(int)
                0x00000000c0008c4e                liballoc_free(void*, int)
                0x00000000c0008c69                realloc
                0x00000000c0008c7d                malloc
                0x00000000c0008c8d                free
                0x00000000c0008c9d                rfree
                0x00000000c0008cad                calloc
 .text          0x00000000c0008cd7      0x1b4 core/main.32
                0x00000000c0008cd7                Krnl::setBootMessage(char const*)
                0x00000000c0008d43                kernel_main
 .text          0x00000000c0008e8b      0x5dc core/physmgr.32
                0x00000000c0008e8b                Phys::allocateDMA(unsigned long)
                0x00000000c0008f62                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0008f95                Phys::setPageState(unsigned long, bool)
                0x00000000c0008fc7                Phys::getPageState(unsigned long)
                0x00000000c0008fe8                Phys::freePage(unsigned long)
                0x00000000c000904a                Phys::allocatePage()
                0x00000000c0009108                Phys::allocateContiguousPages(int)
                0x00000000c0009164                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000919c                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0009467        0x1 
 .text          0x00000000c0009468      0x273 core/pipe.32
                0x00000000c0009468                Pipe::isAtty()
                0x00000000c000946c                Pipe::~Pipe()
                0x00000000c000946c                Pipe::~Pipe()
                0x00000000c0009490                Pipe::~Pipe()
                0x00000000c00094b8                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0009578                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0009674                Pipe::Pipe(int)
                0x00000000c0009674                Pipe::Pipe(int)
 *fill*         0x00000000c00096db        0x1 
 .text          0x00000000c00096dc      0xa1e core/terminal.32
                0x00000000c00096dc                VgaText::isAtty()
                0x00000000c00096e0                VgaText::~VgaText()
                0x00000000c00096e0                VgaText::~VgaText()
                0x00000000c0009704                VgaText::~VgaText()
                0x00000000c000972e                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000974e                setTerminalScrollLock(bool)
                0x00000000c000974f                doTerminalCycle()
                0x00000000c0009750                addToTerminalCycle(VgaText*)
                0x00000000c0009751                scrollTerminalScrollLock(int)
                0x00000000c0009752                VgaText::updateTitle()
                0x00000000c0009754                VgaText::load()
                0x00000000c0009756                VgaText::updateCursor()
                0x00000000c000976c                VgaText::doANSI_SGR(int)
                0x00000000c00097e0                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00097f0                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0009800                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0009820                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000982c                VgaText::setTitleColour(VgaColour)
                0x00000000c0009838                VgaText::setTitle(char*)
                0x00000000c000983a                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000984c                VgaText::scrollScreen()
                0x00000000c00098e4                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00098f6                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0009986                VgaText::getCursorX()
                0x00000000c000998e                VgaText::getCursorY()
                0x00000000c0009996                VgaText::setCursor(int, int)
                0x00000000c00099ad                setActiveTerminal(VgaText*)
                0x00000000c00099f8                VgaText::clearScreen()
                0x00000000c0009a46                VgaText::setCursorX(int)
                0x00000000c0009a5e                VgaText::setCursorY(int)
                0x00000000c0009a76                VgaText::incrementCursor(bool)
                0x00000000c0009aca                VgaText::decrementCursor(bool)
                0x00000000c0009aec                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0009bba                VgaText::putchar(char)
                0x00000000c0009ca6                VgaText::putx(unsigned int)
                0x00000000c0009cec                VgaText::puts(char const*)
                0x00000000c0009d12                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0009d5e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0009eb0                VgaText::VgaText(char const*)
                0x00000000c0009eb0                VgaText::VgaText(char const*)
                0x00000000c0009ffc                VgaText::receiveKey(unsigned char)
                0x00000000c000a0d4                VgaText::doUpdate()
                0x00000000c000a0d5                newTerminal(char*)
 *fill*         0x00000000c000a0fa        0x2 
 .text          0x00000000c000a0fc      0x1a1 core/tss.32
                0x00000000c000a0fc                TSS::TSS()
                0x00000000c000a0fc                TSS::TSS()
                0x00000000c000a10c                TSS::setESP(unsigned long)
                0x00000000c000a120                TSS::flush()
                0x00000000c000a140                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000a29d        0x1 
 .text          0x00000000c000a29e      0x4c2 core/unixfile.32
                0x00000000c000a29e                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000a2f4                ReservedFilename::isAtty()
                0x00000000c000a310                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000a36e                UnixFile::getFileDescriptor()
                0x00000000c000a376                UnixFile::UnixFile(int)
                0x00000000c000a376                UnixFile::UnixFile(int)
                0x00000000c000a526                ReservedFilename::ReservedFilename(int)
                0x00000000c000a526                ReservedFilename::ReservedFilename(int)
                0x00000000c000a558                UnixFile::~UnixFile()
                0x00000000c000a558                UnixFile::~UnixFile()
                0x00000000c000a5f0                UnixFile::~UnixFile()
                0x00000000c000a618                ReservedFilename::~ReservedFilename()
                0x00000000c000a618                ReservedFilename::~ReservedFilename()
                0x00000000c000a63c                ReservedFilename::~ReservedFilename()
                0x00000000c000a663                getFromFileDescriptor(int)
 .text          0x00000000c000a760     0x1166 core/virtmgr.32
                0x00000000c000a760                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000a795                Virt::getPageState(unsigned long)
                0x00000000c000a7b9                Virt::allocateKernelVirtualPages(int)
                0x00000000c000a8ca                Virt::freeSwapfilePage(unsigned long)
                0x00000000c000a8e8                Virt::swapIDToSector(unsigned long)
                0x00000000c000a8fa                Virt::allocateSwapfilePage()
                0x00000000c000a978                Virt::virtualMemorySetup()
                0x00000000c000a9c3                Virt::setupPageSwapping(int)
                0x00000000c000aa34                VAS::VAS()
                0x00000000c000aa34                VAS::VAS()
                0x00000000c000aa70                VAS::VAS(VAS*)
                0x00000000c000aa70                VAS::VAS(VAS*)
                0x00000000c000aa9e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000aaca                VAS::getPageTableEntry(unsigned long)
                0x00000000c000aae9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000ac0e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000ac32                VAS::virtualToPhysical(unsigned long)
                0x00000000c000ac4c                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000ac8c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000acc0                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000acea                VAS::~VAS()
                0x00000000c000acea                VAS::~VAS()
                0x00000000c000ae4e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000af52                VAS::allocatePages(int, int)
                0x00000000c000b12a                VAS::setCPUSpecific(unsigned long)
                0x00000000c000b148                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000b20e                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000b2fc                VAS::VAS(bool)
                0x00000000c000b2fc                VAS::VAS(bool)
                0x00000000c000b57c                VAS::evict(unsigned long)
                0x00000000c000b63e                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000b72c                VAS::scanForEviction()
                0x00000000c000b80c                mapVASFirstTime
 .text          0x00000000c000b8c6       0x5f coreobjs/c++.32
                0x00000000c000b8c6                __cxa_atexit
                0x00000000c000b8c9                __cxa_finalize
                0x00000000c000b8ca                __stack_chk_fail
                0x00000000c000b900                __cxa_pure_virtual
                0x00000000c000b911                operator new[](unsigned long)
                0x00000000c000b916                operator delete(void*, unsigned long)
                0x00000000c000b91b                operator delete[](void*)
                0x00000000c000b920                operator delete[](void*, unsigned long)
 .text          0x00000000c000b925      0x21c dbg/kconsole.32
                0x00000000c000b925                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000b990                Dbg::logc(char)
                0x00000000c000b9b0                Dbg::logs(char*)
                0x00000000c000b9cd                Dbg::logWriteInt(unsigned int)
                0x00000000c000b9eb                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000ba0c                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000bb41        0x1 
 .text          0x00000000c000bb42      0xc5c fs/vfs.32
                0x00000000c000bb42                File::read(unsigned long long, void*, int*)
                0x00000000c000bb9a                File::write(unsigned long long, void*, int*)
                0x00000000c000bbf2                Directory::read(unsigned long long, void*, int*)
                0x00000000c000bc4a                Directory::write(unsigned long long, void*, int*)
                0x00000000c000bc78                File::isAtty()
                0x00000000c000bc7c                Directory::isAtty()
                0x00000000c000bc80                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000bc86                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000bc8c                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000bc92                File::~File()
                0x00000000c000bc92                File::~File()
                0x00000000c000bcb6                File::~File()
                0x00000000c000bce0                Directory::~Directory()
                0x00000000c000bce0                Directory::~Directory()
                0x00000000c000bd04                Directory::~Directory()
                0x00000000c000bd2e                Filesystem::Filesystem()
                0x00000000c000bd2e                Filesystem::Filesystem()
                0x00000000c000bd52                Filesystem::~Filesystem()
                0x00000000c000bd52                Filesystem::~Filesystem()
                0x00000000c000bd60                Filesystem::~Filesystem()
                0x00000000c000bd84                Fs::getcwd(Process*, char*, int)
                0x00000000c000bdae                Fs::initVFS()
                0x00000000c000bdd8                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000bf82                File::File(char const*, Process*)
                0x00000000c000bf82                File::File(char const*, Process*)
                0x00000000c000c042                File::open(FileOpenMode)
                0x00000000c000c0a0                File::close()
                0x00000000c000c100                File::seek(unsigned long long)
                0x00000000c000c156                File::tell(unsigned long long*)
                0x00000000c000c1a6                File::rewind()
                0x00000000c000c1ba                File::unlink()
                0x00000000c000c206                File::rename(char const*)
                0x00000000c000c254                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000c2b0                File::exists()
                0x00000000c000c2ee                File::stat(unsigned long long*, bool*)
                0x00000000c000c34f                Fs::setcwd(Process*, char*)
                0x00000000c000c4ac                Directory::Directory(char const*, Process*)
                0x00000000c000c4ac                Directory::Directory(char const*, Process*)
                0x00000000c000c56c                Directory::open()
                0x00000000c000c5c8                Directory::close()
                0x00000000c000c628                Directory::unlink()
                0x00000000c000c674                Directory::rename(char const*)
                0x00000000c000c6c2                Directory::exists()
                0x00000000c000c700                Directory::read(dirent*)
                0x00000000c000c74c                Directory::create()
                0x00000000c000c798                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c79e        0x2 
 .text          0x00000000c000c7a0       0x86 hal/bus.32
                0x00000000c000c7a0                Bus::Bus(char const*)
                0x00000000c000c7a0                Bus::Bus(char const*)
                0x00000000c000c7d8                Bus::~Bus()
                0x00000000c000c7d8                Bus::~Bus()
                0x00000000c000c7fc                Bus::~Bus()
 .text          0x00000000c000c826       0x96 hal/buzzer.32
                0x00000000c000c826                beepThread(void*)
                0x00000000c000c863                Krnl::beep(int, int, bool)
 .text          0x00000000c000c8bc      0x46d hal/clock.32
                0x00000000c000c8bc                User::loadClockSettings(int)
                0x00000000c000c90e                Clock::Clock(char const*)
                0x00000000c000c90e                Clock::Clock(char const*)
                0x00000000c000c944                Clock::~Clock()
                0x00000000c000c944                Clock::~Clock()
                0x00000000c000c968                Clock::~Clock()
                0x00000000c000c992                Clock::timeInSecondsLocal()
                0x00000000c000c9da                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000ca33                datetimeToSeconds(datetime_t)
                0x00000000c000cb60                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000cbc0                secondsToDatetime(unsigned long long)
                0x00000000c000cd04                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000cd29        0x1 
 .text          0x00000000c000cd2a      0x464 hal/device.32
                0x00000000c000cd2a                Device::hibernate()
                0x00000000c000cd2c                Device::wake()
                0x00000000c000cd2e                Device::detect()
                0x00000000c000cd30                Device::disableLegacy()
                0x00000000c000cd32                Device::powerSaving(PowerSavingLevel)
                0x00000000c000cd34                DriverlessDevice::close(int, int, void*)
                0x00000000c000cd38                DriverlessDevice::detect()
                0x00000000c000cd3a                DriverlessDevice::open(int, int, void*)
                0x00000000c000cd4e                Device::~Device()
                0x00000000c000cd4e                Device::~Device()
                0x00000000c000cd5c                Device::~Device()
                0x00000000c000cd84                Device::findAndLoadDriver()
                0x00000000c000cd92                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000cdb8                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000cdf8                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ce22                Device::getParent()
                0x00000000c000ce2e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ce4c                Device::addChild(Device*)
                0x00000000c000ce90                Device::removeAllChildren()
                0x00000000c000ced6                Device::hibernateAll()
                0x00000000c000cf06                Device::wakeAll()
                0x00000000c000cf36                Device::detectAll()
                0x00000000c000cf66                Device::disableLegacyAll()
                0x00000000c000cf68                Device::loadDriversForAll()
                0x00000000c000cf6a                Device::closeAll()
                0x00000000c000cfa0                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cfd6                Device::setName(char const*)
                0x00000000c000cfe4                Device::Device(char const*)
                0x00000000c000cfe4                Device::Device(char const*)
                0x00000000c000d0e0                Device::getName()
                0x00000000c000d0ea                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000d0ea                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000d120                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000d164                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000d18e        0x2 
 .text          0x00000000c000d190       0x86 hal/diskctrl.32
                0x00000000c000d190                HardDiskController::HardDiskController(char const*)
                0x00000000c000d190                HardDiskController::HardDiskController(char const*)
                0x00000000c000d1c8                HardDiskController::~HardDiskController()
                0x00000000c000d1c8                HardDiskController::~HardDiskController()
                0x00000000c000d1ec                HardDiskController::~HardDiskController()
 .text          0x00000000c000d216       0xe2 hal/diskphys.32
                0x00000000c000d216                PhysicalDisk::eject()
                0x00000000c000d21a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000d21a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000d282                PhysicalDisk::startCache()
                0x00000000c000d2aa                PhysicalDisk::~PhysicalDisk()
                0x00000000c000d2aa                PhysicalDisk::~PhysicalDisk()
                0x00000000c000d2ce                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000d2f8        0x0 hal/fpu.32
 .text          0x00000000c000d2f8      0x35d hal/intctrl.32
                0x00000000c000d2f8                int_handler
                0x00000000c000d380                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000d3c8                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d500                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d534                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d5b3                setupINTS()
                0x00000000c000d610                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000d655        0x1 
 .text          0x00000000c000d656      0x78c hal/keybrd.32
                0x00000000c000d656                startGUI(void*)
                0x00000000c000d6c2                startGUIVESA(void*)
                0x00000000c000d72e                sendKeyToTerminal(unsigned char)
                0x00000000c000d7f1                sendKeyboardToken(KeyboardToken)
                0x00000000c000dc31                clearInternalKeybuffer(VgaText*)
                0x00000000c000dc66                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000dd58                Keyboard::Keyboard(char const*)
                0x00000000c000dd58                Keyboard::Keyboard(char const*)
                0x00000000c000dd94                Keyboard::~Keyboard()
                0x00000000c000dd94                Keyboard::~Keyboard()
                0x00000000c000ddb8                Keyboard::~Keyboard()
 .text          0x00000000c000dde2      0x3ea hal/logidisk.32
                0x00000000c000dde2                LogicalDisk::close(int, int, void*)
                0x00000000c000dde6                LogicalDisk::~LogicalDisk()
                0x00000000c000dde6                LogicalDisk::~LogicalDisk()
                0x00000000c000de0a                LogicalDisk::~LogicalDisk()
                0x00000000c000de34                LogicalDisk::open(int, int, void*)
                0x00000000c000de48                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000de80                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000dec6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dec6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000df7c                LogicalDisk::assignDriveLetter()
                0x00000000c000e032                LogicalDisk::mount()
                0x00000000c000e07a                LogicalDisk::unmount()
                0x00000000c000e08a                LogicalDisk::eject()
                0x00000000c000e09e                LogicalDisk::unassignDriveLetter()
                0x00000000c000e0f4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000e160                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000e1cc       0x86 hal/mouse.32
                0x00000000c000e1cc                Mouse::Mouse(char const*)
                0x00000000c000e1cc                Mouse::Mouse(char const*)
                0x00000000c000e204                Mouse::~Mouse()
                0x00000000c000e204                Mouse::~Mouse()
                0x00000000c000e228                Mouse::~Mouse()
 .text          0x00000000c000e252      0x339 hal/partition.32
                0x00000000c000e252                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e2fa                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e58b        0x1 
 .text          0x00000000c000e58c       0x86 hal/serial.32
                0x00000000c000e58c                Serial::Serial(char const*)
                0x00000000c000e58c                Serial::Serial(char const*)
                0x00000000c000e5c4                Serial::~Serial()
                0x00000000c000e5c4                Serial::~Serial()
                0x00000000c000e5e8                Serial::~Serial()
 *fill*         0x00000000c000e612        0x2 
 .text          0x00000000c000e614      0x234 hal/timer.32
                0x00000000c000e614                Timer::Timer(char const*)
                0x00000000c000e614                Timer::Timer(char const*)
                0x00000000c000e64c                Timer::~Timer()
                0x00000000c000e64c                Timer::~Timer()
                0x00000000c000e670                Timer::~Timer()
                0x00000000c000e69a                Timer::read()
                0x00000000c000e6a5                setupTimer(int)
                0x00000000c000e6e0                timerHandler(unsigned int)
 .text          0x00000000c000e848      0x43e hal/vcache.32
                0x00000000c000e848                VCache::VCache(PhysicalDisk*)
                0x00000000c000e848                VCache::VCache(PhysicalDisk*)
                0x00000000c000e9b0                VCache::invalidateReadBuffer()
                0x00000000c000e9c0                VCache::writeWriteBuffer()
                0x00000000c000ea0c                VCache::~VCache()
                0x00000000c000ea0c                VCache::~VCache()
                0x00000000c000ea60                VCache::~VCache()
                0x00000000c000ea88                VCache::write(unsigned long long, int, void*)
                0x00000000c000eb82                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ec86      0x4b3 hal/video.32
                0x00000000c000ec86                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ecd2                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ed42                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000edc0                Video::clearScreen(unsigned int)
                0x00000000c000edf4                Video::putpixel(int, int, unsigned int)
                0x00000000c000ee02                Video::Video(char const*)
                0x00000000c000ee02                Video::Video(char const*)
                0x00000000c000ee38                Video::~Video()
                0x00000000c000ee38                Video::~Video()
                0x00000000c000ee5c                Video::~Video()
                0x00000000c000ee86                Video::isMonochrome()
                0x00000000c000ee92                Video::getWidth()
                0x00000000c000ee9e                Video::getHeight()
                0x00000000c000eeaa                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000ef66                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000f0ce                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000f139        0x3 
 .text          0x00000000c000f13c     0x1307 hw/acpi.32
                0x00000000c000f13c                ACPI::close(int, int, void*)
                0x00000000c000f1f4                findRSDP()
                0x00000000c000f284                loadACPITables(unsigned char*)
                0x00000000c000f4e8                findRSDT(unsigned char*)
                0x00000000c000f638                findDataTable(unsigned char*, char*)
                0x00000000c000f6b0                scanMADT()
                0x00000000c000fb84                ACPI::ACPI()
                0x00000000c000fb84                ACPI::ACPI()
                0x00000000c000fbd8                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fcc0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fd88                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fd90                ACPI::detectPCI()
                0x00000000c000ff98                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ffec                ACPI::sleep()
                0x00000000c0010008                ACPI::open(int, int, void*)
 *fill*         0x00000000c0010443        0x1 
 .text          0x00000000c0010444      0xb95 hw/cpu.32
                0x00000000c0010444                CPU::close(int, int, void*)
                0x00000000c0010448                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0010464                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001047c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c00104f0                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010574                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c00105a2                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00105d0                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00105fe                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c001062c                CPU::CPU()
                0x00000000c001062c                CPU::CPU()
                0x00000000c00106ba                CPU::displayFeatures()
                0x00000000c00106bc                CPU::detectFeatures()
                0x00000000c0010d80                CPU::setupSMEP()
                0x00000000c0010d8c                CPU::setupUMIP()
                0x00000000c0010d96                CPU::setupTSC()
                0x00000000c0010da0                CPU::setupLargePages()
                0x00000000c0010daa                CPU::setupPAT()
                0x00000000c0010de6                CPU::setupMTRR()
                0x00000000c0010de8                CPU::setupGlobalPages()
                0x00000000c0010df2                CPU::allowUsermodeDataAccess()
                0x00000000c0010e04                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010e16                CPU::setupSMAP()
                0x00000000c0010e24                CPU::setupFeatures()
                0x00000000c0010ef0                CPU::open(int, int, void*)
 *fill*         0x00000000c0010fd9        0x1 
 .text          0x00000000c0010fda      0x581 krnl/env.32
                0x00000000c0010fda                EnvVarContainer::getEnv(char const*)
                0x00000000c0011018                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00110da                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00110dc                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00112c2                EnvVarContainer::__loadSystem()
                0x00000000c00112dc                EnvVarContainer::__loadUser()
                0x00000000c00112de                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112de                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011300                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011300                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011330                Krnl::getEnv(Process*, char const*)
                0x00000000c0011395                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00113af                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00113ce                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00113e1                Krnl::deleteEnvSystem(char const*)
                0x00000000c00113e2                Krnl::deleteEnvUser(char const*)
                0x00000000c00113e3                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00113e4                Krnl::newProcessEnv(Process*)
                0x00000000c0011406                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0011452                Krnl::loadSystemEnv()
                0x00000000c0011480                Krnl::loadUserEnv()
                0x00000000c00114a6                Krnl::flushEnv()
                0x00000000c00114a7                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00114c7                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001155b      0x108 krnl/panic.32
                0x00000000c001155b                Krnl::panic(char const*)
 .text          0x00000000c0011663      0x142 krnl/powctrl.32
                0x00000000c0011663                Krnl::powerThread(void*)
                0x00000000c0011691                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c00116a7                Krnl::userIOReceived()
                0x00000000c00116b2                Krnl::handlePowerButton()
                0x00000000c00116e7                Krnl::handleSleepButton()
                0x00000000c001171c                Krnl::setupPowerManager()
 .text          0x00000000c00117a5      0x50e reg/registry.32
                0x00000000c00117a5                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00118fd                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0011a52                Reg::getLine(char*, char*, char*)
                0x00000000c0011a89                Reg::readInt(char*, char*, int*)
                0x00000000c0011b74                Reg::readString(char*, char*, char*, int)
                0x00000000c0011bf5                Reg::readBool(char*, char*, bool*)
                0x00000000c0011c1a                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0011c46                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0011c72                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0011cb3       0x36 sys/sc_eject.32
                0x00000000c0011cb3                Sys::eject(regs*)
 .text          0x00000000c0011ce9       0x18 sys/sc_exit.32
                0x00000000c0011ce9                Sys::exit(regs*)
 .text          0x00000000c0011d01       0x1f sys/sc_getcwd.32
                0x00000000c0011d01                Sys::getCwd(regs*)
 .text          0x00000000c0011d20        0xc sys/sc_getpid.32
                0x00000000c0011d20                Sys::getPID(regs*)
 .text          0x00000000c0011d2c       0x1a sys/sc_getramdata.32
                0x00000000c0011d2c                Sys::getRAMData(regs*)
 .text          0x00000000c0011d46       0x82 sys/sc_getvgaptr.32
                0x00000000c0011d46                Sys::getVGAPtr(regs*)
 .text          0x00000000c0011dc8       0xa8 sys/sc_loaddll.32
                0x00000000c0011dc8                Sys::loadDLL(regs*)
 .text          0x00000000c0011e70       0x68 sys/sc_read.32
                0x00000000c0011e70                Sys::read(regs*)
 .text          0x00000000c0011ed8       0x55 sys/sc_sbrk.32
                0x00000000c0011ed8                Sys::sbrk(regs*)
 .text          0x00000000c0011f2d       0x1c sys/sc_setcwd.32
                0x00000000c0011f2d                Sys::setCwd(regs*)
 .text          0x00000000c0011f49       0x95 sys/sc_settime.32
                0x00000000c0011f49                Sys::setTime(regs*)
 .text          0x00000000c0011fde       0x4a sys/sc_timezone.32
                0x00000000c0011fde                Sys::timezone(regs*)
 .text          0x00000000c0012028       0x68 sys/sc_write.32
                0x00000000c0012028                Sys::write(regs*)
 .text          0x00000000c0012090       0x62 sys/sc_wsbe.32
                0x00000000c0012090                Sys::wsbe(regs*)
 .text          0x00000000c00120f2       0x25 sys/sc_yield.32
                0x00000000c00120f2                Sys::yield(regs*)
 .text          0x00000000c0012117      0xe2c sys/syscalls.32
                0x00000000c0012117                sysCallSeekDir(regs*)
                0x00000000c001211c                sysCallTellDir(regs*)
                0x00000000c0012121                sysCallVerify(regs*)
                0x00000000c001212b                sysCallGetArgc(regs*)
                0x00000000c001213b                sysCallTTYName(regs*)
                0x00000000c0012143                sysFormatDisk(regs*)
                0x00000000c00121b0                sysSetDiskVolumeLabel(regs*)
                0x00000000c00121fa                sysGetDiskVolumeLabel(regs*)
                0x00000000c001224f                sysShutdown(regs*)
                0x00000000c00122ad                sysCallRealpath(regs*)
                0x00000000c00122f0                sysCallReadDir(regs*)
                0x00000000c0012370                sysCallIsATTY(regs*)
                0x00000000c00123cc                sysCallSeek(regs*)
                0x00000000c0012425                sysCallTell(regs*)
                0x00000000c0012494                sysCallSize(regs*)
                0x00000000c0012509                sysCallSizeFromFilename(regs*)
                0x00000000c00125bc                sysCallClose(regs*)
                0x00000000c001261c                sysCallOpenDir(regs*)
                0x00000000c0012693                sysCallCloseDir(regs*)
                0x00000000c00126e7                sysCallMakeDir(regs*)
                0x00000000c0012759                sysCallWait(regs*)
                0x00000000c0012776                sysCallNotImpl(regs*)
                0x00000000c0012791                sysPanic(regs*)
                0x00000000c00127ac                sysCallRmdir(regs*)
                0x00000000c0012813                sysCallUnlink(regs*)
                0x00000000c001287a                sysCallGetArgv(regs*)
                0x00000000c00128c7                sysCallUSleep(regs*)
                0x00000000c00128f0                sysCallSpawn(regs*)
                0x00000000c0012959                sysCallGetEnv(regs*)
                0x00000000c0012a08                sysSetFatAttrib(regs*)
                0x00000000c0012a7f                sysPipe(regs*)
                0x00000000c0012ac4                sysGetUnixTime(regs*)
                0x00000000c0012ad8                string_ends_with(char const*, char const*)
                0x00000000c0012b22                sysCallOpen(regs*)
                0x00000000c0012d16                Sys::loadSyscalls()
                0x00000000c0012f01                Sys::systemCall(regs*, void*)
 .text          0x00000000c0012f43     0x11e5 thr/elf.32
                0x00000000c0012f43                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00131cf                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00133e5                Thr::runtimeReferenceHelper()
                0x00000000c00133f8                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013447                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013705                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0013e3b                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0013e6d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0013ea4                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0013ebe                Thr::loadDLL(char const*, bool)
                0x00000000c00140ef                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0014128     0x12c5 thr/prcssthr.32
                0x00000000c0014128                userModeEntryPoint(void*)
                0x00000000c0014150                changeTSS
                0x00000000c0014180                switchToThread(ThreadControlBlock*)
                0x00000000c0014234                Process::addArgs(char**)
                0x00000000c0014294                Process::Process(char const*, Process*, char**)
                0x00000000c0014294                Process::Process(char const*, Process*, char**)
                0x00000000c0014484                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014484                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014640                taskStartupFunction
                0x00000000c001464c                Semaphore::Semaphore(int)
                0x00000000c001464c                Semaphore::Semaphore(int)
                0x00000000c001467c                Mutex::Mutex()
                0x00000000c001467c                Mutex::Mutex()
                0x00000000c0014690                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014788                Process::createUserThread()
                0x00000000c00147a8                setupMultitasking(void (*)())
                0x00000000c00148b0                schedule()
                0x00000000c0014940                Semaphore::tryAcquire()
                0x00000000c0014a0c                Semaphore::assertLocked(char const*)
                0x00000000c0014a84                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0014aac                blockTask(TaskState)
                0x00000000c0014adc                waitTask(int, int*, int)
                0x00000000c0014b20                milliTenthSleepUntil(unsigned int)
                0x00000000c0014bb0                milliTenthSleep(unsigned int)
                0x00000000c0014bc0                sleep(unsigned int)
                0x00000000c0014bdc                Semaphore::acquire()
                0x00000000c0014c98                taskReturned
                0x00000000c0014cd4                Thr::processFromPID(int)
                0x00000000c0014d74                unblockTask(ThreadControlBlock*)
                0x00000000c0014e18                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00150e4                cleanerTaskFunction(void*)
                0x00000000c00151d4                terminateTask(int)
                0x00000000c00152a0                Thr::terminateFromIRQ(int)
                0x00000000c00152b0                Semaphore::release()
 .text          0x00000000c00153ed      0xb93 vm86/vm8086.32
                0x00000000c00153ed                Vm::inbv(unsigned short)
                0x00000000c0015400                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015436                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015446                Vm::getSegment(unsigned int)
                0x00000000c001544e                Vm::getOffset(unsigned int)
                0x00000000c0015453                Vm::mainloop2()
                0x00000000c001548d                Vm::mainVm8086Loop(void*)
                0x00000000c001549d                Vm::mainloop3(unsigned long)
                0x00000000c00154c3                Vm::initialise8086()
                0x00000000c0015506                Vm::finish8086()
                0x00000000c0015567                Vm::getOutput8086(unsigned char*)
                0x00000000c001558c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015645                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00157ad                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0015837                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0015848                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001585a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001586b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0015880                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0015896                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00158ab                Vm::faultHandler(regs*)
 .text          0x00000000c0015f80      0x8e9 arch/i386/hal.32
                0x00000000c0015f80                noCopro(unsigned long)
                0x00000000c0015f81                nmiHandler(regs*, void*)
                0x00000000c0015f9a                doubleFault(regs*, void*)
                0x00000000c0015fb3                displayDebugInfo(regs*)
                0x00000000c00162d4                displayProgramFault(char const*)
                0x00000000c0016320                gpFault(regs*, void*)
                0x00000000c0016385                pgFault(regs*, void*)
                0x00000000c001640b                otherISRHandler(regs*, void*)
                0x00000000c001643f                opcodeFault(regs*, void*)
                0x00000000c00164bf                i386SaveCoprocessor(void*)
                0x00000000c00164d3                i386LoadCoprocessor(void*)
                0x00000000c00164e7                x87EmulHandler(regs*, void*)
                0x00000000c0016584                HalInitialiseCoprocessor()
                0x00000000c0016632                HalPanic(char const*)
                0x00000000c0016637                HalQueryPerformanceCounter()
                0x00000000c0016652                HalInitialise()
                0x00000000c00167f8                HalMakeBeep(int)
                0x00000000c0016832                HalGetRand()
                0x00000000c0016835                HalEndOfInterrupt(int)
                0x00000000c0016866                HalRestart()
                0x00000000c0016867                HalShutdown()
                0x00000000c0016868                HalSleep()
 *fill*         0x00000000c0016869        0x3 
 .text          0x00000000c001686c      0x2f4 arch/i386/pic.32
                0x00000000c001686c                picIoWait()
                0x00000000c0016874                picDisable()
                0x00000000c00168a8                picGetIRQReg(int)
                0x00000000c001692c                picOpen()
                0x00000000c0016abc                picEOI(int)
 .text          0x00000000c0016b60      0x64d arch/i386/rtc.32
                0x00000000c0016b60                RTC::open(int, int, void*)
                0x00000000c0016b64                RTC::close(int, int, void*)
                0x00000000c0016b68                RTC::timeInSecondsUTC()
                0x00000000c0016b7a                RTC::timeInDatetimeUTC()
                0x00000000c0016ba0                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0016bde                RTC::~RTC()
                0x00000000c0016bde                RTC::~RTC()
                0x00000000c0016c02                RTC::~RTC()
                0x00000000c0016c2c                RTC::get_update_in_progress_flag()
                0x00000000c0016c44                RTC::completeRTCRefresh()
                0x00000000c0016efc                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00170af                rtcIRQHandler(regs*, void*)
                0x00000000c00170f4                RTC::RTC()
                0x00000000c00170f4                RTC::RTC()
 *fill*         0x00000000c00171ad        0x3 
 .text          0x00000000c00171b0      0x203 arch/i386/vga.32
                0x00000000c00171b0                HalConsoleScroll(int, int)
                0x00000000c00172b8                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017324                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00173b3        0x1 
 .text          0x00000000c00173b4     0x13e7 fs/fat/vfslink.32
                0x00000000c00173b4                FAT::getName()
                0x00000000c00173bc                FAT::tell(void*, unsigned long long*)
                0x00000000c00173f8                FAT::stat(void*, unsigned long long*)
                0x00000000c0017434                FAT::~FAT()
                0x00000000c0017434                FAT::~FAT()
                0x00000000c0017458                FAT::~FAT()
                0x00000000c0017480                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017524                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00175e8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00177bc                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00179d4                FAT::allocateSwapfile(char const*, int)
                0x00000000c0017b94                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017d00                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0017d60                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0017dc0                FAT::close(void*)
                0x00000000c0017e14                FAT::closeDir(void*)
                0x00000000c0017e68                FAT::seek(void*, unsigned long long)
                0x00000000c0017ec0                fatWrapperReadDisk
                0x00000000c0017f04                fatWrapperWriteDisk
                0x00000000c0017f48                fatWrapperIoctl
                0x00000000c0018064                FAT::FAT()
                0x00000000c0018064                FAT::FAT()
                0x00000000c00180b8                FAT::fixFilepath(char*)
                0x00000000c00180f4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001822c                FAT::openDir(char const*, void**)
                0x00000000c00182dc                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00183d4                FAT::unlink(char const*)
                0x00000000c0018454                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00185e0                FAT::rename(char const*, char const*)
                0x00000000c00186ac                FAT::mkdir(char const*)
                0x00000000c001872c                FAT::exists(char const*)
 *fill*         0x00000000c001879b        0x1 
 .text          0x00000000c001879c       0x5c fs/iso9660/helper.32
                0x00000000c001879c                isoReadDiscSectorHelper(unsigned char*, unsigned int, int, char)
 .text          0x00000000c00187f8      0xc1b fs/iso9660/vfslink.32
                0x00000000c00187f8                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00187fe                ISO9660::seek(void*, unsigned long long)
                0x00000000c001882e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0018852                ISO9660::getName()
                0x00000000c0018858                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001887c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0018882                ISO9660::unlink(char const*)
                0x00000000c0018888                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001888e                ISO9660::rename(char const*, char const*)
                0x00000000c0018894                ISO9660::mkdir(char const*)
                0x00000000c001889a                ISO9660::close(void*)
                0x00000000c00188bc                ISO9660::closeDir(void*)
                0x00000000c00188de                ISO9660::~ISO9660()
                0x00000000c00188de                ISO9660::~ISO9660()
                0x00000000c0018902                ISO9660::~ISO9660()
                0x00000000c0018929                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001896b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c00189f6                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0018a56                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0018c5a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0018ed2                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0018f41                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001912a                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c00191dc                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001929e                ISO9660::exists(char const*)
                0x00000000c00192c2                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019356                ISO9660::openDir(char const*, void**)
                0x00000000c00193f0                ISO9660::ISO9660()
                0x00000000c00193f0                ISO9660::ISO9660()
 *fill*         0x00000000c0019413        0x1 
 .text          0x00000000c0019414      0x26c hal/sound/sndcard.32
                0x00000000c0019414                SoundCard::beginPlayback()
                0x00000000c0019422                SoundCard::stopPlayback()
                0x00000000c0019430                SoundCard::SoundCard(char const*)
                0x00000000c0019430                SoundCard::SoundCard(char const*)
                0x00000000c00194ce                SoundCard::~SoundCard()
                0x00000000c00194ce                SoundCard::~SoundCard()
                0x00000000c00194f2                SoundCard::~SoundCard()
                0x00000000c001951c                SoundCard::configureRates(int, int, int)
                0x00000000c001954c                SoundCard::getSamples16(int, short*)
                0x00000000c00195a8                SoundCard::getSamples32(int, int*)
                0x00000000c001962e                SoundCard::addChannel(SoundPort*)
                0x00000000c001966c                SoundCard::removeChannel(int)
 .text          0x00000000c0019680      0x377 hal/sound/sndport.32
                0x00000000c0019680                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019680                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001970c                SoundPort::~SoundPort()
                0x00000000c001970c                SoundPort::~SoundPort()
                0x00000000c0019740                SoundPort::unpause()
                0x00000000c001974c                SoundPort::pause()
                0x00000000c0019758                SoundPort::getBufferUsed()
                0x00000000c0019760                SoundPort::getBufferSize()
                0x00000000c0019768                SoundPort::buffer16(short*, int)
                0x00000000c00197f4                SoundPort::buffer32(int*, int)
                0x00000000c001987c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019940                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c00199f7        0x0 hw/bus/isa.32
 *fill*         0x00000000c00199f7        0x1 
 .text          0x00000000c00199f8      0xb49 hw/bus/pci.32
                0x00000000c00199f8                PCI::open(int, int, void*)
                0x00000000c0019a16                PCI::close(int, int, void*)
                0x00000000c0019a1a                PCI::PCI()
                0x00000000c0019a1a                PCI::PCI()
                0x00000000c0019ab4                PCI::readBAR8(unsigned int, int)
                0x00000000c0019ad0                PCI::readBAR16(unsigned int, int)
                0x00000000c0019aee                PCI::readBAR32(unsigned int, int)
                0x00000000c0019b0a                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0019b2a                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0019b4c                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0019b6c                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019bda                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019c82                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0019ca6                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0019cce                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0019d18                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0019d40                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0019d64                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0019d88                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0019db0                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019e14                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0019efc                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a176                PCI::checkBus(unsigned char)
                0x00000000c001a19c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a30e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001a482                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001a4ee                PCI::detect()
 *fill*         0x00000000c001a541        0x1 
 .text          0x00000000c001a542      0xb5a hw/diskctrl/ide.32
                0x00000000c001a542                IDE::close(int, int, void*)
                0x00000000c001a546                IDE::IDE()
                0x00000000c001a546                IDE::IDE()
                0x00000000c001a57a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001a58c                selectDrive(unsigned char, unsigned char)
                0x00000000c001a58e                IDE::getBase(unsigned char)
                0x00000000c001a5a0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001a660                IDE::read(unsigned char, unsigned char)
                0x00000000c001a70e                IDE::waitInterrupt(unsigned char)
                0x00000000c001a776                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001a792                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001a7ae                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001a7f4                IDE::open(int, int, void*)
                0x00000000c001ac02                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001acce                IDE::detect()
                0x00000000c001af8e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b03e                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b09c      0x32a hw/diskctrl/satabus.32
                0x00000000c001b09c                SATABus::close(int, int, void*)
                0x00000000c001b0a0                SATABus::detect()
                0x00000000c001b0a2                SATABus::SATABus()
                0x00000000c001b0a2                SATABus::SATABus()
                0x00000000c001b128                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b15a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b1a2                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b1c2                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b1ec                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b2fc                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001b3a6                SATABus::open(int, int, void*)
 .text          0x00000000c001b3c6      0x5f4 hw/diskphys/ata.32
                0x00000000c001b3c6                ATA::close(int, int, void*)
                0x00000000c001b3ea                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001b3ec                ATA::ATA()
                0x00000000c001b3ec                ATA::ATA()
                0x00000000c001b41a                ATA::flush(bool)
                0x00000000c001b464                ATA::readyForCommand()
                0x00000000c001b4b0                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001b82c                ATA::read(unsigned long long, int, void*)
                0x00000000c001b878                ATA::write(unsigned long long, int, void*)
                0x00000000c001b8c4                ATA::detectCHS()
                0x00000000c001b8ee                ATA::open(int, int, void*)
 .text          0x00000000c001b9ba      0x60e hw/diskphys/atapi.32
                0x00000000c001b9ba                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001b9c0                ATAPI::close(int, int, void*)
                0x00000000c001b9e4                ATAPI::ATAPI()
                0x00000000c001b9e4                ATAPI::ATAPI()
                0x00000000c001ba12                ATAPI::readyForCommand()
                0x00000000c001ba64                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001bd24                ATAPI::diskRemoved()
                0x00000000c001bd5e                ATAPI::eject()
                0x00000000c001bda6                ATAPI::diskInserted()
                0x00000000c001bdb2                ATAPI::detectMedia()
                0x00000000c001be6e                ATAPI::open(int, int, void*)
                0x00000000c001bf4e                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001bfc8      0x402 hw/diskphys/sata.32
                0x00000000c001bfc8                SATA::close(int, int, void*)
                0x00000000c001bfec                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001bfee                SATA::open(int, int, void*)
                0x00000000c001c098                SATA::SATA()
                0x00000000c001c098                SATA::SATA()
                0x00000000c001c0c6                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c312                SATA::read(unsigned long long, int, void*)
                0x00000000c001c35e                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001c3ca      0x5b9 hw/diskphys/satapi.32
                0x00000000c001c3ca                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001c3d0                SATAPI::close(int, int, void*)
                0x00000000c001c3f4                SATAPI::open(int, int, void*)
                0x00000000c001c4ec                SATAPI::SATAPI()
                0x00000000c001c4ec                SATAPI::SATAPI()
                0x00000000c001c51a                SATAPI::diskRemoved()
                0x00000000c001c51c                SATAPI::diskInserted()
                0x00000000c001c538                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001c814                SATAPI::eject()
                0x00000000c001c850                SATAPI::read(unsigned long long, int, void*)
                0x00000000c001c982                SATAPI::detectMedia()
 *fill*         0x00000000c001c983        0x1 
 .text          0x00000000c001c984      0x455 hw/intctrl/apic.32
                0x00000000c001c984                IOAPIC::close(int, int, void*)
                0x00000000c001c98a                apicGetBase()
                0x00000000c001c9cc                IOAPIC::IOAPIC()
                0x00000000c001c9cc                IOAPIC::IOAPIC()
                0x00000000c001c9f4                apicOpen()
                0x00000000c001cb5a                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001cb8c                IOAPIC::read(int)
                0x00000000c001cbb4                IOAPIC::open(int, int, void*)
                0x00000000c001cca8                IOAPIC::write(int, int)
                0x00000000c001ccd4                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001cdd9        0x3 
 .text          0x00000000c001cddc       0xf0 hw/timer/apictimer.32
                0x00000000c001cddc                APICTimer::close(int, int, void*)
                0x00000000c001cde4                apicTimerHandler(regs*, void*)
                0x00000000c001ce0c                APICTimer::open(int, int, void*)
                0x00000000c001ce7c                APICTimer::write(int)
                0x00000000c001cea4                APICTimer::APICTimer()
                0x00000000c001cea4                APICTimer::APICTimer()
 .text          0x00000000c001cecc      0x1aa hw/timer/pit.32
                0x00000000c001cecc                PIT::write(int)
                0x00000000c001cf50                pitHandler(regs*, void*)
                0x00000000c001cf74                PIT::open(int, int, void*)
                0x00000000c001cfc4                PIT::close(int, int, void*)
                0x00000000c001cff4                PIT::PIT()
                0x00000000c001cff4                PIT::PIT()
 *fill*         0x00000000c001d076        0xa 
 .text          0x00000000c001d080       0x83 arch/i386/avx.32
                0x00000000c001d080                avxDetect
                0x00000000c001d0aa                avxSave
                0x00000000c001d0bb                avxLoad
                0x00000000c001d0cc                avxInit
                0x00000000c001d0ee                avxClose
                0x00000000c001d0ef                wouldSheSayYes
 *fill*         0x00000000c001d103        0xd 
 .text          0x00000000c001d110      0x1d6 arch/i386/interrupt.32
                0x00000000c001d110                isr0
                0x00000000c001d120                isr1
                0x00000000c001d12a                isr2
                0x00000000c001d134                isr3
                0x00000000c001d13e                isr4
                0x00000000c001d148                isr5
                0x00000000c001d152                isr6
                0x00000000c001d15c                isr7
                0x00000000c001d166                isr8
                0x00000000c001d16e                isr9
                0x00000000c001d178                isr10
                0x00000000c001d180                isr11
                0x00000000c001d188                isr12
                0x00000000c001d190                isr13
                0x00000000c001d198                isr14
                0x00000000c001d1a0                isr15
                0x00000000c001d1aa                isr16
                0x00000000c001d1b4                isr17
                0x00000000c001d1be                isr18
                0x00000000c001d1c8                irq3
                0x00000000c001d1d2                irq4
                0x00000000c001d1dc                irq5
                0x00000000c001d1e6                irq6
                0x00000000c001d1f0                irq7
                0x00000000c001d1fa                irq8
                0x00000000c001d204                irq9
                0x00000000c001d20e                irq10
                0x00000000c001d218                irq11
                0x00000000c001d222                irq12
                0x00000000c001d22c                irq13
                0x00000000c001d236                irq14
                0x00000000c001d240                irq15
                0x00000000c001d24a                irq1
                0x00000000c001d251                irq2
                0x00000000c001d258                isr96
                0x00000000c001d25f                irq0
                0x00000000c001d264                int_common_stub
                0x00000000c001d264                syscall_common_stub
                0x00000000c001d296                irq16
                0x00000000c001d2a0                irq17
                0x00000000c001d2aa                irq18
                0x00000000c001d2b4                irq19
                0x00000000c001d2be                irq20
                0x00000000c001d2c8                irq21
                0x00000000c001d2d2                irq22
                0x00000000c001d2dc                irq23
 *fill*         0x00000000c001d2e6        0xa 
 .text          0x00000000c001d2f0       0x10 arch/i386/rdrand.32
                0x00000000c001d2f0                i386GetRDRAND
 .text          0x00000000c001d300       0x39 arch/i386/sse.32
                0x00000000c001d300                absolutelyNoChanceInHell
                0x00000000c001d300                sseDetect
                0x00000000c001d318                sseSave
                0x00000000c001d320                sseLoad
                0x00000000c001d328                sseInit
                0x00000000c001d338                sseClose
 *fill*         0x00000000c001d339        0x7 
 .text          0x00000000c001d340       0x49 arch/i386/x87.32
                0x00000000c001d346                x87Detect
                0x00000000c001d361                x87Save
                0x00000000c001d368                x87Load
                0x00000000c001d36f                x87Init
                0x00000000c001d388                x87Close
 *fill*         0x00000000c001d389        0x3 
 .text          0x00000000c001d38c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001d3b1        0x0 crtn.32
 *fill*         0x00000000c001d3b1        0x3 
 .text          0x00000000c001d3b4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001d3b4                __divdi3
 *fill*         0x00000000c001d4ff        0x1 
 .text          0x00000000c001d500      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001d500                __moddi3
 *fill*         0x00000000c001d67e        0x2 
 .text          0x00000000c001d680       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001d680                __udivdi3
 *fill*         0x00000000c001d77f        0x1 
 .text          0x00000000c001d780      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001d780                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001d8a0        0x0
 .iplt          0x00000000c001d8a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001d89a        0xf
 .init          0x00000000c001d89a        0x3 crti.32
                0x00000000c001d89a                _init
 .init          0x00000000c001d89d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001d8a2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001d8a7        0x2 crtn.32

.fini           0x00000000c001d8a9        0xa
 .fini          0x00000000c001d8a9        0x3 crti.32
                0x00000000c001d8a9                _fini
 .fini          0x00000000c001d8ac        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001d8b1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001d8b4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001d8b4       0x23 core/computer.32
                0x00000000c001d8b4                Computer::~Computer()
                0x00000000c001d8b4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001d8d8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001d8d8       0x2a core/computer.32
                0x00000000c001d8d8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001d902       0x21
 .text._Z10idleCommonv
                0x00000000c001d902       0x21 core/idle.32
                0x00000000c001d902                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001d924        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001d924        0x2 core/unixfile.32
                0x00000000c001d924                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001d924                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001d926       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001d926       0x42 core/unixfile.32
                0x00000000c001d926                LinkedList<UnixFile>::LinkedList()
                0x00000000c001d926                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001d968       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001d968       0xd3 core/unixfile.32
                0x00000000c001d968                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001da3c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001da3c        0x7 core/unixfile.32
                0x00000000c001da3c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001da44       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001da44       0xa1 core/unixfile.32
                0x00000000c001da44                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001dae6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001dae6        0x8 core/unixfile.32
                0x00000000c001dae6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001daee       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001daee       0x1a hal/device.32
                0x00000000c001daee                DriverlessDevice::~DriverlessDevice()
                0x00000000c001daee                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001db08       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001db08       0x2a hal/device.32
                0x00000000c001db08                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001db32       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001db32       0xdc hal/device.32
                0x00000000c001db32                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001dc0e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001dc0e       0x42 hal/device.32
                0x00000000c001dc0e                LinkedList<Device>::LinkedList()
                0x00000000c001dc0e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001dc50       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001dc50       0x1c hal/timer.32
                0x00000000c001dc50                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001dc6c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001dc6c        0x7 hal/timer.32
                0x00000000c001dc6c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001dc74       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001dc74       0xb8 hal/timer.32
                0x00000000c001dc74                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001dd2c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001dd2c       0xda hal/timer.32
                0x00000000c001dd2c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001de08       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001de08       0x23 hw/acpi.32
                0x00000000c001de08                ACPI::~ACPI()
                0x00000000c001de08                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001de2c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001de2c       0x2a hw/acpi.32
                0x00000000c001de2c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001de58        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001de58        0x2 hw/acpi.32
                0x00000000c001de58                LinkedList<Device>::~LinkedList()
                0x00000000c001de58                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001de5c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001de5c       0x1c hw/acpi.32
                0x00000000c001de5c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001de78        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001de78        0x7 hw/acpi.32
                0x00000000c001de78                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001de80       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001de80       0xb8 hw/acpi.32
                0x00000000c001de80                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001df38       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001df38       0x23 hw/cpu.32
                0x00000000c001df38                CPU::~CPU()
                0x00000000c001df38                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001df5c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001df5c       0x2a hw/cpu.32
                0x00000000c001df5c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001df88        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001df88        0x2 thr/prcssthr.32
                0x00000000c001df88                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001df88                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001df8c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001df8c       0x49 thr/prcssthr.32
                0x00000000c001df8c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001df8c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001dfd8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001dfd8       0x42 thr/prcssthr.32
                0x00000000c001dfd8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001dfd8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e01c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e01c        0x8 thr/prcssthr.32
                0x00000000c001e01c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001e024       0x23
 .text._ZN3PCID2Ev
                0x00000000c001e024       0x23 hw/bus/pci.32
                0x00000000c001e024                PCI::~PCI()
                0x00000000c001e024                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001e048       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001e048       0x2a hw/bus/pci.32
                0x00000000c001e048                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001e072       0x23
 .text._ZN3IDED2Ev
                0x00000000c001e072       0x23 hw/diskctrl/ide.32
                0x00000000c001e072                IDE::~IDE()
                0x00000000c001e072                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001e096       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001e096       0x2a hw/diskctrl/ide.32
                0x00000000c001e096                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001e0c0       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001e0c0       0x23 hw/diskctrl/satabus.32
                0x00000000c001e0c0                SATABus::~SATABus()
                0x00000000c001e0c0                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001e0e4       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001e0e4       0x2a hw/diskctrl/satabus.32
                0x00000000c001e0e4                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001e10e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001e10e       0x23 hw/diskphys/ata.32
                0x00000000c001e10e                ATA::~ATA()
                0x00000000c001e10e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001e132       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001e132       0x2a hw/diskphys/ata.32
                0x00000000c001e132                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001e15c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001e15c       0x23 hw/diskphys/atapi.32
                0x00000000c001e15c                ATAPI::~ATAPI()
                0x00000000c001e15c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001e180       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001e180       0x2a hw/diskphys/atapi.32
                0x00000000c001e180                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001e1aa       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001e1aa       0x23 hw/diskphys/sata.32
                0x00000000c001e1aa                SATA::~SATA()
                0x00000000c001e1aa                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001e1ce       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001e1ce       0x2a hw/diskphys/sata.32
                0x00000000c001e1ce                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001e1f8       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001e1f8       0x23 hw/diskphys/satapi.32
                0x00000000c001e1f8                SATAPI::~SATAPI()
                0x00000000c001e1f8                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001e21c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001e21c       0x2a hw/diskphys/satapi.32
                0x00000000c001e21c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001e246       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001e246       0x23 hw/intctrl/apic.32
                0x00000000c001e246                IOAPIC::~IOAPIC()
                0x00000000c001e246                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001e26a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001e26a       0x2a hw/intctrl/apic.32
                0x00000000c001e26a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001e294       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001e294       0x23 hw/timer/apictimer.32
                0x00000000c001e294                APICTimer::~APICTimer()
                0x00000000c001e294                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001e2b8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001e2b8       0x2a hw/timer/apictimer.32
                0x00000000c001e2b8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001e2e4       0x23
 .text._ZN3PITD2Ev
                0x00000000c001e2e4       0x23 hw/timer/pit.32
                0x00000000c001e2e4                PIT::~PIT()
                0x00000000c001e2e4                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001e308       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001e308       0x2a hw/timer/pit.32
                0x00000000c001e308                PIT::~PIT()

.rodata         0x00000000c001e332     0x285e
                0x00000000c001e332                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001e332        0x2 
 .ctors         0x00000000c001e334        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001e338        0x4 core/unixfile.32
 .ctors         0x00000000c001e33c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001e340        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001e344                end_ctors = .
                0x00000000c001e344                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001e344        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001e348        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001e348                __DTOR_END__
                0x00000000c001e34c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001e34c       0x14 
 .rodata        0x00000000c001e360      0x101 acpica/utclib.32
                0x00000000c001e360                AcpiGbl_Ctypes
 *fill*         0x00000000c001e461        0x3 
 .rodata        0x00000000c001e464       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001e47c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001e4c6       0x1a 
 .rodata        0x00000000c001e4e0       0xed fs/fat/ff.32
 *fill*         0x00000000c001e5cd       0x13 
 .rodata        0x00000000c001e5e0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001e9e0       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001e9f1       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001ea3a      0x115 core/computer.32
 *fill*         0x00000000c001eb4f        0x1 
 .rodata.str1.4
                0x00000000c001eb50       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001ebb8       0x2c core/computer.32
                0x00000000c001ebb8                vtable for Computer
 .rodata.str1.4
                0x00000000c001ebe4       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001ec14        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001ec20       0x17 core/main.32
 *fill*         0x00000000c001ec37        0x1 
 .rodata.str1.4
                0x00000000c001ec38       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001ecdd       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001ed35       0x39 core/pipe.32
 *fill*         0x00000000c001ed6e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001ed70       0x1c core/pipe.32
                0x00000000c001ed70                vtable for Pipe
 .rodata.str1.1
                0x00000000c001ed8c       0x69 core/terminal.32
 *fill*         0x00000000c001edf5        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001edf8       0x1c core/terminal.32
                0x00000000c001edf8                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001ee14       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001ee36       0x15 core/unixfile.32
 *fill*         0x00000000c001ee4b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001ee4c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001ee97        0x8 core/unixfile.32
 *fill*         0x00000000c001ee9f        0x1 
 .rodata.str1.4
                0x00000000c001eea0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001eec0       0x1c core/unixfile.32
                0x00000000c001eec0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001eedc       0x1c core/unixfile.32
                0x00000000c001eedc                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001eef8      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001f05f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001f166       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001f199       0x11 dbg/kconsole.32
 *fill*         0x00000000c001f199        0x3 
 .rodata        0x00000000c001f19c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001f2ec       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001f2ec       0x68 fs/vfs.32
                0x00000000c001f2ec                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001f354       0x1c fs/vfs.32
                0x00000000c001f354                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001f370       0x1c fs/vfs.32
                0x00000000c001f370                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001f38c       0x2c hal/bus.32
                0x00000000c001f38c                vtable for Bus
 .rodata.str1.1
                0x00000000c001f3b8       0x1e hal/clock.32
 *fill*         0x00000000c001f3d6        0x2 
 .rodata._ZTV5Clock
                0x00000000c001f3d8       0x3c hal/clock.32
                0x00000000c001f3d8                vtable for Clock
 *fill*         0x00000000c001f414        0xc 
 .rodata        0x00000000c001f420       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001f450       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001f4a8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001f4a8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001f4a8       0x2c hal/device.32
                0x00000000c001f4a8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001f4d4       0x2c hal/device.32
                0x00000000c001f4d4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001f500       0x2c hal/diskctrl.32
                0x00000000c001f500                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001f52c       0x38 hal/diskphys.32
                0x00000000c001f52c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001f564       0x3e hal/intctrl.32
 *fill*         0x00000000c001f5a2        0x2 
 .rodata.str1.4
                0x00000000c001f5a4       0x5d hal/intctrl.32
 .rodata        0x00000000c001f601       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001f654       0x34 hal/keybrd.32
                0x00000000c001f654                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001f688       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001f6cc       0x2c hal/logidisk.32
                0x00000000c001f6cc                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001f6f8       0x2c hal/mouse.32
                0x00000000c001f6f8                vtable for Mouse
 .rodata.str1.1
                0x00000000c001f724        0xb hal/partition.32
 *fill*         0x00000000c001f72f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001f730       0x44 hal/serial.32
                0x00000000c001f730                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001f774       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001f774        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001f774       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001f774       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001f774       0x30 hal/timer.32
                0x00000000c001f774                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001f7a4       0x10 hal/vcache.32
                0x00000000c001f7a4                vtable for VCache
 .rodata.str1.1
                0x00000000c001f7b4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001f81c       0x48 hal/video.32
                0x00000000c001f81c                vtable for Video
 .rodata.str1.4
                0x00000000c001f864       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001f8ff      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001fa3b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001fa3b        0x8 hw/acpi.32
 *fill*         0x00000000c001fa3b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001fa3c       0x2c hw/acpi.32
                0x00000000c001fa3c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001fa68      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001fbd5        0x3 
 .rodata._ZTV3CPU
                0x00000000c001fbd8       0x2c hw/cpu.32
                0x00000000c001fbd8                vtable for CPU
 .rodata.str1.1
                0x00000000c001fc04       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001fc40       0x3d krnl/panic.32
                                         0x3e (size before relaxing)
 *fill*         0x00000000c001fc7d        0x3 
 .rodata.str1.4
                0x00000000c001fc80       0x3a krnl/panic.32
 .rodata.str1.1
                0x00000000c001fcba       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001fcff        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001fd09       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001fd5d       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001fd89       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001fdd1      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001ff9d       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001fff4      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020100       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020100       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020100       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020100        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0020100       0xa0 vm86/vm8086.32
 .rodata        0x00000000c00201a0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00201d0      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c00202de        0x2 
 .rodata.str1.4
                0x00000000c00202e0       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0020353       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0020368       0x3c arch/i386/rtc.32
                0x00000000c0020368                vtable for RTC
 .rodata.str1.1
                0x00000000c00203a4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00203e5        0x3 
 .rodata._ZTV3FAT
                0x00000000c00203e8       0x68 fs/fat/vfslink.32
                0x00000000c00203e8                vtable for FAT
 .rodata.str1.1
                0x00000000c0020450       0x6e fs/iso9660/vfslink.32
 *fill*         0x00000000c00204be        0x2 
 .rodata._ZTV7ISO9660
                0x00000000c00204c0       0x68 fs/iso9660/vfslink.32
                0x00000000c00204c0                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0020528       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002056c       0x34 hal/sound/sndcard.32
                0x00000000c002056c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00205a0       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00205df       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0020617       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00206b8       0x2c hw/bus/pci.32
                0x00000000c00206b8                vtable for PCI
 .rodata.str1.1
                0x00000000c00206e4       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c002076b        0x1 
 .rodata._ZTV3IDE
                0x00000000c002076c       0x2c hw/diskctrl/ide.32
                0x00000000c002076c                vtable for IDE
 .rodata.str1.4
                0x00000000c0020798       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00207bc       0x2c hw/diskctrl/satabus.32
                0x00000000c00207bc                vtable for SATABus
 .rodata.str1.1
                0x00000000c00207e8       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c00207fa        0x2 
 .rodata._ZTV3ATA
                0x00000000c00207fc       0x38 hw/diskphys/ata.32
                0x00000000c00207fc                vtable for ATA
 .rodata.str1.1
                0x00000000c0020834        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0020841        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0020844       0x38 hw/diskphys/atapi.32
                0x00000000c0020844                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002087c       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00208f8       0x38 hw/diskphys/sata.32
                0x00000000c00208f8                vtable for SATA
 .rodata.str1.1
                0x00000000c0020930      0x158 hw/diskphys/satapi.32
                                        0x165 (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c0020a88       0x38 hw/diskphys/satapi.32
                0x00000000c0020a88                vtable for SATAPI
 .rodata        0x00000000c0020ac0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0020ac8       0x2c hw/intctrl/apic.32
                0x00000000c0020ac8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0020af4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0020b0f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0020b10       0x30 hw/timer/apictimer.32
                0x00000000c0020b10                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0020b40       0x1d hw/timer/pit.32
 *fill*         0x00000000c0020b5d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0020b60       0x30 hw/timer/pit.32
                0x00000000c0020b60                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0020b90      0x265
 *(.data)
 .data          0x00000000c0020b90        0x0 crti.32
 .data          0x00000000c0020b90        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0020b90                __dso_handle
 .data          0x00000000c0020b94        0x0 acpica/utclib.32
 .data          0x00000000c0020b94        0x0 core/malloc.32
 .data          0x00000000c0020b94        0x0 libk/ctype.32
 .data          0x00000000c0020b94        0x0 libk/string.32
 .data          0x00000000c0020b94        0x0 fs/fat/diskio.32
 .data          0x00000000c0020b94        0x0 fs/fat/ff.32
 .data          0x00000000c0020b94        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0020b94        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0020b94        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0020b94        0x0 compat/inlines.32
 .data          0x00000000c0020b94        0x0 compat/resolve.32
 .data          0x00000000c0020b94        0x0 core/computer.32
 .data          0x00000000c0020b94        0x0 core/gdt.32
 .data          0x00000000c0020b94        0x0 core/idle.32
 .data          0x00000000c0020b94        0x0 core/idt.32
 .data          0x00000000c0020b94        0x4 core/kheap.32
 *fill*         0x00000000c0020b98        0x8 
 .data          0x00000000c0020ba0      0x142 core/main.32
                0x00000000c0020ba0                titleScreen
 *fill*         0x00000000c0020ce2        0x2 
 .data          0x00000000c0020ce4        0x4 core/physmgr.32
                0x00000000c0020ce4                Phys::bitmap
 .data          0x00000000c0020ce8        0x0 core/pipe.32
 *fill*         0x00000000c0020ce8       0x18 
 .data          0x00000000c0020d00       0x60 core/terminal.32
                0x00000000c0020d00                VgaText::hiddenOut
                0x00000000c0020d20                ansiToVGAMappings
 .data          0x00000000c0020d60        0x0 core/tss.32
 .data          0x00000000c0020d60        0x4 core/unixfile.32
                0x00000000c0020d60                UnixFile::nextFd
 .data          0x00000000c0020d64       0x15 core/virtmgr.32
                0x00000000c0020d64                Virt::pageAllocPtr
                0x00000000c0020d68                Virt::bitmap
                0x00000000c0020d6c                Virt::swapfileSectorsPerPage
                0x00000000c0020d70                Virt::swapfileLength
                0x00000000c0020d74                Virt::swapfileSector
                0x00000000c0020d78                Virt::swapfileDrive
 *fill*         0x00000000c0020d79        0x3 
 .data          0x00000000c0020d7c        0x4 coreobjs/c++.32
                0x00000000c0020d7c                __stack_chk_guard
 .data          0x00000000c0020d80        0x0 dbg/kconsole.32
 .data          0x00000000c0020d80        0x0 fs/vfs.32
 .data          0x00000000c0020d80        0x0 hal/bus.32
 .data          0x00000000c0020d80        0x0 hal/buzzer.32
 .data          0x00000000c0020d80        0x0 hal/clock.32
 .data          0x00000000c0020d80        0x0 hal/device.32
 .data          0x00000000c0020d80        0x0 hal/diskctrl.32
 .data          0x00000000c0020d80        0x0 hal/diskphys.32
 .data          0x00000000c0020d80        0x0 hal/fpu.32
 .data          0x00000000c0020d80        0x0 hal/intctrl.32
 .data          0x00000000c0020d80        0x0 hal/keybrd.32
 .data          0x00000000c0020d80        0x0 hal/logidisk.32
 .data          0x00000000c0020d80        0x0 hal/mouse.32
 .data          0x00000000c0020d80        0x0 hal/partition.32
 .data          0x00000000c0020d80        0x0 hal/serial.32
 .data          0x00000000c0020d80        0x0 hal/timer.32
 .data          0x00000000c0020d80        0x0 hal/vcache.32
 .data          0x00000000c0020d80        0x0 hal/video.32
 .data          0x00000000c0020d80       0x10 hw/acpi.32
                0x00000000c0020d80                legacyIRQRemaps
 .data          0x00000000c0020d90        0x4 hw/cpu.32
                0x00000000c0020d90                lastCode
 *fill*         0x00000000c0020d94        0xc 
 .data          0x00000000c0020da0       0x4d krnl/env.32
                0x00000000c0020da0                defaultSysEnv
 .data          0x00000000c0020ded        0x0 krnl/panic.32
 .data          0x00000000c0020ded        0x0 krnl/powctrl.32
 .data          0x00000000c0020ded        0x0 reg/registry.32
 .data          0x00000000c0020ded        0x0 sys/sc_eject.32
 .data          0x00000000c0020ded        0x0 sys/sc_exit.32
 .data          0x00000000c0020ded        0x0 sys/sc_getcwd.32
 .data          0x00000000c0020ded        0x0 sys/sc_getpid.32
 .data          0x00000000c0020ded        0x0 sys/sc_getramdata.32
 .data          0x00000000c0020ded        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c0020ded        0x0 sys/sc_loaddll.32
 .data          0x00000000c0020ded        0x0 sys/sc_read.32
 .data          0x00000000c0020ded        0x0 sys/sc_sbrk.32
 .data          0x00000000c0020ded        0x0 sys/sc_setcwd.32
 .data          0x00000000c0020ded        0x0 sys/sc_settime.32
 .data          0x00000000c0020ded        0x0 sys/sc_timezone.32
 .data          0x00000000c0020ded        0x0 sys/sc_write.32
 .data          0x00000000c0020ded        0x0 sys/sc_wsbe.32
 .data          0x00000000c0020ded        0x0 sys/sc_yield.32
 .data          0x00000000c0020ded        0x0 sys/syscalls.32
 .data          0x00000000c0020ded        0x0 thr/elf.32
 *fill*         0x00000000c0020ded        0x3 
 .data          0x00000000c0020df0        0x4 thr/prcssthr.32
                0x00000000c0020df0                Thr::nextPID
 .data          0x00000000c0020df4        0x0 vm86/vm8086.32
 .data          0x00000000c0020df4        0x0 arch/i386/hal.32
 .data          0x00000000c0020df4        0x0 arch/i386/pic.32
 .data          0x00000000c0020df4        0x0 arch/i386/rtc.32
 .data          0x00000000c0020df4        0x0 arch/i386/vga.32
 .data          0x00000000c0020df4        0x0 fs/fat/vfslink.32
 .data          0x00000000c0020df4        0x0 fs/iso9660/helper.32
 .data          0x00000000c0020df4        0x1 fs/iso9660/vfslink.32
                0x00000000c0020df4                recentDriveletter
 .data          0x00000000c0020df5        0x0 hal/sound/sndcard.32
 .data          0x00000000c0020df5        0x0 hal/sound/sndport.32
 .data          0x00000000c0020df5        0x0 hw/bus/isa.32
 .data          0x00000000c0020df5        0x0 hw/bus/pci.32
 .data          0x00000000c0020df5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0020df5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0020df5        0x0 hw/diskphys/ata.32
 .data          0x00000000c0020df5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0020df5        0x0 hw/diskphys/sata.32
 .data          0x00000000c0020df5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0020df5        0x0 hw/intctrl/apic.32
 .data          0x00000000c0020df5        0x0 hw/timer/apictimer.32
 .data          0x00000000c0020df5        0x0 hw/timer/pit.32
 .data          0x00000000c0020df5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0020df5        0x0 crtn.32
 .data          0x00000000c0020df5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0020df5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0020df5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0020df5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0020df8        0x0
 .got           0x00000000c0020df8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0020df8        0x0
 .got.plt       0x00000000c0020df8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0020df8        0x0
 .igot.plt      0x00000000c0020df8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0020df8        0x0
 .tm_clone_table
                0x00000000c0020df8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0020df8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0020df5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0020df5        0x3 
 .eh_frame      0x00000000c0020df8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0020df8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0020df8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0020e50       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0020e90       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0020efc       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c0020f80        0x0
 .rel.got       0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0020f80        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0020f80     0x56c8
                0x00000000c0020f80                sbss = .
 *(COMMON)
 COMMON         0x00000000c0020f80        0x1 fs/iso9660/iso9660.32
                0x00000000c0020f80                cdDriveLetter
 *(.bss)
 .bss           0x00000000c0020f81        0x0 crti.32
 *fill*         0x00000000c0020f81        0x3 
 .bss           0x00000000c0020f84       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0020fa4        0x4 acpica/utclib.32
 *fill*         0x00000000c0020fa8       0x18 
 .bss           0x00000000c0020fc0      0x378 core/malloc.32
 .bss           0x00000000c0021338        0x0 libk/ctype.32
 .bss           0x00000000c0021338        0x0 libk/string.32
 .bss           0x00000000c0021338        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0021338        0x8 
 .bss           0x00000000c0021340       0x88 fs/fat/ff.32
 .bss           0x00000000c00213c8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c00213c8        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c00213c8       0x18 
 .bss           0x00000000c00213e0     0x1368 fs/iso9660/iso9660.32
 .bss           0x00000000c0022748        0x0 compat/inlines.32
 .bss           0x00000000c0022748        0x0 compat/resolve.32
 .bss           0x00000000c0022748        0x6 core/computer.32
                0x00000000c0022748                Krnl::computer
                0x00000000c002274c                Krnl::preemptionOn
                0x00000000c002274d                Krnl::schedulingOn
 *fill*         0x00000000c002274e        0x2 
 .bss           0x00000000c0022750        0x6 core/gdt.32
                0x00000000c0022750                gdtDescr
 .bss           0x00000000c0022756        0x0 core/idle.32
 *fill*         0x00000000c0022756        0x2 
 .bss           0x00000000c0022758        0x6 core/idt.32
                0x00000000c0022758                idtDescr
 .bss           0x00000000c002275e        0x0 core/kheap.32
 *fill*         0x00000000c002275e        0x2 
 .bss           0x00000000c0022760        0x4 core/main.32
                0x00000000c0022760                sysBootSettings
 .bss           0x00000000c0022764       0x29 core/physmgr.32
                0x00000000c0022764                Phys::forbidEvictions
                0x00000000c0022768                Phys::currentPagePointer
                0x00000000c002276c                Phys::highestMem
                0x00000000c0022770                Phys::oldPercent
                0x00000000c0022774                Phys::usedPages
                0x00000000c0022778                Phys::usablePages
                0x00000000c002277c                Phys::dmaUsage
 .bss           0x00000000c002278d        0x0 core/pipe.32
 *fill*         0x00000000c002278d        0x3 
 .bss           0x00000000c0022790        0x9 core/terminal.32
                0x00000000c0022790                terminalCycle
                0x00000000c0022794                activeTerminal
                0x00000000c0022798                VgaText::graphicMode
 *fill*         0x00000000c0022799        0x1 
 .bss           0x00000000c002279a        0x2 core/tss.32
                0x00000000c002279a                doubleFaultSelector
 *fill*         0x00000000c002279c        0x4 
 .bss           0x00000000c00227a0       0x84 core/unixfile.32
                0x00000000c00227a0                sfileLpt
                0x00000000c00227e0                sfileCom
                0x00000000c0022804                sfileNul
                0x00000000c0022808                sfilePnt
                0x00000000c002280c                sfileAux
                0x00000000c0022810                sfileCon
                0x00000000c0022814                initialFilesAdded
                0x00000000c0022818                unixFileLinkedList
 .bss           0x00000000c0022824       0x10 core/virtmgr.32
                0x00000000c0022824                twswaps
                0x00000000c0022828                swapBalance
                0x00000000c002282c                Virt::swapfileBitmap
                0x00000000c0022830                firstVAS
 .bss           0x00000000c0022834        0x0 coreobjs/c++.32
 .bss           0x00000000c0022834        0x0 dbg/kconsole.32
 .bss           0x00000000c0022834        0x4 fs/vfs.32
                0x00000000c0022834                installedFilesystems
 .bss           0x00000000c0022838        0x0 hal/bus.32
 .bss           0x00000000c0022838        0x0 hal/buzzer.32
 .bss           0x00000000c0022838        0x8 hal/clock.32
                0x00000000c0022838                User::dstOn
                0x00000000c0022839                User::timezoneHalfHourOffset
                0x00000000c002283c                User::timezoneHourOffset
 .bss           0x00000000c0022840        0x0 hal/device.32
 .bss           0x00000000c0022840        0x0 hal/diskctrl.32
 .bss           0x00000000c0022840        0x0 hal/diskphys.32
 .bss           0x00000000c0022840        0x0 hal/fpu.32
 .bss           0x00000000c0022840     0x2000 hal/intctrl.32
                0x00000000c0022840                INT_contexts
                0x00000000c0023840                INT_handlers
 .bss           0x00000000c0024840      0x429 hal/keybrd.32
                0x00000000c0024840                keyboardWaitingTaskList
                0x00000000c0024844                keyboardSetupYet
                0x00000000c0024848                guiKeyboardHandler
                0x00000000c0024860                keystates
 *fill*         0x00000000c0024c69       0x17 
 .bss           0x00000000c0024c80       0x88 hal/logidisk.32
                0x00000000c0024c80                diskAssignments
                0x00000000c0024ca0                disks
 .bss           0x00000000c0024d08        0x4 hal/mouse.32
                0x00000000c0024d08                guiMouseHandler
 .bss           0x00000000c0024d0c        0x0 hal/partition.32
 .bss           0x00000000c0024d0c        0x0 hal/serial.32
 .bss           0x00000000c0024d0c        0x4 hal/timer.32
                0x00000000c0024d0c                milliTenthsSinceBoot
 .bss           0x00000000c0024d10        0x0 hal/vcache.32
 .bss           0x00000000c0024d10        0x4 hal/video.32
                0x00000000c0024d10                screen
 *fill*         0x00000000c0024d14        0xc 
 .bss           0x00000000c0024d20      0x480 hw/acpi.32
                0x00000000c0024d20                systemSleepFunction
                0x00000000c0024d24                systemResetFunction
                0x00000000c0024d28                systemShutdownFunction
                0x00000000c0024d2c                nextACPITable
                0x00000000c0024d40                acpiTables
                0x00000000c0024f40                usingXSDT
                0x00000000c0024f44                MADTpointer
                0x00000000c0024f48                RSDTpointer
                0x00000000c0024f4c                RSDPpointer
                0x00000000c0024f50                nextAPICNMI
                0x00000000c0024f60                apicNMIInfo
                0x00000000c0024fe0                legacyIRQFlags
                0x00000000c0025000                ioapicDiscoveryNumber
                0x00000000c0025020                ioapicFoundInMADT
                0x00000000c0025040                ioapicAddresses
                0x00000000c00250c0                ioapicGSIBase
                0x00000000c0025140                processorDiscoveryNumber
                0x00000000c0025160                matchingAPICID
                0x00000000c0025180                processorID
 .bss           0x00000000c00251a0       0x10 hw/cpu.32
                0x00000000c00251a0                lastD
                0x00000000c00251a4                lastC
                0x00000000c00251a8                lastB
                0x00000000c00251ac                lastA
 .bss           0x00000000c00251b0        0x8 krnl/env.32
                0x00000000c00251b0                Krnl::userEnv
                0x00000000c00251b4                Krnl::systemEnv
 .bss           0x00000000c00251b8        0x9 krnl/panic.32
                0x00000000c00251b8                Krnl::guiProgramFaultHandler
                0x00000000c00251bc                Krnl::guiPanicHandler
                0x00000000c00251c0                Krnl::kernelInPanic
 *fill*         0x00000000c00251c1       0x1f 
 .bss           0x00000000c00251e0       0x48 krnl/powctrl.32
                0x00000000c00251e0                Krnl::powCtrlOnBattery
                0x00000000c0025200                Krnl::currentPowerSettings
                0x00000000c0025224                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0025228        0x0 reg/registry.32
 .bss           0x00000000c0025228        0x0 sys/sc_eject.32
 .bss           0x00000000c0025228        0x0 sys/sc_exit.32
 .bss           0x00000000c0025228        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0025228        0x0 sys/sc_getpid.32
 .bss           0x00000000c0025228        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0025228        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0025228        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0025228        0x0 sys/sc_read.32
 .bss           0x00000000c0025228        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0025228        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0025228        0x0 sys/sc_settime.32
 .bss           0x00000000c0025228        0x0 sys/sc_timezone.32
 .bss           0x00000000c0025228        0x0 sys/sc_write.32
 .bss           0x00000000c0025228        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0025228        0x0 sys/sc_yield.32
 *fill*         0x00000000c0025228       0x18 
 .bss           0x00000000c0025240      0x200 sys/syscalls.32
                0x00000000c0025240                systemCallHandlers
 .bss           0x00000000c0025440      0x7a4 thr/elf.32
                0x00000000c0025440                Thr::driverLookupNext
                0x00000000c0025460                Thr::driverLookupLen
                0x00000000c0025660                Thr::driverLookupAddr
                0x00000000c0025860                Thr::driverNameLookup
                0x00000000c0025a60                Thr::kernelSymbols
                0x00000000c0025ae0                Thr::kernelStringTable
                0x00000000c0025b60                Thr::kernelSymbolTable
                0x00000000c0025be0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0025be4        0x4 
 .bss           0x00000000c0025be8       0x68 thr/prcssthr.32
                0x00000000c0025be8                cleanerThread
                0x00000000c0025bec                weNeedTheCleanerToNotBlock
                0x00000000c0025bf0                retValLockStuff
                0x00000000c0025bf4                retValSchedLock
                0x00000000c0025bf8                lockStuffLock
                0x00000000c0025bfc                schedulerLock
                0x00000000c0025c00                taskSwitchesPostponedFlag
                0x00000000c0025c04                postponeTaskSwitchesCounter
                0x00000000c0025c08                irqDisableCounter
                0x00000000c0025c0c                terminatedTaskList
                0x00000000c0025c18                sleepingTaskList
                0x00000000c0025c24                taskList
                0x00000000c0025c30                kernelProcess
 *fill*         0x00000000c0025c50       0x10 
 .bss           0x00000000c0025c60       0x40 vm86/vm8086.32
                0x00000000c0025c60                Vm::vmRetV
                0x00000000c0025c64                Vm::vmDone
                0x00000000c0025c65                Vm::vmReady
                0x00000000c0025c68                Vm::vm86Thread
                0x00000000c0025c6c                Vm::vmToHostCommsPtr
                0x00000000c0025c80                Vm::vmToHostComms
 .bss           0x00000000c0025ca0       0x14 arch/i386/hal.32
                0x00000000c0025ca0                apic
                0x00000000c0025ca4                fpuOwner
                0x00000000c0025ca8                coproLoadFunc
                0x00000000c0025cac                coproSaveFunc
                0x00000000c0025cb0                gpFaultIntercept
 .bss           0x00000000c0025cb4        0x0 arch/i386/pic.32
 .bss           0x00000000c0025cb4        0x2 arch/i386/rtc.32
 .bss           0x00000000c0025cb6        0x0 arch/i386/vga.32
 *fill*         0x00000000c0025cb6        0xa 
 .bss           0x00000000c0025cc0       0xf0 fs/fat/vfslink.32
                0x00000000c0025cc0                FAT::fats
                0x00000000c0025ce0                FAT::vfsToFatRemaps
                0x00000000c0025d60                fatToVFSRemaps
 .bss           0x00000000c0025db0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0025db0       0x10 
 .bss           0x00000000c0025dc0      0x820 fs/iso9660/vfslink.32
                0x00000000c0025dc0                recentSector
                0x00000000c0025de0                recentBuffer
 .bss           0x00000000c00265e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00265e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00265e0        0x0 hw/bus/isa.32
 .bss           0x00000000c00265e0        0xd hw/bus/pci.32
                0x00000000c00265e0                thePCI
 .bss           0x00000000c00265ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00265ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00265ed        0x3 
 .bss           0x00000000c00265f0        0x8 hw/diskphys/ata.32
                0x00000000c00265f0                ataSectorsWritten
                0x00000000c00265f4                ataSectorsRead
 .bss           0x00000000c00265f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00265f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00265f8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c00265f8        0x8 
 .bss           0x00000000c0026600       0x41 hw/intctrl/apic.32
                0x00000000c0026600                noOfIOAPICs
                0x00000000c0026620                ioapics
                0x00000000c0026640                IOAPICsSetupYet
 .bss           0x00000000c0026641        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0026641        0x3 
 .bss           0x00000000c0026644        0x4 hw/timer/pit.32
                0x00000000c0026644                pitFreq
 .bss           0x00000000c0026648        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0026648        0x0 crtn.32
 .bss           0x00000000c0026648        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0026648        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0026648        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0026648        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0026648                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002bd10                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
