Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1cbca
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 .text          0x00000000c0001afb        0x0 libk/string.32
 .text          0x00000000c0001afb       0x51 fs/fat/diskio.32
                0x00000000c0001afb                disk_status
                0x00000000c0001afe                disk_initialize
                0x00000000c0001b01                disk_read
                0x00000000c0001b17                disk_write
                0x00000000c0001b2d                disk_ioctl
 .text          0x00000000c0001b4c     0x3d4b fs/fat/ff.32
                0x00000000c00038e8                f_mount
                0x00000000c000394a                f_open
                0x00000000c0003c15                f_read
                0x00000000c0003e14                f_write
                0x00000000c0004048                f_sync
                0x00000000c00040fd                f_close
                0x00000000c000412c                f_lseek
                0x00000000c00042d3                f_opendir
                0x00000000c000439e                f_closedir
                0x00000000c00043c0                f_readdir
                0x00000000c0004452                f_stat
                0x00000000c00044d1                f_getfree
                0x00000000c00045d3                f_truncate
                0x00000000c00046b7                f_unlink
                0x00000000c00047d9                f_mkdir
                0x00000000c0004974                f_rename
                0x00000000c0004b2a                f_chmod
                0x00000000c0004bd3                f_utime
                0x00000000c0004c81                f_getlabel
                0x00000000c0004dd2                f_setlabel
                0x00000000c0004f62                f_expand
                0x00000000c00050c2                f_mkfs
 *fill*         0x00000000c0005897        0x1 
 .text          0x00000000c0005898       0x2f fs/fat/ffsystem.32
                0x00000000c0005898                ff_memalloc
                0x00000000c00058b0                ff_memfree
 *fill*         0x00000000c00058c7        0x1 
 .text          0x00000000c00058c8      0x2a8 fs/fat/ffunicode.32
                0x00000000c00058c8                ff_uni2oem
                0x00000000c0005968                ff_oem2uni
                0x00000000c00059e0                ff_wtoupper
 .text          0x00000000c0005b70       0xa7 compat/inlines.32
                0x00000000c0005b70                CPU::current()
                0x00000000c0005b7c                operator new(unsigned long)
                0x00000000c0005b81                operator delete(void*)
                0x00000000c0005b86                disableIRQs()
                0x00000000c0005b8e                enableIRQs()
                0x00000000c0005b9d                lockScheduler()
                0x00000000c0005ba5                unlockScheduler()
                0x00000000c0005bb4                lockStuff()
                0x00000000c0005bc2                unlockStuff()
                0x00000000c0005bfc                Virt::getAKernelVAS()
                0x00000000c0005c02                __not_memcpy
 *fill*         0x00000000c0005c17        0x1 
 .text          0x00000000c0005c18      0x118 compat/resolve.32
                0x00000000c0005c18                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0005d30      0x77b core/computer.32
                0x00000000c0005d30                Computer::close(int, int, void*)
                0x00000000c0005d75                Krnl::firstTask()
                0x00000000c0005ebe                Computer::Computer()
                0x00000000c0005ebe                Computer::Computer()
                0x00000000c0006024                Computer::setBootMessage(char const*)
                0x00000000c0006026                Computer::detectFeatures()
                0x00000000c0006230                Computer::displayFeatures()
                0x00000000c0006232                Computer::rdmsr(unsigned int)
                0x00000000c000625e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006296                Computer::shutdown()
                0x00000000c00062ae                Computer::restart()
                0x00000000c00062c6                Computer::sleep()
                0x00000000c00062da                Computer::nmiEnabled()
                0x00000000c00062e6                Computer::readCMOS(unsigned char)
                0x00000000c0006300                Computer::enableNMI(bool)
                0x00000000c0006318                Computer::open(int, int, void*)
                0x00000000c00063ec                Computer::disableNMI()
                0x00000000c00063fc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000641a                Computer::handleNMI()
                0x00000000c0006480                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c00064ab        0x1 
 .text          0x00000000c00064ac      0x211 core/gdt.32
                0x00000000c00064ac                GDTEntry::setBase(unsigned int)
                0x00000000c00064c8                GDTEntry::setLimit(unsigned int)
                0x00000000c00064e6                GDT::GDT()
                0x00000000c00064e6                GDT::GDT()
                0x00000000c00064fc                GDT::addEntry(GDTEntry)
                0x00000000c000651e                GDT::getNumberOfEntries()
                0x00000000c0006526                GDT::flush()
                0x00000000c0006548                GDT::setup()
 .text          0x00000000c00066bd       0x19 core/idle.32
                0x00000000c00066bd                idleFunction(void*)
 *fill*         0x00000000c00066d6        0x2 
 .text          0x00000000c00066d8      0x464 core/idt.32
                0x00000000c00066d8                IDTEntry::IDTEntry(bool)
                0x00000000c00066d8                IDTEntry::IDTEntry(bool)
                0x00000000c000674a                IDTEntry::setOffset(unsigned int)
                0x00000000c0006760                IDT::IDT()
                0x00000000c0006760                IDT::IDT()
                0x00000000c0006762                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000676a                IDT::addEntry(IDTEntry, int)
                0x00000000c0006784                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00067bc                IDT::flush()
                0x00000000c00067d6                IDT::setup()
 .text          0x00000000c0006b3c      0x183 core/kheap.32
                0x00000000c0006b3c                sbrk
                0x00000000c0006bd1                mmap
                0x00000000c0006be7                munmap
                0x00000000c0006bfd                liballoc_lock()
                0x00000000c0006c0a                liballoc_unlock()
                0x00000000c0006c1e                liballoc_alloc(int)
                0x00000000c0006c36                liballoc_free(void*, int)
                0x00000000c0006c51                realloc
                0x00000000c0006c65                malloc
                0x00000000c0006c75                free
                0x00000000c0006c85                rfree
                0x00000000c0006c95                calloc
 .text          0x00000000c0006cbf      0x1b4 core/main.32
                0x00000000c0006cbf                Krnl::setBootMessage(char const*)
                0x00000000c0006d2b                kernel_main
 .text          0x00000000c0006e73      0x5dc core/physmgr.32
                0x00000000c0006e73                Phys::allocateDMA(unsigned long)
                0x00000000c0006f4a                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0006f7d                Phys::setPageState(unsigned long, bool)
                0x00000000c0006faf                Phys::getPageState(unsigned long)
                0x00000000c0006fd0                Phys::freePage(unsigned long)
                0x00000000c0007032                Phys::allocatePage()
                0x00000000c00070f0                Phys::allocateContiguousPages(int)
                0x00000000c000714c                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007184                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000744f        0x1 
 .text          0x00000000c0007450      0x273 core/pipe.32
                0x00000000c0007450                Pipe::isAtty()
                0x00000000c0007454                Pipe::~Pipe()
                0x00000000c0007454                Pipe::~Pipe()
                0x00000000c0007478                Pipe::~Pipe()
                0x00000000c00074a0                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007560                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000765c                Pipe::Pipe(int)
                0x00000000c000765c                Pipe::Pipe(int)
 *fill*         0x00000000c00076c3        0x1 
 .text          0x00000000c00076c4      0xa1e core/terminal.32
                0x00000000c00076c4                VgaText::isAtty()
                0x00000000c00076c8                VgaText::~VgaText()
                0x00000000c00076c8                VgaText::~VgaText()
                0x00000000c00076ec                VgaText::~VgaText()
                0x00000000c0007716                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0007736                setTerminalScrollLock(bool)
                0x00000000c0007737                doTerminalCycle()
                0x00000000c0007738                addToTerminalCycle(VgaText*)
                0x00000000c0007739                scrollTerminalScrollLock(int)
                0x00000000c000773a                VgaText::updateTitle()
                0x00000000c000773c                VgaText::load()
                0x00000000c000773e                VgaText::updateCursor()
                0x00000000c0007754                VgaText::doANSI_SGR(int)
                0x00000000c00077c8                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00077d8                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00077e8                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0007808                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0007814                VgaText::setTitleColour(VgaColour)
                0x00000000c0007820                VgaText::setTitle(char*)
                0x00000000c0007822                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0007834                VgaText::scrollScreen()
                0x00000000c00078cc                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00078de                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000796e                VgaText::getCursorX()
                0x00000000c0007976                VgaText::getCursorY()
                0x00000000c000797e                VgaText::setCursor(int, int)
                0x00000000c0007995                setActiveTerminal(VgaText*)
                0x00000000c00079e0                VgaText::clearScreen()
                0x00000000c0007a2e                VgaText::setCursorX(int)
                0x00000000c0007a46                VgaText::setCursorY(int)
                0x00000000c0007a5e                VgaText::incrementCursor(bool)
                0x00000000c0007ab2                VgaText::decrementCursor(bool)
                0x00000000c0007ad4                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0007ba2                VgaText::putchar(char)
                0x00000000c0007c8e                VgaText::putx(unsigned int)
                0x00000000c0007cd4                VgaText::puts(char const*)
                0x00000000c0007cfa                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0007d46                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0007e98                VgaText::VgaText(char const*)
                0x00000000c0007e98                VgaText::VgaText(char const*)
                0x00000000c0007fe4                VgaText::receiveKey(unsigned char)
                0x00000000c00080bc                VgaText::doUpdate()
                0x00000000c00080bd                newTerminal(char*)
 *fill*         0x00000000c00080e2        0x2 
 .text          0x00000000c00080e4      0x1a1 core/tss.32
                0x00000000c00080e4                TSS::TSS()
                0x00000000c00080e4                TSS::TSS()
                0x00000000c00080f4                TSS::setESP(unsigned long)
                0x00000000c0008108                TSS::flush()
                0x00000000c0008128                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008285        0x1 
 .text          0x00000000c0008286      0x4c2 core/unixfile.32
                0x00000000c0008286                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00082dc                ReservedFilename::isAtty()
                0x00000000c00082f8                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008356                UnixFile::getFileDescriptor()
                0x00000000c000835e                UnixFile::UnixFile(int)
                0x00000000c000835e                UnixFile::UnixFile(int)
                0x00000000c000850e                ReservedFilename::ReservedFilename(int)
                0x00000000c000850e                ReservedFilename::ReservedFilename(int)
                0x00000000c0008540                UnixFile::~UnixFile()
                0x00000000c0008540                UnixFile::~UnixFile()
                0x00000000c00085d8                UnixFile::~UnixFile()
                0x00000000c0008600                ReservedFilename::~ReservedFilename()
                0x00000000c0008600                ReservedFilename::~ReservedFilename()
                0x00000000c0008624                ReservedFilename::~ReservedFilename()
                0x00000000c000864b                getFromFileDescriptor(int)
 .text          0x00000000c0008748     0x119a core/virtmgr.32
                0x00000000c0008748                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000877d                Virt::getPageState(unsigned long)
                0x00000000c00087a1                Virt::allocateKernelVirtualPages(int)
                0x00000000c00088b2                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00088d0                Virt::swapIDToSector(unsigned long)
                0x00000000c00088e2                Virt::allocateSwapfilePage()
                0x00000000c0008960                Virt::virtualMemorySetup()
                0x00000000c00089ab                Virt::setupPageSwapping(int)
                0x00000000c0008a1c                VAS::VAS(VAS*)
                0x00000000c0008a1c                VAS::VAS(VAS*)
                0x00000000c0008a4a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0008a76                VAS::getPageTableEntry(unsigned long)
                0x00000000c0008a95                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0008bba                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0008bde                VAS::virtualToPhysical(unsigned long)
                0x00000000c0008bf8                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0008c38                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0008c6c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0008c96                VAS::~VAS()
                0x00000000c0008c96                VAS::~VAS()
                0x00000000c0008dfa                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0008efe                VAS::allocatePages(int, int)
                0x00000000c00090d6                VAS::setCPUSpecific(unsigned long)
                0x00000000c00090f4                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c00091ba                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c00092a8                VAS::VAS(bool)
                0x00000000c00092a8                VAS::VAS(bool)
                0x00000000c0009528                VAS::VAS()
                0x00000000c0009528                VAS::VAS()
                0x00000000c0009598                VAS::evict(unsigned long)
                0x00000000c000965a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0009748                VAS::scanForEviction()
                0x00000000c0009828                mapVASFirstTime
 .text          0x00000000c00098e2       0x5f coreobjs/c++.32
                0x00000000c00098e2                __cxa_atexit
                0x00000000c00098e5                __cxa_finalize
                0x00000000c00098e6                __stack_chk_fail
                0x00000000c000991c                __cxa_pure_virtual
                0x00000000c000992d                operator new[](unsigned long)
                0x00000000c0009932                operator delete(void*, unsigned long)
                0x00000000c0009937                operator delete[](void*)
                0x00000000c000993c                operator delete[](void*, unsigned long)
 .text          0x00000000c0009941      0x21c dbg/kconsole.32
                0x00000000c0009941                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c00099ac                Dbg::logc(char)
                0x00000000c00099cc                Dbg::logs(char*)
                0x00000000c00099e9                Dbg::logWriteInt(unsigned int)
                0x00000000c0009a07                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0009a28                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c0009b5d        0x1 
 .text          0x00000000c0009b5e      0xc5c fs/vfs.32
                0x00000000c0009b5e                File::read(unsigned long long, void*, int*)
                0x00000000c0009bb6                File::write(unsigned long long, void*, int*)
                0x00000000c0009c0e                Directory::read(unsigned long long, void*, int*)
                0x00000000c0009c66                Directory::write(unsigned long long, void*, int*)
                0x00000000c0009c94                File::isAtty()
                0x00000000c0009c98                Directory::isAtty()
                0x00000000c0009c9c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0009ca2                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0009ca8                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0009cae                File::~File()
                0x00000000c0009cae                File::~File()
                0x00000000c0009cd2                File::~File()
                0x00000000c0009cfc                Directory::~Directory()
                0x00000000c0009cfc                Directory::~Directory()
                0x00000000c0009d20                Directory::~Directory()
                0x00000000c0009d4a                Filesystem::Filesystem()
                0x00000000c0009d4a                Filesystem::Filesystem()
                0x00000000c0009d6e                Filesystem::~Filesystem()
                0x00000000c0009d6e                Filesystem::~Filesystem()
                0x00000000c0009d7c                Filesystem::~Filesystem()
                0x00000000c0009da0                Fs::getcwd(Process*, char*, int)
                0x00000000c0009dca                Fs::initVFS()
                0x00000000c0009df4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c0009f9e                File::File(char const*, Process*)
                0x00000000c0009f9e                File::File(char const*, Process*)
                0x00000000c000a05e                File::open(FileOpenMode)
                0x00000000c000a0bc                File::close()
                0x00000000c000a11c                File::seek(unsigned long long)
                0x00000000c000a172                File::tell(unsigned long long*)
                0x00000000c000a1c2                File::rewind()
                0x00000000c000a1d6                File::unlink()
                0x00000000c000a222                File::rename(char const*)
                0x00000000c000a270                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000a2cc                File::exists()
                0x00000000c000a30a                File::stat(unsigned long long*, bool*)
                0x00000000c000a36b                Fs::setcwd(Process*, char*)
                0x00000000c000a4c8                Directory::Directory(char const*, Process*)
                0x00000000c000a4c8                Directory::Directory(char const*, Process*)
                0x00000000c000a588                Directory::open()
                0x00000000c000a5e4                Directory::close()
                0x00000000c000a644                Directory::unlink()
                0x00000000c000a690                Directory::rename(char const*)
                0x00000000c000a6de                Directory::exists()
                0x00000000c000a71c                Directory::read(dirent*)
                0x00000000c000a768                Directory::create()
                0x00000000c000a7b4                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000a7ba        0x2 
 .text          0x00000000c000a7bc       0x86 hal/bus.32
                0x00000000c000a7bc                Bus::Bus(char const*)
                0x00000000c000a7bc                Bus::Bus(char const*)
                0x00000000c000a7f4                Bus::~Bus()
                0x00000000c000a7f4                Bus::~Bus()
                0x00000000c000a818                Bus::~Bus()
 .text          0x00000000c000a842       0x96 hal/buzzer.32
                0x00000000c000a842                beepThread(void*)
                0x00000000c000a87f                Krnl::beep(int, int, bool)
 .text          0x00000000c000a8d8      0x46d hal/clock.32
                0x00000000c000a8d8                User::loadClockSettings(int)
                0x00000000c000a92a                Clock::Clock(char const*)
                0x00000000c000a92a                Clock::Clock(char const*)
                0x00000000c000a960                Clock::~Clock()
                0x00000000c000a960                Clock::~Clock()
                0x00000000c000a984                Clock::~Clock()
                0x00000000c000a9ae                Clock::timeInSecondsLocal()
                0x00000000c000a9f6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000aa4f                datetimeToSeconds(datetime_t)
                0x00000000c000ab7c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000abdc                secondsToDatetime(unsigned long long)
                0x00000000c000ad20                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000ad45        0x1 
 .text          0x00000000c000ad46      0x464 hal/device.32
                0x00000000c000ad46                Device::hibernate()
                0x00000000c000ad48                Device::wake()
                0x00000000c000ad4a                Device::detect()
                0x00000000c000ad4c                Device::disableLegacy()
                0x00000000c000ad4e                Device::powerSaving(PowerSavingLevel)
                0x00000000c000ad50                DriverlessDevice::close(int, int, void*)
                0x00000000c000ad54                DriverlessDevice::detect()
                0x00000000c000ad56                DriverlessDevice::open(int, int, void*)
                0x00000000c000ad6a                Device::~Device()
                0x00000000c000ad6a                Device::~Device()
                0x00000000c000ad78                Device::~Device()
                0x00000000c000ada0                Device::findAndLoadDriver()
                0x00000000c000adae                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000add4                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000ae14                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ae3e                Device::getParent()
                0x00000000c000ae4a                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ae68                Device::addChild(Device*)
                0x00000000c000aeac                Device::removeAllChildren()
                0x00000000c000aef2                Device::hibernateAll()
                0x00000000c000af22                Device::wakeAll()
                0x00000000c000af52                Device::detectAll()
                0x00000000c000af82                Device::disableLegacyAll()
                0x00000000c000af84                Device::loadDriversForAll()
                0x00000000c000af86                Device::closeAll()
                0x00000000c000afbc                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000aff2                Device::setName(char const*)
                0x00000000c000b000                Device::Device(char const*)
                0x00000000c000b000                Device::Device(char const*)
                0x00000000c000b0fc                Device::getName()
                0x00000000c000b106                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000b106                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000b13c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000b180                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000b1aa        0x2 
 .text          0x00000000c000b1ac       0x86 hal/diskctrl.32
                0x00000000c000b1ac                HardDiskController::HardDiskController(char const*)
                0x00000000c000b1ac                HardDiskController::HardDiskController(char const*)
                0x00000000c000b1e4                HardDiskController::~HardDiskController()
                0x00000000c000b1e4                HardDiskController::~HardDiskController()
                0x00000000c000b208                HardDiskController::~HardDiskController()
 .text          0x00000000c000b232       0xe2 hal/diskphys.32
                0x00000000c000b232                PhysicalDisk::eject()
                0x00000000c000b236                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b236                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b29e                PhysicalDisk::startCache()
                0x00000000c000b2c6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b2c6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b2ea                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000b314        0x0 hal/fpu.32
 .text          0x00000000c000b314      0x35d hal/intctrl.32
                0x00000000c000b314                int_handler
                0x00000000c000b39c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000b3e4                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b51c                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000b550                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b5cf                setupINTS()
                0x00000000c000b62c                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000b671        0x1 
 .text          0x00000000c000b672      0x78c hal/keybrd.32
                0x00000000c000b672                startGUI(void*)
                0x00000000c000b6de                startGUIVESA(void*)
                0x00000000c000b74a                sendKeyToTerminal(unsigned char)
                0x00000000c000b80d                sendKeyboardToken(KeyboardToken)
                0x00000000c000bc4d                clearInternalKeybuffer(VgaText*)
                0x00000000c000bc82                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000bd74                Keyboard::Keyboard(char const*)
                0x00000000c000bd74                Keyboard::Keyboard(char const*)
                0x00000000c000bdb0                Keyboard::~Keyboard()
                0x00000000c000bdb0                Keyboard::~Keyboard()
                0x00000000c000bdd4                Keyboard::~Keyboard()
 .text          0x00000000c000bdfe      0x3ea hal/logidisk.32
                0x00000000c000bdfe                LogicalDisk::close(int, int, void*)
                0x00000000c000be02                LogicalDisk::~LogicalDisk()
                0x00000000c000be02                LogicalDisk::~LogicalDisk()
                0x00000000c000be26                LogicalDisk::~LogicalDisk()
                0x00000000c000be50                LogicalDisk::open(int, int, void*)
                0x00000000c000be64                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000be9c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000bee2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bee2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bf98                LogicalDisk::assignDriveLetter()
                0x00000000c000c04e                LogicalDisk::mount()
                0x00000000c000c096                LogicalDisk::unmount()
                0x00000000c000c0a6                LogicalDisk::eject()
                0x00000000c000c0ba                LogicalDisk::unassignDriveLetter()
                0x00000000c000c110                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000c17c                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000c1e8       0x86 hal/mouse.32
                0x00000000c000c1e8                Mouse::Mouse(char const*)
                0x00000000c000c1e8                Mouse::Mouse(char const*)
                0x00000000c000c220                Mouse::~Mouse()
                0x00000000c000c220                Mouse::~Mouse()
                0x00000000c000c244                Mouse::~Mouse()
 .text          0x00000000c000c26e      0x339 hal/partition.32
                0x00000000c000c26e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c316                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000c5a7        0x1 
 .text          0x00000000c000c5a8       0x86 hal/serial.32
                0x00000000c000c5a8                Serial::Serial(char const*)
                0x00000000c000c5a8                Serial::Serial(char const*)
                0x00000000c000c5e0                Serial::~Serial()
                0x00000000c000c5e0                Serial::~Serial()
                0x00000000c000c604                Serial::~Serial()
 *fill*         0x00000000c000c62e        0x2 
 .text          0x00000000c000c630      0x234 hal/timer.32
                0x00000000c000c630                Timer::Timer(char const*)
                0x00000000c000c630                Timer::Timer(char const*)
                0x00000000c000c668                Timer::~Timer()
                0x00000000c000c668                Timer::~Timer()
                0x00000000c000c68c                Timer::~Timer()
                0x00000000c000c6b6                Timer::read()
                0x00000000c000c6c1                setupTimer(int)
                0x00000000c000c6fc                timerHandler(unsigned int)
 .text          0x00000000c000c864      0x43e hal/vcache.32
                0x00000000c000c864                VCache::VCache(PhysicalDisk*)
                0x00000000c000c864                VCache::VCache(PhysicalDisk*)
                0x00000000c000c9cc                VCache::invalidateReadBuffer()
                0x00000000c000c9dc                VCache::writeWriteBuffer()
                0x00000000c000ca28                VCache::~VCache()
                0x00000000c000ca28                VCache::~VCache()
                0x00000000c000ca7c                VCache::~VCache()
                0x00000000c000caa4                VCache::write(unsigned long long, int, void*)
                0x00000000c000cb9e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000cca2      0x4b3 hal/video.32
                0x00000000c000cca2                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ccee                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000cd5e                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000cddc                Video::clearScreen(unsigned int)
                0x00000000c000ce10                Video::putpixel(int, int, unsigned int)
                0x00000000c000ce1e                Video::Video(char const*)
                0x00000000c000ce1e                Video::Video(char const*)
                0x00000000c000ce54                Video::~Video()
                0x00000000c000ce54                Video::~Video()
                0x00000000c000ce78                Video::~Video()
                0x00000000c000cea2                Video::isMonochrome()
                0x00000000c000ceae                Video::getWidth()
                0x00000000c000ceba                Video::getHeight()
                0x00000000c000cec6                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000cf82                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000d0ea                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000d155        0x3 
 .text          0x00000000c000d158     0x1307 hw/acpi.32
                0x00000000c000d158                ACPI::close(int, int, void*)
                0x00000000c000d210                findRSDP()
                0x00000000c000d2a0                loadACPITables(unsigned char*)
                0x00000000c000d504                findRSDT(unsigned char*)
                0x00000000c000d654                findDataTable(unsigned char*, char*)
                0x00000000c000d6cc                scanMADT()
                0x00000000c000dba0                ACPI::ACPI()
                0x00000000c000dba0                ACPI::ACPI()
                0x00000000c000dbf4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000dcdc                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000dda4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ddac                ACPI::detectPCI()
                0x00000000c000dfb4                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000e008                ACPI::sleep()
                0x00000000c000e024                ACPI::open(int, int, void*)
 *fill*         0x00000000c000e45f        0x1 
 .text          0x00000000c000e460      0xda3 hw/cpu.32
                0x00000000c000e460                CPU::close(int, int, void*)
                0x00000000c000e464                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000e480                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000e498                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000e50c                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000e590                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000e5be                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000e5ec                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000e61a                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000e648                CPU::CPU()
                0x00000000c000e648                CPU::CPU()
                0x00000000c000e6d6                CPU::displayFeatures()
                0x00000000c000e6d8                CPU::detectFeatures()
                0x00000000c000edae                CPU::setupSMEP()
                0x00000000c000edba                CPU::setupUMIP()
                0x00000000c000edc4                CPU::setupTSC()
                0x00000000c000edce                CPU::setupLargePages()
                0x00000000c000edd8                CPU::setupPAT()
                0x00000000c000ee14                CPU::setupMTRR()
                0x00000000c000ee16                CPU::setupGlobalPages()
                0x00000000c000ee20                CPU::allowUsermodeDataAccess()
                0x00000000c000ee32                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ee44                CPU::setupSMAP()
                0x00000000c000ee52                CPU::setupFeatures()
                0x00000000c000ef1e                CPU::open(int, int, void*)
                0x00000000c000f008                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c000f203        0x4 hw/smp.32
                0x00000000c000f203                Krnl::smpEntry()
                0x00000000c000f205                Krnl::startCPU(int)
                0x00000000c000f206                Krnl::startCPUs()
 *fill*         0x00000000c000f207        0x1 
 .text          0x00000000c000f208      0x581 krnl/env.32
                0x00000000c000f208                EnvVarContainer::getEnv(char const*)
                0x00000000c000f246                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000f308                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000f30a                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000f4f0                EnvVarContainer::__loadSystem()
                0x00000000c000f50a                EnvVarContainer::__loadUser()
                0x00000000c000f50c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f50c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f52e                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f52e                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f55e                Krnl::getEnv(Process*, char const*)
                0x00000000c000f5c3                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000f5dd                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000f5fc                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000f60f                Krnl::deleteEnvSystem(char const*)
                0x00000000c000f610                Krnl::deleteEnvUser(char const*)
                0x00000000c000f611                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000f612                Krnl::newProcessEnv(Process*)
                0x00000000c000f634                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000f680                Krnl::loadSystemEnv()
                0x00000000c000f6ae                Krnl::loadUserEnv()
                0x00000000c000f6d4                Krnl::flushEnv()
                0x00000000c000f6d5                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000f6f5                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c000f789      0x26c krnl/panic.32
                0x00000000c000f789                Krnl::panic(char const*)
 .text          0x00000000c000f9f5      0x168 krnl/powctrl.32
                0x00000000c000f9f5                Krnl::powerThread(void*)
                0x00000000c000fa49                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c000fa5f                Krnl::userIOReceived()
                0x00000000c000fa6a                Krnl::handlePowerButton()
                0x00000000c000fa9f                Krnl::handleSleepButton()
                0x00000000c000fad4                Krnl::setupPowerManager()
 .text          0x00000000c000fb5d      0x50e reg/registry.32
                0x00000000c000fb5d                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c000fcb5                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c000fe0a                Reg::getLine(char*, char*, char*)
                0x00000000c000fe41                Reg::readInt(char*, char*, int*)
                0x00000000c000ff2c                Reg::readString(char*, char*, char*, int)
                0x00000000c000ffad                Reg::readBool(char*, char*, bool*)
                0x00000000c000ffd2                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c000fffe                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001002a                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001006b       0x36 sys/sc_eject.32
                0x00000000c001006b                Sys::eject(regs*)
 .text          0x00000000c00100a1       0x18 sys/sc_exit.32
                0x00000000c00100a1                Sys::exit(regs*)
 .text          0x00000000c00100b9       0x1f sys/sc_getcwd.32
                0x00000000c00100b9                Sys::getCwd(regs*)
 .text          0x00000000c00100d8        0xc sys/sc_getpid.32
                0x00000000c00100d8                Sys::getPID(regs*)
 .text          0x00000000c00100e4       0x1a sys/sc_getramdata.32
                0x00000000c00100e4                Sys::getRAMData(regs*)
 .text          0x00000000c00100fe       0x82 sys/sc_getvgaptr.32
                0x00000000c00100fe                Sys::getVGAPtr(regs*)
 .text          0x00000000c0010180       0xa8 sys/sc_loaddll.32
                0x00000000c0010180                Sys::loadDLL(regs*)
 .text          0x00000000c0010228       0x68 sys/sc_read.32
                0x00000000c0010228                Sys::read(regs*)
 .text          0x00000000c0010290       0x55 sys/sc_sbrk.32
                0x00000000c0010290                Sys::sbrk(regs*)
 .text          0x00000000c00102e5       0x1c sys/sc_setcwd.32
                0x00000000c00102e5                Sys::setCwd(regs*)
 .text          0x00000000c0010301       0x95 sys/sc_settime.32
                0x00000000c0010301                Sys::setTime(regs*)
 .text          0x00000000c0010396       0x4a sys/sc_timezone.32
                0x00000000c0010396                Sys::timezone(regs*)
 .text          0x00000000c00103e0       0x68 sys/sc_write.32
                0x00000000c00103e0                Sys::write(regs*)
 .text          0x00000000c0010448       0x62 sys/sc_wsbe.32
                0x00000000c0010448                Sys::wsbe(regs*)
 .text          0x00000000c00104aa       0x25 sys/sc_yield.32
                0x00000000c00104aa                Sys::yield(regs*)
 .text          0x00000000c00104cf      0xe2c sys/syscalls.32
                0x00000000c00104cf                sysCallSeekDir(regs*)
                0x00000000c00104d4                sysCallTellDir(regs*)
                0x00000000c00104d9                sysCallVerify(regs*)
                0x00000000c00104e3                sysCallGetArgc(regs*)
                0x00000000c00104f3                sysCallTTYName(regs*)
                0x00000000c00104fb                sysFormatDisk(regs*)
                0x00000000c0010568                sysSetDiskVolumeLabel(regs*)
                0x00000000c00105b2                sysGetDiskVolumeLabel(regs*)
                0x00000000c0010607                sysShutdown(regs*)
                0x00000000c0010665                sysCallRealpath(regs*)
                0x00000000c00106a8                sysCallReadDir(regs*)
                0x00000000c0010728                sysCallIsATTY(regs*)
                0x00000000c0010784                sysCallSeek(regs*)
                0x00000000c00107dd                sysCallTell(regs*)
                0x00000000c001084c                sysCallSize(regs*)
                0x00000000c00108c1                sysCallSizeFromFilename(regs*)
                0x00000000c0010974                sysCallClose(regs*)
                0x00000000c00109d4                sysCallOpenDir(regs*)
                0x00000000c0010a4b                sysCallCloseDir(regs*)
                0x00000000c0010a9f                sysCallMakeDir(regs*)
                0x00000000c0010b11                sysCallWait(regs*)
                0x00000000c0010b2e                sysCallNotImpl(regs*)
                0x00000000c0010b49                sysPanic(regs*)
                0x00000000c0010b64                sysCallRmdir(regs*)
                0x00000000c0010bcb                sysCallUnlink(regs*)
                0x00000000c0010c32                sysCallGetArgv(regs*)
                0x00000000c0010c7f                sysCallUSleep(regs*)
                0x00000000c0010ca8                sysCallSpawn(regs*)
                0x00000000c0010d11                sysCallGetEnv(regs*)
                0x00000000c0010dc0                sysSetFatAttrib(regs*)
                0x00000000c0010e37                sysPipe(regs*)
                0x00000000c0010e7c                sysGetUnixTime(regs*)
                0x00000000c0010e90                string_ends_with(char const*, char const*)
                0x00000000c0010eda                sysCallOpen(regs*)
                0x00000000c00110ce                Sys::loadSyscalls()
                0x00000000c00112b9                Sys::systemCall(regs*, void*)
 .text          0x00000000c00112fb     0x11e5 thr/elf.32
                0x00000000c00112fb                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0011587                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001179d                Thr::runtimeReferenceHelper()
                0x00000000c00117b0                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00117ff                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0011abd                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00121f3                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012225                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001225c                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012276                Thr::loadDLL(char const*, bool)
                0x00000000c00124a7                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00124e0     0x12c5 thr/prcssthr.32
                0x00000000c00124e0                userModeEntryPoint(void*)
                0x00000000c0012508                changeTSS
                0x00000000c0012538                switchToThread(ThreadControlBlock*)
                0x00000000c00125ec                Process::addArgs(char**)
                0x00000000c001264c                Process::Process(char const*, Process*, char**)
                0x00000000c001264c                Process::Process(char const*, Process*, char**)
                0x00000000c001283c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001283c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00129f8                taskStartupFunction
                0x00000000c0012a04                Semaphore::Semaphore(int)
                0x00000000c0012a04                Semaphore::Semaphore(int)
                0x00000000c0012a34                Mutex::Mutex()
                0x00000000c0012a34                Mutex::Mutex()
                0x00000000c0012a48                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0012b40                Process::createUserThread()
                0x00000000c0012b60                setupMultitasking(void (*)())
                0x00000000c0012c68                schedule()
                0x00000000c0012cf8                Semaphore::tryAcquire()
                0x00000000c0012dc4                Semaphore::assertLocked(char const*)
                0x00000000c0012e3c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0012e64                blockTask(TaskState)
                0x00000000c0012e94                waitTask(int, int*, int)
                0x00000000c0012ed8                milliTenthSleepUntil(unsigned int)
                0x00000000c0012f68                milliTenthSleep(unsigned int)
                0x00000000c0012f78                sleep(unsigned int)
                0x00000000c0012f94                Semaphore::acquire()
                0x00000000c0013050                taskReturned
                0x00000000c001308c                Thr::processFromPID(int)
                0x00000000c001312c                unblockTask(ThreadControlBlock*)
                0x00000000c00131d0                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001349c                cleanerTaskFunction(void*)
                0x00000000c001358c                terminateTask(int)
                0x00000000c0013658                Thr::terminateFromIRQ(int)
                0x00000000c0013668                Semaphore::release()
 .text          0x00000000c00137a5      0xb93 vm86/vm8086.32
                0x00000000c00137a5                Vm::inbv(unsigned short)
                0x00000000c00137b8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00137ee                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00137fe                Vm::getSegment(unsigned int)
                0x00000000c0013806                Vm::getOffset(unsigned int)
                0x00000000c001380b                Vm::mainloop2()
                0x00000000c0013845                Vm::mainVm8086Loop(void*)
                0x00000000c0013855                Vm::mainloop3(unsigned long)
                0x00000000c001387b                Vm::initialise8086()
                0x00000000c00138be                Vm::finish8086()
                0x00000000c001391f                Vm::getOutput8086(unsigned char*)
                0x00000000c0013944                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00139fd                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0013b65                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0013bef                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0013c00                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0013c12                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0013c23                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0013c38                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0013c4e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0013c63                Vm::faultHandler(regs*)
 .text          0x00000000c0014338      0xfcd vm86/x87em.32
                0x00000000c0014338                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c0014396                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c001439f                Vm::fpu32ToInternal(unsigned int)
                0x00000000c00143e4                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c00143ed                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c001444c                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c0014488                Vm::fpuLongToFloat(long long)
                0x00000000c00144e7                Vm::fpuGet0()
                0x00000000c00144ec                Vm::fpuGet1()
                0x00000000c00144f4                Vm::fpuGetPi()
                0x00000000c00144fc                Vm::fpuGetLog2E()
                0x00000000c0014514                Vm::fpuGetLogE2()
                0x00000000c001452c                Vm::fpuGetLog210()
                0x00000000c0014544                Vm::fpuGetLog102()
                0x00000000c001455c                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c0014570                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c0014586                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c00145dc                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c00145ed                Vm::fpuAbs(unsigned long long)
                0x00000000c00145f6                Vm::fpuChs(unsigned long long)
                0x00000000c0014606                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c0014615                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c0014634                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c0014650                Vm::fpuSquare(unsigned long long)
                0x00000000c0014666                Vm::fpuGetReg(int)
                0x00000000c00146a9                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c00146f5                Vm::fpuPush(unsigned long long)
                0x00000000c0014753                Vm::fpuPop()
                0x00000000c00147a6                Vm::x87Handler(regs*)
 .text          0x00000000c0015305      0x8e8 arch/i386/hal.32
                0x00000000c0015305                Hal::noCopro(unsigned long)
                0x00000000c0015306                Hal::noTSC()
                0x00000000c001530b                Hal::readTSC()
                0x00000000c001530e                nmiHandler(regs*, void*)
                0x00000000c0015327                doubleFault(regs*, void*)
                0x00000000c0015340                displayDebugInfo(regs*)
                0x00000000c0015661                displayProgramFault(char const*)
                0x00000000c00156ad                gpFault(regs*, void*)
                0x00000000c0015712                pgFault(regs*, void*)
                0x00000000c0015774                otherISRHandler(regs*, void*)
                0x00000000c00157a8                opcodeFault(regs*, void*)
                0x00000000c0015828                i386SaveCoprocessor(void*)
                0x00000000c001583c                i386LoadCoprocessor(void*)
                0x00000000c0015850                x87EmulHandler(regs*, void*)
                0x00000000c0015903                Hal::initialiseCoprocessor()
                0x00000000c00159b1                Hal::panic(char const*)
                0x00000000c00159b6                Hal::initialise()
                0x00000000c0015b7f                Hal::makeBeep(int)
                0x00000000c0015bb9                Hal::getRand()
                0x00000000c0015bbc                Hal::endOfInterrupt(int)
 *fill*         0x00000000c0015bed        0x3 
 .text          0x00000000c0015bf0      0x2f4 arch/i386/pic.32
                0x00000000c0015bf0                picIoWait()
                0x00000000c0015bf8                picDisable()
                0x00000000c0015c2c                picGetIRQReg(int)
                0x00000000c0015cb0                picOpen()
                0x00000000c0015e40                picEOI(int)
 .text          0x00000000c0015ee4      0x64d arch/i386/rtc.32
                0x00000000c0015ee4                RTC::open(int, int, void*)
                0x00000000c0015ee8                RTC::close(int, int, void*)
                0x00000000c0015eec                RTC::timeInSecondsUTC()
                0x00000000c0015efe                RTC::timeInDatetimeUTC()
                0x00000000c0015f24                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015f62                RTC::~RTC()
                0x00000000c0015f62                RTC::~RTC()
                0x00000000c0015f86                RTC::~RTC()
                0x00000000c0015fb0                RTC::get_update_in_progress_flag()
                0x00000000c0015fc8                RTC::completeRTCRefresh()
                0x00000000c0016280                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0016433                rtcIRQHandler(regs*, void*)
                0x00000000c0016478                RTC::RTC()
                0x00000000c0016478                RTC::RTC()
 *fill*         0x00000000c0016531        0x3 
 .text          0x00000000c0016534      0x203 arch/i386/vga.32
                0x00000000c0016534                Hal::consoleScroll(int, int)
                0x00000000c001663c                Hal::consoleWriteCharacter(char, int, int, int, int)
                0x00000000c00166a8                Hal::consoleCursorUpdate(int, int)
 *fill*         0x00000000c0016737        0x1 
 .text          0x00000000c0016738     0x13e7 fs/fat/vfslink.32
                0x00000000c0016738                FAT::getName()
                0x00000000c0016740                FAT::tell(void*, unsigned long long*)
                0x00000000c001677c                FAT::stat(void*, unsigned long long*)
                0x00000000c00167b8                FAT::~FAT()
                0x00000000c00167b8                FAT::~FAT()
                0x00000000c00167dc                FAT::~FAT()
                0x00000000c0016804                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00168a8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001696c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016b40                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016d58                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016f18                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017084                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00170e4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0017144                FAT::close(void*)
                0x00000000c0017198                FAT::closeDir(void*)
                0x00000000c00171ec                FAT::seek(void*, unsigned long long)
                0x00000000c0017244                fatWrapperReadDisk
                0x00000000c0017288                fatWrapperWriteDisk
                0x00000000c00172cc                fatWrapperIoctl
                0x00000000c00173e8                FAT::FAT()
                0x00000000c00173e8                FAT::FAT()
                0x00000000c001743c                FAT::fixFilepath(char*)
                0x00000000c0017478                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00175b0                FAT::openDir(char const*, void**)
                0x00000000c0017660                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017758                FAT::unlink(char const*)
                0x00000000c00177d8                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017964                FAT::rename(char const*, char const*)
                0x00000000c0017a30                FAT::mkdir(char const*)
                0x00000000c0017ab0                FAT::exists(char const*)
 *fill*         0x00000000c0017b1f        0x1 
 .text          0x00000000c0017b20      0xba5 fs/iso9660/vfslink.32
                0x00000000c0017b20                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017b26                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017b56                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017b7a                ISO9660::getName()
                0x00000000c0017b80                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017ba4                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017baa                ISO9660::unlink(char const*)
                0x00000000c0017bb0                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017bb6                ISO9660::rename(char const*, char const*)
                0x00000000c0017bbc                ISO9660::mkdir(char const*)
                0x00000000c0017bc2                ISO9660::close(void*)
                0x00000000c0017be4                ISO9660::closeDir(void*)
                0x00000000c0017c06                ISO9660::~ISO9660()
                0x00000000c0017c06                ISO9660::~ISO9660()
                0x00000000c0017c2a                ISO9660::~ISO9660()
                0x00000000c0017c51                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0017c93                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017d0e                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017d6e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017f72                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c00181ea                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001823e                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c0018414                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c00184a2                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0018550                ISO9660::exists(char const*)
                0x00000000c0018574                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018608                ISO9660::openDir(char const*, void**)
                0x00000000c00186a2                ISO9660::ISO9660()
                0x00000000c00186a2                ISO9660::ISO9660()
 *fill*         0x00000000c00186c5        0x1 
 .text          0x00000000c00186c6      0x26c hal/sound/sndcard.32
                0x00000000c00186c6                SoundCard::beginPlayback()
                0x00000000c00186d4                SoundCard::stopPlayback()
                0x00000000c00186e2                SoundCard::SoundCard(char const*)
                0x00000000c00186e2                SoundCard::SoundCard(char const*)
                0x00000000c0018780                SoundCard::~SoundCard()
                0x00000000c0018780                SoundCard::~SoundCard()
                0x00000000c00187a4                SoundCard::~SoundCard()
                0x00000000c00187ce                SoundCard::configureRates(int, int, int)
                0x00000000c00187fe                SoundCard::getSamples16(int, short*)
                0x00000000c001885a                SoundCard::getSamples32(int, int*)
                0x00000000c00188e0                SoundCard::addChannel(SoundPort*)
                0x00000000c001891e                SoundCard::removeChannel(int)
 *fill*         0x00000000c0018932        0x2 
 .text          0x00000000c0018934      0x377 hal/sound/sndport.32
                0x00000000c0018934                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018934                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00189c0                SoundPort::~SoundPort()
                0x00000000c00189c0                SoundPort::~SoundPort()
                0x00000000c00189f4                SoundPort::unpause()
                0x00000000c0018a00                SoundPort::pause()
                0x00000000c0018a0c                SoundPort::getBufferUsed()
                0x00000000c0018a14                SoundPort::getBufferSize()
                0x00000000c0018a1c                SoundPort::buffer16(short*, int)
                0x00000000c0018aa8                SoundPort::buffer32(int*, int)
                0x00000000c0018b30                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0018bf4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0018cab        0x0 hw/bus/isa.32
 *fill*         0x00000000c0018cab        0x1 
 .text          0x00000000c0018cac      0xb49 hw/bus/pci.32
                0x00000000c0018cac                PCI::open(int, int, void*)
                0x00000000c0018cca                PCI::close(int, int, void*)
                0x00000000c0018cce                PCI::PCI()
                0x00000000c0018cce                PCI::PCI()
                0x00000000c0018d68                PCI::readBAR8(unsigned int, int)
                0x00000000c0018d84                PCI::readBAR16(unsigned int, int)
                0x00000000c0018da2                PCI::readBAR32(unsigned int, int)
                0x00000000c0018dbe                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0018dde                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0018e00                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0018e20                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018e8e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018f36                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018f5a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0018f82                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018fcc                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0018ff4                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0019018                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001903c                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0019064                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00190c8                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c00191b0                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001942a                PCI::checkBus(unsigned char)
                0x00000000c0019450                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c00195c2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0019736                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c00197a2                PCI::detect()
 *fill*         0x00000000c00197f5        0x1 
 .text          0x00000000c00197f6      0xb5a hw/diskctrl/ide.32
                0x00000000c00197f6                IDE::close(int, int, void*)
                0x00000000c00197fa                IDE::IDE()
                0x00000000c00197fa                IDE::IDE()
                0x00000000c001982e                IDE::prepareInterrupt(unsigned char)
                0x00000000c0019840                selectDrive(unsigned char, unsigned char)
                0x00000000c0019842                IDE::getBase(unsigned char)
                0x00000000c0019854                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0019914                IDE::read(unsigned char, unsigned char)
                0x00000000c00199c2                IDE::waitInterrupt(unsigned char)
                0x00000000c0019a2a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0019a46                ideChannel1IRQHandler(regs*, void*)
                0x00000000c0019a62                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019aa8                IDE::open(int, int, void*)
                0x00000000c0019eb6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0019f82                IDE::detect()
                0x00000000c001a242                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2f2                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001a350      0x320 hw/diskctrl/satabus.32
                0x00000000c001a350                SATABus::close(int, int, void*)
                0x00000000c001a354                SATABus::detect()
                0x00000000c001a356                SATABus::SATABus()
                0x00000000c001a356                SATABus::SATABus()
                0x00000000c001a3dc                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001a40e                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001a456                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001a476                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001a4a0                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001a5a6                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001a650                SATABus::open(int, int, void*)
 .text          0x00000000c001a670      0x5f4 hw/diskphys/ata.32
                0x00000000c001a670                ATA::close(int, int, void*)
                0x00000000c001a694                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001a696                ATA::ATA()
                0x00000000c001a696                ATA::ATA()
                0x00000000c001a6c4                ATA::flush(bool)
                0x00000000c001a70e                ATA::readyForCommand()
                0x00000000c001a75a                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001aad6                ATA::read(unsigned long long, int, void*)
                0x00000000c001ab22                ATA::write(unsigned long long, int, void*)
                0x00000000c001ab6e                ATA::detectCHS()
                0x00000000c001ab98                ATA::open(int, int, void*)
 .text          0x00000000c001ac64      0x60e hw/diskphys/atapi.32
                0x00000000c001ac64                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001ac6a                ATAPI::close(int, int, void*)
                0x00000000c001ac8e                ATAPI::ATAPI()
                0x00000000c001ac8e                ATAPI::ATAPI()
                0x00000000c001acbc                ATAPI::readyForCommand()
                0x00000000c001ad0e                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001afce                ATAPI::diskRemoved()
                0x00000000c001b008                ATAPI::eject()
                0x00000000c001b050                ATAPI::diskInserted()
                0x00000000c001b05c                ATAPI::detectMedia()
                0x00000000c001b118                ATAPI::open(int, int, void*)
                0x00000000c001b1f8                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001b272      0x402 hw/diskphys/sata.32
                0x00000000c001b272                SATA::close(int, int, void*)
                0x00000000c001b296                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001b298                SATA::open(int, int, void*)
                0x00000000c001b342                SATA::SATA()
                0x00000000c001b342                SATA::SATA()
                0x00000000c001b370                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001b5bc                SATA::read(unsigned long long, int, void*)
                0x00000000c001b608                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001b674      0x63d hw/diskphys/satapi.32
                0x00000000c001b674                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001b67a                SATAPI::close(int, int, void*)
                0x00000000c001b69e                SATAPI::SATAPI()
                0x00000000c001b69e                SATAPI::SATAPI()
                0x00000000c001b6cc                SATAPI::diskRemoved()
                0x00000000c001b6ce                SATAPI::diskInserted()
                0x00000000c001b6ea                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b978                SATAPI::eject()
                0x00000000c001b9b4                SATAPI::detectMedia()
                0x00000000c001bade                SATAPI::open(int, int, void*)
                0x00000000c001bbde                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001bcb1        0x1 
 .text          0x00000000c001bcb2      0x455 hw/intctrl/apic.32
                0x00000000c001bcb2                IOAPIC::close(int, int, void*)
                0x00000000c001bcb8                apicGetBase()
                0x00000000c001bcfa                IOAPIC::IOAPIC()
                0x00000000c001bcfa                IOAPIC::IOAPIC()
                0x00000000c001bd22                apicOpen()
                0x00000000c001be88                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001beba                IOAPIC::read(int)
                0x00000000c001bee2                IOAPIC::open(int, int, void*)
                0x00000000c001bfd6                IOAPIC::write(int, int)
                0x00000000c001c002                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001c107        0x1 
 .text          0x00000000c001c108       0xf0 hw/timer/apictimer.32
                0x00000000c001c108                APICTimer::close(int, int, void*)
                0x00000000c001c110                apicTimerHandler(regs*, void*)
                0x00000000c001c138                APICTimer::open(int, int, void*)
                0x00000000c001c1a8                APICTimer::write(int)
                0x00000000c001c1d0                APICTimer::APICTimer()
                0x00000000c001c1d0                APICTimer::APICTimer()
 .text          0x00000000c001c1f8      0x1aa hw/timer/pit.32
                0x00000000c001c1f8                PIT::write(int)
                0x00000000c001c27c                pitHandler(regs*, void*)
                0x00000000c001c2a0                PIT::open(int, int, void*)
                0x00000000c001c2f0                PIT::close(int, int, void*)
                0x00000000c001c320                PIT::PIT()
                0x00000000c001c320                PIT::PIT()
 *fill*         0x00000000c001c3a2        0xe 
 .text          0x00000000c001c3b0       0x83 arch/i386/avx.32
                0x00000000c001c3b0                avxDetect
                0x00000000c001c3da                avxSave
                0x00000000c001c3eb                avxLoad
                0x00000000c001c3fc                avxInit
                0x00000000c001c41e                avxClose
                0x00000000c001c41f                wouldSheSayYes
 *fill*         0x00000000c001c433        0xd 
 .text          0x00000000c001c440      0x1d6 arch/i386/interrupt.32
                0x00000000c001c440                isr0
                0x00000000c001c450                isr1
                0x00000000c001c45a                isr2
                0x00000000c001c464                isr3
                0x00000000c001c46e                isr4
                0x00000000c001c478                isr5
                0x00000000c001c482                isr6
                0x00000000c001c48c                isr7
                0x00000000c001c496                isr8
                0x00000000c001c49e                isr9
                0x00000000c001c4a8                isr10
                0x00000000c001c4b0                isr11
                0x00000000c001c4b8                isr12
                0x00000000c001c4c0                isr13
                0x00000000c001c4c8                isr14
                0x00000000c001c4d0                isr15
                0x00000000c001c4da                isr16
                0x00000000c001c4e4                isr17
                0x00000000c001c4ee                isr18
                0x00000000c001c4f8                irq3
                0x00000000c001c502                irq4
                0x00000000c001c50c                irq5
                0x00000000c001c516                irq6
                0x00000000c001c520                irq7
                0x00000000c001c52a                irq8
                0x00000000c001c534                irq9
                0x00000000c001c53e                irq10
                0x00000000c001c548                irq11
                0x00000000c001c552                irq12
                0x00000000c001c55c                irq13
                0x00000000c001c566                irq14
                0x00000000c001c570                irq15
                0x00000000c001c57a                irq1
                0x00000000c001c581                irq2
                0x00000000c001c588                isr96
                0x00000000c001c58f                irq0
                0x00000000c001c594                int_common_stub
                0x00000000c001c594                syscall_common_stub
                0x00000000c001c5c6                irq16
                0x00000000c001c5d0                irq17
                0x00000000c001c5da                irq18
                0x00000000c001c5e4                irq19
                0x00000000c001c5ee                irq20
                0x00000000c001c5f8                irq21
                0x00000000c001c602                irq22
                0x00000000c001c60c                irq23
 *fill*         0x00000000c001c616        0xa 
 .text          0x00000000c001c620       0x10 arch/i386/rdrand.32
                0x00000000c001c620                i386GetRDRAND
 .text          0x00000000c001c630       0x39 arch/i386/sse.32
                0x00000000c001c630                absolutelyNoChanceInHell
                0x00000000c001c630                sseDetect
                0x00000000c001c648                sseSave
                0x00000000c001c650                sseLoad
                0x00000000c001c658                sseInit
                0x00000000c001c668                sseClose
 *fill*         0x00000000c001c669        0x7 
 .text          0x00000000c001c670       0x49 arch/i386/x87.32
                0x00000000c001c676                x87Detect
                0x00000000c001c691                x87Save
                0x00000000c001c698                x87Load
                0x00000000c001c69f                x87Init
                0x00000000c001c6b8                x87Close
 *fill*         0x00000000c001c6b9        0x3 
 .text          0x00000000c001c6bc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001c6e1        0x0 crtn.32
 *fill*         0x00000000c001c6e1        0x3 
 .text          0x00000000c001c6e4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001c6e4                __divdi3
 *fill*         0x00000000c001c82f        0x1 
 .text          0x00000000c001c830      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c830                __moddi3
 *fill*         0x00000000c001c9ae        0x2 
 .text          0x00000000c001c9b0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c9b0                __udivdi3
 *fill*         0x00000000c001caaf        0x1 
 .text          0x00000000c001cab0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001cab0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001cbd0        0x0
 .iplt          0x00000000c001cbd0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001cbca        0xf
 .init          0x00000000c001cbca        0x3 crti.32
                0x00000000c001cbca                _init
 .init          0x00000000c001cbcd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001cbd2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001cbd7        0x2 crtn.32

.fini           0x00000000c001cbd9        0xa
 .fini          0x00000000c001cbd9        0x3 crti.32
                0x00000000c001cbd9                _fini
 .fini          0x00000000c001cbdc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001cbe1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001cbe4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001cbe4       0x23 core/computer.32
                0x00000000c001cbe4                Computer::~Computer()
                0x00000000c001cbe4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001cc08       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001cc08       0x2a core/computer.32
                0x00000000c001cc08                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001cc32       0x21
 .text._Z10idleCommonv
                0x00000000c001cc32       0x21 core/idle.32
                0x00000000c001cc32                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001cc54        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001cc54        0x2 core/unixfile.32
                0x00000000c001cc54                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001cc54                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001cc56       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001cc56       0x42 core/unixfile.32
                0x00000000c001cc56                LinkedList<UnixFile>::LinkedList()
                0x00000000c001cc56                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001cc98       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001cc98       0xd3 core/unixfile.32
                0x00000000c001cc98                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001cd6c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001cd6c        0x7 core/unixfile.32
                0x00000000c001cd6c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001cd74       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001cd74       0xa1 core/unixfile.32
                0x00000000c001cd74                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ce16        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ce16        0x8 core/unixfile.32
                0x00000000c001ce16                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ce1e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ce1e       0x1a hal/device.32
                0x00000000c001ce1e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ce1e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ce38       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ce38       0x2a hal/device.32
                0x00000000c001ce38                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ce62       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ce62       0xdc hal/device.32
                0x00000000c001ce62                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001cf3e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001cf3e       0x42 hal/device.32
                0x00000000c001cf3e                LinkedList<Device>::LinkedList()
                0x00000000c001cf3e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001cf80       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001cf80       0x1c hal/timer.32
                0x00000000c001cf80                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001cf9c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001cf9c        0x7 hal/timer.32
                0x00000000c001cf9c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001cfa4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001cfa4       0xb8 hal/timer.32
                0x00000000c001cfa4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001d05c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001d05c       0xda hal/timer.32
                0x00000000c001d05c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001d138       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001d138       0x23 hw/acpi.32
                0x00000000c001d138                ACPI::~ACPI()
                0x00000000c001d138                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001d15c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001d15c       0x2a hw/acpi.32
                0x00000000c001d15c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001d188        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001d188        0x2 hw/acpi.32
                0x00000000c001d188                LinkedList<Device>::~LinkedList()
                0x00000000c001d188                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001d18c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001d18c       0x1c hw/acpi.32
                0x00000000c001d18c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001d1a8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001d1a8        0x7 hw/acpi.32
                0x00000000c001d1a8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001d1b0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001d1b0       0xb8 hw/acpi.32
                0x00000000c001d1b0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001d268       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001d268       0x23 hw/cpu.32
                0x00000000c001d268                CPU::~CPU()
                0x00000000c001d268                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001d28c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001d28c       0x2a hw/cpu.32
                0x00000000c001d28c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001d2b8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001d2b8        0x2 thr/prcssthr.32
                0x00000000c001d2b8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001d2b8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001d2bc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001d2bc       0x49 thr/prcssthr.32
                0x00000000c001d2bc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001d2bc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001d308       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001d308       0x42 thr/prcssthr.32
                0x00000000c001d308                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001d308                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001d34c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001d34c        0x8 thr/prcssthr.32
                0x00000000c001d34c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c001d354        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c001d354        0xd vm86/x87em.32
                0x00000000c001d354                Vm::_FPUState::_FPUState()
                0x00000000c001d354                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c001d362       0x23
 .text._ZN3PCID2Ev
                0x00000000c001d362       0x23 hw/bus/pci.32
                0x00000000c001d362                PCI::~PCI()
                0x00000000c001d362                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001d386       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001d386       0x2a hw/bus/pci.32
                0x00000000c001d386                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001d3b0       0x23
 .text._ZN3IDED2Ev
                0x00000000c001d3b0       0x23 hw/diskctrl/ide.32
                0x00000000c001d3b0                IDE::~IDE()
                0x00000000c001d3b0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001d3d4       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001d3d4       0x2a hw/diskctrl/ide.32
                0x00000000c001d3d4                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001d3fe       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001d3fe       0x23 hw/diskctrl/satabus.32
                0x00000000c001d3fe                SATABus::~SATABus()
                0x00000000c001d3fe                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001d422       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001d422       0x2a hw/diskctrl/satabus.32
                0x00000000c001d422                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001d44c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001d44c       0x23 hw/diskphys/ata.32
                0x00000000c001d44c                ATA::~ATA()
                0x00000000c001d44c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001d470       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001d470       0x2a hw/diskphys/ata.32
                0x00000000c001d470                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001d49a       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001d49a       0x23 hw/diskphys/atapi.32
                0x00000000c001d49a                ATAPI::~ATAPI()
                0x00000000c001d49a                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001d4be       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001d4be       0x2a hw/diskphys/atapi.32
                0x00000000c001d4be                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001d4e8       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001d4e8       0x23 hw/diskphys/sata.32
                0x00000000c001d4e8                SATA::~SATA()
                0x00000000c001d4e8                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001d50c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001d50c       0x2a hw/diskphys/sata.32
                0x00000000c001d50c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001d536       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001d536       0x23 hw/diskphys/satapi.32
                0x00000000c001d536                SATAPI::~SATAPI()
                0x00000000c001d536                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001d55a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001d55a       0x2a hw/diskphys/satapi.32
                0x00000000c001d55a                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001d584       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001d584       0x23 hw/intctrl/apic.32
                0x00000000c001d584                IOAPIC::~IOAPIC()
                0x00000000c001d584                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001d5a8       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001d5a8       0x2a hw/intctrl/apic.32
                0x00000000c001d5a8                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001d5d4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001d5d4       0x23 hw/timer/apictimer.32
                0x00000000c001d5d4                APICTimer::~APICTimer()
                0x00000000c001d5d4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001d5f8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001d5f8       0x2a hw/timer/apictimer.32
                0x00000000c001d5f8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001d624       0x23
 .text._ZN3PITD2Ev
                0x00000000c001d624       0x23 hw/timer/pit.32
                0x00000000c001d624                PIT::~PIT()
                0x00000000c001d624                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001d648       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001d648       0x2a hw/timer/pit.32
                0x00000000c001d648                PIT::~PIT()

.rodata         0x00000000c001d672     0x29b6
                0x00000000c001d672                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001d672        0x2 
 .ctors         0x00000000c001d674        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001d678        0x4 core/unixfile.32
 .ctors         0x00000000c001d67c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001d680        0x4 vm86/x87em.32
 .ctors         0x00000000c001d684        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001d688                end_ctors = .
                0x00000000c001d688                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001d688        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001d68c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001d68c                __DTOR_END__
                0x00000000c001d690                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001d690       0x10 
 .rodata        0x00000000c001d6a0      0x101 acpica/utclib.32
                0x00000000c001d6a0                AcpiGbl_Ctypes
 *fill*         0x00000000c001d7a1        0x3 
 .rodata        0x00000000c001d7a4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001d7bc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d806       0x1a 
 .rodata        0x00000000c001d820       0xed fs/fat/ff.32
 *fill*         0x00000000c001d90d       0x13 
 .rodata        0x00000000c001d920      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001dd20       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001dd69      0x115 core/computer.32
 *fill*         0x00000000c001de7e        0x2 
 .rodata.str1.4
                0x00000000c001de80       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001dee8       0x2c core/computer.32
                0x00000000c001dee8                vtable for Computer
 .rodata.str1.4
                0x00000000c001df14       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001df44        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001df50       0x17 core/main.32
 *fill*         0x00000000c001df67        0x1 
 .rodata.str1.4
                0x00000000c001df68       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001e00d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001e065       0x39 core/pipe.32
 *fill*         0x00000000c001e09e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001e0a0       0x1c core/pipe.32
                0x00000000c001e0a0                vtable for Pipe
 .rodata.str1.1
                0x00000000c001e0bc       0x69 core/terminal.32
 *fill*         0x00000000c001e125        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001e128       0x1c core/terminal.32
                0x00000000c001e128                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001e144       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001e166       0x15 core/unixfile.32
 *fill*         0x00000000c001e17b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001e17c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001e1c7        0x8 core/unixfile.32
 *fill*         0x00000000c001e1cf        0x1 
 .rodata.str1.4
                0x00000000c001e1d0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001e1f0       0x1c core/unixfile.32
                0x00000000c001e1f0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001e20c       0x1c core/unixfile.32
                0x00000000c001e20c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001e228      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001e38f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001e496       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001e4c9       0x11 dbg/kconsole.32
 *fill*         0x00000000c001e4c9        0x3 
 .rodata        0x00000000c001e4cc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001e61c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001e61c       0x68 fs/vfs.32
                0x00000000c001e61c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001e684       0x1c fs/vfs.32
                0x00000000c001e684                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001e6a0       0x1c fs/vfs.32
                0x00000000c001e6a0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001e6bc       0x2c hal/bus.32
                0x00000000c001e6bc                vtable for Bus
 .rodata.str1.1
                0x00000000c001e6e8       0x1e hal/clock.32
 *fill*         0x00000000c001e706        0x2 
 .rodata._ZTV5Clock
                0x00000000c001e708       0x3c hal/clock.32
                0x00000000c001e708                vtable for Clock
 *fill*         0x00000000c001e744       0x1c 
 .rodata        0x00000000c001e760       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001e790       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001e7e8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001e7e8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001e7e8       0x2c hal/device.32
                0x00000000c001e7e8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001e814       0x2c hal/device.32
                0x00000000c001e814                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e840       0x2c hal/diskctrl.32
                0x00000000c001e840                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e86c       0x38 hal/diskphys.32
                0x00000000c001e86c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e8a4       0x3e hal/intctrl.32
 *fill*         0x00000000c001e8e2        0x2 
 .rodata.str1.4
                0x00000000c001e8e4       0x5d hal/intctrl.32
 .rodata        0x00000000c001e941       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e994       0x34 hal/keybrd.32
                0x00000000c001e994                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e9c8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001ea0c       0x2c hal/logidisk.32
                0x00000000c001ea0c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001ea38       0x2c hal/mouse.32
                0x00000000c001ea38                vtable for Mouse
 .rodata.str1.1
                0x00000000c001ea64        0xb hal/partition.32
 *fill*         0x00000000c001ea6f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001ea70       0x44 hal/serial.32
                0x00000000c001ea70                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001eab4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001eab4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001eab4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001eab4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001eab4       0x30 hal/timer.32
                0x00000000c001eab4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001eae4       0x10 hal/vcache.32
                0x00000000c001eae4                vtable for VCache
 .rodata.str1.1
                0x00000000c001eaf4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001eb5c       0x48 hal/video.32
                0x00000000c001eb5c                vtable for Video
 .rodata.str1.4
                0x00000000c001eba4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001ec3f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001ed7b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001ed7b        0x8 hw/acpi.32
 *fill*         0x00000000c001ed7b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001ed7c       0x2c hw/acpi.32
                0x00000000c001ed7c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001eda8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001ef15        0x3 
 .rodata._ZTV3CPU
                0x00000000c001ef18       0x2c hw/cpu.32
                0x00000000c001ef18                vtable for CPU
 .rodata.str1.1
                0x00000000c001ef44       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001ef80       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 .rodata.str1.4
                0x00000000c001f020      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c001f15e       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001f1a3        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001f1ad       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001f201       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001f22d       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001f275      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001f441       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001f498      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001f5a4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001f5a4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001f5a4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001f5a4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001f5a4       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001f644       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001f674       0x58 vm86/x87em.32
 .rodata        0x00000000c001f6cc       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c001f708      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001f816        0x2 
 .rodata.str1.4
                0x00000000c001f818       0x4b arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001f863       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001f878       0x3c arch/i386/rtc.32
                0x00000000c001f878                vtable for RTC
 .rodata.str1.1
                0x00000000c001f8b4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f8f5        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f8f8       0x68 fs/fat/vfslink.32
                0x00000000c001f8f8                vtable for FAT
 .rodata.str1.1
                0x00000000c001f960       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c001f97b        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c001f97c       0x68 fs/iso9660/vfslink.32
                0x00000000c001f97c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f9e4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001fa28       0x34 hal/sound/sndcard.32
                0x00000000c001fa28                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001fa5c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001fa9b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001fad3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001fb74       0x2c hw/bus/pci.32
                0x00000000c001fb74                vtable for PCI
 .rodata.str1.1
                0x00000000c001fba0       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001fc27        0x1 
 .rodata._ZTV3IDE
                0x00000000c001fc28       0x2c hw/diskctrl/ide.32
                0x00000000c001fc28                vtable for IDE
 .rodata.str1.4
                0x00000000c001fc54       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001fc78       0x2c hw/diskctrl/satabus.32
                0x00000000c001fc78                vtable for SATABus
 .rodata.str1.1
                0x00000000c001fca4       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001fcb6        0x2 
 .rodata._ZTV3ATA
                0x00000000c001fcb8       0x38 hw/diskphys/ata.32
                0x00000000c001fcb8                vtable for ATA
 .rodata.str1.1
                0x00000000c001fcf0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001fcfd        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001fd00       0x38 hw/diskphys/atapi.32
                0x00000000c001fd00                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001fd38       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001fdb4       0x38 hw/diskphys/sata.32
                0x00000000c001fdb4                vtable for SATA
 .rodata.str1.1
                0x00000000c001fdec      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c001ff1e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c001ff20       0x38 hw/diskphys/satapi.32
                0x00000000c001ff20                vtable for SATAPI
 .rodata        0x00000000c001ff58        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001ff60       0x2c hw/intctrl/apic.32
                0x00000000c001ff60                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001ff8c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001ffa7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001ffa8       0x30 hw/timer/apictimer.32
                0x00000000c001ffa8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001ffd8       0x1d hw/timer/pit.32
 *fill*         0x00000000c001fff5        0x3 
 .rodata._ZTV3PIT
                0x00000000c001fff8       0x30 hw/timer/pit.32
                0x00000000c001fff8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0020028      0x26d
 *(.data)
 .data          0x00000000c0020028        0x0 crti.32
 .data          0x00000000c0020028        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0020028                __dso_handle
 .data          0x00000000c002002c        0x0 acpica/utclib.32
 .data          0x00000000c002002c        0x0 core/malloc.32
 .data          0x00000000c002002c        0x0 libk/string.32
 .data          0x00000000c002002c        0x0 fs/fat/diskio.32
 .data          0x00000000c002002c        0x0 fs/fat/ff.32
 .data          0x00000000c002002c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c002002c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c002002c        0x0 compat/inlines.32
 .data          0x00000000c002002c        0x0 compat/resolve.32
 .data          0x00000000c002002c        0x0 core/computer.32
 .data          0x00000000c002002c        0x0 core/gdt.32
 .data          0x00000000c002002c        0x0 core/idle.32
 .data          0x00000000c002002c        0x0 core/idt.32
 .data          0x00000000c002002c        0x4 core/kheap.32
 *fill*         0x00000000c0020030       0x10 
 .data          0x00000000c0020040      0x142 core/main.32
                0x00000000c0020040                titleScreen
 *fill*         0x00000000c0020182        0x2 
 .data          0x00000000c0020184        0x4 core/physmgr.32
                0x00000000c0020184                Phys::bitmap
 .data          0x00000000c0020188        0x0 core/pipe.32
 *fill*         0x00000000c0020188       0x18 
 .data          0x00000000c00201a0       0x60 core/terminal.32
                0x00000000c00201a0                VgaText::hiddenOut
                0x00000000c00201c0                ansiToVGAMappings
 .data          0x00000000c0020200        0x0 core/tss.32
 .data          0x00000000c0020200        0x4 core/unixfile.32
                0x00000000c0020200                UnixFile::nextFd
 .data          0x00000000c0020204       0x15 core/virtmgr.32
                0x00000000c0020204                Virt::pageAllocPtr
                0x00000000c0020208                Virt::bitmap
                0x00000000c002020c                Virt::swapfileSectorsPerPage
                0x00000000c0020210                Virt::swapfileLength
                0x00000000c0020214                Virt::swapfileSector
                0x00000000c0020218                Virt::swapfileDrive
 *fill*         0x00000000c0020219        0x3 
 .data          0x00000000c002021c        0x4 coreobjs/c++.32
                0x00000000c002021c                __stack_chk_guard
 .data          0x00000000c0020220        0x0 dbg/kconsole.32
 .data          0x00000000c0020220        0x0 fs/vfs.32
 .data          0x00000000c0020220        0x0 hal/bus.32
 .data          0x00000000c0020220        0x0 hal/buzzer.32
 .data          0x00000000c0020220        0x0 hal/clock.32
 .data          0x00000000c0020220        0x0 hal/device.32
 .data          0x00000000c0020220        0x0 hal/diskctrl.32
 .data          0x00000000c0020220        0x0 hal/diskphys.32
 .data          0x00000000c0020220        0x0 hal/fpu.32
 .data          0x00000000c0020220        0x0 hal/intctrl.32
 .data          0x00000000c0020220        0x0 hal/keybrd.32
 .data          0x00000000c0020220        0x0 hal/logidisk.32
 .data          0x00000000c0020220        0x0 hal/mouse.32
 .data          0x00000000c0020220        0x0 hal/partition.32
 .data          0x00000000c0020220        0x0 hal/serial.32
 .data          0x00000000c0020220        0x0 hal/timer.32
 .data          0x00000000c0020220        0x0 hal/vcache.32
 .data          0x00000000c0020220        0x0 hal/video.32
 .data          0x00000000c0020220       0x10 hw/acpi.32
                0x00000000c0020220                legacyIRQRemaps
 .data          0x00000000c0020230        0x4 hw/cpu.32
                0x00000000c0020230                lastCode
 .data          0x00000000c0020234        0x0 hw/smp.32
 *fill*         0x00000000c0020234        0xc 
 .data          0x00000000c0020240       0x4d krnl/env.32
                0x00000000c0020240                defaultSysEnv
 .data          0x00000000c002028d        0x0 krnl/panic.32
 .data          0x00000000c002028d        0x0 krnl/powctrl.32
 .data          0x00000000c002028d        0x0 reg/registry.32
 .data          0x00000000c002028d        0x0 sys/sc_eject.32
 .data          0x00000000c002028d        0x0 sys/sc_exit.32
 .data          0x00000000c002028d        0x0 sys/sc_getcwd.32
 .data          0x00000000c002028d        0x0 sys/sc_getpid.32
 .data          0x00000000c002028d        0x0 sys/sc_getramdata.32
 .data          0x00000000c002028d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c002028d        0x0 sys/sc_loaddll.32
 .data          0x00000000c002028d        0x0 sys/sc_read.32
 .data          0x00000000c002028d        0x0 sys/sc_sbrk.32
 .data          0x00000000c002028d        0x0 sys/sc_setcwd.32
 .data          0x00000000c002028d        0x0 sys/sc_settime.32
 .data          0x00000000c002028d        0x0 sys/sc_timezone.32
 .data          0x00000000c002028d        0x0 sys/sc_write.32
 .data          0x00000000c002028d        0x0 sys/sc_wsbe.32
 .data          0x00000000c002028d        0x0 sys/sc_yield.32
 .data          0x00000000c002028d        0x0 sys/syscalls.32
 .data          0x00000000c002028d        0x0 thr/elf.32
 *fill*         0x00000000c002028d        0x3 
 .data          0x00000000c0020290        0x4 thr/prcssthr.32
                0x00000000c0020290                Thr::nextPID
 .data          0x00000000c0020294        0x0 vm86/vm8086.32
 .data          0x00000000c0020294        0x0 vm86/x87em.32
 .data          0x00000000c0020294        0x0 arch/i386/hal.32
 .data          0x00000000c0020294        0x0 arch/i386/pic.32
 .data          0x00000000c0020294        0x0 arch/i386/rtc.32
 .data          0x00000000c0020294        0x0 arch/i386/vga.32
 .data          0x00000000c0020294        0x0 fs/fat/vfslink.32
 .data          0x00000000c0020294        0x1 fs/iso9660/vfslink.32
                0x00000000c0020294                recentDriveletter
 .data          0x00000000c0020295        0x0 hal/sound/sndcard.32
 .data          0x00000000c0020295        0x0 hal/sound/sndport.32
 .data          0x00000000c0020295        0x0 hw/bus/isa.32
 .data          0x00000000c0020295        0x0 hw/bus/pci.32
 .data          0x00000000c0020295        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0020295        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0020295        0x0 hw/diskphys/ata.32
 .data          0x00000000c0020295        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0020295        0x0 hw/diskphys/sata.32
 .data          0x00000000c0020295        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0020295        0x0 hw/intctrl/apic.32
 .data          0x00000000c0020295        0x0 hw/timer/apictimer.32
 .data          0x00000000c0020295        0x0 hw/timer/pit.32
 .data          0x00000000c0020295        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0020295        0x0 crtn.32
 .data          0x00000000c0020295        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0020295        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0020295        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0020295        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0020298        0x0
 .got           0x00000000c0020298        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0020298        0x0
 .got.plt       0x00000000c0020298        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0020298        0x0
 .igot.plt      0x00000000c0020298        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0020298        0x0
 .tm_clone_table
                0x00000000c0020298        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0020298        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0020295      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0020295        0x3 
 .eh_frame      0x00000000c0020298        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0020298        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0020298       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00202f0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0020330       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002039c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c0020420        0x0
 .rel.got       0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0020420        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0020420     0x43c8
                0x00000000c0020420                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0020420        0x0 crti.32
 .bss           0x00000000c0020420       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0020440        0x4 acpica/utclib.32
 *fill*         0x00000000c0020444       0x1c 
 .bss           0x00000000c0020460      0x378 core/malloc.32
 .bss           0x00000000c00207d8        0x0 libk/string.32
 .bss           0x00000000c00207d8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c00207d8        0x8 
 .bss           0x00000000c00207e0       0x88 fs/fat/ff.32
 .bss           0x00000000c0020868        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0020868        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0020868        0x0 compat/inlines.32
 .bss           0x00000000c0020868        0x0 compat/resolve.32
 .bss           0x00000000c0020868        0x6 core/computer.32
                0x00000000c0020868                Krnl::computer
                0x00000000c002086c                Krnl::preemptionOn
                0x00000000c002086d                Krnl::schedulingOn
 *fill*         0x00000000c002086e        0x2 
 .bss           0x00000000c0020870        0x6 core/gdt.32
                0x00000000c0020870                gdtDescr
 .bss           0x00000000c0020876        0x0 core/idle.32
 *fill*         0x00000000c0020876        0x2 
 .bss           0x00000000c0020878        0x6 core/idt.32
                0x00000000c0020878                idtDescr
 .bss           0x00000000c002087e        0x0 core/kheap.32
 *fill*         0x00000000c002087e        0x2 
 .bss           0x00000000c0020880        0x4 core/main.32
                0x00000000c0020880                sysBootSettings
 .bss           0x00000000c0020884       0x29 core/physmgr.32
                0x00000000c0020884                Phys::forbidEvictions
                0x00000000c0020888                Phys::currentPagePointer
                0x00000000c002088c                Phys::highestMem
                0x00000000c0020890                Phys::oldPercent
                0x00000000c0020894                Phys::usedPages
                0x00000000c0020898                Phys::usablePages
                0x00000000c002089c                Phys::dmaUsage
 .bss           0x00000000c00208ad        0x0 core/pipe.32
 *fill*         0x00000000c00208ad        0x3 
 .bss           0x00000000c00208b0        0x9 core/terminal.32
                0x00000000c00208b0                terminalCycle
                0x00000000c00208b4                activeTerminal
                0x00000000c00208b8                VgaText::graphicMode
 *fill*         0x00000000c00208b9        0x1 
 .bss           0x00000000c00208ba        0x2 core/tss.32
                0x00000000c00208ba                doubleFaultSelector
 *fill*         0x00000000c00208bc        0x4 
 .bss           0x00000000c00208c0       0x84 core/unixfile.32
                0x00000000c00208c0                sfileLpt
                0x00000000c0020900                sfileCom
                0x00000000c0020924                sfileNul
                0x00000000c0020928                sfilePnt
                0x00000000c002092c                sfileAux
                0x00000000c0020930                sfileCon
                0x00000000c0020934                initialFilesAdded
                0x00000000c0020938                unixFileLinkedList
 .bss           0x00000000c0020944       0x14 core/virtmgr.32
                0x00000000c0020944                twswaps
                0x00000000c0020948                swapBalance
                0x00000000c002094c                panicVAS
                0x00000000c0020950                Virt::swapfileBitmap
                0x00000000c0020954                firstVAS
 .bss           0x00000000c0020958        0x0 coreobjs/c++.32
 .bss           0x00000000c0020958        0x0 dbg/kconsole.32
 .bss           0x00000000c0020958        0x4 fs/vfs.32
                0x00000000c0020958                installedFilesystems
 .bss           0x00000000c002095c        0x0 hal/bus.32
 .bss           0x00000000c002095c        0x0 hal/buzzer.32
 .bss           0x00000000c002095c        0x8 hal/clock.32
                0x00000000c002095c                User::dstOn
                0x00000000c002095d                User::timezoneHalfHourOffset
                0x00000000c0020960                User::timezoneHourOffset
 .bss           0x00000000c0020964        0x0 hal/device.32
 .bss           0x00000000c0020964        0x0 hal/diskctrl.32
 .bss           0x00000000c0020964        0x0 hal/diskphys.32
 .bss           0x00000000c0020964        0x0 hal/fpu.32
 *fill*         0x00000000c0020964       0x1c 
 .bss           0x00000000c0020980     0x2000 hal/intctrl.32
                0x00000000c0020980                INT_contexts
                0x00000000c0021980                INT_handlers
 .bss           0x00000000c0022980      0x429 hal/keybrd.32
                0x00000000c0022980                keyboardWaitingTaskList
                0x00000000c0022984                keyboardSetupYet
                0x00000000c0022988                guiKeyboardHandler
                0x00000000c00229a0                keystates
 *fill*         0x00000000c0022da9       0x17 
 .bss           0x00000000c0022dc0       0x88 hal/logidisk.32
                0x00000000c0022dc0                diskAssignments
                0x00000000c0022de0                disks
 .bss           0x00000000c0022e48        0x4 hal/mouse.32
                0x00000000c0022e48                guiMouseHandler
 .bss           0x00000000c0022e4c        0x0 hal/partition.32
 .bss           0x00000000c0022e4c        0x0 hal/serial.32
 .bss           0x00000000c0022e4c        0x4 hal/timer.32
                0x00000000c0022e4c                milliTenthsSinceBoot
 .bss           0x00000000c0022e50        0x0 hal/vcache.32
 .bss           0x00000000c0022e50        0x4 hal/video.32
                0x00000000c0022e50                screen
 *fill*         0x00000000c0022e54        0xc 
 .bss           0x00000000c0022e60      0x480 hw/acpi.32
                0x00000000c0022e60                systemSleepFunction
                0x00000000c0022e64                systemResetFunction
                0x00000000c0022e68                systemShutdownFunction
                0x00000000c0022e6c                nextACPITable
                0x00000000c0022e80                acpiTables
                0x00000000c0023080                usingXSDT
                0x00000000c0023084                MADTpointer
                0x00000000c0023088                RSDTpointer
                0x00000000c002308c                RSDPpointer
                0x00000000c0023090                nextAPICNMI
                0x00000000c00230a0                apicNMIInfo
                0x00000000c0023120                legacyIRQFlags
                0x00000000c0023140                ioapicDiscoveryNumber
                0x00000000c0023160                ioapicFoundInMADT
                0x00000000c0023180                ioapicAddresses
                0x00000000c0023200                ioapicGSIBase
                0x00000000c0023280                processorDiscoveryNumber
                0x00000000c00232a0                matchingAPICID
                0x00000000c00232c0                processorID
 .bss           0x00000000c00232e0       0x10 hw/cpu.32
                0x00000000c00232e0                lastD
                0x00000000c00232e4                lastC
                0x00000000c00232e8                lastB
                0x00000000c00232ec                lastA
 .bss           0x00000000c00232f0        0x1 hw/smp.32
                0x00000000c00232f0                Krnl::bspID
 *fill*         0x00000000c00232f1        0x3 
 .bss           0x00000000c00232f4        0x8 krnl/env.32
                0x00000000c00232f4                Krnl::userEnv
                0x00000000c00232f8                Krnl::systemEnv
 .bss           0x00000000c00232fc        0x9 krnl/panic.32
                0x00000000c00232fc                Krnl::guiProgramFaultHandler
                0x00000000c0023300                Krnl::guiPanicHandler
                0x00000000c0023304                Krnl::kernelInPanic
 *fill*         0x00000000c0023305       0x1b 
 .bss           0x00000000c0023320       0x48 krnl/powctrl.32
                0x00000000c0023320                Krnl::powCtrlOnBattery
                0x00000000c0023340                Krnl::currentPowerSettings
                0x00000000c0023364                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0023368        0x0 reg/registry.32
 .bss           0x00000000c0023368        0x0 sys/sc_eject.32
 .bss           0x00000000c0023368        0x0 sys/sc_exit.32
 .bss           0x00000000c0023368        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0023368        0x0 sys/sc_getpid.32
 .bss           0x00000000c0023368        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0023368        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0023368        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0023368        0x0 sys/sc_read.32
 .bss           0x00000000c0023368        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0023368        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0023368        0x0 sys/sc_settime.32
 .bss           0x00000000c0023368        0x0 sys/sc_timezone.32
 .bss           0x00000000c0023368        0x0 sys/sc_write.32
 .bss           0x00000000c0023368        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0023368        0x0 sys/sc_yield.32
 *fill*         0x00000000c0023368       0x18 
 .bss           0x00000000c0023380      0x200 sys/syscalls.32
                0x00000000c0023380                systemCallHandlers
 .bss           0x00000000c0023580      0x7a4 thr/elf.32
                0x00000000c0023580                Thr::driverLookupNext
                0x00000000c00235a0                Thr::driverLookupLen
                0x00000000c00237a0                Thr::driverLookupAddr
                0x00000000c00239a0                Thr::driverNameLookup
                0x00000000c0023ba0                Thr::kernelSymbols
                0x00000000c0023c20                Thr::kernelStringTable
                0x00000000c0023ca0                Thr::kernelSymbolTable
                0x00000000c0023d20                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023d24        0x4 
 .bss           0x00000000c0023d28       0x68 thr/prcssthr.32
                0x00000000c0023d28                cleanerThread
                0x00000000c0023d2c                weNeedTheCleanerToNotBlock
                0x00000000c0023d30                retValLockStuff
                0x00000000c0023d34                retValSchedLock
                0x00000000c0023d38                lockStuffLock
                0x00000000c0023d3c                schedulerLock
                0x00000000c0023d40                taskSwitchesPostponedFlag
                0x00000000c0023d44                postponeTaskSwitchesCounter
                0x00000000c0023d48                irqDisableCounter
                0x00000000c0023d4c                terminatedTaskList
                0x00000000c0023d58                sleepingTaskList
                0x00000000c0023d64                taskList
                0x00000000c0023d70                kernelProcess
 *fill*         0x00000000c0023d90       0x10 
 .bss           0x00000000c0023da0       0x40 vm86/vm8086.32
                0x00000000c0023da0                Vm::vmRetV
                0x00000000c0023da4                Vm::vmDone
                0x00000000c0023da5                Vm::vmReady
                0x00000000c0023da8                Vm::vm86Thread
                0x00000000c0023dac                Vm::vmToHostCommsPtr
                0x00000000c0023dc0                Vm::vmToHostComms
 .bss           0x00000000c0023de0       0x48 vm86/x87em.32
                0x00000000c0023de0                Vm::fpuState
 .bss           0x00000000c0023e28       0x18 arch/i386/hal.32
                0x00000000c0023e28                Hal::apic
                0x00000000c0023e2c                fpuOwner
                0x00000000c0023e30                coproLoadFunc
                0x00000000c0023e34                coproSaveFunc
                0x00000000c0023e38                _i386_HAL_tscFunction
                0x00000000c0023e3c                gpFaultIntercept
 .bss           0x00000000c0023e40        0x0 arch/i386/pic.32
 .bss           0x00000000c0023e40        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023e42        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023e42       0x1e 
 .bss           0x00000000c0023e60       0xf0 fs/fat/vfslink.32
                0x00000000c0023e60                FAT::fats
                0x00000000c0023e80                FAT::vfsToFatRemaps
                0x00000000c0023f00                fatToVFSRemaps
 *fill*         0x00000000c0023f50       0x10 
 .bss           0x00000000c0023f60      0x820 fs/iso9660/vfslink.32
                0x00000000c0023f60                recentSector
                0x00000000c0023f80                recentBuffer
 .bss           0x00000000c0024780        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0024780        0x0 hal/sound/sndport.32
 .bss           0x00000000c0024780        0x0 hw/bus/isa.32
 .bss           0x00000000c0024780        0xd hw/bus/pci.32
                0x00000000c0024780                thePCI
 .bss           0x00000000c002478d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002478d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002478d        0x3 
 .bss           0x00000000c0024790        0x8 hw/diskphys/ata.32
                0x00000000c0024790                ataSectorsWritten
                0x00000000c0024794                ataSectorsRead
 .bss           0x00000000c0024798        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024798        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0024798        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0024798        0x8 
 .bss           0x00000000c00247a0       0x41 hw/intctrl/apic.32
                0x00000000c00247a0                noOfIOAPICs
                0x00000000c00247c0                ioapics
                0x00000000c00247e0                IOAPICsSetupYet
 .bss           0x00000000c00247e1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00247e1        0x3 
 .bss           0x00000000c00247e4        0x4 hw/timer/pit.32
                0x00000000c00247e4                pitFreq
 .bss           0x00000000c00247e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00247e8        0x0 crtn.32
 .bss           0x00000000c00247e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00247e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00247e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00247e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00247e8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0028bb0                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/packages/morekrnl/32/0001/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
