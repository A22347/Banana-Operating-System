Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e01a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x79e acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004c0                memset
                0x00000000c0000530                strlen
                0x00000000c0000560                strpbrk
                0x00000000c00005a0                strtok
                0x00000000c00005f0                strcpy
                0x00000000c0000620                strncpy
                0x00000000c00006d0                strcmp
                0x00000000c0000720                strchr
                0x00000000c0000750                strncmp
                0x00000000c00007b0                strcat
                0x00000000c00007e0                strncat
                0x00000000c0000840                strstr
                0x00000000c00008a0                toupper
                0x00000000c00008c0                tolower
                0x00000000c00008e0                simple_strtoul
 .text          0x00000000c0000b1e      0xfad core/malloc.32
                0x00000000c0000c89                dlfree
                0x00000000c0000fe4                dlmalloc
                0x00000000c0001521                dlrealloc
                0x00000000c00016c4                dlmemalign
                0x00000000c00017e7                dlcalloc
                0x00000000c0001881                dlcfree
                0x00000000c0001886                dlindependent_calloc
                0x00000000c00018ab                dlindependent_comalloc
                0x00000000c00018c2                dlvalloc
                0x00000000c00018ed                dlpvalloc
                0x00000000c0001923                dlmalloc_trim
                0x00000000c0001930                dlmalloc_usable_size
                0x00000000c0001961                dlmallinfo
                0x00000000c0001a30                dlmalloc_stats
                0x00000000c0001a41                dlmallopt
 *fill*         0x00000000c0001acb        0x1 
 .text          0x00000000c0001acc      0x1f2 libk/ctype.32
                0x00000000c0001acc                isblank
                0x00000000c0001aec                iscntrl
                0x00000000c0001b0c                isdigit
                0x00000000c0001b28                islower
                0x00000000c0001b44                isspace
                0x00000000c0001b6c                isupper
                0x00000000c0001b88                isalpha
                0x00000000c0001bb8                isalnum
                0x00000000c0001be8                ispunct
                0x00000000c0001c28                isgraph
                0x00000000c0001c58                isprint
                0x00000000c0001c80                isxdigit
 .text          0x00000000c0001cbe        0x0 libk/string.32
 .text          0x00000000c0001cbe       0x51 fs/fat/diskio.32
                0x00000000c0001cbe                disk_status
                0x00000000c0001cc1                disk_initialize
                0x00000000c0001cc4                disk_read
                0x00000000c0001cda                disk_write
                0x00000000c0001cf0                disk_ioctl
 .text          0x00000000c0001d0f     0x3d4b fs/fat/ff.32
                0x00000000c0003aab                f_mount
                0x00000000c0003b0d                f_open
                0x00000000c0003dd8                f_read
                0x00000000c0003fd7                f_write
                0x00000000c000420b                f_sync
                0x00000000c00042c0                f_close
                0x00000000c00042ef                f_lseek
                0x00000000c0004496                f_opendir
                0x00000000c0004561                f_closedir
                0x00000000c0004583                f_readdir
                0x00000000c0004615                f_stat
                0x00000000c0004694                f_getfree
                0x00000000c0004796                f_truncate
                0x00000000c000487a                f_unlink
                0x00000000c000499c                f_mkdir
                0x00000000c0004b37                f_rename
                0x00000000c0004ced                f_chmod
                0x00000000c0004d96                f_utime
                0x00000000c0004e44                f_getlabel
                0x00000000c0004f95                f_setlabel
                0x00000000c0005125                f_expand
                0x00000000c0005285                f_mkfs
 *fill*         0x00000000c0005a5a        0x2 
 .text          0x00000000c0005a5c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a5c                ff_memalloc
                0x00000000c0005a74                ff_memfree
 *fill*         0x00000000c0005a8b        0x1 
 .text          0x00000000c0005a8c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a8c                ff_uni2oem
                0x00000000c0005b2c                ff_oem2uni
                0x00000000c0005ba4                ff_wtoupper
 .text          0x00000000c0005d34      0xd2f fs/iso9660/iso9660.32
                0x00000000c0005f79                isoReadDiscSector
                0x00000000c0006014                strnicmp
                0x00000000c00062c7                stricmp
                0x00000000c0006313                iso_open
                0x00000000c000639d                iso_close
                0x00000000c00063bb                iso_read
                0x00000000c00064d1                iso_seek
                0x00000000c0006555                iso_tell
                0x00000000c0006586                iso_total
                0x00000000c00065b1                fn_postprocess
                0x00000000c00065d7                iso_readdir
                0x00000000c000682e                iso_reset
                0x00000000c000684b                init_percd
                0x00000000c0006945                iso_ioctl
                0x00000000c000695d                fs_iso9660_init
                0x00000000c00069f3                fs_iso9660_shutdown
 *fill*         0x00000000c0006a63        0x1 
 .text          0x00000000c0006a64      0x68d core/computer.32
                0x00000000c0006a64                Computer::close(int, int, void*)
                0x00000000c0006aa9                Krnl::firstTask()
                0x00000000c0006be4                Computer::Computer()
                0x00000000c0006be4                Computer::Computer()
                0x00000000c0006c96                Computer::setBootMessage(char const*)
                0x00000000c0006c98                Computer::detectFeatures()
                0x00000000c0006ea2                Computer::displayFeatures()
                0x00000000c0006ea4                Computer::rdmsr(unsigned int)
                0x00000000c0006ed0                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006f08                Computer::shutdown()
                0x00000000c0006f20                Computer::restart()
                0x00000000c0006f38                Computer::sleep()
                0x00000000c0006f4c                Computer::nmiEnabled()
                0x00000000c0006f58                Computer::readCMOS(unsigned char)
                0x00000000c0006f72                Computer::enableNMI(bool)
                0x00000000c0006f8a                Computer::open(int, int, void*)
                0x00000000c000705e                Computer::disableNMI()
                0x00000000c000706e                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000708c                Computer::handleNMI()
 *fill*         0x00000000c00070f1        0x1 
 .text          0x00000000c00070f2      0x1cf core/gdt.32
                0x00000000c00070f2                GDTEntry::setBase(unsigned int)
                0x00000000c000710e                GDTEntry::setLimit(unsigned int)
                0x00000000c000712c                GDT::GDT()
                0x00000000c000712c                GDT::GDT()
                0x00000000c0007142                GDT::addEntry(GDTEntry)
                0x00000000c0007164                GDT::getNumberOfEntries()
                0x00000000c000716c                GDT::flush()
                0x00000000c000718e                GDT::setup()
 .text          0x00000000c00072c1       0x1d core/idle.32
                0x00000000c00072c1                idleFunction(void*)
 *fill*         0x00000000c00072de        0x2 
 .text          0x00000000c00072e0      0x464 core/idt.32
                0x00000000c00072e0                IDTEntry::IDTEntry(bool)
                0x00000000c00072e0                IDTEntry::IDTEntry(bool)
                0x00000000c0007352                IDTEntry::setOffset(unsigned int)
                0x00000000c0007368                IDT::IDT()
                0x00000000c0007368                IDT::IDT()
                0x00000000c000736a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0007372                IDT::addEntry(IDTEntry, int)
                0x00000000c000738c                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00073c4                IDT::flush()
                0x00000000c00073de                IDT::setup()
 .text          0x00000000c0007744      0x183 core/kheap.32
                0x00000000c0007744                sbrk
                0x00000000c00077d9                mmap
                0x00000000c00077ef                munmap
                0x00000000c0007805                liballoc_lock()
                0x00000000c0007812                liballoc_unlock()
                0x00000000c0007826                liballoc_alloc(int)
                0x00000000c000783e                liballoc_free(void*, int)
                0x00000000c0007859                realloc
                0x00000000c000786d                malloc
                0x00000000c000787d                free
                0x00000000c000788d                rfree
                0x00000000c000789d                calloc
 .text          0x00000000c00078c7       0xc3 core/main.32
                0x00000000c00078c7                KeEntryPoint
 .text          0x00000000c000798a      0x5dc core/physmgr.32
                0x00000000c000798a                Phys::allocateDMA(unsigned long)
                0x00000000c0007a61                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007a94                Phys::setPageState(unsigned long, bool)
                0x00000000c0007ac6                Phys::getPageState(unsigned long)
                0x00000000c0007ae7                Phys::freePage(unsigned long)
                0x00000000c0007b49                Phys::allocatePage()
                0x00000000c0007c07                Phys::allocateContiguousPages(int)
                0x00000000c0007c63                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007c9b                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007f66      0x273 core/pipe.32
                0x00000000c0007f66                Pipe::isAtty()
                0x00000000c0007f6a                Pipe::~Pipe()
                0x00000000c0007f6a                Pipe::~Pipe()
                0x00000000c0007f8e                Pipe::~Pipe()
                0x00000000c0007fb6                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008076                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008172                Pipe::Pipe(int)
                0x00000000c0008172                Pipe::Pipe(int)
 *fill*         0x00000000c00081d9        0x1 
 .text          0x00000000c00081da      0xaba core/terminal.32
                0x00000000c00081da                VgaText::isAtty()
                0x00000000c00081de                VgaText::~VgaText()
                0x00000000c00081de                VgaText::~VgaText()
                0x00000000c0008202                VgaText::~VgaText()
                0x00000000c000822c                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000824c                setTerminalScrollLock(bool)
                0x00000000c000824d                doTerminalCycle()
                0x00000000c000824e                addToTerminalCycle(VgaText*)
                0x00000000c000824f                scrollTerminalScrollLock(int)
                0x00000000c0008250                VgaText::updateTitle()
                0x00000000c0008252                VgaText::load()
                0x00000000c0008254                VgaText::updateCursor()
                0x00000000c000826a                VgaText::doANSI_SGR(int)
                0x00000000c00082de                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00082ee                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00082fe                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000831e                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000832a                VgaText::setTitleColour(VgaColour)
                0x00000000c0008336                VgaText::setTitle(char*)
                0x00000000c0008338                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000834a                VgaText::scrollScreen()
                0x00000000c00083dc                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00083ee                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000847e                VgaText::getCursorX()
                0x00000000c0008486                VgaText::getCursorY()
                0x00000000c000848e                VgaText::setCursor(int, int)
                0x00000000c00084a5                setActiveTerminal(VgaText*)
                0x00000000c00084f0                VgaText::clearScreen()
                0x00000000c000853e                VgaText::setCursorX(int)
                0x00000000c0008556                VgaText::setCursorY(int)
                0x00000000c000856e                VgaText::incrementCursor(bool)
                0x00000000c00085c2                VgaText::decrementCursor(bool)
                0x00000000c00085e4                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00086b2                VgaText::putchar(char)
                0x00000000c000879e                VgaText::putx(unsigned int)
                0x00000000c00087e4                VgaText::puts(char const*)
                0x00000000c000880a                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008856                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00089a8                VgaText::VgaText(char const*)
                0x00000000c00089a8                VgaText::VgaText(char const*)
                0x00000000c0008af8                VgaText::receiveKey(unsigned char)
                0x00000000c0008c6e                VgaText::doUpdate()
                0x00000000c0008c6f                newTerminal(char*)
 .text          0x00000000c0008c94      0x1a1 core/tss.32
                0x00000000c0008c94                TSS::TSS()
                0x00000000c0008c94                TSS::TSS()
                0x00000000c0008ca4                TSS::setESP(unsigned long)
                0x00000000c0008cb8                TSS::flush()
                0x00000000c0008cd8                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008e35        0x1 
 .text          0x00000000c0008e36      0x4c2 core/unixfile.32
                0x00000000c0008e36                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008e8c                ReservedFilename::isAtty()
                0x00000000c0008ea8                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008f06                UnixFile::getFileDescriptor()
                0x00000000c0008f0e                UnixFile::UnixFile(int)
                0x00000000c0008f0e                UnixFile::UnixFile(int)
                0x00000000c00090be                ReservedFilename::ReservedFilename(int)
                0x00000000c00090be                ReservedFilename::ReservedFilename(int)
                0x00000000c00090f0                UnixFile::~UnixFile()
                0x00000000c00090f0                UnixFile::~UnixFile()
                0x00000000c0009188                UnixFile::~UnixFile()
                0x00000000c00091b0                ReservedFilename::~ReservedFilename()
                0x00000000c00091b0                ReservedFilename::~ReservedFilename()
                0x00000000c00091d4                ReservedFilename::~ReservedFilename()
                0x00000000c00091fb                getFromFileDescriptor(int)
 .text          0x00000000c00092f8     0x11d0 core/virtmgr.32
                0x00000000c00092f8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000932d                Virt::getPageState(unsigned long)
                0x00000000c0009351                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009462                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009480                Virt::swapIDToSector(unsigned long)
                0x00000000c0009492                Virt::allocateSwapfilePage()
                0x00000000c0009510                Virt::virtualMemorySetup()
                0x00000000c000955b                Virt::setupPageSwapping(int)
                0x00000000c00095cc                VAS::VAS(VAS*)
                0x00000000c00095cc                VAS::VAS(VAS*)
                0x00000000c00095fa                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009626                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009645                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000976a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000978e                VAS::virtualToPhysical(unsigned long)
                0x00000000c00097a8                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c00097e8                VAS::VAS()
                0x00000000c00097e8                VAS::VAS()
                0x00000000c0009852                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009886                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00098b0                VAS::~VAS()
                0x00000000c00098b0                VAS::~VAS()
                0x00000000c0009a14                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009b18                VAS::allocatePages(int, int)
                0x00000000c0009cf0                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009d0e                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009dd4                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009ec2                VAS::VAS(bool)
                0x00000000c0009ec2                VAS::VAS(bool)
                0x00000000c000a142                VAS::evict(unsigned long)
                0x00000000c000a204                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a2f2                VAS::scanForEviction()
                0x00000000c000a3d2                mapVASFirstTime
 .text          0x00000000c000a4c8       0x5f coreobjs/c++.32
                0x00000000c000a4c8                __cxa_atexit
                0x00000000c000a4cb                __cxa_finalize
                0x00000000c000a4cc                __stack_chk_fail
                0x00000000c000a502                __cxa_pure_virtual
                0x00000000c000a513                operator new[](unsigned long)
                0x00000000c000a518                operator delete(void*, unsigned long)
                0x00000000c000a51d                operator delete[](void*)
                0x00000000c000a522                operator delete[](void*, unsigned long)
 .text          0x00000000c000a527      0x21c dbg/kconsole.32
                0x00000000c000a527                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a592                Dbg::logc(char)
                0x00000000c000a5b2                Dbg::logs(char*)
                0x00000000c000a5cf                Dbg::logWriteInt(unsigned int)
                0x00000000c000a5ed                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a60e                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a743        0x1 
 .text          0x00000000c000a744      0xc5c fs/vfs.32
                0x00000000c000a744                File::read(unsigned long long, void*, int*)
                0x00000000c000a79c                File::write(unsigned long long, void*, int*)
                0x00000000c000a7f4                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a84c                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a87a                File::isAtty()
                0x00000000c000a87e                Directory::isAtty()
                0x00000000c000a882                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a888                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a88e                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a894                File::~File()
                0x00000000c000a894                File::~File()
                0x00000000c000a8b8                File::~File()
                0x00000000c000a8e2                Directory::~Directory()
                0x00000000c000a8e2                Directory::~Directory()
                0x00000000c000a906                Directory::~Directory()
                0x00000000c000a930                Filesystem::Filesystem()
                0x00000000c000a930                Filesystem::Filesystem()
                0x00000000c000a954                Filesystem::~Filesystem()
                0x00000000c000a954                Filesystem::~Filesystem()
                0x00000000c000a962                Filesystem::~Filesystem()
                0x00000000c000a986                Fs::getcwd(Process*, char*, int)
                0x00000000c000a9b0                Fs::initVFS()
                0x00000000c000a9da                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000ab84                File::File(char const*, Process*)
                0x00000000c000ab84                File::File(char const*, Process*)
                0x00000000c000ac44                File::open(FileOpenMode)
                0x00000000c000aca2                File::close()
                0x00000000c000ad02                File::seek(unsigned long long)
                0x00000000c000ad58                File::tell(unsigned long long*)
                0x00000000c000ada8                File::rewind()
                0x00000000c000adbc                File::unlink()
                0x00000000c000ae08                File::rename(char const*)
                0x00000000c000ae56                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000aeb2                File::exists()
                0x00000000c000aef0                File::stat(unsigned long long*, bool*)
                0x00000000c000af51                Fs::setcwd(Process*, char*)
                0x00000000c000b0ae                Directory::Directory(char const*, Process*)
                0x00000000c000b0ae                Directory::Directory(char const*, Process*)
                0x00000000c000b16e                Directory::open()
                0x00000000c000b1ca                Directory::close()
                0x00000000c000b22a                Directory::unlink()
                0x00000000c000b276                Directory::rename(char const*)
                0x00000000c000b2c4                Directory::exists()
                0x00000000c000b302                Directory::read(dirent*)
                0x00000000c000b34e                Directory::create()
                0x00000000c000b39a                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000b3a0       0x86 hal/bus.32
                0x00000000c000b3a0                Bus::Bus(char const*)
                0x00000000c000b3a0                Bus::Bus(char const*)
                0x00000000c000b3d8                Bus::~Bus()
                0x00000000c000b3d8                Bus::~Bus()
                0x00000000c000b3fc                Bus::~Bus()
 .text          0x00000000c000b426       0x96 hal/buzzer.32
                0x00000000c000b426                beepThread(void*)
                0x00000000c000b463                Krnl::beep(int, int, bool)
 .text          0x00000000c000b4bc      0x46d hal/clock.32
                0x00000000c000b4bc                User::loadClockSettings(int)
                0x00000000c000b50e                Clock::Clock(char const*)
                0x00000000c000b50e                Clock::Clock(char const*)
                0x00000000c000b544                Clock::~Clock()
                0x00000000c000b544                Clock::~Clock()
                0x00000000c000b568                Clock::~Clock()
                0x00000000c000b592                Clock::timeInSecondsLocal()
                0x00000000c000b5da                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b633                datetimeToSeconds(datetime_t)
                0x00000000c000b760                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b7c0                secondsToDatetime(unsigned long long)
                0x00000000c000b904                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b929        0x1 
 .text          0x00000000c000b92a      0x464 hal/device.32
                0x00000000c000b92a                Device::hibernate()
                0x00000000c000b92c                Device::wake()
                0x00000000c000b92e                Device::detect()
                0x00000000c000b930                Device::disableLegacy()
                0x00000000c000b932                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b934                DriverlessDevice::close(int, int, void*)
                0x00000000c000b938                DriverlessDevice::detect()
                0x00000000c000b93a                DriverlessDevice::open(int, int, void*)
                0x00000000c000b94e                Device::~Device()
                0x00000000c000b94e                Device::~Device()
                0x00000000c000b95c                Device::~Device()
                0x00000000c000b984                Device::findAndLoadDriver()
                0x00000000c000b992                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b9b8                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000b9f8                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ba22                Device::getParent()
                0x00000000c000ba2e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ba4c                Device::addChild(Device*)
                0x00000000c000ba90                Device::removeAllChildren()
                0x00000000c000bad6                Device::hibernateAll()
                0x00000000c000bb06                Device::wakeAll()
                0x00000000c000bb36                Device::detectAll()
                0x00000000c000bb66                Device::disableLegacyAll()
                0x00000000c000bb68                Device::loadDriversForAll()
                0x00000000c000bb6a                Device::closeAll()
                0x00000000c000bba0                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bbd6                Device::setName(char const*)
                0x00000000c000bbe4                Device::Device(char const*)
                0x00000000c000bbe4                Device::Device(char const*)
                0x00000000c000bce0                Device::getName()
                0x00000000c000bcea                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bcea                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bd20                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bd64                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bd8e        0x2 
 .text          0x00000000c000bd90       0x86 hal/diskctrl.32
                0x00000000c000bd90                HardDiskController::HardDiskController(char const*)
                0x00000000c000bd90                HardDiskController::HardDiskController(char const*)
                0x00000000c000bdc8                HardDiskController::~HardDiskController()
                0x00000000c000bdc8                HardDiskController::~HardDiskController()
                0x00000000c000bdec                HardDiskController::~HardDiskController()
 .text          0x00000000c000be16       0xe2 hal/diskphys.32
                0x00000000c000be16                PhysicalDisk::eject()
                0x00000000c000be1a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000be1a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000be82                PhysicalDisk::startCache()
                0x00000000c000beaa                PhysicalDisk::~PhysicalDisk()
                0x00000000c000beaa                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bece                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000bef8        0x0 hal/fpu.32
 .text          0x00000000c000bef8      0x35d hal/intctrl.32
                0x00000000c000bef8                int_handler
                0x00000000c000bf80                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000bfc8                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c100                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c134                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c1b3                setupINTS()
                0x00000000c000c210                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c255        0x1 
 .text          0x00000000c000c256      0x7ec hal/keybrd.32
                0x00000000c000c256                startGUI(void*)
                0x00000000c000c2c2                startGUIVESA(void*)
                0x00000000c000c32e                sendKeyToTerminal(unsigned char)
                0x00000000c000c3fd                sendKeyboardToken(KeyboardToken)
                0x00000000c000c83d                clearInternalKeybuffer(VgaText*)
                0x00000000c000c872                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c9b8                Keyboard::Keyboard(char const*)
                0x00000000c000c9b8                Keyboard::Keyboard(char const*)
                0x00000000c000c9f4                Keyboard::~Keyboard()
                0x00000000c000c9f4                Keyboard::~Keyboard()
                0x00000000c000ca18                Keyboard::~Keyboard()
 .text          0x00000000c000ca42      0x3f4 hal/logidisk.32
                0x00000000c000ca42                LogicalDisk::close(int, int, void*)
                0x00000000c000ca46                LogicalDisk::~LogicalDisk()
                0x00000000c000ca46                LogicalDisk::~LogicalDisk()
                0x00000000c000ca6a                LogicalDisk::~LogicalDisk()
                0x00000000c000ca94                LogicalDisk::open(int, int, void*)
                0x00000000c000caa8                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cae0                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cb26                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cb26                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cbe6                LogicalDisk::assignDriveLetter()
                0x00000000c000cc9c                LogicalDisk::mount()
                0x00000000c000cce4                LogicalDisk::unmount()
                0x00000000c000ccf4                LogicalDisk::eject()
                0x00000000c000cd08                LogicalDisk::unassignDriveLetter()
                0x00000000c000cd5e                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000cdca                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000ce36        0x2 
 .text          0x00000000c000ce38       0x86 hal/mouse.32
                0x00000000c000ce38                Mouse::Mouse(char const*)
                0x00000000c000ce38                Mouse::Mouse(char const*)
                0x00000000c000ce70                Mouse::~Mouse()
                0x00000000c000ce70                Mouse::~Mouse()
                0x00000000c000ce94                Mouse::~Mouse()
 .text          0x00000000c000cebe       0x90 hal/nic.32
                0x00000000c000cebe                NIC::getMAC()
                0x00000000c000cec4                NIC::write(int, unsigned char*, int*)
                0x00000000c000ceca                NIC::NIC(char const*)
                0x00000000c000ceca                NIC::NIC(char const*)
                0x00000000c000cf00                NIC::~NIC()
                0x00000000c000cf00                NIC::~NIC()
                0x00000000c000cf24                NIC::~NIC()
 .text          0x00000000c000cf4e      0x339 hal/partition.32
                0x00000000c000cf4e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cff6                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d287        0x1 
 .text          0x00000000c000d288       0x86 hal/serial.32
                0x00000000c000d288                Serial::Serial(char const*)
                0x00000000c000d288                Serial::Serial(char const*)
                0x00000000c000d2c0                Serial::~Serial()
                0x00000000c000d2c0                Serial::~Serial()
                0x00000000c000d2e4                Serial::~Serial()
 *fill*         0x00000000c000d30e        0x2 
 .text          0x00000000c000d310      0x234 hal/timer.32
                0x00000000c000d310                Timer::Timer(char const*)
                0x00000000c000d310                Timer::Timer(char const*)
                0x00000000c000d348                Timer::~Timer()
                0x00000000c000d348                Timer::~Timer()
                0x00000000c000d36c                Timer::~Timer()
                0x00000000c000d396                Timer::read()
                0x00000000c000d3a1                setupTimer(int)
                0x00000000c000d3dc                timerHandler(unsigned int)
 .text          0x00000000c000d544      0x440 hal/vcache.32
                0x00000000c000d544                VCache::VCache(PhysicalDisk*)
                0x00000000c000d544                VCache::VCache(PhysicalDisk*)
                0x00000000c000d6b4                VCache::invalidateReadBuffer()
                0x00000000c000d6c4                VCache::writeWriteBuffer()
                0x00000000c000d710                VCache::~VCache()
                0x00000000c000d710                VCache::~VCache()
                0x00000000c000d764                VCache::~VCache()
                0x00000000c000d78c                VCache::write(unsigned long long, int, void*)
                0x00000000c000d87a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d984      0x4c7 hal/video.32
                0x00000000c000d984                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d9d0                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000da40                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000dabe                Video::clearScreen(unsigned int)
                0x00000000c000daf2                Video::putpixel(int, int, unsigned int)
                0x00000000c000db00                Video::readPixelApprox(int, int)
                0x00000000c000db14                Video::Video(char const*)
                0x00000000c000db14                Video::Video(char const*)
                0x00000000c000db4a                Video::~Video()
                0x00000000c000db4a                Video::~Video()
                0x00000000c000db6e                Video::~Video()
                0x00000000c000db98                Video::isMonochrome()
                0x00000000c000dba4                Video::getWidth()
                0x00000000c000dbb0                Video::getHeight()
                0x00000000c000dbbc                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000dc78                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000dde0                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000de4b        0x1 
 .text          0x00000000c000de4c     0x1307 hw/acpi.32
                0x00000000c000de4c                ACPI::close(int, int, void*)
                0x00000000c000df04                findRSDP()
                0x00000000c000df94                loadACPITables(unsigned char*)
                0x00000000c000e1f8                findRSDT(unsigned char*)
                0x00000000c000e348                findDataTable(unsigned char*, char*)
                0x00000000c000e3c0                scanMADT()
                0x00000000c000e894                ACPI::ACPI()
                0x00000000c000e894                ACPI::ACPI()
                0x00000000c000e8e8                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e9d0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ea98                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000eaa0                ACPI::detectPCI()
                0x00000000c000eca8                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ecfc                ACPI::sleep()
                0x00000000c000ed18                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f153        0x1 
 .text          0x00000000c000f154      0xb95 hw/cpu.32
                0x00000000c000f154                CPU::close(int, int, void*)
                0x00000000c000f158                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f174                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f18c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f200                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f284                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f2b2                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f2e0                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f30e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f33c                CPU::CPU()
                0x00000000c000f33c                CPU::CPU()
                0x00000000c000f3ca                CPU::displayFeatures()
                0x00000000c000f3cc                CPU::detectFeatures()
                0x00000000c000fa90                CPU::setupSMEP()
                0x00000000c000fa9c                CPU::setupUMIP()
                0x00000000c000faa6                CPU::setupTSC()
                0x00000000c000fab0                CPU::setupLargePages()
                0x00000000c000faba                CPU::setupPAT()
                0x00000000c000faf6                CPU::setupMTRR()
                0x00000000c000faf8                CPU::setupGlobalPages()
                0x00000000c000fb02                CPU::allowUsermodeDataAccess()
                0x00000000c000fb14                CPU::prohibitUsermodeDataAccess()
                0x00000000c000fb26                CPU::setupSMAP()
                0x00000000c000fb34                CPU::setupFeatures()
                0x00000000c000fc00                CPU::open(int, int, void*)
 .text          0x00000000c000fce9       0xd1 krnl/bootmsg.32
                0x00000000c000fce9                KeDisplaySplashScreen()
                0x00000000c000fd57                KeSetBootMessage(char const*)
 .text          0x00000000c000fdba      0x581 krnl/env.32
                0x00000000c000fdba                EnvVarContainer::getEnv(char const*)
                0x00000000c000fdf8                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000feba                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000febc                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00100a2                EnvVarContainer::__loadSystem()
                0x00000000c00100bc                EnvVarContainer::__loadUser()
                0x00000000c00100be                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00100be                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00100e0                EnvVarContainer::~EnvVarContainer()
                0x00000000c00100e0                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010110                Krnl::getEnv(Process*, char const*)
                0x00000000c0010175                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001018f                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00101ae                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00101c1                Krnl::deleteEnvSystem(char const*)
                0x00000000c00101c2                Krnl::deleteEnvUser(char const*)
                0x00000000c00101c3                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00101c4                Krnl::newProcessEnv(Process*)
                0x00000000c00101e6                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010232                Krnl::loadSystemEnv()
                0x00000000c0010260                Krnl::loadUserEnv()
                0x00000000c0010286                Krnl::flushEnv()
                0x00000000c0010287                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00102a7                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001033b       0x94 krnl/inlines.32
                0x00000000c001033b                CPU::current()
                0x00000000c0010347                operator new(unsigned long)
                0x00000000c001034c                operator delete(void*)
                0x00000000c0010351                disableIRQs()
                0x00000000c0010353                enableIRQs()
                0x00000000c0010355                lockScheduler()
                0x00000000c001035d                unlockScheduler()
                0x00000000c001036c                lockStuff()
                0x00000000c001037a                unlockStuff()
                0x00000000c00103b4                Virt::getAKernelVAS()
                0x00000000c00103ba                __not_memcpy
 .text          0x00000000c00103cf        0xc krnl/panic.32
                0x00000000c00103cf                KePanic(char const*)
 .text          0x00000000c00103db      0x142 krnl/powctrl.32
                0x00000000c00103db                Krnl::powerThread(void*)
                0x00000000c0010409                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c001041f                Krnl::userIOReceived()
                0x00000000c001042a                Krnl::handlePowerButton()
                0x00000000c001045f                Krnl::handleSleepButton()
                0x00000000c0010494                Krnl::setupPowerManager()
 .text          0x00000000c001051d       0x9d krnl/random.32
                0x00000000c001051d                KeRand()
                0x00000000c001055f                KeSeedRand(unsigned int)
                0x00000000c0010588                KeInitRand()
 *fill*         0x00000000c00105ba        0x2 
 .text          0x00000000c00105bc      0x190 krnl/resolve.32
                0x00000000c00105bc                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c001074c      0x313 krnl/signal.32
                0x00000000c001074c                KiSigKill(int)
                0x00000000c0010760                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010761                KiDefaultSignalHandlerPause(int)
                0x00000000c001078d                KiDefaultSignalHandlerResume(int)
                0x00000000c00107b9                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00107be                KeInitSignals()
                0x00000000c0010809                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001083f                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00108bc                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c00109ab                KiCheckSignalZ
                0x00000000c00109ed                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010a28                KiFinishSignalZ
 .text          0x00000000c0010a5f      0xc39 krnl/syscalls.32
                0x00000000c0010a5f                SysSeekDir(regs*)
                0x00000000c0010a64                SysTellDir(regs*)
                0x00000000c0010a69                SysVerify(regs*)
                0x00000000c0010a73                SysGetArgc(regs*)
                0x00000000c0010a83                SysTTYName(regs*)
                0x00000000c0010a8b                SysFormatDisk(regs*)
                0x00000000c0010af8                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010b42                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010b97                SysShutdown(regs*)
                0x00000000c0010bf5                SysRealpath(regs*)
                0x00000000c0010c38                SysReadDir(regs*)
                0x00000000c0010cb8                SysIsATTY(regs*)
                0x00000000c0010d14                SysSeek(regs*)
                0x00000000c0010d6d                SysTell(regs*)
                0x00000000c0010ddc                SysSize(regs*)
                0x00000000c0010e51                SysSizeFromFilename(regs*)
                0x00000000c0010f04                SysClose(regs*)
                0x00000000c0010f64                SysOpenDir(regs*)
                0x00000000c0010fdb                SysMakeDir(regs*)
                0x00000000c0011045                SysCloseDir(regs*)
                0x00000000c0011099                SysWait(regs*)
                0x00000000c00110b6                SysNotImpl(regs*)
                0x00000000c00110d1                SysPanic(regs*)
                0x00000000c00110ec                SysRmdir(regs*)
                0x00000000c0011153                SysUnlink(regs*)
                0x00000000c00111ba                SysGetArgv(regs*)
                0x00000000c0011207                SysUSleep(regs*)
                0x00000000c0011230                SysSpawn(regs*)
                0x00000000c0011299                SysGetEnv(regs*)
                0x00000000c0011348                SysSetFatAttrib(regs*)
                0x00000000c00113bf                SysPipe(regs*)
                0x00000000c0011404                SysGetUnixTime(regs*)
                0x00000000c0011418                string_ends_with(char const*, char const*)
                0x00000000c0011462                SysOpen(regs*)
                0x00000000c0011656                KeSystemCall(regs*, void*)
 .text          0x00000000c0011698      0x159 net/ethernet.32
                0x00000000c0011698                KeSwitchEndian16(unsigned short)
                0x00000000c00116c4                KeSwitchEndian32(unsigned int)
                0x00000000c00116f4                EthernetCRC32(unsigned char*, int)
                0x00000000c0011798                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c00117f1      0xd4d reg/cm.32
                0x00000000c00117f1                CmOpen(char const*)
                0x00000000c001190f                CmClose(Reghive_Tag*)
                0x00000000c0011925                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011961                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c00119d8                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011a17                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011a49                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011a85                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0011aad                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0011ace                CmExpand(Reghive_Tag*, int)
                0x00000000c0011b49                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0011bcf                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0011cc3                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0011dff                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0011e60                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0011e90                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0011ec7                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0011ef1                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0011f31                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0011fd5                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012003                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00121a1                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00121ee                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012268                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00122bb                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001237f                zStrtok(char*, char const*)
                0x00000000c00123e8                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0012469                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c001250c                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001253e      0x50e reg/registry.32
                0x00000000c001253e                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012696                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00127eb                Reg::getLine(char*, char*, char*)
                0x00000000c0012822                Reg::readInt(char*, char*, int*)
                0x00000000c001290d                Reg::readString(char*, char*, char*, int)
                0x00000000c001298e                Reg::readBool(char*, char*, bool*)
                0x00000000c00129b3                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00129df                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012a0b                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012a4c       0x36 sys/eject.32
                0x00000000c0012a4c                SysEject(regs*)
 .text          0x00000000c0012a82       0x18 sys/exit.32
                0x00000000c0012a82                SysExit(regs*)
 .text          0x00000000c0012a9a       0x1f sys/getcwd.32
                0x00000000c0012a9a                SysGetCwd(regs*)
 .text          0x00000000c0012ab9        0xc sys/getpid.32
                0x00000000c0012ab9                SysGetPID(regs*)
 .text          0x00000000c0012ac5       0x1a sys/getramdata.32
                0x00000000c0012ac5                SysGetRAMData(regs*)
 .text          0x00000000c0012adf       0x82 sys/getvgaptr.32
                0x00000000c0012adf                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0012b61        0x3 
 .text          0x00000000c0012b64       0xb9 sys/kill.32
                0x00000000c0012b64                SysKill(regs*)
 .text          0x00000000c0012c1d       0xa8 sys/loaddll.32
                0x00000000c0012c1d                SysLoadDLL(regs*)
 .text          0x00000000c0012cc5       0x68 sys/read.32
                0x00000000c0012cc5                SysRead(regs*)
 .text          0x00000000c0012d2d       0x29 sys/registersignal.32
                0x00000000c0012d2d                SysRegisterSignal(regs*)
 .text          0x00000000c0012d56      0x19c sys/registry.32
                0x00000000c0012d56                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0012dcd                SysRegistryReadExtent(regs*)
                0x00000000c0012e15                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0012e3d                SysRegistryEnterDirectory(regs*)
                0x00000000c0012e65                SysRegistryGetNext(regs*)
                0x00000000c0012e8d                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0012ec7                SysRegistryOpen(regs*)
                0x00000000c0012edb                SysRegistryClose(regs*)
 .text          0x00000000c0012ef2       0x55 sys/sbrk.32
                0x00000000c0012ef2                SysSbrk(regs*)
 .text          0x00000000c0012f47       0x1c sys/setcwd.32
                0x00000000c0012f47                SysSetCwd(regs*)
 .text          0x00000000c0012f63       0x95 sys/settime.32
                0x00000000c0012f63                SysSetTime(regs*)
 .text          0x00000000c0012ff8       0x4a sys/timezone.32
                0x00000000c0012ff8                SysTimezone(regs*)
 .text          0x00000000c0013042       0x68 sys/write.32
                0x00000000c0013042                SysWrite(regs*)
 .text          0x00000000c00130aa       0x62 sys/wsbe.32
                0x00000000c00130aa                SysWsbe(regs*)
 .text          0x00000000c001310c       0x25 sys/yield.32
                0x00000000c001310c                SysYield(regs*)
 .text          0x00000000c0013131     0x11e5 thr/elf.32
                0x00000000c0013131                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00133bd                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00135d3                Thr::runtimeReferenceHelper()
                0x00000000c00135e6                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013635                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00138f3                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014029                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001405b                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014092                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00140ac                Thr::loadDLL(char const*, bool)
                0x00000000c00142dd                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0014316        0x2 
 .text          0x00000000c0014318     0x1325 thr/prcssthr.32
                0x00000000c0014318                userModeEntryPoint(void*)
                0x00000000c0014340                changeTSS
                0x00000000c0014370                switchToThread(ThreadControlBlock*)
                0x00000000c0014424                Process::addArgs(char**)
                0x00000000c0014484                Process::Process(char const*, Process*, char**)
                0x00000000c0014484                Process::Process(char const*, Process*, char**)
                0x00000000c0014690                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014690                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014868                taskStartupFunction
                0x00000000c0014874                Semaphore::Semaphore(int)
                0x00000000c0014874                Semaphore::Semaphore(int)
                0x00000000c00148a4                Mutex::Mutex()
                0x00000000c00148a4                Mutex::Mutex()
                0x00000000c00148b8                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00149c4                Process::createUserThread()
                0x00000000c00149e4                setupMultitasking(void (*)())
                0x00000000c0014b00                schedule()
                0x00000000c0014b90                Semaphore::tryAcquire()
                0x00000000c0014c5c                Semaphore::assertLocked(char const*)
                0x00000000c0014cd4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0014cfc                blockTask(TaskState)
                0x00000000c0014d2c                waitTask(int, int*, int)
                0x00000000c0014d70                milliTenthSleepUntil(unsigned int)
                0x00000000c0014e00                milliTenthSleep(unsigned int)
                0x00000000c0014e10                sleep(unsigned int)
                0x00000000c0014e2c                Semaphore::acquire()
                0x00000000c0014ee8                taskReturned
                0x00000000c0014f24                Thr::processFromPID(int)
                0x00000000c0014fc4                unblockTask(ThreadControlBlock*)
                0x00000000c0015068                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015334                cleanerTaskFunction(void*)
                0x00000000c0015424                terminateTask(int)
                0x00000000c00154f0                Thr::terminateFromIRQ(int)
                0x00000000c0015500                Semaphore::release()
 .text          0x00000000c001563d      0xb93 vm86/vm8086.32
                0x00000000c001563d                Vm::inbv(unsigned short)
                0x00000000c0015650                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015686                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015696                Vm::getSegment(unsigned int)
                0x00000000c001569e                Vm::getOffset(unsigned int)
                0x00000000c00156a3                Vm::mainloop2()
                0x00000000c00156dd                Vm::mainVm8086Loop(void*)
                0x00000000c00156ed                Vm::mainloop3(unsigned long)
                0x00000000c0015713                Vm::initialise8086()
                0x00000000c0015756                Vm::finish8086()
                0x00000000c00157b7                Vm::getOutput8086(unsigned char*)
                0x00000000c00157dc                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015895                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00159fd                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0015a87                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0015a98                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0015aaa                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0015abb                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0015ad0                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0015ae6                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0015afb                Vm::faultHandler(regs*)
 .text          0x00000000c00161d0      0xa8e arch/i386/hal.32
                0x00000000c00161d0                noCopro(unsigned long)
                0x00000000c00161d1                nmiHandler(regs*, void*)
                0x00000000c00161ea                doubleFault(regs*, void*)
                0x00000000c0016203                displayDebugInfo(regs*)
                0x00000000c001655f                HalSystemIdle()
                0x00000000c00165d5                displayProgramFault(char const*)
                0x00000000c0016621                gpFault(regs*, void*)
                0x00000000c0016686                pgFault(regs*, void*)
                0x00000000c001670c                otherISRHandler(regs*, void*)
                0x00000000c0016740                opcodeFault(regs*, void*)
                0x00000000c00167c0                i386SaveCoprocessor(void*)
                0x00000000c00167d4                i386LoadCoprocessor(void*)
                0x00000000c00167e8                x87EmulHandler(regs*, void*)
                0x00000000c0016885                HalInitialiseCoprocessor()
                0x00000000c0016933                HalPanic(char const*)
                0x00000000c0016a2c                HalQueryPerformanceCounter()
                0x00000000c0016a47                HalInitialise()
                0x00000000c0016bed                HalMakeBeep(int)
                0x00000000c0016c27                HalGetRand()
                0x00000000c0016c2a                HalEndOfInterrupt(int)
                0x00000000c0016c5b                HalRestart()
                0x00000000c0016c5c                HalShutdown()
                0x00000000c0016c5d                HalSleep()
 *fill*         0x00000000c0016c5e        0x2 
 .text          0x00000000c0016c60      0x2f4 arch/i386/pic.32
                0x00000000c0016c60                picIoWait()
                0x00000000c0016c68                picDisable()
                0x00000000c0016c9c                picGetIRQReg(int)
                0x00000000c0016d20                picOpen()
                0x00000000c0016eb0                picEOI(int)
 .text          0x00000000c0016f54      0x64d arch/i386/rtc.32
                0x00000000c0016f54                RTC::open(int, int, void*)
                0x00000000c0016f58                RTC::close(int, int, void*)
                0x00000000c0016f5c                RTC::timeInSecondsUTC()
                0x00000000c0016f6e                RTC::timeInDatetimeUTC()
                0x00000000c0016f94                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0016fd2                RTC::~RTC()
                0x00000000c0016fd2                RTC::~RTC()
                0x00000000c0016ff6                RTC::~RTC()
                0x00000000c0017020                RTC::get_update_in_progress_flag()
                0x00000000c0017038                RTC::completeRTCRefresh()
                0x00000000c00172f0                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00174a3                rtcIRQHandler(regs*, void*)
                0x00000000c00174e8                RTC::RTC()
                0x00000000c00174e8                RTC::RTC()
 *fill*         0x00000000c00175a1        0x3 
 .text          0x00000000c00175a4      0x203 arch/i386/vga.32
                0x00000000c00175a4                HalConsoleScroll(int, int)
                0x00000000c00176ac                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017718                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00177a7        0x1 
 .text          0x00000000c00177a8     0x13e7 fs/fat/vfslink.32
                0x00000000c00177a8                FAT::getName()
                0x00000000c00177b0                FAT::tell(void*, unsigned long long*)
                0x00000000c00177ec                FAT::stat(void*, unsigned long long*)
                0x00000000c0017828                FAT::~FAT()
                0x00000000c0017828                FAT::~FAT()
                0x00000000c001784c                FAT::~FAT()
                0x00000000c0017874                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017918                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00179dc                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017bb0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0017dc8                FAT::allocateSwapfile(char const*, int)
                0x00000000c0017f88                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00180f4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0018154                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00181b4                FAT::close(void*)
                0x00000000c0018208                FAT::closeDir(void*)
                0x00000000c001825c                FAT::seek(void*, unsigned long long)
                0x00000000c00182b4                fatWrapperReadDisk
                0x00000000c00182f8                fatWrapperWriteDisk
                0x00000000c001833c                fatWrapperIoctl
                0x00000000c0018458                FAT::FAT()
                0x00000000c0018458                FAT::FAT()
                0x00000000c00184ac                FAT::fixFilepath(char*)
                0x00000000c00184e8                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0018620                FAT::openDir(char const*, void**)
                0x00000000c00186d0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00187c8                FAT::unlink(char const*)
                0x00000000c0018848                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00189d4                FAT::rename(char const*, char const*)
                0x00000000c0018aa0                FAT::mkdir(char const*)
                0x00000000c0018b20                FAT::exists(char const*)
 *fill*         0x00000000c0018b8f        0x1 
 .text          0x00000000c0018b90       0x94 fs/iso9660/helper.32
                0x00000000c0018b90                isoReadDiscSectorHelper
                0x00000000c0018bec                iso_kprintf
                0x00000000c0018c08                iso_kprintfd
 .text          0x00000000c0018c24      0x6f8 fs/iso9660/vfslink.32
                0x00000000c0018c24                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018c2a                ISO9660::getName()
                0x00000000c0018c30                ISO9660::closeDir(void*)
                0x00000000c0018c3a                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0018c40                ISO9660::unlink(char const*)
                0x00000000c0018c46                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0018c4c                ISO9660::rename(char const*, char const*)
                0x00000000c0018c52                ISO9660::mkdir(char const*)
                0x00000000c0018c58                ISO9660::~ISO9660()
                0x00000000c0018c58                ISO9660::~ISO9660()
                0x00000000c0018c7c                ISO9660::~ISO9660()
                0x00000000c0018ca4                ISO9660::exists(char const*)
                0x00000000c0018cb8                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0018d96                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0018dde                ISO9660::seek(void*, unsigned long long)
                0x00000000c0018e20                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0018e5e                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0018eb0                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018fe8                ISO9660::close(void*)
                0x00000000c0019018                ISO9660::openDir(char const*, void**)
                0x00000000c00190ea                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019207                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0019282                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c00192f4                ISO9660::ISO9660()
                0x00000000c00192f4                ISO9660::ISO9660()
 .text          0x00000000c001931c      0x26c hal/sound/sndcard.32
                0x00000000c001931c                SoundCard::beginPlayback()
                0x00000000c001932a                SoundCard::stopPlayback()
                0x00000000c0019338                SoundCard::SoundCard(char const*)
                0x00000000c0019338                SoundCard::SoundCard(char const*)
                0x00000000c00193d6                SoundCard::~SoundCard()
                0x00000000c00193d6                SoundCard::~SoundCard()
                0x00000000c00193fa                SoundCard::~SoundCard()
                0x00000000c0019424                SoundCard::configureRates(int, int, int)
                0x00000000c0019454                SoundCard::getSamples16(int, short*)
                0x00000000c00194b0                SoundCard::getSamples32(int, int*)
                0x00000000c0019536                SoundCard::addChannel(SoundPort*)
                0x00000000c0019574                SoundCard::removeChannel(int)
 .text          0x00000000c0019588      0x377 hal/sound/sndport.32
                0x00000000c0019588                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019588                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019614                SoundPort::~SoundPort()
                0x00000000c0019614                SoundPort::~SoundPort()
                0x00000000c0019648                SoundPort::unpause()
                0x00000000c0019654                SoundPort::pause()
                0x00000000c0019660                SoundPort::getBufferUsed()
                0x00000000c0019668                SoundPort::getBufferSize()
                0x00000000c0019670                SoundPort::buffer16(short*, int)
                0x00000000c00196fc                SoundPort::buffer32(int*, int)
                0x00000000c0019784                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019848                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c00198ff        0x0 hw/bus/isa.32
 *fill*         0x00000000c00198ff        0x1 
 .text          0x00000000c0019900      0xb83 hw/bus/pci.32
                0x00000000c0019900                PCI::open(int, int, void*)
                0x00000000c001991e                PCI::close(int, int, void*)
                0x00000000c0019922                PCI::PCI()
                0x00000000c0019922                PCI::PCI()
                0x00000000c00199bc                PCI::readBAR8(unsigned int, int)
                0x00000000c00199d8                PCI::readBAR16(unsigned int, int)
                0x00000000c00199f6                PCI::readBAR32(unsigned int, int)
                0x00000000c0019a12                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0019a32                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0019a54                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0019a74                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019ae2                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019b8a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0019bae                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0019bd6                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0019c20                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0019c48                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0019c6c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0019c90                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0019cb8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019d1c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0019e04                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a0b8                PCI::checkBus(unsigned char)
                0x00000000c001a0de                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a250                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001a3c4                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001a430                PCI::detect()
 *fill*         0x00000000c001a483        0x1 
 .text          0x00000000c001a484      0xb5a hw/diskctrl/ide.32
                0x00000000c001a484                IDE::close(int, int, void*)
                0x00000000c001a488                IDE::IDE()
                0x00000000c001a488                IDE::IDE()
                0x00000000c001a4bc                IDE::prepareInterrupt(unsigned char)
                0x00000000c001a4ce                selectDrive(unsigned char, unsigned char)
                0x00000000c001a4d0                IDE::getBase(unsigned char)
                0x00000000c001a4e2                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001a5a2                IDE::read(unsigned char, unsigned char)
                0x00000000c001a650                IDE::waitInterrupt(unsigned char)
                0x00000000c001a6b8                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001a6d4                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001a6f0                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001a736                IDE::open(int, int, void*)
                0x00000000c001ab44                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ac10                IDE::detect()
                0x00000000c001aed0                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001af80                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001afde      0x32a hw/diskctrl/satabus.32
                0x00000000c001afde                SATABus::close(int, int, void*)
                0x00000000c001afe2                SATABus::detect()
                0x00000000c001afe4                SATABus::SATABus()
                0x00000000c001afe4                SATABus::SATABus()
                0x00000000c001b06a                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b09c                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b0e4                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b104                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b12e                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b23e                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001b2e8                SATABus::open(int, int, void*)
 .text          0x00000000c001b308      0x921 hw/diskphys/ata.32
                0x00000000c001b308                ATA::close(int, int, void*)
                0x00000000c001b32c                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001b32e                ATA::ATA()
                0x00000000c001b32e                ATA::ATA()
                0x00000000c001b35c                ATA::flush(bool)
                0x00000000c001b3a6                ATA::readyForCommand()
                0x00000000c001b3f2                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001b76e                ATA::detectCHS()
                0x00000000c001b798                ATA::open(int, int, void*)
                0x00000000c001b864                combineCharAndColour(char, unsigned char)
                0x00000000c001b875                combineColours(unsigned char, unsigned char)
                0x00000000c001b882                ATA::read(unsigned long long, int, void*)
                0x00000000c001ba58                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001bc29        0x1 
 .text          0x00000000c001bc2a      0x60e hw/diskphys/atapi.32
                0x00000000c001bc2a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001bc30                ATAPI::close(int, int, void*)
                0x00000000c001bc54                ATAPI::ATAPI()
                0x00000000c001bc54                ATAPI::ATAPI()
                0x00000000c001bc82                ATAPI::readyForCommand()
                0x00000000c001bcd4                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001bf94                ATAPI::diskRemoved()
                0x00000000c001bfce                ATAPI::eject()
                0x00000000c001c016                ATAPI::diskInserted()
                0x00000000c001c022                ATAPI::detectMedia()
                0x00000000c001c0de                ATAPI::open(int, int, void*)
                0x00000000c001c1be                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001c238      0x7ff hw/diskphys/sata.32
                0x00000000c001c238                SATA::close(int, int, void*)
                0x00000000c001c25c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001c25e                SATA::open(int, int, void*)
                0x00000000c001c308                SATA::SATA()
                0x00000000c001c308                SATA::SATA()
                0x00000000c001c336                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c582                SATA::read(unsigned long long, int, void*)
                0x00000000c001c7d2                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001ca37        0x1 
 .text          0x00000000c001ca38      0x5c6 hw/diskphys/satapi.32
                0x00000000c001ca38                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ca3e                SATAPI::close(int, int, void*)
                0x00000000c001ca62                SATAPI::SATAPI()
                0x00000000c001ca62                SATAPI::SATAPI()
                0x00000000c001ca90                SATAPI::diskRemoved()
                0x00000000c001ca92                SATAPI::diskInserted()
                0x00000000c001caae                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001cd82                SATAPI::eject()
                0x00000000c001cdbe                SATAPI::detectMedia()
                0x00000000c001ce14                SATAPI::open(int, int, void*)
                0x00000000c001cf14                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001cffe      0x455 hw/intctrl/apic.32
                0x00000000c001cffe                IOAPIC::close(int, int, void*)
                0x00000000c001d004                apicGetBase()
                0x00000000c001d046                IOAPIC::IOAPIC()
                0x00000000c001d046                IOAPIC::IOAPIC()
                0x00000000c001d06e                apicOpen()
                0x00000000c001d1d4                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d206                IOAPIC::read(int)
                0x00000000c001d22e                IOAPIC::open(int, int, void*)
                0x00000000c001d322                IOAPIC::write(int, int)
                0x00000000c001d34e                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001d453        0x1 
 .text          0x00000000c001d454       0xf0 hw/timer/apictimer.32
                0x00000000c001d454                APICTimer::close(int, int, void*)
                0x00000000c001d45c                apicTimerHandler(regs*, void*)
                0x00000000c001d484                APICTimer::open(int, int, void*)
                0x00000000c001d4f4                APICTimer::write(int)
                0x00000000c001d51c                APICTimer::APICTimer()
                0x00000000c001d51c                APICTimer::APICTimer()
 .text          0x00000000c001d544      0x1aa hw/timer/pit.32
                0x00000000c001d544                PIT::write(int)
                0x00000000c001d5c8                pitHandler(regs*, void*)
                0x00000000c001d5ec                PIT::open(int, int, void*)
                0x00000000c001d63c                PIT::close(int, int, void*)
                0x00000000c001d66c                PIT::PIT()
                0x00000000c001d66c                PIT::PIT()
 *fill*         0x00000000c001d6ee        0x2 
 .text          0x00000000c001d6f0       0x83 arch/i386/avx.32
                0x00000000c001d6f0                avxDetect
                0x00000000c001d71a                avxSave
                0x00000000c001d72b                avxLoad
                0x00000000c001d73c                avxInit
                0x00000000c001d75e                avxClose
                0x00000000c001d75f                wouldSheSayYes
 *fill*         0x00000000c001d773        0xd 
 .text          0x00000000c001d780      0x2ec arch/i386/interrupt.32
                0x00000000c001d780                isr0
                0x00000000c001d790                isr1
                0x00000000c001d79a                isr2
                0x00000000c001d7a4                isr3
                0x00000000c001d7ae                isr4
                0x00000000c001d7b8                isr5
                0x00000000c001d7c2                isr6
                0x00000000c001d7cc                isr7
                0x00000000c001d7d6                isr8
                0x00000000c001d7de                isr9
                0x00000000c001d7e8                isr10
                0x00000000c001d7f0                isr11
                0x00000000c001d7f8                isr12
                0x00000000c001d800                isr13
                0x00000000c001d81a                isr14
                0x00000000c001d822                isr15
                0x00000000c001d82c                isr16
                0x00000000c001d836                isr17
                0x00000000c001d840                isr18
                0x00000000c001d84a                irq3
                0x00000000c001d854                irq4
                0x00000000c001d85e                irq5
                0x00000000c001d868                irq6
                0x00000000c001d872                irq7
                0x00000000c001d87c                irq8
                0x00000000c001d886                irq9
                0x00000000c001d890                irq10
                0x00000000c001d89a                irq11
                0x00000000c001d8a4                irq12
                0x00000000c001d8ae                irq13
                0x00000000c001d8b8                irq14
                0x00000000c001d8c2                irq15
                0x00000000c001d8cc                irq1
                0x00000000c001d8d3                irq2
                0x00000000c001d8da                isr96
                0x00000000c001d8e1                irq0
                0x00000000c001d8e6                int_common_stub
                0x00000000c001d918                syscall_common_stub
                0x00000000c001da1c                irq16
                0x00000000c001da26                irq17
                0x00000000c001da30                irq18
                0x00000000c001da3a                irq19
                0x00000000c001da44                irq20
                0x00000000c001da4e                irq21
                0x00000000c001da58                irq22
                0x00000000c001da62                irq23
 *fill*         0x00000000c001da6c        0x4 
 .text          0x00000000c001da70       0x10 arch/i386/rdrand.32
                0x00000000c001da70                i386GetRDRAND
 .text          0x00000000c001da80       0x39 arch/i386/sse.32
                0x00000000c001da80                absolutelyNoChanceInHell
                0x00000000c001da80                sseDetect
                0x00000000c001da98                sseSave
                0x00000000c001daa0                sseLoad
                0x00000000c001daa8                sseInit
                0x00000000c001dab8                sseClose
 *fill*         0x00000000c001dab9        0x7 
 .text          0x00000000c001dac0       0x49 arch/i386/x87.32
                0x00000000c001dac6                x87Detect
                0x00000000c001dae1                x87Save
                0x00000000c001dae8                x87Load
                0x00000000c001daef                x87Init
                0x00000000c001db08                x87Close
 *fill*         0x00000000c001db09        0x3 
 .text          0x00000000c001db0c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001db31        0x0 crtn.32
 *fill*         0x00000000c001db31        0x3 
 .text          0x00000000c001db34      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001db34                __divdi3
 *fill*         0x00000000c001dc7f        0x1 
 .text          0x00000000c001dc80      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001dc80                __moddi3
 *fill*         0x00000000c001ddfe        0x2 
 .text          0x00000000c001de00       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001de00                __udivdi3
 *fill*         0x00000000c001deff        0x1 
 .text          0x00000000c001df00      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001df00                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e020        0x0
 .iplt          0x00000000c001e020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e01a        0xf
 .init          0x00000000c001e01a        0x3 crti.32
                0x00000000c001e01a                _init
 .init          0x00000000c001e01d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e022        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e027        0x2 crtn.32

.fini           0x00000000c001e029        0xa
 .fini          0x00000000c001e029        0x3 crti.32
                0x00000000c001e029                _fini
 .fini          0x00000000c001e02c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e031        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e034       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e034       0x23 core/computer.32
                0x00000000c001e034                Computer::~Computer()
                0x00000000c001e034                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e058       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e058       0x2a core/computer.32
                0x00000000c001e058                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e082       0x21
 .text._Z10idleCommonv
                0x00000000c001e082       0x21 core/idle.32
                0x00000000c001e082                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e0a4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e0a4        0x2 core/unixfile.32
                0x00000000c001e0a4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e0a4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e0a6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e0a6       0x42 core/unixfile.32
                0x00000000c001e0a6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e0a6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e0e8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e0e8       0xd3 core/unixfile.32
                0x00000000c001e0e8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e1bc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e1bc        0x7 core/unixfile.32
                0x00000000c001e1bc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e1c4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e1c4       0xa1 core/unixfile.32
                0x00000000c001e1c4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e266        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e266        0x8 core/unixfile.32
                0x00000000c001e266                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e26e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e26e       0x1a hal/device.32
                0x00000000c001e26e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e26e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e288       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e288       0x2a hal/device.32
                0x00000000c001e288                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e2b2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e2b2       0xdc hal/device.32
                0x00000000c001e2b2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e38e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e38e       0x42 hal/device.32
                0x00000000c001e38e                LinkedList<Device>::LinkedList()
                0x00000000c001e38e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e3d0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e3d0       0x1c hal/timer.32
                0x00000000c001e3d0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e3ec        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e3ec        0x7 hal/timer.32
                0x00000000c001e3ec                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e3f4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e3f4       0xb8 hal/timer.32
                0x00000000c001e3f4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e4ac       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e4ac       0xda hal/timer.32
                0x00000000c001e4ac                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001e588       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001e588       0x23 hw/acpi.32
                0x00000000c001e588                ACPI::~ACPI()
                0x00000000c001e588                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001e5ac       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001e5ac       0x2a hw/acpi.32
                0x00000000c001e5ac                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001e5d8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001e5d8        0x2 hw/acpi.32
                0x00000000c001e5d8                LinkedList<Device>::~LinkedList()
                0x00000000c001e5d8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001e5dc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001e5dc       0x1c hw/acpi.32
                0x00000000c001e5dc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001e5f8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001e5f8        0x7 hw/acpi.32
                0x00000000c001e5f8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001e600       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001e600       0xb8 hw/acpi.32
                0x00000000c001e600                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001e6b8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001e6b8       0x23 hw/cpu.32
                0x00000000c001e6b8                CPU::~CPU()
                0x00000000c001e6b8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001e6dc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001e6dc       0x2a hw/cpu.32
                0x00000000c001e6dc                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e708        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e708        0x8 sys/kill.32
                0x00000000c001e708                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e710        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e710        0x2 thr/prcssthr.32
                0x00000000c001e710                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001e710                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e714       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e714       0x49 thr/prcssthr.32
                0x00000000c001e714                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001e714                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e760       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e760       0x42 thr/prcssthr.32
                0x00000000c001e760                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001e760                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001e7a2       0x23
 .text._ZN3PCID2Ev
                0x00000000c001e7a2       0x23 hw/bus/pci.32
                0x00000000c001e7a2                PCI::~PCI()
                0x00000000c001e7a2                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001e7c6       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001e7c6       0x2a hw/bus/pci.32
                0x00000000c001e7c6                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001e7f0       0x23
 .text._ZN3IDED2Ev
                0x00000000c001e7f0       0x23 hw/diskctrl/ide.32
                0x00000000c001e7f0                IDE::~IDE()
                0x00000000c001e7f0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001e814       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001e814       0x2a hw/diskctrl/ide.32
                0x00000000c001e814                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001e83e       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001e83e       0x23 hw/diskctrl/satabus.32
                0x00000000c001e83e                SATABus::~SATABus()
                0x00000000c001e83e                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001e862       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001e862       0x2a hw/diskctrl/satabus.32
                0x00000000c001e862                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001e88c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001e88c       0x23 hw/diskphys/ata.32
                0x00000000c001e88c                ATA::~ATA()
                0x00000000c001e88c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001e8b0       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001e8b0       0x2a hw/diskphys/ata.32
                0x00000000c001e8b0                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001e8da       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001e8da       0x23 hw/diskphys/atapi.32
                0x00000000c001e8da                ATAPI::~ATAPI()
                0x00000000c001e8da                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001e8fe       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001e8fe       0x2a hw/diskphys/atapi.32
                0x00000000c001e8fe                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001e928       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001e928       0x23 hw/diskphys/sata.32
                0x00000000c001e928                SATA::~SATA()
                0x00000000c001e928                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001e94c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001e94c       0x2a hw/diskphys/sata.32
                0x00000000c001e94c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001e976       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001e976       0x23 hw/diskphys/satapi.32
                0x00000000c001e976                SATAPI::~SATAPI()
                0x00000000c001e976                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001e99a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001e99a       0x2a hw/diskphys/satapi.32
                0x00000000c001e99a                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001e9c4       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001e9c4       0x23 hw/intctrl/apic.32
                0x00000000c001e9c4                IOAPIC::~IOAPIC()
                0x00000000c001e9c4                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001e9e8       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001e9e8       0x2a hw/intctrl/apic.32
                0x00000000c001e9e8                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ea14       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ea14       0x23 hw/timer/apictimer.32
                0x00000000c001ea14                APICTimer::~APICTimer()
                0x00000000c001ea14                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ea38       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ea38       0x2a hw/timer/apictimer.32
                0x00000000c001ea38                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ea64       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ea64       0x23 hw/timer/pit.32
                0x00000000c001ea64                PIT::~PIT()
                0x00000000c001ea64                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ea88       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ea88       0x2a hw/timer/pit.32
                0x00000000c001ea88                PIT::~PIT()

.rodata         0x00000000c001eab2     0x2bb6
                0x00000000c001eab2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001eab2        0x2 
 .ctors         0x00000000c001eab4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001eab8        0x4 core/unixfile.32
 .ctors         0x00000000c001eabc        0x4 thr/prcssthr.32
 .ctors         0x00000000c001eac0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001eac4                end_ctors = .
                0x00000000c001eac4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001eac4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001eac8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001eac8                __DTOR_END__
                0x00000000c001eacc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001eacc       0x14 
 .rodata        0x00000000c001eae0      0x101 acpica/utclib.32
                0x00000000c001eae0                AcpiGbl_Ctypes
 *fill*         0x00000000c001ebe1        0x3 
 .rodata        0x00000000c001ebe4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001ebfc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001ec46       0x1a 
 .rodata        0x00000000c001ec60       0xed fs/fat/ff.32
 *fill*         0x00000000c001ed4d       0x13 
 .rodata        0x00000000c001ed60      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f160       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f1cf      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001f2e4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001f34c       0x2c core/computer.32
                0x00000000c001f34c                vtable for Computer
 .rodata.str1.4
                0x00000000c001f378       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001f3a8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001f3b4       0x17 core/main.32
 *fill*         0x00000000c001f3cb        0x1 
 .rodata.str1.4
                0x00000000c001f3cc       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001f471       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001f4c9       0x39 core/pipe.32
 *fill*         0x00000000c001f502        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001f504       0x1c core/pipe.32
                0x00000000c001f504                vtable for Pipe
 .rodata.str1.1
                0x00000000c001f520       0x2b core/terminal.32
 *fill*         0x00000000c001f54b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001f54c       0x1c core/terminal.32
                0x00000000c001f54c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001f568       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001f58a       0x15 core/unixfile.32
 *fill*         0x00000000c001f59f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001f5a0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001f5eb        0x8 core/unixfile.32
 *fill*         0x00000000c001f5f3        0x1 
 .rodata.str1.4
                0x00000000c001f5f4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001f614       0x1c core/unixfile.32
                0x00000000c001f614                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001f630       0x1c core/unixfile.32
                0x00000000c001f630                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001f64c      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001f7b3      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001f8ba       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001f8ed       0x11 dbg/kconsole.32
 *fill*         0x00000000c001f8ed        0x3 
 .rodata        0x00000000c001f8f0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001fa40       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001fa40       0x68 fs/vfs.32
                0x00000000c001fa40                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001faa8       0x1c fs/vfs.32
                0x00000000c001faa8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001fac4       0x1c fs/vfs.32
                0x00000000c001fac4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001fae0       0x2c hal/bus.32
                0x00000000c001fae0                vtable for Bus
 .rodata.str1.1
                0x00000000c001fb0c       0x1e hal/clock.32
 *fill*         0x00000000c001fb2a        0x2 
 .rodata._ZTV5Clock
                0x00000000c001fb2c       0x3c hal/clock.32
                0x00000000c001fb2c                vtable for Clock
 *fill*         0x00000000c001fb68       0x18 
 .rodata        0x00000000c001fb80       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001fbb0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001fc08       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001fc08       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001fc08       0x2c hal/device.32
                0x00000000c001fc08                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001fc34       0x2c hal/device.32
                0x00000000c001fc34                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001fc60       0x2c hal/diskctrl.32
                0x00000000c001fc60                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001fc8c       0x38 hal/diskphys.32
                0x00000000c001fc8c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001fcc4       0x3e hal/intctrl.32
 *fill*         0x00000000c001fd02        0x2 
 .rodata.str1.4
                0x00000000c001fd04       0x5d hal/intctrl.32
 .rodata        0x00000000c001fd61       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001fdb4       0x34 hal/keybrd.32
                0x00000000c001fdb4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001fde8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001fe2c       0x2c hal/logidisk.32
                0x00000000c001fe2c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001fe58       0x2c hal/mouse.32
                0x00000000c001fe58                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c001fe84       0x34 hal/nic.32
                0x00000000c001fe84                vtable for NIC
 .rodata.str1.1
                0x00000000c001feb8        0xb hal/partition.32
 *fill*         0x00000000c001fec3        0x1 
 .rodata._ZTV6Serial
                0x00000000c001fec4       0x44 hal/serial.32
                0x00000000c001fec4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ff08       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ff08        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ff08       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ff08       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001ff08       0x30 hal/timer.32
                0x00000000c001ff08                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001ff38       0x10 hal/vcache.32
                0x00000000c001ff38                vtable for VCache
 .rodata.str1.1
                0x00000000c001ff48       0x93 hal/video.32
 *fill*         0x00000000c001ffdb        0x1 
 .rodata._ZTV5Video
                0x00000000c001ffdc       0x4c hal/video.32
                0x00000000c001ffdc                vtable for Video
 .rodata.str1.4
                0x00000000c0020028       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c00200c3      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00201ff       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00201ff        0x8 hw/acpi.32
 *fill*         0x00000000c00201ff        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020200       0x2c hw/acpi.32
                0x00000000c0020200                vtable for ACPI
 .rodata.str1.1
                0x00000000c002022c      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020399        0x3 
 .rodata._ZTV3CPU
                0x00000000c002039c       0x2c hw/cpu.32
                0x00000000c002039c                vtable for CPU
 .rodata.str1.1
                0x00000000c00203c8       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020404       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020495       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c002055e       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00205a6       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00205d1       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020647       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002068c        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020696       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00206b7       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c002074d       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00207a1       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00207cd      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0020999       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00209f0      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020afc       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020afc       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020afc       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020afc        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0020afc       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0020b9c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0020bcc      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c0020d5c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0020dcf       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0020de4       0x3c arch/i386/rtc.32
                0x00000000c0020de4                vtable for RTC
 .rodata.str1.1
                0x00000000c0020e20       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0020e61        0x3 
 .rodata._ZTV3FAT
                0x00000000c0020e64       0x68 fs/fat/vfslink.32
                0x00000000c0020e64                vtable for FAT
 .rodata.str1.1
                0x00000000c0020ecc       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0020ecc      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0021004       0x68 fs/iso9660/vfslink.32
                0x00000000c0021004                vtable for ISO9660
 .rodata.str1.1
                0x00000000c002106c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00210b0       0x34 hal/sound/sndcard.32
                0x00000000c00210b0                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00210e4       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0021123       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002115b       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00211fc       0x2c hw/bus/pci.32
                0x00000000c00211fc                vtable for PCI
 .rodata.str1.1
                0x00000000c0021228       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c00212af        0x1 
 .rodata._ZTV3IDE
                0x00000000c00212b0       0x2c hw/diskctrl/ide.32
                0x00000000c00212b0                vtable for IDE
 .rodata.str1.4
                0x00000000c00212dc       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0021300       0x2c hw/diskctrl/satabus.32
                0x00000000c0021300                vtable for SATABus
 .rodata.str1.1
                0x00000000c002132c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c002133e        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021340       0x38 hw/diskphys/ata.32
                0x00000000c0021340                vtable for ATA
 .rodata.str1.1
                0x00000000c0021378        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0021385        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0021388       0x38 hw/diskphys/atapi.32
                0x00000000c0021388                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00213c0       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c002143c       0x38 hw/diskphys/sata.32
                0x00000000c002143c                vtable for SATA
 .rodata.str1.1
                0x00000000c0021474       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c002155e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021560       0x38 hw/diskphys/satapi.32
                0x00000000c0021560                vtable for SATAPI
 .rodata        0x00000000c0021598        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00215a0       0x2c hw/intctrl/apic.32
                0x00000000c00215a0                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00215cc       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00215e7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00215e8       0x30 hw/timer/apictimer.32
                0x00000000c00215e8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021618       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021635        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021638       0x30 hw/timer/pit.32
                0x00000000c0021638                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021668      0x4dd
 *(.data)
 .data          0x00000000c0021668        0x0 crti.32
 .data          0x00000000c0021668        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021668                __dso_handle
 .data          0x00000000c002166c        0x0 acpica/utclib.32
 .data          0x00000000c002166c        0x0 core/malloc.32
 .data          0x00000000c002166c        0x0 libk/ctype.32
 .data          0x00000000c002166c        0x0 libk/string.32
 .data          0x00000000c002166c        0x0 fs/fat/diskio.32
 .data          0x00000000c002166c        0x0 fs/fat/ff.32
 .data          0x00000000c002166c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c002166c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c002166c        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c002166c        0x0 core/computer.32
 .data          0x00000000c002166c        0x0 core/gdt.32
 .data          0x00000000c002166c        0x0 core/idle.32
 .data          0x00000000c002166c        0x0 core/idt.32
 .data          0x00000000c002166c        0x4 core/kheap.32
 .data          0x00000000c0021670        0x0 core/main.32
 .data          0x00000000c0021670        0x4 core/physmgr.32
                0x00000000c0021670                Phys::bitmap
 .data          0x00000000c0021674        0x0 core/pipe.32
 *fill*         0x00000000c0021674        0xc 
 .data          0x00000000c0021680       0x60 core/terminal.32
                0x00000000c0021680                VgaText::hiddenOut
                0x00000000c00216a0                ansiToVGAMappings
 .data          0x00000000c00216e0        0x0 core/tss.32
 .data          0x00000000c00216e0        0x4 core/unixfile.32
                0x00000000c00216e0                UnixFile::nextFd
 .data          0x00000000c00216e4       0x15 core/virtmgr.32
                0x00000000c00216e4                Virt::pageAllocPtr
                0x00000000c00216e8                Virt::bitmap
                0x00000000c00216ec                Virt::swapfileSectorsPerPage
                0x00000000c00216f0                Virt::swapfileLength
                0x00000000c00216f4                Virt::swapfileSector
                0x00000000c00216f8                Virt::swapfileDrive
 *fill*         0x00000000c00216f9        0x3 
 .data          0x00000000c00216fc        0x4 coreobjs/c++.32
                0x00000000c00216fc                __stack_chk_guard
 .data          0x00000000c0021700        0x0 dbg/kconsole.32
 .data          0x00000000c0021700        0x0 fs/vfs.32
 .data          0x00000000c0021700        0x0 hal/bus.32
 .data          0x00000000c0021700        0x0 hal/buzzer.32
 .data          0x00000000c0021700        0x0 hal/clock.32
 .data          0x00000000c0021700        0x0 hal/device.32
 .data          0x00000000c0021700        0x0 hal/diskctrl.32
 .data          0x00000000c0021700        0x0 hal/diskphys.32
 .data          0x00000000c0021700        0x0 hal/fpu.32
 .data          0x00000000c0021700        0x0 hal/intctrl.32
 .data          0x00000000c0021700        0x0 hal/keybrd.32
 .data          0x00000000c0021700        0x0 hal/logidisk.32
 .data          0x00000000c0021700        0x0 hal/mouse.32
 .data          0x00000000c0021700        0x0 hal/nic.32
 .data          0x00000000c0021700        0x0 hal/partition.32
 .data          0x00000000c0021700        0x0 hal/serial.32
 .data          0x00000000c0021700        0x0 hal/timer.32
 .data          0x00000000c0021700        0x0 hal/vcache.32
 .data          0x00000000c0021700        0x0 hal/video.32
 .data          0x00000000c0021700       0x10 hw/acpi.32
                0x00000000c0021700                legacyIRQRemaps
 .data          0x00000000c0021710        0x4 hw/cpu.32
                0x00000000c0021710                lastCode
 *fill*         0x00000000c0021714        0xc 
 .data          0x00000000c0021720      0x142 krnl/bootmsg.32
                0x00000000c0021720                KiSplashScreen
 *fill*         0x00000000c0021862       0x1e 
 .data          0x00000000c0021880       0x4d krnl/env.32
                0x00000000c0021880                defaultSysEnv
 .data          0x00000000c00218cd        0x0 krnl/inlines.32
 .data          0x00000000c00218cd        0x0 krnl/panic.32
 .data          0x00000000c00218cd        0x0 krnl/powctrl.32
 .data          0x00000000c00218cd        0x0 krnl/random.32
 .data          0x00000000c00218cd        0x0 krnl/resolve.32
 *fill*         0x00000000c00218cd       0x13 
 .data          0x00000000c00218e0       0x4c krnl/signal.32
                0x00000000c00218e0                KiDefaultSignalHandlers
 *fill*         0x00000000c002192c       0x14 
 .data          0x00000000c0021940       0xf0 krnl/syscalls.32
                0x00000000c0021940                systemCallHandlers
 .data          0x00000000c0021a30        0x0 net/ethernet.32
 *fill*         0x00000000c0021a30       0x10 
 .data          0x00000000c0021a40      0x100 reg/cm.32
                0x00000000c0021a40                CmComponents
 .data          0x00000000c0021b40        0x0 reg/registry.32
 .data          0x00000000c0021b40        0x0 sys/eject.32
 .data          0x00000000c0021b40        0x0 sys/exit.32
 .data          0x00000000c0021b40        0x0 sys/getcwd.32
 .data          0x00000000c0021b40        0x0 sys/getpid.32
 .data          0x00000000c0021b40        0x0 sys/getramdata.32
 .data          0x00000000c0021b40        0x0 sys/getvgaptr.32
 .data          0x00000000c0021b40        0x0 sys/kill.32
 .data          0x00000000c0021b40        0x0 sys/loaddll.32
 .data          0x00000000c0021b40        0x0 sys/read.32
 .data          0x00000000c0021b40        0x0 sys/registersignal.32
 .data          0x00000000c0021b40        0x0 sys/registry.32
 .data          0x00000000c0021b40        0x0 sys/sbrk.32
 .data          0x00000000c0021b40        0x0 sys/setcwd.32
 .data          0x00000000c0021b40        0x0 sys/settime.32
 .data          0x00000000c0021b40        0x0 sys/timezone.32
 .data          0x00000000c0021b40        0x0 sys/write.32
 .data          0x00000000c0021b40        0x0 sys/wsbe.32
 .data          0x00000000c0021b40        0x0 sys/yield.32
 .data          0x00000000c0021b40        0x0 thr/elf.32
 .data          0x00000000c0021b40        0x4 thr/prcssthr.32
                0x00000000c0021b40                Thr::nextPID
 .data          0x00000000c0021b44        0x0 vm86/vm8086.32
 .data          0x00000000c0021b44        0x0 arch/i386/hal.32
 .data          0x00000000c0021b44        0x0 arch/i386/pic.32
 .data          0x00000000c0021b44        0x0 arch/i386/rtc.32
 .data          0x00000000c0021b44        0x0 arch/i386/vga.32
 .data          0x00000000c0021b44        0x0 fs/fat/vfslink.32
 .data          0x00000000c0021b44        0x0 fs/iso9660/helper.32
 .data          0x00000000c0021b44        0x1 fs/iso9660/vfslink.32
                0x00000000c0021b44                recentDriveletter
 .data          0x00000000c0021b45        0x0 hal/sound/sndcard.32
 .data          0x00000000c0021b45        0x0 hal/sound/sndport.32
 .data          0x00000000c0021b45        0x0 hw/bus/isa.32
 .data          0x00000000c0021b45        0x0 hw/bus/pci.32
 .data          0x00000000c0021b45        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0021b45        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0021b45        0x0 hw/diskphys/ata.32
 .data          0x00000000c0021b45        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0021b45        0x0 hw/diskphys/sata.32
 .data          0x00000000c0021b45        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0021b45        0x0 hw/intctrl/apic.32
 .data          0x00000000c0021b45        0x0 hw/timer/apictimer.32
 .data          0x00000000c0021b45        0x0 hw/timer/pit.32
 .data          0x00000000c0021b45        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0021b45        0x0 crtn.32
 .data          0x00000000c0021b45        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0021b45        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0021b45        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0021b45        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0021b48        0x0
 .got           0x00000000c0021b48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0021b48        0x0
 .got.plt       0x00000000c0021b48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0021b48        0x0
 .igot.plt      0x00000000c0021b48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0021b48        0x0
 .tm_clone_table
                0x00000000c0021b48        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0021b48        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0021b45      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0021b45        0x3 
 .eh_frame      0x00000000c0021b48        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0021b48        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0021b48       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0021ba0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0021be0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0021c4c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0022000       0x7d
 *(userkernel)
 userkernel     0x00000000c0022000       0x52 krnl/signal.32
                0x00000000c0022000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002202c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0022052       0x2b krnl/syscalls.32
                0x00000000c0022052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0023000        0x1
 *(align_previous)
 align_previous
                0x00000000c0023000        0x1 krnl/signal.32
                0x00000000c0023000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0023004        0x0
 .rel.got       0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0023001     0x4ba7
                0x00000000c0023001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0023001       0x1f 
 COMMON         0x00000000c0023020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0023020                dcache
                0x00000000c0023060                cdDriveLetter
                0x00000000c0023080                icache
 *(.bss)
 .bss           0x00000000c00230c0        0x0 crti.32
 .bss           0x00000000c00230c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00230e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00230e4       0x1c 
 .bss           0x00000000c0023100      0x378 core/malloc.32
 .bss           0x00000000c0023478        0x0 libk/ctype.32
 .bss           0x00000000c0023478        0x0 libk/string.32
 .bss           0x00000000c0023478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0023478        0x8 
 .bss           0x00000000c0023480       0x88 fs/fat/ff.32
 .bss           0x00000000c0023508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0023508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0023508       0x18 
 .bss           0x00000000c0023520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0023eb8        0x6 core/computer.32
                0x00000000c0023eb8                Krnl::computer
                0x00000000c0023ebc                KeIsPreemptionOn
                0x00000000c0023ebd                KeIsSchedulingOn
 *fill*         0x00000000c0023ebe        0x2 
 .bss           0x00000000c0023ec0        0x6 core/gdt.32
                0x00000000c0023ec0                gdtDescr
 .bss           0x00000000c0023ec6        0x0 core/idle.32
 *fill*         0x00000000c0023ec6        0x2 
 .bss           0x00000000c0023ec8        0x6 core/idt.32
                0x00000000c0023ec8                idtDescr
 .bss           0x00000000c0023ece        0x0 core/kheap.32
 *fill*         0x00000000c0023ece        0x2 
 .bss           0x00000000c0023ed0        0x4 core/main.32
                0x00000000c0023ed0                sysBootSettings
 .bss           0x00000000c0023ed4       0x29 core/physmgr.32
                0x00000000c0023ed4                Phys::forbidEvictions
                0x00000000c0023ed8                Phys::currentPagePointer
                0x00000000c0023edc                Phys::highestMem
                0x00000000c0023ee0                Phys::oldPercent
                0x00000000c0023ee4                Phys::usedPages
                0x00000000c0023ee8                Phys::usablePages
                0x00000000c0023eec                Phys::dmaUsage
 .bss           0x00000000c0023efd        0x0 core/pipe.32
 *fill*         0x00000000c0023efd        0x3 
 .bss           0x00000000c0023f00        0x9 core/terminal.32
                0x00000000c0023f00                terminalCycle
                0x00000000c0023f04                activeTerminal
                0x00000000c0023f08                VgaText::graphicMode
 *fill*         0x00000000c0023f09        0x1 
 .bss           0x00000000c0023f0a        0x2 core/tss.32
                0x00000000c0023f0a                doubleFaultSelector
 *fill*         0x00000000c0023f0c       0x14 
 .bss           0x00000000c0023f20       0x84 core/unixfile.32
                0x00000000c0023f20                sfileLpt
                0x00000000c0023f60                sfileCom
                0x00000000c0023f84                sfileNul
                0x00000000c0023f88                sfilePnt
                0x00000000c0023f8c                sfileAux
                0x00000000c0023f90                sfileCon
                0x00000000c0023f94                initialFilesAdded
                0x00000000c0023f98                unixFileLinkedList
 .bss           0x00000000c0023fa4       0x10 core/virtmgr.32
                0x00000000c0023fa4                twswaps
                0x00000000c0023fa8                swapBalance
                0x00000000c0023fac                Virt::swapfileBitmap
                0x00000000c0023fb0                firstVAS
 .bss           0x00000000c0023fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0023fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0023fb4        0x4 fs/vfs.32
                0x00000000c0023fb4                installedFilesystems
 .bss           0x00000000c0023fb8        0x0 hal/bus.32
 .bss           0x00000000c0023fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0023fb8        0x8 hal/clock.32
                0x00000000c0023fb8                User::dstOn
                0x00000000c0023fb9                User::timezoneHalfHourOffset
                0x00000000c0023fbc                User::timezoneHourOffset
 .bss           0x00000000c0023fc0        0x0 hal/device.32
 .bss           0x00000000c0023fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0023fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0023fc0        0x0 hal/fpu.32
 .bss           0x00000000c0023fc0     0x2000 hal/intctrl.32
                0x00000000c0023fc0                INT_contexts
                0x00000000c0024fc0                INT_handlers
 .bss           0x00000000c0025fc0      0x429 hal/keybrd.32
                0x00000000c0025fc0                keyboardWaitingTaskList
                0x00000000c0025fc4                keyboardSetupYet
                0x00000000c0025fc8                guiKeyboardHandler
                0x00000000c0025fe0                keystates
 *fill*         0x00000000c00263e9       0x17 
 .bss           0x00000000c0026400       0x88 hal/logidisk.32
                0x00000000c0026400                diskAssignments
                0x00000000c0026420                disks
 .bss           0x00000000c0026488        0x4 hal/mouse.32
                0x00000000c0026488                guiMouseHandler
 .bss           0x00000000c002648c        0x0 hal/nic.32
 .bss           0x00000000c002648c        0x0 hal/partition.32
 .bss           0x00000000c002648c        0x0 hal/serial.32
 .bss           0x00000000c002648c        0x4 hal/timer.32
                0x00000000c002648c                milliTenthsSinceBoot
 .bss           0x00000000c0026490        0x0 hal/vcache.32
 .bss           0x00000000c0026490        0x4 hal/video.32
                0x00000000c0026490                screen
 *fill*         0x00000000c0026494        0xc 
 .bss           0x00000000c00264a0      0x480 hw/acpi.32
                0x00000000c00264a0                systemSleepFunction
                0x00000000c00264a4                systemResetFunction
                0x00000000c00264a8                systemShutdownFunction
                0x00000000c00264ac                nextACPITable
                0x00000000c00264c0                acpiTables
                0x00000000c00266c0                usingXSDT
                0x00000000c00266c4                MADTpointer
                0x00000000c00266c8                RSDTpointer
                0x00000000c00266cc                RSDPpointer
                0x00000000c00266d0                nextAPICNMI
                0x00000000c00266e0                apicNMIInfo
                0x00000000c0026760                legacyIRQFlags
                0x00000000c0026780                ioapicDiscoveryNumber
                0x00000000c00267a0                ioapicFoundInMADT
                0x00000000c00267c0                ioapicAddresses
                0x00000000c0026840                ioapicGSIBase
                0x00000000c00268c0                processorDiscoveryNumber
                0x00000000c00268e0                matchingAPICID
                0x00000000c0026900                processorID
 .bss           0x00000000c0026920       0x10 hw/cpu.32
                0x00000000c0026920                lastD
                0x00000000c0026924                lastC
                0x00000000c0026928                lastB
                0x00000000c002692c                lastA
 .bss           0x00000000c0026930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0026930        0x8 krnl/env.32
                0x00000000c0026930                Krnl::userEnv
                0x00000000c0026934                Krnl::systemEnv
 .bss           0x00000000c0026938        0x0 krnl/inlines.32
 .bss           0x00000000c0026938        0x1 krnl/panic.32
                0x00000000c0026938                KeIsKernelInPanic
 *fill*         0x00000000c0026939        0x7 
 .bss           0x00000000c0026940       0x48 krnl/powctrl.32
                0x00000000c0026940                Krnl::powCtrlOnBattery
                0x00000000c0026960                Krnl::currentPowerSettings
                0x00000000c0026984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0026988        0x8 krnl/random.32
                0x00000000c0026988                kiRandSeed
 .bss           0x00000000c0026990        0x0 krnl/resolve.32
 .bss           0x00000000c0026990        0x0 krnl/signal.32
 .bss           0x00000000c0026990        0x0 krnl/syscalls.32
 .bss           0x00000000c0026990        0x0 net/ethernet.32
 .bss           0x00000000c0026990        0x4 reg/cm.32
 .bss           0x00000000c0026994        0x0 reg/registry.32
 .bss           0x00000000c0026994        0x0 sys/eject.32
 .bss           0x00000000c0026994        0x0 sys/exit.32
 .bss           0x00000000c0026994        0x0 sys/getcwd.32
 .bss           0x00000000c0026994        0x0 sys/getpid.32
 .bss           0x00000000c0026994        0x0 sys/getramdata.32
 .bss           0x00000000c0026994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0026994        0x0 sys/kill.32
 .bss           0x00000000c0026994        0x0 sys/loaddll.32
 .bss           0x00000000c0026994        0x0 sys/read.32
 .bss           0x00000000c0026994        0x0 sys/registersignal.32
 .bss           0x00000000c0026994        0x0 sys/registry.32
 .bss           0x00000000c0026994        0x0 sys/sbrk.32
 .bss           0x00000000c0026994        0x0 sys/setcwd.32
 .bss           0x00000000c0026994        0x0 sys/settime.32
 .bss           0x00000000c0026994        0x0 sys/timezone.32
 .bss           0x00000000c0026994        0x0 sys/write.32
 .bss           0x00000000c0026994        0x0 sys/wsbe.32
 .bss           0x00000000c0026994        0x0 sys/yield.32
 *fill*         0x00000000c0026994        0xc 
 .bss           0x00000000c00269a0      0x7a4 thr/elf.32
                0x00000000c00269a0                Thr::driverLookupNext
                0x00000000c00269c0                Thr::driverLookupLen
                0x00000000c0026bc0                Thr::driverLookupAddr
                0x00000000c0026dc0                Thr::driverNameLookup
                0x00000000c0026fc0                Thr::kernelSymbols
                0x00000000c0027040                Thr::kernelStringTable
                0x00000000c00270c0                Thr::kernelSymbolTable
                0x00000000c0027140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0027144        0x4 
 .bss           0x00000000c0027148       0x68 thr/prcssthr.32
                0x00000000c0027148                cleanerThread
                0x00000000c002714c                weNeedTheCleanerToNotBlock
                0x00000000c0027150                retValLockStuff
                0x00000000c0027154                retValSchedLock
                0x00000000c0027158                lockStuffLock
                0x00000000c002715c                schedulerLock
                0x00000000c0027160                taskSwitchesPostponedFlag
                0x00000000c0027164                postponeTaskSwitchesCounter
                0x00000000c0027168                irqDisableCounter
                0x00000000c002716c                terminatedTaskList
                0x00000000c0027178                sleepingTaskList
                0x00000000c0027184                taskList
                0x00000000c0027190                kernelProcess
 *fill*         0x00000000c00271b0       0x10 
 .bss           0x00000000c00271c0       0x40 vm86/vm8086.32
                0x00000000c00271c0                Vm::vmRetV
                0x00000000c00271c4                Vm::vmDone
                0x00000000c00271c5                Vm::vmReady
                0x00000000c00271c8                Vm::vm86Thread
                0x00000000c00271cc                Vm::vmToHostCommsPtr
                0x00000000c00271e0                Vm::vmToHostComms
 .bss           0x00000000c0027200       0x14 arch/i386/hal.32
                0x00000000c0027200                apic
                0x00000000c0027204                fpuOwner
                0x00000000c0027208                coproLoadFunc
                0x00000000c002720c                coproSaveFunc
                0x00000000c0027210                gpFaultIntercept
 .bss           0x00000000c0027214        0x0 arch/i386/pic.32
 .bss           0x00000000c0027214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0027216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0027216        0xa 
 .bss           0x00000000c0027220       0xf0 fs/fat/vfslink.32
                0x00000000c0027220                FAT::fats
                0x00000000c0027240                FAT::vfsToFatRemaps
                0x00000000c00272c0                fatToVFSRemaps
 .bss           0x00000000c0027310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0027310       0x10 
 .bss           0x00000000c0027320      0x820 fs/iso9660/vfslink.32
                0x00000000c0027320                iso9660Owner
                0x00000000c0027324                recentSector
                0x00000000c0027340                recentBuffer
 .bss           0x00000000c0027b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0027b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0027b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0027b40        0xd hw/bus/pci.32
                0x00000000c0027b40                thePCI
 .bss           0x00000000c0027b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0027b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0027b4d        0x3 
 .bss           0x00000000c0027b50        0x8 hw/diskphys/ata.32
                0x00000000c0027b50                ataSectorsWritten
                0x00000000c0027b54                ataSectorsRead
 .bss           0x00000000c0027b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0027b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0027b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0027b58        0x8 
 .bss           0x00000000c0027b60       0x41 hw/intctrl/apic.32
                0x00000000c0027b60                noOfIOAPICs
                0x00000000c0027b80                ioapics
                0x00000000c0027ba0                IOAPICsSetupYet
 .bss           0x00000000c0027ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0027ba1        0x3 
 .bss           0x00000000c0027ba4        0x4 hw/timer/pit.32
                0x00000000c0027ba4                pitFreq
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0027ba8        0x0 crtn.32
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0027ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002c74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
