Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/rand.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/rand.32
LOAD net/ethernet.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2322a
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x440 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                getRDRAND
                0x00000000c0000229                detectCPUID
                0x00000000c000023f                goToVM86
                0x00000000c000026f                goToUsermode
                0x00000000c0000299                switchToThreadASMFirstTime
                0x00000000c00002a7                switchToThreadASM
                0x00000000c0000337                asmQuickAcquireLock
                0x00000000c0000355                asmQuickReleaseLock
                0x00000000c0000361                asmAcquireLock
                0x00000000c0000382                asmReleaseLock
                0x00000000c0000395                loadGDT
                0x00000000c00003b5                isr0
                0x00000000c00003c5                isr1
                0x00000000c00003cf                isr2
                0x00000000c00003d9                isr3
                0x00000000c00003e3                isr4
                0x00000000c00003ed                isr5
                0x00000000c00003f7                isr6
                0x00000000c0000401                isr7
                0x00000000c000040b                isr8
                0x00000000c0000413                isr9
                0x00000000c000041d                isr10
                0x00000000c0000425                isr11
                0x00000000c000042d                isr12
                0x00000000c0000435                isr13
                0x00000000c000043d                isr14
                0x00000000c0000445                isr15
                0x00000000c000044f                isr16
                0x00000000c0000459                isr17
                0x00000000c0000463                isr18
                0x00000000c000046d                irq3
                0x00000000c0000477                irq4
                0x00000000c0000481                irq5
                0x00000000c000048b                irq6
                0x00000000c0000495                irq7
                0x00000000c000049f                irq8
                0x00000000c00004a9                irq9
                0x00000000c00004b3                irq10
                0x00000000c00004bd                irq11
                0x00000000c00004c7                irq12
                0x00000000c00004d1                irq13
                0x00000000c00004db                irq14
                0x00000000c00004e5                irq15
                0x00000000c00004ef                irq1
                0x00000000c00004f6                irq2
                0x00000000c00004fd                isr96
                0x00000000c0000504                irq0
                0x00000000c0000509                int_common_stub
                0x00000000c0000509                syscall_common_stub
                0x00000000c000053b                irq16
                0x00000000c0000545                irq17
                0x00000000c000054f                irq18
                0x00000000c0000559                irq19
                0x00000000c0000563                irq20
                0x00000000c000056d                irq21
                0x00000000c0000577                irq22
                0x00000000c0000581                irq23
                0x00000000c000058b                memcpy
 .text          0x00000000c0000590      0x5dd acpica/utclib.32
                0x00000000c0000590                memcmp
                0x00000000c00005cc                memmove
                0x00000000c0000694                memset
                0x00000000c00006b0                strlen
                0x00000000c00006c8                strpbrk
                0x00000000c0000704                strtok
                0x00000000c0000750                strcpy
                0x00000000c0000774                strncpy
                0x00000000c00007dc                strcmp
                0x00000000c000081c                strchr
                0x00000000c0000840                strncmp
                0x00000000c0000890                strcat
                0x00000000c00008c0                strncat
                0x00000000c00008fc                strstr
                0x00000000c0000944                toupper
                0x00000000c0000958                tolower
                0x00000000c000096c                simple_strtoul
 .text          0x00000000c0000b6d      0xfad core/malloc.32
                0x00000000c0000cd8                dlfree
                0x00000000c0001033                dlmalloc
                0x00000000c0001570                dlrealloc
                0x00000000c0001713                dlmemalign
                0x00000000c0001836                dlcalloc
                0x00000000c00018d0                dlcfree
                0x00000000c00018d5                dlindependent_calloc
                0x00000000c00018fa                dlindependent_comalloc
                0x00000000c0001911                dlvalloc
                0x00000000c000193c                dlpvalloc
                0x00000000c0001972                dlmalloc_trim
                0x00000000c000197f                dlmalloc_usable_size
                0x00000000c00019b0                dlmallinfo
                0x00000000c0001a7f                dlmalloc_stats
                0x00000000c0001a90                dlmallopt
 .text          0x00000000c0001b1a        0x0 libk/string.32
 .text          0x00000000c0001b1a       0x51 fs/fat/diskio.32
                0x00000000c0001b1a                disk_status
                0x00000000c0001b1d                disk_initialize
                0x00000000c0001b20                disk_read
                0x00000000c0001b36                disk_write
                0x00000000c0001b4c                disk_ioctl
 .text          0x00000000c0001b6b     0x6a69 fs/fat/ff.32
                0x00000000c0004e39                f_mount
                0x00000000c0004e9b                f_open
                0x00000000c00052d7                f_read
                0x00000000c0005557                f_write
                0x00000000c0005811                f_sync
                0x00000000c00059ed                f_close
                0x00000000c0005a1c                f_lseek
                0x00000000c0005ed3                f_opendir
                0x00000000c0005fd5                f_closedir
                0x00000000c0005ff7                f_readdir
                0x00000000c0006092                f_stat
                0x00000000c0006121                f_getfree
                0x00000000c00062ec                f_truncate
                0x00000000c00063e4                f_unlink
                0x00000000c0006567                f_mkdir
                0x00000000c0006793                f_rename
                0x00000000c0006a86                f_chmod
                0x00000000c0006b64                f_utime
                0x00000000c0006c42                f_getlabel
                0x00000000c0006e30                f_setlabel
                0x00000000c000709d                f_expand
                0x00000000c00072d3                f_forward
                0x00000000c00074b1                f_mkfs
 .text          0x00000000c00085d4       0x2f fs/fat/ffsystem.32
                0x00000000c00085d4                ff_memalloc
                0x00000000c00085ec                ff_memfree
 *fill*         0x00000000c0008603        0x1 
 .text          0x00000000c0008604      0x274 fs/fat/ffunicode.32
                0x00000000c0008604                ff_uni2oem
                0x00000000c000869c                ff_oem2uni
                0x00000000c0008710                ff_wtoupper
 .text          0x00000000c0008878       0xa7 compat/inlines.32
                0x00000000c0008878                CPU::current()
                0x00000000c0008884                operator new(unsigned long)
                0x00000000c0008889                operator delete(void*)
                0x00000000c000888e                disableIRQs()
                0x00000000c0008896                enableIRQs()
                0x00000000c00088a5                lockScheduler()
                0x00000000c00088ad                unlockScheduler()
                0x00000000c00088bc                lockStuff()
                0x00000000c00088ca                unlockStuff()
                0x00000000c0008904                Virt::getAKernelVAS()
                0x00000000c000890a                __not_memcpy
 *fill*         0x00000000c000891f        0x1 
 .text          0x00000000c0008920      0x118 compat/resolve.32
                0x00000000c0008920                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0008a38      0xb95 core/computer.32
                0x00000000c0008a38                Computer::close(int, int, void*)
                0x00000000c0008a7c                Krnl::firstTask()
                0x00000000c0008bd0                Computer::Computer()
                0x00000000c0008bd0                Computer::Computer()
                0x00000000c0008d2c                Computer::setBootMessage(char const*)
                0x00000000c0008d2e                Computer::detectFeatures()
                0x00000000c0008f38                Computer::displayFeatures()
                0x00000000c000927e                Computer::rdmsr(unsigned int)
                0x00000000c00092aa                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00092e2                Computer::shutdown()
                0x00000000c00092fa                Computer::restart()
                0x00000000c0009312                Computer::sleep()
                0x00000000c0009326                Computer::nmiEnabled()
                0x00000000c0009332                Computer::readCMOS(unsigned char)
                0x00000000c000934c                Computer::enableNMI(bool)
                0x00000000c0009364                Computer::open(int, int, void*)
                0x00000000c0009510                Computer::disableNMI()
                0x00000000c000951e                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000953c                Computer::handleNMI()
                0x00000000c00095a2                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c00095cd        0x1 
 .text          0x00000000c00095ce      0x211 core/gdt.32
                0x00000000c00095ce                GDTEntry::setBase(unsigned int)
                0x00000000c00095ea                GDTEntry::setLimit(unsigned int)
                0x00000000c0009608                GDT::GDT()
                0x00000000c0009608                GDT::GDT()
                0x00000000c000961e                GDT::addEntry(GDTEntry)
                0x00000000c0009640                GDT::getNumberOfEntries()
                0x00000000c0009648                GDT::flush()
                0x00000000c000966a                GDT::setup()
 .text          0x00000000c00097df       0x6b core/idle.32
                0x00000000c00097df                idleFunction(void*)
 *fill*         0x00000000c000984a        0x2 
 .text          0x00000000c000984c      0x464 core/idt.32
                0x00000000c000984c                IDTEntry::IDTEntry(bool)
                0x00000000c000984c                IDTEntry::IDTEntry(bool)
                0x00000000c00098be                IDTEntry::setOffset(unsigned int)
                0x00000000c00098d4                IDT::IDT()
                0x00000000c00098d4                IDT::IDT()
                0x00000000c00098d6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00098de                IDT::addEntry(IDTEntry, int)
                0x00000000c00098f8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0009930                IDT::flush()
                0x00000000c000994a                IDT::setup()
 .text          0x00000000c0009cb0      0x191 core/kheap.32
                0x00000000c0009cb0                sbrk
                0x00000000c0009d53                mmap
                0x00000000c0009d69                munmap
                0x00000000c0009d7f                liballoc_lock()
                0x00000000c0009d8c                liballoc_unlock()
                0x00000000c0009da0                liballoc_alloc(int)
                0x00000000c0009db8                liballoc_free(void*, int)
                0x00000000c0009dd3                realloc
                0x00000000c0009de7                malloc
                0x00000000c0009df7                free
                0x00000000c0009e07                rfree
                0x00000000c0009e17                calloc
 .text          0x00000000c0009e41      0x437 core/main.32
                0x00000000c0009e41                Krnl::setBootMessage(char const*)
                0x00000000c0009ead                kernel_main
 .text          0x00000000c000a278      0x668 core/physmgr.32
                0x00000000c000a278                Phys::allocateDMA(unsigned long)
                0x00000000c000a387                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000a3cd                Phys::setPageState(unsigned long, bool)
                0x00000000c000a3ff                Phys::getPageState(unsigned long)
                0x00000000c000a41b                Phys::freePage(unsigned long)
                0x00000000c000a49e                Phys::allocatePage()
                0x00000000c000a589                Phys::allocateContiguousPages(int)
                0x00000000c000a5e5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000a61d                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000a8e0      0x273 core/pipe.32
                0x00000000c000a8e0                Pipe::isAtty()
                0x00000000c000a8e4                Pipe::~Pipe()
                0x00000000c000a8e4                Pipe::~Pipe()
                0x00000000c000a908                Pipe::~Pipe()
                0x00000000c000a930                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000aa2c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000aaec                Pipe::Pipe(int)
                0x00000000c000aaec                Pipe::Pipe(int)
 *fill*         0x00000000c000ab53        0x1 
 .text          0x00000000c000ab54      0xb8f core/terminal.32
                0x00000000c000ab54                VgaText::isAtty()
                0x00000000c000ab58                VgaText::~VgaText()
                0x00000000c000ab58                VgaText::~VgaText()
                0x00000000c000ab7c                VgaText::~VgaText()
                0x00000000c000aba6                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000abc6                setTerminalScrollLock(bool)
                0x00000000c000abc7                addToTerminalCycle(VgaText*)
                0x00000000c000abe8                installVgaTextImplementation()
                0x00000000c000abfd                scrollTerminalScrollLock(int)
                0x00000000c000abfe                VgaText::updateTitle()
                0x00000000c000ac3c                VgaText::load()
                0x00000000c000ac8a                VgaText::updateCursor()
                0x00000000c000aca0                VgaText::doANSI_SGR(int)
                0x00000000c000ad14                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000ad24                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000ad34                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000ad54                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000ad64                VgaText::setTitleColour(VgaColour)
                0x00000000c000ad74                VgaText::setTitle(char*)
                0x00000000c000ad9a                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000adac                VgaText::scrollScreen()
                0x00000000c000ae40                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000ae52                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000aeae                VgaText::getCursorX()
                0x00000000c000aeb6                VgaText::getCursorY()
                0x00000000c000aebe                VgaText::setCursor(int, int)
                0x00000000c000aed5                setActiveTerminal(VgaText*)
                0x00000000c000af37                doTerminalCycle()
                0x00000000c000af52                VgaText::setCursorX(int)
                0x00000000c000af6a                VgaText::setCursorY(int)
                0x00000000c000af82                VgaText::incrementCursor(bool)
                0x00000000c000afd6                VgaText::decrementCursor(bool)
                0x00000000c000aff8                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000b0d0                VgaText::doUpdate()
                0x00000000c000b0de                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000b256                VgaText::clearScreen()
                0x00000000c000b2b0                VgaText::putchar(char)
                0x00000000c000b39c                VgaText::putx(unsigned int)
                0x00000000c000b3e2                VgaText::puts(char const*)
                0x00000000c000b408                VgaText::VgaText(char const*)
                0x00000000c000b408                VgaText::VgaText(char const*)
                0x00000000c000b584                VgaText::receiveKey(unsigned char)
                0x00000000c000b66a                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000b6be                newTerminal(char*)
 *fill*         0x00000000c000b6e3        0x1 
 .text          0x00000000c000b6e4      0x1a1 core/tss.32
                0x00000000c000b6e4                TSS::TSS()
                0x00000000c000b6e4                TSS::TSS()
                0x00000000c000b6f4                TSS::setESP(unsigned long)
                0x00000000c000b708                TSS::flush()
                0x00000000c000b728                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000b885        0x1 
 .text          0x00000000c000b886      0x4c2 core/unixfile.32
                0x00000000c000b886                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000b8dc                ReservedFilename::isAtty()
                0x00000000c000b8f8                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000b956                UnixFile::getFileDescriptor()
                0x00000000c000b95e                UnixFile::UnixFile(int)
                0x00000000c000b95e                UnixFile::UnixFile(int)
                0x00000000c000bb0e                ReservedFilename::ReservedFilename(int)
                0x00000000c000bb0e                ReservedFilename::ReservedFilename(int)
                0x00000000c000bb40                UnixFile::~UnixFile()
                0x00000000c000bb40                UnixFile::~UnixFile()
                0x00000000c000bbd8                UnixFile::~UnixFile()
                0x00000000c000bc00                ReservedFilename::~ReservedFilename()
                0x00000000c000bc00                ReservedFilename::~ReservedFilename()
                0x00000000c000bc24                ReservedFilename::~ReservedFilename()
                0x00000000c000bc4b                getFromFileDescriptor(int)
 .text          0x00000000c000bd48     0x129a core/virtmgr.32
                0x00000000c000bd48                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000bd7d                Virt::getPageState(unsigned long)
                0x00000000c000bda1                Virt::allocateKernelVirtualPages(int)
                0x00000000c000beb2                Virt::freeSwapfilePage(unsigned long)
                0x00000000c000bed0                Virt::swapIDToSector(unsigned long)
                0x00000000c000bee2                Virt::allocateSwapfilePage()
                0x00000000c000bf60                Virt::virtualMemorySetup()
                0x00000000c000bfab                Virt::setupPageSwapping(int)
                0x00000000c000c01c                VAS::VAS(VAS*)
                0x00000000c000c01c                VAS::VAS(VAS*)
                0x00000000c000c04a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000c076                VAS::getPageTableEntry(unsigned long)
                0x00000000c000c095                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000c1b8                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000c1dc                VAS::virtualToPhysical(unsigned long)
                0x00000000c000c1f4                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000c234                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000c266                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000c290                VAS::~VAS()
                0x00000000c000c290                VAS::~VAS()
                0x00000000c000c40c                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000c50e                VAS::allocatePages(int, int)
                0x00000000c000c6e6                VAS::setCPUSpecific(unsigned long)
                0x00000000c000c702                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000c7c8                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000c8b6                VAS::VAS(bool)
                0x00000000c000c8b6                VAS::VAS(bool)
                0x00000000c000cb36                VAS::VAS()
                0x00000000c000cb36                VAS::VAS()
                0x00000000c000cbf4                VAS::evict(unsigned long)
                0x00000000c000ccc4                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000cdd8                VAS::scanForEviction()
                0x00000000c000ceb6                mapVASFirstTime
 .text          0x00000000c000cfe2       0x95 coreobjs/c++.32
                0x00000000c000cfe2                __cxa_atexit
                0x00000000c000cfe5                __cxa_finalize
                0x00000000c000cfe6                __stack_chk_fail
                0x00000000c000d052                __cxa_pure_virtual
                0x00000000c000d063                operator new[](unsigned long)
                0x00000000c000d068                operator delete(void*, unsigned long)
                0x00000000c000d06d                operator delete[](void*)
                0x00000000c000d072                operator delete[](void*, unsigned long)
 .text          0x00000000c000d077      0x1fc dbg/kconsole.32
                0x00000000c000d077                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000d0d0                Dbg::logc(char)
                0x00000000c000d0f0                Dbg::logs(char*)
                0x00000000c000d10d                Dbg::logWriteInt(unsigned int)
                0x00000000c000d12a                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000d149                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000d273        0x1 
 .text          0x00000000c000d274      0xcac fs/vfs.32
                0x00000000c000d274                File::read(unsigned long long, void*, int*)
                0x00000000c000d2cc                File::write(unsigned long long, void*, int*)
                0x00000000c000d324                Directory::read(unsigned long long, void*, int*)
                0x00000000c000d37c                Directory::write(unsigned long long, void*, int*)
                0x00000000c000d3aa                File::isAtty()
                0x00000000c000d3ae                Directory::isAtty()
                0x00000000c000d3b2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000d3b8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000d3be                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000d3c4                File::~File()
                0x00000000c000d3c4                File::~File()
                0x00000000c000d3e8                File::~File()
                0x00000000c000d412                Directory::~Directory()
                0x00000000c000d412                Directory::~Directory()
                0x00000000c000d436                Directory::~Directory()
                0x00000000c000d460                Filesystem::Filesystem()
                0x00000000c000d460                Filesystem::Filesystem()
                0x00000000c000d484                Filesystem::~Filesystem()
                0x00000000c000d484                Filesystem::~Filesystem()
                0x00000000c000d492                Filesystem::~Filesystem()
                0x00000000c000d4b6                Fs::getcwd(Process*, char*, int)
                0x00000000c000d4e0                Fs::initVFS()
                0x00000000c000d50a                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000d6b4                File::File(char const*, Process*)
                0x00000000c000d6b4                File::File(char const*, Process*)
                0x00000000c000d78e                File::open(FileOpenMode)
                0x00000000c000d7ec                File::close()
                0x00000000c000d84c                File::seek(unsigned long long)
                0x00000000c000d8a2                File::tell(unsigned long long*)
                0x00000000c000d8f2                File::rewind()
                0x00000000c000d906                File::unlink()
                0x00000000c000d952                File::rename(char const*)
                0x00000000c000d9a0                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000d9fc                File::exists()
                0x00000000c000da3a                File::stat(unsigned long long*, bool*)
                0x00000000c000da9b                Fs::setcwd(Process*, char*)
                0x00000000c000dc14                Directory::Directory(char const*, Process*)
                0x00000000c000dc14                Directory::Directory(char const*, Process*)
                0x00000000c000dcee                Directory::open()
                0x00000000c000dd4a                Directory::close()
                0x00000000c000ddaa                Directory::unlink()
                0x00000000c000ddf6                Directory::rename(char const*)
                0x00000000c000de44                Directory::exists()
                0x00000000c000de82                Directory::read(dirent*)
                0x00000000c000dece                Directory::create()
                0x00000000c000df1a                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000df20       0x86 hal/bus.32
                0x00000000c000df20                Bus::Bus(char const*)
                0x00000000c000df20                Bus::Bus(char const*)
                0x00000000c000df58                Bus::~Bus()
                0x00000000c000df58                Bus::~Bus()
                0x00000000c000df7c                Bus::~Bus()
 *fill*         0x00000000c000dfa6        0x2 
 .text          0x00000000c000dfa8      0x153 hal/buzzer.32
                0x00000000c000dfa8                Buzzer::Buzzer(char const*)
                0x00000000c000dfa8                Buzzer::Buzzer(char const*)
                0x00000000c000dfec                Buzzer::~Buzzer()
                0x00000000c000dfec                Buzzer::~Buzzer()
                0x00000000c000e010                Buzzer::~Buzzer()
                0x00000000c000e03a                Buzzer::stop()
                0x00000000c000e04d                beepThread(void*)
                0x00000000c000e08e                Buzzer::beep(int, int, bool)
 *fill*         0x00000000c000e0fb        0x1 
 .text          0x00000000c000e0fc      0x467 hal/clock.32
                0x00000000c000e0fc                User::loadClockSettings(int)
                0x00000000c000e14e                Clock::Clock(char const*)
                0x00000000c000e14e                Clock::Clock(char const*)
                0x00000000c000e184                Clock::~Clock()
                0x00000000c000e184                Clock::~Clock()
                0x00000000c000e1a8                Clock::~Clock()
                0x00000000c000e1d2                Clock::timeInSecondsLocal()
                0x00000000c000e21a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000e273                datetimeToSeconds(datetime_t)
                0x00000000c000e39a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000e3fa                secondsToDatetime(unsigned long long)
                0x00000000c000e53e                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000e563        0x1 
 .text          0x00000000c000e564      0x504 hal/device.32
                0x00000000c000e564                Device::hibernate()
                0x00000000c000e566                Device::wake()
                0x00000000c000e568                Device::detect()
                0x00000000c000e56a                Device::disableLegacy()
                0x00000000c000e56c                Device::powerSaving(PowerSavingLevel)
                0x00000000c000e56e                DriverlessDevice::close(int, int, void*)
                0x00000000c000e572                DriverlessDevice::detect()
                0x00000000c000e574                DriverlessDevice::open(int, int, void*)
                0x00000000c000e588                Device::~Device()
                0x00000000c000e588                Device::~Device()
                0x00000000c000e596                Device::~Device()
                0x00000000c000e5be                Device::findAndLoadDriver()
                0x00000000c000e5cc                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000e5f2                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000e632                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000e670                Device::getParent()
                0x00000000c000e67c                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000e6ba                Device::addChild(Device*)
                0x00000000c000e6fe                Device::removeAllChildren()
                0x00000000c000e744                Device::hibernateAll()
                0x00000000c000e774                Device::wakeAll()
                0x00000000c000e7a4                Device::detectAll()
                0x00000000c000e7d4                Device::disableLegacyAll()
                0x00000000c000e804                Device::loadDriversForAll()
                0x00000000c000e844                Device::closeAll()
                0x00000000c000e87a                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000e8b0                Device::setName(char const*)
                0x00000000c000e8be                Device::Device(char const*)
                0x00000000c000e8be                Device::Device(char const*)
                0x00000000c000e9ba                Device::getName()
                0x00000000c000e9c4                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e9c4                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e9fa                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ea3e                getDevicesOfType(DeviceType)
 .text          0x00000000c000ea68       0x86 hal/diskctrl.32
                0x00000000c000ea68                HardDiskController::HardDiskController(char const*)
                0x00000000c000ea68                HardDiskController::HardDiskController(char const*)
                0x00000000c000eaa0                HardDiskController::~HardDiskController()
                0x00000000c000eaa0                HardDiskController::~HardDiskController()
                0x00000000c000eac4                HardDiskController::~HardDiskController()
 .text          0x00000000c000eaee       0xe2 hal/diskphys.32
                0x00000000c000eaee                PhysicalDisk::eject()
                0x00000000c000eaf2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000eaf2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000eb5a                PhysicalDisk::startCache()
                0x00000000c000eb82                PhysicalDisk::~PhysicalDisk()
                0x00000000c000eb82                PhysicalDisk::~PhysicalDisk()
                0x00000000c000eba6                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ebd0      0x15f hal/fpu.32
                0x00000000c000ebd0                FPU::FPU(char const*)
                0x00000000c000ebd0                FPU::FPU(char const*)
                0x00000000c000ec08                FPU::~FPU()
                0x00000000c000ec08                FPU::~FPU()
                0x00000000c000ec2c                FPU::~FPU()
                0x00000000c000ec56                setupFPU()
 *fill*         0x00000000c000ed2f        0x1 
 .text          0x00000000c000ed30     0x12cf hal/intctrl.32
                0x00000000c000ed30                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000ed68                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000edba                doubleFault(regs*, void*)
                0x00000000c000edd4                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ee70                InterruptController::clearAllHandlers(int, bool)
                0x00000000c000ef18                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ef9f                nmiHandler(regs*, void*)
                0x00000000c000efad                int_handler
                0x00000000c000f04e                InterruptController::InterruptController(char const*)
                0x00000000c000f04e                InterruptController::InterruptController(char const*)
                0x00000000c000f0f4                InterruptController::~InterruptController()
                0x00000000c000f0f4                InterruptController::~InterruptController()
                0x00000000c000f118                InterruptController::~InterruptController()
                0x00000000c000f142                displayDebugInfo(regs*)
                0x00000000c000f5d1                x87EmulHandler(regs*, void*)
                0x00000000c000f71a                gpFault(regs*, void*)
                0x00000000c000f753                pgFault(regs*, void*)
                0x00000000c000f7a2                otherISRHandler(regs*, void*)
                0x00000000c000f7c1                opcodeFault(regs*, void*)
                0x00000000c000fb9b                displayProgramFault(char const*)
                0x00000000c000fbc3                setupInterruptController()
                0x00000000c000ffb2                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c000ffff        0x1 
 .text          0x00000000c0010000      0x778 hal/keybrd.32
                0x00000000c0010000                startGUI(void*)
                0x00000000c001006c                startGUIVESA(void*)
                0x00000000c00100d8                sendKeyToTerminal(unsigned char)
                0x00000000c0010196                sendKeyboardToken(KeyboardToken)
                0x00000000c00105c8                clearInternalKeybuffer(VgaText*)
                0x00000000c00105fd                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c00106ee                Keyboard::Keyboard(char const*)
                0x00000000c00106ee                Keyboard::Keyboard(char const*)
                0x00000000c001072a                Keyboard::~Keyboard()
                0x00000000c001072a                Keyboard::~Keyboard()
                0x00000000c001074e                Keyboard::~Keyboard()
 .text          0x00000000c0010778      0x42a hal/logidisk.32
                0x00000000c0010778                LogicalDisk::close(int, int, void*)
                0x00000000c001077c                LogicalDisk::~LogicalDisk()
                0x00000000c001077c                LogicalDisk::~LogicalDisk()
                0x00000000c00107a0                LogicalDisk::~LogicalDisk()
                0x00000000c00107ca                LogicalDisk::open(int, int, void*)
                0x00000000c00107de                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0010816                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c001085c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c001085c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0010912                LogicalDisk::assignDriveLetter()
                0x00000000c00109c8                LogicalDisk::mount()
                0x00000000c0010a50                LogicalDisk::unmount()
                0x00000000c0010a60                LogicalDisk::eject()
                0x00000000c0010a74                LogicalDisk::unassignDriveLetter()
                0x00000000c0010aca                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0010b36                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c0010ba2        0x2 
 .text          0x00000000c0010ba4       0x86 hal/mouse.32
                0x00000000c0010ba4                Mouse::Mouse(char const*)
                0x00000000c0010ba4                Mouse::Mouse(char const*)
                0x00000000c0010bdc                Mouse::~Mouse()
                0x00000000c0010bdc                Mouse::~Mouse()
                0x00000000c0010c00                Mouse::~Mouse()
 .text          0x00000000c0010c2a      0x339 hal/partition.32
                0x00000000c0010c2a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0010cd2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0010f63        0x1 
 .text          0x00000000c0010f64       0x86 hal/serial.32
                0x00000000c0010f64                Serial::Serial(char const*)
                0x00000000c0010f64                Serial::Serial(char const*)
                0x00000000c0010f9c                Serial::~Serial()
                0x00000000c0010f9c                Serial::~Serial()
                0x00000000c0010fc0                Serial::~Serial()
 *fill*         0x00000000c0010fea        0x2 
 .text          0x00000000c0010fec      0x2f2 hal/timer.32
                0x00000000c0010fec                Timer::Timer(char const*)
                0x00000000c0010fec                Timer::Timer(char const*)
                0x00000000c0011024                Timer::~Timer()
                0x00000000c0011024                Timer::~Timer()
                0x00000000c0011048                Timer::~Timer()
                0x00000000c0011072                Timer::read()
                0x00000000c001107d                timerHandler(unsigned int)
                0x00000000c00111e4                setupTimer(int)
 *fill*         0x00000000c00112de        0x2 
 .text          0x00000000c00112e0      0x43e hal/vcache.32
                0x00000000c00112e0                VCache::VCache(PhysicalDisk*)
                0x00000000c00112e0                VCache::VCache(PhysicalDisk*)
                0x00000000c0011448                VCache::invalidateReadBuffer()
                0x00000000c0011458                VCache::writeWriteBuffer()
                0x00000000c00114a4                VCache::~VCache()
                0x00000000c00114a4                VCache::~VCache()
                0x00000000c00114f8                VCache::~VCache()
                0x00000000c0011520                VCache::write(unsigned long long, int, void*)
                0x00000000c001161a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c001171e      0x4b3 hal/video.32
                0x00000000c001171e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c001176a                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c00117da                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c0011858                Video::clearScreen(unsigned int)
                0x00000000c001188c                Video::putpixel(int, int, unsigned int)
                0x00000000c001189a                Video::Video(char const*)
                0x00000000c001189a                Video::Video(char const*)
                0x00000000c00118d0                Video::~Video()
                0x00000000c00118d0                Video::~Video()
                0x00000000c00118f4                Video::~Video()
                0x00000000c001191e                Video::isMonochrome()
                0x00000000c001192a                Video::getWidth()
                0x00000000c0011936                Video::getHeight()
                0x00000000c0011942                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c00119fe                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c0011b66                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c0011bd1        0x3 
 .text          0x00000000c0011bd4     0x1707 hw/acpi.32
                0x00000000c0011bd4                ACPI::close(int, int, void*)
                0x00000000c0011c88                findRSDP()
                0x00000000c0011d5c                loadACPITables(unsigned char*)
                0x00000000c0011fc0                findRSDT(unsigned char*)
                0x00000000c0012180                findDataTable(unsigned char*, char*)
                0x00000000c00121f8                scanMADT()
                0x00000000c00126d4                ACPI::ACPI()
                0x00000000c00126d4                ACPI::ACPI()
                0x00000000c0012738                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0012820                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c00128e8                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c00128f0                ACPI::detectPCI()
                0x00000000c0012dd4                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0012e1c                ACPI::sleep()
                0x00000000c0012e58                ACPI::open(int, int, void*)
 *fill*         0x00000000c00132db        0x1 
 .text          0x00000000c00132dc     0x1861 hw/cpu.32
                0x00000000c00132dc                CPU::close(int, int, void*)
                0x00000000c00132e0                CPU::lookupAMDName(unsigned char, unsigned char)
                0x00000000c0013474                CPU::lookupIntelName(unsigned char, unsigned char)
                0x00000000c0013722                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c001373e                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0013756                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c00137ca                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c001384e                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c001387c                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00138aa                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00138d8                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0013906                CPU::CPU()
                0x00000000c0013906                CPU::CPU()
                0x00000000c0013994                CPU::displayFeatures()
                0x00000000c0013c34                CPU::detectFeatures()
                0x00000000c001465e                CPU::setupSMEP()
                0x00000000c001466a                CPU::setupUMIP()
                0x00000000c0014674                CPU::setupTSC()
                0x00000000c001467e                CPU::setupLargePages()
                0x00000000c0014688                CPU::setupPAT()
                0x00000000c00146c4                CPU::setupMTRR()
                0x00000000c00146c6                CPU::setupGlobalPages()
                0x00000000c00146d0                CPU::allowUsermodeDataAccess()
                0x00000000c00146e2                CPU::prohibitUsermodeDataAccess()
                0x00000000c00146f4                CPU::setupSMAP()
                0x00000000c0014702                CPU::setupFeatures()
                0x00000000c00147ce                CPU::open(int, int, void*)
                0x00000000c0014942                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0014b3d        0x0 hw/ports.32
 .text          0x00000000c0014b3d      0x16a hw/smp.32
                0x00000000c0014b3d                Krnl::smpEntry()
                0x00000000c0014b3f                Krnl::startCPU(int)
                0x00000000c0014c88                Krnl::startCPUs()
 *fill*         0x00000000c0014ca7        0x1 
 .text          0x00000000c0014ca8      0x581 krnl/env.32
                0x00000000c0014ca8                EnvVarContainer::getEnv(char const*)
                0x00000000c0014ce6                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0014da8                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0014daa                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0014f90                EnvVarContainer::__loadSystem()
                0x00000000c0014faa                EnvVarContainer::__loadUser()
                0x00000000c0014fac                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0014fac                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0014fce                EnvVarContainer::~EnvVarContainer()
                0x00000000c0014fce                EnvVarContainer::~EnvVarContainer()
                0x00000000c0014ffe                Krnl::getEnv(Process*, char const*)
                0x00000000c0015063                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001507d                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001509c                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00150af                Krnl::deleteEnvSystem(char const*)
                0x00000000c00150b0                Krnl::deleteEnvUser(char const*)
                0x00000000c00150b1                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00150b2                Krnl::newProcessEnv(Process*)
                0x00000000c00150d4                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0015120                Krnl::loadSystemEnv()
                0x00000000c001514e                Krnl::loadUserEnv()
                0x00000000c0015174                Krnl::flushEnv()
                0x00000000c0015175                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0015195                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0015229      0x258 krnl/panic.32
                0x00000000c0015229                Krnl::panic(char const*)
 .text          0x00000000c0015481      0x194 krnl/powctrl.32
                0x00000000c0015481                Krnl::powerThread(void*)
                0x00000000c0015501                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0015517                Krnl::userIOReceived()
                0x00000000c0015522                Krnl::handlePowerButton()
                0x00000000c0015557                Krnl::handleSleepButton()
                0x00000000c001558c                Krnl::setupPowerManager()
 .text          0x00000000c0015615      0x13a krnl/rand.32
                0x00000000c0015615                Krnl::initRNG()
                0x00000000c00156ee                Krnl::rand()
 *fill*         0x00000000c001574f        0x1 
 .text          0x00000000c0015750      0x5a0 net/ethernet.32
                0x00000000c0015750                Net::switchEndian16(unsigned short)
                0x00000000c0015774                Net::switchEndian32(unsigned int)
                0x00000000c00157a4                Net::crc32Calc(unsigned char*, int)
                0x00000000c0015848                Net::wrapEthernetFrame(Net::UnwrappedEthernetFrame, unsigned char*)
                0x00000000c0015a64                Net::unwrapEthernetFrame(unsigned char*, int)
 .text          0x00000000c0015cf0      0x50e reg/registry.32
                0x00000000c0015cf0                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0015e48                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0015f9d                Reg::getLine(char*, char*, char*)
                0x00000000c0015fd4                Reg::readInt(char*, char*, int*)
                0x00000000c00160bf                Reg::readString(char*, char*, char*, int)
                0x00000000c0016140                Reg::readBool(char*, char*, bool*)
                0x00000000c0016165                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0016191                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00161bd                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00161fe       0x36 sys/sc_eject.32
                0x00000000c00161fe                Sys::eject(regs*)
 .text          0x00000000c0016234       0x18 sys/sc_exit.32
                0x00000000c0016234                Sys::exit(regs*)
 .text          0x00000000c001624c       0x1f sys/sc_getcwd.32
                0x00000000c001624c                Sys::getCwd(regs*)
 .text          0x00000000c001626b        0xc sys/sc_getpid.32
                0x00000000c001626b                Sys::getPID(regs*)
 .text          0x00000000c0016277       0x1a sys/sc_getramdata.32
                0x00000000c0016277                Sys::getRAMData(regs*)
 .text          0x00000000c0016291       0x84 sys/sc_getvgaptr.32
                0x00000000c0016291                Sys::getVGAPtr(regs*)
 .text          0x00000000c0016315       0xa8 sys/sc_loaddll.32
                0x00000000c0016315                Sys::loadDLL(regs*)
 .text          0x00000000c00163bd       0x68 sys/sc_read.32
                0x00000000c00163bd                Sys::read(regs*)
 .text          0x00000000c0016425       0x55 sys/sc_sbrk.32
                0x00000000c0016425                Sys::sbrk(regs*)
 .text          0x00000000c001647a       0x1c sys/sc_setcwd.32
                0x00000000c001647a                Sys::setCwd(regs*)
 .text          0x00000000c0016496       0x95 sys/sc_settime.32
                0x00000000c0016496                Sys::setTime(regs*)
 .text          0x00000000c001652b       0x4a sys/sc_timezone.32
                0x00000000c001652b                Sys::timezone(regs*)
 .text          0x00000000c0016575       0x68 sys/sc_write.32
                0x00000000c0016575                Sys::write(regs*)
 .text          0x00000000c00165dd       0x62 sys/sc_wsbe.32
                0x00000000c00165dd                Sys::wsbe(regs*)
 .text          0x00000000c001663f       0x38 sys/sc_yield.32
                0x00000000c001663f                Sys::yield(regs*)
 .text          0x00000000c0016677      0xf8e sys/syscalls.32
                0x00000000c0016677                sysCallSeekDir(regs*)
                0x00000000c001667c                sysCallTellDir(regs*)
                0x00000000c0016681                sysCallVerify(regs*)
                0x00000000c001668b                sysCallGetArgc(regs*)
                0x00000000c001669b                sysFormatDisk(regs*)
                0x00000000c0016705                sysSetDiskVolumeLabel(regs*)
                0x00000000c001674f                sysGetDiskVolumeLabel(regs*)
                0x00000000c00167a4                sysShutdown(regs*)
                0x00000000c0016802                sysCallRealpath(regs*)
                0x00000000c0016845                sysCallReadDir(regs*)
                0x00000000c00168c4                sysCallIsATTY(regs*)
                0x00000000c001691e                sysCallSeek(regs*)
                0x00000000c0016975                sysCallTell(regs*)
                0x00000000c00169e1                sysCallSize(regs*)
                0x00000000c0016a53                sysCallSizeFromFilename(regs*)
                0x00000000c0016b02                sysCallClose(regs*)
                0x00000000c0016b62                sysCallOpenDir(regs*)
                0x00000000c0016bd7                sysCallCloseDir(regs*)
                0x00000000c0016c2b                sysCallMakeDir(regs*)
                0x00000000c0016c9b                sysCallWait(regs*)
                0x00000000c0016cb5                sysCallNotImpl(regs*)
                0x00000000c0016cd0                sysPanic(regs*)
                0x00000000c0016cea                sysCallRmdir(regs*)
                0x00000000c0016d4e                sysCallUnlink(regs*)
                0x00000000c0016db2                sysCallGetArgv(regs*)
                0x00000000c0016dfe                sysCallTTYName(regs*)
                0x00000000c0016e81                sysCallUSleep(regs*)
                0x00000000c0016eaa                sysCallSpawn(regs*)
                0x00000000c0016f12                sysCallGetEnv(regs*)
                0x00000000c0016fbf                sysAppSettings(regs*)
                0x00000000c00170d3                sysSetFatAttrib(regs*)
                0x00000000c0017145                sysPipe(regs*)
                0x00000000c001718a                sysGetUnixTime(regs*)
                0x00000000c001719e                string_ends_with(char const*, char const*)
                0x00000000c00171e6                sysCallOpen(regs*)
                0x00000000c00173ce                Sys::loadSyscalls()
                0x00000000c00175c3                Sys::systemCall(regs*, void*)
 .text          0x00000000c0017605     0x1203 thr/elf.32
                0x00000000c0017605                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00178af                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0017ac5                Thr::runtimeReferenceHelper()
                0x00000000c0017ad8                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0017b27                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0017de5                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001851b                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001854d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0018584                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001859e                Thr::loadDLL(char const*, bool)
                0x00000000c00187cf                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0018808     0x12a9 thr/prcssthr.32
                0x00000000c0018808                userModeEntryPoint(void*)
                0x00000000c0018830                changeTSS
                0x00000000c0018860                switchToThread(ThreadControlBlock*)
                0x00000000c0018914                Process::addArgs(char**)
                0x00000000c0018974                Process::Process(char const*, Process*, char**)
                0x00000000c0018974                Process::Process(char const*, Process*, char**)
                0x00000000c0018b60                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0018b60                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0018d18                taskStartupFunction
                0x00000000c0018d24                Semaphore::Semaphore(int)
                0x00000000c0018d24                Semaphore::Semaphore(int)
                0x00000000c0018d54                Mutex::Mutex()
                0x00000000c0018d54                Mutex::Mutex()
                0x00000000c0018d68                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0018e60                Process::createUserThread()
                0x00000000c0018e7c                setupMultitasking(void (*)())
                0x00000000c0018f84                schedule()
                0x00000000c0019010                Semaphore::tryAcquire()
                0x00000000c00190dc                Semaphore::assertLocked(char const*)
                0x00000000c0019154                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001917c                blockTask(TaskState)
                0x00000000c00191ac                waitTask(int, int*, int)
                0x00000000c00191f0                milliTenthSleepUntil(unsigned int)
                0x00000000c001927c                milliTenthSleep(unsigned int)
                0x00000000c001928c                sleep(unsigned int)
                0x00000000c00192a8                Semaphore::acquire()
                0x00000000c0019364                taskReturned
                0x00000000c00193a0                Thr::processFromPID(int)
                0x00000000c0019440                unblockTask(ThreadControlBlock*)
                0x00000000c00194e4                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00197ac                cleanerTaskFunction(void*)
                0x00000000c001989c                terminateTask(int)
                0x00000000c0019968                Thr::terminateFromIRQ(int)
                0x00000000c0019974                Semaphore::release()
 .text          0x00000000c0019ab1      0xb93 vm86/vm8086.32
                0x00000000c0019ab1                Vm::inbv(unsigned short)
                0x00000000c0019ac4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0019afa                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0019b0a                Vm::getSegment(unsigned int)
                0x00000000c0019b12                Vm::getOffset(unsigned int)
                0x00000000c0019b17                Vm::mainloop2()
                0x00000000c0019b51                Vm::mainVm8086Loop(void*)
                0x00000000c0019b61                Vm::mainloop3(unsigned long)
                0x00000000c0019b87                Vm::initialise8086()
                0x00000000c0019bca                Vm::finish8086()
                0x00000000c0019c2b                Vm::getOutput8086(unsigned char*)
                0x00000000c0019c50                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0019d09                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0019e71                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0019efb                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0019f0c                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0019f1e                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0019f2f                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0019f44                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0019f5a                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0019f6f                Vm::faultHandler(regs*)
 .text          0x00000000c001a644      0xfcd vm86/x87em.32
                0x00000000c001a644                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c001a6a2                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c001a6ab                Vm::fpu32ToInternal(unsigned int)
                0x00000000c001a6f0                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c001a6f9                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c001a758                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c001a794                Vm::fpuLongToFloat(long long)
                0x00000000c001a7f3                Vm::fpuGet0()
                0x00000000c001a7f8                Vm::fpuGet1()
                0x00000000c001a800                Vm::fpuGetPi()
                0x00000000c001a808                Vm::fpuGetLog2E()
                0x00000000c001a820                Vm::fpuGetLogE2()
                0x00000000c001a838                Vm::fpuGetLog210()
                0x00000000c001a850                Vm::fpuGetLog102()
                0x00000000c001a868                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c001a87c                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c001a892                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c001a8e8                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c001a8f9                Vm::fpuAbs(unsigned long long)
                0x00000000c001a902                Vm::fpuChs(unsigned long long)
                0x00000000c001a912                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c001a921                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c001a940                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c001a95c                Vm::fpuSquare(unsigned long long)
                0x00000000c001a972                Vm::fpuGetReg(int)
                0x00000000c001a9b5                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c001aa01                Vm::fpuPush(unsigned long long)
                0x00000000c001aa5f                Vm::fpuPop()
                0x00000000c001aab2                Vm::x87Handler(regs*)
 *fill*         0x00000000c001b611        0x3 
 .text          0x00000000c001b614     0x13b7 fs/fat/vfslink.32
                0x00000000c001b614                FAT::getName()
                0x00000000c001b61c                FAT::tell(void*, unsigned long long*)
                0x00000000c001b658                FAT::stat(void*, unsigned long long*)
                0x00000000c001b694                FAT::~FAT()
                0x00000000c001b694                FAT::~FAT()
                0x00000000c001b6b8                FAT::~FAT()
                0x00000000c001b6e0                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b784                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b848                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001ba1c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001bc34                FAT::allocateSwapfile(char const*, int)
                0x00000000c001bdf0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bf5c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001bfbc                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c01c                FAT::close(void*)
                0x00000000c001c070                FAT::closeDir(void*)
                0x00000000c001c0c4                FAT::seek(void*, unsigned long long)
                0x00000000c001c120                fatWrapperReadDisk
                0x00000000c001c168                fatWrapperWriteDisk
                0x00000000c001c1b0                fatWrapperIoctl
                0x00000000c001c2c0                FAT::FAT()
                0x00000000c001c2c0                FAT::FAT()
                0x00000000c001c314                FAT::fixFilepath(char*)
                0x00000000c001c350                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c484                FAT::openDir(char const*, void**)
                0x00000000c001c534                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c628                FAT::unlink(char const*)
                0x00000000c001c6a8                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c810                FAT::rename(char const*, char const*)
                0x00000000c001c8dc                FAT::mkdir(char const*)
                0x00000000c001c95c                FAT::exists(char const*)
 *fill*         0x00000000c001c9cb        0x1 
 .text          0x00000000c001c9cc      0xba7 fs/iso9660/vfslink.32
                0x00000000c001c9cc                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001c9d2                ISO9660::seek(void*, unsigned long long)
                0x00000000c001ca02                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001ca26                ISO9660::getName()
                0x00000000c001ca2c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001ca50                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ca56                ISO9660::unlink(char const*)
                0x00000000c001ca5c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001ca62                ISO9660::rename(char const*, char const*)
                0x00000000c001ca68                ISO9660::mkdir(char const*)
                0x00000000c001ca6e                ISO9660::close(void*)
                0x00000000c001ca90                ISO9660::closeDir(void*)
                0x00000000c001cab2                ISO9660::~ISO9660()
                0x00000000c001cab2                ISO9660::~ISO9660()
                0x00000000c001cad6                ISO9660::~ISO9660()
                0x00000000c001cafd                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001cb3f                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001cbba                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001cc1a                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001ce1e                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d098                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001d0ec                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001d2c2                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001d350                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001d3fe                ISO9660::exists(char const*)
                0x00000000c001d422                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d4b6                ISO9660::openDir(char const*, void**)
                0x00000000c001d550                ISO9660::ISO9660()
                0x00000000c001d550                ISO9660::ISO9660()
 *fill*         0x00000000c001d573        0x1 
 .text          0x00000000c001d574      0x298 hal/sound/sndcard.32
                0x00000000c001d574                SoundCard::beginPlayback()
                0x00000000c001d582                SoundCard::stopPlayback()
                0x00000000c001d590                SoundCard::SoundCard(char const*)
                0x00000000c001d590                SoundCard::SoundCard(char const*)
                0x00000000c001d62e                SoundCard::~SoundCard()
                0x00000000c001d62e                SoundCard::~SoundCard()
                0x00000000c001d652                SoundCard::~SoundCard()
                0x00000000c001d67c                SoundCard::configureRates(int, int, int)
                0x00000000c001d6ac                SoundCard::getSamples16(int, short*)
                0x00000000c001d716                SoundCard::getSamples32(int, int*)
                0x00000000c001d79c                SoundCard::addChannel(SoundPort*)
                0x00000000c001d7f8                SoundCard::removeChannel(int)
 .text          0x00000000c001d80c      0x3fb hal/sound/sndport.32
                0x00000000c001d80c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d80c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d898                SoundPort::~SoundPort()
                0x00000000c001d898                SoundPort::~SoundPort()
                0x00000000c001d8cc                SoundPort::unpause()
                0x00000000c001d8d8                SoundPort::pause()
                0x00000000c001d8e4                SoundPort::getBufferUsed()
                0x00000000c001d8ec                SoundPort::getBufferSize()
                0x00000000c001d8f4                SoundPort::buffer16(short*, int)
                0x00000000c001d9a8                SoundPort::buffer32(int*, int)
                0x00000000c001da54                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001db50                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001dc07        0x0 hw/bus/isa.32
 *fill*         0x00000000c001dc07        0x1 
 .text          0x00000000c001dc08     0x1187 hw/bus/pci.32
                0x00000000c001dc08                PCI::open(int, int, void*)
                0x00000000c001dc26                PCI::close(int, int, void*)
                0x00000000c001dc2a                PCI::PCI()
                0x00000000c001dc2a                PCI::PCI()
                0x00000000c001dcc0                PCI::readBAR8(unsigned int, int)
                0x00000000c001dcdc                PCI::readBAR16(unsigned int, int)
                0x00000000c001dcfa                PCI::readBAR32(unsigned int, int)
                0x00000000c001dd16                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001dd36                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001dd58                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001dd78                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dde6                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001de8e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001deb2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001deda                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001df24                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001df4c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001df70                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001df94                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001dfbc                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e020                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001e108                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e4fa                PCI::checkBus(unsigned char)
                0x00000000c001e51e                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e95e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ecd0                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001ed3c                PCI::detect()
 *fill*         0x00000000c001ed8f        0x1 
 .text          0x00000000c001ed90      0xb66 hw/diskctrl/ide.32
                0x00000000c001ed90                IDE::close(int, int, void*)
                0x00000000c001ed94                IDE::IDE()
                0x00000000c001ed94                IDE::IDE()
                0x00000000c001edc8                IDE::prepareInterrupt(unsigned char)
                0x00000000c001edda                selectDrive(unsigned char, unsigned char)
                0x00000000c001eddc                IDE::getBase(unsigned char)
                0x00000000c001edee                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001eeae                IDE::read(unsigned char, unsigned char)
                0x00000000c001ef5c                IDE::waitInterrupt(unsigned char)
                0x00000000c001efbe                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001efda                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001eff6                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001f03c                IDE::open(int, int, void*)
                0x00000000c001f466                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001f532                IDE::detect()
                0x00000000c001f7f2                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f8a2                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f8f6      0x46c hw/diskctrl/satabus.32
                0x00000000c001f8f6                SATABus::close(int, int, void*)
                0x00000000c001f8fa                SATABus::detect()
                0x00000000c001f8fc                SATABus::SATABus()
                0x00000000c001f8fc                SATABus::SATABus()
                0x00000000c001f982                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f9b4                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f9fc                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fa1c                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fa46                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001fb4c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001fd2e                SATABus::open(int, int, void*)
 .text          0x00000000c001fd62      0x684 hw/diskphys/ata.32
                0x00000000c001fd62                ATA::close(int, int, void*)
                0x00000000c001fd86                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001fd88                ATA::ATA()
                0x00000000c001fd88                ATA::ATA()
                0x00000000c001fdb6                ATA::flush(bool)
                0x00000000c001fe00                ATA::readyForCommand()
                0x00000000c001fe4c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020242                ATA::read(unsigned long long, int, void*)
                0x00000000c002028e                ATA::write(unsigned long long, int, void*)
                0x00000000c00202f0                ATA::detectCHS()
                0x00000000c002031a                ATA::open(int, int, void*)
 .text          0x00000000c00203e6      0x645 hw/diskphys/atapi.32
                0x00000000c00203e6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c00203ec                ATAPI::close(int, int, void*)
                0x00000000c0020410                ATAPI::ATAPI()
                0x00000000c0020410                ATAPI::ATAPI()
                0x00000000c002043e                ATAPI::readyForCommand()
                0x00000000c0020490                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0020750                ATAPI::diskRemoved()
                0x00000000c00207ac                ATAPI::eject()
                0x00000000c00207f4                ATAPI::diskInserted()
                0x00000000c0020810                ATAPI::detectMedia()
                0x00000000c00208cc                ATAPI::open(int, int, void*)
                0x00000000c00209ac                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0020a2b        0x1 
 .text          0x00000000c0020a2c      0xa68 hw/diskphys/sata.32
                0x00000000c0020a2c                SATA::close(int, int, void*)
                0x00000000c0020a50                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0020a52                SATA::open(int, int, void*)
                0x00000000c0020c48                SATA::SATA()
                0x00000000c0020c48                SATA::SATA()
                0x00000000c0020c76                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c002126e                SATA::read(unsigned long long, int, void*)
                0x00000000c002136e                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0021494      0x642 hw/diskphys/satapi.32
                0x00000000c0021494                SATAPI::write(unsigned long long, int, void*)
                0x00000000c002149a                SATAPI::close(int, int, void*)
                0x00000000c00214be                SATAPI::SATAPI()
                0x00000000c00214be                SATAPI::SATAPI()
                0x00000000c00214ec                SATAPI::diskRemoved()
                0x00000000c00214ee                SATAPI::diskInserted()
                0x00000000c002150a                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0021798                SATAPI::eject()
                0x00000000c00217d4                SATAPI::detectMedia()
                0x00000000c00218fe                SATAPI::open(int, int, void*)
                0x00000000c00219fe                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0021ad6        0x2 
 .text          0x00000000c0021ad8       0x94 hw/fpu/avx.32
                0x00000000c0021ad8                AVX::open(int, int, void*)
                0x00000000c0021aec                AVX::close(int, int, void*)
                0x00000000c0021b00                AVX::available()
                0x00000000c0021b14                AVX::save(void*)
                0x00000000c0021b2c                AVX::load(void*)
                0x00000000c0021b44                AVX::AVX()
                0x00000000c0021b44                AVX::AVX()
 .text          0x00000000c0021b6c       0x94 hw/fpu/mmx.32
                0x00000000c0021b6c                MMX::available()
                0x00000000c0021b80                MMX::open(int, int, void*)
                0x00000000c0021b94                MMX::close(int, int, void*)
                0x00000000c0021ba8                MMX::save(void*)
                0x00000000c0021bc0                MMX::load(void*)
                0x00000000c0021bd8                MMX::MMX()
                0x00000000c0021bd8                MMX::MMX()
 .text          0x00000000c0021c00       0x9c hw/fpu/sse.32
                0x00000000c0021c00                SSE::open(int, int, void*)
                0x00000000c0021c14                SSE::close(int, int, void*)
                0x00000000c0021c28                SSE::available()
                0x00000000c0021c44                SSE::save(void*)
                0x00000000c0021c5c                SSE::load(void*)
                0x00000000c0021c74                SSE::SSE()
                0x00000000c0021c74                SSE::SSE()
 .text          0x00000000c0021c9c       0x8e hw/fpu/x87.32
                0x00000000c0021c9c                x87::open(int, int, void*)
                0x00000000c0021cae                x87::close(int, int, void*)
                0x00000000c0021cc0                x87::available()
                0x00000000c0021cd2                x87::save(void*)
                0x00000000c0021cea                x87::load(void*)
                0x00000000c0021d02                x87::x87()
                0x00000000c0021d02                x87::x87()
 .text          0x00000000c0021d2a      0x71e hw/intctrl/apic.32
                0x00000000c0021d2a                APIC::disable()
                0x00000000c0021d2c                APIC::close(int, int, void*)
                0x00000000c0021d4e                IOAPIC::close(int, int, void*)
                0x00000000c0021d54                APIC::io_wait()
                0x00000000c0021d5a                APIC::getBase()
                0x00000000c0021d9c                APIC::eoi(unsigned char)
                0x00000000c0021dca                APIC::open(int, int, void*)
                0x00000000c0021f18                IOAPIC::IOAPIC()
                0x00000000c0021f18                IOAPIC::IOAPIC()
                0x00000000c0021f40                APIC::APIC()
                0x00000000c0021f40                APIC::APIC()
                0x00000000c002201c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c002204e                IOAPIC::read(int)
                0x00000000c0022076                IOAPIC::open(int, int, void*)
                0x00000000c002216c                IOAPIC::write(int, int)
                0x00000000c0022198                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
                0x00000000c0022292                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 .text          0x00000000c0022448      0x3d3 hw/intctrl/pic.32
                0x00000000c0022448                PIC::disable()
                0x00000000c0022476                PIC::close(int, int, void*)
                0x00000000c0022498                PIC::PIC()
                0x00000000c0022498                PIC::PIC()
                0x00000000c002256e                PIC::ioWait()
                0x00000000c0022574                PIC::getIRQReg(int)
                0x00000000c00225de                PIC::eoi(unsigned char)
                0x00000000c0022670                PIC::remap()
                0x00000000c00227dc                PIC::open(int, int, void*)
 *fill*         0x00000000c002281b        0x1 
 .text          0x00000000c002281c      0x240 hw/timer/apictimer.32
                0x00000000c002281c                APICTimer::close(int, int, void*)
                0x00000000c0022824                apicTimerHandler(regs*, void*)
                0x00000000c002284c                APICTimer::write(int)
                0x00000000c0022934                APICTimer::open(int, int, void*)
                0x00000000c0022a34                APICTimer::APICTimer()
                0x00000000c0022a34                APICTimer::APICTimer()
 .text          0x00000000c0022a5c      0x1a3 hw/timer/pit.32
                0x00000000c0022a5c                PIT::write(int)
                0x00000000c0022adc                pitHandler(regs*, void*)
                0x00000000c0022b00                PIT::open(int, int, void*)
                0x00000000c0022b50                PIT::close(int, int, void*)
                0x00000000c0022b80                PIT::PIT()
                0x00000000c0022b80                PIT::PIT()
 *fill*         0x00000000c0022bff        0x1 
 .text          0x00000000c0022c00       0x83 hw/fpu/x86/avx.32
                0x00000000c0022c00                avxDetect
                0x00000000c0022c2a                avxSave
                0x00000000c0022c3b                avxLoad
                0x00000000c0022c4c                avxInit
                0x00000000c0022c6e                avxClose
                0x00000000c0022c6f                wouldSheSayYes
 *fill*         0x00000000c0022c83        0xd 
 .text          0x00000000c0022c90       0x39 hw/fpu/x86/sse.32
                0x00000000c0022c90                absolutelyNoChanceInHell
                0x00000000c0022c90                sseDetect
                0x00000000c0022ca8                sseSave
                0x00000000c0022cb0                sseLoad
                0x00000000c0022cb8                sseInit
                0x00000000c0022cc8                sseClose
 *fill*         0x00000000c0022cc9        0x7 
 .text          0x00000000c0022cd0       0x49 hw/fpu/x86/x87.32
                0x00000000c0022cd6                x87Detect
                0x00000000c0022cf1                x87Save
                0x00000000c0022cf8                x87Load
                0x00000000c0022cff                x87Init
                0x00000000c0022d18                x87Close
 *fill*         0x00000000c0022d19        0x3 
 .text          0x00000000c0022d1c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0022d41        0x0 crtn.32
 *fill*         0x00000000c0022d41        0x3 
 .text          0x00000000c0022d44      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0022d44                __divdi3
 *fill*         0x00000000c0022e8f        0x1 
 .text          0x00000000c0022e90      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0022e90                __moddi3
 *fill*         0x00000000c002300e        0x2 
 .text          0x00000000c0023010       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0023010                __udivdi3
 *fill*         0x00000000c002310f        0x1 
 .text          0x00000000c0023110      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0023110                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0023230        0x0
 .iplt          0x00000000c0023230        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002322a        0xf
 .init          0x00000000c002322a        0x3 crti.32
                0x00000000c002322a                _init
 .init          0x00000000c002322d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0023232        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0023237        0x2 crtn.32

.fini           0x00000000c0023239        0xa
 .fini          0x00000000c0023239        0x3 crti.32
                0x00000000c0023239                _fini
 .fini          0x00000000c002323c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0023241        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c0023244       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0023244       0x23 core/computer.32
                0x00000000c0023244                Computer::~Computer()
                0x00000000c0023244                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0023268       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0023268       0x2a core/computer.32
                0x00000000c0023268                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0023292       0x21
 .text._Z10idleCommonv
                0x00000000c0023292       0x21 core/idle.32
                0x00000000c0023292                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00232b4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00232b4        0x2 core/unixfile.32
                0x00000000c00232b4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00232b4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00232b6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00232b6       0x42 core/unixfile.32
                0x00000000c00232b6                LinkedList<UnixFile>::LinkedList()
                0x00000000c00232b6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00232f8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00232f8       0xd3 core/unixfile.32
                0x00000000c00232f8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00233cc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00233cc        0x7 core/unixfile.32
                0x00000000c00233cc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00233d4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00233d4       0xa1 core/unixfile.32
                0x00000000c00233d4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0023476        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0023476        0x8 core/unixfile.32
                0x00000000c0023476                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002347e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c002347e       0x1a hal/device.32
                0x00000000c002347e                DriverlessDevice::~DriverlessDevice()
                0x00000000c002347e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0023498       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0023498       0x2a hal/device.32
                0x00000000c0023498                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00234c2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00234c2       0xdc hal/device.32
                0x00000000c00234c2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c002359e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c002359e       0x42 hal/device.32
                0x00000000c002359e                LinkedList<Device>::LinkedList()
                0x00000000c002359e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00235e0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00235e0       0x1c hal/timer.32
                0x00000000c00235e0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00235fc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00235fc        0x7 hal/timer.32
                0x00000000c00235fc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0023604       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0023604       0xb8 hal/timer.32
                0x00000000c0023604                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00236bc       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00236bc       0xda hal/timer.32
                0x00000000c00236bc                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0023798       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0023798       0x23 hw/acpi.32
                0x00000000c0023798                ACPI::~ACPI()
                0x00000000c0023798                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c00237bc       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c00237bc       0x2a hw/acpi.32
                0x00000000c00237bc                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00237e8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00237e8        0x2 hw/acpi.32
                0x00000000c00237e8                LinkedList<Device>::~LinkedList()
                0x00000000c00237e8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00237ec       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00237ec       0x1c hw/acpi.32
                0x00000000c00237ec                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0023808        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0023808        0x7 hw/acpi.32
                0x00000000c0023808                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0023810       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0023810       0xb8 hw/acpi.32
                0x00000000c0023810                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c00238c8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00238c8       0x23 hw/cpu.32
                0x00000000c00238c8                CPU::~CPU()
                0x00000000c00238c8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00238ec       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00238ec       0x2a hw/cpu.32
                0x00000000c00238ec                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0023918        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0023918        0x2 thr/prcssthr.32
                0x00000000c0023918                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0023918                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c002391c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c002391c       0x49 thr/prcssthr.32
                0x00000000c002391c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c002391c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0023968       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0023968       0x42 thr/prcssthr.32
                0x00000000c0023968                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0023968                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00239ac        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00239ac        0x8 thr/prcssthr.32
                0x00000000c00239ac                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c00239b4        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c00239b4        0xd vm86/x87em.32
                0x00000000c00239b4                Vm::_FPUState::_FPUState()
                0x00000000c00239b4                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c00239c2       0x23
 .text._ZN3PCID2Ev
                0x00000000c00239c2       0x23 hw/bus/pci.32
                0x00000000c00239c2                PCI::~PCI()
                0x00000000c00239c2                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00239e6       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00239e6       0x2a hw/bus/pci.32
                0x00000000c00239e6                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0023a10       0x23
 .text._ZN3IDED2Ev
                0x00000000c0023a10       0x23 hw/diskctrl/ide.32
                0x00000000c0023a10                IDE::~IDE()
                0x00000000c0023a10                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0023a34       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0023a34       0x2a hw/diskctrl/ide.32
                0x00000000c0023a34                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0023a5e       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0023a5e       0x23 hw/diskctrl/satabus.32
                0x00000000c0023a5e                SATABus::~SATABus()
                0x00000000c0023a5e                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0023a82       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0023a82       0x2a hw/diskctrl/satabus.32
                0x00000000c0023a82                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0023aac       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0023aac       0x23 hw/diskphys/ata.32
                0x00000000c0023aac                ATA::~ATA()
                0x00000000c0023aac                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0023ad0       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0023ad0       0x2a hw/diskphys/ata.32
                0x00000000c0023ad0                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0023afa       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0023afa       0x23 hw/diskphys/atapi.32
                0x00000000c0023afa                ATAPI::~ATAPI()
                0x00000000c0023afa                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0023b1e       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0023b1e       0x2a hw/diskphys/atapi.32
                0x00000000c0023b1e                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0023b48       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0023b48       0x23 hw/diskphys/sata.32
                0x00000000c0023b48                SATA::~SATA()
                0x00000000c0023b48                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0023b6c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0023b6c       0x2a hw/diskphys/sata.32
                0x00000000c0023b6c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0023b96       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0023b96       0x23 hw/diskphys/satapi.32
                0x00000000c0023b96                SATAPI::~SATAPI()
                0x00000000c0023b96                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0023bba       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0023bba       0x2a hw/diskphys/satapi.32
                0x00000000c0023bba                SATAPI::~SATAPI()

.text._ZN3AVXD2Ev
                0x00000000c0023be4       0x23
 .text._ZN3AVXD2Ev
                0x00000000c0023be4       0x23 hw/fpu/avx.32
                0x00000000c0023be4                AVX::~AVX()
                0x00000000c0023be4                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c0023c08       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c0023c08       0x2a hw/fpu/avx.32
                0x00000000c0023c08                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c0023c34       0x23
 .text._ZN3MMXD2Ev
                0x00000000c0023c34       0x23 hw/fpu/mmx.32
                0x00000000c0023c34                MMX::~MMX()
                0x00000000c0023c34                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c0023c58       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c0023c58       0x2a hw/fpu/mmx.32
                0x00000000c0023c58                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c0023c84       0x23
 .text._ZN3SSED2Ev
                0x00000000c0023c84       0x23 hw/fpu/sse.32
                0x00000000c0023c84                SSE::~SSE()
                0x00000000c0023c84                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c0023ca8       0x2a
 .text._ZN3SSED0Ev
                0x00000000c0023ca8       0x2a hw/fpu/sse.32
                0x00000000c0023ca8                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c0023cd2       0x23
 .text._ZN3x87D2Ev
                0x00000000c0023cd2       0x23 hw/fpu/x87.32
                0x00000000c0023cd2                x87::~x87()
                0x00000000c0023cd2                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c0023cf6       0x2a
 .text._ZN3x87D0Ev
                0x00000000c0023cf6       0x2a hw/fpu/x87.32
                0x00000000c0023cf6                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c0023d20       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0023d20       0x23 hw/intctrl/apic.32
                0x00000000c0023d20                IOAPIC::~IOAPIC()
                0x00000000c0023d20                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0023d44       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0023d44       0x2a hw/intctrl/apic.32
                0x00000000c0023d44                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c0023d6e       0x23
 .text._ZN4APICD2Ev
                0x00000000c0023d6e       0x23 hw/intctrl/apic.32
                0x00000000c0023d6e                APIC::~APIC()
                0x00000000c0023d6e                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c0023d92       0x2a
 .text._ZN4APICD0Ev
                0x00000000c0023d92       0x2a hw/intctrl/apic.32
                0x00000000c0023d92                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c0023dbc       0x23
 .text._ZN3PICD2Ev
                0x00000000c0023dbc       0x23 hw/intctrl/pic.32
                0x00000000c0023dbc                PIC::~PIC()
                0x00000000c0023dbc                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c0023de0       0x2a
 .text._ZN3PICD0Ev
                0x00000000c0023de0       0x2a hw/intctrl/pic.32
                0x00000000c0023de0                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0023e0c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0023e0c       0x23 hw/timer/apictimer.32
                0x00000000c0023e0c                APICTimer::~APICTimer()
                0x00000000c0023e0c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0023e30       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0023e30       0x2a hw/timer/apictimer.32
                0x00000000c0023e30                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0023e5c       0x23
 .text._ZN3PITD2Ev
                0x00000000c0023e5c       0x23 hw/timer/pit.32
                0x00000000c0023e5c                PIT::~PIT()
                0x00000000c0023e5c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0023e80       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0023e80       0x2a hw/timer/pit.32
                0x00000000c0023e80                PIT::~PIT()

.rodata         0x00000000c0023eaa     0x400e
                0x00000000c0023eaa                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0023eaa        0x2 
 .ctors         0x00000000c0023eac        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0023eb0        0x4 core/unixfile.32
 .ctors         0x00000000c0023eb4        0x4 thr/prcssthr.32
 .ctors         0x00000000c0023eb8        0x4 vm86/x87em.32
 .ctors         0x00000000c0023ebc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0023ec0                end_ctors = .
                0x00000000c0023ec0                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0023ec0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0023ec4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0023ec4                __DTOR_END__
                0x00000000c0023ec8                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0023ec8       0x18 
 .rodata        0x00000000c0023ee0      0x101 acpica/utclib.32
                0x00000000c0023ee0                AcpiGbl_Ctypes
 *fill*         0x00000000c0023fe1        0x3 
 .rodata        0x00000000c0023fe4       0x18 core/malloc.32
 *fill*         0x00000000c0023ffc        0x4 
 .rodata        0x00000000c0024000      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c0024120       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0024176        0xa 
 .rodata        0x00000000c0024180      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0024580       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c00245c9      0x321 core/computer.32
                                        0x323 (size before relaxing)
 *fill*         0x00000000c00248ea        0x2 
 .rodata.str1.4
                0x00000000c00248ec       0xcc core/computer.32
 .rodata._ZTV8Computer
                0x00000000c00249b8       0x2c core/computer.32
                0x00000000c00249b8                vtable for Computer
 .rodata.str1.1
                0x00000000c00249e4       0x2a core/kheap.32
 *fill*         0x00000000c0024a0e        0x2 
 .rodata.str1.4
                0x00000000c0024a10       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0024a40       0x99 core/main.32
 *fill*         0x00000000c0024ad9        0x3 
 .rodata.str1.4
                0x00000000c0024adc       0x1f core/main.32
 .rodata.str1.1
                0x00000000c0024afb       0xea core/physmgr.32
                                         0xee (size before relaxing)
 *fill*         0x00000000c0024be5        0x3 
 .rodata.str1.4
                0x00000000c0024be8       0xc9 core/physmgr.32
 .rodata.str1.1
                0x00000000c0024cb1       0x39 core/pipe.32
 *fill*         0x00000000c0024cea        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0024cec       0x1c core/pipe.32
                0x00000000c0024cec                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024d08       0x69 core/terminal.32
 *fill*         0x00000000c0024d71        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0024d74       0x1c core/terminal.32
                0x00000000c0024d74                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0024d90       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0024db2       0x15 core/unixfile.32
 *fill*         0x00000000c0024dc7        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0024dc8       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0024e13        0x8 core/unixfile.32
 *fill*         0x00000000c0024e1b        0x1 
 .rodata.str1.4
                0x00000000c0024e1c       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0024e3c       0x1c core/unixfile.32
                0x00000000c0024e3c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024e58       0x1c core/unixfile.32
                0x00000000c0024e58                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024e74      0x1b8 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002502c      0x194 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00251c0       0x83 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0025243       0x11 dbg/kconsole.32
 *fill*         0x00000000c0025243        0x1 
 .rodata        0x00000000c0025244      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0025394       0x25 fs/vfs.32
                                         0x33 (size before relaxing)
 *fill*         0x00000000c00253b9        0x3 
 .rodata.str1.4
                0x00000000c00253bc       0x54 fs/vfs.32
 .rodata._ZTV10Filesystem
                0x00000000c0025410       0x68 fs/vfs.32
                0x00000000c0025410                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0025478       0x1c fs/vfs.32
                0x00000000c0025478                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0025494       0x1c fs/vfs.32
                0x00000000c0025494                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00254b0       0x2c hal/bus.32
                0x00000000c00254b0                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c00254dc       0x30 hal/buzzer.32
                0x00000000c00254dc                vtable for Buzzer
 .rodata.str1.1
                0x00000000c002550c       0x1e hal/clock.32
 *fill*         0x00000000c002552a        0x2 
 .rodata._ZTV5Clock
                0x00000000c002552c       0x3c hal/clock.32
                0x00000000c002552c                vtable for Clock
 *fill*         0x00000000c0025568       0x18 
 .rodata        0x00000000c0025580       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00255b0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0025608       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0025608       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0025608       0x2c hal/device.32
                0x00000000c0025608                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0025634       0x2c hal/device.32
                0x00000000c0025634                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0025660       0x2c hal/diskctrl.32
                0x00000000c0025660                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002568c       0x38 hal/diskphys.32
                0x00000000c002568c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00256c4       0x26 hal/fpu.32
 *fill*         0x00000000c00256ea        0x2 
 .rodata._ZTV3FPU
                0x00000000c00256ec       0x38 hal/fpu.32
                0x00000000c00256ec                vtable for FPU
 .rodata        0x00000000c0025724      0x370 hal/intctrl.32
 .rodata._ZTV19InterruptController
                0x00000000c0025a94       0x48 hal/intctrl.32
                0x00000000c0025a94                vtable for InterruptController
 .rodata        0x00000000c0025adc       0x53 hal/keybrd.32
 *fill*         0x00000000c0025b2f        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0025b30       0x34 hal/keybrd.32
                0x00000000c0025b30                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0025b64       0x9a hal/logidisk.32
 *fill*         0x00000000c0025bfe        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0025c00       0x2c hal/logidisk.32
                0x00000000c0025c00                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0025c2c       0x2c hal/mouse.32
                0x00000000c0025c2c                vtable for Mouse
 .rodata.str1.1
                0x00000000c0025c58        0xb hal/partition.32
 *fill*         0x00000000c0025c63        0x1 
 .rodata._ZTV6Serial
                0x00000000c0025c64       0x44 hal/serial.32
                0x00000000c0025c64                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0025ca8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0025ca8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0025ca8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0025ca8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0025ca8       0x30 hal/timer.32
                0x00000000c0025ca8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0025cd8       0x10 hal/vcache.32
                0x00000000c0025cd8                vtable for VCache
 .rodata.str1.1
                0x00000000c0025ce8       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c0025d50       0x48 hal/video.32
                0x00000000c0025d50                vtable for Video
 .rodata.str1.4
                0x00000000c0025d98      0x123 hw/acpi.32
 .rodata.str1.1
                0x00000000c0025ebb      0x2a0 hw/acpi.32
                                        0x2ba (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c002615b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c002615b        0x8 hw/acpi.32
 *fill*         0x00000000c002615b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c002615c       0x2c hw/acpi.32
                0x00000000c002615c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0026188      0x563 hw/cpu.32
                                        0x570 (size before relaxing)
 *fill*         0x00000000c00266eb        0x1 
 .rodata._ZTV3CPU
                0x00000000c00266ec       0x2c hw/cpu.32
                0x00000000c00266ec                vtable for CPU
 .rodata.str1.1
                0x00000000c0026718       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c0026729       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0026765       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 *fill*         0x00000000c0026805        0x3 
 .rodata.str1.4
                0x00000000c0026808      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c0026946       0x2f krnl/powctrl.32
 .rodata.str1.1
                0x00000000c0026975       0x31 krnl/rand.32
 *fill*         0x00000000c00269a6        0x2 
 .rodata.str1.4
                0x00000000c00269a8       0x4c net/ethernet.32
 .rodata.str1.1
                0x00000000c00269f4       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0026a39       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c0026a8d       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c0026ab9       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0026b01      0x247 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c0026d48       0x57 thr/prcssthr.32
 *fill*         0x00000000c0026d9f        0x1 
 .rodata.str1.4
                0x00000000c0026da0      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0026eac       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0026eac       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0026eac       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0026eac        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0026eac       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0026f4c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0026f7c       0x58 vm86/x87em.32
 .rodata        0x00000000c0026fd4       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c0027010       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0027051        0x3 
 .rodata._ZTV3FAT
                0x00000000c0027054       0x68 fs/fat/vfslink.32
                0x00000000c0027054                vtable for FAT
 .rodata.str1.1
                0x00000000c00270bc       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c00270d7        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c00270d8       0x68 fs/iso9660/vfslink.32
                0x00000000c00270d8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0027140       0xc3 hal/sound/sndcard.32
                                         0xdb (size before relaxing)
 *fill*         0x00000000c0027203        0x1 
 .rodata._ZTV9SoundCard
                0x00000000c0027204       0x34 hal/sound/sndcard.32
                0x00000000c0027204                vtable for SoundCard
 .rodata.str1.1
                0x00000000c0027238       0x6e hal/sound/sndport.32
 *fill*         0x00000000c00272a6        0x2 
 .rodata.str1.4
                0x00000000c00272a8       0x93 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002733b      0x1cd hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0027508       0x2c hw/bus/pci.32
                0x00000000c0027508                vtable for PCI
 .rodata.str1.1
                0x00000000c0027534       0xa3 hw/diskctrl/ide.32
 *fill*         0x00000000c00275d7        0x1 
 .rodata._ZTV3IDE
                0x00000000c00275d8       0x2c hw/diskctrl/ide.32
                0x00000000c00275d8                vtable for IDE
 .rodata.str1.4
                0x00000000c0027604       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata.str1.1
                0x00000000c0027628       0x7b hw/diskctrl/satabus.32
 *fill*         0x00000000c00276a3        0x1 
 .rodata._ZTV7SATABus
                0x00000000c00276a4       0x2c hw/diskctrl/satabus.32
                0x00000000c00276a4                vtable for SATABus
 .rodata.str1.1
                0x00000000c00276d0       0x4b hw/diskphys/ata.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c002771b        0x1 
 .rodata._ZTV3ATA
                0x00000000c002771c       0x38 hw/diskphys/ata.32
                0x00000000c002771c                vtable for ATA
 .rodata.str1.1
                0x00000000c0027754       0x40 hw/diskphys/atapi.32
                                         0x6f (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c0027794       0x38 hw/diskphys/atapi.32
                0x00000000c0027794                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00277cc      0x202 hw/diskphys/sata.32
 *fill*         0x00000000c00279ce        0x2 
 .rodata._ZTV4SATA
                0x00000000c00279d0       0x38 hw/diskphys/sata.32
                0x00000000c00279d0                vtable for SATA
 .rodata.str1.1
                0x00000000c0027a08      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c0027b3a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0027b3c       0x38 hw/diskphys/satapi.32
                0x00000000c0027b3c                vtable for SATAPI
 .rodata.str1.1
                0x00000000c0027b74        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c0027b7c       0x38 hw/fpu/avx.32
                0x00000000c0027b7c                vtable for AVX
 .rodata.str1.1
                0x00000000c0027bb4        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0027bbc       0x38 hw/fpu/mmx.32
                0x00000000c0027bbc                vtable for MMX
 .rodata.str1.1
                0x00000000c0027bf4        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0027bfc       0x38 hw/fpu/sse.32
                0x00000000c0027bfc                vtable for SSE
 .rodata        0x00000000c0027c34        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0027c3c       0x38 hw/fpu/x87.32
                0x00000000c0027c3c                vtable for x87
 .rodata        0x00000000c0027c74       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0027d4c       0x48 hw/intctrl/apic.32
                0x00000000c0027d4c                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0027d94       0x2c hw/intctrl/apic.32
                0x00000000c0027d94                vtable for IOAPIC
 .rodata        0x00000000c0027dc0       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c0027de2        0x2 
 .rodata._ZTV3PIC
                0x00000000c0027de4       0x48 hw/intctrl/pic.32
                0x00000000c0027de4                vtable for PIC
 .rodata.str1.1
                0x00000000c0027e2c        0xb hw/timer/apictimer.32
 *fill*         0x00000000c0027e37        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0027e38       0x30 hw/timer/apictimer.32
                0x00000000c0027e38                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0027e68       0x1d hw/timer/pit.32
 *fill*         0x00000000c0027e85        0x3 
 .rodata._ZTV3PIT
                0x00000000c0027e88       0x30 hw/timer/pit.32
                0x00000000c0027e88                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0027eb8      0x7bd
 *(.data)
 .data          0x00000000c0027eb8        0x0 crti.32
 .data          0x00000000c0027eb8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0027eb8                __dso_handle
 .data          0x00000000c0027ebc        0x0 acpica/utclib.32
 .data          0x00000000c0027ebc        0x0 core/malloc.32
 .data          0x00000000c0027ebc        0x0 libk/string.32
 .data          0x00000000c0027ebc        0x0 fs/fat/diskio.32
 .data          0x00000000c0027ebc        0x0 fs/fat/ff.32
 .data          0x00000000c0027ebc        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0027ebc        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0027ebc        0x0 compat/inlines.32
 .data          0x00000000c0027ebc        0x0 compat/resolve.32
 .data          0x00000000c0027ebc        0x0 core/computer.32
 .data          0x00000000c0027ebc        0x0 core/gdt.32
 .data          0x00000000c0027ebc        0x0 core/idle.32
 .data          0x00000000c0027ebc        0x0 core/idt.32
 .data          0x00000000c0027ebc        0x4 core/kheap.32
 .data          0x00000000c0027ec0      0x142 core/main.32
                0x00000000c0027ec0                titleScreen
 *fill*         0x00000000c0028002        0x2 
 .data          0x00000000c0028004        0x4 core/physmgr.32
                0x00000000c0028004                Phys::bitmap
 .data          0x00000000c0028008        0x0 core/pipe.32
 *fill*         0x00000000c0028008       0x18 
 .data          0x00000000c0028020       0x60 core/terminal.32
                0x00000000c0028020                VgaText::hiddenOut
                0x00000000c0028040                ansiToVGAMappings
 .data          0x00000000c0028080        0x0 core/tss.32
 .data          0x00000000c0028080        0x4 core/unixfile.32
                0x00000000c0028080                UnixFile::nextFd
 .data          0x00000000c0028084       0x15 core/virtmgr.32
                0x00000000c0028084                Virt::pageAllocPtr
                0x00000000c0028088                Virt::bitmap
                0x00000000c002808c                Virt::swapfileSectorsPerPage
                0x00000000c0028090                Virt::swapfileLength
                0x00000000c0028094                Virt::swapfileSector
                0x00000000c0028098                Virt::swapfileDrive
 *fill*         0x00000000c0028099        0x3 
 .data          0x00000000c002809c        0x4 coreobjs/c++.32
                0x00000000c002809c                __stack_chk_guard
 .data          0x00000000c00280a0        0x0 dbg/kconsole.32
 .data          0x00000000c00280a0        0x0 fs/vfs.32
 .data          0x00000000c00280a0        0x0 hal/bus.32
 .data          0x00000000c00280a0        0x0 hal/buzzer.32
 .data          0x00000000c00280a0        0x0 hal/clock.32
 .data          0x00000000c00280a0        0x0 hal/device.32
 .data          0x00000000c00280a0        0x0 hal/diskctrl.32
 .data          0x00000000c00280a0        0x0 hal/diskphys.32
 .data          0x00000000c00280a0        0x0 hal/fpu.32
 .data          0x00000000c00280a0      0x2a0 hal/intctrl.32
                0x00000000c00280a0                Krnl::exceptionNames
 .data          0x00000000c0028340        0x0 hal/keybrd.32
 .data          0x00000000c0028340        0x0 hal/logidisk.32
 .data          0x00000000c0028340        0x0 hal/mouse.32
 .data          0x00000000c0028340        0x0 hal/partition.32
 .data          0x00000000c0028340        0x0 hal/serial.32
 .data          0x00000000c0028340        0x0 hal/timer.32
 .data          0x00000000c0028340        0x0 hal/vcache.32
 .data          0x00000000c0028340        0x0 hal/video.32
 .data          0x00000000c0028340       0x10 hw/acpi.32
                0x00000000c0028340                legacyIRQRemaps
 *fill*         0x00000000c0028350       0x10 
 .data          0x00000000c0028360      0x2a4 hw/cpu.32
                0x00000000c0028360                cpuNameList
                0x00000000c0028600                lastCode
 .data          0x00000000c0028604        0x0 hw/ports.32
 .data          0x00000000c0028604        0x0 hw/smp.32
 *fill*         0x00000000c0028604       0x1c 
 .data          0x00000000c0028620       0x4d krnl/env.32
                0x00000000c0028620                defaultSysEnv
 .data          0x00000000c002866d        0x0 krnl/panic.32
 .data          0x00000000c002866d        0x0 krnl/powctrl.32
 .data          0x00000000c002866d        0x0 krnl/rand.32
 .data          0x00000000c002866d        0x0 net/ethernet.32
 .data          0x00000000c002866d        0x0 reg/registry.32
 .data          0x00000000c002866d        0x0 sys/sc_eject.32
 .data          0x00000000c002866d        0x0 sys/sc_exit.32
 .data          0x00000000c002866d        0x0 sys/sc_getcwd.32
 .data          0x00000000c002866d        0x0 sys/sc_getpid.32
 .data          0x00000000c002866d        0x0 sys/sc_getramdata.32
 .data          0x00000000c002866d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c002866d        0x0 sys/sc_loaddll.32
 .data          0x00000000c002866d        0x0 sys/sc_read.32
 .data          0x00000000c002866d        0x0 sys/sc_sbrk.32
 .data          0x00000000c002866d        0x0 sys/sc_setcwd.32
 .data          0x00000000c002866d        0x0 sys/sc_settime.32
 .data          0x00000000c002866d        0x0 sys/sc_timezone.32
 .data          0x00000000c002866d        0x0 sys/sc_write.32
 .data          0x00000000c002866d        0x0 sys/sc_wsbe.32
 .data          0x00000000c002866d        0x0 sys/sc_yield.32
 .data          0x00000000c002866d        0x0 sys/syscalls.32
 .data          0x00000000c002866d        0x0 thr/elf.32
 *fill*         0x00000000c002866d        0x3 
 .data          0x00000000c0028670        0x4 thr/prcssthr.32
                0x00000000c0028670                Thr::nextPID
 .data          0x00000000c0028674        0x0 vm86/vm8086.32
 .data          0x00000000c0028674        0x0 vm86/x87em.32
 .data          0x00000000c0028674        0x0 fs/fat/vfslink.32
 .data          0x00000000c0028674        0x1 fs/iso9660/vfslink.32
                0x00000000c0028674                recentDriveletter
 .data          0x00000000c0028675        0x0 hal/sound/sndcard.32
 .data          0x00000000c0028675        0x0 hal/sound/sndport.32
 .data          0x00000000c0028675        0x0 hw/bus/isa.32
 .data          0x00000000c0028675        0x0 hw/bus/pci.32
 .data          0x00000000c0028675        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0028675        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0028675        0x0 hw/diskphys/ata.32
 .data          0x00000000c0028675        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0028675        0x0 hw/diskphys/sata.32
 .data          0x00000000c0028675        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0028675        0x0 hw/fpu/avx.32
 .data          0x00000000c0028675        0x0 hw/fpu/mmx.32
 .data          0x00000000c0028675        0x0 hw/fpu/sse.32
 .data          0x00000000c0028675        0x0 hw/fpu/x87.32
 .data          0x00000000c0028675        0x0 hw/intctrl/apic.32
 .data          0x00000000c0028675        0x0 hw/intctrl/pic.32
 .data          0x00000000c0028675        0x0 hw/timer/apictimer.32
 .data          0x00000000c0028675        0x0 hw/timer/pit.32
 .data          0x00000000c0028675        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0028675        0x0 crtn.32
 .data          0x00000000c0028675        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0028675        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0028675        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0028675        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0028678        0x0
 .got           0x00000000c0028678        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0028678        0x0
 .got.plt       0x00000000c0028678        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0028678        0x0
 .igot.plt      0x00000000c0028678        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0028678        0x0
 .tm_clone_table
                0x00000000c0028678        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0028678        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0028675      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0028675        0x3 
 .eh_frame      0x00000000c0028678        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0028678        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0028678       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00286d0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0028710       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002877c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c0028800        0x0
 .rel.got       0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028800        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028800     0x23e8
                0x00000000c0028800                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0028800        0x0 crti.32
 .bss           0x00000000c0028800       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0028820        0x4 acpica/utclib.32
 *fill*         0x00000000c0028824       0x1c 
 .bss           0x00000000c0028840      0x378 core/malloc.32
 .bss           0x00000000c0028bb8        0x0 libk/string.32
 .bss           0x00000000c0028bb8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028bb8        0x8 
 .bss           0x00000000c0028bc0       0x88 fs/fat/ff.32
 .bss           0x00000000c0028c48        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028c48        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0028c48        0x0 compat/inlines.32
 .bss           0x00000000c0028c48        0x0 compat/resolve.32
 .bss           0x00000000c0028c48        0x6 core/computer.32
                0x00000000c0028c48                Krnl::computer
                0x00000000c0028c4c                Krnl::preemptionOn
                0x00000000c0028c4d                Krnl::schedulingOn
 *fill*         0x00000000c0028c4e        0x2 
 .bss           0x00000000c0028c50        0x6 core/gdt.32
                0x00000000c0028c50                gdtDescr
 .bss           0x00000000c0028c56        0x0 core/idle.32
 *fill*         0x00000000c0028c56        0x2 
 .bss           0x00000000c0028c58        0x6 core/idt.32
                0x00000000c0028c58                idtDescr
 .bss           0x00000000c0028c5e        0x0 core/kheap.32
 *fill*         0x00000000c0028c5e        0x2 
 .bss           0x00000000c0028c60        0x4 core/main.32
                0x00000000c0028c60                sysBootSettings
 .bss           0x00000000c0028c64       0x29 core/physmgr.32
                0x00000000c0028c64                Phys::forbidEvictions
                0x00000000c0028c68                Phys::currentPagePointer
                0x00000000c0028c6c                Phys::highestMem
                0x00000000c0028c70                Phys::oldPercent
                0x00000000c0028c74                Phys::usedPages
                0x00000000c0028c78                Phys::usablePages
                0x00000000c0028c7c                Phys::dmaUsage
 .bss           0x00000000c0028c8d        0x0 core/pipe.32
 *fill*         0x00000000c0028c8d       0x13 
 .bss           0x00000000c0028ca0       0x29 core/terminal.32
                0x00000000c0028ca0                textModeImplementation
                0x00000000c0028cc0                terminalCycle
                0x00000000c0028cc4                activeTerminal
                0x00000000c0028cc8                VgaText::graphicMode
 *fill*         0x00000000c0028cc9        0x1 
 .bss           0x00000000c0028cca        0x2 core/tss.32
                0x00000000c0028cca                doubleFaultSelector
 *fill*         0x00000000c0028ccc       0x14 
 .bss           0x00000000c0028ce0       0x84 core/unixfile.32
                0x00000000c0028ce0                sfileLpt
                0x00000000c0028d20                sfileCom
                0x00000000c0028d44                sfileNul
                0x00000000c0028d48                sfilePnt
                0x00000000c0028d4c                sfileAux
                0x00000000c0028d50                sfileCon
                0x00000000c0028d54                initialFilesAdded
                0x00000000c0028d58                unixFileLinkedList
 .bss           0x00000000c0028d64       0x14 core/virtmgr.32
                0x00000000c0028d64                twswaps
                0x00000000c0028d68                swapBalance
                0x00000000c0028d6c                panicVAS
                0x00000000c0028d70                Virt::swapfileBitmap
                0x00000000c0028d74                firstVAS
 .bss           0x00000000c0028d78        0x0 coreobjs/c++.32
 .bss           0x00000000c0028d78        0x0 dbg/kconsole.32
 .bss           0x00000000c0028d78        0x4 fs/vfs.32
                0x00000000c0028d78                installedFilesystems
 .bss           0x00000000c0028d7c        0x0 hal/bus.32
 .bss           0x00000000c0028d7c        0x4 hal/buzzer.32
                0x00000000c0028d7c                systemBuzzer
 .bss           0x00000000c0028d80        0x8 hal/clock.32
                0x00000000c0028d80                User::dstOn
                0x00000000c0028d81                User::timezoneHalfHourOffset
                0x00000000c0028d84                User::timezoneHourOffset
 .bss           0x00000000c0028d88        0x0 hal/device.32
 .bss           0x00000000c0028d88        0x0 hal/diskctrl.32
 .bss           0x00000000c0028d88        0x0 hal/diskphys.32
 .bss           0x00000000c0028d88        0x0 hal/fpu.32
 .bss           0x00000000c0028d88        0x8 hal/intctrl.32
                0x00000000c0028d88                gpFaultIntercept
                0x00000000c0028d8c                Krnl::fpuOwner
 *fill*         0x00000000c0028d90       0x10 
 .bss           0x00000000c0028da0      0x429 hal/keybrd.32
                0x00000000c0028da0                keyboardWaitingTaskList
                0x00000000c0028da4                keyboardSetupYet
                0x00000000c0028da8                guiKeyboardHandler
                0x00000000c0028dc0                keystates
 *fill*         0x00000000c00291c9       0x17 
 .bss           0x00000000c00291e0       0x88 hal/logidisk.32
                0x00000000c00291e0                diskAssignments
                0x00000000c0029200                disks
 .bss           0x00000000c0029268        0x4 hal/mouse.32
                0x00000000c0029268                guiMouseHandler
 .bss           0x00000000c002926c        0x0 hal/partition.32
 .bss           0x00000000c002926c        0x0 hal/serial.32
 .bss           0x00000000c002926c        0x4 hal/timer.32
                0x00000000c002926c                milliTenthsSinceBoot
 .bss           0x00000000c0029270        0x0 hal/vcache.32
 .bss           0x00000000c0029270        0x4 hal/video.32
                0x00000000c0029270                screen
 *fill*         0x00000000c0029274        0xc 
 .bss           0x00000000c0029280      0x480 hw/acpi.32
                0x00000000c0029280                systemSleepFunction
                0x00000000c0029284                systemResetFunction
                0x00000000c0029288                systemShutdownFunction
                0x00000000c002928c                nextACPITable
                0x00000000c00292a0                acpiTables
                0x00000000c00294a0                usingXSDT
                0x00000000c00294a4                MADTpointer
                0x00000000c00294a8                RSDTpointer
                0x00000000c00294ac                RSDPpointer
                0x00000000c00294b0                nextAPICNMI
                0x00000000c00294c0                apicNMIInfo
                0x00000000c0029540                legacyIRQFlags
                0x00000000c0029560                ioapicDiscoveryNumber
                0x00000000c0029580                ioapicFoundInMADT
                0x00000000c00295a0                ioapicAddresses
                0x00000000c0029620                ioapicGSIBase
                0x00000000c00296a0                processorDiscoveryNumber
                0x00000000c00296c0                matchingAPICID
                0x00000000c00296e0                processorID
 .bss           0x00000000c0029700       0x10 hw/cpu.32
                0x00000000c0029700                lastD
                0x00000000c0029704                lastC
                0x00000000c0029708                lastB
                0x00000000c002970c                lastA
 .bss           0x00000000c0029710        0x0 hw/ports.32
 .bss           0x00000000c0029710        0x1 hw/smp.32
                0x00000000c0029710                Krnl::bspID
 *fill*         0x00000000c0029711        0x3 
 .bss           0x00000000c0029714        0x8 krnl/env.32
                0x00000000c0029714                Krnl::userEnv
                0x00000000c0029718                Krnl::systemEnv
 .bss           0x00000000c002971c        0x9 krnl/panic.32
                0x00000000c002971c                Krnl::guiProgramFaultHandler
                0x00000000c0029720                Krnl::guiPanicHandler
                0x00000000c0029724                Krnl::kernelInPanic
 *fill*         0x00000000c0029725       0x1b 
 .bss           0x00000000c0029740       0x48 krnl/powctrl.32
                0x00000000c0029740                Krnl::powCtrlOnBattery
                0x00000000c0029760                Krnl::currentPowerSettings
                0x00000000c0029784                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0029788        0x9 krnl/rand.32
                0x00000000c0029788                Krnl::lcg
                0x00000000c0029790                Krnl::initedRand
 .bss           0x00000000c0029791        0x0 net/ethernet.32
 .bss           0x00000000c0029791        0x0 reg/registry.32
 .bss           0x00000000c0029791        0x0 sys/sc_eject.32
 .bss           0x00000000c0029791        0x0 sys/sc_exit.32
 .bss           0x00000000c0029791        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0029791        0x0 sys/sc_getpid.32
 .bss           0x00000000c0029791        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0029791        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0029791        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0029791        0x0 sys/sc_read.32
 .bss           0x00000000c0029791        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0029791        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0029791        0x0 sys/sc_settime.32
 .bss           0x00000000c0029791        0x0 sys/sc_timezone.32
 .bss           0x00000000c0029791        0x0 sys/sc_write.32
 .bss           0x00000000c0029791        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0029791        0x0 sys/sc_yield.32
 *fill*         0x00000000c0029791        0xf 
 .bss           0x00000000c00297a0      0x200 sys/syscalls.32
                0x00000000c00297a0                systemCallHandlers
 .bss           0x00000000c00299a0      0x7a4 thr/elf.32
                0x00000000c00299a0                Thr::driverLookupNext
                0x00000000c00299c0                Thr::driverLookupLen
                0x00000000c0029bc0                Thr::driverLookupAddr
                0x00000000c0029dc0                Thr::driverNameLookup
                0x00000000c0029fc0                Thr::kernelSymbols
                0x00000000c002a040                Thr::kernelStringTable
                0x00000000c002a0c0                Thr::kernelSymbolTable
                0x00000000c002a140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002a144        0x4 
 .bss           0x00000000c002a148       0x68 thr/prcssthr.32
                0x00000000c002a148                cleanerThread
                0x00000000c002a14c                weNeedTheCleanerToNotBlock
                0x00000000c002a150                retValLockStuff
                0x00000000c002a154                retValSchedLock
                0x00000000c002a158                lockStuffLock
                0x00000000c002a15c                schedulerLock
                0x00000000c002a160                taskSwitchesPostponedFlag
                0x00000000c002a164                postponeTaskSwitchesCounter
                0x00000000c002a168                irqDisableCounter
                0x00000000c002a16c                terminatedTaskList
                0x00000000c002a178                sleepingTaskList
                0x00000000c002a184                taskList
                0x00000000c002a190                kernelProcess
 *fill*         0x00000000c002a1b0       0x10 
 .bss           0x00000000c002a1c0       0x40 vm86/vm8086.32
                0x00000000c002a1c0                Vm::vmRetV
                0x00000000c002a1c4                Vm::vmDone
                0x00000000c002a1c5                Vm::vmReady
                0x00000000c002a1c8                Vm::vm86Thread
                0x00000000c002a1cc                Vm::vmToHostCommsPtr
                0x00000000c002a1e0                Vm::vmToHostComms
 .bss           0x00000000c002a200       0x48 vm86/x87em.32
                0x00000000c002a200                Vm::fpuState
 *fill*         0x00000000c002a248       0x18 
 .bss           0x00000000c002a260       0xf0 fs/fat/vfslink.32
                0x00000000c002a260                FAT::fats
                0x00000000c002a280                FAT::vfsToFatRemaps
                0x00000000c002a300                fatToVFSRemaps
 *fill*         0x00000000c002a350       0x10 
 .bss           0x00000000c002a360      0x820 fs/iso9660/vfslink.32
                0x00000000c002a360                recentSector
                0x00000000c002a380                recentBuffer
 .bss           0x00000000c002ab80        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002ab80        0x0 hal/sound/sndport.32
 .bss           0x00000000c002ab80        0x0 hw/bus/isa.32
 .bss           0x00000000c002ab80        0xd hw/bus/pci.32
                0x00000000c002ab80                thePCI
 .bss           0x00000000c002ab8d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002ab8d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002ab8d        0x3 
 .bss           0x00000000c002ab90        0x8 hw/diskphys/ata.32
                0x00000000c002ab90                ataSectorsWritten
                0x00000000c002ab94                ataSectorsRead
 .bss           0x00000000c002ab98        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002ab98        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002ab98        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c002ab98        0x0 hw/fpu/avx.32
 .bss           0x00000000c002ab98        0x0 hw/fpu/mmx.32
 .bss           0x00000000c002ab98        0x0 hw/fpu/sse.32
 .bss           0x00000000c002ab98        0x0 hw/fpu/x87.32
 *fill*         0x00000000c002ab98        0x8 
 .bss           0x00000000c002aba0       0x41 hw/intctrl/apic.32
                0x00000000c002aba0                noOfIOAPICs
                0x00000000c002abc0                ioapics
                0x00000000c002abe0                IOAPICsSetupYet
 .bss           0x00000000c002abe1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c002abe1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002abe1        0x3 
 .bss           0x00000000c002abe4        0x4 hw/timer/pit.32
                0x00000000c002abe4                pitFreq
 .bss           0x00000000c002abe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002abe8        0x0 crtn.32
 .bss           0x00000000c002abe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002abe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002abe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002abe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002abe8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002cfd0                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
