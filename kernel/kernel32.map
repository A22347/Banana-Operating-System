Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2035e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x254 dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f06                Dbg::logs(char*)
                0x00000000c0006f25                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f43                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f64                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000709a        0x2 
 .text          0x00000000c000709c      0x2d4 dbg/usban.32
                0x00000000c000709c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007108                __ubsan_handle_type_mismatch_v1
                0x00000000c00071e4                __ubsan_handle_pointer_overflow
                0x00000000c0007210                __ubsan_handle_out_of_bounds
                0x00000000c000723c                __ubsan_handle_add_overflow
                0x00000000c0007268                __ubsan_handle_load_invalid_value
                0x00000000c0007294                __ubsan_handle_divrem_overflow
                0x00000000c00072c0                __ubsan_handle_mul_overflow
                0x00000000c00072ec                __ubsan_handle_sub_overflow
                0x00000000c0007318                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007344                __ubsan_handle_negate_overflow
 .text          0x00000000c0007370      0x814 fs/symlink.32
                0x00000000c00074bf                KiDeinitialiseSymlinks(void*)
                0x00000000c0007552                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075d5                KeInitialiseSymlinks()
                0x00000000c0007737                KiIsSymlinkRegistered(char const*)
                0x00000000c00078a1                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a48                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b84      0xd88 fs/vfs.32
                0x00000000c0007b84                File::read(unsigned long long, void*, int*)
                0x00000000c0007bdc                File::write(unsigned long long, void*, int*)
                0x00000000c0007c34                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cba                File::isAtty()
                0x00000000c0007cbe                Directory::isAtty()
                0x00000000c0007cc2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cc8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cce                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cf8                File::~File()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d46                Directory::~Directory()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007da2                Filesystem::~Filesystem()
                0x00000000c0007dc6                Fs::getcwd(Process*, char*, int)
                0x00000000c0007df0                Fs::initVFS()
                0x00000000c0007e1a                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008150                File::open(FileOpenMode)
                0x00000000c00081ae                File::close()
                0x00000000c000820e                File::seek(unsigned long long)
                0x00000000c0008264                File::truncate(unsigned long long)
                0x00000000c00082ba                File::tell(unsigned long long*)
                0x00000000c000830a                File::rewind()
                0x00000000c000831e                File::unlink()
                0x00000000c000836a                File::rename(char const*)
                0x00000000c00083b8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0008414                File::exists()
                0x00000000c0008452                File::stat(unsigned long long*, bool*)
                0x00000000c00084b3                Fs::setcwd(Process*, char*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c00086da                Directory::open()
                0x00000000c0008736                Directory::close()
                0x00000000c0008796                Directory::unlink()
                0x00000000c00087e2                Directory::rename(char const*)
                0x00000000c0008830                Directory::exists()
                0x00000000c000886e                Directory::read(dirent*)
                0x00000000c00088ba                Directory::create()
                0x00000000c0008906                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000890c       0x86 hal/bus.32
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008968                Bus::~Bus()
 .text          0x00000000c0008992       0x99 hal/buzzer.32
                0x00000000c0008992                KeBeepThread(void*)
                0x00000000c00089d2                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a2b        0x1 
 .text          0x00000000c0008a2c      0x513 hal/clock.32
                0x00000000c0008a2c                KeLoadClockSettings()
                0x00000000c0008b32                Clock::Clock(char const*)
                0x00000000c0008b32                Clock::Clock(char const*)
                0x00000000c0008b68                Clock::~Clock()
                0x00000000c0008b68                Clock::~Clock()
                0x00000000c0008b8c                Clock::~Clock()
                0x00000000c0008bb6                Clock::timeInSecondsLocal()
                0x00000000c0008bfe                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0008c57                KeDatetimeToSeconds(datetime_t)
                0x00000000c0008d76                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0008dd6                KeSecondsToDatetime(unsigned long long)
                0x00000000c0008f1a                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0008f3f        0x1 
 .text          0x00000000c0008f40      0x47a hal/device.32
                0x00000000c0008f40                Device::hibernate()
                0x00000000c0008f42                Device::wake()
                0x00000000c0008f44                Device::detect()
                0x00000000c0008f46                Device::disableLegacy()
                0x00000000c0008f48                Device::powerSaving(PowerSavingLevel)
                0x00000000c0008f4a                DriverlessDevice::close(int, int, void*)
                0x00000000c0008f4e                DriverlessDevice::detect()
                0x00000000c0008f50                DriverlessDevice::open(int, int, void*)
                0x00000000c0008f64                Device::~Device()
                0x00000000c0008f64                Device::~Device()
                0x00000000c0008f72                Device::~Device()
                0x00000000c0008f9a                Device::findAndLoadDriver()
                0x00000000c0008fa8                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0008fce                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000900e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009038                Device::getParent()
                0x00000000c0009044                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009062                Device::addChild(Device*)
                0x00000000c00090a6                Device::removeAllChildren()
                0x00000000c00090ec                Device::hibernateAll()
                0x00000000c000911c                Device::wakeAll()
                0x00000000c000914c                Device::detectAll()
                0x00000000c000917c                Device::disableLegacyAll()
                0x00000000c000917e                Device::loadDriversForAll()
                0x00000000c0009180                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00091b6                Device::setName(char const*)
                0x00000000c00091c4                Device::Device(char const*)
                0x00000000c00091c4                Device::Device(char const*)
                0x00000000c00092c0                Device::getName()
                0x00000000c00092ca                Device::closeAll()
                0x00000000c0009316                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009316                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000934c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009390                getDevicesOfType(DeviceType)
 *fill*         0x00000000c00093ba        0x2 
 .text          0x00000000c00093bc       0x86 hal/diskctrl.32
                0x00000000c00093bc                HardDiskController::HardDiskController(char const*)
                0x00000000c00093bc                HardDiskController::HardDiskController(char const*)
                0x00000000c00093f4                HardDiskController::~HardDiskController()
                0x00000000c00093f4                HardDiskController::~HardDiskController()
                0x00000000c0009418                HardDiskController::~HardDiskController()
 .text          0x00000000c0009442       0xe2 hal/diskphys.32
                0x00000000c0009442                PhysicalDisk::eject()
                0x00000000c0009446                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009446                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00094ae                PhysicalDisk::startCache()
                0x00000000c00094d6                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094d6                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094fa                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009524        0x0 hal/fpu.32
 .text          0x00000000c0009524        0x0 hal/intctrl.32
 .text          0x00000000c0009524      0x874 hal/keybrd.32
                0x00000000c0009524                startGUI(void*)
                0x00000000c0009589                startGUIVESA(void*)
                0x00000000c00095ee                sendKeyToTerminal(unsigned char)
                0x00000000c00096c4                sendKeyboardToken(KeyboardToken)
                0x00000000c0009b80                clearInternalKeybuffer(VgaText*)
                0x00000000c0009bb5                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0009d0e                Keyboard::Keyboard(char const*)
                0x00000000c0009d0e                Keyboard::Keyboard(char const*)
                0x00000000c0009d4a                Keyboard::~Keyboard()
                0x00000000c0009d4a                Keyboard::~Keyboard()
                0x00000000c0009d6e                Keyboard::~Keyboard()
 .text          0x00000000c0009d98      0x3f8 hal/logidisk.32
                0x00000000c0009d98                LogicalDisk::close(int, int, void*)
                0x00000000c0009d9c                LogicalDisk::~LogicalDisk()
                0x00000000c0009d9c                LogicalDisk::~LogicalDisk()
                0x00000000c0009dc0                LogicalDisk::~LogicalDisk()
                0x00000000c0009dea                LogicalDisk::open(int, int, void*)
                0x00000000c0009dfe                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0009e36                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0009e7c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009e7c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009f3c                LogicalDisk::assignDriveLetter()
                0x00000000c0009ff6                LogicalDisk::mount()
                0x00000000c000a03e                LogicalDisk::unmount()
                0x00000000c000a04e                LogicalDisk::eject()
                0x00000000c000a062                LogicalDisk::unassignDriveLetter()
                0x00000000c000a0b8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000a124                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000a190       0x86 hal/mouse.32
                0x00000000c000a190                Mouse::Mouse(char const*)
                0x00000000c000a190                Mouse::Mouse(char const*)
                0x00000000c000a1c8                Mouse::~Mouse()
                0x00000000c000a1c8                Mouse::~Mouse()
                0x00000000c000a1ec                Mouse::~Mouse()
 .text          0x00000000c000a216       0x90 hal/nic.32
                0x00000000c000a216                NIC::getMAC()
                0x00000000c000a21c                NIC::write(int, unsigned char*, int*)
                0x00000000c000a222                NIC::NIC(char const*)
                0x00000000c000a222                NIC::NIC(char const*)
                0x00000000c000a258                NIC::~NIC()
                0x00000000c000a258                NIC::~NIC()
                0x00000000c000a27c                NIC::~NIC()
 .text          0x00000000c000a2a6      0x33b hal/partition.32
                0x00000000c000a2a6                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a34e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000a5e1        0x3 
 .text          0x00000000c000a5e4       0x86 hal/serial.32
                0x00000000c000a5e4                Serial::Serial(char const*)
                0x00000000c000a5e4                Serial::Serial(char const*)
                0x00000000c000a61c                Serial::~Serial()
                0x00000000c000a61c                Serial::~Serial()
                0x00000000c000a640                Serial::~Serial()
 *fill*         0x00000000c000a66a        0x2 
 .text          0x00000000c000a66c      0x27c hal/timer.32
                0x00000000c000a66c                Timer::Timer(char const*)
                0x00000000c000a66c                Timer::Timer(char const*)
                0x00000000c000a6a4                Timer::~Timer()
                0x00000000c000a6a4                Timer::~Timer()
                0x00000000c000a6c8                Timer::~Timer()
                0x00000000c000a6f2                Timer::read()
                0x00000000c000a6fd                setupTimer(int)
                0x00000000c000a738                timerHandler(unsigned int)
 .text          0x00000000c000a8e8      0x468 hal/vcache.32
                0x00000000c000a8e8                VCache::VCache(PhysicalDisk*)
                0x00000000c000a8e8                VCache::VCache(PhysicalDisk*)
                0x00000000c000aa58                VCache::invalidateReadBuffer()
                0x00000000c000aa68                VCache::writeWriteBuffer()
                0x00000000c000aab4                VCache::~VCache()
                0x00000000c000aab4                VCache::~VCache()
                0x00000000c000ab0c                VCache::~VCache()
                0x00000000c000ab34                VCache::write(unsigned long long, int, void*)
                0x00000000c000ac36                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ad50      0x70e hal/video.32
                0x00000000c000ad50                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ad9c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ae0c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000ae8a                Video::clearScreen(unsigned int)
                0x00000000c000aebe                Video::putpixel(int, int, unsigned int)
                0x00000000c000aecc                Video::readPixelApprox(int, int)
                0x00000000c000aee0                Video::Video(char const*)
                0x00000000c000aee0                Video::Video(char const*)
                0x00000000c000af16                Video::~Video()
                0x00000000c000af16                Video::~Video()
                0x00000000c000af3a                Video::~Video()
                0x00000000c000af64                Video::isMonochrome()
                0x00000000c000af70                Video::getWidth()
                0x00000000c000af7c                Video::getHeight()
                0x00000000c000af88                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000b044                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000b3ee                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000b45e        0x2 
 .text          0x00000000c000b460     0x114f hw/acpi.32
                0x00000000c000b460                ACPI::close(int, int, void*)
                0x00000000c000b468                loadACPITables(unsigned char*)
                0x00000000c000b6c8                findRSDT(unsigned char*)
                0x00000000c000b814                findDataTable(unsigned char*, char*)
                0x00000000c000b888                scanMADT()
                0x00000000c000bce0                ACPI::ACPI()
                0x00000000c000bce0                ACPI::ACPI()
                0x00000000c000bd34                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000be30                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000befc                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000bf04                ACPI::detectPCI()
                0x00000000c000c110                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000c128                ACPI::open(int, int, void*)
 .text          0x00000000c000c5af       0xb6 krnl/atexit.32
                0x00000000c000c5af                KeInitialiseAtexit()
                0x00000000c000c5ce                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000c602                KeExecuteAtexit()
 .text          0x00000000c000c665       0x9f krnl/bootmsg.32
                0x00000000c000c665                KeDisplaySplashScreen()
                0x00000000c000c694                KeSetBootMessage(char const*)
 .text          0x00000000c000c704       0x5f krnl/c++.32
                0x00000000c000c704                __cxa_atexit
                0x00000000c000c707                __cxa_finalize
                0x00000000c000c708                __stack_chk_fail
                0x00000000c000c73e                __cxa_pure_virtual
                0x00000000c000c74f                operator new[](unsigned long)
                0x00000000c000c754                operator delete(void*, unsigned long)
                0x00000000c000c759                operator delete[](void*)
                0x00000000c000c75e                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000c763        0x1 
 .text          0x00000000c000c764       0x44 krnl/cdefs.32
                0x00000000c000c764                CUnlockScheduler
                0x00000000c000c77c                CLockScheduler
                0x00000000c000c78c                CPrintf
 .text          0x00000000c000c7a8      0xd56 krnl/cm.32
                0x00000000c000c7a8                CmOpen(char const*)
                0x00000000c000c8c6                CmClose(Reghive_Tag*)
                0x00000000c000c8dc                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000c918                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000c98f                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000c9ce                CmGetNext(Reghive_Tag*, int)
                0x00000000c000ca00                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000ca3c                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000ca64                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000ca85                CmExpand(Reghive_Tag*, int)
                0x00000000c000cb00                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000cb86                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000cc7a                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000cdb6                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000ce17                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000ce47                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000ce7e                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000cea8                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000cee8                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000cf8c                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000cfba                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000d158                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000d1a5                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d21f                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000d272                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d336                zStrtok(char*, char const*)
                0x00000000c000d3a8                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000d429                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000d4cc                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000d4fe        0x2 
 .text          0x00000000c000d500       0x1d krnl/compat.32
                0x00000000c000d500                Krnl::handlePowerButton()
                0x00000000c000d510                Krnl::handleSleepButton()
 *fill*         0x00000000c000d51d        0x1 
 .text          0x00000000c000d51e      0x2c3 krnl/computer.32
                0x00000000c000d51e                Computer::close(int, int, void*)
                0x00000000c000d524                Computer::open(int, int, void*)
                0x00000000c000d60a                KeFirstTask()
                0x00000000c000d72c                Computer::Computer()
                0x00000000c000d72c                Computer::Computer()
                0x00000000c000d770                KePrepareShutdown()
                0x00000000c000d790                KeShutdown()
                0x00000000c000d7b4                KeSleep()
                0x00000000c000d7c0                KeRestart()
 .text          0x00000000c000d7e1       0x2b krnl/crc32.32
                0x00000000c000d7e1                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000d80c      0x5bf krnl/env.32
                0x00000000c000d80c                EnvVarContainer::getEnv(char const*)
                0x00000000c000d84a                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000d90c                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000d90e                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000db32                EnvVarContainer::__loadSystem()
                0x00000000c000db4c                EnvVarContainer::__loadUser()
                0x00000000c000db4e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000db4e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000db70                EnvVarContainer::~EnvVarContainer()
                0x00000000c000db70                EnvVarContainer::~EnvVarContainer()
                0x00000000c000dba0                KeGetEnv(Process*, char const*)
                0x00000000c000dc05                KeSetEnvSystem(char const*, char const*)
                0x00000000c000dc1f                KeSetEnvUser(char const*, char const*)
                0x00000000c000dc3e                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000dc51                KeDeleteEnvSystem(char const*)
                0x00000000c000dc52                KeDeleteEnvUser(char const*)
                0x00000000c000dc53                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000dc54                KeNewProcessEnv(Process*)
                0x00000000c000dc76                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000dcc2                KeLoadSystemEnv()
                0x00000000c000dcf0                KeLoadUserEnv()
                0x00000000c000dd16                KeFlushEnv()
                0x00000000c000dd17                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000dd37                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000ddcb        0x1 
 .text          0x00000000c000ddcc      0x3d1 krnl/fault.32
                0x00000000c000ddcc                KeSetupInterrupts()
                0x00000000c000de44                int_handler
                0x00000000c000dfe4                KeDisplayProgramFault(char const*)
                0x00000000c000e034                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e088                KePageFault(void*, void*)
                0x00000000c000e0ec                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e0fc                KeOtherFault(void*, void*)
                0x00000000c000e130                KeOpcodeFault(void*, void*)
                0x00000000c000e184                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000e19d        0x1 
 .text          0x00000000c000e19e      0x1db krnl/gdt.32
                0x00000000c000e19e                GDTEntry::setBase(unsigned int)
                0x00000000c000e1ba                GDTEntry::setLimit(unsigned int)
                0x00000000c000e1d8                GDT::GDT()
                0x00000000c000e1d8                GDT::GDT()
                0x00000000c000e1ee                GDT::addEntry(GDTEntry)
                0x00000000c000e210                GDT::getNumberOfEntries()
                0x00000000c000e218                GDT::flush()
                0x00000000c000e23a                GDT::setup()
 .text          0x00000000c000e379       0x20 krnl/idle.32
                0x00000000c000e379                idleFunction(void*)
 *fill*         0x00000000c000e399        0x3 
 .text          0x00000000c000e39c      0x46c krnl/idt.32
                0x00000000c000e39c                IDTEntry::IDTEntry(bool)
                0x00000000c000e39c                IDTEntry::IDTEntry(bool)
                0x00000000c000e416                IDTEntry::setOffset(unsigned int)
                0x00000000c000e42c                IDT::IDT()
                0x00000000c000e42c                IDT::IDT()
                0x00000000c000e42e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000e436                IDT::addEntry(IDTEntry, int)
                0x00000000c000e450                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000e488                IDT::flush()
                0x00000000c000e4a2                IDT::setup()
 .text          0x00000000c000e808       0x9a krnl/inlines.32
                0x00000000c000e808                CPU::current()
                0x00000000c000e814                operator new(unsigned long)
                0x00000000c000e819                operator delete(void*)
                0x00000000c000e81e                disableIRQs()
                0x00000000c000e820                enableIRQs()
                0x00000000c000e822                lockScheduler()
                0x00000000c000e82a                unlockScheduler()
                0x00000000c000e83c                lockStuff()
                0x00000000c000e84a                unlockStuff()
                0x00000000c000e887                Virt::getAKernelVAS()
                0x00000000c000e88d                __not_memcpy
 .text          0x00000000c000e8a2      0x207 krnl/kheap.32
                0x00000000c000e8a2                sbrk
                0x00000000c000e939                sbrk_thunk
                0x00000000c000e96f                mmap
                0x00000000c000e9cd                munmap
                0x00000000c000e9e2                liballoc_lock()
                0x00000000c000e9f0                liballoc_unlock()
                0x00000000c000ea08                liballoc_alloc(int)
                0x00000000c000ea20                liballoc_free(void*, int)
                0x00000000c000ea3b                realloc
                0x00000000c000ea4f                malloc
                0x00000000c000ea5f                free
                0x00000000c000ea6f                rfree
                0x00000000c000ea7f                calloc
 *fill*         0x00000000c000eaa9        0x3 
 .text          0x00000000c000eaac      0x1d3 krnl/mailbox.32
                0x00000000c000eaac                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000eb0c                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000eb6c                KeMailboxCreate()
                0x00000000c000eba0                KeMailboxPost(Mailbox*, void*)
                0x00000000c000ec04                KeMailboxGet(Mailbox*, void**)
                0x00000000c000ec68                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000ec7f       0xfd krnl/main.32
                0x00000000c000ec7f                KeEntryPoint
 .text          0x00000000c000ed7c       0x1a krnl/mutex.32
                0x00000000c000ed7c                Mutex::Mutex()
                0x00000000c000ed7c                Mutex::Mutex()
 .text          0x00000000c000ed96        0xc krnl/panic.32
                0x00000000c000ed96                KePanic(char const*)
 .text          0x00000000c000eda2      0x667 krnl/physmgr.32
                0x00000000c000eda2                Phys::allocateDMA(unsigned long)
                0x00000000c000ee8a                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000eec5                Phys::setPageState(unsigned long, bool)
                0x00000000c000ef05                Phys::getPageState(unsigned long)
                0x00000000c000ef21                Phys::freePage(unsigned long)
                0x00000000c000ef8a                Phys::allocatePage()
                0x00000000c000f068                Phys::allocateContiguousPages(int)
                0x00000000c000f0e3                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000f11b                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000f409        0x1 
 .text          0x00000000c000f40a      0x275 krnl/pipe.32
                0x00000000c000f40a                Pipe::isAtty()
                0x00000000c000f40e                Pipe::~Pipe()
                0x00000000c000f40e                Pipe::~Pipe()
                0x00000000c000f432                Pipe::~Pipe()
                0x00000000c000f45a                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000f51a                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000f618                Pipe::Pipe(int)
                0x00000000c000f618                Pipe::Pipe(int)
 .text          0x00000000c000f67f      0x10b krnl/powctrl.32
                0x00000000c000f67f                KePowerThread(void*)
                0x00000000c000f6b0                KeChangePowerSettings(PowerSettings)
                0x00000000c000f6c6                KeUserIOReceived()
                0x00000000c000f6d1                KeHandlePowerButton()
                0x00000000c000f6e9                KeHandleSleepButton()
                0x00000000c000f701                KeSetupPowerManager()
 .text          0x00000000c000f78a       0x9d krnl/random.32
                0x00000000c000f78a                KeRand()
                0x00000000c000f7cc                KeSeedRand(unsigned int)
                0x00000000c000f7f5                KeInitRand()
 *fill*         0x00000000c000f827        0x1 
 .text          0x00000000c000f828      0x1bc krnl/resolve.32
                0x00000000c000f828                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c000f9e4      0x401 krnl/semaphore.32
                0x00000000c000f9e4                Semaphore::Semaphore(int)
                0x00000000c000f9e4                Semaphore::Semaphore(int)
                0x00000000c000fa14                Semaphore::tryAcquire()
                0x00000000c000fae8                Semaphore::assertLocked(char const*)
                0x00000000c000fb74                Semaphore::acquire(int)
                0x00000000c000fd18                Semaphore::acquire()
                0x00000000c000fd34                Semaphore::release()
 .text          0x00000000c000fde5      0x322 krnl/signal.32
                0x00000000c000fde5                KiSigKill(int)
                0x00000000c000fdf9                KiDefaultSignalHandlerIgnore(int)
                0x00000000c000fdfa                KiDefaultSignalHandlerPause(int)
                0x00000000c000fe26                KiDefaultSignalHandlerResume(int)
                0x00000000c000fe52                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c000fe57                KeInitSignals()
                0x00000000c000fea9                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c000fedf                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c000ff5c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010053                KiCheckSignalZ
                0x00000000c0010095                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00100d0                KiFinishSignalZ
 .text          0x00000000c0010107      0xe70 krnl/syscalls.32
                0x00000000c0010107                SysSeekDir(regs*)
                0x00000000c001010c                SysTellDir(regs*)
                0x00000000c0010111                SysVerify(regs*)
                0x00000000c001011b                SysGetArgc(regs*)
                0x00000000c001012f                SysTTYName(regs*)
                0x00000000c0010137                SysFormatDisk(regs*)
                0x00000000c00101ae                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010202                SysGetDiskVolumeLabel(regs*)
                0x00000000c001025b                SysRealpath(regs*)
                0x00000000c001029f                SysReadDir(regs*)
                0x00000000c001031f                SysIsATTY(regs*)
                0x00000000c0010379                SysSeek(regs*)
                0x00000000c00103d0                SysTell(regs*)
                0x00000000c001043d                SysSize(regs*)
                0x00000000c00104b0                SysSizeFromFilename(regs*)
                0x00000000c00105e1                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0010712                SysClose(regs*)
                0x00000000c0010799                SysOpenDir(regs*)
                0x00000000c0010816                SysMakeDir(regs*)
                0x00000000c0010884                SysCloseDir(regs*)
                0x00000000c00108ff                SysWait(regs*)
                0x00000000c0010920                SysNotImpl(regs*)
                0x00000000c001093b                SysPanic(regs*)
                0x00000000c0010956                SysRmdir(regs*)
                0x00000000c00109bb                SysUnlink(regs*)
                0x00000000c0010a20                SysGetArgv(regs*)
                0x00000000c0010a6d                SysUSleep(regs*)
                0x00000000c0010a96                SysSpawn(regs*)
                0x00000000c0010b09                SysGetEnv(regs*)
                0x00000000c0010bba                SysSetFatAttrib(regs*)
                0x00000000c0010c2d                SysShutdown(regs*)
                0x00000000c0010c8a                SysPipe(regs*)
                0x00000000c0010ccf                SysGetUnixTime(regs*)
                0x00000000c0010ce3                string_ends_with(char const*, char const*)
                0x00000000c0010d2b                SysOpen(regs*)
                0x00000000c0010f22                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0010f77        0x1 
 .text          0x00000000c0010f78      0xab3 krnl/terminal.32
                0x00000000c0010f78                VgaText::isAtty()
                0x00000000c0010f7c                VgaText::~VgaText()
                0x00000000c0010f7c                VgaText::~VgaText()
                0x00000000c0010fa0                VgaText::~VgaText()
                0x00000000c0010fca                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0010fea                setTerminalScrollLock(bool)
                0x00000000c0010feb                doTerminalCycle()
                0x00000000c0010fec                addToTerminalCycle(VgaText*)
                0x00000000c0010fed                scrollTerminalScrollLock(int)
                0x00000000c0010fee                VgaText::updateTitle()
                0x00000000c0010ff0                VgaText::load()
                0x00000000c0010ff2                VgaText::updateCursor()
                0x00000000c0011008                VgaText::doANSI_SGR(int)
                0x00000000c001107c                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c001108c                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c001109c                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00110bc                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00110c8                VgaText::setTitleColour(VgaColour)
                0x00000000c00110d4                VgaText::setTitle(char*)
                0x00000000c00110d6                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00110e8                VgaText::scrollScreen()
                0x00000000c001117a                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c001118a                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c001121a                VgaText::getCursorX()
                0x00000000c0011222                VgaText::getCursorY()
                0x00000000c001122a                VgaText::setCursor(int, int)
                0x00000000c0011241                setActiveTerminal(VgaText*)
                0x00000000c001128c                VgaText::clearScreen()
                0x00000000c00112da                VgaText::setCursorX(int)
                0x00000000c00112f2                VgaText::setCursorY(int)
                0x00000000c001130a                VgaText::incrementCursor(bool)
                0x00000000c001135e                VgaText::decrementCursor(bool)
                0x00000000c0011380                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0011450                VgaText::putchar(char)
                0x00000000c0011548                VgaText::putx(unsigned int)
                0x00000000c001158e                VgaText::puts(char const*)
                0x00000000c00115b4                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0011600                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c001174e                VgaText::VgaText(char const*)
                0x00000000c001174e                VgaText::VgaText(char const*)
                0x00000000c001189e                VgaText::receiveKey(unsigned char)
                0x00000000c0011a2a                VgaText::doUpdate()
 *fill*         0x00000000c0011a2b        0x1 
 .text          0x00000000c0011a2c      0x224 krnl/tss.32
                0x00000000c0011a2c                TSS::TSS()
                0x00000000c0011a2c                TSS::TSS()
                0x00000000c0011a3c                TSS::setESP(unsigned long)
                0x00000000c0011a50                TSS::flush()
                0x00000000c0011a70                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0011c50      0x513 krnl/unixfile.32
                0x00000000c0011c50                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0011ca6                ReservedFilename::isAtty()
                0x00000000c0011cc2                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011d20                UnixFile::getFileDescriptor()
                0x00000000c0011d28                UnixFile::UnixFile(int)
                0x00000000c0011d28                UnixFile::UnixFile(int)
                0x00000000c0011edc                ReservedFilename::ReservedFilename(int)
                0x00000000c0011edc                ReservedFilename::ReservedFilename(int)
                0x00000000c0011f0e                UnixFile::~UnixFile()
                0x00000000c0011f0e                UnixFile::~UnixFile()
                0x00000000c0011faa                UnixFile::~UnixFile()
                0x00000000c0011fd2                ReservedFilename::~ReservedFilename()
                0x00000000c0011fd2                ReservedFilename::~ReservedFilename()
                0x00000000c0011ff6                ReservedFilename::~ReservedFilename()
                0x00000000c001201d                KeGetFileFromDescriptor(int)
 *fill*         0x00000000c0012163        0x1 
 .text          0x00000000c0012164     0x1348 krnl/virtmgr.32
                0x00000000c0012164                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c001219e                Virt::getPageState(unsigned long)
                0x00000000c00121c1                Virt::allocateKernelVirtualPages(int)
                0x00000000c00122e6                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0012309                Virt::swapIDToSector(unsigned long)
                0x00000000c001231f                Virt::allocateSwapfilePage()
                0x00000000c001239f                Virt::virtualMemorySetup()
                0x00000000c00123f0                Virt::setupPageSwapping(int)
                0x00000000c0012462                VAS::setCPUSpecific(unsigned long)
                0x00000000c0012464                VAS::VAS(VAS*)
                0x00000000c0012464                VAS::VAS(VAS*)
                0x00000000c001247c                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00124aa                VAS::getPageTableEntry(unsigned long)
                0x00000000c00124c9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0012606                VAS::freeAllocatedPages(unsigned long)
                0x00000000c001262a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0012644                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0012686                VAS::VAS()
                0x00000000c0012686                VAS::VAS()
                0x00000000c00126f0                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0012710                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c001273c                VAS::~VAS()
                0x00000000c001273c                VAS::~VAS()
                0x00000000c00128a4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00129a8                VAS::allocatePages(int, int)
                0x00000000c0012a8e                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0012ae6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0012bdc                VAS::VAS(bool)
                0x00000000c0012bdc                VAS::VAS(bool)
                0x00000000c0012dc4                VAS::evict(unsigned long)
                0x00000000c0012ec8                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c00131d8                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c001324c                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0013278                VAS::scanForEviction()
                0x00000000c00133b1                mapVASFirstTime
 .text          0x00000000c00134ac       0x36 sys/eject.32
                0x00000000c00134ac                SysEject(regs*)
 .text          0x00000000c00134e2       0x18 sys/exit.32
                0x00000000c00134e2                SysExit(regs*)
 .text          0x00000000c00134fa       0x1f sys/getcwd.32
                0x00000000c00134fa                SysGetCwd(regs*)
 .text          0x00000000c0013519       0x26 sys/getpid.32
                0x00000000c0013519                SysGetPID(regs*)
 .text          0x00000000c001353f       0x21 sys/getramdata.32
                0x00000000c001353f                SysGetRAMData(regs*)
 .text          0x00000000c0013560       0x97 sys/getvgaptr.32
                0x00000000c0013560                SysGetVGAPtr(regs*)
 *fill*         0x00000000c00135f7        0x1 
 .text          0x00000000c00135f8       0xb9 sys/kill.32
                0x00000000c00135f8                SysKill(regs*)
 .text          0x00000000c00136b1       0xa8 sys/loaddll.32
                0x00000000c00136b1                SysLoadDLL(regs*)
 .text          0x00000000c0013759       0x68 sys/read.32
                0x00000000c0013759                SysRead(regs*)
 .text          0x00000000c00137c1       0x29 sys/registersignal.32
                0x00000000c00137c1                SysRegisterSignal(regs*)
 .text          0x00000000c00137ea      0x1cc sys/registry.32
                0x00000000c00137ea                SysRegistryGetTypeFromPath(regs*)
                0x00000000c001382e                SysRegistryReadExtent(regs*)
                0x00000000c0013876                SysRegistryPathToExtentLookup(regs*)
                0x00000000c001388d                SysRegistryEnterDirectory(regs*)
                0x00000000c00138a4                SysRegistryGetNext(regs*)
                0x00000000c00138bb                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00138f5                SysRegistryOpen(regs*)
                0x00000000c0013909                SysRegistryClose(regs*)
                0x00000000c0013920                SysRegistryEasyReadString(regs*)
                0x00000000c001396c                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c00139b6       0x55 sys/sbrk.32
                0x00000000c00139b6                SysSbrk(regs*)
 .text          0x00000000c0013a0b       0x1c sys/setcwd.32
                0x00000000c0013a0b                SysSetCwd(regs*)
 .text          0x00000000c0013a27       0x96 sys/settime.32
                0x00000000c0013a27                SysSetTime(regs*)
 .text          0x00000000c0013abd       0x73 sys/symlink.32
                0x00000000c0013abd                SysSymlink(regs*)
 .text          0x00000000c0013b30       0x3f sys/timezone.32
                0x00000000c0013b30                SysTimezone(regs*)
 .text          0x00000000c0013b6f       0xfc sys/truncate.32
                0x00000000c0013b6f                SysTruncate(regs*)
 .text          0x00000000c0013c6b       0x68 sys/write.32
                0x00000000c0013c6b                SysWrite(regs*)
 .text          0x00000000c0013cd3       0x9d sys/wsbe.32
                0x00000000c0013cd3                SysWsbe(regs*)
 .text          0x00000000c0013d70       0x28 sys/yield.32
                0x00000000c0013d70                SysYield(regs*)
 .text          0x00000000c0013d98     0x120b thr/elf.32
                0x00000000c0013d98                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001402a                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001423c                Thr::runtimeReferenceHelper()
                0x00000000c001424f                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001429e                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001455c                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014c95                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014cc7                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014cfe                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014d18                Thr::loadDLL(char const*, bool)
                0x00000000c0014f6a                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0014fa3       0x5a thr/exec.32
                0x00000000c0014fa3                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0014ffd        0x3 
 .text          0x00000000c0015000     0x11a5 thr/prcssthr.32
                0x00000000c0015000                userModeEntryPoint(void*)
                0x00000000c001502c                changeTSS
                0x00000000c001505c                switchToThread(ThreadControlBlock*)
                0x00000000c001510c                Process::addArgs(char**)
                0x00000000c0015178                Process::Process(char const*, Process*, char**)
                0x00000000c0015178                Process::Process(char const*, Process*, char**)
                0x00000000c0015384                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015384                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015558                taskStartupFunction
                0x00000000c0015564                KeDisablePreemption()
                0x00000000c001558c                KeRestorePreemption()
                0x00000000c00155ac                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00156b8                Process::createUserThread()
                0x00000000c00156d8                setupMultitasking(void (*)())
                0x00000000c00157fc                schedule()
                0x00000000c0015890                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00158bc                blockTask(TaskState)
                0x00000000c0015908                waitTask(int, int*, int)
                0x00000000c001594c                milliTenthSleepUntil(unsigned int)
                0x00000000c00159f4                milliTenthSleep(unsigned int)
                0x00000000c0015a08                sleep(unsigned int)
                0x00000000c0015a24                taskReturned
                0x00000000c0015a6c                Thr::processFromPID(int)
                0x00000000c0015b1c                unblockTask(ThreadControlBlock*)
                0x00000000c0015bd0                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015ea4                cleanerTaskFunction(void*)
                0x00000000c0015fbc                terminateTask(int)
                0x00000000c00160d8                Thr::terminateFromIRQ(int)
 .text          0x00000000c00161a5      0xd10 vm86/vm8086.32
                0x00000000c00161a5                Vm::inbv(unsigned short)
                0x00000000c00161b8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00161ee                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00161fe                Vm::getSegment(unsigned int)
                0x00000000c0016206                Vm::getOffset(unsigned int)
                0x00000000c001620b                Vm::mainloop2()
                0x00000000c0016245                Vm::mainVm8086Loop(void*)
                0x00000000c0016258                Vm::mainloop3(unsigned long)
                0x00000000c001627e                Vm::initialise8086()
                0x00000000c00162c1                Vm::resetConventionalMemory8086()
                0x00000000c00162c2                Vm::finish8086()
                0x00000000c0016324                Vm::getOutput8086(unsigned char*)
                0x00000000c0016349                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016476                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016684                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001671d                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001672e                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016740                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016751                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016766                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001677c                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016791                Vm::faultHandler(regs*)
 *fill*         0x00000000c0016eb5        0x1 
 .text          0x00000000c0016eb6     0x1ee7 arch/i386/hal.32
                0x00000000c0016eb6                noCopro(unsigned long)
                0x00000000c0016eb8                CPU::close(int, int, void*)
                0x00000000c0016ebb                x86ReadCMOS(unsigned char)
                0x00000000c0016f0f                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0016f6f                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0016f8e                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0016fab                AMD_K6_writeback(int, int, int)
                0x00000000c001706b                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0017109                cpuidCheckEDX(unsigned int)
                0x00000000c0017136                cpuidCheckECX(unsigned int)
                0x00000000c0017164                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0017192                cpuidCheckExtendedECX(unsigned int)
                0x00000000c00171c0                HalDetectFeatures()
                0x00000000c0017f8b                HalEnableNMI()
                0x00000000c0017f9e                HalDisableNMI()
                0x00000000c0017fb1                HalGetNMIState()
                0x00000000c0017fb7                x86rdmsr(unsigned int)
                0x00000000c0017ff5                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c001803a                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0018050                HalFindRSDP()
                0x00000000c00180e5                HalHandlePageFault(void*, void*)
                0x00000000c0018192                HalHandleOpcodeFault(void*, void*)
                0x00000000c00181d4                HalDisplayDebugInfo(void*)
                0x00000000c0018562                HalReceivedNMI()
                0x00000000c00185fd                HalSystemIdle()
                0x00000000c001865c                i386SaveCoprocessor(void*)
                0x00000000c0018670                i386LoadCoprocessor(void*)
                0x00000000c0018684                x87EmulHandler(regs*, void*)
                0x00000000c0018721                HalInitialiseCoprocessor()
                0x00000000c00187a5                HalPanic(char const*)
                0x00000000c00188b9                HalQueryPerformanceCounter()
                0x00000000c00188c9                HalInitialise()
                0x00000000c0018a5b                HalMakeBeep(int)
                0x00000000c0018a95                HalGetRand()
                0x00000000c0018a98                HalEndOfInterrupt(int)
                0x00000000c0018ac3                HalRestart()
                0x00000000c0018ac4                HalShutdown()
                0x00000000c0018ac5                HalSleep()
                0x00000000c0018ac6                CPU::CPU()
                0x00000000c0018ac6                CPU::CPU()
                0x00000000c0018b4a                CPU::setupSMEP()
                0x00000000c0018b56                CPU::setupUMIP()
                0x00000000c0018b60                CPU::setupTSC()
                0x00000000c0018b6a                CPU::setupLargePages()
                0x00000000c0018b74                CPU::setupPAT()
                0x00000000c0018ba6                CPU::setupMTRR()
                0x00000000c0018ba8                CPU::setupGlobalPages()
                0x00000000c0018bb2                CPU::allowUsermodeDataAccess()
                0x00000000c0018bc0                CPU::prohibitUsermodeDataAccess()
                0x00000000c0018bce                CPU::setupSMAP()
                0x00000000c0018bdc                CPU::setupFeatures()
                0x00000000c0018ca8                CPU::open(int, int, void*)
 .text          0x00000000c0018d9d      0x261 arch/i386/intctrl.32
                0x00000000c0018d9d                convertLegacyIRQNumber(int)
                0x00000000c0018dd9                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0018e23                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0018f51                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0018f85                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c0018ffe        0x2 
 .text          0x00000000c0019000      0x2dc arch/i386/pic.32
                0x00000000c0019000                picIoWait()
                0x00000000c0019008                picDisable()
                0x00000000c001903c                picGetIRQReg(int)
                0x00000000c00190b8                picOpen()
                0x00000000c001923c                picEOI(int)
 .text          0x00000000c00192dc      0x5f3 arch/i386/rtc.32
                0x00000000c00192dc                RTC::open(int, int, void*)
                0x00000000c00192e0                RTC::close(int, int, void*)
                0x00000000c00192e4                RTC::timeInSecondsUTC()
                0x00000000c00192f6                RTC::timeInDatetimeUTC()
                0x00000000c001931c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001935a                RTC::~RTC()
                0x00000000c001935a                RTC::~RTC()
                0x00000000c001937e                RTC::~RTC()
                0x00000000c00193a8                RTC::get_update_in_progress_flag()
                0x00000000c00193bc                RTC::completeRTCRefresh()
                0x00000000c0019670                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00197e6                rtcIRQHandler(regs*, void*)
                0x00000000c0019826                RTC::RTC()
                0x00000000c0019826                RTC::RTC()
 *fill*         0x00000000c00198cf        0x1 
 .text          0x00000000c00198d0      0x1f4 arch/i386/vga.32
                0x00000000c00198d0                HalConsoleScroll(int, int)
                0x00000000c00199d8                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0019a3c                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0019ac4     0x14cf fs/fat/vfslink.32
                0x00000000c0019ac4                FAT::getName()
                0x00000000c0019acc                FAT::tell(void*, unsigned long long*)
                0x00000000c0019b08                FAT::stat(void*, unsigned long long*)
                0x00000000c0019b44                FAT::~FAT()
                0x00000000c0019b44                FAT::~FAT()
                0x00000000c0019b68                FAT::~FAT()
                0x00000000c0019b90                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019c34                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019cf8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019edc                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001a0f8                FAT::allocateSwapfile(char const*, int)
                0x00000000c001a2b8                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a428                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001a488                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a4e8                FAT::close(void*)
                0x00000000c001a53c                FAT::closeDir(void*)
                0x00000000c001a590                FAT::truncate(void*, unsigned long long)
                0x00000000c001a5fc                FAT::seek(void*, unsigned long long)
                0x00000000c001a654                fatWrapperReadDisk
                0x00000000c001a694                fatWrapperWriteDisk
                0x00000000c001a6d4                fatWrapperIoctl
                0x00000000c001a7f0                FAT::FAT()
                0x00000000c001a7f0                FAT::FAT()
                0x00000000c001a848                FAT::fixFilepath(char*)
                0x00000000c001a888                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a9fc                FAT::openDir(char const*, void**)
                0x00000000c001aaac                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001aba4                FAT::unlink(char const*)
                0x00000000c001ac24                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001add8                FAT::rename(char const*, char const*)
                0x00000000c001aea4                FAT::mkdir(char const*)
                0x00000000c001af24                FAT::exists(char const*)
 *fill*         0x00000000c001af93        0x1 
 .text          0x00000000c001af94       0x94 fs/iso9660/helper.32
                0x00000000c001af94                isoReadDiscSectorHelper
                0x00000000c001aff0                iso_kprintf
                0x00000000c001b00c                iso_kprintfd
 .text          0x00000000c001b028      0x71c fs/iso9660/vfslink.32
                0x00000000c001b028                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b02e                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001b034                ISO9660::getName()
                0x00000000c001b03a                ISO9660::closeDir(void*)
                0x00000000c001b044                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b04a                ISO9660::unlink(char const*)
                0x00000000c001b050                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001b056                ISO9660::rename(char const*, char const*)
                0x00000000c001b05c                ISO9660::mkdir(char const*)
                0x00000000c001b062                ISO9660::~ISO9660()
                0x00000000c001b062                ISO9660::~ISO9660()
                0x00000000c001b086                ISO9660::~ISO9660()
                0x00000000c001b0ae                ISO9660::exists(char const*)
                0x00000000c001b0c2                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001b1a8                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001b1f0                ISO9660::seek(void*, unsigned long long)
                0x00000000c001b232                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001b270                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001b2c2                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b404                ISO9660::close(void*)
                0x00000000c001b434                ISO9660::openDir(char const*, void**)
                0x00000000c001b50e                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b62b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b6aa                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b71c                ISO9660::ISO9660()
                0x00000000c001b71c                ISO9660::ISO9660()
 .text          0x00000000c001b744      0x26c hal/sound/sndcard.32
                0x00000000c001b744                SoundCard::beginPlayback()
                0x00000000c001b752                SoundCard::stopPlayback()
                0x00000000c001b760                SoundCard::SoundCard(char const*)
                0x00000000c001b760                SoundCard::SoundCard(char const*)
                0x00000000c001b7fe                SoundCard::~SoundCard()
                0x00000000c001b7fe                SoundCard::~SoundCard()
                0x00000000c001b822                SoundCard::~SoundCard()
                0x00000000c001b84c                SoundCard::configureRates(int, int, int)
                0x00000000c001b87c                SoundCard::getSamples16(int, short*)
                0x00000000c001b8d8                SoundCard::getSamples32(int, int*)
                0x00000000c001b95e                SoundCard::addChannel(SoundPort*)
                0x00000000c001b99c                SoundCard::removeChannel(int)
 .text          0x00000000c001b9b0      0x426 hal/sound/sndport.32
                0x00000000c001b9b0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b9b0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ba3c                SoundPort::~SoundPort()
                0x00000000c001ba3c                SoundPort::~SoundPort()
                0x00000000c001ba70                SoundPort::unpause()
                0x00000000c001ba7c                SoundPort::pause()
                0x00000000c001ba88                SoundPort::getBufferUsed()
                0x00000000c001ba90                SoundPort::getBufferSize()
                0x00000000c001ba98                SoundPort::buffer8(signed char*, int)
                0x00000000c001bb2c                SoundPort::buffer16(short*, int)
                0x00000000c001bbc0                SoundPort::buffer32(int*, int)
                0x00000000c001bc4c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001bd18                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001bdd6        0x0 hw/bus/isa.32
 .text          0x00000000c001bdd6      0xc23 hw/bus/pci.32
                0x00000000c001bdd6                PCI::open(int, int, void*)
                0x00000000c001bdf4                PCI::close(int, int, void*)
                0x00000000c001bdf8                PCI::PCI()
                0x00000000c001bdf8                PCI::PCI()
                0x00000000c001be90                PCI::readBAR8(unsigned int, int)
                0x00000000c001beac                PCI::readBAR16(unsigned int, int)
                0x00000000c001beca                PCI::readBAR32(unsigned int, int)
                0x00000000c001bee6                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001bf06                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001bf28                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001bf48                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bfbe                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c068                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c08c                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001c0b4                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001c0fe                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001c126                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c14a                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001c16e                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001c196                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c1fa                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001c2e2                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001c5a8                PCI::checkBus(unsigned char)
                0x00000000c001c5cc                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001c7b2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001c92e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001c9a0                PCI::detect()
 *fill*         0x00000000c001c9f9        0x1 
 .text          0x00000000c001c9fa      0xe56 hw/diskctrl/ide.32
                0x00000000c001c9fa                IDE::close(int, int, void*)
                0x00000000c001c9fe                IDE::IDE()
                0x00000000c001c9fe                IDE::IDE()
                0x00000000c001ca32                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ca44                selectDrive(unsigned char, unsigned char)
                0x00000000c001ca46                IDE::getBase(unsigned char)
                0x00000000c001ca58                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001cb18                IDE::read(unsigned char, unsigned char)
                0x00000000c001cbc6                IDE::waitInterrupt(unsigned char)
                0x00000000c001cc28                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001cc44                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001cc60                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ccaa                IDE::open(int, int, void*)
                0x00000000c001d204                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001d2d4                IDE::detect()
                0x00000000c001d742                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001d7fc                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001d850      0x33d hw/diskctrl/satabus.32
                0x00000000c001d850                SATABus::close(int, int, void*)
                0x00000000c001d854                SATABus::detect()
                0x00000000c001d856                SATABus::SATABus()
                0x00000000c001d856                SATABus::SATABus()
                0x00000000c001d8dc                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d90e                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d956                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d976                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d9a0                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001dab0                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001db5a                SATABus::open(int, int, void*)
 *fill*         0x00000000c001db8d        0x1 
 .text          0x00000000c001db8e      0x7a9 hw/diskphys/ata.32
                0x00000000c001db8e                ATA::close(int, int, void*)
                0x00000000c001dbb2                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001dbb4                ATA::ATA()
                0x00000000c001dbb4                ATA::ATA()
                0x00000000c001dbe2                ATA::flush(bool)
                0x00000000c001dc30                ATA::readyForCommand()
                0x00000000c001dc7c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001e06c                ATA::read(unsigned long long, int, void*)
                0x00000000c001e0b8                ATA::write(unsigned long long, int, void*)
                0x00000000c001e104                ATA::detectCHS()
                0x00000000c001e12e                ATA::open(int, int, void*)
                0x00000000c001e319                combineCharAndColour(char, unsigned char)
                0x00000000c001e32a                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001e337        0x1 
 .text          0x00000000c001e338      0x618 hw/diskphys/atapi.32
                0x00000000c001e338                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001e33e                ATAPI::close(int, int, void*)
                0x00000000c001e362                ATAPI::ATAPI()
                0x00000000c001e362                ATAPI::ATAPI()
                0x00000000c001e390                ATAPI::readyForCommand()
                0x00000000c001e3e2                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001e6aa                ATAPI::diskRemoved()
                0x00000000c001e6e4                ATAPI::eject()
                0x00000000c001e72c                ATAPI::diskInserted()
                0x00000000c001e738                ATAPI::detectMedia()
                0x00000000c001e7f6                ATAPI::open(int, int, void*)
                0x00000000c001e8d6                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e950      0x44c hw/diskphys/sata.32
                0x00000000c001e950                SATA::close(int, int, void*)
                0x00000000c001e974                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001e976                SATA::open(int, int, void*)
                0x00000000c001ea2e                SATA::SATA()
                0x00000000c001ea2e                SATA::SATA()
                0x00000000c001ea5c                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ece4                SATA::read(unsigned long long, int, void*)
                0x00000000c001ed30                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001ed9c      0x5d0 hw/diskphys/satapi.32
                0x00000000c001ed9c                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001eda2                SATAPI::close(int, int, void*)
                0x00000000c001edc6                SATAPI::SATAPI()
                0x00000000c001edc6                SATAPI::SATAPI()
                0x00000000c001edf4                SATAPI::diskRemoved()
                0x00000000c001edf6                SATAPI::diskInserted()
                0x00000000c001ee12                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001f0f0                SATAPI::eject()
                0x00000000c001f12c                SATAPI::detectMedia()
                0x00000000c001f182                SATAPI::open(int, int, void*)
                0x00000000c001f282                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f36c      0x443 hw/intctrl/apic.32
                0x00000000c001f36c                IOAPIC::close(int, int, void*)
                0x00000000c001f372                apicGetBase()
                0x00000000c001f390                IOAPIC::IOAPIC()
                0x00000000c001f390                IOAPIC::IOAPIC()
                0x00000000c001f3b8                apicOpen()
                0x00000000c001f544                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001f576                IOAPIC::read(int)
                0x00000000c001f59e                IOAPIC::open(int, int, void*)
                0x00000000c001f684                IOAPIC::write(int, int)
                0x00000000c001f6b0                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001f7af        0x1 
 .text          0x00000000c001f7b0       0xf0 hw/timer/apictimer.32
                0x00000000c001f7b0                APICTimer::close(int, int, void*)
                0x00000000c001f7b8                apicTimerHandler(regs*, void*)
                0x00000000c001f7e0                APICTimer::open(int, int, void*)
                0x00000000c001f850                APICTimer::write(int)
                0x00000000c001f878                APICTimer::APICTimer()
                0x00000000c001f878                APICTimer::APICTimer()
 .text          0x00000000c001f8a0      0x1ad hw/timer/pit.32
                0x00000000c001f8a0                PIT::write(int)
                0x00000000c001f924                pitHandler(regs*, void*)
                0x00000000c001f94c                PIT::open(int, int, void*)
                0x00000000c001f99c                PIT::close(int, int, void*)
                0x00000000c001f9cc                PIT::PIT()
                0x00000000c001f9cc                PIT::PIT()
 *fill*         0x00000000c001fa4d        0x3 
 .text          0x00000000c001fa50       0x6f arch/i386/avx.32
                0x00000000c001fa50                avxDetect
                0x00000000c001fa7a                avxSave
                0x00000000c001fa8b                avxLoad
                0x00000000c001fa9c                avxInit
                0x00000000c001fabe                avxClose
 *fill*         0x00000000c001fabf        0x1 
 .text          0x00000000c001fac0      0x2ec arch/i386/interrupt.32
                0x00000000c001fac0                isr0
                0x00000000c001fad0                isr1
                0x00000000c001fada                isr2
                0x00000000c001fae4                isr3
                0x00000000c001faee                isr4
                0x00000000c001faf8                isr5
                0x00000000c001fb02                isr6
                0x00000000c001fb0c                isr7
                0x00000000c001fb16                isr8
                0x00000000c001fb1e                isr9
                0x00000000c001fb28                isr10
                0x00000000c001fb30                isr11
                0x00000000c001fb38                isr12
                0x00000000c001fb40                isr13
                0x00000000c001fb5a                isr14
                0x00000000c001fb62                isr15
                0x00000000c001fb6c                isr16
                0x00000000c001fb76                isr17
                0x00000000c001fb80                isr18
                0x00000000c001fb8a                irq3
                0x00000000c001fb94                irq4
                0x00000000c001fb9e                irq5
                0x00000000c001fba8                irq6
                0x00000000c001fbb2                irq7
                0x00000000c001fbbc                irq8
                0x00000000c001fbc6                irq9
                0x00000000c001fbd0                irq10
                0x00000000c001fbda                irq11
                0x00000000c001fbe4                irq12
                0x00000000c001fbee                irq13
                0x00000000c001fbf8                irq14
                0x00000000c001fc02                irq15
                0x00000000c001fc0c                irq1
                0x00000000c001fc13                irq2
                0x00000000c001fc1a                isr96
                0x00000000c001fc21                irq0
                0x00000000c001fc26                int_common_stub
                0x00000000c001fc58                syscall_common_stub
                0x00000000c001fd5c                irq16
                0x00000000c001fd66                irq17
                0x00000000c001fd70                irq18
                0x00000000c001fd7a                irq19
                0x00000000c001fd84                irq20
                0x00000000c001fd8e                irq21
                0x00000000c001fd98                irq22
                0x00000000c001fda2                irq23
 *fill*         0x00000000c001fdac        0x4 
 .text          0x00000000c001fdb0       0x10 arch/i386/rdrand.32
                0x00000000c001fdb0                i386GetRDRAND
 .text          0x00000000c001fdc0       0x39 arch/i386/sse.32
                0x00000000c001fdc0                sseDetect
                0x00000000c001fdd8                sseSave
                0x00000000c001fde0                sseLoad
                0x00000000c001fde8                sseInit
                0x00000000c001fdf8                sseClose
 *fill*         0x00000000c001fdf9        0x7 
 .text          0x00000000c001fe00       0x4f arch/i386/x87.32
                0x00000000c001fe06                x87Detect
                0x00000000c001fe27                x87Save
                0x00000000c001fe2e                x87Load
                0x00000000c001fe35                x87Init
                0x00000000c001fe4e                x87Close
 *fill*         0x00000000c001fe4f        0x1 
 .text          0x00000000c001fe50       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001fe75        0x0 crtn.32
 *fill*         0x00000000c001fe75        0x3 
 .text          0x00000000c001fe78      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001fe78                __divdi3
 *fill*         0x00000000c001ffc3        0x1 
 .text          0x00000000c001ffc4      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001ffc4                __moddi3
 *fill*         0x00000000c0020142        0x2 
 .text          0x00000000c0020144       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0020144                __udivdi3
 *fill*         0x00000000c0020243        0x1 
 .text          0x00000000c0020244      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0020244                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0020360        0x0
 .iplt          0x00000000c0020360        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002035e        0xf
 .init          0x00000000c002035e        0x3 crti.32
                0x00000000c002035e                _init
 .init          0x00000000c0020361        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0020366        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c002036b        0x2 crtn.32

.fini           0x00000000c002036d        0xa
 .fini          0x00000000c002036d        0x3 crti.32
                0x00000000c002036d                _fini
 .fini          0x00000000c0020370        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0020375        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020378       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020378       0x1a hal/device.32
                0x00000000c0020378                DriverlessDevice::~DriverlessDevice()
                0x00000000c0020378                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020392       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020392       0x2a hal/device.32
                0x00000000c0020392                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00203bc       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00203bc       0xdc hal/device.32
                0x00000000c00203bc                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020498       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020498       0x42 hal/device.32
                0x00000000c0020498                LinkedList<Device>::LinkedList()
                0x00000000c0020498                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00204dc       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00204dc       0x1c hal/timer.32
                0x00000000c00204dc                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00204f8        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00204f8        0x7 hal/timer.32
                0x00000000c00204f8                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020500       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020500       0xbc hal/timer.32
                0x00000000c0020500                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00205bc       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00205bc       0xda hal/timer.32
                0x00000000c00205bc                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0020698       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0020698       0x23 hw/acpi.32
                0x00000000c0020698                ACPI::~ACPI()
                0x00000000c0020698                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c00206bc       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c00206bc       0x2a hw/acpi.32
                0x00000000c00206bc                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00206e8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00206e8        0x2 hw/acpi.32
                0x00000000c00206e8                LinkedList<Device>::~LinkedList()
                0x00000000c00206e8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00206ec       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00206ec       0x1c hw/acpi.32
                0x00000000c00206ec                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0020708        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0020708        0x7 hw/acpi.32
                0x00000000c0020708                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020710       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020710       0xb8 hw/acpi.32
                0x00000000c0020710                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c00207c8       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c00207c8       0x23 krnl/computer.32
                0x00000000c00207c8                Computer::~Computer()
                0x00000000c00207c8                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c00207ec       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c00207ec       0x2a krnl/computer.32
                0x00000000c00207ec                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0020816       0x24
 .text._Z10idleCommonv
                0x00000000c0020816       0x24 krnl/idle.32
                0x00000000c0020816                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002083a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002083a        0x2 krnl/unixfile.32
                0x00000000c002083a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c002083a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002083c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002083c       0x42 krnl/unixfile.32
                0x00000000c002083c                LinkedList<UnixFile>::LinkedList()
                0x00000000c002083c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002087e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002087e       0xd3 krnl/unixfile.32
                0x00000000c002087e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0020952        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0020952        0x7 krnl/unixfile.32
                0x00000000c0020952                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002095a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002095a       0xa1 krnl/unixfile.32
                0x00000000c002095a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00209fc        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00209fc        0x8 krnl/unixfile.32
                0x00000000c00209fc                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020a04        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020a04        0x8 sys/kill.32
                0x00000000c0020a04                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020a0c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020a0c        0x2 thr/prcssthr.32
                0x00000000c0020a0c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020a0c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020a10       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020a10       0x49 thr/prcssthr.32
                0x00000000c0020a10                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020a10                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020a5c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020a5c       0x42 thr/prcssthr.32
                0x00000000c0020a5c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020a5c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c0020a9e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0020a9e       0x23 arch/i386/hal.32
                0x00000000c0020a9e                CPU::~CPU()
                0x00000000c0020a9e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020ac2       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020ac2       0x2a arch/i386/hal.32
                0x00000000c0020ac2                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c0020aec       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020aec       0x23 hw/bus/pci.32
                0x00000000c0020aec                PCI::~PCI()
                0x00000000c0020aec                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0020b10       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0020b10       0x2a hw/bus/pci.32
                0x00000000c0020b10                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020b3a       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020b3a       0x23 hw/diskctrl/ide.32
                0x00000000c0020b3a                IDE::~IDE()
                0x00000000c0020b3a                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020b5e       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020b5e       0x2a hw/diskctrl/ide.32
                0x00000000c0020b5e                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020b88       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020b88       0x23 hw/diskctrl/satabus.32
                0x00000000c0020b88                SATABus::~SATABus()
                0x00000000c0020b88                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020bac       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020bac       0x2a hw/diskctrl/satabus.32
                0x00000000c0020bac                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020bd6       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020bd6       0x23 hw/diskphys/ata.32
                0x00000000c0020bd6                ATA::~ATA()
                0x00000000c0020bd6                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020bfa       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020bfa       0x2a hw/diskphys/ata.32
                0x00000000c0020bfa                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0020c24       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0020c24       0x23 hw/diskphys/atapi.32
                0x00000000c0020c24                ATAPI::~ATAPI()
                0x00000000c0020c24                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020c48       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020c48       0x2a hw/diskphys/atapi.32
                0x00000000c0020c48                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0020c72       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0020c72       0x23 hw/diskphys/sata.32
                0x00000000c0020c72                SATA::~SATA()
                0x00000000c0020c72                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020c96       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020c96       0x2a hw/diskphys/sata.32
                0x00000000c0020c96                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0020cc0       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0020cc0       0x23 hw/diskphys/satapi.32
                0x00000000c0020cc0                SATAPI::~SATAPI()
                0x00000000c0020cc0                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0020ce4       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0020ce4       0x2a hw/diskphys/satapi.32
                0x00000000c0020ce4                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020d0e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020d0e       0x23 hw/intctrl/apic.32
                0x00000000c0020d0e                IOAPIC::~IOAPIC()
                0x00000000c0020d0e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0020d32       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0020d32       0x2a hw/intctrl/apic.32
                0x00000000c0020d32                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020d5c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020d5c       0x23 hw/timer/apictimer.32
                0x00000000c0020d5c                APICTimer::~APICTimer()
                0x00000000c0020d5c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0020d80       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0020d80       0x2a hw/timer/apictimer.32
                0x00000000c0020d80                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020dac       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020dac       0x23 hw/timer/pit.32
                0x00000000c0020dac                PIT::~PIT()
                0x00000000c0020dac                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0020dd0       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0020dd0       0x2a hw/timer/pit.32
                0x00000000c0020dd0                PIT::~PIT()

.rodata         0x00000000c0020dfa     0x3a3a
                0x00000000c0020dfa                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020dfa        0x2 
 .ctors         0x00000000c0020dfc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0020e00        0x4 krnl/unixfile.32
 .ctors         0x00000000c0020e04        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020e08        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020e0c                end_ctors = .
                0x00000000c0020e0c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020e0c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0020e10        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020e10                __DTOR_END__
                0x00000000c0020e14                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020e14        0xc 
 .rodata        0x00000000c0020e20      0x101 acpica/utclib.32
                0x00000000c0020e20                AcpiGbl_Ctypes
 *fill*         0x00000000c0020f21        0x3 
 .rodata        0x00000000c0020f24       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0020f3c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020f86       0x1a 
 .rodata        0x00000000c0020fa0       0xed fs/fat/ff.32
 *fill*         0x00000000c002108d       0x13 
 .rodata        0x00000000c00210a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00214a0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002150f       0x11 dbg/kconsole.32
 .rodata        0x00000000c0021520      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021670      0x169 dbg/usban.32
 *fill*         0x00000000c00217d9        0x3 
 .rodata.str1.4
                0x00000000c00217dc      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0021913      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c0021a36       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0021a8f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021a90       0x6c fs/vfs.32
                0x00000000c0021a90                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021afc       0x1c fs/vfs.32
                0x00000000c0021afc                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021b18       0x1c fs/vfs.32
                0x00000000c0021b18                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021b34       0x2c hal/bus.32
                0x00000000c0021b34                vtable for Bus
 .rodata.str1.1
                0x00000000c0021b60       0x70 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0021bd0       0x3c hal/clock.32
                0x00000000c0021bd0                vtable for Clock
 *fill*         0x00000000c0021c0c       0x14 
 .rodata        0x00000000c0021c20       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021c50       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021cb4       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021cd6       0x15 hal/device.32
 *fill*         0x00000000c0021ceb        0x1 
 .rodata._ZTV6Device
                0x00000000c0021cec       0x2c hal/device.32
                0x00000000c0021cec                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021d18       0x2c hal/device.32
                0x00000000c0021d18                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021d44       0x2c hal/diskctrl.32
                0x00000000c0021d44                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021d70       0x38 hal/diskphys.32
                0x00000000c0021d70                vtable for PhysicalDisk
 .rodata        0x00000000c0021da8       0x53 hal/keybrd.32
 *fill*         0x00000000c0021dfb        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0021dfc       0x34 hal/keybrd.32
                0x00000000c0021dfc                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021e30       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021e74       0x2c hal/logidisk.32
                0x00000000c0021e74                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021ea0       0x2c hal/mouse.32
                0x00000000c0021ea0                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021ecc       0x34 hal/nic.32
                0x00000000c0021ecc                vtable for NIC
 .rodata.str1.1
                0x00000000c0021f00        0xb hal/partition.32
 *fill*         0x00000000c0021f0b        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021f0c       0x44 hal/serial.32
                0x00000000c0021f0c                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021f50       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021f9b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021fa3       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021fa3       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0021fa3       0xca hal/timer.32
 *fill*         0x00000000c002206d        0x3 
 .rodata._ZTV5Timer
                0x00000000c0022070       0x30 hal/timer.32
                0x00000000c0022070                vtable for Timer
 .rodata.str1.1
                0x00000000c00220a0       0x3e hal/vcache.32
 *fill*         0x00000000c00220de        0x2 
 .rodata._ZTV6VCache
                0x00000000c00220e0       0x10 hal/vcache.32
                0x00000000c00220e0                vtable for VCache
 .rodata.str1.1
                0x00000000c00220f0       0xba hal/video.32
 *fill*         0x00000000c00221aa        0x2 
 .rodata._ZTV5Video
                0x00000000c00221ac       0x4c hal/video.32
                0x00000000c00221ac                vtable for Video
 .rodata.str1.1
                0x00000000c00221f8      0x17e hw/acpi.32
 *fill*         0x00000000c0022376        0x2 
 .rodata.str1.4
                0x00000000c0022378       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00223ef       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00223ef        0x8 hw/acpi.32
 *fill*         0x00000000c00223ef        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00223f0       0x2c hw/acpi.32
                0x00000000c00223f0                vtable for ACPI
 .rodata.str1.1
                0x00000000c002241c       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c002245c       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c002247d       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c00224b0        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c00224b3       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c0022529        0x3 
 .rodata.str1.4
                0x00000000c002252c       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c00225e4       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c002268d        0x3 
 .rodata._ZTV8Computer
                0x00000000c0022690       0x2c krnl/computer.32
                0x00000000c0022690                vtable for Computer
 .rodata.str1.1
                0x00000000c00226bc       0x3c krnl/env.32
 .rodata        0x00000000c00226f8       0xbe krnl/fault.32
 *fill*         0x00000000c00227b6        0x2 
 .rodata.str1.4
                0x00000000c00227b8       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c00227e8        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c00227f7       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c0022858      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c002295d       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00229b5       0x39 krnl/pipe.32
 *fill*         0x00000000c00229ee        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00229f0       0x1c krnl/pipe.32
                0x00000000c00229f0                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022a0c       0x91 krnl/resolve.32
 *fill*         0x00000000c0022a9d        0x3 
 .rodata.str1.4
                0x00000000c0022aa0       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c0022abf       0xc9 krnl/signal.32
 .rodata.str1.4
                0x00000000c0022b88       0x72 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c0022bfa       0x7e krnl/syscalls.32
                                         0x86 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022c78       0x1a krnl/terminal.32
                                         0x2b (size before relaxing)
 *fill*         0x00000000c0022c92        0x2 
 .rodata._ZTV7VgaText
                0x00000000c0022c94       0x1c krnl/terminal.32
                0x00000000c0022c94                vtable for VgaText
 .rodata        0x00000000c0022cb0       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0022ceb       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0022ceb       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0022ceb       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0022ceb        0x8 krnl/unixfile.32
 *fill*         0x00000000c0022ceb        0x1 
 .rodata.str1.4
                0x00000000c0022cec       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0022d0c       0x46 krnl/unixfile.32
 *fill*         0x00000000c0022d52        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c0022d54       0x1c krnl/unixfile.32
                0x00000000c0022d54                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0022d70       0x1c krnl/unixfile.32
                0x00000000c0022d70                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0022d8c      0x523 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c00232af      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0023410        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c002341f        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0023429       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002344a       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c002349e       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00234ca      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c00236d4       0x7c thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0023750       0xf0 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023840       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023840       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023840       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023840        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0023840       0xdd vm86/vm8086.32
 *fill*         0x00000000c002391d        0x3 
 .rodata        0x00000000c0023920       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0023950      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c0023c9b        0x1 
 .rodata.str1.4
                0x00000000c0023c9c       0x57 arch/i386/hal.32
 *fill*         0x00000000c0023cf3        0x1 
 .rodata._ZTV3CPU
                0x00000000c0023cf4       0x2c arch/i386/hal.32
                0x00000000c0023cf4                vtable for CPU
 .rodata.str1.4
                0x00000000c0023d20       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023d81       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023dbf       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0023dd4       0x3c arch/i386/rtc.32
                0x00000000c0023dd4                vtable for RTC
 .rodata.str1.1
                0x00000000c0023e10       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0023e51        0x3 
 .rodata._ZTV3FAT
                0x00000000c0023e54       0x6c fs/fat/vfslink.32
                0x00000000c0023e54                vtable for FAT
 .rodata.str1.1
                0x00000000c0023ec0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0023ec0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0023ff8       0x6c fs/iso9660/vfslink.32
                0x00000000c0023ff8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0024064       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00240a8       0x34 hal/sound/sndcard.32
                0x00000000c00240a8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00240dc       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002411b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0024153       0xa1 hw/bus/pci.32
 .rodata        0x00000000c00241f4       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0024258       0x2c hw/bus/pci.32
                0x00000000c0024258                vtable for PCI
 .rodata.str1.1
                0x00000000c0024284      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c00243a8       0x2c hw/diskctrl/ide.32
                0x00000000c00243a8                vtable for IDE
 .rodata.str1.4
                0x00000000c00243d4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00243f8       0x2c hw/diskctrl/satabus.32
                0x00000000c00243f8                vtable for SATABus
 .rodata.str1.1
                0x00000000c0024424       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c00244df        0x1 
 .rodata._ZTV3ATA
                0x00000000c00244e0       0x38 hw/diskphys/ata.32
                0x00000000c00244e0                vtable for ATA
 .rodata.str1.1
                0x00000000c0024518        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0024525        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0024528       0x38 hw/diskphys/atapi.32
                0x00000000c0024528                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0024560       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00245e8       0x38 hw/diskphys/sata.32
                0x00000000c00245e8                vtable for SATA
 .rodata.str1.1
                0x00000000c0024620       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c002470a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c002470c       0x38 hw/diskphys/satapi.32
                0x00000000c002470c                vtable for SATAPI
 .rodata        0x00000000c0024744       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c002476a        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c002476c       0x2c hw/intctrl/apic.32
                0x00000000c002476c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0024798       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00247b3        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00247b4       0x30 hw/timer/apictimer.32
                0x00000000c00247b4                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00247e4       0x1d hw/timer/pit.32
 *fill*         0x00000000c0024801        0x3 
 .rodata._ZTV3PIT
                0x00000000c0024804       0x30 hw/timer/pit.32
                0x00000000c0024804                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0024834      0xa51
 *(.data)
 .data          0x00000000c0024834        0x0 crti.32
 .data          0x00000000c0024834        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0024834                __dso_handle
 .data          0x00000000c0024838        0x0 acpica/utclib.32
 .data          0x00000000c0024838        0x0 krnl/malloc.32
 .data          0x00000000c0024838        0x0 libk/ctype.32
 .data          0x00000000c0024838        0x0 libk/string.32
 .data          0x00000000c0024838        0x0 arch/i386/cc.32
 .data          0x00000000c0024838        0x0 fs/fat/diskio.32
 .data          0x00000000c0024838        0x0 fs/fat/ff.32
 .data          0x00000000c0024838        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0024838        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0024838        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0024838        0x0 dbg/kconsole.32
 *fill*         0x00000000c0024838        0x8 
 .data          0x00000000c0024840       0x28 dbg/usban.32
                0x00000000c0024840                KiUsbanTypeMismatchTypes
 .data          0x00000000c0024868        0x0 fs/symlink.32
 .data          0x00000000c0024868        0x0 fs/vfs.32
 .data          0x00000000c0024868        0x0 hal/bus.32
 .data          0x00000000c0024868        0x0 hal/buzzer.32
 .data          0x00000000c0024868        0x0 hal/clock.32
 .data          0x00000000c0024868        0x0 hal/device.32
 .data          0x00000000c0024868        0x0 hal/diskctrl.32
 .data          0x00000000c0024868        0x0 hal/diskphys.32
 .data          0x00000000c0024868        0x0 hal/fpu.32
 .data          0x00000000c0024868        0x0 hal/intctrl.32
 .data          0x00000000c0024868        0x0 hal/keybrd.32
 .data          0x00000000c0024868        0x0 hal/logidisk.32
 .data          0x00000000c0024868        0x0 hal/mouse.32
 .data          0x00000000c0024868        0x0 hal/nic.32
 .data          0x00000000c0024868        0x0 hal/partition.32
 .data          0x00000000c0024868        0x0 hal/serial.32
 .data          0x00000000c0024868        0x0 hal/timer.32
 .data          0x00000000c0024868        0x0 hal/vcache.32
 .data          0x00000000c0024868        0x0 hal/video.32
 .data          0x00000000c0024868       0x10 hw/acpi.32
                0x00000000c0024868                legacyIRQRemaps
 .data          0x00000000c0024878        0x0 krnl/atexit.32
 .data          0x00000000c0024878        0x0 krnl/bootmsg.32
 .data          0x00000000c0024878        0x4 krnl/c++.32
                0x00000000c0024878                __stack_chk_guard
 .data          0x00000000c002487c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002487c        0x4 
 .data          0x00000000c0024880      0x100 krnl/cm.32
                0x00000000c0024880                CmComponents
 .data          0x00000000c0024980        0x0 krnl/compat.32
 .data          0x00000000c0024980        0x0 krnl/computer.32
 .data          0x00000000c0024980      0x400 krnl/crc32.32
                0x00000000c0024980                KiPolyLookupCRC32
 .data          0x00000000c0024d80       0x4d krnl/env.32
                0x00000000c0024d80                defaultSysEnv
 .data          0x00000000c0024dcd        0x0 krnl/fault.32
 .data          0x00000000c0024dcd        0x0 krnl/gdt.32
 .data          0x00000000c0024dcd        0x0 krnl/idle.32
 .data          0x00000000c0024dcd        0x0 krnl/idt.32
 .data          0x00000000c0024dcd        0x0 krnl/inlines.32
 *fill*         0x00000000c0024dcd        0x3 
 .data          0x00000000c0024dd0        0x4 krnl/kheap.32
 .data          0x00000000c0024dd4        0x0 krnl/mailbox.32
 .data          0x00000000c0024dd4        0x0 krnl/main.32
 .data          0x00000000c0024dd4        0x0 krnl/mutex.32
 .data          0x00000000c0024dd4        0x0 krnl/panic.32
 .data          0x00000000c0024dd4        0x4 krnl/physmgr.32
                0x00000000c0024dd4                Phys::bitmap
 .data          0x00000000c0024dd8        0x0 krnl/pipe.32
 .data          0x00000000c0024dd8        0x0 krnl/powctrl.32
 .data          0x00000000c0024dd8        0x0 krnl/random.32
 .data          0x00000000c0024dd8        0x0 krnl/resolve.32
 .data          0x00000000c0024dd8        0x0 krnl/semaphore.32
 *fill*         0x00000000c0024dd8        0x8 
 .data          0x00000000c0024de0       0x4c krnl/signal.32
                0x00000000c0024de0                KiDefaultSignalHandlers
 *fill*         0x00000000c0024e2c       0x14 
 .data          0x00000000c0024e40      0x104 krnl/syscalls.32
                0x00000000c0024e40                systemCallHandlers
 *fill*         0x00000000c0024f44       0x1c 
 .data          0x00000000c0024f60       0x60 krnl/terminal.32
                0x00000000c0024f60                VgaText::hiddenOut
                0x00000000c0024f80                ansiToVGAMappings
 .data          0x00000000c0024fc0        0x0 krnl/tss.32
 .data          0x00000000c0024fc0        0x4 krnl/unixfile.32
                0x00000000c0024fc0                UnixFile::nextFd
 .data          0x00000000c0024fc4       0x15 krnl/virtmgr.32
                0x00000000c0024fc4                Virt::pageAllocPtr
                0x00000000c0024fc8                Virt::bitmap
                0x00000000c0024fcc                Virt::swapfileSectorsPerPage
                0x00000000c0024fd0                Virt::swapfileLength
                0x00000000c0024fd4                Virt::swapfileSector
                0x00000000c0024fd8                Virt::swapfileDrive
 .data          0x00000000c0024fd9        0x0 sys/eject.32
 .data          0x00000000c0024fd9        0x0 sys/exit.32
 .data          0x00000000c0024fd9        0x0 sys/getcwd.32
 .data          0x00000000c0024fd9        0x0 sys/getpid.32
 .data          0x00000000c0024fd9        0x0 sys/getramdata.32
 .data          0x00000000c0024fd9        0x0 sys/getvgaptr.32
 .data          0x00000000c0024fd9        0x0 sys/kill.32
 .data          0x00000000c0024fd9        0x0 sys/loaddll.32
 .data          0x00000000c0024fd9        0x0 sys/read.32
 .data          0x00000000c0024fd9        0x0 sys/registersignal.32
 .data          0x00000000c0024fd9        0x0 sys/registry.32
 .data          0x00000000c0024fd9        0x0 sys/sbrk.32
 .data          0x00000000c0024fd9        0x0 sys/setcwd.32
 .data          0x00000000c0024fd9        0x0 sys/settime.32
 .data          0x00000000c0024fd9        0x0 sys/symlink.32
 .data          0x00000000c0024fd9        0x0 sys/timezone.32
 .data          0x00000000c0024fd9        0x0 sys/truncate.32
 .data          0x00000000c0024fd9        0x0 sys/write.32
 .data          0x00000000c0024fd9        0x0 sys/wsbe.32
 .data          0x00000000c0024fd9        0x0 sys/yield.32
 .data          0x00000000c0024fd9        0x0 thr/elf.32
 .data          0x00000000c0024fd9        0x0 thr/exec.32
 *fill*         0x00000000c0024fd9        0x3 
 .data          0x00000000c0024fdc        0x4 thr/prcssthr.32
                0x00000000c0024fdc                Thr::nextPID
 .data          0x00000000c0024fe0        0x0 vm86/vm8086.32
 .data          0x00000000c0024fe0      0x2a4 arch/i386/hal.32
                0x00000000c0024fe0                exceptionNames
                0x00000000c0025280                lastCode
 .data          0x00000000c0025284        0x0 arch/i386/intctrl.32
 .data          0x00000000c0025284        0x0 arch/i386/pic.32
 .data          0x00000000c0025284        0x0 arch/i386/rtc.32
 .data          0x00000000c0025284        0x0 arch/i386/vga.32
 .data          0x00000000c0025284        0x0 fs/fat/vfslink.32
 .data          0x00000000c0025284        0x0 fs/iso9660/helper.32
 .data          0x00000000c0025284        0x1 fs/iso9660/vfslink.32
                0x00000000c0025284                recentDriveletter
 .data          0x00000000c0025285        0x0 hal/sound/sndcard.32
 .data          0x00000000c0025285        0x0 hal/sound/sndport.32
 .data          0x00000000c0025285        0x0 hw/bus/isa.32
 .data          0x00000000c0025285        0x0 hw/bus/pci.32
 .data          0x00000000c0025285        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0025285        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0025285        0x0 hw/diskphys/ata.32
 .data          0x00000000c0025285        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0025285        0x0 hw/diskphys/sata.32
 .data          0x00000000c0025285        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0025285        0x0 hw/intctrl/apic.32
 .data          0x00000000c0025285        0x0 hw/timer/apictimer.32
 .data          0x00000000c0025285        0x0 hw/timer/pit.32
 .data          0x00000000c0025285        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0025285        0x0 crtn.32
 .data          0x00000000c0025285        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0025285        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0025285        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0025285        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0025288        0x0
 .got           0x00000000c0025288        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0025288        0x0
 .got.plt       0x00000000c0025288        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0025288        0x0
 .igot.plt      0x00000000c0025288        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0025288        0x0
 .tm_clone_table
                0x00000000c0025288        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0025288        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0025285      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0025285        0x3 
 .eh_frame      0x00000000c0025288        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0025288        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0025288       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00252e0       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0025320       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002538c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0026000       0x7d
 *(userkernel)
 userkernel     0x00000000c0026000       0x52 krnl/signal.32
                0x00000000c0026000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002602c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0026052       0x2b krnl/syscalls.32
                0x00000000c0026052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0027000        0x1
 *(align_previous)
 align_previous
                0x00000000c0027000        0x1 krnl/signal.32
                0x00000000c0027000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0027004        0x0
 .rel.got       0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0027001     0x7127
                0x00000000c0027001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0027001       0x1f 
 COMMON         0x00000000c0027020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0027020                dcache
                0x00000000c0027060                cdDriveLetter
                0x00000000c0027080                icache
 *(.bss)
 .bss           0x00000000c00270c0        0x0 crti.32
 .bss           0x00000000c00270c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00270e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00270e4       0x1c 
 .bss           0x00000000c0027100      0x378 krnl/malloc.32
 .bss           0x00000000c0027478        0x0 libk/ctype.32
 .bss           0x00000000c0027478        0x0 libk/string.32
 .bss           0x00000000c0027478        0x0 arch/i386/cc.32
 .bss           0x00000000c0027478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0027478        0x8 
 .bss           0x00000000c0027480       0x88 fs/fat/ff.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0027508       0x18 
 .bss           0x00000000c0027520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0027eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0027eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0027eb8        0x8 
 .bss           0x00000000c0027ec0     0x2444 fs/symlink.32
                0x00000000c0027ec0                kiNumWaitingRoomSymlinks
                0x00000000c0027ee0                kiNewlyCreatedIDs
                0x00000000c0027f00                kiNewlyCreatedSymlinks
                0x00000000c0028300                kiSymlinkHashTable
                0x00000000c002a300                kiBaseSymlinkID
 .bss           0x00000000c002a304        0x4 fs/vfs.32
                0x00000000c002a304                installedFilesystems
 .bss           0x00000000c002a308        0x0 hal/bus.32
 .bss           0x00000000c002a308        0x0 hal/buzzer.32
 .bss           0x00000000c002a308        0x8 hal/clock.32
                0x00000000c002a308                keDstOn
                0x00000000c002a309                keTimezoneHalfHourOffset
                0x00000000c002a30c                keTimezoneHourOffset
 .bss           0x00000000c002a310        0x0 hal/device.32
 .bss           0x00000000c002a310        0x0 hal/diskctrl.32
 .bss           0x00000000c002a310        0x0 hal/diskphys.32
 .bss           0x00000000c002a310        0x0 hal/fpu.32
 .bss           0x00000000c002a310        0x0 hal/intctrl.32
 *fill*         0x00000000c002a310       0x10 
 .bss           0x00000000c002a320      0x428 hal/keybrd.32
                0x00000000c002a320                keyboardWaitingTaskList
                0x00000000c002a324                keyboardSetupYet
                0x00000000c002a328                guiKeyboardHandler
                0x00000000c002a340                keystates
 *fill*         0x00000000c002a748       0x18 
 .bss           0x00000000c002a760       0x88 hal/logidisk.32
                0x00000000c002a760                diskAssignments
                0x00000000c002a780                disks
 .bss           0x00000000c002a7e8        0x4 hal/mouse.32
                0x00000000c002a7e8                guiMouseHandler
 .bss           0x00000000c002a7ec        0x0 hal/nic.32
 .bss           0x00000000c002a7ec        0x0 hal/partition.32
 .bss           0x00000000c002a7ec        0x0 hal/serial.32
 .bss           0x00000000c002a7ec        0x4 hal/timer.32
                0x00000000c002a7ec                milliTenthsSinceBoot
 .bss           0x00000000c002a7f0        0x0 hal/vcache.32
 .bss           0x00000000c002a7f0        0x4 hal/video.32
                0x00000000c002a7f0                screen
 *fill*         0x00000000c002a7f4        0xc 
 .bss           0x00000000c002a800      0x480 hw/acpi.32
                0x00000000c002a800                nextACPITable
                0x00000000c002a820                acpiTables
                0x00000000c002aa20                usingXSDT
                0x00000000c002aa24                RSDTpointer
                0x00000000c002aa28                RSDPpointer
                0x00000000c002aa2c                nextAPICNMI
                0x00000000c002aa40                apicNMIInfo
                0x00000000c002aac0                legacyIRQFlags
                0x00000000c002aae0                ioapicDiscoveryNumber
                0x00000000c002ab00                ioapicFoundInMADT
                0x00000000c002ab20                ioapicAddresses
                0x00000000c002aba0                ioapicGSIBase
                0x00000000c002ac20                processorDiscoveryNumber
                0x00000000c002ac40                matchingAPICID
                0x00000000c002ac60                processorID
 .bss           0x00000000c002ac80       0xe0 krnl/atexit.32
                0x00000000c002ac80                KiNextAtexitHandler
                0x00000000c002aca0                KiAtexitContexts
                0x00000000c002ad00                KiAtexitHandlers
 .bss           0x00000000c002ad60        0x0 krnl/bootmsg.32
 .bss           0x00000000c002ad60        0x0 krnl/c++.32
 .bss           0x00000000c002ad60        0x0 krnl/cdefs.32
 .bss           0x00000000c002ad60        0x4 krnl/cm.32
 .bss           0x00000000c002ad64        0x0 krnl/compat.32
 .bss           0x00000000c002ad64       0x12 krnl/computer.32
                0x00000000c002ad64                systemSleepFunction
                0x00000000c002ad68                systemResetFunction
                0x00000000c002ad6c                systemShutdownFunction
                0x00000000c002ad70                Krnl::computer
                0x00000000c002ad74                KeIsPreemptionOn
                0x00000000c002ad75                KeIsSchedulingOn
 .bss           0x00000000c002ad76        0x0 krnl/crc32.32
 *fill*         0x00000000c002ad76        0x2 
 .bss           0x00000000c002ad78        0x8 krnl/env.32
                0x00000000c002ad78                KeUserEnv
                0x00000000c002ad7c                KeSystemEnv
 .bss           0x00000000c002ad80     0x2000 krnl/fault.32
                0x00000000c002ad80                keInterruptContexts
                0x00000000c002bd80                keInterruptHandlers
 .bss           0x00000000c002cd80        0x6 krnl/gdt.32
                0x00000000c002cd80                gdtDescr
 .bss           0x00000000c002cd86        0x0 krnl/idle.32
 *fill*         0x00000000c002cd86        0x2 
 .bss           0x00000000c002cd88        0x6 krnl/idt.32
                0x00000000c002cd88                idtDescr
 .bss           0x00000000c002cd8e        0x0 krnl/inlines.32
 .bss           0x00000000c002cd8e        0x0 krnl/kheap.32
 .bss           0x00000000c002cd8e        0x0 krnl/mailbox.32
 *fill*         0x00000000c002cd8e        0x2 
 .bss           0x00000000c002cd90        0x4 krnl/main.32
                0x00000000c002cd90                keBootSettings
 .bss           0x00000000c002cd94        0x0 krnl/mutex.32
 .bss           0x00000000c002cd94        0x1 krnl/panic.32
                0x00000000c002cd94                KeIsKernelInPanic
 *fill*         0x00000000c002cd95        0x3 
 .bss           0x00000000c002cd98       0x29 krnl/physmgr.32
                0x00000000c002cd98                Phys::forbidEvictions
                0x00000000c002cd9c                Phys::currentPagePointer
                0x00000000c002cda0                Phys::highestMem
                0x00000000c002cda4                Phys::oldPercent
                0x00000000c002cda8                Phys::usedPages
                0x00000000c002cdac                Phys::usablePages
                0x00000000c002cdb0                Phys::dmaUsage
 .bss           0x00000000c002cdc1        0x0 krnl/pipe.32
 *fill*         0x00000000c002cdc1       0x1f 
 .bss           0x00000000c002cde0       0x48 krnl/powctrl.32
                0x00000000c002cde0                powCtrlOnBattery
                0x00000000c002ce00                currentPowerSettings
                0x00000000c002ce24                secondsSinceLastUserIO
 .bss           0x00000000c002ce28        0x8 krnl/random.32
                0x00000000c002ce28                kiRandSeed
 .bss           0x00000000c002ce30        0x0 krnl/resolve.32
 .bss           0x00000000c002ce30        0x0 krnl/semaphore.32
 .bss           0x00000000c002ce30        0x0 krnl/signal.32
 .bss           0x00000000c002ce30        0x0 krnl/syscalls.32
 .bss           0x00000000c002ce30        0x9 krnl/terminal.32
                0x00000000c002ce30                terminalCycle
                0x00000000c002ce34                activeTerminal
                0x00000000c002ce38                VgaText::graphicMode
 *fill*         0x00000000c002ce39        0x1 
 .bss           0x00000000c002ce3a        0x2 krnl/tss.32
                0x00000000c002ce3a                doubleFaultSelector
 *fill*         0x00000000c002ce3c        0x4 
 .bss           0x00000000c002ce40       0x84 krnl/unixfile.32
                0x00000000c002ce40                sfileLpt
                0x00000000c002ce80                sfileCom
                0x00000000c002cea4                sfileNul
                0x00000000c002cea8                sfilePnt
                0x00000000c002ceac                sfileAux
                0x00000000c002ceb0                sfileCon
                0x00000000c002ceb4                initialFilesAdded
                0x00000000c002ceb8                unixFileLinkedList
 .bss           0x00000000c002cec4       0x10 krnl/virtmgr.32
                0x00000000c002cec4                twswaps
                0x00000000c002cec8                swapBalance
                0x00000000c002cecc                Virt::swapfileBitmap
                0x00000000c002ced0                keFirstVAS
 .bss           0x00000000c002ced4        0x0 sys/eject.32
 .bss           0x00000000c002ced4        0x0 sys/exit.32
 .bss           0x00000000c002ced4        0x0 sys/getcwd.32
 .bss           0x00000000c002ced4        0x0 sys/getpid.32
 .bss           0x00000000c002ced4        0x0 sys/getramdata.32
 .bss           0x00000000c002ced4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002ced4        0x0 sys/kill.32
 .bss           0x00000000c002ced4        0x0 sys/loaddll.32
 .bss           0x00000000c002ced4        0x0 sys/read.32
 .bss           0x00000000c002ced4        0x0 sys/registersignal.32
 .bss           0x00000000c002ced4        0x0 sys/registry.32
 .bss           0x00000000c002ced4        0x0 sys/sbrk.32
 .bss           0x00000000c002ced4        0x0 sys/setcwd.32
 .bss           0x00000000c002ced4        0x0 sys/settime.32
 .bss           0x00000000c002ced4        0x0 sys/symlink.32
 .bss           0x00000000c002ced4        0x0 sys/timezone.32
 .bss           0x00000000c002ced4        0x0 sys/truncate.32
 .bss           0x00000000c002ced4        0x0 sys/write.32
 .bss           0x00000000c002ced4        0x0 sys/wsbe.32
 .bss           0x00000000c002ced4        0x0 sys/yield.32
 *fill*         0x00000000c002ced4        0xc 
 .bss           0x00000000c002cee0      0x7a4 thr/elf.32
                0x00000000c002cee0                Thr::driverLookupNext
                0x00000000c002cf00                Thr::driverLookupLen
                0x00000000c002d100                Thr::driverLookupAddr
                0x00000000c002d300                Thr::driverNameLookup
                0x00000000c002d500                Thr::kernelSymbols
                0x00000000c002d580                Thr::kernelStringTable
                0x00000000c002d600                Thr::kernelSymbolTable
                0x00000000c002d680                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002d684        0x0 thr/exec.32
 *fill*         0x00000000c002d684        0x4 
 .bss           0x00000000c002d688       0x70 thr/prcssthr.32
                0x00000000c002d688                KiRestorePreemptionValue
                0x00000000c002d68c                KiPreemptionDisableCounter
                0x00000000c002d690                cleanerThread
                0x00000000c002d694                weNeedTheCleanerToNotBlock
                0x00000000c002d698                retValLockStuff
                0x00000000c002d69c                retValSchedLock
                0x00000000c002d6a0                lockStuffLock
                0x00000000c002d6a4                schedulerLock
                0x00000000c002d6a8                taskSwitchesPostponedFlag
                0x00000000c002d6ac                postponeTaskSwitchesCounter
                0x00000000c002d6b0                irqDisableCounter
                0x00000000c002d6b4                terminatedTaskList
                0x00000000c002d6c0                sleepingTaskList
                0x00000000c002d6cc                taskList
                0x00000000c002d6d8                kernelProcess
 *fill*         0x00000000c002d6f8        0x8 
 .bss           0x00000000c002d700       0x40 vm86/vm8086.32
                0x00000000c002d700                Vm::started8086Yet
                0x00000000c002d704                Vm::vmRetV
                0x00000000c002d708                Vm::vmDone
                0x00000000c002d709                Vm::vmReady
                0x00000000c002d70c                Vm::vm86Thread
                0x00000000c002d710                Vm::vmToHostCommsPtr
                0x00000000c002d720                Vm::vmToHostComms
 .bss           0x00000000c002d740       0x54 arch/i386/hal.32
                0x00000000c002d740                apic
                0x00000000c002d744                guiPanicHandler
                0x00000000c002d748                fpuOwner
                0x00000000c002d74c                coproLoadFunc
                0x00000000c002d750                coproSaveFunc
                0x00000000c002d754                lastD
                0x00000000c002d758                lastC
                0x00000000c002d75c                lastB
                0x00000000c002d760                lastA
                0x00000000c002d764                HalPageWriteCombiningFlag
                0x00000000c002d768                HalPageGlobalFlag
                0x00000000c002d76c                nmi
                0x00000000c002d770                vendorIDString
                0x00000000c002d77d                familyID
                0x00000000c002d77e                model
                0x00000000c002d77f                processorType
                0x00000000c002d780                steppingID
                0x00000000c002d784                vendor
                0x00000000c002d788                opcodeDetectionMode
                0x00000000c002d78c                features
 .bss           0x00000000c002d794        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002d794        0x0 arch/i386/pic.32
 .bss           0x00000000c002d794        0x2 arch/i386/rtc.32
 .bss           0x00000000c002d796        0x0 arch/i386/vga.32
 *fill*         0x00000000c002d796        0xa 
 .bss           0x00000000c002d7a0       0xf0 fs/fat/vfslink.32
                0x00000000c002d7a0                FAT::fats
                0x00000000c002d7c0                FAT::vfsToFatRemaps
                0x00000000c002d840                fatToVFSRemaps
 .bss           0x00000000c002d890        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002d890       0x10 
 .bss           0x00000000c002d8a0      0x820 fs/iso9660/vfslink.32
                0x00000000c002d8a0                iso9660Owner
                0x00000000c002d8a4                recentSector
                0x00000000c002d8c0                recentBuffer
 .bss           0x00000000c002e0c0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002e0c0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002e0c0        0x0 hw/bus/isa.32
 .bss           0x00000000c002e0c0        0xd hw/bus/pci.32
                0x00000000c002e0c0                thePCI
 .bss           0x00000000c002e0cd        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002e0cd        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002e0cd        0x3 
 .bss           0x00000000c002e0d0        0x8 hw/diskphys/ata.32
                0x00000000c002e0d0                ataSectorsWritten
                0x00000000c002e0d4                ataSectorsRead
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002e0d8        0x8 
 .bss           0x00000000c002e0e0       0x41 hw/intctrl/apic.32
                0x00000000c002e0e0                noOfIOAPICs
                0x00000000c002e100                ioapics
                0x00000000c002e120                IOAPICsSetupYet
 .bss           0x00000000c002e121        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002e121        0x3 
 .bss           0x00000000c002e124        0x4 hw/timer/pit.32
                0x00000000c002e124                pitFreq
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002e128        0x0 crtn.32
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002e128                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003524f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
