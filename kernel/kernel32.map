Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f90a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6c3 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca8                Krnl::firstTask()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006e96                Computer::setBootMessage(char const*)
                0x00000000c0006e98                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070ec                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007128                Computer::shutdown()
                0x00000000c0007140                Computer::restart()
                0x00000000c0007158                Computer::sleep()
                0x00000000c000716c                Computer::nmiEnabled()
                0x00000000c0007178                Computer::readCMOS(unsigned char)
                0x00000000c0007196                Computer::enableNMI(bool)
                0x00000000c00071ae                Computer::open(int, int, void*)
                0x00000000c0007282                Computer::disableNMI()
                0x00000000c0007292                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072b6                Computer::handleNMI()
 *fill*         0x00000000c0007321        0x1 
 .text          0x00000000c0007322      0x1db core/gdt.32
                0x00000000c0007322                GDTEntry::setBase(unsigned int)
                0x00000000c000733e                GDTEntry::setLimit(unsigned int)
                0x00000000c000735c                GDT::GDT()
                0x00000000c000735c                GDT::GDT()
                0x00000000c0007372                GDT::addEntry(GDTEntry)
                0x00000000c0007394                GDT::getNumberOfEntries()
                0x00000000c000739c                GDT::flush()
                0x00000000c00073be                GDT::setup()
 .text          0x00000000c00074fd       0x1d core/idle.32
                0x00000000c00074fd                idleFunction(void*)
 *fill*         0x00000000c000751a        0x2 
 .text          0x00000000c000751c      0x46c core/idt.32
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c0007596                IDTEntry::setOffset(unsigned int)
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ae                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075b6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007608                IDT::flush()
                0x00000000c0007622                IDT::setup()
 .text          0x00000000c0007988      0x188 core/kheap.32
                0x00000000c0007988                sbrk
                0x00000000c0007a1f                mmap
                0x00000000c0007a35                munmap
                0x00000000c0007a4b                liballoc_lock()
                0x00000000c0007a59                liballoc_unlock()
                0x00000000c0007a6f                liballoc_alloc(int)
                0x00000000c0007a87                liballoc_free(void*, int)
                0x00000000c0007aa2                realloc
                0x00000000c0007ab6                malloc
                0x00000000c0007ac6                free
                0x00000000c0007ad6                rfree
                0x00000000c0007ae6                calloc
 .text          0x00000000c0007b10       0xc7 core/main.32
                0x00000000c0007b10                KeEntryPoint
 .text          0x00000000c0007bd7      0x644 core/physmgr.32
                0x00000000c0007bd7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cbf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfa                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3a                Phys::getPageState(unsigned long)
                0x00000000c0007d56                Phys::freePage(unsigned long)
                0x00000000c0007dbf                Phys::allocatePage()
                0x00000000c0007e8e                Phys::allocateContiguousPages(int)
                0x00000000c0007ef5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f2d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000821b        0x1 
 .text          0x00000000c000821c      0x273 core/pipe.32
                0x00000000c000821c                Pipe::isAtty()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008244                Pipe::~Pipe()
                0x00000000c000826c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000832c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xab3 core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a60                VgaText::putx(unsigned int)
                0x00000000c0008aa6                VgaText::puts(char const*)
                0x00000000c0008acc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b18                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008db6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f42                VgaText::doUpdate()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x1a1 core/tss.32
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f54                TSS::setESP(unsigned long)
                0x00000000c0008f68                TSS::flush()
                0x00000000c0008f88                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090e5        0x1 
 .text          0x00000000c00090e6      0x4ca core/unixfile.32
                0x00000000c00090e6                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000913c                ReservedFilename::isAtty()
                0x00000000c0009158                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091b6                UnixFile::getFileDescriptor()
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c0009440                UnixFile::~UnixFile()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c000948c                ReservedFilename::~ReservedFilename()
                0x00000000c00094b3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b0     0x1218 core/virtmgr.32
                0x00000000c00095b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ea                Virt::getPageState(unsigned long)
                0x00000000c000960d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009732                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009755                Virt::swapIDToSector(unsigned long)
                0x00000000c000976b                Virt::allocateSwapfilePage()
                0x00000000c00097eb                Virt::virtualMemorySetup()
                0x00000000c000983c                Virt::setupPageSwapping(int)
                0x00000000c00098ae                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098de                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000992b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a68                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a8c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aa6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009b52                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b86                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009d20                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e24                VAS::allocatePages(int, int)
                0x00000000c0009f1a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f72                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a2b2                VAS::evict(unsigned long)
                0x00000000c000a390                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a52a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a59e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ca                VAS::scanForEviction()
                0x00000000c000a6cd                mapVASFirstTime
 .text          0x00000000c000a7c8       0x5f coreobjs/c++.32
                0x00000000c000a7c8                __cxa_atexit
                0x00000000c000a7cb                __cxa_finalize
                0x00000000c000a7cc                __stack_chk_fail
                0x00000000c000a802                __cxa_pure_virtual
                0x00000000c000a813                operator new[](unsigned long)
                0x00000000c000a818                operator delete(void*, unsigned long)
                0x00000000c000a81d                operator delete[](void*)
                0x00000000c000a822                operator delete[](void*, unsigned long)
 .text          0x00000000c000a827      0x254 dbg/kconsole.32
                0x00000000c000a827                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8c7                Dbg::logc(char)
                0x00000000c000a8e7                Dbg::logs(char*)
                0x00000000c000a906                Dbg::logWriteInt(unsigned int)
                0x00000000c000a924                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a945                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa7b        0x1 
 .text          0x00000000c000aa7c      0x2d4 dbg/usban.32
                0x00000000c000aa7c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aae8                __ubsan_handle_type_mismatch_v1
                0x00000000c000abc4                __ubsan_handle_pointer_overflow
                0x00000000c000abf0                __ubsan_handle_out_of_bounds
                0x00000000c000ac1c                __ubsan_handle_add_overflow
                0x00000000c000ac48                __ubsan_handle_load_invalid_value
                0x00000000c000ac74                __ubsan_handle_divrem_overflow
                0x00000000c000aca0                __ubsan_handle_mul_overflow
                0x00000000c000accc                __ubsan_handle_sub_overflow
                0x00000000c000acf8                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad24                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad50      0x82e fs/symlink.32
                0x00000000c000ae9f                KiDeinitialiseSymlinks(void*)
                0x00000000c000af32                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000afb5                KiIsSymlinkRegistered(char const*)
                0x00000000c000b12b                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b2d2                KeCreateSymlink(char const*, char const*)
                0x00000000c000b40e                KeInitialiseSymlinks()
 .text          0x00000000c000b57e      0xd68 fs/vfs.32
                0x00000000c000b57e                File::read(unsigned long long, void*, int*)
                0x00000000c000b5d6                File::write(unsigned long long, void*, int*)
                0x00000000c000b62e                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b686                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b6b4                File::isAtty()
                0x00000000c000b6b8                Directory::isAtty()
                0x00000000c000b6bc                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b6c2                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b6c8                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b6ce                File::~File()
                0x00000000c000b6ce                File::~File()
                0x00000000c000b6f2                File::~File()
                0x00000000c000b71c                Directory::~Directory()
                0x00000000c000b71c                Directory::~Directory()
                0x00000000c000b740                Directory::~Directory()
                0x00000000c000b76a                Filesystem::Filesystem()
                0x00000000c000b76a                Filesystem::Filesystem()
                0x00000000c000b78e                Filesystem::~Filesystem()
                0x00000000c000b78e                Filesystem::~Filesystem()
                0x00000000c000b79c                Filesystem::~Filesystem()
                0x00000000c000b7c0                Fs::getcwd(Process*, char*, int)
                0x00000000c000b7ea                Fs::initVFS()
                0x00000000c000b814                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba2e                File::File(char const*, Process*, bool)
                0x00000000c000ba2e                File::File(char const*, Process*, bool)
                0x00000000c000bb0c                File::File(char const*, Process*)
                0x00000000c000bb0c                File::File(char const*, Process*)
                0x00000000c000bb2a                File::open(FileOpenMode)
                0x00000000c000bb88                File::close()
                0x00000000c000bbe8                File::seek(unsigned long long)
                0x00000000c000bc3e                File::truncate(unsigned long long)
                0x00000000c000bc94                File::tell(unsigned long long*)
                0x00000000c000bce4                File::rewind()
                0x00000000c000bcf8                File::unlink()
                0x00000000c000bd44                File::rename(char const*)
                0x00000000c000bd92                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bdee                File::exists()
                0x00000000c000be2c                File::stat(unsigned long long*, bool*)
                0x00000000c000be8d                Fs::setcwd(Process*, char*)
                0x00000000c000bfec                Directory::Directory(char const*, Process*)
                0x00000000c000bfec                Directory::Directory(char const*, Process*)
                0x00000000c000c0b4                Directory::open()
                0x00000000c000c110                Directory::close()
                0x00000000c000c170                Directory::unlink()
                0x00000000c000c1bc                Directory::rename(char const*)
                0x00000000c000c20a                Directory::exists()
                0x00000000c000c248                Directory::read(dirent*)
                0x00000000c000c294                Directory::create()
                0x00000000c000c2e0                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c2e6        0x2 
 .text          0x00000000c000c2e8       0x86 hal/bus.32
                0x00000000c000c2e8                Bus::Bus(char const*)
                0x00000000c000c2e8                Bus::Bus(char const*)
                0x00000000c000c320                Bus::~Bus()
                0x00000000c000c320                Bus::~Bus()
                0x00000000c000c344                Bus::~Bus()
 .text          0x00000000c000c36e       0x96 hal/buzzer.32
                0x00000000c000c36e                beepThread(void*)
                0x00000000c000c3ab                Krnl::beep(int, int, bool)
 .text          0x00000000c000c404      0x45f hal/clock.32
                0x00000000c000c404                User::loadClockSettings(int)
                0x00000000c000c456                Clock::Clock(char const*)
                0x00000000c000c456                Clock::Clock(char const*)
                0x00000000c000c48c                Clock::~Clock()
                0x00000000c000c48c                Clock::~Clock()
                0x00000000c000c4b0                Clock::~Clock()
                0x00000000c000c4da                Clock::timeInSecondsLocal()
                0x00000000c000c522                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c57b                datetimeToSeconds(datetime_t)
                0x00000000c000c69a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c6fa                secondsToDatetime(unsigned long long)
                0x00000000c000c83e                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c863        0x1 
 .text          0x00000000c000c864      0x464 hal/device.32
                0x00000000c000c864                Device::hibernate()
                0x00000000c000c866                Device::wake()
                0x00000000c000c868                Device::detect()
                0x00000000c000c86a                Device::disableLegacy()
                0x00000000c000c86c                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c86e                DriverlessDevice::close(int, int, void*)
                0x00000000c000c872                DriverlessDevice::detect()
                0x00000000c000c874                DriverlessDevice::open(int, int, void*)
                0x00000000c000c888                Device::~Device()
                0x00000000c000c888                Device::~Device()
                0x00000000c000c896                Device::~Device()
                0x00000000c000c8be                Device::findAndLoadDriver()
                0x00000000c000c8cc                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c8f2                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c932                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c95c                Device::getParent()
                0x00000000c000c968                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c986                Device::addChild(Device*)
                0x00000000c000c9ca                Device::removeAllChildren()
                0x00000000c000ca10                Device::hibernateAll()
                0x00000000c000ca40                Device::wakeAll()
                0x00000000c000ca70                Device::detectAll()
                0x00000000c000caa0                Device::disableLegacyAll()
                0x00000000c000caa2                Device::loadDriversForAll()
                0x00000000c000caa4                Device::closeAll()
                0x00000000c000cada                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cb10                Device::setName(char const*)
                0x00000000c000cb1e                Device::Device(char const*)
                0x00000000c000cb1e                Device::Device(char const*)
                0x00000000c000cc1a                Device::getName()
                0x00000000c000cc24                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc24                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc5a                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cc9e                getDevicesOfType(DeviceType)
 .text          0x00000000c000ccc8       0x86 hal/diskctrl.32
                0x00000000c000ccc8                HardDiskController::HardDiskController(char const*)
                0x00000000c000ccc8                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd00                HardDiskController::~HardDiskController()
                0x00000000c000cd00                HardDiskController::~HardDiskController()
                0x00000000c000cd24                HardDiskController::~HardDiskController()
 .text          0x00000000c000cd4e       0xe2 hal/diskphys.32
                0x00000000c000cd4e                PhysicalDisk::eject()
                0x00000000c000cd52                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cd52                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cdba                PhysicalDisk::startCache()
                0x00000000c000cde2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cde2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce06                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ce30        0x0 hal/fpu.32
 .text          0x00000000c000ce30      0x359 hal/intctrl.32
                0x00000000c000ce30                int_handler
                0x00000000c000ceba                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cf04                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d038                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d06c                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d0ea                setupINTS()
                0x00000000c000d147                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000d189        0x1 
 .text          0x00000000c000d18a      0x8be hal/keybrd.32
                0x00000000c000d18a                startGUI(void*)
                0x00000000c000d1f8                startGUIVESA(void*)
                0x00000000c000d266                sendKeyToTerminal(unsigned char)
                0x00000000c000d341                sendKeyboardToken(KeyboardToken)
                0x00000000c000d82b                clearInternalKeybuffer(VgaText*)
                0x00000000c000d860                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d9be                Keyboard::Keyboard(char const*)
                0x00000000c000d9be                Keyboard::Keyboard(char const*)
                0x00000000c000d9fa                Keyboard::~Keyboard()
                0x00000000c000d9fa                Keyboard::~Keyboard()
                0x00000000c000da1e                Keyboard::~Keyboard()
 .text          0x00000000c000da48      0x3f8 hal/logidisk.32
                0x00000000c000da48                LogicalDisk::close(int, int, void*)
                0x00000000c000da4c                LogicalDisk::~LogicalDisk()
                0x00000000c000da4c                LogicalDisk::~LogicalDisk()
                0x00000000c000da70                LogicalDisk::~LogicalDisk()
                0x00000000c000da9a                LogicalDisk::open(int, int, void*)
                0x00000000c000daae                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000dae6                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000db2c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000db2c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dbec                LogicalDisk::assignDriveLetter()
                0x00000000c000dca6                LogicalDisk::mount()
                0x00000000c000dcee                LogicalDisk::unmount()
                0x00000000c000dcfe                LogicalDisk::eject()
                0x00000000c000dd12                LogicalDisk::unassignDriveLetter()
                0x00000000c000dd68                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ddd4                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000de40       0x86 hal/mouse.32
                0x00000000c000de40                Mouse::Mouse(char const*)
                0x00000000c000de40                Mouse::Mouse(char const*)
                0x00000000c000de78                Mouse::~Mouse()
                0x00000000c000de78                Mouse::~Mouse()
                0x00000000c000de9c                Mouse::~Mouse()
 .text          0x00000000c000dec6       0x90 hal/nic.32
                0x00000000c000dec6                NIC::getMAC()
                0x00000000c000decc                NIC::write(int, unsigned char*, int*)
                0x00000000c000ded2                NIC::NIC(char const*)
                0x00000000c000ded2                NIC::NIC(char const*)
                0x00000000c000df08                NIC::~NIC()
                0x00000000c000df08                NIC::~NIC()
                0x00000000c000df2c                NIC::~NIC()
 .text          0x00000000c000df56      0x33b hal/partition.32
                0x00000000c000df56                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dffe                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e291        0x3 
 .text          0x00000000c000e294       0x86 hal/serial.32
                0x00000000c000e294                Serial::Serial(char const*)
                0x00000000c000e294                Serial::Serial(char const*)
                0x00000000c000e2cc                Serial::~Serial()
                0x00000000c000e2cc                Serial::~Serial()
                0x00000000c000e2f0                Serial::~Serial()
 *fill*         0x00000000c000e31a        0x2 
 .text          0x00000000c000e31c      0x234 hal/timer.32
                0x00000000c000e31c                Timer::Timer(char const*)
                0x00000000c000e31c                Timer::Timer(char const*)
                0x00000000c000e354                Timer::~Timer()
                0x00000000c000e354                Timer::~Timer()
                0x00000000c000e378                Timer::~Timer()
                0x00000000c000e3a2                Timer::read()
                0x00000000c000e3ad                setupTimer(int)
                0x00000000c000e3e8                timerHandler(unsigned int)
 .text          0x00000000c000e550      0x444 hal/vcache.32
                0x00000000c000e550                VCache::VCache(PhysicalDisk*)
                0x00000000c000e550                VCache::VCache(PhysicalDisk*)
                0x00000000c000e6c0                VCache::invalidateReadBuffer()
                0x00000000c000e6d0                VCache::writeWriteBuffer()
                0x00000000c000e71c                VCache::~VCache()
                0x00000000c000e71c                VCache::~VCache()
                0x00000000c000e774                VCache::~VCache()
                0x00000000c000e79c                VCache::write(unsigned long long, int, void*)
                0x00000000c000e88a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e994      0x4c7 hal/video.32
                0x00000000c000e994                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e9e0                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ea50                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eace                Video::clearScreen(unsigned int)
                0x00000000c000eb02                Video::putpixel(int, int, unsigned int)
                0x00000000c000eb10                Video::readPixelApprox(int, int)
                0x00000000c000eb24                Video::Video(char const*)
                0x00000000c000eb24                Video::Video(char const*)
                0x00000000c000eb5a                Video::~Video()
                0x00000000c000eb5a                Video::~Video()
                0x00000000c000eb7e                Video::~Video()
                0x00000000c000eba8                Video::isMonochrome()
                0x00000000c000ebb4                Video::getWidth()
                0x00000000c000ebc0                Video::getHeight()
                0x00000000c000ebcc                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ec88                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000edf0                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ee5b        0x1 
 .text          0x00000000c000ee5c     0x138b hw/acpi.32
                0x00000000c000ee5c                ACPI::close(int, int, void*)
                0x00000000c000ef10                findRSDP()
                0x00000000c000efa8                loadACPITables(unsigned char*)
                0x00000000c000f214                findRSDT(unsigned char*)
                0x00000000c000f36c                findDataTable(unsigned char*, char*)
                0x00000000c000f3ec                scanMADT()
                0x00000000c000f8a4                ACPI::ACPI()
                0x00000000c000f8a4                ACPI::ACPI()
                0x00000000c000f8f8                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f9f4                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fac0                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fac8                ACPI::detectPCI()
                0x00000000c000fce8                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fd30                ACPI::sleep()
                0x00000000c000fd4c                ACPI::open(int, int, void*)
 *fill*         0x00000000c00101e7        0x1 
 .text          0x00000000c00101e8      0xbc5 hw/cpu.32
                0x00000000c00101e8                CPU::close(int, int, void*)
                0x00000000c00101ec                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0010208                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0010220                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0010294                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010318                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010346                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0010374                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00103a2                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00103d0                CPU::CPU()
                0x00000000c00103d0                CPU::CPU()
                0x00000000c001045e                CPU::displayFeatures()
                0x00000000c0010460                CPU::detectFeatures()
                0x00000000c0010b34                CPU::setupSMEP()
                0x00000000c0010b40                CPU::setupUMIP()
                0x00000000c0010b4a                CPU::setupTSC()
                0x00000000c0010b54                CPU::setupLargePages()
                0x00000000c0010b5e                CPU::setupPAT()
                0x00000000c0010b9a                CPU::setupMTRR()
                0x00000000c0010b9c                CPU::setupGlobalPages()
                0x00000000c0010ba6                CPU::allowUsermodeDataAccess()
                0x00000000c0010bb8                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010bca                CPU::setupSMAP()
                0x00000000c0010bd8                CPU::setupFeatures()
                0x00000000c0010ca4                CPU::open(int, int, void*)
 .text          0x00000000c0010dad       0xb6 krnl/atexit.32
                0x00000000c0010dad                KeInitialiseAtexit()
                0x00000000c0010dcc                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010e00                KeExecuteAtexit()
 .text          0x00000000c0010e63       0xdf krnl/bootmsg.32
                0x00000000c0010e63                KeDisplaySplashScreen()
                0x00000000c0010edf                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010f42        0x2 
 .text          0x00000000c0010f44       0x1d krnl/compat.32
                0x00000000c0010f44                Krnl::handlePowerButton()
                0x00000000c0010f54                Krnl::handleSleepButton()
 .text          0x00000000c0010f61       0x2b krnl/crc32.32
                0x00000000c0010f61                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010f8c      0x5bf krnl/env.32
                0x00000000c0010f8c                EnvVarContainer::getEnv(char const*)
                0x00000000c0010fca                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001108c                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001108e                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00112b2                EnvVarContainer::__loadSystem()
                0x00000000c00112cc                EnvVarContainer::__loadUser()
                0x00000000c00112ce                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112ce                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112f0                EnvVarContainer::~EnvVarContainer()
                0x00000000c00112f0                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011320                KeGetEnv(Process*, char const*)
                0x00000000c0011385                KeSetEnvSystem(char const*, char const*)
                0x00000000c001139f                KeSetEnvUser(char const*, char const*)
                0x00000000c00113be                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00113d1                KeDeleteEnvSystem(char const*)
                0x00000000c00113d2                KeDeleteEnvUser(char const*)
                0x00000000c00113d3                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00113d4                KeNewProcessEnv(Process*)
                0x00000000c00113f6                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0011442                KeLoadSystemEnv()
                0x00000000c0011470                KeLoadUserEnv()
                0x00000000c0011496                KeFlushEnv()
                0x00000000c0011497                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00114b7                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c001154b       0x94 krnl/inlines.32
                0x00000000c001154b                CPU::current()
                0x00000000c0011557                operator new(unsigned long)
                0x00000000c001155c                operator delete(void*)
                0x00000000c0011561                disableIRQs()
                0x00000000c0011563                enableIRQs()
                0x00000000c0011565                lockScheduler()
                0x00000000c001156d                unlockScheduler()
                0x00000000c001157c                lockStuff()
                0x00000000c001158a                unlockStuff()
                0x00000000c00115c4                Virt::getAKernelVAS()
                0x00000000c00115ca                __not_memcpy
 .text          0x00000000c00115df        0xc krnl/panic.32
                0x00000000c00115df                KePanic(char const*)
 .text          0x00000000c00115eb      0x142 krnl/powctrl.32
                0x00000000c00115eb                KePowerThread(void*)
                0x00000000c0011619                KeChangePowerSettings(PowerSettings)
                0x00000000c001162f                KeUserIOReceived()
                0x00000000c001163a                KeHandlePowerButton()
                0x00000000c001166f                KeHandleSleepButton()
                0x00000000c00116a4                KeSetupPowerManager()
 .text          0x00000000c001172d       0x9d krnl/random.32
                0x00000000c001172d                KeRand()
                0x00000000c001176f                KeSeedRand(unsigned int)
                0x00000000c0011798                KeInitRand()
 *fill*         0x00000000c00117ca        0x2 
 .text          0x00000000c00117cc      0x1bc krnl/resolve.32
                0x00000000c00117cc                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011988      0x322 krnl/signal.32
                0x00000000c0011988                KiSigKill(int)
                0x00000000c001199c                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001199d                KiDefaultSignalHandlerPause(int)
                0x00000000c00119c9                KiDefaultSignalHandlerResume(int)
                0x00000000c00119f5                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00119fa                KeInitSignals()
                0x00000000c0011a4c                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011a82                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011aff                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011bf6                KiCheckSignalZ
                0x00000000c0011c38                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011c73                KiFinishSignalZ
 .text          0x00000000c0011caa      0xe10 krnl/syscalls.32
                0x00000000c0011caa                SysSeekDir(regs*)
                0x00000000c0011caf                SysTellDir(regs*)
                0x00000000c0011cb4                SysVerify(regs*)
                0x00000000c0011cbe                SysGetArgc(regs*)
                0x00000000c0011cd2                SysTTYName(regs*)
                0x00000000c0011cda                SysFormatDisk(regs*)
                0x00000000c0011d51                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011da5                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011dfe                SysShutdown(regs*)
                0x00000000c0011e5c                SysRealpath(regs*)
                0x00000000c0011ea0                SysReadDir(regs*)
                0x00000000c0011f20                SysIsATTY(regs*)
                0x00000000c0011f7a                SysSeek(regs*)
                0x00000000c0011fd1                SysTell(regs*)
                0x00000000c001203e                SysSize(regs*)
                0x00000000c00120b1                SysSizeFromFilename(regs*)
                0x00000000c00121e2                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0012313                SysClose(regs*)
                0x00000000c0012373                SysOpenDir(regs*)
                0x00000000c00123f0                SysMakeDir(regs*)
                0x00000000c001245e                SysCloseDir(regs*)
                0x00000000c00124b2                SysWait(regs*)
                0x00000000c00124d3                SysNotImpl(regs*)
                0x00000000c00124ee                SysPanic(regs*)
                0x00000000c0012509                SysRmdir(regs*)
                0x00000000c001256e                SysUnlink(regs*)
                0x00000000c00125d3                SysGetArgv(regs*)
                0x00000000c0012620                SysUSleep(regs*)
                0x00000000c0012649                SysSpawn(regs*)
                0x00000000c00126bc                SysGetEnv(regs*)
                0x00000000c001276d                SysSetFatAttrib(regs*)
                0x00000000c00127e0                SysPipe(regs*)
                0x00000000c0012825                SysGetUnixTime(regs*)
                0x00000000c0012839                string_ends_with(char const*, char const*)
                0x00000000c0012881                SysOpen(regs*)
                0x00000000c0012a78                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012aba        0x2 
 .text          0x00000000c0012abc      0x159 net/ethernet.32
                0x00000000c0012abc                KeSwitchEndian16(unsigned short)
                0x00000000c0012ae0                KeSwitchEndian32(unsigned int)
                0x00000000c0012b10                EthernetCRC32(unsigned char*, int)
                0x00000000c0012bb4                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012c15      0xd56 reg/cm.32
                0x00000000c0012c15                CmOpen(char const*)
                0x00000000c0012d33                CmClose(Reghive_Tag*)
                0x00000000c0012d49                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012d85                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012dfc                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012e3b                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012e6d                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012ea9                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012ed1                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012ef2                CmExpand(Reghive_Tag*, int)
                0x00000000c0012f6d                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012ff3                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c00130e7                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0013223                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0013284                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00132b4                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c00132eb                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0013315                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013355                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00133f9                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0013427                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00135c5                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013612                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001368c                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00136df                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00137a3                zStrtok(char*, char const*)
                0x00000000c0013815                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013896                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013939                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001396b      0x52a reg/registry.32
                0x00000000c001396b                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013adc                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013c31                Reg::getLine(char*, char*, char*)
                0x00000000c0013c68                Reg::readInt(char*, char*, int*)
                0x00000000c0013d56                Reg::readString(char*, char*, char*, int)
                0x00000000c0013dd7                Reg::readBool(char*, char*, bool*)
                0x00000000c0013dfc                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013e28                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013e54                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013e95       0x36 sys/eject.32
                0x00000000c0013e95                SysEject(regs*)
 .text          0x00000000c0013ecb       0x18 sys/exit.32
                0x00000000c0013ecb                SysExit(regs*)
 .text          0x00000000c0013ee3       0x1f sys/getcwd.32
                0x00000000c0013ee3                SysGetCwd(regs*)
 .text          0x00000000c0013f02        0xc sys/getpid.32
                0x00000000c0013f02                SysGetPID(regs*)
 .text          0x00000000c0013f0e       0x1a sys/getramdata.32
                0x00000000c0013f0e                SysGetRAMData(regs*)
 .text          0x00000000c0013f28       0x82 sys/getvgaptr.32
                0x00000000c0013f28                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013faa        0x2 
 .text          0x00000000c0013fac       0xb9 sys/kill.32
                0x00000000c0013fac                SysKill(regs*)
 .text          0x00000000c0014065       0xa8 sys/loaddll.32
                0x00000000c0014065                SysLoadDLL(regs*)
 .text          0x00000000c001410d       0x68 sys/read.32
                0x00000000c001410d                SysRead(regs*)
 .text          0x00000000c0014175       0x29 sys/registersignal.32
                0x00000000c0014175                SysRegisterSignal(regs*)
 .text          0x00000000c001419e      0x19c sys/registry.32
                0x00000000c001419e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014215                SysRegistryReadExtent(regs*)
                0x00000000c001425d                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014285                SysRegistryEnterDirectory(regs*)
                0x00000000c00142ad                SysRegistryGetNext(regs*)
                0x00000000c00142d5                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001430f                SysRegistryOpen(regs*)
                0x00000000c0014323                SysRegistryClose(regs*)
 .text          0x00000000c001433a       0x55 sys/sbrk.32
                0x00000000c001433a                SysSbrk(regs*)
 .text          0x00000000c001438f       0x1c sys/setcwd.32
                0x00000000c001438f                SysSetCwd(regs*)
 .text          0x00000000c00143ab       0x96 sys/settime.32
                0x00000000c00143ab                SysSetTime(regs*)
 .text          0x00000000c0014441       0x2d sys/symlink.32
                0x00000000c0014441                SysSymlink(regs*)
 .text          0x00000000c001446e       0x4a sys/timezone.32
                0x00000000c001446e                SysTimezone(regs*)
 .text          0x00000000c00144b8       0xfc sys/truncate.32
                0x00000000c00144b8                SysTruncate(regs*)
 .text          0x00000000c00145b4       0x68 sys/write.32
                0x00000000c00145b4                SysWrite(regs*)
 .text          0x00000000c001461c       0x62 sys/wsbe.32
                0x00000000c001461c                SysWsbe(regs*)
 .text          0x00000000c001467e       0x25 sys/yield.32
                0x00000000c001467e                SysYield(regs*)
 .text          0x00000000c00146a3     0x11e6 thr/elf.32
                0x00000000c00146a3                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014931                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014b43                Thr::runtimeReferenceHelper()
                0x00000000c0014b56                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014ba5                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014e63                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001559c                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00155ce                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015605                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001561f                Thr::loadDLL(char const*, bool)
                0x00000000c0015850                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0015889        0x3 
 .text          0x00000000c001588c     0x13d9 thr/prcssthr.32
                0x00000000c001588c                userModeEntryPoint(void*)
                0x00000000c00158b4                changeTSS
                0x00000000c00158e4                switchToThread(ThreadControlBlock*)
                0x00000000c0015994                Process::addArgs(char**)
                0x00000000c0015a00                Process::Process(char const*, Process*, char**)
                0x00000000c0015a00                Process::Process(char const*, Process*, char**)
                0x00000000c0015c0c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015c0c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015de0                taskStartupFunction
                0x00000000c0015dec                Semaphore::Semaphore(int)
                0x00000000c0015dec                Semaphore::Semaphore(int)
                0x00000000c0015e1c                Mutex::Mutex()
                0x00000000c0015e1c                Mutex::Mutex()
                0x00000000c0015e30                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015f3c                Process::createUserThread()
                0x00000000c0015f5c                setupMultitasking(void (*)())
                0x00000000c0016080                schedule()
                0x00000000c0016114                Semaphore::tryAcquire()
                0x00000000c00161e8                Semaphore::assertLocked(char const*)
                0x00000000c001626c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016294                blockTask(TaskState)
                0x00000000c00162cc                waitTask(int, int*, int)
                0x00000000c0016310                milliTenthSleepUntil(unsigned int)
                0x00000000c00163b0                milliTenthSleep(unsigned int)
                0x00000000c00163c4                sleep(unsigned int)
                0x00000000c00163e0                Semaphore::acquire()
                0x00000000c00164a8                taskReturned
                0x00000000c00164ec                Thr::processFromPID(int)
                0x00000000c0016598                unblockTask(ThreadControlBlock*)
                0x00000000c0016644                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016918                cleanerTaskFunction(void*)
                0x00000000c0016a20                terminateTask(int)
                0x00000000c0016b0c                Thr::terminateFromIRQ(int)
                0x00000000c0016b1c                Semaphore::release()
 .text          0x00000000c0016c65      0xc27 vm86/vm8086.32
                0x00000000c0016c65                Vm::inbv(unsigned short)
                0x00000000c0016c78                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016cae                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016cbe                Vm::getSegment(unsigned int)
                0x00000000c0016cc6                Vm::getOffset(unsigned int)
                0x00000000c0016ccb                Vm::mainloop2()
                0x00000000c0016d05                Vm::mainVm8086Loop(void*)
                0x00000000c0016d15                Vm::mainloop3(unsigned long)
                0x00000000c0016d3b                Vm::initialise8086()
                0x00000000c0016d7e                Vm::finish8086()
                0x00000000c0016ddf                Vm::getOutput8086(unsigned char*)
                0x00000000c0016e04                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016ebd                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001705b                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00170f4                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017105                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017117                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017128                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001713d                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017153                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017168                Vm::faultHandler(regs*)
 .text          0x00000000c001788c      0xaf0 arch/i386/hal.32
                0x00000000c001788c                noCopro(unsigned long)
                0x00000000c001788d                nmiHandler(regs*, void*)
                0x00000000c00178a6                doubleFault(regs*, void*)
                0x00000000c00178bf                displayDebugInfo(regs*)
                0x00000000c0017c44                HalSystemIdle()
                0x00000000c0017cc0                displayProgramFault(char const*)
                0x00000000c0017d0c                gpFault(regs*, void*)
                0x00000000c0017d73                pgFault(regs*, void*)
                0x00000000c0017dfc                otherISRHandler(regs*, void*)
                0x00000000c0017e30                opcodeFault(regs*, void*)
                0x00000000c0017eb3                i386SaveCoprocessor(void*)
                0x00000000c0017ec7                i386LoadCoprocessor(void*)
                0x00000000c0017edb                x87EmulHandler(regs*, void*)
                0x00000000c0017f78                HalInitialiseCoprocessor()
                0x00000000c0018026                HalPanic(char const*)
                0x00000000c001813a                HalQueryPerformanceCounter()
                0x00000000c0018155                HalInitialise()
                0x00000000c001830b                HalMakeBeep(int)
                0x00000000c0018345                HalGetRand()
                0x00000000c0018348                HalEndOfInterrupt(int)
                0x00000000c0018379                HalRestart()
                0x00000000c001837a                HalShutdown()
                0x00000000c001837b                HalSleep()
 .text          0x00000000c001837c      0x2dc arch/i386/pic.32
                0x00000000c001837c                picIoWait()
                0x00000000c0018384                picDisable()
                0x00000000c00183b8                picGetIRQReg(int)
                0x00000000c0018434                picOpen()
                0x00000000c00185b8                picEOI(int)
 .text          0x00000000c0018658      0x674 arch/i386/rtc.32
                0x00000000c0018658                RTC::open(int, int, void*)
                0x00000000c001865c                RTC::close(int, int, void*)
                0x00000000c0018660                RTC::timeInSecondsUTC()
                0x00000000c0018672                RTC::timeInDatetimeUTC()
                0x00000000c0018698                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00186d6                RTC::~RTC()
                0x00000000c00186d6                RTC::~RTC()
                0x00000000c00186fa                RTC::~RTC()
                0x00000000c0018724                RTC::get_update_in_progress_flag()
                0x00000000c001873e                RTC::completeRTCRefresh()
                0x00000000c0018a1e                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018bcc                rtcIRQHandler(regs*, void*)
                0x00000000c0018c12                RTC::RTC()
                0x00000000c0018c12                RTC::RTC()
 .text          0x00000000c0018ccc      0x1f4 arch/i386/vga.32
                0x00000000c0018ccc                HalConsoleScroll(int, int)
                0x00000000c0018dd4                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018e38                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018ec0     0x14cf fs/fat/vfslink.32
                0x00000000c0018ec0                FAT::getName()
                0x00000000c0018ec8                FAT::tell(void*, unsigned long long*)
                0x00000000c0018f04                FAT::stat(void*, unsigned long long*)
                0x00000000c0018f40                FAT::~FAT()
                0x00000000c0018f40                FAT::~FAT()
                0x00000000c0018f64                FAT::~FAT()
                0x00000000c0018f8c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019030                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00190f4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00192d8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00194f4                FAT::allocateSwapfile(char const*, int)
                0x00000000c00196b4                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019824                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019884                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00198e4                FAT::close(void*)
                0x00000000c0019938                FAT::closeDir(void*)
                0x00000000c001998c                FAT::truncate(void*, unsigned long long)
                0x00000000c00199f8                FAT::seek(void*, unsigned long long)
                0x00000000c0019a50                fatWrapperReadDisk
                0x00000000c0019a90                fatWrapperWriteDisk
                0x00000000c0019ad0                fatWrapperIoctl
                0x00000000c0019bec                FAT::FAT()
                0x00000000c0019bec                FAT::FAT()
                0x00000000c0019c44                FAT::fixFilepath(char*)
                0x00000000c0019c84                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019df8                FAT::openDir(char const*, void**)
                0x00000000c0019ea8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019fa0                FAT::unlink(char const*)
                0x00000000c001a020                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a1d4                FAT::rename(char const*, char const*)
                0x00000000c001a2a0                FAT::mkdir(char const*)
                0x00000000c001a320                FAT::exists(char const*)
 *fill*         0x00000000c001a38f        0x1 
 .text          0x00000000c001a390       0x94 fs/iso9660/helper.32
                0x00000000c001a390                isoReadDiscSectorHelper
                0x00000000c001a3ec                iso_kprintf
                0x00000000c001a408                iso_kprintfd
 .text          0x00000000c001a424      0x71c fs/iso9660/vfslink.32
                0x00000000c001a424                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a42a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a430                ISO9660::getName()
                0x00000000c001a436                ISO9660::closeDir(void*)
                0x00000000c001a440                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a446                ISO9660::unlink(char const*)
                0x00000000c001a44c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a452                ISO9660::rename(char const*, char const*)
                0x00000000c001a458                ISO9660::mkdir(char const*)
                0x00000000c001a45e                ISO9660::~ISO9660()
                0x00000000c001a45e                ISO9660::~ISO9660()
                0x00000000c001a482                ISO9660::~ISO9660()
                0x00000000c001a4aa                ISO9660::exists(char const*)
                0x00000000c001a4be                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a5a4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a5ec                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a62e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a66c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a6be                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a800                ISO9660::close(void*)
                0x00000000c001a830                ISO9660::openDir(char const*, void**)
                0x00000000c001a90a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001aa27                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001aaa6                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ab18                ISO9660::ISO9660()
                0x00000000c001ab18                ISO9660::ISO9660()
 .text          0x00000000c001ab40      0x26c hal/sound/sndcard.32
                0x00000000c001ab40                SoundCard::beginPlayback()
                0x00000000c001ab4e                SoundCard::stopPlayback()
                0x00000000c001ab5c                SoundCard::SoundCard(char const*)
                0x00000000c001ab5c                SoundCard::SoundCard(char const*)
                0x00000000c001abfa                SoundCard::~SoundCard()
                0x00000000c001abfa                SoundCard::~SoundCard()
                0x00000000c001ac1e                SoundCard::~SoundCard()
                0x00000000c001ac48                SoundCard::configureRates(int, int, int)
                0x00000000c001ac78                SoundCard::getSamples16(int, short*)
                0x00000000c001acd4                SoundCard::getSamples32(int, int*)
                0x00000000c001ad5a                SoundCard::addChannel(SoundPort*)
                0x00000000c001ad98                SoundCard::removeChannel(int)
 .text          0x00000000c001adac      0x38a hal/sound/sndport.32
                0x00000000c001adac                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001adac                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ae38                SoundPort::~SoundPort()
                0x00000000c001ae38                SoundPort::~SoundPort()
                0x00000000c001ae6c                SoundPort::unpause()
                0x00000000c001ae78                SoundPort::pause()
                0x00000000c001ae84                SoundPort::getBufferUsed()
                0x00000000c001ae8c                SoundPort::getBufferSize()
                0x00000000c001ae94                SoundPort::buffer16(short*, int)
                0x00000000c001af20                SoundPort::buffer32(int*, int)
                0x00000000c001afac                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b078                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b136        0x0 hw/bus/isa.32
 .text          0x00000000c001b136      0xbb7 hw/bus/pci.32
                0x00000000c001b136                PCI::open(int, int, void*)
                0x00000000c001b154                PCI::close(int, int, void*)
                0x00000000c001b158                PCI::PCI()
                0x00000000c001b158                PCI::PCI()
                0x00000000c001b1f0                PCI::readBAR8(unsigned int, int)
                0x00000000c001b20c                PCI::readBAR16(unsigned int, int)
                0x00000000c001b22a                PCI::readBAR32(unsigned int, int)
                0x00000000c001b246                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b266                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b288                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b2a8                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b31e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b3c8                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b3ec                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b414                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b45e                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b486                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4aa                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4ce                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4f6                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b55a                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b642                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b908                PCI::checkBus(unsigned char)
                0x00000000c001b92c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001baa6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc22                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bc94                PCI::detect()
 *fill*         0x00000000c001bced        0x1 
 .text          0x00000000c001bcee      0xb9a hw/diskctrl/ide.32
                0x00000000c001bcee                IDE::close(int, int, void*)
                0x00000000c001bcf2                IDE::IDE()
                0x00000000c001bcf2                IDE::IDE()
                0x00000000c001bd26                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bd38                selectDrive(unsigned char, unsigned char)
                0x00000000c001bd3a                IDE::getBase(unsigned char)
                0x00000000c001bd4c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001be0c                IDE::read(unsigned char, unsigned char)
                0x00000000c001beba                IDE::waitInterrupt(unsigned char)
                0x00000000c001bf1c                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bf38                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bf54                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bf9e                IDE::open(int, int, void*)
                0x00000000c001c3dc                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c4ac                IDE::detect()
                0x00000000c001c77a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c834                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c888      0x32a hw/diskctrl/satabus.32
                0x00000000c001c888                SATABus::close(int, int, void*)
                0x00000000c001c88c                SATABus::detect()
                0x00000000c001c88e                SATABus::SATABus()
                0x00000000c001c88e                SATABus::SATABus()
                0x00000000c001c914                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c946                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c98e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c9ae                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c9d8                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cae8                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cb92                SATABus::open(int, int, void*)
 .text          0x00000000c001cbb2      0x93f hw/diskphys/ata.32
                0x00000000c001cbb2                ATA::close(int, int, void*)
                0x00000000c001cbd6                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cbd8                ATA::ATA()
                0x00000000c001cbd8                ATA::ATA()
                0x00000000c001cc06                ATA::flush(bool)
                0x00000000c001cc54                ATA::readyForCommand()
                0x00000000c001cca0                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d036                ATA::detectCHS()
                0x00000000c001d060                ATA::open(int, int, void*)
                0x00000000c001d12c                combineCharAndColour(char, unsigned char)
                0x00000000c001d13d                combineColours(unsigned char, unsigned char)
                0x00000000c001d14a                ATA::read(unsigned long long, int, void*)
                0x00000000c001d320                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d4f1        0x1 
 .text          0x00000000c001d4f2      0x618 hw/diskphys/atapi.32
                0x00000000c001d4f2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d4f8                ATAPI::close(int, int, void*)
                0x00000000c001d51c                ATAPI::ATAPI()
                0x00000000c001d51c                ATAPI::ATAPI()
                0x00000000c001d54a                ATAPI::readyForCommand()
                0x00000000c001d59c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d864                ATAPI::diskRemoved()
                0x00000000c001d89e                ATAPI::eject()
                0x00000000c001d8e6                ATAPI::diskInserted()
                0x00000000c001d8f2                ATAPI::detectMedia()
                0x00000000c001d9b0                ATAPI::open(int, int, void*)
                0x00000000c001da90                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001db0a      0x807 hw/diskphys/sata.32
                0x00000000c001db0a                SATA::close(int, int, void*)
                0x00000000c001db2e                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001db30                SATA::open(int, int, void*)
                0x00000000c001dbda                SATA::SATA()
                0x00000000c001dbda                SATA::SATA()
                0x00000000c001dc08                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001de5c                SATA::read(unsigned long long, int, void*)
                0x00000000c001e0ac                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e311        0x1 
 .text          0x00000000c001e312      0x5d0 hw/diskphys/satapi.32
                0x00000000c001e312                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e318                SATAPI::close(int, int, void*)
                0x00000000c001e33c                SATAPI::SATAPI()
                0x00000000c001e33c                SATAPI::SATAPI()
                0x00000000c001e36a                SATAPI::diskRemoved()
                0x00000000c001e36c                SATAPI::diskInserted()
                0x00000000c001e388                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e666                SATAPI::eject()
                0x00000000c001e6a2                SATAPI::detectMedia()
                0x00000000c001e6f8                SATAPI::open(int, int, void*)
                0x00000000c001e7f8                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e8e2      0x45b hw/intctrl/apic.32
                0x00000000c001e8e2                IOAPIC::close(int, int, void*)
                0x00000000c001e8e8                apicGetBase()
                0x00000000c001e92e                IOAPIC::IOAPIC()
                0x00000000c001e92e                IOAPIC::IOAPIC()
                0x00000000c001e956                apicOpen()
                0x00000000c001ead2                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001eb04                IOAPIC::read(int)
                0x00000000c001eb2c                IOAPIC::open(int, int, void*)
                0x00000000c001ec12                IOAPIC::write(int, int)
                0x00000000c001ec3e                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ed3d        0x3 
 .text          0x00000000c001ed40       0xf0 hw/timer/apictimer.32
                0x00000000c001ed40                APICTimer::close(int, int, void*)
                0x00000000c001ed48                apicTimerHandler(regs*, void*)
                0x00000000c001ed70                APICTimer::open(int, int, void*)
                0x00000000c001ede0                APICTimer::write(int)
                0x00000000c001ee08                APICTimer::APICTimer()
                0x00000000c001ee08                APICTimer::APICTimer()
 .text          0x00000000c001ee30      0x1ad hw/timer/pit.32
                0x00000000c001ee30                PIT::write(int)
                0x00000000c001eeb4                pitHandler(regs*, void*)
                0x00000000c001eedc                PIT::open(int, int, void*)
                0x00000000c001ef2c                PIT::close(int, int, void*)
                0x00000000c001ef5c                PIT::PIT()
                0x00000000c001ef5c                PIT::PIT()
 *fill*         0x00000000c001efdd        0x3 
 .text          0x00000000c001efe0       0x83 arch/i386/avx.32
                0x00000000c001efe0                avxDetect
                0x00000000c001f00a                avxSave
                0x00000000c001f01b                avxLoad
                0x00000000c001f02c                avxInit
                0x00000000c001f04e                avxClose
                0x00000000c001f04f                wouldSheSayYes
 *fill*         0x00000000c001f063        0xd 
 .text          0x00000000c001f070      0x2ec arch/i386/interrupt.32
                0x00000000c001f070                isr0
                0x00000000c001f080                isr1
                0x00000000c001f08a                isr2
                0x00000000c001f094                isr3
                0x00000000c001f09e                isr4
                0x00000000c001f0a8                isr5
                0x00000000c001f0b2                isr6
                0x00000000c001f0bc                isr7
                0x00000000c001f0c6                isr8
                0x00000000c001f0ce                isr9
                0x00000000c001f0d8                isr10
                0x00000000c001f0e0                isr11
                0x00000000c001f0e8                isr12
                0x00000000c001f0f0                isr13
                0x00000000c001f10a                isr14
                0x00000000c001f112                isr15
                0x00000000c001f11c                isr16
                0x00000000c001f126                isr17
                0x00000000c001f130                isr18
                0x00000000c001f13a                irq3
                0x00000000c001f144                irq4
                0x00000000c001f14e                irq5
                0x00000000c001f158                irq6
                0x00000000c001f162                irq7
                0x00000000c001f16c                irq8
                0x00000000c001f176                irq9
                0x00000000c001f180                irq10
                0x00000000c001f18a                irq11
                0x00000000c001f194                irq12
                0x00000000c001f19e                irq13
                0x00000000c001f1a8                irq14
                0x00000000c001f1b2                irq15
                0x00000000c001f1bc                irq1
                0x00000000c001f1c3                irq2
                0x00000000c001f1ca                isr96
                0x00000000c001f1d1                irq0
                0x00000000c001f1d6                int_common_stub
                0x00000000c001f208                syscall_common_stub
                0x00000000c001f30c                irq16
                0x00000000c001f316                irq17
                0x00000000c001f320                irq18
                0x00000000c001f32a                irq19
                0x00000000c001f334                irq20
                0x00000000c001f33e                irq21
                0x00000000c001f348                irq22
                0x00000000c001f352                irq23
 *fill*         0x00000000c001f35c        0x4 
 .text          0x00000000c001f360       0x10 arch/i386/rdrand.32
                0x00000000c001f360                i386GetRDRAND
 .text          0x00000000c001f370       0x39 arch/i386/sse.32
                0x00000000c001f370                absolutelyNoChanceInHell
                0x00000000c001f370                sseDetect
                0x00000000c001f388                sseSave
                0x00000000c001f390                sseLoad
                0x00000000c001f398                sseInit
                0x00000000c001f3a8                sseClose
 *fill*         0x00000000c001f3a9        0x7 
 .text          0x00000000c001f3b0       0x49 arch/i386/x87.32
                0x00000000c001f3b6                x87Detect
                0x00000000c001f3d1                x87Save
                0x00000000c001f3d8                x87Load
                0x00000000c001f3df                x87Init
                0x00000000c001f3f8                x87Close
 *fill*         0x00000000c001f3f9        0x3 
 .text          0x00000000c001f3fc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f421        0x0 crtn.32
 *fill*         0x00000000c001f421        0x3 
 .text          0x00000000c001f424      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f424                __divdi3
 *fill*         0x00000000c001f56f        0x1 
 .text          0x00000000c001f570      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f570                __moddi3
 *fill*         0x00000000c001f6ee        0x2 
 .text          0x00000000c001f6f0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f6f0                __udivdi3
 *fill*         0x00000000c001f7ef        0x1 
 .text          0x00000000c001f7f0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f7f0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f910        0x0
 .iplt          0x00000000c001f910        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f90a        0xf
 .init          0x00000000c001f90a        0x3 crti.32
                0x00000000c001f90a                _init
 .init          0x00000000c001f90d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f912        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f917        0x2 crtn.32

.fini           0x00000000c001f919        0xa
 .fini          0x00000000c001f919        0x3 crti.32
                0x00000000c001f919                _fini
 .fini          0x00000000c001f91c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f921        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f924       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f924       0x23 core/computer.32
                0x00000000c001f924                Computer::~Computer()
                0x00000000c001f924                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f948       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f948       0x2a core/computer.32
                0x00000000c001f948                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f972       0x21
 .text._Z10idleCommonv
                0x00000000c001f972       0x21 core/idle.32
                0x00000000c001f972                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f994        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f994        0x2 core/unixfile.32
                0x00000000c001f994                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f994                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f996       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f996       0x42 core/unixfile.32
                0x00000000c001f996                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f996                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f9d8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f9d8       0xd3 core/unixfile.32
                0x00000000c001f9d8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001faac        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001faac        0x7 core/unixfile.32
                0x00000000c001faac                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fab4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fab4       0xa1 core/unixfile.32
                0x00000000c001fab4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb56        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb56        0x8 core/unixfile.32
                0x00000000c001fb56                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb5e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb5e       0x1a hal/device.32
                0x00000000c001fb5e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fb5e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb78       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb78       0x2a hal/device.32
                0x00000000c001fb78                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fba2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fba2       0xdc hal/device.32
                0x00000000c001fba2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc7e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc7e       0x42 hal/device.32
                0x00000000c001fc7e                LinkedList<Device>::LinkedList()
                0x00000000c001fc7e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fcc0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fcc0       0x1c hal/timer.32
                0x00000000c001fcc0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fcdc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fcdc        0x7 hal/timer.32
                0x00000000c001fcdc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fce4       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fce4       0xbc hal/timer.32
                0x00000000c001fce4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fda0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fda0       0xda hal/timer.32
                0x00000000c001fda0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fe7c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fe7c       0x23 hw/acpi.32
                0x00000000c001fe7c                ACPI::~ACPI()
                0x00000000c001fe7c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fea0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fea0       0x2a hw/acpi.32
                0x00000000c001fea0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fecc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fecc        0x2 hw/acpi.32
                0x00000000c001fecc                LinkedList<Device>::~LinkedList()
                0x00000000c001fecc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fed0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fed0       0x1c hw/acpi.32
                0x00000000c001fed0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001feec        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001feec        0x7 hw/acpi.32
                0x00000000c001feec                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fef4       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fef4       0xb8 hw/acpi.32
                0x00000000c001fef4                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ffac       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ffac       0x23 hw/cpu.32
                0x00000000c001ffac                CPU::~CPU()
                0x00000000c001ffac                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ffd0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ffd0       0x2a hw/cpu.32
                0x00000000c001ffd0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fffc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fffc        0x8 sys/kill.32
                0x00000000c001fffc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020004        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020004        0x2 thr/prcssthr.32
                0x00000000c0020004                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020004                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020008       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020008       0x49 thr/prcssthr.32
                0x00000000c0020008                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020008                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020054       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020054       0x42 thr/prcssthr.32
                0x00000000c0020054                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020054                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c0020096       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020096       0x23 hw/bus/pci.32
                0x00000000c0020096                PCI::~PCI()
                0x00000000c0020096                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00200ba       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00200ba       0x2a hw/bus/pci.32
                0x00000000c00200ba                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00200e4       0x23
 .text._ZN3IDED2Ev
                0x00000000c00200e4       0x23 hw/diskctrl/ide.32
                0x00000000c00200e4                IDE::~IDE()
                0x00000000c00200e4                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020108       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020108       0x2a hw/diskctrl/ide.32
                0x00000000c0020108                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020132       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020132       0x23 hw/diskctrl/satabus.32
                0x00000000c0020132                SATABus::~SATABus()
                0x00000000c0020132                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020156       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020156       0x2a hw/diskctrl/satabus.32
                0x00000000c0020156                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020180       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020180       0x23 hw/diskphys/ata.32
                0x00000000c0020180                ATA::~ATA()
                0x00000000c0020180                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00201a4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00201a4       0x2a hw/diskphys/ata.32
                0x00000000c00201a4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00201ce       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00201ce       0x23 hw/diskphys/atapi.32
                0x00000000c00201ce                ATAPI::~ATAPI()
                0x00000000c00201ce                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00201f2       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00201f2       0x2a hw/diskphys/atapi.32
                0x00000000c00201f2                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002021c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002021c       0x23 hw/diskphys/sata.32
                0x00000000c002021c                SATA::~SATA()
                0x00000000c002021c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020240       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020240       0x2a hw/diskphys/sata.32
                0x00000000c0020240                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002026a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002026a       0x23 hw/diskphys/satapi.32
                0x00000000c002026a                SATAPI::~SATAPI()
                0x00000000c002026a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002028e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002028e       0x2a hw/diskphys/satapi.32
                0x00000000c002028e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00202b8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00202b8       0x23 hw/intctrl/apic.32
                0x00000000c00202b8                IOAPIC::~IOAPIC()
                0x00000000c00202b8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00202dc       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00202dc       0x2a hw/intctrl/apic.32
                0x00000000c00202dc                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020308       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020308       0x23 hw/timer/apictimer.32
                0x00000000c0020308                APICTimer::~APICTimer()
                0x00000000c0020308                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002032c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002032c       0x2a hw/timer/apictimer.32
                0x00000000c002032c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020358       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020358       0x23 hw/timer/pit.32
                0x00000000c0020358                PIT::~PIT()
                0x00000000c0020358                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002037c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002037c       0x2a hw/timer/pit.32
                0x00000000c002037c                PIT::~PIT()

.rodata         0x00000000c00203a6     0x320a
                0x00000000c00203a6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00203a6        0x2 
 .ctors         0x00000000c00203a8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00203ac        0x4 core/unixfile.32
 .ctors         0x00000000c00203b0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00203b4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00203b8                end_ctors = .
                0x00000000c00203b8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00203b8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00203bc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00203bc                __DTOR_END__
                0x00000000c00203c0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00203c0        0x0 
 .rodata        0x00000000c00203c0      0x101 acpica/utclib.32
                0x00000000c00203c0                AcpiGbl_Ctypes
 *fill*         0x00000000c00204c1        0x3 
 .rodata        0x00000000c00204c4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c00204dc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020526       0x1a 
 .rodata        0x00000000c0020540       0xed fs/fat/ff.32
 *fill*         0x00000000c002062d       0x13 
 .rodata        0x00000000c0020640      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020a40       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020aaf      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020bc4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020c2c       0x2c core/computer.32
                0x00000000c0020c2c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020c58       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020c88        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020c94       0x17 core/main.32
 *fill*         0x00000000c0020cab        0x1 
 .rodata.str1.4
                0x00000000c0020cac       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020d51       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020da9       0x39 core/pipe.32
 *fill*         0x00000000c0020de2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020de4       0x1c core/pipe.32
                0x00000000c0020de4                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020e00       0x2b core/terminal.32
 *fill*         0x00000000c0020e2b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020e2c       0x1c core/terminal.32
                0x00000000c0020e2c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020e48       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020e6a       0x15 core/unixfile.32
 *fill*         0x00000000c0020e7f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020e80       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020ecb        0x8 core/unixfile.32
 *fill*         0x00000000c0020ed3        0x1 
 .rodata.str1.4
                0x00000000c0020ed4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020ef4       0x1c core/unixfile.32
                0x00000000c0020ef4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020f10       0x1c core/unixfile.32
                0x00000000c0020f10                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020f2c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00211c0      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00212e6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0021319       0x11 dbg/kconsole.32
 *fill*         0x00000000c0021319        0x3 
 .rodata        0x00000000c002131c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002146c      0x169 dbg/usban.32
 *fill*         0x00000000c00215d5        0x3 
 .rodata.str1.4
                0x00000000c00215d8      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002170f      0x19e fs/symlink.32
 .rodata.str1.1
                0x00000000c00218ad       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c00218ee        0x2 
 .rodata._ZTV10Filesystem
                0x00000000c00218f0       0x6c fs/vfs.32
                0x00000000c00218f0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002195c       0x1c fs/vfs.32
                0x00000000c002195c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021978       0x1c fs/vfs.32
                0x00000000c0021978                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021994       0x2c hal/bus.32
                0x00000000c0021994                vtable for Bus
 .rodata.str1.1
                0x00000000c00219c0       0x1e hal/clock.32
 *fill*         0x00000000c00219de        0x2 
 .rodata._ZTV5Clock
                0x00000000c00219e0       0x3c hal/clock.32
                0x00000000c00219e0                vtable for Clock
 *fill*         0x00000000c0021a1c        0x4 
 .rodata        0x00000000c0021a20       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021a50       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021aa8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021aa8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021aa8       0x2c hal/device.32
                0x00000000c0021aa8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021ad4       0x2c hal/device.32
                0x00000000c0021ad4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021b00       0x2c hal/diskctrl.32
                0x00000000c0021b00                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021b2c       0x38 hal/diskphys.32
                0x00000000c0021b2c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021b64       0x3e hal/intctrl.32
 *fill*         0x00000000c0021ba2        0x2 
 .rodata.str1.4
                0x00000000c0021ba4       0x5d hal/intctrl.32
 .rodata        0x00000000c0021c01       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021c54       0x34 hal/keybrd.32
                0x00000000c0021c54                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021c88       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021ccc       0x2c hal/logidisk.32
                0x00000000c0021ccc                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021cf8       0x2c hal/mouse.32
                0x00000000c0021cf8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021d24       0x34 hal/nic.32
                0x00000000c0021d24                vtable for NIC
 .rodata.str1.1
                0x00000000c0021d58        0xb hal/partition.32
 *fill*         0x00000000c0021d63        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021d64       0x44 hal/serial.32
                0x00000000c0021d64                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021da8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021da8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021da8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021da8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021da8       0x30 hal/timer.32
                0x00000000c0021da8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021dd8       0x10 hal/vcache.32
                0x00000000c0021dd8                vtable for VCache
 .rodata.str1.1
                0x00000000c0021de8       0x93 hal/video.32
 *fill*         0x00000000c0021e7b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021e7c       0x4c hal/video.32
                0x00000000c0021e7c                vtable for Video
 .rodata.str1.4
                0x00000000c0021ec8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021f63      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00220b9       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00220b9        0x8 hw/acpi.32
 *fill*         0x00000000c00220b9        0x3 
 .rodata._ZTV4ACPI
                0x00000000c00220bc       0x2c hw/acpi.32
                0x00000000c00220bc                vtable for ACPI
 .rodata.str1.1
                0x00000000c00220e8      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022263        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022264       0x2c hw/cpu.32
                0x00000000c0022264                vtable for CPU
 .rodata.str1.1
                0x00000000c0022290       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00222d0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c002230c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c002239d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022466       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00224ae       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00224d9       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002254f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022594        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002259e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00225bf       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022655       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00226a9       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00226d5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00228a1       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00228f8      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022a08       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022a08       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022a08       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022a08        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022a08       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022aca        0x2 
 .rodata        0x00000000c0022acc       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022afc      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022c9b        0x1 
 .rodata.str1.4
                0x00000000c0022c9c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022d0f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022d24       0x3c arch/i386/rtc.32
                0x00000000c0022d24                vtable for RTC
 .rodata.str1.1
                0x00000000c0022d60       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022da1        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022da4       0x6c fs/fat/vfslink.32
                0x00000000c0022da4                vtable for FAT
 .rodata.str1.1
                0x00000000c0022e10       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022e10      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022f48       0x6c fs/iso9660/vfslink.32
                0x00000000c0022f48                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022fb4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022ff8       0x34 hal/sound/sndcard.32
                0x00000000c0022ff8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c002302c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002306b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00230a3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023144       0x2c hw/bus/pci.32
                0x00000000c0023144                vtable for PCI
 .rodata.str1.1
                0x00000000c0023170       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c00231f7        0x1 
 .rodata._ZTV3IDE
                0x00000000c00231f8       0x2c hw/diskctrl/ide.32
                0x00000000c00231f8                vtable for IDE
 .rodata.str1.4
                0x00000000c0023224       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023248       0x2c hw/diskctrl/satabus.32
                0x00000000c0023248                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023274       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023286        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023288       0x38 hw/diskphys/ata.32
                0x00000000c0023288                vtable for ATA
 .rodata.str1.1
                0x00000000c00232c0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00232cd        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00232d0       0x38 hw/diskphys/atapi.32
                0x00000000c00232d0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0023308       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023384       0x38 hw/diskphys/sata.32
                0x00000000c0023384                vtable for SATA
 .rodata.str1.1
                0x00000000c00233bc       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00234a6        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00234a8       0x38 hw/diskphys/satapi.32
                0x00000000c00234a8                vtable for SATAPI
 .rodata        0x00000000c00234e0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00234e8       0x2c hw/intctrl/apic.32
                0x00000000c00234e8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023514       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002352f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023530       0x30 hw/timer/apictimer.32
                0x00000000c0023530                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023560       0x1d hw/timer/pit.32
 *fill*         0x00000000c002357d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023580       0x30 hw/timer/pit.32
                0x00000000c0023580                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00235b0      0xbb1
 *(.data)
 .data          0x00000000c00235b0        0x0 crti.32
 .data          0x00000000c00235b0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00235b0                __dso_handle
 .data          0x00000000c00235b4        0x0 acpica/utclib.32
 .data          0x00000000c00235b4        0x0 core/malloc.32
 .data          0x00000000c00235b4        0x0 libk/ctype.32
 .data          0x00000000c00235b4        0x0 libk/string.32
 .data          0x00000000c00235b4        0x0 fs/fat/diskio.32
 .data          0x00000000c00235b4        0x0 fs/fat/ff.32
 .data          0x00000000c00235b4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00235b4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00235b4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00235b4        0x0 core/computer.32
 .data          0x00000000c00235b4        0x0 core/gdt.32
 .data          0x00000000c00235b4        0x0 core/idle.32
 .data          0x00000000c00235b4        0x0 core/idt.32
 .data          0x00000000c00235b4        0x4 core/kheap.32
 .data          0x00000000c00235b8        0x0 core/main.32
 .data          0x00000000c00235b8        0x4 core/physmgr.32
                0x00000000c00235b8                Phys::bitmap
 .data          0x00000000c00235bc        0x0 core/pipe.32
 *fill*         0x00000000c00235bc        0x4 
 .data          0x00000000c00235c0       0x60 core/terminal.32
                0x00000000c00235c0                VgaText::hiddenOut
                0x00000000c00235e0                ansiToVGAMappings
 .data          0x00000000c0023620        0x0 core/tss.32
 .data          0x00000000c0023620        0x4 core/unixfile.32
                0x00000000c0023620                UnixFile::nextFd
 .data          0x00000000c0023624       0x15 core/virtmgr.32
                0x00000000c0023624                Virt::pageAllocPtr
                0x00000000c0023628                Virt::bitmap
                0x00000000c002362c                Virt::swapfileSectorsPerPage
                0x00000000c0023630                Virt::swapfileLength
                0x00000000c0023634                Virt::swapfileSector
                0x00000000c0023638                Virt::swapfileDrive
 *fill*         0x00000000c0023639        0x3 
 .data          0x00000000c002363c        0x4 coreobjs/c++.32
                0x00000000c002363c                __stack_chk_guard
 .data          0x00000000c0023640        0x0 dbg/kconsole.32
 .data          0x00000000c0023640       0x28 dbg/usban.32
                0x00000000c0023640                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023668        0x0 fs/symlink.32
 .data          0x00000000c0023668        0x0 fs/vfs.32
 .data          0x00000000c0023668        0x0 hal/bus.32
 .data          0x00000000c0023668        0x0 hal/buzzer.32
 .data          0x00000000c0023668        0x0 hal/clock.32
 .data          0x00000000c0023668        0x0 hal/device.32
 .data          0x00000000c0023668        0x0 hal/diskctrl.32
 .data          0x00000000c0023668        0x0 hal/diskphys.32
 .data          0x00000000c0023668        0x0 hal/fpu.32
 .data          0x00000000c0023668        0x0 hal/intctrl.32
 .data          0x00000000c0023668        0x0 hal/keybrd.32
 .data          0x00000000c0023668        0x0 hal/logidisk.32
 .data          0x00000000c0023668        0x0 hal/mouse.32
 .data          0x00000000c0023668        0x0 hal/nic.32
 .data          0x00000000c0023668        0x0 hal/partition.32
 .data          0x00000000c0023668        0x0 hal/serial.32
 .data          0x00000000c0023668        0x0 hal/timer.32
 .data          0x00000000c0023668        0x0 hal/vcache.32
 .data          0x00000000c0023668        0x0 hal/video.32
 .data          0x00000000c0023668       0x10 hw/acpi.32
                0x00000000c0023668                legacyIRQRemaps
 .data          0x00000000c0023678        0x4 hw/cpu.32
                0x00000000c0023678                lastCode
 .data          0x00000000c002367c        0x0 krnl/atexit.32
 *fill*         0x00000000c002367c        0x4 
 .data          0x00000000c0023680      0x142 krnl/bootmsg.32
                0x00000000c0023680                KiSplashScreen
 .data          0x00000000c00237c2        0x0 krnl/compat.32
 *fill*         0x00000000c00237c2       0x1e 
 .data          0x00000000c00237e0      0x400 krnl/crc32.32
                0x00000000c00237e0                KiPolyLookupCRC32
 .data          0x00000000c0023be0       0x4d krnl/env.32
                0x00000000c0023be0                defaultSysEnv
 .data          0x00000000c0023c2d        0x0 krnl/inlines.32
 .data          0x00000000c0023c2d        0x0 krnl/panic.32
 .data          0x00000000c0023c2d        0x0 krnl/powctrl.32
 .data          0x00000000c0023c2d        0x0 krnl/random.32
 .data          0x00000000c0023c2d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023c2d       0x13 
 .data          0x00000000c0023c40       0x4c krnl/signal.32
                0x00000000c0023c40                KiDefaultSignalHandlers
 *fill*         0x00000000c0023c8c       0x14 
 .data          0x00000000c0023ca0       0xfc krnl/syscalls.32
                0x00000000c0023ca0                systemCallHandlers
 .data          0x00000000c0023d9c        0x0 net/ethernet.32
 *fill*         0x00000000c0023d9c        0x4 
 .data          0x00000000c0023da0      0x100 reg/cm.32
                0x00000000c0023da0                CmComponents
 .data          0x00000000c0023ea0        0x0 reg/registry.32
 .data          0x00000000c0023ea0        0x0 sys/eject.32
 .data          0x00000000c0023ea0        0x0 sys/exit.32
 .data          0x00000000c0023ea0        0x0 sys/getcwd.32
 .data          0x00000000c0023ea0        0x0 sys/getpid.32
 .data          0x00000000c0023ea0        0x0 sys/getramdata.32
 .data          0x00000000c0023ea0        0x0 sys/getvgaptr.32
 .data          0x00000000c0023ea0        0x0 sys/kill.32
 .data          0x00000000c0023ea0        0x0 sys/loaddll.32
 .data          0x00000000c0023ea0        0x0 sys/read.32
 .data          0x00000000c0023ea0        0x0 sys/registersignal.32
 .data          0x00000000c0023ea0        0x0 sys/registry.32
 .data          0x00000000c0023ea0        0x0 sys/sbrk.32
 .data          0x00000000c0023ea0        0x0 sys/setcwd.32
 .data          0x00000000c0023ea0        0x0 sys/settime.32
 .data          0x00000000c0023ea0        0x0 sys/symlink.32
 .data          0x00000000c0023ea0        0x0 sys/timezone.32
 .data          0x00000000c0023ea0        0x0 sys/truncate.32
 .data          0x00000000c0023ea0        0x0 sys/write.32
 .data          0x00000000c0023ea0        0x0 sys/wsbe.32
 .data          0x00000000c0023ea0        0x0 sys/yield.32
 .data          0x00000000c0023ea0        0x0 thr/elf.32
 .data          0x00000000c0023ea0        0x4 thr/prcssthr.32
                0x00000000c0023ea0                Thr::nextPID
 .data          0x00000000c0023ea4        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023ea4       0x1c 
 .data          0x00000000c0023ec0      0x2a0 arch/i386/hal.32
                0x00000000c0023ec0                exceptionNames
 .data          0x00000000c0024160        0x0 arch/i386/pic.32
 .data          0x00000000c0024160        0x0 arch/i386/rtc.32
 .data          0x00000000c0024160        0x0 arch/i386/vga.32
 .data          0x00000000c0024160        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024160        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024160        0x1 fs/iso9660/vfslink.32
                0x00000000c0024160                recentDriveletter
 .data          0x00000000c0024161        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024161        0x0 hal/sound/sndport.32
 .data          0x00000000c0024161        0x0 hw/bus/isa.32
 .data          0x00000000c0024161        0x0 hw/bus/pci.32
 .data          0x00000000c0024161        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024161        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024161        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024161        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024161        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024161        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024161        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024161        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024161        0x0 hw/timer/pit.32
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024161        0x0 crtn.32
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024164        0x0
 .got           0x00000000c0024164        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024164        0x0
 .got.plt       0x00000000c0024164        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024164        0x0
 .igot.plt      0x00000000c0024164        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024164        0x0
 .tm_clone_table
                0x00000000c0024164        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024164        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024161      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024161        0x3 
 .eh_frame      0x00000000c0024164        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024164        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024164       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00241bc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00241fc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024268       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
