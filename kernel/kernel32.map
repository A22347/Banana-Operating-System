Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xce thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xac thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e5ba
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x923 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c0000580                memset
                0x00000000c0000620                strlen
                0x00000000c0000650                strpbrk
                0x00000000c00006a0                strtok
                0x00000000c0000720                strcpy
                0x00000000c0000750                strncpy
                0x00000000c0000840                strcmp
                0x00000000c0000890                strchr
                0x00000000c00008d0                strncmp
                0x00000000c0000930                strcat
                0x00000000c0000960                strncat
                0x00000000c00009c0                strstr
                0x00000000c0000a20                toupper
                0x00000000c0000a40                tolower
                0x00000000c0000a60                simple_strtoul
 .text          0x00000000c0000ca3      0xfb1 core/malloc.32
                0x00000000c0000e0e                dlfree
                0x00000000c000116c                dlmalloc
                0x00000000c00016a9                dlrealloc
                0x00000000c000184d                dlmemalign
                0x00000000c0001970                dlcalloc
                0x00000000c0001a0a                dlcfree
                0x00000000c0001a0f                dlindependent_calloc
                0x00000000c0001a34                dlindependent_comalloc
                0x00000000c0001a4b                dlvalloc
                0x00000000c0001a76                dlpvalloc
                0x00000000c0001aac                dlmalloc_trim
                0x00000000c0001ab9                dlmalloc_usable_size
                0x00000000c0001aea                dlmallinfo
                0x00000000c0001bb9                dlmalloc_stats
                0x00000000c0001bca                dlmallopt
 .text          0x00000000c0001c54      0x224 libk/ctype.32
                0x00000000c0001c54                isblank
                0x00000000c0001c74                iscntrl
                0x00000000c0001c94                isdigit
                0x00000000c0001cb0                islower
                0x00000000c0001ccc                isspace
                0x00000000c0001cf4                isupper
                0x00000000c0001d10                isalpha
                0x00000000c0001d48                isalnum
                0x00000000c0001d80                ispunct
                0x00000000c0001dc8                isgraph
                0x00000000c0001e00                isprint
                0x00000000c0001e30                isxdigit
 .text          0x00000000c0001e78        0x0 libk/string.32
 .text          0x00000000c0001e78       0x51 fs/fat/diskio.32
                0x00000000c0001e78                disk_status
                0x00000000c0001e7b                disk_initialize
                0x00000000c0001e7e                disk_read
                0x00000000c0001e94                disk_write
                0x00000000c0001eaa                disk_ioctl
 .text          0x00000000c0001ec9     0x3d37 fs/fat/ff.32
                0x00000000c0003c4b                f_mount
                0x00000000c0003cad                f_open
                0x00000000c0003f77                f_read
                0x00000000c0004153                f_write
                0x00000000c0004386                f_sync
                0x00000000c000443d                f_close
                0x00000000c000446c                f_lseek
                0x00000000c0004612                f_opendir
                0x00000000c00046dd                f_closedir
                0x00000000c00046ff                f_readdir
                0x00000000c0004791                f_stat
                0x00000000c0004810                f_getfree
                0x00000000c0004914                f_truncate
                0x00000000c00049f8                f_unlink
                0x00000000c0004b16                f_mkdir
                0x00000000c0004cb1                f_rename
                0x00000000c0004e69                f_chmod
                0x00000000c0004f1b                f_utime
                0x00000000c0004fc9                f_getlabel
                0x00000000c000511d                f_setlabel
                0x00000000c00052ad                f_expand
                0x00000000c000540b                f_mkfs
 .text          0x00000000c0005c00       0x28 fs/fat/ffsystem.32
                0x00000000c0005c00                ff_memalloc
                0x00000000c0005c14                ff_memfree
 .text          0x00000000c0005c28      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c28                ff_uni2oem
                0x00000000c0005cc4                ff_oem2uni
                0x00000000c0005d3c                ff_wtoupper
 .text          0x00000000c0005f04      0xd13 fs/iso9660/iso9660.32
                0x00000000c0006137                isoReadDiscSector
                0x00000000c00061d2                strnicmp
                0x00000000c0006476                stricmp
                0x00000000c00064c2                iso_open
                0x00000000c000654a                iso_close
                0x00000000c0006568                iso_read
                0x00000000c000667e                iso_seek
                0x00000000c0006702                iso_tell
                0x00000000c0006733                iso_total
                0x00000000c000675e                fn_postprocess
                0x00000000c0006784                iso_readdir
                0x00000000c00069e2                iso_reset
                0x00000000c00069ff                init_percd
                0x00000000c0006af9                iso_ioctl
                0x00000000c0006b11                fs_iso9660_init
                0x00000000c0006ba7                fs_iso9660_shutdown
 *fill*         0x00000000c0006c17        0x1 
 .text          0x00000000c0006c18      0x751 core/computer.32
                0x00000000c0006c18                Computer::close(int, int, void*)
                0x00000000c0006c72                Krnl::firstTask()
                0x00000000c0006df6                Computer::Computer()
                0x00000000c0006df6                Computer::Computer()
                0x00000000c0006eaa                Computer::setBootMessage(char const*)
                0x00000000c0006eac                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070e8                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000712c                Computer::shutdown()
                0x00000000c0007152                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071d0                Computer::open(int, int, void*)
                0x00000000c00072be                Computer::disableNMI()
                0x00000000c00072d8                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072f8                Computer::handleNMI()
 *fill*         0x00000000c0007369        0x1 
 .text          0x00000000c000736a      0x1cd core/gdt.32
                0x00000000c000736a                GDTEntry::setBase(unsigned int)
                0x00000000c0007386                GDTEntry::setLimit(unsigned int)
                0x00000000c00073a2                GDT::GDT()
                0x00000000c00073a2                GDT::GDT()
                0x00000000c00073b8                GDT::addEntry(GDTEntry)
                0x00000000c00073da                GDT::getNumberOfEntries()
                0x00000000c00073e2                GDT::flush()
                0x00000000c0007404                GDT::setup()
 .text          0x00000000c0007537       0x1d core/idle.32
                0x00000000c0007537                idleFunction(void*)
 .text          0x00000000c0007554      0x468 core/idt.32
                0x00000000c0007554                IDTEntry::IDTEntry(bool)
                0x00000000c0007554                IDTEntry::IDTEntry(bool)
                0x00000000c00075cc                IDTEntry::setOffset(unsigned int)
                0x00000000c00075e0                IDT::IDT()
                0x00000000c00075e0                IDT::IDT()
                0x00000000c00075e2                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075ea                IDT::addEntry(IDTEntry, int)
                0x00000000c0007604                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000763c                IDT::flush()
                0x00000000c0007656                IDT::setup()
 .text          0x00000000c00079bc      0x1c3 core/kheap.32
                0x00000000c00079bc                sbrk
                0x00000000c0007a55                mmap
                0x00000000c0007a6d                munmap
                0x00000000c0007a85                liballoc_lock()
                0x00000000c0007a92                liballoc_unlock()
                0x00000000c0007aa6                liballoc_alloc(int)
                0x00000000c0007aca                liballoc_free(void*, int)
                0x00000000c0007aeb                realloc
                0x00000000c0007b06                malloc
                0x00000000c0007b19                free
                0x00000000c0007b2c                rfree
                0x00000000c0007b3f                calloc
 .text          0x00000000c0007b7f       0xcf core/main.32
                0x00000000c0007b7f                KeEntryPoint
 *fill*         0x00000000c0007c4e        0x2 
 .text          0x00000000c0007c50      0x5f8 core/physmgr.32
                0x00000000c0007c50                Phys::allocateDMA(unsigned long)
                0x00000000c0007d23                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d56                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d89                Phys::getPageState(unsigned long)
                0x00000000c0007da4                Phys::freePage(unsigned long)
                0x00000000c0007e0c                Phys::allocatePage()
                0x00000000c0007ecc                Phys::allocateContiguousPages(int)
                0x00000000c0007f28                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f6a                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0008248      0x267 core/pipe.32
                0x00000000c0008248                Pipe::isAtty()
                0x00000000c000824c                Pipe::~Pipe()
                0x00000000c000824c                Pipe::~Pipe()
                0x00000000c000826c                Pipe::~Pipe()
                0x00000000c0008294                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008358                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000844a                Pipe::Pipe(int)
                0x00000000c000844a                Pipe::Pipe(int)
 *fill*         0x00000000c00084af        0x1 
 .text          0x00000000c00084b0      0xabe core/terminal.32
                0x00000000c00084b0                VgaText::isAtty()
                0x00000000c00084b4                VgaText::~VgaText()
                0x00000000c00084b4                VgaText::~VgaText()
                0x00000000c00084d4                VgaText::~VgaText()
                0x00000000c00084fc                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000851c                setTerminalScrollLock(bool)
                0x00000000c000851d                doTerminalCycle()
                0x00000000c000851e                addToTerminalCycle(VgaText*)
                0x00000000c000851f                scrollTerminalScrollLock(int)
                0x00000000c0008520                VgaText::updateTitle()
                0x00000000c0008522                VgaText::load()
                0x00000000c0008524                VgaText::updateCursor()
                0x00000000c000853a                VgaText::doANSI_SGR(int)
                0x00000000c00085ae                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085be                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085ce                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085ee                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085fa                VgaText::setTitleColour(VgaColour)
                0x00000000c0008606                VgaText::setTitle(char*)
                0x00000000c0008608                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000861a                VgaText::scrollScreen()
                0x00000000c00086ac                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086bc                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000874c                VgaText::getCursorX()
                0x00000000c0008754                VgaText::getCursorY()
                0x00000000c000875c                VgaText::setCursor(int, int)
                0x00000000c0008773                setActiveTerminal(VgaText*)
                0x00000000c00087be                VgaText::clearScreen()
                0x00000000c000880c                VgaText::setCursorX(int)
                0x00000000c0008824                VgaText::setCursorY(int)
                0x00000000c000883c                VgaText::incrementCursor(bool)
                0x00000000c0008898                VgaText::decrementCursor(bool)
                0x00000000c00088ba                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008986                VgaText::putchar(char)
                0x00000000c0008a72                VgaText::putx(unsigned int)
                0x00000000c0008ab8                VgaText::puts(char const*)
                0x00000000c0008ade                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b2a                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c74                VgaText::VgaText(char const*)
                0x00000000c0008c74                VgaText::VgaText(char const*)
                0x00000000c0008dea                VgaText::receiveKey(unsigned char)
                0x00000000c0008f48                VgaText::doUpdate()
                0x00000000c0008f49                newTerminal(char*)
 *fill*         0x00000000c0008f6e        0x2 
 .text          0x00000000c0008f70      0x1ae core/tss.32
                0x00000000c0008f70                TSS::TSS()
                0x00000000c0008f70                TSS::TSS()
                0x00000000c0008f80                TSS::setESP(unsigned long)
                0x00000000c0008f94                TSS::flush()
                0x00000000c0008fb8                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c000911e      0x496 core/unixfile.32
                0x00000000c000911e                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009174                ReservedFilename::isAtty()
                0x00000000c0009190                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091ee                UnixFile::getFileDescriptor()
                0x00000000c00091f6                UnixFile::UnixFile(int)
                0x00000000c00091f6                UnixFile::UnixFile(int)
                0x00000000c000938a                ReservedFilename::ReservedFilename(int)
                0x00000000c000938a                ReservedFilename::ReservedFilename(int)
                0x00000000c00093bc                UnixFile::~UnixFile()
                0x00000000c00093bc                UnixFile::~UnixFile()
                0x00000000c0009448                UnixFile::~UnixFile()
                0x00000000c0009470                ReservedFilename::~ReservedFilename()
                0x00000000c0009470                ReservedFilename::~ReservedFilename()
                0x00000000c0009490                ReservedFilename::~ReservedFilename()
                0x00000000c00094b7                getFromFileDescriptor(int)
 *fill*         0x00000000c00095b4        0xc 
 .text          0x00000000c00095c0     0x134c core/virtmgr.32
                0x00000000c00095c0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095f9                Virt::getPageState(unsigned long)
                0x00000000c0009620                Virt::allocateKernelVirtualPages(int)
                0x00000000c000973b                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009759                Virt::swapIDToSector(unsigned long)
                0x00000000c000976f                Virt::allocateSwapfilePage()
                0x00000000c00097e8                Virt::virtualMemorySetup()
                0x00000000c0009842                Virt::setupPageSwapping(int)
                0x00000000c00098c4                VAS::VAS(VAS*)
                0x00000000c00098c4                VAS::VAS(VAS*)
                0x00000000c00098ee                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000991a                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009939                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a4e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a74                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a96                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009ae2                VAS::VAS()
                0x00000000c0009ae2                VAS::VAS()
                0x00000000c0009b64                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009bae                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bd8                VAS::~VAS()
                0x00000000c0009bd8                VAS::~VAS()
                0x00000000c0009d42                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e76                VAS::allocatePages(int, int)
                0x00000000c000a054                VAS::setCPUSpecific(unsigned long)
                0x00000000c000a082                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a150                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a276                VAS::VAS(bool)
                0x00000000c000a276                VAS::VAS(bool)
                0x00000000c000a4fa                VAS::evict(unsigned long)
                0x00000000c000a5ca                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a6f4                VAS::scanForEviction()
                0x00000000c000a7dc                mapVASFirstTime
 .text          0x00000000c000a90c       0x5f coreobjs/c++.32
                0x00000000c000a90c                __cxa_atexit
                0x00000000c000a90f                __cxa_finalize
                0x00000000c000a910                __stack_chk_fail
                0x00000000c000a946                __cxa_pure_virtual
                0x00000000c000a957                operator new[](unsigned long)
                0x00000000c000a95c                operator delete(void*, unsigned long)
                0x00000000c000a961                operator delete[](void*)
                0x00000000c000a966                operator delete[](void*, unsigned long)
 .text          0x00000000c000a96b      0x259 dbg/kconsole.32
                0x00000000c000a96b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a9dd                Dbg::logc(char)
                0x00000000c000a9fd                Dbg::logs(char*)
                0x00000000c000aa1f                Dbg::logWriteInt(unsigned int)
                0x00000000c000aa4b                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000aa76                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000abc4      0xc46 fs/vfs.32
                0x00000000c000abc4                File::read(unsigned long long, void*, int*)
                0x00000000c000ac1c                File::write(unsigned long long, void*, int*)
                0x00000000c000ac74                Directory::read(unsigned long long, void*, int*)
                0x00000000c000accc                Directory::write(unsigned long long, void*, int*)
                0x00000000c000acfa                File::isAtty()
                0x00000000c000acfe                Directory::isAtty()
                0x00000000c000ad02                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ad08                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ad0e                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ad14                File::~File()
                0x00000000c000ad14                File::~File()
                0x00000000c000ad34                File::~File()
                0x00000000c000ad5c                Directory::~Directory()
                0x00000000c000ad5c                Directory::~Directory()
                0x00000000c000ad7c                Directory::~Directory()
                0x00000000c000ada4                Filesystem::Filesystem()
                0x00000000c000ada4                Filesystem::Filesystem()
                0x00000000c000adc8                Filesystem::~Filesystem()
                0x00000000c000adc8                Filesystem::~Filesystem()
                0x00000000c000add6                Filesystem::~Filesystem()
                0x00000000c000adfd                Fs::getcwd(Process*, char*, int)
                0x00000000c000ae27                Fs::initVFS()
                0x00000000c000ae51                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aff8                File::File(char const*, Process*)
                0x00000000c000aff8                File::File(char const*, Process*)
                0x00000000c000b0b6                File::open(FileOpenMode)
                0x00000000c000b114                File::close()
                0x00000000c000b174                File::seek(unsigned long long)
                0x00000000c000b1ca                File::tell(unsigned long long*)
                0x00000000c000b21a                File::rewind()
                0x00000000c000b22e                File::unlink()
                0x00000000c000b27a                File::rename(char const*)
                0x00000000c000b2c8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b31e                File::exists()
                0x00000000c000b35c                File::stat(unsigned long long*, bool*)
                0x00000000c000b3bd                Fs::setcwd(Process*, char*)
                0x00000000c000b51a                Directory::Directory(char const*, Process*)
                0x00000000c000b51a                Directory::Directory(char const*, Process*)
                0x00000000c000b5d8                Directory::open()
                0x00000000c000b634                Directory::close()
                0x00000000c000b694                Directory::unlink()
                0x00000000c000b6e0                Directory::rename(char const*)
                0x00000000c000b72e                Directory::exists()
                0x00000000c000b76c                Directory::read(dirent*)
                0x00000000c000b7b8                Directory::create()
                0x00000000c000b804                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b80a        0x2 
 .text          0x00000000c000b80c       0x7f hal/bus.32
                0x00000000c000b80c                Bus::Bus(char const*)
                0x00000000c000b80c                Bus::Bus(char const*)
                0x00000000c000b844                Bus::~Bus()
                0x00000000c000b844                Bus::~Bus()
                0x00000000c000b864                Bus::~Bus()
 .text          0x00000000c000b88b       0x99 hal/buzzer.32
                0x00000000c000b88b                beepThread(void*)
                0x00000000c000b8c8                Krnl::beep(int, int, bool)
 .text          0x00000000c000b924      0x45d hal/clock.32
                0x00000000c000b924                User::loadClockSettings(int)
                0x00000000c000b976                Clock::Clock(char const*)
                0x00000000c000b976                Clock::Clock(char const*)
                0x00000000c000b9ac                Clock::~Clock()
                0x00000000c000b9ac                Clock::~Clock()
                0x00000000c000b9cc                Clock::~Clock()
                0x00000000c000b9f4                Clock::timeInSecondsLocal()
                0x00000000c000ba3c                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000ba95                datetimeToSeconds(datetime_t)
                0x00000000c000bbb4                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bc14                secondsToDatetime(unsigned long long)
                0x00000000c000bd5c                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bd81        0x1 
 .text          0x00000000c000bd82      0x460 hal/device.32
                0x00000000c000bd82                Device::hibernate()
                0x00000000c000bd84                Device::wake()
                0x00000000c000bd86                Device::detect()
                0x00000000c000bd88                Device::disableLegacy()
                0x00000000c000bd8a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bd8c                DriverlessDevice::close(int, int, void*)
                0x00000000c000bd90                DriverlessDevice::detect()
                0x00000000c000bd92                DriverlessDevice::open(int, int, void*)
                0x00000000c000bda6                Device::~Device()
                0x00000000c000bda6                Device::~Device()
                0x00000000c000bdb4                Device::~Device()
                0x00000000c000bddc                Device::findAndLoadDriver()
                0x00000000c000bdea                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000be10                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000be50                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000be78                Device::getParent()
                0x00000000c000be84                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bea2                Device::addChild(Device*)
                0x00000000c000bee6                Device::removeAllChildren()
                0x00000000c000bf2c                Device::hibernateAll()
                0x00000000c000bf5c                Device::wakeAll()
                0x00000000c000bf8c                Device::detectAll()
                0x00000000c000bfbc                Device::disableLegacyAll()
                0x00000000c000bfbe                Device::loadDriversForAll()
                0x00000000c000bfc0                Device::closeAll()
                0x00000000c000bff6                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c02c                Device::setName(char const*)
                0x00000000c000c03a                Device::Device(char const*)
                0x00000000c000c03a                Device::Device(char const*)
                0x00000000c000c134                Device::getName()
                0x00000000c000c13e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c13e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c174                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c1b8                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c1e2        0x2 
 .text          0x00000000c000c1e4       0x7f hal/diskctrl.32
                0x00000000c000c1e4                HardDiskController::HardDiskController(char const*)
                0x00000000c000c1e4                HardDiskController::HardDiskController(char const*)
                0x00000000c000c21c                HardDiskController::~HardDiskController()
                0x00000000c000c21c                HardDiskController::~HardDiskController()
                0x00000000c000c23c                HardDiskController::~HardDiskController()
 *fill*         0x00000000c000c263        0x1 
 .text          0x00000000c000c264       0xdb hal/diskphys.32
                0x00000000c000c264                PhysicalDisk::eject()
                0x00000000c000c268                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c268                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c2d0                PhysicalDisk::startCache()
                0x00000000c000c2f8                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c2f8                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c318                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c33f        0x0 hal/fpu.32
 *fill*         0x00000000c000c33f        0x1 
 .text          0x00000000c000c340      0x331 hal/intctrl.32
                0x00000000c000c340                int_handler
                0x00000000c000c3bb                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c404                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c544                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c578                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c5e6                setupINTS()
                0x00000000c000c633                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c671        0x1 
 .text          0x00000000c000c672      0x81d hal/keybrd.32
                0x00000000c000c672                startGUI(void*)
                0x00000000c000c6e1                startGUIVESA(void*)
                0x00000000c000c750                sendKeyToTerminal(unsigned char)
                0x00000000c000c816                sendKeyboardToken(KeyboardToken)
                0x00000000c000cc93                clearInternalKeybuffer(VgaText*)
                0x00000000c000ccc9                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000ce0c                Keyboard::Keyboard(char const*)
                0x00000000c000ce0c                Keyboard::Keyboard(char const*)
                0x00000000c000ce48                Keyboard::~Keyboard()
                0x00000000c000ce48                Keyboard::~Keyboard()
                0x00000000c000ce68                Keyboard::~Keyboard()
 *fill*         0x00000000c000ce8f        0x1 
 .text          0x00000000c000ce90      0x3f0 hal/logidisk.32
                0x00000000c000ce90                LogicalDisk::close(int, int, void*)
                0x00000000c000ce94                LogicalDisk::~LogicalDisk()
                0x00000000c000ce94                LogicalDisk::~LogicalDisk()
                0x00000000c000ceb4                LogicalDisk::~LogicalDisk()
                0x00000000c000cedc                LogicalDisk::open(int, int, void*)
                0x00000000c000cef0                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cf28                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cf6e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cf6e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d030                LogicalDisk::assignDriveLetter()
                0x00000000c000d0e6                LogicalDisk::mount()
                0x00000000c000d12e                LogicalDisk::unmount()
                0x00000000c000d13e                LogicalDisk::eject()
                0x00000000c000d152                LogicalDisk::unassignDriveLetter()
                0x00000000c000d1a8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d214                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000d280       0x7f hal/mouse.32
                0x00000000c000d280                Mouse::Mouse(char const*)
                0x00000000c000d280                Mouse::Mouse(char const*)
                0x00000000c000d2b8                Mouse::~Mouse()
                0x00000000c000d2b8                Mouse::~Mouse()
                0x00000000c000d2d8                Mouse::~Mouse()
 *fill*         0x00000000c000d2ff        0x1 
 .text          0x00000000c000d300       0x89 hal/nic.32
                0x00000000c000d300                NIC::getMAC()
                0x00000000c000d306                NIC::write(int, unsigned char*, int*)
                0x00000000c000d30c                NIC::NIC(char const*)
                0x00000000c000d30c                NIC::NIC(char const*)
                0x00000000c000d342                NIC::~NIC()
                0x00000000c000d342                NIC::~NIC()
                0x00000000c000d362                NIC::~NIC()
 .text          0x00000000c000d389      0x336 hal/partition.32
                0x00000000c000d389                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d431                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d6bf        0x1 
 .text          0x00000000c000d6c0       0x7f hal/serial.32
                0x00000000c000d6c0                Serial::Serial(char const*)
                0x00000000c000d6c0                Serial::Serial(char const*)
                0x00000000c000d6f8                Serial::~Serial()
                0x00000000c000d6f8                Serial::~Serial()
                0x00000000c000d718                Serial::~Serial()
 *fill*         0x00000000c000d73f        0x1 
 .text          0x00000000c000d740      0x22c hal/timer.32
                0x00000000c000d740                Timer::Timer(char const*)
                0x00000000c000d740                Timer::Timer(char const*)
                0x00000000c000d778                Timer::~Timer()
                0x00000000c000d778                Timer::~Timer()
                0x00000000c000d798                Timer::~Timer()
                0x00000000c000d7c0                Timer::read()
                0x00000000c000d7cb                setupTimer(int)
                0x00000000c000d806                timerHandler(unsigned int)
 .text          0x00000000c000d96c      0x434 hal/vcache.32
                0x00000000c000d96c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d96c                VCache::VCache(PhysicalDisk*)
                0x00000000c000dacc                VCache::invalidateReadBuffer()
                0x00000000c000dadc                VCache::writeWriteBuffer()
                0x00000000c000db28                VCache::~VCache()
                0x00000000c000db28                VCache::~VCache()
                0x00000000c000db74                VCache::~VCache()
                0x00000000c000db9c                VCache::write(unsigned long long, int, void*)
                0x00000000c000dc96                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000dda0      0x4d1 hal/video.32
                0x00000000c000dda0                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ddec                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000de5c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000deec                Video::clearScreen(unsigned int)
                0x00000000c000df20                Video::putpixel(int, int, unsigned int)
                0x00000000c000df2e                Video::readPixelApprox(int, int)
                0x00000000c000df42                Video::Video(char const*)
                0x00000000c000df42                Video::Video(char const*)
                0x00000000c000df78                Video::~Video()
                0x00000000c000df78                Video::~Video()
                0x00000000c000df98                Video::~Video()
                0x00000000c000dfc0                Video::isMonochrome()
                0x00000000c000dfcc                Video::getWidth()
                0x00000000c000dfd8                Video::getHeight()
                0x00000000c000dfe4                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e0a0                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e206                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e271        0x3 
 .text          0x00000000c000e274     0x1305 hw/acpi.32
                0x00000000c000e274                ACPI::close(int, int, void*)
                0x00000000c000e324                findRSDP()
                0x00000000c000e3bc                loadACPITables(unsigned char*)
                0x00000000c000e640                findRSDT(unsigned char*)
                0x00000000c000e7ac                findDataTable(unsigned char*, char*)
                0x00000000c000e82c                scanMADT()
                0x00000000c000ecf4                ACPI::ACPI()
                0x00000000c000ecf4                ACPI::ACPI()
                0x00000000c000ed48                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ee2c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000eef4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000eefc                ACPI::detectPCI()
                0x00000000c000f104                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f150                ACPI::sleep()
                0x00000000c000f16c                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f579        0x1 
 .text          0x00000000c000f57a      0xb69 hw/cpu.32
                0x00000000c000f57a                CPU::close(int, int, void*)
                0x00000000c000f57e                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f59a                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f5b2                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f626                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f6aa                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f6d8                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f706                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f734                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f762                CPU::CPU()
                0x00000000c000f762                CPU::CPU()
                0x00000000c000f7e4                CPU::displayFeatures()
                0x00000000c000f7e6                CPU::detectFeatures()
                0x00000000c000fe8a                CPU::setupSMEP()
                0x00000000c000fe96                CPU::setupUMIP()
                0x00000000c000fea0                CPU::setupTSC()
                0x00000000c000feaa                CPU::setupLargePages()
                0x00000000c000feb4                CPU::setupPAT()
                0x00000000c000fef0                CPU::setupMTRR()
                0x00000000c000fef2                CPU::setupGlobalPages()
                0x00000000c000fefc                CPU::allowUsermodeDataAccess()
                0x00000000c000ff0e                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ff20                CPU::setupSMAP()
                0x00000000c000ff2e                CPU::setupFeatures()
                0x00000000c000fffa                CPU::open(int, int, void*)
 .text          0x00000000c00100e3       0xd1 krnl/bootmsg.32
                0x00000000c00100e3                KeDisplaySplashScreen()
                0x00000000c0010151                KeSetBootMessage(char const*)
 .text          0x00000000c00101b4      0x57d krnl/env.32
                0x00000000c00101b4                EnvVarContainer::getEnv(char const*)
                0x00000000c00101f2                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00102b4                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00102b6                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001049c                EnvVarContainer::__loadSystem()
                0x00000000c00104b6                EnvVarContainer::__loadUser()
                0x00000000c00104b8                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104b8                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104da                EnvVarContainer::~EnvVarContainer()
                0x00000000c00104da                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010506                Krnl::getEnv(Process*, char const*)
                0x00000000c001056b                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0010585                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00105a4                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00105b7                Krnl::deleteEnvSystem(char const*)
                0x00000000c00105b8                Krnl::deleteEnvUser(char const*)
                0x00000000c00105b9                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00105ba                Krnl::newProcessEnv(Process*)
                0x00000000c00105dc                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010628                Krnl::loadSystemEnv()
                0x00000000c0010656                Krnl::loadUserEnv()
                0x00000000c001067c                Krnl::flushEnv()
                0x00000000c001067d                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001069d                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0010731       0x94 krnl/inlines.32
                0x00000000c0010731                CPU::current()
                0x00000000c001073d                operator new(unsigned long)
                0x00000000c0010742                operator delete(void*)
                0x00000000c0010747                disableIRQs()
                0x00000000c0010749                enableIRQs()
                0x00000000c001074b                lockScheduler()
                0x00000000c0010753                unlockScheduler()
                0x00000000c0010762                lockStuff()
                0x00000000c0010770                unlockStuff()
                0x00000000c00107aa                Virt::getAKernelVAS()
                0x00000000c00107b0                __not_memcpy
 .text          0x00000000c00107c5        0xc krnl/panic.32
                0x00000000c00107c5                KePanic(char const*)
 .text          0x00000000c00107d1      0x142 krnl/powctrl.32
                0x00000000c00107d1                Krnl::powerThread(void*)
                0x00000000c00107ff                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010815                Krnl::userIOReceived()
                0x00000000c0010820                Krnl::handlePowerButton()
                0x00000000c0010855                Krnl::handleSleepButton()
                0x00000000c001088a                Krnl::setupPowerManager()
 .text          0x00000000c0010913       0x9b krnl/random.32
                0x00000000c0010913                KeRand()
                0x00000000c0010953                KeSeedRand(unsigned int)
                0x00000000c001097c                KeInitRand()
 *fill*         0x00000000c00109ae        0x2 
 .text          0x00000000c00109b0      0x190 krnl/resolve.32
                0x00000000c00109b0                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010b40      0x315 krnl/signal.32
                0x00000000c0010b40                KiSigKill(int)
                0x00000000c0010b54                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010b55                KiDefaultSignalHandlerPause(int)
                0x00000000c0010b81                KiDefaultSignalHandlerResume(int)
                0x00000000c0010bad                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010bb2                KeInitSignals()
                0x00000000c0010bfd                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010c33                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010cb0                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010da1                KiCheckSignalZ
                0x00000000c0010de3                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010e1e                KiFinishSignalZ
 .text          0x00000000c0010e55      0xda8 krnl/syscalls.32
                0x00000000c0010e55                SysSeekDir(regs*)
                0x00000000c0010e5a                SysTellDir(regs*)
                0x00000000c0010e5f                SysVerify(regs*)
                0x00000000c0010e69                SysGetArgc(regs*)
                0x00000000c0010e79                SysTTYName(regs*)
                0x00000000c0010e81                SysFormatDisk(regs*)
                0x00000000c0010ef0                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010f5a                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010fdb                SysShutdown(regs*)
                0x00000000c00110a3                SysRealpath(regs*)
                0x00000000c00110f4                SysReadDir(regs*)
                0x00000000c0011178                SysIsATTY(regs*)
                0x00000000c00111ca                SysSeek(regs*)
                0x00000000c0011237                SysTell(regs*)
                0x00000000c00112a3                SysSize(regs*)
                0x00000000c0011317                SysSizeFromFilename(regs*)
                0x00000000c00113e7                SysClose(regs*)
                0x00000000c001143f                SysOpenDir(regs*)
                0x00000000c00114c7                SysMakeDir(regs*)
                0x00000000c0011535                SysCloseDir(regs*)
                0x00000000c001157c                SysWait(regs*)
                0x00000000c00115a1                SysNotImpl(regs*)
                0x00000000c00115be                SysPanic(regs*)
                0x00000000c00115db                SysRmdir(regs*)
                0x00000000c0011639                SysUnlink(regs*)
                0x00000000c0011697                SysGetArgv(regs*)
                0x00000000c00116e3                SysUSleep(regs*)
                0x00000000c001171d                SysSpawn(regs*)
                0x00000000c001179c                SysGetEnv(regs*)
                0x00000000c001186d                SysSetFatAttrib(regs*)
                0x00000000c00118f0                SysPipe(regs*)
                0x00000000c0011950                SysGetUnixTime(regs*)
                0x00000000c0011964                string_ends_with(char const*, char const*)
                0x00000000c00119be                SysOpen(regs*)
                0x00000000c0011bbb                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011bfd        0x3 
 .text          0x00000000c0011c00      0x151 net/ethernet.32
                0x00000000c0011c00                KeSwitchEndian16(unsigned short)
                0x00000000c0011c28                KeSwitchEndian32(unsigned int)
                0x00000000c0011c58                EthernetCRC32(unsigned char*, int)
                0x00000000c0011cfc                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0011d51      0xd4e reg/cm.32
                0x00000000c0011d51                CmOpen(char const*)
                0x00000000c0011e6f                CmClose(Reghive_Tag*)
                0x00000000c0011e85                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011ec1                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011f38                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011f77                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011fa9                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011fe5                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c001200d                CmUpdateHeader(Reghive_Tag*)
                0x00000000c001202e                CmExpand(Reghive_Tag*, int)
                0x00000000c00120a9                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c001212f                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012226                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012362                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00123c3                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00123f1                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012429                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012453                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012493                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012537                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012565                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0012702                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c001274f                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00127c9                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001281c                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00128e0                zStrtok(char*, char const*)
                0x00000000c0012949                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00129ca                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0012a6d                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0012a9f      0x521 reg/registry.32
                0x00000000c0012a9f                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012c0e                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012d63                Reg::getLine(char*, char*, char*)
                0x00000000c0012d9a                Reg::readInt(char*, char*, int*)
                0x00000000c0012e76                Reg::readString(char*, char*, char*, int)
                0x00000000c0012efc                Reg::readBool(char*, char*, bool*)
                0x00000000c0012f21                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012f53                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012f7f                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012fc0       0x36 sys/eject.32
                0x00000000c0012fc0                SysEject(regs*)
 .text          0x00000000c0012ff6       0x18 sys/exit.32
                0x00000000c0012ff6                SysExit(regs*)
 .text          0x00000000c001300e       0x1f sys/getcwd.32
                0x00000000c001300e                SysGetCwd(regs*)
 .text          0x00000000c001302d        0xc sys/getpid.32
                0x00000000c001302d                SysGetPID(regs*)
 .text          0x00000000c0013039       0x1a sys/getramdata.32
                0x00000000c0013039                SysGetRAMData(regs*)
 .text          0x00000000c0013053       0x82 sys/getvgaptr.32
                0x00000000c0013053                SysGetVGAPtr(regs*)
 *fill*         0x00000000c00130d5        0x3 
 .text          0x00000000c00130d8       0xb9 sys/kill.32
                0x00000000c00130d8                SysKill(regs*)
 .text          0x00000000c0013191       0xa8 sys/loaddll.32
                0x00000000c0013191                SysLoadDLL(regs*)
 .text          0x00000000c0013239       0x68 sys/read.32
                0x00000000c0013239                SysRead(regs*)
 .text          0x00000000c00132a1       0x29 sys/registersignal.32
                0x00000000c00132a1                SysRegisterSignal(regs*)
 .text          0x00000000c00132ca      0x19c sys/registry.32
                0x00000000c00132ca                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013341                SysRegistryReadExtent(regs*)
                0x00000000c0013389                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00133b1                SysRegistryEnterDirectory(regs*)
                0x00000000c00133d9                SysRegistryGetNext(regs*)
                0x00000000c0013401                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001343b                SysRegistryOpen(regs*)
                0x00000000c001344f                SysRegistryClose(regs*)
 .text          0x00000000c0013466       0x55 sys/sbrk.32
                0x00000000c0013466                SysSbrk(regs*)
 .text          0x00000000c00134bb       0x1c sys/setcwd.32
                0x00000000c00134bb                SysSetCwd(regs*)
 .text          0x00000000c00134d7       0xb3 sys/settime.32
                0x00000000c00134d7                SysSetTime(regs*)
 .text          0x00000000c001358a       0x4a sys/timezone.32
                0x00000000c001358a                SysTimezone(regs*)
 .text          0x00000000c00135d4       0x68 sys/write.32
                0x00000000c00135d4                SysWrite(regs*)
 .text          0x00000000c001363c       0x62 sys/wsbe.32
                0x00000000c001363c                SysWsbe(regs*)
 .text          0x00000000c001369e       0x25 sys/yield.32
                0x00000000c001369e                SysYield(regs*)
 .text          0x00000000c00136c3     0x120f thr/elf.32
                0x00000000c00136c3                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001394a                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013b6d                Thr::runtimeReferenceHelper()
                0x00000000c0013b80                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013bcf                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013e90                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00145da                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001460c                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014643                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001465d                Thr::loadDLL(char const*, bool)
                0x00000000c0014899                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00148d2        0xe 
 .text          0x00000000c00148e0     0x12b7 thr/prcssthr.32
                0x00000000c00148e0                userModeEntryPoint(void*)
                0x00000000c0014908                changeTSS
                0x00000000c0014940                switchToThread(ThreadControlBlock*)
                0x00000000c0014a14                Process::addArgs(char**)
                0x00000000c0014a78                Process::Process(char const*, Process*, char**)
                0x00000000c0014a78                Process::Process(char const*, Process*, char**)
                0x00000000c0014c70                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014c70                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014e30                taskStartupFunction
                0x00000000c0014e3c                Semaphore::Semaphore(int)
                0x00000000c0014e3c                Semaphore::Semaphore(int)
                0x00000000c0014e6c                Mutex::Mutex()
                0x00000000c0014e6c                Mutex::Mutex()
                0x00000000c0014e88                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014f8c                Process::createUserThread()
                0x00000000c0014fb8                setupMultitasking(void (*)())
                0x00000000c00150e0                schedule()
                0x00000000c001516c                Semaphore::tryAcquire()
                0x00000000c0015224                Semaphore::assertLocked(char const*)
                0x00000000c0015294                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00152bc                blockTask(TaskState)
                0x00000000c00152ec                waitTask(int, int*, int)
                0x00000000c0015334                milliTenthSleepUntil(unsigned int)
                0x00000000c00153bc                milliTenthSleep(unsigned int)
                0x00000000c00153cc                sleep(unsigned int)
                0x00000000c00153dc                Semaphore::acquire()
                0x00000000c0015490                taskReturned
                0x00000000c00154c8                Thr::processFromPID(int)
                0x00000000c0015568                unblockTask(ThreadControlBlock*)
                0x00000000c00155fc                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00158b4                cleanerTaskFunction(void*)
                0x00000000c0015998                terminateTask(int)
                0x00000000c0015a5c                Thr::terminateFromIRQ(int)
                0x00000000c0015a6c                Semaphore::release()
 .text          0x00000000c0015b97      0xb88 vm86/vm8086.32
                0x00000000c0015b97                Vm::inbv(unsigned short)
                0x00000000c0015bac                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015be4                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015bf4                Vm::getSegment(unsigned int)
                0x00000000c0015bfc                Vm::getOffset(unsigned int)
                0x00000000c0015c01                Vm::mainloop2()
                0x00000000c0015c3b                Vm::mainVm8086Loop(void*)
                0x00000000c0015c4b                Vm::mainloop3(unsigned long)
                0x00000000c0015c71                Vm::initialise8086()
                0x00000000c0015cb4                Vm::finish8086()
                0x00000000c0015d15                Vm::getOutput8086(unsigned char*)
                0x00000000c0015d3a                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015df1                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015f54                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0015fe2                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0015ff3                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016005                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016016                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001602b                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016042                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016057                Vm::faultHandler(regs*)
 .text          0x00000000c001671f      0xa55 arch/i386/hal.32
                0x00000000c001671f                noCopro(unsigned long)
                0x00000000c0016720                nmiHandler(regs*, void*)
                0x00000000c0016735                doubleFault(regs*, void*)
                0x00000000c001674a                displayDebugInfo(regs*)
                0x00000000c0016a8b                HalSystemIdle()
                0x00000000c0016b06                displayProgramFault(char const*)
                0x00000000c0016b5e                gpFault(regs*, void*)
                0x00000000c0016bb8                pgFault(regs*, void*)
                0x00000000c0016c37                otherISRHandler(regs*, void*)
                0x00000000c0016c63                opcodeFault(regs*, void*)
                0x00000000c0016cd7                i386SaveCoprocessor(void*)
                0x00000000c0016ceb                i386LoadCoprocessor(void*)
                0x00000000c0016cff                x87EmulHandler(regs*, void*)
                0x00000000c0016d9c                HalInitialiseCoprocessor()
                0x00000000c0016e4a                HalPanic(char const*)
                0x00000000c0016f43                HalQueryPerformanceCounter()
                0x00000000c0016f5e                HalInitialise()
                0x00000000c0017104                HalMakeBeep(int)
                0x00000000c001713d                HalGetRand()
                0x00000000c0017140                HalEndOfInterrupt(int)
                0x00000000c0017171                HalRestart()
                0x00000000c0017172                HalShutdown()
                0x00000000c0017173                HalSleep()
 .text          0x00000000c0017174      0x300 arch/i386/pic.32
                0x00000000c0017174                picIoWait()
                0x00000000c001717c                picDisable()
                0x00000000c00171b4                picGetIRQReg(int)
                0x00000000c0017238                picOpen()
                0x00000000c00173cc                picEOI(int)
 .text          0x00000000c0017474      0x681 arch/i386/rtc.32
                0x00000000c0017474                RTC::open(int, int, void*)
                0x00000000c0017478                RTC::close(int, int, void*)
                0x00000000c001747c                RTC::timeInSecondsUTC()
                0x00000000c001748e                RTC::timeInDatetimeUTC()
                0x00000000c00174b4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00174f2                RTC::~RTC()
                0x00000000c00174f2                RTC::~RTC()
                0x00000000c0017512                RTC::~RTC()
                0x00000000c001753a                RTC::get_update_in_progress_flag()
                0x00000000c0017552                RTC::completeRTCRefresh()
                0x00000000c0017836                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00179dc                rtcIRQHandler(regs*, void*)
                0x00000000c0017a2c                RTC::RTC()
                0x00000000c0017a2c                RTC::RTC()
 *fill*         0x00000000c0017af5        0x3 
 .text          0x00000000c0017af8      0x20a arch/i386/vga.32
                0x00000000c0017af8                HalConsoleScroll(int, int)
                0x00000000c0017c00                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017c6c                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0017d02        0x2 
 .text          0x00000000c0017d04     0x13fb fs/fat/vfslink.32
                0x00000000c0017d04                FAT::getName()
                0x00000000c0017d0c                FAT::tell(void*, unsigned long long*)
                0x00000000c0017d48                FAT::stat(void*, unsigned long long*)
                0x00000000c0017d84                FAT::~FAT()
                0x00000000c0017d84                FAT::~FAT()
                0x00000000c0017da4                FAT::~FAT()
                0x00000000c0017dcc                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017e74                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0017f50                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001812c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018348                FAT::allocateSwapfile(char const*, int)
                0x00000000c0018524                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001868c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00186f8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0018764                FAT::close(void*)
                0x00000000c00187b0                FAT::closeDir(void*)
                0x00000000c00187fc                FAT::seek(void*, unsigned long long)
                0x00000000c0018854                fatWrapperReadDisk
                0x00000000c001889c                fatWrapperWriteDisk
                0x00000000c00188e4                fatWrapperIoctl
                0x00000000c0018a00                FAT::FAT()
                0x00000000c0018a00                FAT::FAT()
                0x00000000c0018a50                FAT::fixFilepath(char*)
                0x00000000c0018a8c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0018bbc                FAT::openDir(char const*, void**)
                0x00000000c0018c6c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018d60                FAT::unlink(char const*)
                0x00000000c0018ddc                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0018f48                FAT::rename(char const*, char const*)
                0x00000000c0019014                FAT::mkdir(char const*)
                0x00000000c0019090                FAT::exists(char const*)
 *fill*         0x00000000c00190ff        0x1 
 .text          0x00000000c0019100       0xa0 fs/iso9660/helper.32
                0x00000000c0019100                isoReadDiscSectorHelper
                0x00000000c0019168                iso_kprintf
                0x00000000c0019184                iso_kprintfd
 .text          0x00000000c00191a0      0x6ee fs/iso9660/vfslink.32
                0x00000000c00191a0                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00191a6                ISO9660::getName()
                0x00000000c00191ac                ISO9660::closeDir(void*)
                0x00000000c00191b6                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00191bc                ISO9660::unlink(char const*)
                0x00000000c00191c2                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00191c8                ISO9660::rename(char const*, char const*)
                0x00000000c00191ce                ISO9660::mkdir(char const*)
                0x00000000c00191d4                ISO9660::~ISO9660()
                0x00000000c00191d4                ISO9660::~ISO9660()
                0x00000000c00191f4                ISO9660::~ISO9660()
                0x00000000c001921c                ISO9660::exists(char const*)
                0x00000000c0019230                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001930e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0019356                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019398                ISO9660::tell(void*, unsigned long long*)
                0x00000000c00193d6                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019428                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019560                ISO9660::close(void*)
                0x00000000c0019590                ISO9660::openDir(char const*, void**)
                0x00000000c0019662                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001977d                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c00197f8                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001986a                ISO9660::ISO9660()
                0x00000000c001986a                ISO9660::ISO9660()
 .text          0x00000000c001988e      0x264 hal/sound/sndcard.32
                0x00000000c001988e                SoundCard::beginPlayback()
                0x00000000c001989c                SoundCard::stopPlayback()
                0x00000000c00198aa                SoundCard::SoundCard(char const*)
                0x00000000c00198aa                SoundCard::SoundCard(char const*)
                0x00000000c0019948                SoundCard::~SoundCard()
                0x00000000c0019948                SoundCard::~SoundCard()
                0x00000000c0019968                SoundCard::~SoundCard()
                0x00000000c0019990                SoundCard::configureRates(int, int, int)
                0x00000000c00199c0                SoundCard::getSamples16(int, short*)
                0x00000000c0019a1c                SoundCard::getSamples32(int, int*)
                0x00000000c0019aa0                SoundCard::addChannel(SoundPort*)
                0x00000000c0019ade                SoundCard::removeChannel(int)
 *fill*         0x00000000c0019af2        0x2 
 .text          0x00000000c0019af4      0x35f hal/sound/sndport.32
                0x00000000c0019af4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019af4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019b7c                SoundPort::~SoundPort()
                0x00000000c0019b7c                SoundPort::~SoundPort()
                0x00000000c0019bac                SoundPort::unpause()
                0x00000000c0019bb8                SoundPort::pause()
                0x00000000c0019bc4                SoundPort::getBufferUsed()
                0x00000000c0019bcc                SoundPort::getBufferSize()
                0x00000000c0019bd4                SoundPort::buffer16(short*, int)
                0x00000000c0019c60                SoundPort::buffer32(int*, int)
                0x00000000c0019ce8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019da4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0019e53        0x0 hw/bus/isa.32
 *fill*         0x00000000c0019e53        0x1 
 .text          0x00000000c0019e54      0xb7d hw/bus/pci.32
                0x00000000c0019e54                PCI::open(int, int, void*)
                0x00000000c0019e72                PCI::close(int, int, void*)
                0x00000000c0019e76                PCI::PCI()
                0x00000000c0019e76                PCI::PCI()
                0x00000000c0019f10                PCI::readBAR8(unsigned int, int)
                0x00000000c0019f2c                PCI::readBAR16(unsigned int, int)
                0x00000000c0019f4c                PCI::readBAR32(unsigned int, int)
                0x00000000c0019f68                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0019f88                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0019faa                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0019fca                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a048                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a0f2                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a116                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a13e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a188                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a1b0                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a1d8                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a200                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a228                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a28a                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001a354                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a5fe                PCI::checkBus(unsigned char)
                0x00000000c001a622                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a79a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001a906                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001a978                PCI::detect()
 *fill*         0x00000000c001a9d1        0x1 
 .text          0x00000000c001a9d2      0xb44 hw/diskctrl/ide.32
                0x00000000c001a9d2                IDE::close(int, int, void*)
                0x00000000c001a9d6                IDE::IDE()
                0x00000000c001a9d6                IDE::IDE()
                0x00000000c001aa08                IDE::prepareInterrupt(unsigned char)
                0x00000000c001aa1a                selectDrive(unsigned char, unsigned char)
                0x00000000c001aa1c                IDE::getBase(unsigned char)
                0x00000000c001aa2e                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001aadc                IDE::read(unsigned char, unsigned char)
                0x00000000c001ab78                IDE::waitInterrupt(unsigned char)
                0x00000000c001abdd                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001abf9                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ac16                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ac5c                IDE::open(int, int, void*)
                0x00000000c001b074                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b12e                IDE::detect()
                0x00000000c001b3e8                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4ba                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b516      0x334 hw/diskctrl/satabus.32
                0x00000000c001b516                SATABus::close(int, int, void*)
                0x00000000c001b51a                SATABus::detect()
                0x00000000c001b51c                SATABus::SATABus()
                0x00000000c001b51c                SATABus::SATABus()
                0x00000000c001b5ac                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b5de                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b624                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b644                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b66e                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b780                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001b82a                SATABus::open(int, int, void*)
 .text          0x00000000c001b84a      0x958 hw/diskphys/ata.32
                0x00000000c001b84a                ATA::close(int, int, void*)
                0x00000000c001b86e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001b870                ATA::ATA()
                0x00000000c001b870                ATA::ATA()
                0x00000000c001b8a0                ATA::flush(bool)
                0x00000000c001b8ea                ATA::readyForCommand()
                0x00000000c001b936                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001bcd6                ATA::detectCHS()
                0x00000000c001bd00                ATA::open(int, int, void*)
                0x00000000c001bdcc                combineCharAndColour(char, unsigned char)
                0x00000000c001bddd                combineColours(unsigned char, unsigned char)
                0x00000000c001bdea                ATA::read(unsigned long long, int, void*)
                0x00000000c001bfc8                ATA::write(unsigned long long, int, void*)
 .text          0x00000000c001c1a2      0x60c hw/diskphys/atapi.32
                0x00000000c001c1a2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c1a8                ATAPI::close(int, int, void*)
                0x00000000c001c1cc                ATAPI::ATAPI()
                0x00000000c001c1cc                ATAPI::ATAPI()
                0x00000000c001c1fc                ATAPI::readyForCommand()
                0x00000000c001c24e                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c50e                ATAPI::diskRemoved()
                0x00000000c001c548                ATAPI::eject()
                0x00000000c001c590                ATAPI::diskInserted()
                0x00000000c001c59c                ATAPI::detectMedia()
                0x00000000c001c656                ATAPI::open(int, int, void*)
                0x00000000c001c736                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001c7ae      0x7fb hw/diskphys/sata.32
                0x00000000c001c7ae                SATA::close(int, int, void*)
                0x00000000c001c7d2                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001c7d4                SATA::open(int, int, void*)
                0x00000000c001c87e                SATA::SATA()
                0x00000000c001c87e                SATA::SATA()
                0x00000000c001c8ae                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001caf4                SATA::read(unsigned long long, int, void*)
                0x00000000c001cd46                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001cfa9        0x1 
 .text          0x00000000c001cfaa      0x5ce hw/diskphys/satapi.32
                0x00000000c001cfaa                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001cfb0                SATAPI::close(int, int, void*)
                0x00000000c001cfd4                SATAPI::SATAPI()
                0x00000000c001cfd4                SATAPI::SATAPI()
                0x00000000c001d004                SATAPI::diskRemoved()
                0x00000000c001d006                SATAPI::diskInserted()
                0x00000000c001d022                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001d2fe                SATAPI::eject()
                0x00000000c001d33a                SATAPI::detectMedia()
                0x00000000c001d390                SATAPI::open(int, int, void*)
                0x00000000c001d490                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d578      0x45c hw/intctrl/apic.32
                0x00000000c001d578                IOAPIC::close(int, int, void*)
                0x00000000c001d57e                apicGetBase()
                0x00000000c001d5c2                IOAPIC::IOAPIC()
                0x00000000c001d5c2                IOAPIC::IOAPIC()
                0x00000000c001d5e9                apicOpen()
                0x00000000c001d756                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d788                IOAPIC::read(int)
                0x00000000c001d7b0                IOAPIC::open(int, int, void*)
                0x00000000c001d89c                IOAPIC::write(int, int)
                0x00000000c001d8c8                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 .text          0x00000000c001d9d4       0xf3 hw/timer/apictimer.32
                0x00000000c001d9d4                APICTimer::close(int, int, void*)
                0x00000000c001d9dc                apicTimerHandler(regs*, void*)
                0x00000000c001da00                APICTimer::open(int, int, void*)
                0x00000000c001da7c                APICTimer::write(int)
                0x00000000c001daa0                APICTimer::APICTimer()
                0x00000000c001daa0                APICTimer::APICTimer()
 *fill*         0x00000000c001dac7        0x1 
 .text          0x00000000c001dac8      0x1c7 hw/timer/pit.32
                0x00000000c001dac8                PIT::write(int)
                0x00000000c001db4c                pitHandler(regs*, void*)
                0x00000000c001db6c                PIT::open(int, int, void*)
                0x00000000c001dbcc                PIT::close(int, int, void*)
                0x00000000c001dc0c                PIT::PIT()
                0x00000000c001dc0c                PIT::PIT()
 *fill*         0x00000000c001dc8f        0x1 
 .text          0x00000000c001dc90       0x83 arch/i386/avx.32
                0x00000000c001dc90                avxDetect
                0x00000000c001dcba                avxSave
                0x00000000c001dccb                avxLoad
                0x00000000c001dcdc                avxInit
                0x00000000c001dcfe                avxClose
                0x00000000c001dcff                wouldSheSayYes
 *fill*         0x00000000c001dd13        0xd 
 .text          0x00000000c001dd20      0x2ec arch/i386/interrupt.32
                0x00000000c001dd20                isr0
                0x00000000c001dd30                isr1
                0x00000000c001dd3a                isr2
                0x00000000c001dd44                isr3
                0x00000000c001dd4e                isr4
                0x00000000c001dd58                isr5
                0x00000000c001dd62                isr6
                0x00000000c001dd6c                isr7
                0x00000000c001dd76                isr8
                0x00000000c001dd7e                isr9
                0x00000000c001dd88                isr10
                0x00000000c001dd90                isr11
                0x00000000c001dd98                isr12
                0x00000000c001dda0                isr13
                0x00000000c001ddba                isr14
                0x00000000c001ddc2                isr15
                0x00000000c001ddcc                isr16
                0x00000000c001ddd6                isr17
                0x00000000c001dde0                isr18
                0x00000000c001ddea                irq3
                0x00000000c001ddf4                irq4
                0x00000000c001ddfe                irq5
                0x00000000c001de08                irq6
                0x00000000c001de12                irq7
                0x00000000c001de1c                irq8
                0x00000000c001de26                irq9
                0x00000000c001de30                irq10
                0x00000000c001de3a                irq11
                0x00000000c001de44                irq12
                0x00000000c001de4e                irq13
                0x00000000c001de58                irq14
                0x00000000c001de62                irq15
                0x00000000c001de6c                irq1
                0x00000000c001de73                irq2
                0x00000000c001de7a                isr96
                0x00000000c001de81                irq0
                0x00000000c001de86                int_common_stub
                0x00000000c001deb8                syscall_common_stub
                0x00000000c001dfbc                irq16
                0x00000000c001dfc6                irq17
                0x00000000c001dfd0                irq18
                0x00000000c001dfda                irq19
                0x00000000c001dfe4                irq20
                0x00000000c001dfee                irq21
                0x00000000c001dff8                irq22
                0x00000000c001e002                irq23
 *fill*         0x00000000c001e00c        0x4 
 .text          0x00000000c001e010       0x10 arch/i386/rdrand.32
                0x00000000c001e010                i386GetRDRAND
 .text          0x00000000c001e020       0x39 arch/i386/sse.32
                0x00000000c001e020                absolutelyNoChanceInHell
                0x00000000c001e020                sseDetect
                0x00000000c001e038                sseSave
                0x00000000c001e040                sseLoad
                0x00000000c001e048                sseInit
                0x00000000c001e058                sseClose
 *fill*         0x00000000c001e059        0x7 
 .text          0x00000000c001e060       0x49 arch/i386/x87.32
                0x00000000c001e066                x87Detect
                0x00000000c001e081                x87Save
                0x00000000c001e088                x87Load
                0x00000000c001e08f                x87Init
                0x00000000c001e0a8                x87Close
 *fill*         0x00000000c001e0a9        0x3 
 .text          0x00000000c001e0ac       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e0d1        0x0 crtn.32
 *fill*         0x00000000c001e0d1        0x3 
 .text          0x00000000c001e0d4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e0d4                __divdi3
 *fill*         0x00000000c001e21f        0x1 
 .text          0x00000000c001e220      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e220                __moddi3
 *fill*         0x00000000c001e39e        0x2 
 .text          0x00000000c001e3a0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001e3a0                __udivdi3
 *fill*         0x00000000c001e49f        0x1 
 .text          0x00000000c001e4a0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001e4a0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e5c0        0x0
 .iplt          0x00000000c001e5c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e5ba        0xf
 .init          0x00000000c001e5ba        0x3 crti.32
                0x00000000c001e5ba                _init
 .init          0x00000000c001e5bd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e5c2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e5c7        0x2 crtn.32

.fini           0x00000000c001e5c9        0xa
 .fini          0x00000000c001e5c9        0x3 crti.32
                0x00000000c001e5c9                _fini
 .fini          0x00000000c001e5cc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e5d1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e5d4       0x1f
 .text._ZN8ComputerD2Ev
                0x00000000c001e5d4       0x1f core/computer.32
                0x00000000c001e5d4                Computer::~Computer()
                0x00000000c001e5d4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e5f4       0x27
 .text._ZN8ComputerD0Ev
                0x00000000c001e5f4       0x27 core/computer.32
                0x00000000c001e5f4                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e61b       0x21
 .text._Z10idleCommonv
                0x00000000c001e61b       0x21 core/idle.32
                0x00000000c001e61b                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e63c        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e63c        0x2 core/unixfile.32
                0x00000000c001e63c                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e63c                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e63e       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e63e       0x42 core/unixfile.32
                0x00000000c001e63e                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e63e                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e680       0xc7
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e680       0xc7 core/unixfile.32
                0x00000000c001e680                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e748        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e748        0x7 core/unixfile.32
                0x00000000c001e748                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e750       0x95
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e750       0x95 core/unixfile.32
                0x00000000c001e750                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e7e6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e7e6        0x8 core/unixfile.32
                0x00000000c001e7e6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e7ee       0x1f
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e7ee       0x1f hal/device.32
                0x00000000c001e7ee                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e7ee                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e80e       0x27
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e80e       0x27 hal/device.32
                0x00000000c001e80e                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e836       0xd0
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e836       0xd0 hal/device.32
                0x00000000c001e836                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e906       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e906       0x42 hal/device.32
                0x00000000c001e906                LinkedList<Device>::LinkedList()
                0x00000000c001e906                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e948       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e948       0x1c hal/timer.32
                0x00000000c001e948                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e964        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e964        0x7 hal/timer.32
                0x00000000c001e964                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e96c       0xac
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e96c       0xac hal/timer.32
                0x00000000c001e96c                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ea18       0xce
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ea18       0xce hal/timer.32
                0x00000000c001ea18                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001eae8       0x1f
 .text._ZN4ACPID2Ev
                0x00000000c001eae8       0x1f hw/acpi.32
                0x00000000c001eae8                ACPI::~ACPI()
                0x00000000c001eae8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001eb08       0x27
 .text._ZN4ACPID0Ev
                0x00000000c001eb08       0x27 hw/acpi.32
                0x00000000c001eb08                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001eb30        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001eb30        0x2 hw/acpi.32
                0x00000000c001eb30                LinkedList<Device>::~LinkedList()
                0x00000000c001eb30                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001eb34       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001eb34       0x1c hw/acpi.32
                0x00000000c001eb34                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001eb50        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001eb50        0x7 hw/acpi.32
                0x00000000c001eb50                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001eb58       0xac
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001eb58       0xac hw/acpi.32
                0x00000000c001eb58                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ec04       0x1f
 .text._ZN3CPUD2Ev
                0x00000000c001ec04       0x1f hw/cpu.32
                0x00000000c001ec04                CPU::~CPU()
                0x00000000c001ec04                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ec24       0x27
 .text._ZN3CPUD0Ev
                0x00000000c001ec24       0x27 hw/cpu.32
                0x00000000c001ec24                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ec4c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ec4c        0x8 sys/kill.32
                0x00000000c001ec4c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ec54        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ec54        0x2 thr/prcssthr.32
                0x00000000c001ec54                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ec54                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ec58       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ec58       0x49 thr/prcssthr.32
                0x00000000c001ec58                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ec58                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001eca4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001eca4       0x42 thr/prcssthr.32
                0x00000000c001eca4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001eca4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001ece6       0x1f
 .text._ZN3PCID2Ev
                0x00000000c001ece6       0x1f hw/bus/pci.32
                0x00000000c001ece6                PCI::~PCI()
                0x00000000c001ece6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ed06       0x27
 .text._ZN3PCID0Ev
                0x00000000c001ed06       0x27 hw/bus/pci.32
                0x00000000c001ed06                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001ed2e       0x1f
 .text._ZN3IDED2Ev
                0x00000000c001ed2e       0x1f hw/diskctrl/ide.32
                0x00000000c001ed2e                IDE::~IDE()
                0x00000000c001ed2e                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001ed4e       0x27
 .text._ZN3IDED0Ev
                0x00000000c001ed4e       0x27 hw/diskctrl/ide.32
                0x00000000c001ed4e                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001ed76       0x1f
 .text._ZN7SATABusD2Ev
                0x00000000c001ed76       0x1f hw/diskctrl/satabus.32
                0x00000000c001ed76                SATABus::~SATABus()
                0x00000000c001ed76                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001ed96       0x27
 .text._ZN7SATABusD0Ev
                0x00000000c001ed96       0x27 hw/diskctrl/satabus.32
                0x00000000c001ed96                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001edbe       0x1f
 .text._ZN3ATAD2Ev
                0x00000000c001edbe       0x1f hw/diskphys/ata.32
                0x00000000c001edbe                ATA::~ATA()
                0x00000000c001edbe                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001edde       0x27
 .text._ZN3ATAD0Ev
                0x00000000c001edde       0x27 hw/diskphys/ata.32
                0x00000000c001edde                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001ee06       0x1f
 .text._ZN5ATAPID2Ev
                0x00000000c001ee06       0x1f hw/diskphys/atapi.32
                0x00000000c001ee06                ATAPI::~ATAPI()
                0x00000000c001ee06                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001ee26       0x27
 .text._ZN5ATAPID0Ev
                0x00000000c001ee26       0x27 hw/diskphys/atapi.32
                0x00000000c001ee26                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001ee4e       0x1f
 .text._ZN4SATAD2Ev
                0x00000000c001ee4e       0x1f hw/diskphys/sata.32
                0x00000000c001ee4e                SATA::~SATA()
                0x00000000c001ee4e                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001ee6e       0x27
 .text._ZN4SATAD0Ev
                0x00000000c001ee6e       0x27 hw/diskphys/sata.32
                0x00000000c001ee6e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001ee96       0x1f
 .text._ZN6SATAPID2Ev
                0x00000000c001ee96       0x1f hw/diskphys/satapi.32
                0x00000000c001ee96                SATAPI::~SATAPI()
                0x00000000c001ee96                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001eeb6       0x27
 .text._ZN6SATAPID0Ev
                0x00000000c001eeb6       0x27 hw/diskphys/satapi.32
                0x00000000c001eeb6                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001eede       0x1f
 .text._ZN6IOAPICD2Ev
                0x00000000c001eede       0x1f hw/intctrl/apic.32
                0x00000000c001eede                IOAPIC::~IOAPIC()
                0x00000000c001eede                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001eefe       0x27
 .text._ZN6IOAPICD0Ev
                0x00000000c001eefe       0x27 hw/intctrl/apic.32
                0x00000000c001eefe                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ef28       0x1f
 .text._ZN9APICTimerD2Ev
                0x00000000c001ef28       0x1f hw/timer/apictimer.32
                0x00000000c001ef28                APICTimer::~APICTimer()
                0x00000000c001ef28                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ef48       0x27
 .text._ZN9APICTimerD0Ev
                0x00000000c001ef48       0x27 hw/timer/apictimer.32
                0x00000000c001ef48                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ef70       0x1f
 .text._ZN3PITD2Ev
                0x00000000c001ef70       0x1f hw/timer/pit.32
                0x00000000c001ef70                PIT::~PIT()
                0x00000000c001ef70                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ef90       0x27
 .text._ZN3PITD0Ev
                0x00000000c001ef90       0x27 hw/timer/pit.32
                0x00000000c001ef90                PIT::~PIT()

.rodata         0x00000000c001efb7     0x2bb1
                0x00000000c001efb7                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001efb7        0x1 
 .ctors         0x00000000c001efb8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001efbc        0x4 core/unixfile.32
 .ctors         0x00000000c001efc0        0x4 thr/prcssthr.32
 .ctors         0x00000000c001efc4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001efc8                end_ctors = .
                0x00000000c001efc8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001efc8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001efcc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001efcc                __DTOR_END__
                0x00000000c001efd0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001efd0       0x10 
 .rodata        0x00000000c001efe0      0x101 acpica/utclib.32
                0x00000000c001efe0                AcpiGbl_Ctypes
 *fill*         0x00000000c001f0e1        0x3 
 .rodata        0x00000000c001f0e4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f0fc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f146       0x1a 
 .rodata        0x00000000c001f160       0xed fs/fat/ff.32
 *fill*         0x00000000c001f24d       0x13 
 .rodata        0x00000000c001f260      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f660       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f6cf      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001f7e4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001f84c       0x2c core/computer.32
                0x00000000c001f84c                vtable for Computer
 .rodata.str1.4
                0x00000000c001f878       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001f8a8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001f8b4       0x17 core/main.32
 *fill*         0x00000000c001f8cb        0x1 
 .rodata.str1.4
                0x00000000c001f8cc       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001f971       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001f9c9       0x39 core/pipe.32
 *fill*         0x00000000c001fa02        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001fa04       0x1c core/pipe.32
                0x00000000c001fa04                vtable for Pipe
 .rodata.str1.1
                0x00000000c001fa20       0x2b core/terminal.32
 *fill*         0x00000000c001fa4b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001fa4c       0x1c core/terminal.32
                0x00000000c001fa4c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001fa68       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001fa8a       0x15 core/unixfile.32
 *fill*         0x00000000c001fa9f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001faa0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001faeb        0x8 core/unixfile.32
 *fill*         0x00000000c001faf3        0x1 
 .rodata.str1.4
                0x00000000c001faf4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001fb14       0x1c core/unixfile.32
                0x00000000c001fb14                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001fb30       0x1c core/unixfile.32
                0x00000000c001fb30                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001fb4c      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001fcb3      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001fdba       0x33 coreobjs/c++.32
 *fill*         0x00000000c001fded        0x3 
 .rodata        0x00000000c001fdf0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001ff40       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001ff40       0x68 fs/vfs.32
                0x00000000c001ff40                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001ffa8       0x1c fs/vfs.32
                0x00000000c001ffa8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001ffc4       0x1c fs/vfs.32
                0x00000000c001ffc4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001ffe0       0x2c hal/bus.32
                0x00000000c001ffe0                vtable for Bus
 .rodata.str1.1
                0x00000000c002000c       0x1e hal/clock.32
 *fill*         0x00000000c002002a        0x2 
 .rodata._ZTV5Clock
                0x00000000c002002c       0x3c hal/clock.32
                0x00000000c002002c                vtable for Clock
 *fill*         0x00000000c0020068       0x18 
 .rodata        0x00000000c0020080       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00200b0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020108       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020108       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020108       0x2c hal/device.32
                0x00000000c0020108                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020134       0x2c hal/device.32
                0x00000000c0020134                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020160       0x2c hal/diskctrl.32
                0x00000000c0020160                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002018c       0x38 hal/diskphys.32
                0x00000000c002018c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00201c4       0x3e hal/intctrl.32
 *fill*         0x00000000c0020202        0x2 
 .rodata.str1.4
                0x00000000c0020204       0x5d hal/intctrl.32
 .rodata        0x00000000c0020261       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c00202b4       0x34 hal/keybrd.32
                0x00000000c00202b4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00202e8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002032c       0x2c hal/logidisk.32
                0x00000000c002032c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0020358       0x2c hal/mouse.32
                0x00000000c0020358                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0020384       0x34 hal/nic.32
                0x00000000c0020384                vtable for NIC
 .rodata.str1.1
                0x00000000c00203b8        0xb hal/partition.32
 *fill*         0x00000000c00203c3        0x1 
 .rodata._ZTV6Serial
                0x00000000c00203c4       0x44 hal/serial.32
                0x00000000c00203c4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020408       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020408        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020408       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020408       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0020408       0x30 hal/timer.32
                0x00000000c0020408                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020438       0x10 hal/vcache.32
                0x00000000c0020438                vtable for VCache
 .rodata.str1.1
                0x00000000c0020448       0x93 hal/video.32
 *fill*         0x00000000c00204db        0x1 
 .rodata._ZTV5Video
                0x00000000c00204dc       0x4c hal/video.32
                0x00000000c00204dc                vtable for Video
 .rodata.str1.4
                0x00000000c0020528       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c00205c3      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00206ff       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00206ff        0x8 hw/acpi.32
 *fill*         0x00000000c00206ff        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020700       0x2c hw/acpi.32
                0x00000000c0020700                vtable for ACPI
 .rodata.str1.1
                0x00000000c002072c      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020899        0x3 
 .rodata._ZTV3CPU
                0x00000000c002089c       0x2c hw/cpu.32
                0x00000000c002089c                vtable for CPU
 .rodata.str1.1
                0x00000000c00208c8       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020904       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020995       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0020a5e       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020aa6       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0020ad1       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020b47       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020b8c        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020b96       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0020bb7       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0020c4d       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0020ca1       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0020ccd      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0020e99       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0020ef0      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020ffc       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020ffc       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020ffc       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020ffc        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0020ffc       0xa0 vm86/vm8086.32
 .rodata        0x00000000c002109c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00210cc      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c002125c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c00212cf       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00212e4       0x3c arch/i386/rtc.32
                0x00000000c00212e4                vtable for RTC
 .rodata.str1.1
                0x00000000c0021320       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0021361        0x3 
 .rodata._ZTV3FAT
                0x00000000c0021364       0x68 fs/fat/vfslink.32
                0x00000000c0021364                vtable for FAT
 .rodata.str1.1
                0x00000000c00213cc       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00213cc      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0021504       0x68 fs/iso9660/vfslink.32
                0x00000000c0021504                vtable for ISO9660
 .rodata.str1.1
                0x00000000c002156c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00215b0       0x34 hal/sound/sndcard.32
                0x00000000c00215b0                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00215e4       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0021623       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002165b       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00216fc       0x2c hw/bus/pci.32
                0x00000000c00216fc                vtable for PCI
 .rodata.str1.1
                0x00000000c0021728       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c00217af        0x1 
 .rodata._ZTV3IDE
                0x00000000c00217b0       0x2c hw/diskctrl/ide.32
                0x00000000c00217b0                vtable for IDE
 .rodata.str1.4
                0x00000000c00217dc       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0021800       0x2c hw/diskctrl/satabus.32
                0x00000000c0021800                vtable for SATABus
 .rodata.str1.1
                0x00000000c002182c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c002183e        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021840       0x38 hw/diskphys/ata.32
                0x00000000c0021840                vtable for ATA
 .rodata.str1.1
                0x00000000c0021878        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0021885        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0021888       0x38 hw/diskphys/atapi.32
                0x00000000c0021888                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00218c0       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c002193c       0x38 hw/diskphys/sata.32
                0x00000000c002193c                vtable for SATA
 .rodata.str1.1
                0x00000000c0021974       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0021a5e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021a60       0x38 hw/diskphys/satapi.32
                0x00000000c0021a60                vtable for SATAPI
 .rodata        0x00000000c0021a98        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021aa0       0x2c hw/intctrl/apic.32
                0x00000000c0021aa0                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0021acc       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0021ae7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021ae8       0x30 hw/timer/apictimer.32
                0x00000000c0021ae8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021b18       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021b35        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021b38       0x30 hw/timer/pit.32
                0x00000000c0021b38                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021b68      0x4dd
 *(.data)
 .data          0x00000000c0021b68        0x0 crti.32
 .data          0x00000000c0021b68        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021b68                __dso_handle
 .data          0x00000000c0021b6c        0x0 acpica/utclib.32
 .data          0x00000000c0021b6c        0x0 core/malloc.32
 .data          0x00000000c0021b6c        0x0 libk/ctype.32
 .data          0x00000000c0021b6c        0x0 libk/string.32
 .data          0x00000000c0021b6c        0x0 fs/fat/diskio.32
 .data          0x00000000c0021b6c        0x0 fs/fat/ff.32
 .data          0x00000000c0021b6c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021b6c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021b6c        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0021b6c        0x0 core/computer.32
 .data          0x00000000c0021b6c        0x0 core/gdt.32
 .data          0x00000000c0021b6c        0x0 core/idle.32
 .data          0x00000000c0021b6c        0x0 core/idt.32
 .data          0x00000000c0021b6c        0x4 core/kheap.32
 .data          0x00000000c0021b70        0x0 core/main.32
 .data          0x00000000c0021b70        0x4 core/physmgr.32
                0x00000000c0021b70                Phys::bitmap
 .data          0x00000000c0021b74        0x0 core/pipe.32
 *fill*         0x00000000c0021b74        0xc 
 .data          0x00000000c0021b80       0x60 core/terminal.32
                0x00000000c0021b80                VgaText::hiddenOut
                0x00000000c0021ba0                ansiToVGAMappings
 .data          0x00000000c0021be0        0x0 core/tss.32
 .data          0x00000000c0021be0        0x4 core/unixfile.32
                0x00000000c0021be0                UnixFile::nextFd
 .data          0x00000000c0021be4       0x15 core/virtmgr.32
                0x00000000c0021be4                Virt::pageAllocPtr
                0x00000000c0021be8                Virt::bitmap
                0x00000000c0021bec                Virt::swapfileSectorsPerPage
                0x00000000c0021bf0                Virt::swapfileLength
                0x00000000c0021bf4                Virt::swapfileSector
                0x00000000c0021bf8                Virt::swapfileDrive
 *fill*         0x00000000c0021bf9        0x3 
 .data          0x00000000c0021bfc        0x4 coreobjs/c++.32
                0x00000000c0021bfc                __stack_chk_guard
 .data          0x00000000c0021c00        0x0 dbg/kconsole.32
 .data          0x00000000c0021c00        0x0 fs/vfs.32
 .data          0x00000000c0021c00        0x0 hal/bus.32
 .data          0x00000000c0021c00        0x0 hal/buzzer.32
 .data          0x00000000c0021c00        0x0 hal/clock.32
 .data          0x00000000c0021c00        0x0 hal/device.32
 .data          0x00000000c0021c00        0x0 hal/diskctrl.32
 .data          0x00000000c0021c00        0x0 hal/diskphys.32
 .data          0x00000000c0021c00        0x0 hal/fpu.32
 .data          0x00000000c0021c00        0x0 hal/intctrl.32
 .data          0x00000000c0021c00        0x0 hal/keybrd.32
 .data          0x00000000c0021c00        0x0 hal/logidisk.32
 .data          0x00000000c0021c00        0x0 hal/mouse.32
 .data          0x00000000c0021c00        0x0 hal/nic.32
 .data          0x00000000c0021c00        0x0 hal/partition.32
 .data          0x00000000c0021c00        0x0 hal/serial.32
 .data          0x00000000c0021c00        0x0 hal/timer.32
 .data          0x00000000c0021c00        0x0 hal/vcache.32
 .data          0x00000000c0021c00        0x0 hal/video.32
 .data          0x00000000c0021c00       0x10 hw/acpi.32
                0x00000000c0021c00                legacyIRQRemaps
 .data          0x00000000c0021c10        0x4 hw/cpu.32
                0x00000000c0021c10                lastCode
 *fill*         0x00000000c0021c14        0xc 
 .data          0x00000000c0021c20      0x142 krnl/bootmsg.32
                0x00000000c0021c20                KiSplashScreen
 *fill*         0x00000000c0021d62       0x1e 
 .data          0x00000000c0021d80       0x4d krnl/env.32
                0x00000000c0021d80                defaultSysEnv
 .data          0x00000000c0021dcd        0x0 krnl/inlines.32
 .data          0x00000000c0021dcd        0x0 krnl/panic.32
 .data          0x00000000c0021dcd        0x0 krnl/powctrl.32
 .data          0x00000000c0021dcd        0x0 krnl/random.32
 .data          0x00000000c0021dcd        0x0 krnl/resolve.32
 *fill*         0x00000000c0021dcd       0x13 
 .data          0x00000000c0021de0       0x4c krnl/signal.32
                0x00000000c0021de0                KiDefaultSignalHandlers
 *fill*         0x00000000c0021e2c       0x14 
 .data          0x00000000c0021e40       0xf0 krnl/syscalls.32
                0x00000000c0021e40                systemCallHandlers
 .data          0x00000000c0021f30        0x0 net/ethernet.32
 *fill*         0x00000000c0021f30       0x10 
 .data          0x00000000c0021f40      0x100 reg/cm.32
                0x00000000c0021f40                CmComponents
 .data          0x00000000c0022040        0x0 reg/registry.32
 .data          0x00000000c0022040        0x0 sys/eject.32
 .data          0x00000000c0022040        0x0 sys/exit.32
 .data          0x00000000c0022040        0x0 sys/getcwd.32
 .data          0x00000000c0022040        0x0 sys/getpid.32
 .data          0x00000000c0022040        0x0 sys/getramdata.32
 .data          0x00000000c0022040        0x0 sys/getvgaptr.32
 .data          0x00000000c0022040        0x0 sys/kill.32
 .data          0x00000000c0022040        0x0 sys/loaddll.32
 .data          0x00000000c0022040        0x0 sys/read.32
 .data          0x00000000c0022040        0x0 sys/registersignal.32
 .data          0x00000000c0022040        0x0 sys/registry.32
 .data          0x00000000c0022040        0x0 sys/sbrk.32
 .data          0x00000000c0022040        0x0 sys/setcwd.32
 .data          0x00000000c0022040        0x0 sys/settime.32
 .data          0x00000000c0022040        0x0 sys/timezone.32
 .data          0x00000000c0022040        0x0 sys/write.32
 .data          0x00000000c0022040        0x0 sys/wsbe.32
 .data          0x00000000c0022040        0x0 sys/yield.32
 .data          0x00000000c0022040        0x0 thr/elf.32
 .data          0x00000000c0022040        0x4 thr/prcssthr.32
                0x00000000c0022040                Thr::nextPID
 .data          0x00000000c0022044        0x0 vm86/vm8086.32
 .data          0x00000000c0022044        0x0 arch/i386/hal.32
 .data          0x00000000c0022044        0x0 arch/i386/pic.32
 .data          0x00000000c0022044        0x0 arch/i386/rtc.32
 .data          0x00000000c0022044        0x0 arch/i386/vga.32
 .data          0x00000000c0022044        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022044        0x0 fs/iso9660/helper.32
 .data          0x00000000c0022044        0x1 fs/iso9660/vfslink.32
                0x00000000c0022044                recentDriveletter
 .data          0x00000000c0022045        0x0 hal/sound/sndcard.32
 .data          0x00000000c0022045        0x0 hal/sound/sndport.32
 .data          0x00000000c0022045        0x0 hw/bus/isa.32
 .data          0x00000000c0022045        0x0 hw/bus/pci.32
 .data          0x00000000c0022045        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022045        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0022045        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022045        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022045        0x0 hw/diskphys/sata.32
 .data          0x00000000c0022045        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0022045        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022045        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022045        0x0 hw/timer/pit.32
 .data          0x00000000c0022045        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022045        0x0 crtn.32
 .data          0x00000000c0022045        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0022045        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0022045        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0022045        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0022048        0x0
 .got           0x00000000c0022048        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0022048        0x0
 .got.plt       0x00000000c0022048        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0022048        0x0
 .igot.plt      0x00000000c0022048        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0022048        0x0
 .tm_clone_table
                0x00000000c0022048        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0022048        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022045      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0022045        0x3 
 .eh_frame      0x00000000c0022048        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0022048        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0022048       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00220a0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00220e0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002214c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0023000       0x7d
 *(userkernel)
 userkernel     0x00000000c0023000       0x52 krnl/signal.32
                0x00000000c0023000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002302c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0023052       0x2b krnl/syscalls.32
                0x00000000c0023052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0024000        0x1
 *(align_previous)
 align_previous
                0x00000000c0024000        0x1 krnl/signal.32
                0x00000000c0024000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0024004        0x0
 .rel.got       0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0024001     0x4ba7
                0x00000000c0024001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0024001       0x1f 
 COMMON         0x00000000c0024020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0024020                dcache
                0x00000000c0024060                cdDriveLetter
                0x00000000c0024080                icache
 *(.bss)
 .bss           0x00000000c00240c0        0x0 crti.32
 .bss           0x00000000c00240c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00240e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00240e4       0x1c 
 .bss           0x00000000c0024100      0x378 core/malloc.32
 .bss           0x00000000c0024478        0x0 libk/ctype.32
 .bss           0x00000000c0024478        0x0 libk/string.32
 .bss           0x00000000c0024478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480       0x88 fs/fat/ff.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0024508       0x18 
 .bss           0x00000000c0024520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0024eb8        0x6 core/computer.32
                0x00000000c0024eb8                Krnl::computer
                0x00000000c0024ebc                KeIsPreemptionOn
                0x00000000c0024ebd                KeIsSchedulingOn
 *fill*         0x00000000c0024ebe        0x2 
 .bss           0x00000000c0024ec0        0x6 core/gdt.32
                0x00000000c0024ec0                gdtDescr
 .bss           0x00000000c0024ec6        0x0 core/idle.32
 *fill*         0x00000000c0024ec6        0x2 
 .bss           0x00000000c0024ec8        0x6 core/idt.32
                0x00000000c0024ec8                idtDescr
 .bss           0x00000000c0024ece        0x0 core/kheap.32
 *fill*         0x00000000c0024ece        0x2 
 .bss           0x00000000c0024ed0        0x4 core/main.32
                0x00000000c0024ed0                sysBootSettings
 .bss           0x00000000c0024ed4       0x29 core/physmgr.32
                0x00000000c0024ed4                Phys::forbidEvictions
                0x00000000c0024ed8                Phys::currentPagePointer
                0x00000000c0024edc                Phys::highestMem
                0x00000000c0024ee0                Phys::oldPercent
                0x00000000c0024ee4                Phys::usedPages
                0x00000000c0024ee8                Phys::usablePages
                0x00000000c0024eec                Phys::dmaUsage
 .bss           0x00000000c0024efd        0x0 core/pipe.32
 *fill*         0x00000000c0024efd        0x3 
 .bss           0x00000000c0024f00        0x9 core/terminal.32
                0x00000000c0024f00                terminalCycle
                0x00000000c0024f04                activeTerminal
                0x00000000c0024f08                VgaText::graphicMode
 *fill*         0x00000000c0024f09        0x1 
 .bss           0x00000000c0024f0a        0x2 core/tss.32
                0x00000000c0024f0a                doubleFaultSelector
 *fill*         0x00000000c0024f0c       0x14 
 .bss           0x00000000c0024f20       0x84 core/unixfile.32
                0x00000000c0024f20                sfileLpt
                0x00000000c0024f60                sfileCom
                0x00000000c0024f84                sfileNul
                0x00000000c0024f88                sfilePnt
                0x00000000c0024f8c                sfileAux
                0x00000000c0024f90                sfileCon
                0x00000000c0024f94                initialFilesAdded
                0x00000000c0024f98                unixFileLinkedList
 .bss           0x00000000c0024fa4       0x10 core/virtmgr.32
                0x00000000c0024fa4                twswaps
                0x00000000c0024fa8                swapBalance
                0x00000000c0024fac                Virt::swapfileBitmap
                0x00000000c0024fb0                firstVAS
 .bss           0x00000000c0024fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0024fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0024fb4        0x4 fs/vfs.32
                0x00000000c0024fb4                installedFilesystems
 .bss           0x00000000c0024fb8        0x0 hal/bus.32
 .bss           0x00000000c0024fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0024fb8        0x8 hal/clock.32
                0x00000000c0024fb8                User::dstOn
                0x00000000c0024fb9                User::timezoneHalfHourOffset
                0x00000000c0024fbc                User::timezoneHourOffset
 .bss           0x00000000c0024fc0        0x0 hal/device.32
 .bss           0x00000000c0024fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0024fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0024fc0        0x0 hal/fpu.32
 .bss           0x00000000c0024fc0     0x2000 hal/intctrl.32
                0x00000000c0024fc0                INT_contexts
                0x00000000c0025fc0                INT_handlers
 .bss           0x00000000c0026fc0      0x429 hal/keybrd.32
                0x00000000c0026fc0                keyboardWaitingTaskList
                0x00000000c0026fc4                keyboardSetupYet
                0x00000000c0026fc8                guiKeyboardHandler
                0x00000000c0026fe0                keystates
 *fill*         0x00000000c00273e9       0x17 
 .bss           0x00000000c0027400       0x88 hal/logidisk.32
                0x00000000c0027400                diskAssignments
                0x00000000c0027420                disks
 .bss           0x00000000c0027488        0x4 hal/mouse.32
                0x00000000c0027488                guiMouseHandler
 .bss           0x00000000c002748c        0x0 hal/nic.32
 .bss           0x00000000c002748c        0x0 hal/partition.32
 .bss           0x00000000c002748c        0x0 hal/serial.32
 .bss           0x00000000c002748c        0x4 hal/timer.32
                0x00000000c002748c                milliTenthsSinceBoot
 .bss           0x00000000c0027490        0x0 hal/vcache.32
 .bss           0x00000000c0027490        0x4 hal/video.32
                0x00000000c0027490                screen
 *fill*         0x00000000c0027494        0xc 
 .bss           0x00000000c00274a0      0x480 hw/acpi.32
                0x00000000c00274a0                systemSleepFunction
                0x00000000c00274a4                systemResetFunction
                0x00000000c00274a8                systemShutdownFunction
                0x00000000c00274ac                nextACPITable
                0x00000000c00274c0                acpiTables
                0x00000000c00276c0                usingXSDT
                0x00000000c00276c4                MADTpointer
                0x00000000c00276c8                RSDTpointer
                0x00000000c00276cc                RSDPpointer
                0x00000000c00276d0                nextAPICNMI
                0x00000000c00276e0                apicNMIInfo
                0x00000000c0027760                legacyIRQFlags
                0x00000000c0027780                ioapicDiscoveryNumber
                0x00000000c00277a0                ioapicFoundInMADT
                0x00000000c00277c0                ioapicAddresses
                0x00000000c0027840                ioapicGSIBase
                0x00000000c00278c0                processorDiscoveryNumber
                0x00000000c00278e0                matchingAPICID
                0x00000000c0027900                processorID
 .bss           0x00000000c0027920       0x10 hw/cpu.32
                0x00000000c0027920                lastD
                0x00000000c0027924                lastC
                0x00000000c0027928                lastB
                0x00000000c002792c                lastA
 .bss           0x00000000c0027930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0027930        0x8 krnl/env.32
                0x00000000c0027930                Krnl::userEnv
                0x00000000c0027934                Krnl::systemEnv
 .bss           0x00000000c0027938        0x0 krnl/inlines.32
 .bss           0x00000000c0027938        0x1 krnl/panic.32
                0x00000000c0027938                KeIsKernelInPanic
 *fill*         0x00000000c0027939        0x7 
 .bss           0x00000000c0027940       0x48 krnl/powctrl.32
                0x00000000c0027940                Krnl::powCtrlOnBattery
                0x00000000c0027960                Krnl::currentPowerSettings
                0x00000000c0027984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0027988        0x8 krnl/random.32
                0x00000000c0027988                kiRandSeed
 .bss           0x00000000c0027990        0x0 krnl/resolve.32
 .bss           0x00000000c0027990        0x0 krnl/signal.32
 .bss           0x00000000c0027990        0x0 krnl/syscalls.32
 .bss           0x00000000c0027990        0x0 net/ethernet.32
 .bss           0x00000000c0027990        0x4 reg/cm.32
 .bss           0x00000000c0027994        0x0 reg/registry.32
 .bss           0x00000000c0027994        0x0 sys/eject.32
 .bss           0x00000000c0027994        0x0 sys/exit.32
 .bss           0x00000000c0027994        0x0 sys/getcwd.32
 .bss           0x00000000c0027994        0x0 sys/getpid.32
 .bss           0x00000000c0027994        0x0 sys/getramdata.32
 .bss           0x00000000c0027994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0027994        0x0 sys/kill.32
 .bss           0x00000000c0027994        0x0 sys/loaddll.32
 .bss           0x00000000c0027994        0x0 sys/read.32
 .bss           0x00000000c0027994        0x0 sys/registersignal.32
 .bss           0x00000000c0027994        0x0 sys/registry.32
 .bss           0x00000000c0027994        0x0 sys/sbrk.32
 .bss           0x00000000c0027994        0x0 sys/setcwd.32
 .bss           0x00000000c0027994        0x0 sys/settime.32
 .bss           0x00000000c0027994        0x0 sys/timezone.32
 .bss           0x00000000c0027994        0x0 sys/write.32
 .bss           0x00000000c0027994        0x0 sys/wsbe.32
 .bss           0x00000000c0027994        0x0 sys/yield.32
 *fill*         0x00000000c0027994        0xc 
 .bss           0x00000000c00279a0      0x7a4 thr/elf.32
                0x00000000c00279a0                Thr::driverLookupNext
                0x00000000c00279c0                Thr::driverLookupLen
                0x00000000c0027bc0                Thr::driverLookupAddr
                0x00000000c0027dc0                Thr::driverNameLookup
                0x00000000c0027fc0                Thr::kernelSymbols
                0x00000000c0028040                Thr::kernelStringTable
                0x00000000c00280c0                Thr::kernelSymbolTable
                0x00000000c0028140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028144        0x4 
 .bss           0x00000000c0028148       0x68 thr/prcssthr.32
                0x00000000c0028148                cleanerThread
                0x00000000c002814c                weNeedTheCleanerToNotBlock
                0x00000000c0028150                retValLockStuff
                0x00000000c0028154                retValSchedLock
                0x00000000c0028158                lockStuffLock
                0x00000000c002815c                schedulerLock
                0x00000000c0028160                taskSwitchesPostponedFlag
                0x00000000c0028164                postponeTaskSwitchesCounter
                0x00000000c0028168                irqDisableCounter
                0x00000000c002816c                terminatedTaskList
                0x00000000c0028178                sleepingTaskList
                0x00000000c0028184                taskList
                0x00000000c0028190                kernelProcess
 *fill*         0x00000000c00281b0       0x10 
 .bss           0x00000000c00281c0       0x40 vm86/vm8086.32
                0x00000000c00281c0                Vm::vmRetV
                0x00000000c00281c4                Vm::vmDone
                0x00000000c00281c5                Vm::vmReady
                0x00000000c00281c8                Vm::vm86Thread
                0x00000000c00281cc                Vm::vmToHostCommsPtr
                0x00000000c00281e0                Vm::vmToHostComms
 .bss           0x00000000c0028200       0x14 arch/i386/hal.32
                0x00000000c0028200                apic
                0x00000000c0028204                fpuOwner
                0x00000000c0028208                coproLoadFunc
                0x00000000c002820c                coproSaveFunc
                0x00000000c0028210                gpFaultIntercept
 .bss           0x00000000c0028214        0x0 arch/i386/pic.32
 .bss           0x00000000c0028214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0028216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0028216        0xa 
 .bss           0x00000000c0028220       0xf0 fs/fat/vfslink.32
                0x00000000c0028220                FAT::fats
                0x00000000c0028240                FAT::vfsToFatRemaps
                0x00000000c00282c0                fatToVFSRemaps
 .bss           0x00000000c0028310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0028310       0x10 
 .bss           0x00000000c0028320      0x820 fs/iso9660/vfslink.32
                0x00000000c0028320                iso9660Owner
                0x00000000c0028324                recentSector
                0x00000000c0028340                recentBuffer
 .bss           0x00000000c0028b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0028b40        0xd hw/bus/pci.32
                0x00000000c0028b40                thePCI
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0028b4d        0x3 
 .bss           0x00000000c0028b50        0x8 hw/diskphys/ata.32
                0x00000000c0028b50                ataSectorsWritten
                0x00000000c0028b54                ataSectorsRead
 .bss           0x00000000c0028b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0028b58        0x8 
 .bss           0x00000000c0028b60       0x41 hw/intctrl/apic.32
                0x00000000c0028b60                noOfIOAPICs
                0x00000000c0028b80                ioapics
                0x00000000c0028ba0                IOAPICsSetupYet
 .bss           0x00000000c0028ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0028ba1        0x3 
 .bss           0x00000000c0028ba4        0x4 hw/timer/pit.32
                0x00000000c0028ba4                pitFreq
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0028ba8        0x0 crtn.32
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0028ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
