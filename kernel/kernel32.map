Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c33a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002ff                asmQuickAcquireLock
                0x00000000c000031d                asmQuickReleaseLock
                0x00000000c0000329                asmAcquireLock
                0x00000000c000034a                asmReleaseLock
                0x00000000c000035d                loadGDT
                0x00000000c000037d                memcpy
 *fill*         0x00000000c0000382        0xe 
 .text          0x00000000c0000390      0x79e acpica/utclib.32
                0x00000000c0000390                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004d0                memset
                0x00000000c0000540                strlen
                0x00000000c0000570                strpbrk
                0x00000000c00005b0                strtok
                0x00000000c0000600                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b2e      0xfad core/malloc.32
                0x00000000c0000c99                dlfree
                0x00000000c0000ff4                dlmalloc
                0x00000000c0001531                dlrealloc
                0x00000000c00016d4                dlmemalign
                0x00000000c00017f7                dlcalloc
                0x00000000c0001891                dlcfree
                0x00000000c0001896                dlindependent_calloc
                0x00000000c00018bb                dlindependent_comalloc
                0x00000000c00018d2                dlvalloc
                0x00000000c00018fd                dlpvalloc
                0x00000000c0001933                dlmalloc_trim
                0x00000000c0001940                dlmalloc_usable_size
                0x00000000c0001971                dlmallinfo
                0x00000000c0001a40                dlmalloc_stats
                0x00000000c0001a51                dlmallopt
 *fill*         0x00000000c0001adb        0x1 
 .text          0x00000000c0001adc      0x1f2 libk/ctype.32
                0x00000000c0001adc                isblank
                0x00000000c0001afc                iscntrl
                0x00000000c0001b1c                isdigit
                0x00000000c0001b38                islower
                0x00000000c0001b54                isspace
                0x00000000c0001b7c                isupper
                0x00000000c0001b98                isalpha
                0x00000000c0001bc8                isalnum
                0x00000000c0001bf8                ispunct
                0x00000000c0001c38                isgraph
                0x00000000c0001c68                isprint
                0x00000000c0001c90                isxdigit
 .text          0x00000000c0001cce        0x0 libk/string.32
 .text          0x00000000c0001cce       0x51 fs/fat/diskio.32
                0x00000000c0001cce                disk_status
                0x00000000c0001cd1                disk_initialize
                0x00000000c0001cd4                disk_read
                0x00000000c0001cea                disk_write
                0x00000000c0001d00                disk_ioctl
 .text          0x00000000c0001d1f     0x3d4b fs/fat/ff.32
                0x00000000c0003abb                f_mount
                0x00000000c0003b1d                f_open
                0x00000000c0003de8                f_read
                0x00000000c0003fe7                f_write
                0x00000000c000421b                f_sync
                0x00000000c00042d0                f_close
                0x00000000c00042ff                f_lseek
                0x00000000c00044a6                f_opendir
                0x00000000c0004571                f_closedir
                0x00000000c0004593                f_readdir
                0x00000000c0004625                f_stat
                0x00000000c00046a4                f_getfree
                0x00000000c00047a6                f_truncate
                0x00000000c000488a                f_unlink
                0x00000000c00049ac                f_mkdir
                0x00000000c0004b47                f_rename
                0x00000000c0004cfd                f_chmod
                0x00000000c0004da6                f_utime
                0x00000000c0004e54                f_getlabel
                0x00000000c0004fa5                f_setlabel
                0x00000000c0005135                f_expand
                0x00000000c0005295                f_mkfs
 *fill*         0x00000000c0005a6a        0x2 
 .text          0x00000000c0005a6c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a6c                ff_memalloc
                0x00000000c0005a84                ff_memfree
 *fill*         0x00000000c0005a9b        0x1 
 .text          0x00000000c0005a9c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a9c                ff_uni2oem
                0x00000000c0005b3c                ff_oem2uni
                0x00000000c0005bb4                ff_wtoupper
 .text          0x00000000c0005d44      0xc76 fs/iso9660/iso9660.32
                0x00000000c0005f63                isoReadDiscSector
                0x00000000c0005ffe                strnicmp
                0x00000000c00062b1                stricmp
                0x00000000c00062fd                iso_open
                0x00000000c0006387                iso_close
                0x00000000c00063a5                iso_read
                0x00000000c00064bb                iso_seek
                0x00000000c000653f                iso_tell
                0x00000000c0006570                iso_total
                0x00000000c000659b                fn_postprocess
                0x00000000c00065c1                iso_readdir
                0x00000000c00067b2                iso_reset
                0x00000000c00067bf                init_percd
                0x00000000c00068b9                iso_ioctl
                0x00000000c00068c1                fs_iso9660_init
                0x00000000c000694a                fs_iso9660_shutdown
 .text          0x00000000c00069ba      0x685 core/computer.32
                0x00000000c00069ba                Computer::close(int, int, void*)
                0x00000000c00069ff                Krnl::firstTask()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006be4                Computer::setBootMessage(char const*)
                0x00000000c0006be6                Computer::detectFeatures()
                0x00000000c0006df0                Computer::displayFeatures()
                0x00000000c0006df2                Computer::rdmsr(unsigned int)
                0x00000000c0006e1e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006e56                Computer::shutdown()
                0x00000000c0006e6e                Computer::restart()
                0x00000000c0006e86                Computer::sleep()
                0x00000000c0006e9a                Computer::nmiEnabled()
                0x00000000c0006ea6                Computer::readCMOS(unsigned char)
                0x00000000c0006ec0                Computer::enableNMI(bool)
                0x00000000c0006ed8                Computer::open(int, int, void*)
                0x00000000c0006fac                Computer::disableNMI()
                0x00000000c0006fbc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006fda                Computer::handleNMI()
 *fill*         0x00000000c000703f        0x1 
 .text          0x00000000c0007040      0x1cf core/gdt.32
                0x00000000c0007040                GDTEntry::setBase(unsigned int)
                0x00000000c000705c                GDTEntry::setLimit(unsigned int)
                0x00000000c000707a                GDT::GDT()
                0x00000000c000707a                GDT::GDT()
                0x00000000c0007090                GDT::addEntry(GDTEntry)
                0x00000000c00070b2                GDT::getNumberOfEntries()
                0x00000000c00070ba                GDT::flush()
                0x00000000c00070dc                GDT::setup()
 .text          0x00000000c000720f       0x1d core/idle.32
                0x00000000c000720f                idleFunction(void*)
 .text          0x00000000c000722c      0x464 core/idt.32
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000729e                IDTEntry::setOffset(unsigned int)
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00072be                IDT::addEntry(IDTEntry, int)
                0x00000000c00072d8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007310                IDT::flush()
                0x00000000c000732a                IDT::setup()
 .text          0x00000000c0007690      0x1a3 core/kheap.32
                0x00000000c0007690                sbrk
                0x00000000c0007725                mmap
                0x00000000c000773b                munmap
                0x00000000c0007751                liballoc_lock()
                0x00000000c000775e                liballoc_unlock()
                0x00000000c0007772                liballoc_alloc(int)
                0x00000000c000778a                liballoc_free(void*, int)
                0x00000000c00077a5                realloc
                0x00000000c00077b9                malloc
                0x00000000c00077e9                free
                0x00000000c00077f9                rfree
                0x00000000c0007809                calloc
 .text          0x00000000c0007833       0xc3 core/main.32
                0x00000000c0007833                KeEntryPoint
 .text          0x00000000c00078f6      0x5dc core/physmgr.32
                0x00000000c00078f6                Phys::allocateDMA(unsigned long)
                0x00000000c00079cd                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007a00                Phys::setPageState(unsigned long, bool)
                0x00000000c0007a32                Phys::getPageState(unsigned long)
                0x00000000c0007a53                Phys::freePage(unsigned long)
                0x00000000c0007ab5                Phys::allocatePage()
                0x00000000c0007b73                Phys::allocateContiguousPages(int)
                0x00000000c0007bcf                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007c07                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007ed2      0x273 core/pipe.32
                0x00000000c0007ed2                Pipe::isAtty()
                0x00000000c0007ed6                Pipe::~Pipe()
                0x00000000c0007ed6                Pipe::~Pipe()
                0x00000000c0007efa                Pipe::~Pipe()
                0x00000000c0007f22                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007fe2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00080de                Pipe::Pipe(int)
                0x00000000c00080de                Pipe::Pipe(int)
 *fill*         0x00000000c0008145        0x1 
 .text          0x00000000c0008146      0xaa0 core/terminal.32
                0x00000000c0008146                VgaText::isAtty()
                0x00000000c000814a                VgaText::~VgaText()
                0x00000000c000814a                VgaText::~VgaText()
                0x00000000c000816e                VgaText::~VgaText()
                0x00000000c0008198                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00081b8                setTerminalScrollLock(bool)
                0x00000000c00081b9                doTerminalCycle()
                0x00000000c00081ba                addToTerminalCycle(VgaText*)
                0x00000000c00081bb                scrollTerminalScrollLock(int)
                0x00000000c00081bc                VgaText::updateTitle()
                0x00000000c00081be                VgaText::load()
                0x00000000c00081c0                VgaText::updateCursor()
                0x00000000c00081d6                VgaText::doANSI_SGR(int)
                0x00000000c000824a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000825a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000826a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000828a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008296                VgaText::setTitleColour(VgaColour)
                0x00000000c00082a2                VgaText::setTitle(char*)
                0x00000000c00082a4                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00082b6                VgaText::scrollScreen()
                0x00000000c000834e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008360                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00083f0                VgaText::getCursorX()
                0x00000000c00083f8                VgaText::getCursorY()
                0x00000000c0008400                VgaText::setCursor(int, int)
                0x00000000c0008417                setActiveTerminal(VgaText*)
                0x00000000c0008462                VgaText::clearScreen()
                0x00000000c00084b0                VgaText::setCursorX(int)
                0x00000000c00084c8                VgaText::setCursorY(int)
                0x00000000c00084e0                VgaText::incrementCursor(bool)
                0x00000000c0008534                VgaText::decrementCursor(bool)
                0x00000000c0008556                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008624                VgaText::putchar(char)
                0x00000000c0008710                VgaText::putx(unsigned int)
                0x00000000c0008756                VgaText::puts(char const*)
                0x00000000c000877c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00087c8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000891a                VgaText::VgaText(char const*)
                0x00000000c000891a                VgaText::VgaText(char const*)
                0x00000000c0008a66                VgaText::receiveKey(unsigned char)
                0x00000000c0008bc0                VgaText::doUpdate()
                0x00000000c0008bc1                newTerminal(char*)
 *fill*         0x00000000c0008be6        0x2 
 .text          0x00000000c0008be8      0x1a1 core/tss.32
                0x00000000c0008be8                TSS::TSS()
                0x00000000c0008be8                TSS::TSS()
                0x00000000c0008bf8                TSS::setESP(unsigned long)
                0x00000000c0008c0c                TSS::flush()
                0x00000000c0008c2c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008d89        0x1 
 .text          0x00000000c0008d8a      0x4c2 core/unixfile.32
                0x00000000c0008d8a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008de0                ReservedFilename::isAtty()
                0x00000000c0008dfc                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008e5a                UnixFile::getFileDescriptor()
                0x00000000c0008e62                UnixFile::UnixFile(int)
                0x00000000c0008e62                UnixFile::UnixFile(int)
                0x00000000c0009012                ReservedFilename::ReservedFilename(int)
                0x00000000c0009012                ReservedFilename::ReservedFilename(int)
                0x00000000c0009044                UnixFile::~UnixFile()
                0x00000000c0009044                UnixFile::~UnixFile()
                0x00000000c00090dc                UnixFile::~UnixFile()
                0x00000000c0009104                ReservedFilename::~ReservedFilename()
                0x00000000c0009104                ReservedFilename::~ReservedFilename()
                0x00000000c0009128                ReservedFilename::~ReservedFilename()
                0x00000000c000914f                getFromFileDescriptor(int)
 .text          0x00000000c000924c     0x1166 core/virtmgr.32
                0x00000000c000924c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009281                Virt::getPageState(unsigned long)
                0x00000000c00092a5                Virt::allocateKernelVirtualPages(int)
                0x00000000c00093b6                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00093d4                Virt::swapIDToSector(unsigned long)
                0x00000000c00093e6                Virt::allocateSwapfilePage()
                0x00000000c0009464                Virt::virtualMemorySetup()
                0x00000000c00094af                Virt::setupPageSwapping(int)
                0x00000000c0009520                VAS::VAS()
                0x00000000c0009520                VAS::VAS()
                0x00000000c000955c                VAS::VAS(VAS*)
                0x00000000c000955c                VAS::VAS(VAS*)
                0x00000000c000958a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00095b6                VAS::getPageTableEntry(unsigned long)
                0x00000000c00095d5                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00096fa                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000971e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009738                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009778                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00097ac                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00097d6                VAS::~VAS()
                0x00000000c00097d6                VAS::~VAS()
                0x00000000c000993a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009a3e                VAS::allocatePages(int, int)
                0x00000000c0009c16                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009c34                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009cfa                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009de8                VAS::VAS(bool)
                0x00000000c0009de8                VAS::VAS(bool)
                0x00000000c000a068                VAS::evict(unsigned long)
                0x00000000c000a12a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a218                VAS::scanForEviction()
                0x00000000c000a2f8                mapVASFirstTime
 .text          0x00000000c000a3b2       0x5f coreobjs/c++.32
                0x00000000c000a3b2                __cxa_atexit
                0x00000000c000a3b5                __cxa_finalize
                0x00000000c000a3b6                __stack_chk_fail
                0x00000000c000a3ec                __cxa_pure_virtual
                0x00000000c000a3fd                operator new[](unsigned long)
                0x00000000c000a402                operator delete(void*, unsigned long)
                0x00000000c000a407                operator delete[](void*)
                0x00000000c000a40c                operator delete[](void*, unsigned long)
 .text          0x00000000c000a411      0x21c dbg/kconsole.32
                0x00000000c000a411                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a47c                Dbg::logc(char)
                0x00000000c000a49c                Dbg::logs(char*)
                0x00000000c000a4b9                Dbg::logWriteInt(unsigned int)
                0x00000000c000a4d7                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a4f8                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a62d        0x1 
 .text          0x00000000c000a62e      0xc5c fs/vfs.32
                0x00000000c000a62e                File::read(unsigned long long, void*, int*)
                0x00000000c000a686                File::write(unsigned long long, void*, int*)
                0x00000000c000a6de                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a736                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a764                File::isAtty()
                0x00000000c000a768                Directory::isAtty()
                0x00000000c000a76c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a772                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a778                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a77e                File::~File()
                0x00000000c000a77e                File::~File()
                0x00000000c000a7a2                File::~File()
                0x00000000c000a7cc                Directory::~Directory()
                0x00000000c000a7cc                Directory::~Directory()
                0x00000000c000a7f0                Directory::~Directory()
                0x00000000c000a81a                Filesystem::Filesystem()
                0x00000000c000a81a                Filesystem::Filesystem()
                0x00000000c000a83e                Filesystem::~Filesystem()
                0x00000000c000a83e                Filesystem::~Filesystem()
                0x00000000c000a84c                Filesystem::~Filesystem()
                0x00000000c000a870                Fs::getcwd(Process*, char*, int)
                0x00000000c000a89a                Fs::initVFS()
                0x00000000c000a8c4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aa6e                File::File(char const*, Process*)
                0x00000000c000aa6e                File::File(char const*, Process*)
                0x00000000c000ab2e                File::open(FileOpenMode)
                0x00000000c000ab8c                File::close()
                0x00000000c000abec                File::seek(unsigned long long)
                0x00000000c000ac42                File::tell(unsigned long long*)
                0x00000000c000ac92                File::rewind()
                0x00000000c000aca6                File::unlink()
                0x00000000c000acf2                File::rename(char const*)
                0x00000000c000ad40                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ad9c                File::exists()
                0x00000000c000adda                File::stat(unsigned long long*, bool*)
                0x00000000c000ae3b                Fs::setcwd(Process*, char*)
                0x00000000c000af98                Directory::Directory(char const*, Process*)
                0x00000000c000af98                Directory::Directory(char const*, Process*)
                0x00000000c000b058                Directory::open()
                0x00000000c000b0b4                Directory::close()
                0x00000000c000b114                Directory::unlink()
                0x00000000c000b160                Directory::rename(char const*)
                0x00000000c000b1ae                Directory::exists()
                0x00000000c000b1ec                Directory::read(dirent*)
                0x00000000c000b238                Directory::create()
                0x00000000c000b284                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b28a        0x2 
 .text          0x00000000c000b28c       0x86 hal/bus.32
                0x00000000c000b28c                Bus::Bus(char const*)
                0x00000000c000b28c                Bus::Bus(char const*)
                0x00000000c000b2c4                Bus::~Bus()
                0x00000000c000b2c4                Bus::~Bus()
                0x00000000c000b2e8                Bus::~Bus()
 .text          0x00000000c000b312       0x96 hal/buzzer.32
                0x00000000c000b312                beepThread(void*)
                0x00000000c000b34f                Krnl::beep(int, int, bool)
 .text          0x00000000c000b3a8      0x46d hal/clock.32
                0x00000000c000b3a8                User::loadClockSettings(int)
                0x00000000c000b3fa                Clock::Clock(char const*)
                0x00000000c000b3fa                Clock::Clock(char const*)
                0x00000000c000b430                Clock::~Clock()
                0x00000000c000b430                Clock::~Clock()
                0x00000000c000b454                Clock::~Clock()
                0x00000000c000b47e                Clock::timeInSecondsLocal()
                0x00000000c000b4c6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b51f                datetimeToSeconds(datetime_t)
                0x00000000c000b64c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b6ac                secondsToDatetime(unsigned long long)
                0x00000000c000b7f0                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b815        0x1 
 .text          0x00000000c000b816      0x464 hal/device.32
                0x00000000c000b816                Device::hibernate()
                0x00000000c000b818                Device::wake()
                0x00000000c000b81a                Device::detect()
                0x00000000c000b81c                Device::disableLegacy()
                0x00000000c000b81e                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b820                DriverlessDevice::close(int, int, void*)
                0x00000000c000b824                DriverlessDevice::detect()
                0x00000000c000b826                DriverlessDevice::open(int, int, void*)
                0x00000000c000b83a                Device::~Device()
                0x00000000c000b83a                Device::~Device()
                0x00000000c000b848                Device::~Device()
                0x00000000c000b870                Device::findAndLoadDriver()
                0x00000000c000b87e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b8a4                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000b8e4                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b90e                Device::getParent()
                0x00000000c000b91a                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b938                Device::addChild(Device*)
                0x00000000c000b97c                Device::removeAllChildren()
                0x00000000c000b9c2                Device::hibernateAll()
                0x00000000c000b9f2                Device::wakeAll()
                0x00000000c000ba22                Device::detectAll()
                0x00000000c000ba52                Device::disableLegacyAll()
                0x00000000c000ba54                Device::loadDriversForAll()
                0x00000000c000ba56                Device::closeAll()
                0x00000000c000ba8c                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bac2                Device::setName(char const*)
                0x00000000c000bad0                Device::Device(char const*)
                0x00000000c000bad0                Device::Device(char const*)
                0x00000000c000bbcc                Device::getName()
                0x00000000c000bbd6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbd6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bc0c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bc50                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bc7a        0x2 
 .text          0x00000000c000bc7c       0x86 hal/diskctrl.32
                0x00000000c000bc7c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc7c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bcb4                HardDiskController::~HardDiskController()
                0x00000000c000bcb4                HardDiskController::~HardDiskController()
                0x00000000c000bcd8                HardDiskController::~HardDiskController()
 .text          0x00000000c000bd02       0xe2 hal/diskphys.32
                0x00000000c000bd02                PhysicalDisk::eject()
                0x00000000c000bd06                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bd06                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bd6e                PhysicalDisk::startCache()
                0x00000000c000bd96                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd96                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bdba                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000bde4        0x0 hal/fpu.32
 .text          0x00000000c000bde4      0x35d hal/intctrl.32
                0x00000000c000bde4                int_handler
                0x00000000c000be6c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000beb4                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bfec                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c020                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c09f                setupINTS()
                0x00000000c000c0fc                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c141        0x1 
 .text          0x00000000c000c142      0x792 hal/keybrd.32
                0x00000000c000c142                startGUI(void*)
                0x00000000c000c1ae                startGUIVESA(void*)
                0x00000000c000c21a                sendKeyToTerminal(unsigned char)
                0x00000000c000c2e3                sendKeyboardToken(KeyboardToken)
                0x00000000c000c723                clearInternalKeybuffer(VgaText*)
                0x00000000c000c758                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c84a                Keyboard::Keyboard(char const*)
                0x00000000c000c84a                Keyboard::Keyboard(char const*)
                0x00000000c000c886                Keyboard::~Keyboard()
                0x00000000c000c886                Keyboard::~Keyboard()
                0x00000000c000c8aa                Keyboard::~Keyboard()
 .text          0x00000000c000c8d4      0x3ea hal/logidisk.32
                0x00000000c000c8d4                LogicalDisk::close(int, int, void*)
                0x00000000c000c8d8                LogicalDisk::~LogicalDisk()
                0x00000000c000c8d8                LogicalDisk::~LogicalDisk()
                0x00000000c000c8fc                LogicalDisk::~LogicalDisk()
                0x00000000c000c926                LogicalDisk::open(int, int, void*)
                0x00000000c000c93a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000c972                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000c9b8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c9b8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ca6e                LogicalDisk::assignDriveLetter()
                0x00000000c000cb24                LogicalDisk::mount()
                0x00000000c000cb6c                LogicalDisk::unmount()
                0x00000000c000cb7c                LogicalDisk::eject()
                0x00000000c000cb90                LogicalDisk::unassignDriveLetter()
                0x00000000c000cbe6                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000cc52                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000ccbe        0x2 
 .text          0x00000000c000ccc0       0x86 hal/mouse.32
                0x00000000c000ccc0                Mouse::Mouse(char const*)
                0x00000000c000ccc0                Mouse::Mouse(char const*)
                0x00000000c000ccf8                Mouse::~Mouse()
                0x00000000c000ccf8                Mouse::~Mouse()
                0x00000000c000cd1c                Mouse::~Mouse()
 .text          0x00000000c000cd46      0x339 hal/partition.32
                0x00000000c000cd46                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cdee                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d07f        0x1 
 .text          0x00000000c000d080       0x86 hal/serial.32
                0x00000000c000d080                Serial::Serial(char const*)
                0x00000000c000d080                Serial::Serial(char const*)
                0x00000000c000d0b8                Serial::~Serial()
                0x00000000c000d0b8                Serial::~Serial()
                0x00000000c000d0dc                Serial::~Serial()
 *fill*         0x00000000c000d106        0x2 
 .text          0x00000000c000d108      0x234 hal/timer.32
                0x00000000c000d108                Timer::Timer(char const*)
                0x00000000c000d108                Timer::Timer(char const*)
                0x00000000c000d140                Timer::~Timer()
                0x00000000c000d140                Timer::~Timer()
                0x00000000c000d164                Timer::~Timer()
                0x00000000c000d18e                Timer::read()
                0x00000000c000d199                setupTimer(int)
                0x00000000c000d1d4                timerHandler(unsigned int)
 .text          0x00000000c000d33c      0x3ce hal/vcache.32
                0x00000000c000d33c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d33c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d4a4                VCache::invalidateReadBuffer()
                0x00000000c000d4b4                VCache::writeWriteBuffer()
                0x00000000c000d500                VCache::~VCache()
                0x00000000c000d500                VCache::~VCache()
                0x00000000c000d554                VCache::~VCache()
                0x00000000c000d57c                VCache::write(unsigned long long, int, void*)
                0x00000000c000d692                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d70a      0x4b3 hal/video.32
                0x00000000c000d70a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d756                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000d7c6                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000d844                Video::clearScreen(unsigned int)
                0x00000000c000d878                Video::putpixel(int, int, unsigned int)
                0x00000000c000d886                Video::Video(char const*)
                0x00000000c000d886                Video::Video(char const*)
                0x00000000c000d8bc                Video::~Video()
                0x00000000c000d8bc                Video::~Video()
                0x00000000c000d8e0                Video::~Video()
                0x00000000c000d90a                Video::isMonochrome()
                0x00000000c000d916                Video::getWidth()
                0x00000000c000d922                Video::getHeight()
                0x00000000c000d92e                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000d9ea                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000db52                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000dbbd        0x3 
 .text          0x00000000c000dbc0     0x1307 hw/acpi.32
                0x00000000c000dbc0                ACPI::close(int, int, void*)
                0x00000000c000dc78                findRSDP()
                0x00000000c000dd08                loadACPITables(unsigned char*)
                0x00000000c000df6c                findRSDT(unsigned char*)
                0x00000000c000e0bc                findDataTable(unsigned char*, char*)
                0x00000000c000e134                scanMADT()
                0x00000000c000e608                ACPI::ACPI()
                0x00000000c000e608                ACPI::ACPI()
                0x00000000c000e65c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e744                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000e80c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000e814                ACPI::detectPCI()
                0x00000000c000ea1c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ea70                ACPI::sleep()
                0x00000000c000ea8c                ACPI::open(int, int, void*)
 *fill*         0x00000000c000eec7        0x1 
 .text          0x00000000c000eec8      0xb95 hw/cpu.32
                0x00000000c000eec8                CPU::close(int, int, void*)
                0x00000000c000eecc                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000eee8                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000ef00                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ef74                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000eff8                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f026                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f054                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f082                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f0b0                CPU::CPU()
                0x00000000c000f0b0                CPU::CPU()
                0x00000000c000f13e                CPU::displayFeatures()
                0x00000000c000f140                CPU::detectFeatures()
                0x00000000c000f804                CPU::setupSMEP()
                0x00000000c000f810                CPU::setupUMIP()
                0x00000000c000f81a                CPU::setupTSC()
                0x00000000c000f824                CPU::setupLargePages()
                0x00000000c000f82e                CPU::setupPAT()
                0x00000000c000f86a                CPU::setupMTRR()
                0x00000000c000f86c                CPU::setupGlobalPages()
                0x00000000c000f876                CPU::allowUsermodeDataAccess()
                0x00000000c000f888                CPU::prohibitUsermodeDataAccess()
                0x00000000c000f89a                CPU::setupSMAP()
                0x00000000c000f8a8                CPU::setupFeatures()
                0x00000000c000f974                CPU::open(int, int, void*)
 .text          0x00000000c000fa5d       0xd1 krnl/bootmsg.32
                0x00000000c000fa5d                KeDisplaySplashScreen()
                0x00000000c000facb                KeSetBootMessage(char const*)
 .text          0x00000000c000fb2e      0x581 krnl/env.32
                0x00000000c000fb2e                EnvVarContainer::getEnv(char const*)
                0x00000000c000fb6c                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fc2e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fc30                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000fe16                EnvVarContainer::__loadSystem()
                0x00000000c000fe30                EnvVarContainer::__loadUser()
                0x00000000c000fe32                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe32                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe54                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe54                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe84                Krnl::getEnv(Process*, char const*)
                0x00000000c000fee9                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000ff03                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000ff22                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000ff35                Krnl::deleteEnvSystem(char const*)
                0x00000000c000ff36                Krnl::deleteEnvUser(char const*)
                0x00000000c000ff37                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000ff38                Krnl::newProcessEnv(Process*)
                0x00000000c000ff5a                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000ffa6                Krnl::loadSystemEnv()
                0x00000000c000ffd4                Krnl::loadUserEnv()
                0x00000000c000fffa                Krnl::flushEnv()
                0x00000000c000fffb                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001001b                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00100af       0x94 krnl/inlines.32
                0x00000000c00100af                CPU::current()
                0x00000000c00100bb                operator new(unsigned long)
                0x00000000c00100c0                operator delete(void*)
                0x00000000c00100c5                disableIRQs()
                0x00000000c00100c7                enableIRQs()
                0x00000000c00100c9                lockScheduler()
                0x00000000c00100d1                unlockScheduler()
                0x00000000c00100e0                lockStuff()
                0x00000000c00100ee                unlockStuff()
                0x00000000c0010128                Virt::getAKernelVAS()
                0x00000000c001012e                __not_memcpy
 .text          0x00000000c0010143        0xc krnl/panic.32
                0x00000000c0010143                KePanic(char const*)
 .text          0x00000000c001014f      0x142 krnl/powctrl.32
                0x00000000c001014f                Krnl::powerThread(void*)
                0x00000000c001017d                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010193                Krnl::userIOReceived()
                0x00000000c001019e                Krnl::handlePowerButton()
                0x00000000c00101d3                Krnl::handleSleepButton()
                0x00000000c0010208                Krnl::setupPowerManager()
 *fill*         0x00000000c0010291        0x3 
 .text          0x00000000c0010294      0x190 krnl/resolve.32
                0x00000000c0010294                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010424      0x33f krnl/signal.32
                0x00000000c0010424                KiDefaultSignalHandlerAbort(int)
                0x00000000c0010431                KiDefaultSignalHandlerTerminate(int)
                0x00000000c001043e                KiSigKill(int)
                0x00000000c001044b                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001044c                KiDefaultSignalHandlerPause(int)
                0x00000000c0010459                KiDefaultSignalHandlerResume(int)
                0x00000000c0010466                KeInitSignals()
                0x00000000c00104c1                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010526                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00105a2                KeCheckSignal(SigHandlerBlock*)
                0x00000000c0010728                KeCompleteSignal(SigHandlerBlock*, int)
 .text          0x00000000c0010763      0xcfe krnl/syscalls.32
                0x00000000c0010763                SysSeekDir(regs*)
                0x00000000c0010768                SysTellDir(regs*)
                0x00000000c001076d                SysVerify(regs*)
                0x00000000c0010777                SysGetArgc(regs*)
                0x00000000c0010787                SysTTYName(regs*)
                0x00000000c001078f                SysFormatDisk(regs*)
                0x00000000c00107fc                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010846                SysGetDiskVolumeLabel(regs*)
                0x00000000c001089b                SysShutdown(regs*)
                0x00000000c00108f9                SysRealpath(regs*)
                0x00000000c001093c                SysReadDir(regs*)
                0x00000000c00109bc                SysIsATTY(regs*)
                0x00000000c0010a18                SysSeek(regs*)
                0x00000000c0010a71                SysTell(regs*)
                0x00000000c0010ae0                SysSize(regs*)
                0x00000000c0010b55                SysSizeFromFilename(regs*)
                0x00000000c0010c08                SysClose(regs*)
                0x00000000c0010c68                SysOpenDir(regs*)
                0x00000000c0010d79                SysCloseDir(regs*)
                0x00000000c0010dcd                SysMakeDir(regs*)
                0x00000000c0010e3f                SysWait(regs*)
                0x00000000c0010e5c                SysNotImpl(regs*)
                0x00000000c0010e77                SysPanic(regs*)
                0x00000000c0010e92                SysRmdir(regs*)
                0x00000000c0010ef9                SysUnlink(regs*)
                0x00000000c0010f60                SysGetArgv(regs*)
                0x00000000c0010fad                SysUSleep(regs*)
                0x00000000c0010fd6                SysSpawn(regs*)
                0x00000000c001103f                SysGetEnv(regs*)
                0x00000000c00110ee                SysSetFatAttrib(regs*)
                0x00000000c0011165                SysPipe(regs*)
                0x00000000c00111aa                SysGetUnixTime(regs*)
                0x00000000c00111be                string_ends_with(char const*, char const*)
                0x00000000c0011208                SysOpen(regs*)
                0x00000000c001140f                KeSystemCall(regs*, void*)
 .text          0x00000000c0011461      0x50e reg/registry.32
                0x00000000c0011461                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00115b9                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001170e                Reg::getLine(char*, char*, char*)
                0x00000000c0011745                Reg::readInt(char*, char*, int*)
                0x00000000c0011830                Reg::readString(char*, char*, char*, int)
                0x00000000c00118b1                Reg::readBool(char*, char*, bool*)
                0x00000000c00118d6                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0011902                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001192e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001196f       0x36 sys/eject.32
                0x00000000c001196f                SysEject(regs*)
 .text          0x00000000c00119a5       0x18 sys/exit.32
                0x00000000c00119a5                SysExit(regs*)
 .text          0x00000000c00119bd       0x1f sys/getcwd.32
                0x00000000c00119bd                SysGetCwd(regs*)
 .text          0x00000000c00119dc        0xc sys/getpid.32
                0x00000000c00119dc                SysGetPID(regs*)
 .text          0x00000000c00119e8       0x1a sys/getramdata.32
                0x00000000c00119e8                SysGetRAMData(regs*)
 .text          0x00000000c0011a02       0x82 sys/getvgaptr.32
                0x00000000c0011a02                SysGetVGAPtr(regs*)
 .text          0x00000000c0011a84       0xa8 sys/loaddll.32
                0x00000000c0011a84                SysLoadDLL(regs*)
 .text          0x00000000c0011b2c       0x68 sys/read.32
                0x00000000c0011b2c                SysRead(regs*)
 .text          0x00000000c0011b94        0x5 sys/registersignal.32
                0x00000000c0011b94                SysRegisterSignal(regs*)
 .text          0x00000000c0011b99       0x67 sys/sbrk.32
                0x00000000c0011b99                SysSbrk(regs*)
 .text          0x00000000c0011c00       0x1c sys/setcwd.32
                0x00000000c0011c00                SysSetCwd(regs*)
 .text          0x00000000c0011c1c       0x95 sys/settime.32
                0x00000000c0011c1c                SysSetTime(regs*)
 .text          0x00000000c0011cb1       0x4a sys/timezone.32
                0x00000000c0011cb1                SysTimezone(regs*)
 .text          0x00000000c0011cfb       0x68 sys/write.32
                0x00000000c0011cfb                SysWrite(regs*)
 .text          0x00000000c0011d63       0x62 sys/wsbe.32
                0x00000000c0011d63                SysWsbe(regs*)
 .text          0x00000000c0011dc5       0x25 sys/yield.32
                0x00000000c0011dc5                SysYield(regs*)
 .text          0x00000000c0011dea     0x11e5 thr/elf.32
                0x00000000c0011dea                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0012076                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001228c                Thr::runtimeReferenceHelper()
                0x00000000c001229f                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00122ee                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00125ac                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012ce2                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012d14                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012d4b                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012d65                Thr::loadDLL(char const*, bool)
                0x00000000c0012f96                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0012fcf        0x1 
 .text          0x00000000c0012fd0     0x138d thr/prcssthr.32
                0x00000000c0012fd0                userModeEntryPoint(void*)
                0x00000000c0012ff8                changeTSS
                0x00000000c0013028                switchToThread(ThreadControlBlock*)
                0x00000000c00130dc                Process::addArgs(char**)
                0x00000000c001313c                Process::Process(char const*, Process*, char**)
                0x00000000c001313c                Process::Process(char const*, Process*, char**)
                0x00000000c0013338                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013338                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00135b0                taskStartupFunction
                0x00000000c00135bc                Semaphore::Semaphore(int)
                0x00000000c00135bc                Semaphore::Semaphore(int)
                0x00000000c00135ec                Mutex::Mutex()
                0x00000000c00135ec                Mutex::Mutex()
                0x00000000c0013600                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00136f8                Process::createUserThread()
                0x00000000c0013718                setupMultitasking(void (*)())
                0x00000000c0013820                schedule()
                0x00000000c00138b0                Semaphore::tryAcquire()
                0x00000000c001397c                Semaphore::assertLocked(char const*)
                0x00000000c00139f4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013a1c                blockTask(TaskState)
                0x00000000c0013a4c                waitTask(int, int*, int)
                0x00000000c0013a90                milliTenthSleepUntil(unsigned int)
                0x00000000c0013b20                milliTenthSleep(unsigned int)
                0x00000000c0013b30                sleep(unsigned int)
                0x00000000c0013b4c                Semaphore::acquire()
                0x00000000c0013c08                taskReturned
                0x00000000c0013c44                Thr::processFromPID(int)
                0x00000000c0013ce4                unblockTask(ThreadControlBlock*)
                0x00000000c0013d88                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0014054                cleanerTaskFunction(void*)
                0x00000000c0014144                terminateTask(int)
                0x00000000c0014210                Thr::terminateFromIRQ(int)
                0x00000000c0014220                Semaphore::release()
 .text          0x00000000c001435d      0xb93 vm86/vm8086.32
                0x00000000c001435d                Vm::inbv(unsigned short)
                0x00000000c0014370                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00143a6                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00143b6                Vm::getSegment(unsigned int)
                0x00000000c00143be                Vm::getOffset(unsigned int)
                0x00000000c00143c3                Vm::mainloop2()
                0x00000000c00143fd                Vm::mainVm8086Loop(void*)
                0x00000000c001440d                Vm::mainloop3(unsigned long)
                0x00000000c0014433                Vm::initialise8086()
                0x00000000c0014476                Vm::finish8086()
                0x00000000c00144d7                Vm::getOutput8086(unsigned char*)
                0x00000000c00144fc                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00145b5                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001471d                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00147a7                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00147b8                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00147ca                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00147db                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00147f0                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0014806                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001481b                Vm::faultHandler(regs*)
 .text          0x00000000c0014ef0      0xa53 arch/i386/hal.32
                0x00000000c0014ef0                noCopro(unsigned long)
                0x00000000c0014ef1                nmiHandler(regs*, void*)
                0x00000000c0014f0a                doubleFault(regs*, void*)
                0x00000000c0014f23                displayDebugInfo(regs*)
                0x00000000c0015244                HalSystemIdle()
                0x00000000c00152ba                displayProgramFault(char const*)
                0x00000000c0015306                gpFault(regs*, void*)
                0x00000000c001536b                pgFault(regs*, void*)
                0x00000000c00153f1                otherISRHandler(regs*, void*)
                0x00000000c0015425                opcodeFault(regs*, void*)
                0x00000000c00154a5                i386SaveCoprocessor(void*)
                0x00000000c00154b9                i386LoadCoprocessor(void*)
                0x00000000c00154cd                x87EmulHandler(regs*, void*)
                0x00000000c001556a                HalInitialiseCoprocessor()
                0x00000000c0015618                HalPanic(char const*)
                0x00000000c0015711                HalQueryPerformanceCounter()
                0x00000000c001572c                HalInitialise()
                0x00000000c00158d2                HalMakeBeep(int)
                0x00000000c001590c                HalGetRand()
                0x00000000c001590f                HalEndOfInterrupt(int)
                0x00000000c0015940                HalRestart()
                0x00000000c0015941                HalShutdown()
                0x00000000c0015942                HalSleep()
 *fill*         0x00000000c0015943        0x1 
 .text          0x00000000c0015944      0x2f4 arch/i386/pic.32
                0x00000000c0015944                picIoWait()
                0x00000000c001594c                picDisable()
                0x00000000c0015980                picGetIRQReg(int)
                0x00000000c0015a04                picOpen()
                0x00000000c0015b94                picEOI(int)
 .text          0x00000000c0015c38      0x64d arch/i386/rtc.32
                0x00000000c0015c38                RTC::open(int, int, void*)
                0x00000000c0015c3c                RTC::close(int, int, void*)
                0x00000000c0015c40                RTC::timeInSecondsUTC()
                0x00000000c0015c52                RTC::timeInDatetimeUTC()
                0x00000000c0015c78                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015cb6                RTC::~RTC()
                0x00000000c0015cb6                RTC::~RTC()
                0x00000000c0015cda                RTC::~RTC()
                0x00000000c0015d04                RTC::get_update_in_progress_flag()
                0x00000000c0015d1c                RTC::completeRTCRefresh()
                0x00000000c0015fd4                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0016187                rtcIRQHandler(regs*, void*)
                0x00000000c00161cc                RTC::RTC()
                0x00000000c00161cc                RTC::RTC()
 *fill*         0x00000000c0016285        0x3 
 .text          0x00000000c0016288      0x203 arch/i386/vga.32
                0x00000000c0016288                HalConsoleScroll(int, int)
                0x00000000c0016390                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00163fc                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c001648b        0x1 
 .text          0x00000000c001648c     0x13e7 fs/fat/vfslink.32
                0x00000000c001648c                FAT::getName()
                0x00000000c0016494                FAT::tell(void*, unsigned long long*)
                0x00000000c00164d0                FAT::stat(void*, unsigned long long*)
                0x00000000c001650c                FAT::~FAT()
                0x00000000c001650c                FAT::~FAT()
                0x00000000c0016530                FAT::~FAT()
                0x00000000c0016558                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00165fc                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00166c0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016894                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016aac                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016c6c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016dd8                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016e38                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016e98                FAT::close(void*)
                0x00000000c0016eec                FAT::closeDir(void*)
                0x00000000c0016f40                FAT::seek(void*, unsigned long long)
                0x00000000c0016f98                fatWrapperReadDisk
                0x00000000c0016fdc                fatWrapperWriteDisk
                0x00000000c0017020                fatWrapperIoctl
                0x00000000c001713c                FAT::FAT()
                0x00000000c001713c                FAT::FAT()
                0x00000000c0017190                FAT::fixFilepath(char*)
                0x00000000c00171cc                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0017304                FAT::openDir(char const*, void**)
                0x00000000c00173b4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00174ac                FAT::unlink(char const*)
                0x00000000c001752c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00176b8                FAT::rename(char const*, char const*)
                0x00000000c0017784                FAT::mkdir(char const*)
                0x00000000c0017804                FAT::exists(char const*)
 *fill*         0x00000000c0017873        0x1 
 .text          0x00000000c0017874       0xc6 fs/iso9660/helper.32
                0x00000000c0017874                isoReadDiscSectorHelper
                0x00000000c00178d0                iso_kprintf
                0x00000000c00178f0                iso_kprintfd
 .text          0x00000000c001793a      0x586 fs/iso9660/vfslink.32
                0x00000000c001793a                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017940                ISO9660::getName()
                0x00000000c0017946                ISO9660::closeDir(void*)
                0x00000000c0017950                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017956                ISO9660::unlink(char const*)
                0x00000000c001795c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017962                ISO9660::rename(char const*, char const*)
                0x00000000c0017968                ISO9660::mkdir(char const*)
                0x00000000c001796e                ISO9660::~ISO9660()
                0x00000000c001796e                ISO9660::~ISO9660()
                0x00000000c0017992                ISO9660::~ISO9660()
                0x00000000c00179ba                ISO9660::exists(char const*)
                0x00000000c00179ce                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017a6e                ISO9660::openDir(char const*, void**)
                0x00000000c0017afe                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017b3e                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017b76                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017bac                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017be6                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017cb8                ISO9660::close(void*)
                0x00000000c0017cde                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017dab                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017e26                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017e98                ISO9660::ISO9660()
                0x00000000c0017e98                ISO9660::ISO9660()
 .text          0x00000000c0017ec0      0x26c hal/sound/sndcard.32
                0x00000000c0017ec0                SoundCard::beginPlayback()
                0x00000000c0017ece                SoundCard::stopPlayback()
                0x00000000c0017edc                SoundCard::SoundCard(char const*)
                0x00000000c0017edc                SoundCard::SoundCard(char const*)
                0x00000000c0017f7a                SoundCard::~SoundCard()
                0x00000000c0017f7a                SoundCard::~SoundCard()
                0x00000000c0017f9e                SoundCard::~SoundCard()
                0x00000000c0017fc8                SoundCard::configureRates(int, int, int)
                0x00000000c0017ff8                SoundCard::getSamples16(int, short*)
                0x00000000c0018054                SoundCard::getSamples32(int, int*)
                0x00000000c00180da                SoundCard::addChannel(SoundPort*)
                0x00000000c0018118                SoundCard::removeChannel(int)
 .text          0x00000000c001812c      0x377 hal/sound/sndport.32
                0x00000000c001812c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001812c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00181b8                SoundPort::~SoundPort()
                0x00000000c00181b8                SoundPort::~SoundPort()
                0x00000000c00181ec                SoundPort::unpause()
                0x00000000c00181f8                SoundPort::pause()
                0x00000000c0018204                SoundPort::getBufferUsed()
                0x00000000c001820c                SoundPort::getBufferSize()
                0x00000000c0018214                SoundPort::buffer16(short*, int)
                0x00000000c00182a0                SoundPort::buffer32(int*, int)
                0x00000000c0018328                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00183ec                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c00184a3        0x0 hw/bus/isa.32
 *fill*         0x00000000c00184a3        0x1 
 .text          0x00000000c00184a4      0xb49 hw/bus/pci.32
                0x00000000c00184a4                PCI::open(int, int, void*)
                0x00000000c00184c2                PCI::close(int, int, void*)
                0x00000000c00184c6                PCI::PCI()
                0x00000000c00184c6                PCI::PCI()
                0x00000000c0018560                PCI::readBAR8(unsigned int, int)
                0x00000000c001857c                PCI::readBAR16(unsigned int, int)
                0x00000000c001859a                PCI::readBAR32(unsigned int, int)
                0x00000000c00185b6                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c00185d6                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c00185f8                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0018618                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018686                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001872e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018752                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001877a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c00187c4                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c00187ec                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018810                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018834                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001885c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00188c0                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c00189a8                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018c22                PCI::checkBus(unsigned char)
                0x00000000c0018c48                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018dba                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018f2e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018f9a                PCI::detect()
 *fill*         0x00000000c0018fed        0x1 
 .text          0x00000000c0018fee      0xb5a hw/diskctrl/ide.32
                0x00000000c0018fee                IDE::close(int, int, void*)
                0x00000000c0018ff2                IDE::IDE()
                0x00000000c0018ff2                IDE::IDE()
                0x00000000c0019026                IDE::prepareInterrupt(unsigned char)
                0x00000000c0019038                selectDrive(unsigned char, unsigned char)
                0x00000000c001903a                IDE::getBase(unsigned char)
                0x00000000c001904c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001910c                IDE::read(unsigned char, unsigned char)
                0x00000000c00191ba                IDE::waitInterrupt(unsigned char)
                0x00000000c0019222                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001923e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001925a                IDE::enableIRQs(unsigned char, bool)
                0x00000000c00192a0                IDE::open(int, int, void*)
                0x00000000c00196ae                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001977a                IDE::detect()
                0x00000000c0019a3a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019aea                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019b48      0x32a hw/diskctrl/satabus.32
                0x00000000c0019b48                SATABus::close(int, int, void*)
                0x00000000c0019b4c                SATABus::detect()
                0x00000000c0019b4e                SATABus::SATABus()
                0x00000000c0019b4e                SATABus::SATABus()
                0x00000000c0019bd4                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c06                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c4e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c6e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c98                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019da8                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019e52                SATABus::open(int, int, void*)
 .text          0x00000000c0019e72      0x5f4 hw/diskphys/ata.32
                0x00000000c0019e72                ATA::close(int, int, void*)
                0x00000000c0019e96                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019e98                ATA::ATA()
                0x00000000c0019e98                ATA::ATA()
                0x00000000c0019ec6                ATA::flush(bool)
                0x00000000c0019f10                ATA::readyForCommand()
                0x00000000c0019f5c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a2d8                ATA::read(unsigned long long, int, void*)
                0x00000000c001a324                ATA::write(unsigned long long, int, void*)
                0x00000000c001a370                ATA::detectCHS()
                0x00000000c001a39a                ATA::open(int, int, void*)
 .text          0x00000000c001a466      0x60e hw/diskphys/atapi.32
                0x00000000c001a466                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a46c                ATAPI::close(int, int, void*)
                0x00000000c001a490                ATAPI::ATAPI()
                0x00000000c001a490                ATAPI::ATAPI()
                0x00000000c001a4be                ATAPI::readyForCommand()
                0x00000000c001a510                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a7d0                ATAPI::diskRemoved()
                0x00000000c001a80a                ATAPI::eject()
                0x00000000c001a852                ATAPI::diskInserted()
                0x00000000c001a85e                ATAPI::detectMedia()
                0x00000000c001a91a                ATAPI::open(int, int, void*)
                0x00000000c001a9fa                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001aa74      0x402 hw/diskphys/sata.32
                0x00000000c001aa74                SATA::close(int, int, void*)
                0x00000000c001aa98                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001aa9a                SATA::open(int, int, void*)
                0x00000000c001ab44                SATA::SATA()
                0x00000000c001ab44                SATA::SATA()
                0x00000000c001ab72                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001adbe                SATA::read(unsigned long long, int, void*)
                0x00000000c001ae0a                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001ae76      0x5af hw/diskphys/satapi.32
                0x00000000c001ae76                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ae7c                SATAPI::close(int, int, void*)
                0x00000000c001aea0                SATAPI::SATAPI()
                0x00000000c001aea0                SATAPI::SATAPI()
                0x00000000c001aece                SATAPI::diskRemoved()
                0x00000000c001aed0                SATAPI::diskInserted()
                0x00000000c001aeec                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b1cc                SATAPI::eject()
                0x00000000c001b208                SATAPI::detectMedia()
                0x00000000c001b22e                SATAPI::open(int, int, void*)
                0x00000000c001b32e                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b425        0x1 
 .text          0x00000000c001b426      0x455 hw/intctrl/apic.32
                0x00000000c001b426                IOAPIC::close(int, int, void*)
                0x00000000c001b42c                apicGetBase()
                0x00000000c001b46e                IOAPIC::IOAPIC()
                0x00000000c001b46e                IOAPIC::IOAPIC()
                0x00000000c001b496                apicOpen()
                0x00000000c001b5fc                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b62e                IOAPIC::read(int)
                0x00000000c001b656                IOAPIC::open(int, int, void*)
                0x00000000c001b74a                IOAPIC::write(int, int)
                0x00000000c001b776                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b87b        0x1 
 .text          0x00000000c001b87c       0xf0 hw/timer/apictimer.32
                0x00000000c001b87c                APICTimer::close(int, int, void*)
                0x00000000c001b884                apicTimerHandler(regs*, void*)
                0x00000000c001b8ac                APICTimer::open(int, int, void*)
                0x00000000c001b91c                APICTimer::write(int)
                0x00000000c001b944                APICTimer::APICTimer()
                0x00000000c001b944                APICTimer::APICTimer()
 .text          0x00000000c001b96c      0x1aa hw/timer/pit.32
                0x00000000c001b96c                PIT::write(int)
                0x00000000c001b9f0                pitHandler(regs*, void*)
                0x00000000c001ba14                PIT::open(int, int, void*)
                0x00000000c001ba64                PIT::close(int, int, void*)
                0x00000000c001ba94                PIT::PIT()
                0x00000000c001ba94                PIT::PIT()
 *fill*         0x00000000c001bb16        0xa 
 .text          0x00000000c001bb20       0x83 arch/i386/avx.32
                0x00000000c001bb20                avxDetect
                0x00000000c001bb4a                avxSave
                0x00000000c001bb5b                avxLoad
                0x00000000c001bb6c                avxInit
                0x00000000c001bb8e                avxClose
                0x00000000c001bb8f                wouldSheSayYes
 *fill*         0x00000000c001bba3        0xd 
 .text          0x00000000c001bbb0      0x1d6 arch/i386/interrupt.32
                0x00000000c001bbb0                isr0
                0x00000000c001bbc0                isr1
                0x00000000c001bbca                isr2
                0x00000000c001bbd4                isr3
                0x00000000c001bbde                isr4
                0x00000000c001bbe8                isr5
                0x00000000c001bbf2                isr6
                0x00000000c001bbfc                isr7
                0x00000000c001bc06                isr8
                0x00000000c001bc0e                isr9
                0x00000000c001bc18                isr10
                0x00000000c001bc20                isr11
                0x00000000c001bc28                isr12
                0x00000000c001bc30                isr13
                0x00000000c001bc38                isr14
                0x00000000c001bc40                isr15
                0x00000000c001bc4a                isr16
                0x00000000c001bc54                isr17
                0x00000000c001bc5e                isr18
                0x00000000c001bc68                irq3
                0x00000000c001bc72                irq4
                0x00000000c001bc7c                irq5
                0x00000000c001bc86                irq6
                0x00000000c001bc90                irq7
                0x00000000c001bc9a                irq8
                0x00000000c001bca4                irq9
                0x00000000c001bcae                irq10
                0x00000000c001bcb8                irq11
                0x00000000c001bcc2                irq12
                0x00000000c001bccc                irq13
                0x00000000c001bcd6                irq14
                0x00000000c001bce0                irq15
                0x00000000c001bcea                irq1
                0x00000000c001bcf1                irq2
                0x00000000c001bcf8                isr96
                0x00000000c001bcff                irq0
                0x00000000c001bd04                int_common_stub
                0x00000000c001bd04                syscall_common_stub
                0x00000000c001bd36                irq16
                0x00000000c001bd40                irq17
                0x00000000c001bd4a                irq18
                0x00000000c001bd54                irq19
                0x00000000c001bd5e                irq20
                0x00000000c001bd68                irq21
                0x00000000c001bd72                irq22
                0x00000000c001bd7c                irq23
 *fill*         0x00000000c001bd86        0xa 
 .text          0x00000000c001bd90       0x10 arch/i386/rdrand.32
                0x00000000c001bd90                i386GetRDRAND
 .text          0x00000000c001bda0       0x39 arch/i386/sse.32
                0x00000000c001bda0                absolutelyNoChanceInHell
                0x00000000c001bda0                sseDetect
                0x00000000c001bdb8                sseSave
                0x00000000c001bdc0                sseLoad
                0x00000000c001bdc8                sseInit
                0x00000000c001bdd8                sseClose
 *fill*         0x00000000c001bdd9        0x7 
 .text          0x00000000c001bde0       0x49 arch/i386/x87.32
                0x00000000c001bde6                x87Detect
                0x00000000c001be01                x87Save
                0x00000000c001be08                x87Load
                0x00000000c001be0f                x87Init
                0x00000000c001be28                x87Close
 *fill*         0x00000000c001be29        0x3 
 .text          0x00000000c001be2c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001be51        0x0 crtn.32
 *fill*         0x00000000c001be51        0x3 
 .text          0x00000000c001be54      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001be54                __divdi3
 *fill*         0x00000000c001bf9f        0x1 
 .text          0x00000000c001bfa0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001bfa0                __moddi3
 *fill*         0x00000000c001c11e        0x2 
 .text          0x00000000c001c120       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c120                __udivdi3
 *fill*         0x00000000c001c21f        0x1 
 .text          0x00000000c001c220      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c220                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c340        0x0
 .iplt          0x00000000c001c340        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c33a        0xf
 .init          0x00000000c001c33a        0x3 crti.32
                0x00000000c001c33a                _init
 .init          0x00000000c001c33d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c342        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c347        0x2 crtn.32

.fini           0x00000000c001c349        0xa
 .fini          0x00000000c001c349        0x3 crti.32
                0x00000000c001c349                _fini
 .fini          0x00000000c001c34c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c351        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c354       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c354       0x23 core/computer.32
                0x00000000c001c354                Computer::~Computer()
                0x00000000c001c354                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c378       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c378       0x2a core/computer.32
                0x00000000c001c378                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c3a2       0x21
 .text._Z10idleCommonv
                0x00000000c001c3a2       0x21 core/idle.32
                0x00000000c001c3a2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c3c4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c3c4        0x2 core/unixfile.32
                0x00000000c001c3c4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c3c4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c3c6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c3c6       0x42 core/unixfile.32
                0x00000000c001c3c6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c3c6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c408       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c408       0xd3 core/unixfile.32
                0x00000000c001c408                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c4dc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c4dc        0x7 core/unixfile.32
                0x00000000c001c4dc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c4e4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c4e4       0xa1 core/unixfile.32
                0x00000000c001c4e4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c586        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c586        0x8 core/unixfile.32
                0x00000000c001c586                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c58e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c58e       0x1a hal/device.32
                0x00000000c001c58e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c58e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c5a8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c5a8       0x2a hal/device.32
                0x00000000c001c5a8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c5d2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c5d2       0xdc hal/device.32
                0x00000000c001c5d2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c6ae       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c6ae       0x42 hal/device.32
                0x00000000c001c6ae                LinkedList<Device>::LinkedList()
                0x00000000c001c6ae                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c6f0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c6f0       0x1c hal/timer.32
                0x00000000c001c6f0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c70c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c70c        0x7 hal/timer.32
                0x00000000c001c70c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c714       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c714       0xb8 hal/timer.32
                0x00000000c001c714                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c7cc       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c7cc       0xda hal/timer.32
                0x00000000c001c7cc                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c8a8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c8a8       0x23 hw/acpi.32
                0x00000000c001c8a8                ACPI::~ACPI()
                0x00000000c001c8a8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c8cc       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c8cc       0x2a hw/acpi.32
                0x00000000c001c8cc                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c8f8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c8f8        0x2 hw/acpi.32
                0x00000000c001c8f8                LinkedList<Device>::~LinkedList()
                0x00000000c001c8f8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c8fc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c8fc       0x1c hw/acpi.32
                0x00000000c001c8fc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c918        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c918        0x7 hw/acpi.32
                0x00000000c001c918                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c920       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c920       0xb8 hw/acpi.32
                0x00000000c001c920                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001c9d8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001c9d8       0x23 hw/cpu.32
                0x00000000c001c9d8                CPU::~CPU()
                0x00000000c001c9d8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001c9fc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001c9fc       0x2a hw/cpu.32
                0x00000000c001c9fc                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ca28        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ca28        0x2 thr/prcssthr.32
                0x00000000c001ca28                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ca28                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ca2c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ca2c       0x49 thr/prcssthr.32
                0x00000000c001ca2c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ca2c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ca78       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ca78       0x42 thr/prcssthr.32
                0x00000000c001ca78                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ca78                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cabc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cabc        0x8 thr/prcssthr.32
                0x00000000c001cabc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cac4       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cac4       0x23 hw/bus/pci.32
                0x00000000c001cac4                PCI::~PCI()
                0x00000000c001cac4                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cae8       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cae8       0x2a hw/bus/pci.32
                0x00000000c001cae8                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cb12       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cb12       0x23 hw/diskctrl/ide.32
                0x00000000c001cb12                IDE::~IDE()
                0x00000000c001cb12                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cb36       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cb36       0x2a hw/diskctrl/ide.32
                0x00000000c001cb36                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cb60       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cb60       0x23 hw/diskctrl/satabus.32
                0x00000000c001cb60                SATABus::~SATABus()
                0x00000000c001cb60                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cb84       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cb84       0x2a hw/diskctrl/satabus.32
                0x00000000c001cb84                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cbae       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cbae       0x23 hw/diskphys/ata.32
                0x00000000c001cbae                ATA::~ATA()
                0x00000000c001cbae                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cbd2       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cbd2       0x2a hw/diskphys/ata.32
                0x00000000c001cbd2                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cbfc       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cbfc       0x23 hw/diskphys/atapi.32
                0x00000000c001cbfc                ATAPI::~ATAPI()
                0x00000000c001cbfc                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cc20       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cc20       0x2a hw/diskphys/atapi.32
                0x00000000c001cc20                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cc4a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cc4a       0x23 hw/diskphys/sata.32
                0x00000000c001cc4a                SATA::~SATA()
                0x00000000c001cc4a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cc6e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cc6e       0x2a hw/diskphys/sata.32
                0x00000000c001cc6e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cc98       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cc98       0x23 hw/diskphys/satapi.32
                0x00000000c001cc98                SATAPI::~SATAPI()
                0x00000000c001cc98                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001ccbc       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001ccbc       0x2a hw/diskphys/satapi.32
                0x00000000c001ccbc                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cce6       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cce6       0x23 hw/intctrl/apic.32
                0x00000000c001cce6                IOAPIC::~IOAPIC()
                0x00000000c001cce6                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cd0a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cd0a       0x2a hw/intctrl/apic.32
                0x00000000c001cd0a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001cd34       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001cd34       0x23 hw/timer/apictimer.32
                0x00000000c001cd34                APICTimer::~APICTimer()
                0x00000000c001cd34                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001cd58       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001cd58       0x2a hw/timer/apictimer.32
                0x00000000c001cd58                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001cd84       0x23
 .text._ZN3PITD2Ev
                0x00000000c001cd84       0x23 hw/timer/pit.32
                0x00000000c001cd84                PIT::~PIT()
                0x00000000c001cd84                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001cda8       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001cda8       0x2a hw/timer/pit.32
                0x00000000c001cda8                PIT::~PIT()

.rodata         0x00000000c001cdd2     0x2ac2
                0x00000000c001cdd2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cdd2        0x2 
 .ctors         0x00000000c001cdd4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cdd8        0x4 core/unixfile.32
 .ctors         0x00000000c001cddc        0x4 thr/prcssthr.32
 .ctors         0x00000000c001cde0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cde4                end_ctors = .
                0x00000000c001cde4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001cde4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001cde8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cde8                __DTOR_END__
                0x00000000c001cdec                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cdec       0x14 
 .rodata        0x00000000c001ce00      0x101 acpica/utclib.32
                0x00000000c001ce00                AcpiGbl_Ctypes
 *fill*         0x00000000c001cf01        0x3 
 .rodata        0x00000000c001cf04       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001cf1c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001cf66       0x1a 
 .rodata        0x00000000c001cf80       0xed fs/fat/ff.32
 *fill*         0x00000000c001d06d       0x13 
 .rodata        0x00000000c001d080      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d480       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d491      0x115 core/computer.32
 *fill*         0x00000000c001d5a6        0x2 
 .rodata.str1.4
                0x00000000c001d5a8       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d610       0x2c core/computer.32
                0x00000000c001d610                vtable for Computer
 .rodata.str1.4
                0x00000000c001d63c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d66c       0x28 core/kheap.32
 .rodata.str1.1
                0x00000000c001d694       0x17 core/main.32
 *fill*         0x00000000c001d6ab        0x1 
 .rodata.str1.4
                0x00000000c001d6ac       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d751       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d7a9       0x39 core/pipe.32
 *fill*         0x00000000c001d7e2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d7e4       0x1c core/pipe.32
                0x00000000c001d7e4                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d800       0x75 core/terminal.32
 *fill*         0x00000000c001d875        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d878       0x1c core/terminal.32
                0x00000000c001d878                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d894       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d8b6       0x15 core/unixfile.32
 *fill*         0x00000000c001d8cb        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d8cc       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d917        0x8 core/unixfile.32
 *fill*         0x00000000c001d91f        0x1 
 .rodata.str1.4
                0x00000000c001d920       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d940       0x1c core/unixfile.32
                0x00000000c001d940                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001d95c       0x1c core/unixfile.32
                0x00000000c001d95c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001d978      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dadf      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dbe6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dc19       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dc19        0x3 
 .rodata        0x00000000c001dc1c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001dd6c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001dd6c       0x68 fs/vfs.32
                0x00000000c001dd6c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001ddd4       0x1c fs/vfs.32
                0x00000000c001ddd4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001ddf0       0x1c fs/vfs.32
                0x00000000c001ddf0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001de0c       0x2c hal/bus.32
                0x00000000c001de0c                vtable for Bus
 .rodata.str1.1
                0x00000000c001de38       0x1e hal/clock.32
 *fill*         0x00000000c001de56        0x2 
 .rodata._ZTV5Clock
                0x00000000c001de58       0x3c hal/clock.32
                0x00000000c001de58                vtable for Clock
 *fill*         0x00000000c001de94        0xc 
 .rodata        0x00000000c001dea0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001ded0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001df28       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001df28       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001df28       0x2c hal/device.32
                0x00000000c001df28                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001df54       0x2c hal/device.32
                0x00000000c001df54                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001df80       0x2c hal/diskctrl.32
                0x00000000c001df80                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001dfac       0x38 hal/diskphys.32
                0x00000000c001dfac                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001dfe4       0x3e hal/intctrl.32
 *fill*         0x00000000c001e022        0x2 
 .rodata.str1.4
                0x00000000c001e024       0x5d hal/intctrl.32
 .rodata        0x00000000c001e081       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e0d4       0x34 hal/keybrd.32
                0x00000000c001e0d4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e108       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e14c       0x2c hal/logidisk.32
                0x00000000c001e14c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e178       0x2c hal/mouse.32
                0x00000000c001e178                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e1a4        0xb hal/partition.32
 *fill*         0x00000000c001e1af        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e1b0       0x44 hal/serial.32
                0x00000000c001e1b0                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e1f4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e1f4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e1f4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e1f4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e1f4       0x30 hal/timer.32
                0x00000000c001e1f4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e224       0x10 hal/vcache.32
                0x00000000c001e224                vtable for VCache
 .rodata.str1.1
                0x00000000c001e234       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e29c       0x48 hal/video.32
                0x00000000c001e29c                vtable for Video
 .rodata.str1.4
                0x00000000c001e2e4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e37f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e4bb       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e4bb        0x8 hw/acpi.32
 *fill*         0x00000000c001e4bb        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e4bc       0x2c hw/acpi.32
                0x00000000c001e4bc                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e4e8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e655        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e658       0x2c hw/cpu.32
                0x00000000c001e658                vtable for CPU
 .rodata.str1.1
                0x00000000c001e684       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e6c0       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c001e751      0x1f1 krnl/signal.32
 *fill*         0x00000000c001e942        0x2 
 .rodata.str1.4
                0x00000000c001e944       0x26 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c001e96a       0x97 krnl/syscalls.32
                                         0xa7 (size before relaxing)
 .rodata.str1.1
                0x00000000c001ea01       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001ea46        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001ea50        0xc sys/sbrk.32
 .rodata.str1.1
                0x00000000c001ea5c       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001eab0       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001eadc      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001eca8       0x57 thr/prcssthr.32
 *fill*         0x00000000c001ecff        0x1 
 .rodata.str1.4
                0x00000000c001ed00      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ee0c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ee0c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ee0c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ee0c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001ee0c       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001eeac       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001eedc      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001f05e        0x2 
 .rodata.str1.4
                0x00000000c001f060       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001f0d3       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001f0e8       0x3c arch/i386/rtc.32
                0x00000000c001f0e8                vtable for RTC
 .rodata.str1.1
                0x00000000c001f124       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f165        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f168       0x68 fs/fat/vfslink.32
                0x00000000c001f168                vtable for FAT
 .rodata.str1.1
                0x00000000c001f1d0        0x3 fs/iso9660/helper.32
                                          0x5 (size before relaxing)
 .rodata.str1.1
                0x00000000c001f1d3       0x49 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001f21c       0x68 fs/iso9660/vfslink.32
                0x00000000c001f21c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f284       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f2c8       0x34 hal/sound/sndcard.32
                0x00000000c001f2c8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f2fc       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f33b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f373       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f414       0x2c hw/bus/pci.32
                0x00000000c001f414                vtable for PCI
 .rodata.str1.1
                0x00000000c001f440       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f4c7        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f4c8       0x2c hw/diskctrl/ide.32
                0x00000000c001f4c8                vtable for IDE
 .rodata.str1.4
                0x00000000c001f4f4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f518       0x2c hw/diskctrl/satabus.32
                0x00000000c001f518                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f544       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f556        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f558       0x38 hw/diskphys/ata.32
                0x00000000c001f558                vtable for ATA
 .rodata.str1.1
                0x00000000c001f590        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f59d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f5a0       0x38 hw/diskphys/atapi.32
                0x00000000c001f5a0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f5d8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f654       0x38 hw/diskphys/sata.32
                0x00000000c001f654                vtable for SATA
 .rodata.str1.1
                0x00000000c001f68c      0x100 hw/diskphys/satapi.32
                                        0x10d (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f78c       0x38 hw/diskphys/satapi.32
                0x00000000c001f78c                vtable for SATAPI
 .rodata        0x00000000c001f7c4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f7cc       0x2c hw/intctrl/apic.32
                0x00000000c001f7cc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f7f8       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f813        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f814       0x30 hw/timer/apictimer.32
                0x00000000c001f814                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f844       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f861        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f864       0x30 hw/timer/pit.32
                0x00000000c001f864                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f894      0x39d
 *(.data)
 .data          0x00000000c001f894        0x0 crti.32
 .data          0x00000000c001f894        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f894                __dso_handle
 .data          0x00000000c001f898        0x0 acpica/utclib.32
 .data          0x00000000c001f898        0x0 core/malloc.32
 .data          0x00000000c001f898        0x0 libk/ctype.32
 .data          0x00000000c001f898        0x0 libk/string.32
 .data          0x00000000c001f898        0x0 fs/fat/diskio.32
 .data          0x00000000c001f898        0x0 fs/fat/ff.32
 .data          0x00000000c001f898        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f898        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f898        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f898        0x0 core/computer.32
 .data          0x00000000c001f898        0x0 core/gdt.32
 .data          0x00000000c001f898        0x0 core/idle.32
 .data          0x00000000c001f898        0x0 core/idt.32
 .data          0x00000000c001f898        0x4 core/kheap.32
 .data          0x00000000c001f89c        0x0 core/main.32
 .data          0x00000000c001f89c        0x4 core/physmgr.32
                0x00000000c001f89c                Phys::bitmap
 .data          0x00000000c001f8a0        0x0 core/pipe.32
 .data          0x00000000c001f8a0       0x60 core/terminal.32
                0x00000000c001f8a0                VgaText::hiddenOut
                0x00000000c001f8c0                ansiToVGAMappings
 .data          0x00000000c001f900        0x0 core/tss.32
 .data          0x00000000c001f900        0x4 core/unixfile.32
                0x00000000c001f900                UnixFile::nextFd
 .data          0x00000000c001f904       0x15 core/virtmgr.32
                0x00000000c001f904                Virt::pageAllocPtr
                0x00000000c001f908                Virt::bitmap
                0x00000000c001f90c                Virt::swapfileSectorsPerPage
                0x00000000c001f910                Virt::swapfileLength
                0x00000000c001f914                Virt::swapfileSector
                0x00000000c001f918                Virt::swapfileDrive
 *fill*         0x00000000c001f919        0x3 
 .data          0x00000000c001f91c        0x4 coreobjs/c++.32
                0x00000000c001f91c                __stack_chk_guard
 .data          0x00000000c001f920        0x0 dbg/kconsole.32
 .data          0x00000000c001f920        0x0 fs/vfs.32
 .data          0x00000000c001f920        0x0 hal/bus.32
 .data          0x00000000c001f920        0x0 hal/buzzer.32
 .data          0x00000000c001f920        0x0 hal/clock.32
 .data          0x00000000c001f920        0x0 hal/device.32
 .data          0x00000000c001f920        0x0 hal/diskctrl.32
 .data          0x00000000c001f920        0x0 hal/diskphys.32
 .data          0x00000000c001f920        0x0 hal/fpu.32
 .data          0x00000000c001f920        0x0 hal/intctrl.32
 .data          0x00000000c001f920        0x0 hal/keybrd.32
 .data          0x00000000c001f920        0x0 hal/logidisk.32
 .data          0x00000000c001f920        0x0 hal/mouse.32
 .data          0x00000000c001f920        0x0 hal/partition.32
 .data          0x00000000c001f920        0x0 hal/serial.32
 .data          0x00000000c001f920        0x0 hal/timer.32
 .data          0x00000000c001f920        0x0 hal/vcache.32
 .data          0x00000000c001f920        0x0 hal/video.32
 .data          0x00000000c001f920       0x10 hw/acpi.32
                0x00000000c001f920                legacyIRQRemaps
 .data          0x00000000c001f930        0x4 hw/cpu.32
                0x00000000c001f930                lastCode
 *fill*         0x00000000c001f934        0xc 
 .data          0x00000000c001f940      0x142 krnl/bootmsg.32
                0x00000000c001f940                KiSplashScreen
 *fill*         0x00000000c001fa82       0x1e 
 .data          0x00000000c001faa0       0x4d krnl/env.32
                0x00000000c001faa0                defaultSysEnv
 .data          0x00000000c001faed        0x0 krnl/inlines.32
 .data          0x00000000c001faed        0x0 krnl/panic.32
 .data          0x00000000c001faed        0x0 krnl/powctrl.32
 .data          0x00000000c001faed        0x0 krnl/resolve.32
 *fill*         0x00000000c001faed       0x13 
 .data          0x00000000c001fb00       0x4c krnl/signal.32
                0x00000000c001fb00                KiDefaultSignalHandlers
 *fill*         0x00000000c001fb4c       0x14 
 .data          0x00000000c001fb60       0xcc krnl/syscalls.32
                0x00000000c001fb60                systemCallHandlers
 .data          0x00000000c001fc2c        0x0 reg/registry.32
 .data          0x00000000c001fc2c        0x0 sys/eject.32
 .data          0x00000000c001fc2c        0x0 sys/exit.32
 .data          0x00000000c001fc2c        0x0 sys/getcwd.32
 .data          0x00000000c001fc2c        0x0 sys/getpid.32
 .data          0x00000000c001fc2c        0x0 sys/getramdata.32
 .data          0x00000000c001fc2c        0x0 sys/getvgaptr.32
 .data          0x00000000c001fc2c        0x0 sys/loaddll.32
 .data          0x00000000c001fc2c        0x0 sys/read.32
 .data          0x00000000c001fc2c        0x0 sys/registersignal.32
 .data          0x00000000c001fc2c        0x0 sys/sbrk.32
 .data          0x00000000c001fc2c        0x0 sys/setcwd.32
 .data          0x00000000c001fc2c        0x0 sys/settime.32
 .data          0x00000000c001fc2c        0x0 sys/timezone.32
 .data          0x00000000c001fc2c        0x0 sys/write.32
 .data          0x00000000c001fc2c        0x0 sys/wsbe.32
 .data          0x00000000c001fc2c        0x0 sys/yield.32
 .data          0x00000000c001fc2c        0x0 thr/elf.32
 .data          0x00000000c001fc2c        0x4 thr/prcssthr.32
                0x00000000c001fc2c                Thr::nextPID
 .data          0x00000000c001fc30        0x0 vm86/vm8086.32
 .data          0x00000000c001fc30        0x0 arch/i386/hal.32
 .data          0x00000000c001fc30        0x0 arch/i386/pic.32
 .data          0x00000000c001fc30        0x0 arch/i386/rtc.32
 .data          0x00000000c001fc30        0x0 arch/i386/vga.32
 .data          0x00000000c001fc30        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fc30        0x0 fs/iso9660/helper.32
 .data          0x00000000c001fc30        0x1 fs/iso9660/vfslink.32
                0x00000000c001fc30                recentDriveletter
 .data          0x00000000c001fc31        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fc31        0x0 hal/sound/sndport.32
 .data          0x00000000c001fc31        0x0 hw/bus/isa.32
 .data          0x00000000c001fc31        0x0 hw/bus/pci.32
 .data          0x00000000c001fc31        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fc31        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fc31        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fc31        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fc31        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fc31        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fc31        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fc31        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fc31        0x0 hw/timer/pit.32
 .data          0x00000000c001fc31        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fc31        0x0 crtn.32
 .data          0x00000000c001fc31        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fc31        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fc31        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fc31        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fc34        0x0
 .got           0x00000000c001fc34        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fc34        0x0
 .got.plt       0x00000000c001fc34        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fc34        0x0
 .igot.plt      0x00000000c001fc34        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fc34        0x0
 .tm_clone_table
                0x00000000c001fc34        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fc34        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fc31      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fc31        0x3 
 .eh_frame      0x00000000c001fc34        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fc34        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fc34       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fc8c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fccc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fd38       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001fdbc        0x0
 .rel.got       0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001fdbc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001fdbc     0x4b8c
                0x00000000c001fdbc                sbss = .
 *(COMMON)
 *fill*         0x00000000c001fdbc        0x4 
 COMMON         0x00000000c001fdc0       0xa0 fs/iso9660/iso9660.32
                0x00000000c001fdc0                dcache
                0x00000000c001fe00                cdDriveLetter
                0x00000000c001fe20                icache
 *(.bss)
 .bss           0x00000000c001fe60        0x0 crti.32
 .bss           0x00000000c001fe60       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001fe80        0x4 acpica/utclib.32
 *fill*         0x00000000c001fe84       0x1c 
 .bss           0x00000000c001fea0      0x378 core/malloc.32
 .bss           0x00000000c0020218        0x0 libk/ctype.32
 .bss           0x00000000c0020218        0x0 libk/string.32
 .bss           0x00000000c0020218        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0020218        0x8 
 .bss           0x00000000c0020220       0x88 fs/fat/ff.32
 .bss           0x00000000c00202a8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c00202a8        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c00202a8       0x18 
 .bss           0x00000000c00202c0      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0020c58        0x6 core/computer.32
                0x00000000c0020c58                Krnl::computer
                0x00000000c0020c5c                KeIsPreemptionOn
                0x00000000c0020c5d                KeIsSchedulingOn
 *fill*         0x00000000c0020c5e        0x2 
 .bss           0x00000000c0020c60        0x6 core/gdt.32
                0x00000000c0020c60                gdtDescr
 .bss           0x00000000c0020c66        0x0 core/idle.32
 *fill*         0x00000000c0020c66        0x2 
 .bss           0x00000000c0020c68        0x6 core/idt.32
                0x00000000c0020c68                idtDescr
 .bss           0x00000000c0020c6e        0x0 core/kheap.32
 *fill*         0x00000000c0020c6e        0x2 
 .bss           0x00000000c0020c70        0x4 core/main.32
                0x00000000c0020c70                sysBootSettings
 .bss           0x00000000c0020c74       0x29 core/physmgr.32
                0x00000000c0020c74                Phys::forbidEvictions
                0x00000000c0020c78                Phys::currentPagePointer
                0x00000000c0020c7c                Phys::highestMem
                0x00000000c0020c80                Phys::oldPercent
                0x00000000c0020c84                Phys::usedPages
                0x00000000c0020c88                Phys::usablePages
                0x00000000c0020c8c                Phys::dmaUsage
 .bss           0x00000000c0020c9d        0x0 core/pipe.32
 *fill*         0x00000000c0020c9d        0x3 
 .bss           0x00000000c0020ca0        0x9 core/terminal.32
                0x00000000c0020ca0                terminalCycle
                0x00000000c0020ca4                activeTerminal
                0x00000000c0020ca8                VgaText::graphicMode
 *fill*         0x00000000c0020ca9        0x1 
 .bss           0x00000000c0020caa        0x2 core/tss.32
                0x00000000c0020caa                doubleFaultSelector
 *fill*         0x00000000c0020cac       0x14 
 .bss           0x00000000c0020cc0       0x84 core/unixfile.32
                0x00000000c0020cc0                sfileLpt
                0x00000000c0020d00                sfileCom
                0x00000000c0020d24                sfileNul
                0x00000000c0020d28                sfilePnt
                0x00000000c0020d2c                sfileAux
                0x00000000c0020d30                sfileCon
                0x00000000c0020d34                initialFilesAdded
                0x00000000c0020d38                unixFileLinkedList
 .bss           0x00000000c0020d44       0x10 core/virtmgr.32
                0x00000000c0020d44                twswaps
                0x00000000c0020d48                swapBalance
                0x00000000c0020d4c                Virt::swapfileBitmap
                0x00000000c0020d50                firstVAS
 .bss           0x00000000c0020d54        0x0 coreobjs/c++.32
 .bss           0x00000000c0020d54        0x0 dbg/kconsole.32
 .bss           0x00000000c0020d54        0x4 fs/vfs.32
                0x00000000c0020d54                installedFilesystems
 .bss           0x00000000c0020d58        0x0 hal/bus.32
 .bss           0x00000000c0020d58        0x0 hal/buzzer.32
 .bss           0x00000000c0020d58        0x8 hal/clock.32
                0x00000000c0020d58                User::dstOn
                0x00000000c0020d59                User::timezoneHalfHourOffset
                0x00000000c0020d5c                User::timezoneHourOffset
 .bss           0x00000000c0020d60        0x0 hal/device.32
 .bss           0x00000000c0020d60        0x0 hal/diskctrl.32
 .bss           0x00000000c0020d60        0x0 hal/diskphys.32
 .bss           0x00000000c0020d60        0x0 hal/fpu.32
 .bss           0x00000000c0020d60     0x2000 hal/intctrl.32
                0x00000000c0020d60                INT_contexts
                0x00000000c0021d60                INT_handlers
 .bss           0x00000000c0022d60      0x429 hal/keybrd.32
                0x00000000c0022d60                keyboardWaitingTaskList
                0x00000000c0022d64                keyboardSetupYet
                0x00000000c0022d68                guiKeyboardHandler
                0x00000000c0022d80                keystates
 *fill*         0x00000000c0023189       0x17 
 .bss           0x00000000c00231a0       0x88 hal/logidisk.32
                0x00000000c00231a0                diskAssignments
                0x00000000c00231c0                disks
 .bss           0x00000000c0023228        0x4 hal/mouse.32
                0x00000000c0023228                guiMouseHandler
 .bss           0x00000000c002322c        0x0 hal/partition.32
 .bss           0x00000000c002322c        0x0 hal/serial.32
 .bss           0x00000000c002322c        0x4 hal/timer.32
                0x00000000c002322c                milliTenthsSinceBoot
 .bss           0x00000000c0023230        0x0 hal/vcache.32
 .bss           0x00000000c0023230        0x4 hal/video.32
                0x00000000c0023230                screen
 *fill*         0x00000000c0023234        0xc 
 .bss           0x00000000c0023240      0x480 hw/acpi.32
                0x00000000c0023240                systemSleepFunction
                0x00000000c0023244                systemResetFunction
                0x00000000c0023248                systemShutdownFunction
                0x00000000c002324c                nextACPITable
                0x00000000c0023260                acpiTables
                0x00000000c0023460                usingXSDT
                0x00000000c0023464                MADTpointer
                0x00000000c0023468                RSDTpointer
                0x00000000c002346c                RSDPpointer
                0x00000000c0023470                nextAPICNMI
                0x00000000c0023480                apicNMIInfo
                0x00000000c0023500                legacyIRQFlags
                0x00000000c0023520                ioapicDiscoveryNumber
                0x00000000c0023540                ioapicFoundInMADT
                0x00000000c0023560                ioapicAddresses
                0x00000000c00235e0                ioapicGSIBase
                0x00000000c0023660                processorDiscoveryNumber
                0x00000000c0023680                matchingAPICID
                0x00000000c00236a0                processorID
 .bss           0x00000000c00236c0       0x10 hw/cpu.32
                0x00000000c00236c0                lastD
                0x00000000c00236c4                lastC
                0x00000000c00236c8                lastB
                0x00000000c00236cc                lastA
 .bss           0x00000000c00236d0        0x0 krnl/bootmsg.32
 .bss           0x00000000c00236d0        0x8 krnl/env.32
                0x00000000c00236d0                Krnl::userEnv
                0x00000000c00236d4                Krnl::systemEnv
 .bss           0x00000000c00236d8        0x0 krnl/inlines.32
 .bss           0x00000000c00236d8        0x1 krnl/panic.32
                0x00000000c00236d8                KeIsKernelInPanic
 *fill*         0x00000000c00236d9        0x7 
 .bss           0x00000000c00236e0       0x48 krnl/powctrl.32
                0x00000000c00236e0                Krnl::powCtrlOnBattery
                0x00000000c0023700                Krnl::currentPowerSettings
                0x00000000c0023724                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0023728        0x0 krnl/resolve.32
 .bss           0x00000000c0023728        0x0 krnl/signal.32
 .bss           0x00000000c0023728        0x0 krnl/syscalls.32
 .bss           0x00000000c0023728        0x0 reg/registry.32
 .bss           0x00000000c0023728        0x0 sys/eject.32
 .bss           0x00000000c0023728        0x0 sys/exit.32
 .bss           0x00000000c0023728        0x0 sys/getcwd.32
 .bss           0x00000000c0023728        0x0 sys/getpid.32
 .bss           0x00000000c0023728        0x0 sys/getramdata.32
 .bss           0x00000000c0023728        0x0 sys/getvgaptr.32
 .bss           0x00000000c0023728        0x0 sys/loaddll.32
 .bss           0x00000000c0023728        0x0 sys/read.32
 .bss           0x00000000c0023728        0x0 sys/registersignal.32
 .bss           0x00000000c0023728        0x0 sys/sbrk.32
 .bss           0x00000000c0023728        0x0 sys/setcwd.32
 .bss           0x00000000c0023728        0x0 sys/settime.32
 .bss           0x00000000c0023728        0x0 sys/timezone.32
 .bss           0x00000000c0023728        0x0 sys/write.32
 .bss           0x00000000c0023728        0x0 sys/wsbe.32
 .bss           0x00000000c0023728        0x0 sys/yield.32
 *fill*         0x00000000c0023728       0x18 
 .bss           0x00000000c0023740      0x7a4 thr/elf.32
                0x00000000c0023740                Thr::driverLookupNext
                0x00000000c0023760                Thr::driverLookupLen
                0x00000000c0023960                Thr::driverLookupAddr
                0x00000000c0023b60                Thr::driverNameLookup
                0x00000000c0023d60                Thr::kernelSymbols
                0x00000000c0023de0                Thr::kernelStringTable
                0x00000000c0023e60                Thr::kernelSymbolTable
                0x00000000c0023ee0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023ee4        0x4 
 .bss           0x00000000c0023ee8       0x68 thr/prcssthr.32
                0x00000000c0023ee8                cleanerThread
                0x00000000c0023eec                weNeedTheCleanerToNotBlock
                0x00000000c0023ef0                retValLockStuff
                0x00000000c0023ef4                retValSchedLock
                0x00000000c0023ef8                lockStuffLock
                0x00000000c0023efc                schedulerLock
                0x00000000c0023f00                taskSwitchesPostponedFlag
                0x00000000c0023f04                postponeTaskSwitchesCounter
                0x00000000c0023f08                irqDisableCounter
                0x00000000c0023f0c                terminatedTaskList
                0x00000000c0023f18                sleepingTaskList
                0x00000000c0023f24                taskList
                0x00000000c0023f30                kernelProcess
 *fill*         0x00000000c0023f50       0x10 
 .bss           0x00000000c0023f60       0x40 vm86/vm8086.32
                0x00000000c0023f60                Vm::vmRetV
                0x00000000c0023f64                Vm::vmDone
                0x00000000c0023f65                Vm::vmReady
                0x00000000c0023f68                Vm::vm86Thread
                0x00000000c0023f6c                Vm::vmToHostCommsPtr
                0x00000000c0023f80                Vm::vmToHostComms
 .bss           0x00000000c0023fa0       0x14 arch/i386/hal.32
                0x00000000c0023fa0                apic
                0x00000000c0023fa4                fpuOwner
                0x00000000c0023fa8                coproLoadFunc
                0x00000000c0023fac                coproSaveFunc
                0x00000000c0023fb0                gpFaultIntercept
 .bss           0x00000000c0023fb4        0x0 arch/i386/pic.32
 .bss           0x00000000c0023fb4        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023fb6        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023fb6        0xa 
 .bss           0x00000000c0023fc0       0xf0 fs/fat/vfslink.32
                0x00000000c0023fc0                FAT::fats
                0x00000000c0023fe0                FAT::vfsToFatRemaps
                0x00000000c0024060                fatToVFSRemaps
 .bss           0x00000000c00240b0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c00240b0       0x10 
 .bss           0x00000000c00240c0      0x820 fs/iso9660/vfslink.32
                0x00000000c00240c0                iso9660Owner
                0x00000000c00240c4                recentSector
                0x00000000c00240e0                recentBuffer
 .bss           0x00000000c00248e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00248e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00248e0        0x0 hw/bus/isa.32
 .bss           0x00000000c00248e0        0xd hw/bus/pci.32
                0x00000000c00248e0                thePCI
 .bss           0x00000000c00248ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00248ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00248ed        0x3 
 .bss           0x00000000c00248f0        0x8 hw/diskphys/ata.32
                0x00000000c00248f0                ataSectorsWritten
                0x00000000c00248f4                ataSectorsRead
 .bss           0x00000000c00248f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00248f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00248f8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c00248f8        0x8 
 .bss           0x00000000c0024900       0x41 hw/intctrl/apic.32
                0x00000000c0024900                noOfIOAPICs
                0x00000000c0024920                ioapics
                0x00000000c0024940                IOAPICsSetupYet
 .bss           0x00000000c0024941        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024941        0x3 
 .bss           0x00000000c0024944        0x4 hw/timer/pit.32
                0x00000000c0024944                pitFreq
 .bss           0x00000000c0024948        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024948        0x0 crtn.32
 .bss           0x00000000c0024948        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024948        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024948        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024948        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024948                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00294d4                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
