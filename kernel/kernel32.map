Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1fa3a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6c7 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006cac                Krnl::firstTask()
                0x00000000c0006dea                Computer::Computer()
                0x00000000c0006dea                Computer::Computer()
                0x00000000c0006e9a                Computer::setBootMessage(char const*)
                0x00000000c0006e9c                Computer::detectFeatures()
                0x00000000c00070c2                Computer::displayFeatures()
                0x00000000c00070c4                Computer::rdmsr(unsigned int)
                0x00000000c00070f0                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000712c                Computer::shutdown()
                0x00000000c0007144                Computer::restart()
                0x00000000c000715c                Computer::sleep()
                0x00000000c0007170                Computer::nmiEnabled()
                0x00000000c000717c                Computer::readCMOS(unsigned char)
                0x00000000c000719a                Computer::enableNMI(bool)
                0x00000000c00071b2                Computer::open(int, int, void*)
                0x00000000c0007286                Computer::disableNMI()
                0x00000000c0007296                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072ba                Computer::handleNMI()
 *fill*         0x00000000c0007325        0x1 
 .text          0x00000000c0007326      0x1db core/gdt.32
                0x00000000c0007326                GDTEntry::setBase(unsigned int)
                0x00000000c0007342                GDTEntry::setLimit(unsigned int)
                0x00000000c0007360                GDT::GDT()
                0x00000000c0007360                GDT::GDT()
                0x00000000c0007376                GDT::addEntry(GDTEntry)
                0x00000000c0007398                GDT::getNumberOfEntries()
                0x00000000c00073a0                GDT::flush()
                0x00000000c00073c2                GDT::setup()
 .text          0x00000000c0007501       0x1d core/idle.32
                0x00000000c0007501                idleFunction(void*)
 *fill*         0x00000000c000751e        0x2 
 .text          0x00000000c0007520      0x46c core/idt.32
                0x00000000c0007520                IDTEntry::IDTEntry(bool)
                0x00000000c0007520                IDTEntry::IDTEntry(bool)
                0x00000000c000759a                IDTEntry::setOffset(unsigned int)
                0x00000000c00075b0                IDT::IDT()
                0x00000000c00075b0                IDT::IDT()
                0x00000000c00075b2                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075ba                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d4                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000760c                IDT::flush()
                0x00000000c0007626                IDT::setup()
 .text          0x00000000c000798c      0x188 core/kheap.32
                0x00000000c000798c                sbrk
                0x00000000c0007a23                mmap
                0x00000000c0007a39                munmap
                0x00000000c0007a4f                liballoc_lock()
                0x00000000c0007a5d                liballoc_unlock()
                0x00000000c0007a73                liballoc_alloc(int)
                0x00000000c0007a8b                liballoc_free(void*, int)
                0x00000000c0007aa6                realloc
                0x00000000c0007aba                malloc
                0x00000000c0007aca                free
                0x00000000c0007ada                rfree
                0x00000000c0007aea                calloc
 .text          0x00000000c0007b14       0xc7 core/main.32
                0x00000000c0007b14                KeEntryPoint
 .text          0x00000000c0007bdb      0x644 core/physmgr.32
                0x00000000c0007bdb                Phys::allocateDMA(unsigned long)
                0x00000000c0007cc3                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfe                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3e                Phys::getPageState(unsigned long)
                0x00000000c0007d5a                Phys::freePage(unsigned long)
                0x00000000c0007dc3                Phys::allocatePage()
                0x00000000c0007e92                Phys::allocateContiguousPages(int)
                0x00000000c0007ef9                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f31                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000821f        0x1 
 .text          0x00000000c0008220      0x273 core/pipe.32
                0x00000000c0008220                Pipe::isAtty()
                0x00000000c0008224                Pipe::~Pipe()
                0x00000000c0008224                Pipe::~Pipe()
                0x00000000c0008248                Pipe::~Pipe()
                0x00000000c0008270                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008330                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000842c                Pipe::Pipe(int)
                0x00000000c000842c                Pipe::Pipe(int)
 *fill*         0x00000000c0008493        0x1 
 .text          0x00000000c0008494      0xab3 core/terminal.32
                0x00000000c0008494                VgaText::isAtty()
                0x00000000c0008498                VgaText::~VgaText()
                0x00000000c0008498                VgaText::~VgaText()
                0x00000000c00084bc                VgaText::~VgaText()
                0x00000000c00084e6                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008506                setTerminalScrollLock(bool)
                0x00000000c0008507                doTerminalCycle()
                0x00000000c0008508                addToTerminalCycle(VgaText*)
                0x00000000c0008509                scrollTerminalScrollLock(int)
                0x00000000c000850a                VgaText::updateTitle()
                0x00000000c000850c                VgaText::load()
                0x00000000c000850e                VgaText::updateCursor()
                0x00000000c0008524                VgaText::doANSI_SGR(int)
                0x00000000c0008598                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a8                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b8                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d8                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e4                VgaText::setTitleColour(VgaColour)
                0x00000000c00085f0                VgaText::setTitle(char*)
                0x00000000c00085f2                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008604                VgaText::scrollScreen()
                0x00000000c0008696                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a6                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008736                VgaText::getCursorX()
                0x00000000c000873e                VgaText::getCursorY()
                0x00000000c0008746                VgaText::setCursor(int, int)
                0x00000000c000875d                setActiveTerminal(VgaText*)
                0x00000000c00087a8                VgaText::clearScreen()
                0x00000000c00087f6                VgaText::setCursorX(int)
                0x00000000c000880e                VgaText::setCursorY(int)
                0x00000000c0008826                VgaText::incrementCursor(bool)
                0x00000000c000887a                VgaText::decrementCursor(bool)
                0x00000000c000889c                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000896c                VgaText::putchar(char)
                0x00000000c0008a64                VgaText::putx(unsigned int)
                0x00000000c0008aaa                VgaText::puts(char const*)
                0x00000000c0008ad0                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b1c                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6a                VgaText::VgaText(char const*)
                0x00000000c0008c6a                VgaText::VgaText(char const*)
                0x00000000c0008dba                VgaText::receiveKey(unsigned char)
                0x00000000c0008f46                VgaText::doUpdate()
 *fill*         0x00000000c0008f47        0x1 
 .text          0x00000000c0008f48      0x1a1 core/tss.32
                0x00000000c0008f48                TSS::TSS()
                0x00000000c0008f48                TSS::TSS()
                0x00000000c0008f58                TSS::setESP(unsigned long)
                0x00000000c0008f6c                TSS::flush()
                0x00000000c0008f8c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090e9        0x1 
 .text          0x00000000c00090ea      0x4ca core/unixfile.32
                0x00000000c00090ea                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009140                ReservedFilename::isAtty()
                0x00000000c000915c                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091ba                UnixFile::getFileDescriptor()
                0x00000000c00091c2                UnixFile::UnixFile(int)
                0x00000000c00091c2                UnixFile::UnixFile(int)
                0x00000000c0009376                ReservedFilename::ReservedFilename(int)
                0x00000000c0009376                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a8                UnixFile::~UnixFile()
                0x00000000c00093a8                UnixFile::~UnixFile()
                0x00000000c0009444                UnixFile::~UnixFile()
                0x00000000c000946c                ReservedFilename::~ReservedFilename()
                0x00000000c000946c                ReservedFilename::~ReservedFilename()
                0x00000000c0009490                ReservedFilename::~ReservedFilename()
                0x00000000c00094b7                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b4     0x1218 core/virtmgr.32
                0x00000000c00095b4                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ee                Virt::getPageState(unsigned long)
                0x00000000c0009611                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009736                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009759                Virt::swapIDToSector(unsigned long)
                0x00000000c000976f                Virt::allocateSwapfilePage()
                0x00000000c00097ef                Virt::virtualMemorySetup()
                0x00000000c0009840                Virt::setupPageSwapping(int)
                0x00000000c00098b2                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098b4                VAS::VAS(VAS*)
                0x00000000c00098b4                VAS::VAS(VAS*)
                0x00000000c00098e2                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009910                VAS::getPageTableEntry(unsigned long)
                0x00000000c000992f                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a6c                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a90                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aaa                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009aec                VAS::VAS()
                0x00000000c0009aec                VAS::VAS()
                0x00000000c0009b56                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b8a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb6                VAS::~VAS()
                0x00000000c0009bb6                VAS::~VAS()
                0x00000000c0009d24                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e28                VAS::allocatePages(int, int)
                0x00000000c0009f1e                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f76                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a06c                VAS::VAS(bool)
                0x00000000c000a06c                VAS::VAS(bool)
                0x00000000c000a2b6                VAS::evict(unsigned long)
                0x00000000c000a394                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a52e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a5a2                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ce                VAS::scanForEviction()
                0x00000000c000a6d1                mapVASFirstTime
 .text          0x00000000c000a7cc       0x5f coreobjs/c++.32
                0x00000000c000a7cc                __cxa_atexit
                0x00000000c000a7cf                __cxa_finalize
                0x00000000c000a7d0                __stack_chk_fail
                0x00000000c000a806                __cxa_pure_virtual
                0x00000000c000a817                operator new[](unsigned long)
                0x00000000c000a81c                operator delete(void*, unsigned long)
                0x00000000c000a821                operator delete[](void*)
                0x00000000c000a826                operator delete[](void*, unsigned long)
 .text          0x00000000c000a82b      0x254 dbg/kconsole.32
                0x00000000c000a82b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8cb                Dbg::logc(char)
                0x00000000c000a8eb                Dbg::logs(char*)
                0x00000000c000a90a                Dbg::logWriteInt(unsigned int)
                0x00000000c000a928                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a949                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa7f        0x1 
 .text          0x00000000c000aa80      0x2d4 dbg/usban.32
                0x00000000c000aa80                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aaec                __ubsan_handle_type_mismatch_v1
                0x00000000c000abc8                __ubsan_handle_pointer_overflow
                0x00000000c000abf4                __ubsan_handle_out_of_bounds
                0x00000000c000ac20                __ubsan_handle_add_overflow
                0x00000000c000ac4c                __ubsan_handle_load_invalid_value
                0x00000000c000ac78                __ubsan_handle_divrem_overflow
                0x00000000c000aca4                __ubsan_handle_mul_overflow
                0x00000000c000acd0                __ubsan_handle_sub_overflow
                0x00000000c000acfc                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad28                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad54      0x86d fs/symlink.32
                0x00000000c000aea3                KiDeinitialiseSymlinks(void*)
                0x00000000c000af36                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000afc8                KeInitialiseSymlinks()
                0x00000000c000b13c                KiIsSymlinkRegistered(char const*)
                0x00000000c000b2c0                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b467                KeCreateSymlink(char const*, char const*)
 *fill*         0x00000000c000b5c1        0x1 
 .text          0x00000000c000b5c2      0xd68 fs/vfs.32
                0x00000000c000b5c2                File::read(unsigned long long, void*, int*)
                0x00000000c000b61a                File::write(unsigned long long, void*, int*)
                0x00000000c000b672                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b6ca                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b6f8                File::isAtty()
                0x00000000c000b6fc                Directory::isAtty()
                0x00000000c000b700                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b706                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b70c                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b712                File::~File()
                0x00000000c000b712                File::~File()
                0x00000000c000b736                File::~File()
                0x00000000c000b760                Directory::~Directory()
                0x00000000c000b760                Directory::~Directory()
                0x00000000c000b784                Directory::~Directory()
                0x00000000c000b7ae                Filesystem::Filesystem()
                0x00000000c000b7ae                Filesystem::Filesystem()
                0x00000000c000b7d2                Filesystem::~Filesystem()
                0x00000000c000b7d2                Filesystem::~Filesystem()
                0x00000000c000b7e0                Filesystem::~Filesystem()
                0x00000000c000b804                Fs::getcwd(Process*, char*, int)
                0x00000000c000b82e                Fs::initVFS()
                0x00000000c000b858                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba72                File::File(char const*, Process*, bool)
                0x00000000c000ba72                File::File(char const*, Process*, bool)
                0x00000000c000bb50                File::File(char const*, Process*)
                0x00000000c000bb50                File::File(char const*, Process*)
                0x00000000c000bb6e                File::open(FileOpenMode)
                0x00000000c000bbcc                File::close()
                0x00000000c000bc2c                File::seek(unsigned long long)
                0x00000000c000bc82                File::truncate(unsigned long long)
                0x00000000c000bcd8                File::tell(unsigned long long*)
                0x00000000c000bd28                File::rewind()
                0x00000000c000bd3c                File::unlink()
                0x00000000c000bd88                File::rename(char const*)
                0x00000000c000bdd6                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be32                File::exists()
                0x00000000c000be70                File::stat(unsigned long long*, bool*)
                0x00000000c000bed1                Fs::setcwd(Process*, char*)
                0x00000000c000c030                Directory::Directory(char const*, Process*)
                0x00000000c000c030                Directory::Directory(char const*, Process*)
                0x00000000c000c0f8                Directory::open()
                0x00000000c000c154                Directory::close()
                0x00000000c000c1b4                Directory::unlink()
                0x00000000c000c200                Directory::rename(char const*)
                0x00000000c000c24e                Directory::exists()
                0x00000000c000c28c                Directory::read(dirent*)
                0x00000000c000c2d8                Directory::create()
                0x00000000c000c324                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c32a        0x2 
 .text          0x00000000c000c32c       0x86 hal/bus.32
                0x00000000c000c32c                Bus::Bus(char const*)
                0x00000000c000c32c                Bus::Bus(char const*)
                0x00000000c000c364                Bus::~Bus()
                0x00000000c000c364                Bus::~Bus()
                0x00000000c000c388                Bus::~Bus()
 .text          0x00000000c000c3b2       0x96 hal/buzzer.32
                0x00000000c000c3b2                beepThread(void*)
                0x00000000c000c3ef                Krnl::beep(int, int, bool)
 .text          0x00000000c000c448      0x45f hal/clock.32
                0x00000000c000c448                User::loadClockSettings(int)
                0x00000000c000c49a                Clock::Clock(char const*)
                0x00000000c000c49a                Clock::Clock(char const*)
                0x00000000c000c4d0                Clock::~Clock()
                0x00000000c000c4d0                Clock::~Clock()
                0x00000000c000c4f4                Clock::~Clock()
                0x00000000c000c51e                Clock::timeInSecondsLocal()
                0x00000000c000c566                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c5bf                datetimeToSeconds(datetime_t)
                0x00000000c000c6de                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c73e                secondsToDatetime(unsigned long long)
                0x00000000c000c882                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c8a7        0x1 
 .text          0x00000000c000c8a8      0x47a hal/device.32
                0x00000000c000c8a8                Device::hibernate()
                0x00000000c000c8aa                Device::wake()
                0x00000000c000c8ac                Device::detect()
                0x00000000c000c8ae                Device::disableLegacy()
                0x00000000c000c8b0                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c8b2                DriverlessDevice::close(int, int, void*)
                0x00000000c000c8b6                DriverlessDevice::detect()
                0x00000000c000c8b8                DriverlessDevice::open(int, int, void*)
                0x00000000c000c8cc                Device::~Device()
                0x00000000c000c8cc                Device::~Device()
                0x00000000c000c8da                Device::~Device()
                0x00000000c000c902                Device::findAndLoadDriver()
                0x00000000c000c910                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c936                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c976                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c9a0                Device::getParent()
                0x00000000c000c9ac                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c9ca                Device::addChild(Device*)
                0x00000000c000ca0e                Device::removeAllChildren()
                0x00000000c000ca54                Device::hibernateAll()
                0x00000000c000ca84                Device::wakeAll()
                0x00000000c000cab4                Device::detectAll()
                0x00000000c000cae4                Device::disableLegacyAll()
                0x00000000c000cae6                Device::loadDriversForAll()
                0x00000000c000cae8                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cb1e                Device::setName(char const*)
                0x00000000c000cb2c                Device::Device(char const*)
                0x00000000c000cb2c                Device::Device(char const*)
                0x00000000c000cc28                Device::getName()
                0x00000000c000cc32                Device::closeAll()
                0x00000000c000cc7e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc7e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ccb4                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ccf8                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000cd22        0x2 
 .text          0x00000000c000cd24       0x86 hal/diskctrl.32
                0x00000000c000cd24                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd24                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd5c                HardDiskController::~HardDiskController()
                0x00000000c000cd5c                HardDiskController::~HardDiskController()
                0x00000000c000cd80                HardDiskController::~HardDiskController()
 .text          0x00000000c000cdaa       0xe2 hal/diskphys.32
                0x00000000c000cdaa                PhysicalDisk::eject()
                0x00000000c000cdae                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cdae                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ce16                PhysicalDisk::startCache()
                0x00000000c000ce3e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce3e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce62                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ce8c        0x0 hal/fpu.32
 .text          0x00000000c000ce8c      0x359 hal/intctrl.32
                0x00000000c000ce8c                int_handler
                0x00000000c000cf16                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cf60                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d094                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d0c8                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d146                setupINTS()
                0x00000000c000d1a3                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000d1e5        0x1 
 .text          0x00000000c000d1e6      0x8be hal/keybrd.32
                0x00000000c000d1e6                startGUI(void*)
                0x00000000c000d254                startGUIVESA(void*)
                0x00000000c000d2c2                sendKeyToTerminal(unsigned char)
                0x00000000c000d39d                sendKeyboardToken(KeyboardToken)
                0x00000000c000d887                clearInternalKeybuffer(VgaText*)
                0x00000000c000d8bc                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000da1a                Keyboard::Keyboard(char const*)
                0x00000000c000da1a                Keyboard::Keyboard(char const*)
                0x00000000c000da56                Keyboard::~Keyboard()
                0x00000000c000da56                Keyboard::~Keyboard()
                0x00000000c000da7a                Keyboard::~Keyboard()
 .text          0x00000000c000daa4      0x3f8 hal/logidisk.32
                0x00000000c000daa4                LogicalDisk::close(int, int, void*)
                0x00000000c000daa8                LogicalDisk::~LogicalDisk()
                0x00000000c000daa8                LogicalDisk::~LogicalDisk()
                0x00000000c000dacc                LogicalDisk::~LogicalDisk()
                0x00000000c000daf6                LogicalDisk::open(int, int, void*)
                0x00000000c000db0a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db42                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000db88                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000db88                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc48                LogicalDisk::assignDriveLetter()
                0x00000000c000dd02                LogicalDisk::mount()
                0x00000000c000dd4a                LogicalDisk::unmount()
                0x00000000c000dd5a                LogicalDisk::eject()
                0x00000000c000dd6e                LogicalDisk::unassignDriveLetter()
                0x00000000c000ddc4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000de30                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000de9c       0x86 hal/mouse.32
                0x00000000c000de9c                Mouse::Mouse(char const*)
                0x00000000c000de9c                Mouse::Mouse(char const*)
                0x00000000c000ded4                Mouse::~Mouse()
                0x00000000c000ded4                Mouse::~Mouse()
                0x00000000c000def8                Mouse::~Mouse()
 .text          0x00000000c000df22       0x90 hal/nic.32
                0x00000000c000df22                NIC::getMAC()
                0x00000000c000df28                NIC::write(int, unsigned char*, int*)
                0x00000000c000df2e                NIC::NIC(char const*)
                0x00000000c000df2e                NIC::NIC(char const*)
                0x00000000c000df64                NIC::~NIC()
                0x00000000c000df64                NIC::~NIC()
                0x00000000c000df88                NIC::~NIC()
 .text          0x00000000c000dfb2      0x33b hal/partition.32
                0x00000000c000dfb2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e05a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e2ed        0x3 
 .text          0x00000000c000e2f0       0x86 hal/serial.32
                0x00000000c000e2f0                Serial::Serial(char const*)
                0x00000000c000e2f0                Serial::Serial(char const*)
                0x00000000c000e328                Serial::~Serial()
                0x00000000c000e328                Serial::~Serial()
                0x00000000c000e34c                Serial::~Serial()
 *fill*         0x00000000c000e376        0x2 
 .text          0x00000000c000e378      0x234 hal/timer.32
                0x00000000c000e378                Timer::Timer(char const*)
                0x00000000c000e378                Timer::Timer(char const*)
                0x00000000c000e3b0                Timer::~Timer()
                0x00000000c000e3b0                Timer::~Timer()
                0x00000000c000e3d4                Timer::~Timer()
                0x00000000c000e3fe                Timer::read()
                0x00000000c000e409                setupTimer(int)
                0x00000000c000e444                timerHandler(unsigned int)
 .text          0x00000000c000e5ac      0x444 hal/vcache.32
                0x00000000c000e5ac                VCache::VCache(PhysicalDisk*)
                0x00000000c000e5ac                VCache::VCache(PhysicalDisk*)
                0x00000000c000e71c                VCache::invalidateReadBuffer()
                0x00000000c000e72c                VCache::writeWriteBuffer()
                0x00000000c000e778                VCache::~VCache()
                0x00000000c000e778                VCache::~VCache()
                0x00000000c000e7d0                VCache::~VCache()
                0x00000000c000e7f8                VCache::write(unsigned long long, int, void*)
                0x00000000c000e8e6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e9f0      0x4c7 hal/video.32
                0x00000000c000e9f0                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ea3c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000eaac                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb2a                Video::clearScreen(unsigned int)
                0x00000000c000eb5e                Video::putpixel(int, int, unsigned int)
                0x00000000c000eb6c                Video::readPixelApprox(int, int)
                0x00000000c000eb80                Video::Video(char const*)
                0x00000000c000eb80                Video::Video(char const*)
                0x00000000c000ebb6                Video::~Video()
                0x00000000c000ebb6                Video::~Video()
                0x00000000c000ebda                Video::~Video()
                0x00000000c000ec04                Video::isMonochrome()
                0x00000000c000ec10                Video::getWidth()
                0x00000000c000ec1c                Video::getHeight()
                0x00000000c000ec28                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ece4                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ee4c                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eeb7        0x1 
 .text          0x00000000c000eeb8     0x1413 hw/acpi.32
                0x00000000c000eeb8                ACPI::close(int, int, void*)
                0x00000000c000eff4                findRSDP()
                0x00000000c000f08c                loadACPITables(unsigned char*)
                0x00000000c000f2f8                findRSDT(unsigned char*)
                0x00000000c000f450                findDataTable(unsigned char*, char*)
                0x00000000c000f4d0                scanMADT()
                0x00000000c000f988                ACPI::ACPI()
                0x00000000c000f988                ACPI::ACPI()
                0x00000000c000f9dc                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fad8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fba4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fbac                ACPI::detectPCI()
                0x00000000c000fdcc                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fe14                ACPI::sleep()
                0x00000000c000fe30                ACPI::open(int, int, void*)
 *fill*         0x00000000c00102cb        0x1 
 .text          0x00000000c00102cc      0xbc5 hw/cpu.32
                0x00000000c00102cc                CPU::close(int, int, void*)
                0x00000000c00102d0                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c00102ec                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0010304                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0010378                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00103fc                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c001042a                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0010458                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0010486                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00104b4                CPU::CPU()
                0x00000000c00104b4                CPU::CPU()
                0x00000000c0010542                CPU::displayFeatures()
                0x00000000c0010544                CPU::detectFeatures()
                0x00000000c0010c18                CPU::setupSMEP()
                0x00000000c0010c24                CPU::setupUMIP()
                0x00000000c0010c2e                CPU::setupTSC()
                0x00000000c0010c38                CPU::setupLargePages()
                0x00000000c0010c42                CPU::setupPAT()
                0x00000000c0010c7e                CPU::setupMTRR()
                0x00000000c0010c80                CPU::setupGlobalPages()
                0x00000000c0010c8a                CPU::allowUsermodeDataAccess()
                0x00000000c0010c9c                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010cae                CPU::setupSMAP()
                0x00000000c0010cbc                CPU::setupFeatures()
                0x00000000c0010d88                CPU::open(int, int, void*)
 .text          0x00000000c0010e91       0xb6 krnl/atexit.32
                0x00000000c0010e91                KeInitialiseAtexit()
                0x00000000c0010eb0                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010ee4                KeExecuteAtexit()
 .text          0x00000000c0010f47       0xdf krnl/bootmsg.32
                0x00000000c0010f47                KeDisplaySplashScreen()
                0x00000000c0010fc3                KeSetBootMessage(char const*)
 *fill*         0x00000000c0011026        0x2 
 .text          0x00000000c0011028       0x1d krnl/compat.32
                0x00000000c0011028                Krnl::handlePowerButton()
                0x00000000c0011038                Krnl::handleSleepButton()
 .text          0x00000000c0011045       0x2b krnl/crc32.32
                0x00000000c0011045                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0011070      0x5bf krnl/env.32
                0x00000000c0011070                EnvVarContainer::getEnv(char const*)
                0x00000000c00110ae                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0011170                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0011172                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0011396                EnvVarContainer::__loadSystem()
                0x00000000c00113b0                EnvVarContainer::__loadUser()
                0x00000000c00113b2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00113b2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00113d4                EnvVarContainer::~EnvVarContainer()
                0x00000000c00113d4                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011404                KeGetEnv(Process*, char const*)
                0x00000000c0011469                KeSetEnvSystem(char const*, char const*)
                0x00000000c0011483                KeSetEnvUser(char const*, char const*)
                0x00000000c00114a2                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00114b5                KeDeleteEnvSystem(char const*)
                0x00000000c00114b6                KeDeleteEnvUser(char const*)
                0x00000000c00114b7                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00114b8                KeNewProcessEnv(Process*)
                0x00000000c00114da                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0011526                KeLoadSystemEnv()
                0x00000000c0011554                KeLoadUserEnv()
                0x00000000c001157a                KeFlushEnv()
                0x00000000c001157b                KeGetProcessTotalEnvCount(Process*)
                0x00000000c001159b                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c001162f       0x94 krnl/inlines.32
                0x00000000c001162f                CPU::current()
                0x00000000c001163b                operator new(unsigned long)
                0x00000000c0011640                operator delete(void*)
                0x00000000c0011645                disableIRQs()
                0x00000000c0011647                enableIRQs()
                0x00000000c0011649                lockScheduler()
                0x00000000c0011651                unlockScheduler()
                0x00000000c0011660                lockStuff()
                0x00000000c001166e                unlockStuff()
                0x00000000c00116a8                Virt::getAKernelVAS()
                0x00000000c00116ae                __not_memcpy
 .text          0x00000000c00116c3        0xc krnl/panic.32
                0x00000000c00116c3                KePanic(char const*)
 .text          0x00000000c00116cf      0x142 krnl/powctrl.32
                0x00000000c00116cf                KePowerThread(void*)
                0x00000000c00116fd                KeChangePowerSettings(PowerSettings)
                0x00000000c0011713                KeUserIOReceived()
                0x00000000c001171e                KeHandlePowerButton()
                0x00000000c0011753                KeHandleSleepButton()
                0x00000000c0011788                KeSetupPowerManager()
 .text          0x00000000c0011811       0x9d krnl/random.32
                0x00000000c0011811                KeRand()
                0x00000000c0011853                KeSeedRand(unsigned int)
                0x00000000c001187c                KeInitRand()
 *fill*         0x00000000c00118ae        0x2 
 .text          0x00000000c00118b0      0x1bc krnl/resolve.32
                0x00000000c00118b0                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011a6c      0x322 krnl/signal.32
                0x00000000c0011a6c                KiSigKill(int)
                0x00000000c0011a80                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011a81                KiDefaultSignalHandlerPause(int)
                0x00000000c0011aad                KiDefaultSignalHandlerResume(int)
                0x00000000c0011ad9                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011ade                KeInitSignals()
                0x00000000c0011b30                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011b66                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011be3                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011cda                KiCheckSignalZ
                0x00000000c0011d1c                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011d57                KiFinishSignalZ
 .text          0x00000000c0011d8e      0xe10 krnl/syscalls.32
                0x00000000c0011d8e                SysSeekDir(regs*)
                0x00000000c0011d93                SysTellDir(regs*)
                0x00000000c0011d98                SysVerify(regs*)
                0x00000000c0011da2                SysGetArgc(regs*)
                0x00000000c0011db6                SysTTYName(regs*)
                0x00000000c0011dbe                SysFormatDisk(regs*)
                0x00000000c0011e35                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011e89                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011ee2                SysShutdown(regs*)
                0x00000000c0011f40                SysRealpath(regs*)
                0x00000000c0011f84                SysReadDir(regs*)
                0x00000000c0012004                SysIsATTY(regs*)
                0x00000000c001205e                SysSeek(regs*)
                0x00000000c00120b5                SysTell(regs*)
                0x00000000c0012122                SysSize(regs*)
                0x00000000c0012195                SysSizeFromFilename(regs*)
                0x00000000c00122c6                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00123f7                SysClose(regs*)
                0x00000000c0012457                SysOpenDir(regs*)
                0x00000000c00124d4                SysMakeDir(regs*)
                0x00000000c0012542                SysCloseDir(regs*)
                0x00000000c0012596                SysWait(regs*)
                0x00000000c00125b7                SysNotImpl(regs*)
                0x00000000c00125d2                SysPanic(regs*)
                0x00000000c00125ed                SysRmdir(regs*)
                0x00000000c0012652                SysUnlink(regs*)
                0x00000000c00126b7                SysGetArgv(regs*)
                0x00000000c0012704                SysUSleep(regs*)
                0x00000000c001272d                SysSpawn(regs*)
                0x00000000c00127a0                SysGetEnv(regs*)
                0x00000000c0012851                SysSetFatAttrib(regs*)
                0x00000000c00128c4                SysPipe(regs*)
                0x00000000c0012909                SysGetUnixTime(regs*)
                0x00000000c001291d                string_ends_with(char const*, char const*)
                0x00000000c0012965                SysOpen(regs*)
                0x00000000c0012b5c                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012b9e        0x2 
 .text          0x00000000c0012ba0      0x159 net/ethernet.32
                0x00000000c0012ba0                KeSwitchEndian16(unsigned short)
                0x00000000c0012bc4                KeSwitchEndian32(unsigned int)
                0x00000000c0012bf4                EthernetCRC32(unsigned char*, int)
                0x00000000c0012c98                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012cf9      0xd56 reg/cm.32
                0x00000000c0012cf9                CmOpen(char const*)
                0x00000000c0012e17                CmClose(Reghive_Tag*)
                0x00000000c0012e2d                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012e69                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012ee0                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012f1f                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012f51                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012f8d                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012fb5                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012fd6                CmExpand(Reghive_Tag*, int)
                0x00000000c0013051                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c00130d7                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c00131cb                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0013307                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0013368                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0013398                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c00133cf                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00133f9                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013439                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00134dd                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c001350b                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00136a9                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00136f6                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013770                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00137c3                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013887                zStrtok(char*, char const*)
                0x00000000c00138f9                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c001397a                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013a1d                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0013a4f      0x52a reg/registry.32
                0x00000000c0013a4f                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013bc0                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013d15                Reg::getLine(char*, char*, char*)
                0x00000000c0013d4c                Reg::readInt(char*, char*, int*)
                0x00000000c0013e3a                Reg::readString(char*, char*, char*, int)
                0x00000000c0013ebb                Reg::readBool(char*, char*, bool*)
                0x00000000c0013ee0                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013f0c                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013f38                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013f79       0x36 sys/eject.32
                0x00000000c0013f79                SysEject(regs*)
 .text          0x00000000c0013faf       0x18 sys/exit.32
                0x00000000c0013faf                SysExit(regs*)
 .text          0x00000000c0013fc7       0x1f sys/getcwd.32
                0x00000000c0013fc7                SysGetCwd(regs*)
 .text          0x00000000c0013fe6        0xc sys/getpid.32
                0x00000000c0013fe6                SysGetPID(regs*)
 .text          0x00000000c0013ff2       0x1a sys/getramdata.32
                0x00000000c0013ff2                SysGetRAMData(regs*)
 .text          0x00000000c001400c       0x82 sys/getvgaptr.32
                0x00000000c001400c                SysGetVGAPtr(regs*)
 *fill*         0x00000000c001408e        0x2 
 .text          0x00000000c0014090       0xb9 sys/kill.32
                0x00000000c0014090                SysKill(regs*)
 .text          0x00000000c0014149       0xa8 sys/loaddll.32
                0x00000000c0014149                SysLoadDLL(regs*)
 .text          0x00000000c00141f1       0x68 sys/read.32
                0x00000000c00141f1                SysRead(regs*)
 .text          0x00000000c0014259       0x29 sys/registersignal.32
                0x00000000c0014259                SysRegisterSignal(regs*)
 .text          0x00000000c0014282      0x19c sys/registry.32
                0x00000000c0014282                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00142f9                SysRegistryReadExtent(regs*)
                0x00000000c0014341                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014369                SysRegistryEnterDirectory(regs*)
                0x00000000c0014391                SysRegistryGetNext(regs*)
                0x00000000c00143b9                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00143f3                SysRegistryOpen(regs*)
                0x00000000c0014407                SysRegistryClose(regs*)
 .text          0x00000000c001441e       0x55 sys/sbrk.32
                0x00000000c001441e                SysSbrk(regs*)
 .text          0x00000000c0014473       0x1c sys/setcwd.32
                0x00000000c0014473                SysSetCwd(regs*)
 .text          0x00000000c001448f       0x96 sys/settime.32
                0x00000000c001448f                SysSetTime(regs*)
 .text          0x00000000c0014525       0x73 sys/symlink.32
                0x00000000c0014525                SysSymlink(regs*)
 .text          0x00000000c0014598       0x4a sys/timezone.32
                0x00000000c0014598                SysTimezone(regs*)
 .text          0x00000000c00145e2       0xfc sys/truncate.32
                0x00000000c00145e2                SysTruncate(regs*)
 .text          0x00000000c00146de       0x68 sys/write.32
                0x00000000c00146de                SysWrite(regs*)
 .text          0x00000000c0014746       0x62 sys/wsbe.32
                0x00000000c0014746                SysWsbe(regs*)
 .text          0x00000000c00147a8       0x25 sys/yield.32
                0x00000000c00147a8                SysYield(regs*)
 .text          0x00000000c00147cd     0x11e6 thr/elf.32
                0x00000000c00147cd                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014a5b                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014c6d                Thr::runtimeReferenceHelper()
                0x00000000c0014c80                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014ccf                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014f8d                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00156c6                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00156f8                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001572f                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015749                Thr::loadDLL(char const*, bool)
                0x00000000c001597a                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00159b3        0x1 
 .text          0x00000000c00159b4     0x13d9 thr/prcssthr.32
                0x00000000c00159b4                userModeEntryPoint(void*)
                0x00000000c00159dc                changeTSS
                0x00000000c0015a0c                switchToThread(ThreadControlBlock*)
                0x00000000c0015abc                Process::addArgs(char**)
                0x00000000c0015b28                Process::Process(char const*, Process*, char**)
                0x00000000c0015b28                Process::Process(char const*, Process*, char**)
                0x00000000c0015d34                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015d34                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015f08                taskStartupFunction
                0x00000000c0015f14                Semaphore::Semaphore(int)
                0x00000000c0015f14                Semaphore::Semaphore(int)
                0x00000000c0015f44                Mutex::Mutex()
                0x00000000c0015f44                Mutex::Mutex()
                0x00000000c0015f58                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016064                Process::createUserThread()
                0x00000000c0016084                setupMultitasking(void (*)())
                0x00000000c00161a8                schedule()
                0x00000000c001623c                Semaphore::tryAcquire()
                0x00000000c0016310                Semaphore::assertLocked(char const*)
                0x00000000c0016394                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00163bc                blockTask(TaskState)
                0x00000000c00163f4                waitTask(int, int*, int)
                0x00000000c0016438                milliTenthSleepUntil(unsigned int)
                0x00000000c00164d8                milliTenthSleep(unsigned int)
                0x00000000c00164ec                sleep(unsigned int)
                0x00000000c0016508                Semaphore::acquire()
                0x00000000c00165d0                taskReturned
                0x00000000c0016614                Thr::processFromPID(int)
                0x00000000c00166c0                unblockTask(ThreadControlBlock*)
                0x00000000c001676c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016a40                cleanerTaskFunction(void*)
                0x00000000c0016b48                terminateTask(int)
                0x00000000c0016c34                Thr::terminateFromIRQ(int)
                0x00000000c0016c44                Semaphore::release()
 .text          0x00000000c0016d8d      0xc27 vm86/vm8086.32
                0x00000000c0016d8d                Vm::inbv(unsigned short)
                0x00000000c0016da0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016dd6                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016de6                Vm::getSegment(unsigned int)
                0x00000000c0016dee                Vm::getOffset(unsigned int)
                0x00000000c0016df3                Vm::mainloop2()
                0x00000000c0016e2d                Vm::mainVm8086Loop(void*)
                0x00000000c0016e3d                Vm::mainloop3(unsigned long)
                0x00000000c0016e63                Vm::initialise8086()
                0x00000000c0016ea6                Vm::finish8086()
                0x00000000c0016f07                Vm::getOutput8086(unsigned char*)
                0x00000000c0016f2c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016fe5                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017183                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001721c                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001722d                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001723f                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017250                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017265                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001727b                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017290                Vm::faultHandler(regs*)
 .text          0x00000000c00179b4      0xaf0 arch/i386/hal.32
                0x00000000c00179b4                noCopro(unsigned long)
                0x00000000c00179b5                nmiHandler(regs*, void*)
                0x00000000c00179ce                doubleFault(regs*, void*)
                0x00000000c00179e7                displayDebugInfo(regs*)
                0x00000000c0017d6c                HalSystemIdle()
                0x00000000c0017de8                displayProgramFault(char const*)
                0x00000000c0017e34                gpFault(regs*, void*)
                0x00000000c0017e9b                pgFault(regs*, void*)
                0x00000000c0017f24                otherISRHandler(regs*, void*)
                0x00000000c0017f58                opcodeFault(regs*, void*)
                0x00000000c0017fdb                i386SaveCoprocessor(void*)
                0x00000000c0017fef                i386LoadCoprocessor(void*)
                0x00000000c0018003                x87EmulHandler(regs*, void*)
                0x00000000c00180a0                HalInitialiseCoprocessor()
                0x00000000c001814e                HalPanic(char const*)
                0x00000000c0018262                HalQueryPerformanceCounter()
                0x00000000c001827d                HalInitialise()
                0x00000000c0018433                HalMakeBeep(int)
                0x00000000c001846d                HalGetRand()
                0x00000000c0018470                HalEndOfInterrupt(int)
                0x00000000c00184a1                HalRestart()
                0x00000000c00184a2                HalShutdown()
                0x00000000c00184a3                HalSleep()
 .text          0x00000000c00184a4      0x2dc arch/i386/pic.32
                0x00000000c00184a4                picIoWait()
                0x00000000c00184ac                picDisable()
                0x00000000c00184e0                picGetIRQReg(int)
                0x00000000c001855c                picOpen()
                0x00000000c00186e0                picEOI(int)
 .text          0x00000000c0018780      0x674 arch/i386/rtc.32
                0x00000000c0018780                RTC::open(int, int, void*)
                0x00000000c0018784                RTC::close(int, int, void*)
                0x00000000c0018788                RTC::timeInSecondsUTC()
                0x00000000c001879a                RTC::timeInDatetimeUTC()
                0x00000000c00187c0                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00187fe                RTC::~RTC()
                0x00000000c00187fe                RTC::~RTC()
                0x00000000c0018822                RTC::~RTC()
                0x00000000c001884c                RTC::get_update_in_progress_flag()
                0x00000000c0018866                RTC::completeRTCRefresh()
                0x00000000c0018b46                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018cf4                rtcIRQHandler(regs*, void*)
                0x00000000c0018d3a                RTC::RTC()
                0x00000000c0018d3a                RTC::RTC()
 .text          0x00000000c0018df4      0x1f4 arch/i386/vga.32
                0x00000000c0018df4                HalConsoleScroll(int, int)
                0x00000000c0018efc                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018f60                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018fe8     0x14cf fs/fat/vfslink.32
                0x00000000c0018fe8                FAT::getName()
                0x00000000c0018ff0                FAT::tell(void*, unsigned long long*)
                0x00000000c001902c                FAT::stat(void*, unsigned long long*)
                0x00000000c0019068                FAT::~FAT()
                0x00000000c0019068                FAT::~FAT()
                0x00000000c001908c                FAT::~FAT()
                0x00000000c00190b4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019158                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001921c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019400                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001961c                FAT::allocateSwapfile(char const*, int)
                0x00000000c00197dc                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001994c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00199ac                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019a0c                FAT::close(void*)
                0x00000000c0019a60                FAT::closeDir(void*)
                0x00000000c0019ab4                FAT::truncate(void*, unsigned long long)
                0x00000000c0019b20                FAT::seek(void*, unsigned long long)
                0x00000000c0019b78                fatWrapperReadDisk
                0x00000000c0019bb8                fatWrapperWriteDisk
                0x00000000c0019bf8                fatWrapperIoctl
                0x00000000c0019d14                FAT::FAT()
                0x00000000c0019d14                FAT::FAT()
                0x00000000c0019d6c                FAT::fixFilepath(char*)
                0x00000000c0019dac                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019f20                FAT::openDir(char const*, void**)
                0x00000000c0019fd0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a0c8                FAT::unlink(char const*)
                0x00000000c001a148                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a2fc                FAT::rename(char const*, char const*)
                0x00000000c001a3c8                FAT::mkdir(char const*)
                0x00000000c001a448                FAT::exists(char const*)
 *fill*         0x00000000c001a4b7        0x1 
 .text          0x00000000c001a4b8       0x94 fs/iso9660/helper.32
                0x00000000c001a4b8                isoReadDiscSectorHelper
                0x00000000c001a514                iso_kprintf
                0x00000000c001a530                iso_kprintfd
 .text          0x00000000c001a54c      0x71c fs/iso9660/vfslink.32
                0x00000000c001a54c                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a552                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a558                ISO9660::getName()
                0x00000000c001a55e                ISO9660::closeDir(void*)
                0x00000000c001a568                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a56e                ISO9660::unlink(char const*)
                0x00000000c001a574                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a57a                ISO9660::rename(char const*, char const*)
                0x00000000c001a580                ISO9660::mkdir(char const*)
                0x00000000c001a586                ISO9660::~ISO9660()
                0x00000000c001a586                ISO9660::~ISO9660()
                0x00000000c001a5aa                ISO9660::~ISO9660()
                0x00000000c001a5d2                ISO9660::exists(char const*)
                0x00000000c001a5e6                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a6cc                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a714                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a756                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a794                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a7e6                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a928                ISO9660::close(void*)
                0x00000000c001a958                ISO9660::openDir(char const*, void**)
                0x00000000c001aa32                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001ab4f                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001abce                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ac40                ISO9660::ISO9660()
                0x00000000c001ac40                ISO9660::ISO9660()
 .text          0x00000000c001ac68      0x26c hal/sound/sndcard.32
                0x00000000c001ac68                SoundCard::beginPlayback()
                0x00000000c001ac76                SoundCard::stopPlayback()
                0x00000000c001ac84                SoundCard::SoundCard(char const*)
                0x00000000c001ac84                SoundCard::SoundCard(char const*)
                0x00000000c001ad22                SoundCard::~SoundCard()
                0x00000000c001ad22                SoundCard::~SoundCard()
                0x00000000c001ad46                SoundCard::~SoundCard()
                0x00000000c001ad70                SoundCard::configureRates(int, int, int)
                0x00000000c001ada0                SoundCard::getSamples16(int, short*)
                0x00000000c001adfc                SoundCard::getSamples32(int, int*)
                0x00000000c001ae82                SoundCard::addChannel(SoundPort*)
                0x00000000c001aec0                SoundCard::removeChannel(int)
 .text          0x00000000c001aed4      0x38a hal/sound/sndport.32
                0x00000000c001aed4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001aed4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001af60                SoundPort::~SoundPort()
                0x00000000c001af60                SoundPort::~SoundPort()
                0x00000000c001af94                SoundPort::unpause()
                0x00000000c001afa0                SoundPort::pause()
                0x00000000c001afac                SoundPort::getBufferUsed()
                0x00000000c001afb4                SoundPort::getBufferSize()
                0x00000000c001afbc                SoundPort::buffer16(short*, int)
                0x00000000c001b048                SoundPort::buffer32(int*, int)
                0x00000000c001b0d4                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b1a0                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b25e        0x0 hw/bus/isa.32
 .text          0x00000000c001b25e      0xbb7 hw/bus/pci.32
                0x00000000c001b25e                PCI::open(int, int, void*)
                0x00000000c001b27c                PCI::close(int, int, void*)
                0x00000000c001b280                PCI::PCI()
                0x00000000c001b280                PCI::PCI()
                0x00000000c001b318                PCI::readBAR8(unsigned int, int)
                0x00000000c001b334                PCI::readBAR16(unsigned int, int)
                0x00000000c001b352                PCI::readBAR32(unsigned int, int)
                0x00000000c001b36e                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b38e                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b3b0                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b3d0                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b446                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b4f0                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b514                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b53c                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b586                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5ae                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5d2                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5f6                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b61e                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b682                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b76a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001ba30                PCI::checkBus(unsigned char)
                0x00000000c001ba54                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bbce                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bd4a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bdbc                PCI::detect()
 *fill*         0x00000000c001be15        0x1 
 .text          0x00000000c001be16      0xb9a hw/diskctrl/ide.32
                0x00000000c001be16                IDE::close(int, int, void*)
                0x00000000c001be1a                IDE::IDE()
                0x00000000c001be1a                IDE::IDE()
                0x00000000c001be4e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001be60                selectDrive(unsigned char, unsigned char)
                0x00000000c001be62                IDE::getBase(unsigned char)
                0x00000000c001be74                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bf34                IDE::read(unsigned char, unsigned char)
                0x00000000c001bfe2                IDE::waitInterrupt(unsigned char)
                0x00000000c001c044                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c060                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c07c                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c0c6                IDE::open(int, int, void*)
                0x00000000c001c504                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c5d4                IDE::detect()
                0x00000000c001c8a2                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c95c                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c9b0      0x32a hw/diskctrl/satabus.32
                0x00000000c001c9b0                SATABus::close(int, int, void*)
                0x00000000c001c9b4                SATABus::detect()
                0x00000000c001c9b6                SATABus::SATABus()
                0x00000000c001c9b6                SATABus::SATABus()
                0x00000000c001ca3c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca6e                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cab6                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cad6                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cb00                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cc10                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001ccba                SATABus::open(int, int, void*)
 .text          0x00000000c001ccda      0x93f hw/diskphys/ata.32
                0x00000000c001ccda                ATA::close(int, int, void*)
                0x00000000c001ccfe                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cd00                ATA::ATA()
                0x00000000c001cd00                ATA::ATA()
                0x00000000c001cd2e                ATA::flush(bool)
                0x00000000c001cd7c                ATA::readyForCommand()
                0x00000000c001cdc8                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d15e                ATA::detectCHS()
                0x00000000c001d188                ATA::open(int, int, void*)
                0x00000000c001d254                combineCharAndColour(char, unsigned char)
                0x00000000c001d265                combineColours(unsigned char, unsigned char)
                0x00000000c001d272                ATA::read(unsigned long long, int, void*)
                0x00000000c001d448                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d619        0x1 
 .text          0x00000000c001d61a      0x618 hw/diskphys/atapi.32
                0x00000000c001d61a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d620                ATAPI::close(int, int, void*)
                0x00000000c001d644                ATAPI::ATAPI()
                0x00000000c001d644                ATAPI::ATAPI()
                0x00000000c001d672                ATAPI::readyForCommand()
                0x00000000c001d6c4                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d98c                ATAPI::diskRemoved()
                0x00000000c001d9c6                ATAPI::eject()
                0x00000000c001da0e                ATAPI::diskInserted()
                0x00000000c001da1a                ATAPI::detectMedia()
                0x00000000c001dad8                ATAPI::open(int, int, void*)
                0x00000000c001dbb8                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dc32      0x807 hw/diskphys/sata.32
                0x00000000c001dc32                SATA::close(int, int, void*)
                0x00000000c001dc56                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001dc58                SATA::open(int, int, void*)
                0x00000000c001dd02                SATA::SATA()
                0x00000000c001dd02                SATA::SATA()
                0x00000000c001dd30                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001df84                SATA::read(unsigned long long, int, void*)
                0x00000000c001e1d4                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e439        0x1 
 .text          0x00000000c001e43a      0x5d0 hw/diskphys/satapi.32
                0x00000000c001e43a                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e440                SATAPI::close(int, int, void*)
                0x00000000c001e464                SATAPI::SATAPI()
                0x00000000c001e464                SATAPI::SATAPI()
                0x00000000c001e492                SATAPI::diskRemoved()
                0x00000000c001e494                SATAPI::diskInserted()
                0x00000000c001e4b0                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e78e                SATAPI::eject()
                0x00000000c001e7ca                SATAPI::detectMedia()
                0x00000000c001e820                SATAPI::open(int, int, void*)
                0x00000000c001e920                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ea0a      0x45b hw/intctrl/apic.32
                0x00000000c001ea0a                IOAPIC::close(int, int, void*)
                0x00000000c001ea10                apicGetBase()
                0x00000000c001ea56                IOAPIC::IOAPIC()
                0x00000000c001ea56                IOAPIC::IOAPIC()
                0x00000000c001ea7e                apicOpen()
                0x00000000c001ebfa                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ec2c                IOAPIC::read(int)
                0x00000000c001ec54                IOAPIC::open(int, int, void*)
                0x00000000c001ed3a                IOAPIC::write(int, int)
                0x00000000c001ed66                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ee65        0x3 
 .text          0x00000000c001ee68       0xf0 hw/timer/apictimer.32
                0x00000000c001ee68                APICTimer::close(int, int, void*)
                0x00000000c001ee70                apicTimerHandler(regs*, void*)
                0x00000000c001ee98                APICTimer::open(int, int, void*)
                0x00000000c001ef08                APICTimer::write(int)
                0x00000000c001ef30                APICTimer::APICTimer()
                0x00000000c001ef30                APICTimer::APICTimer()
 .text          0x00000000c001ef58      0x1ad hw/timer/pit.32
                0x00000000c001ef58                PIT::write(int)
                0x00000000c001efdc                pitHandler(regs*, void*)
                0x00000000c001f004                PIT::open(int, int, void*)
                0x00000000c001f054                PIT::close(int, int, void*)
                0x00000000c001f084                PIT::PIT()
                0x00000000c001f084                PIT::PIT()
 *fill*         0x00000000c001f105        0xb 
 .text          0x00000000c001f110       0x83 arch/i386/avx.32
                0x00000000c001f110                avxDetect
                0x00000000c001f13a                avxSave
                0x00000000c001f14b                avxLoad
                0x00000000c001f15c                avxInit
                0x00000000c001f17e                avxClose
                0x00000000c001f17f                wouldSheSayYes
 *fill*         0x00000000c001f193        0xd 
 .text          0x00000000c001f1a0      0x2ec arch/i386/interrupt.32
                0x00000000c001f1a0                isr0
                0x00000000c001f1b0                isr1
                0x00000000c001f1ba                isr2
                0x00000000c001f1c4                isr3
                0x00000000c001f1ce                isr4
                0x00000000c001f1d8                isr5
                0x00000000c001f1e2                isr6
                0x00000000c001f1ec                isr7
                0x00000000c001f1f6                isr8
                0x00000000c001f1fe                isr9
                0x00000000c001f208                isr10
                0x00000000c001f210                isr11
                0x00000000c001f218                isr12
                0x00000000c001f220                isr13
                0x00000000c001f23a                isr14
                0x00000000c001f242                isr15
                0x00000000c001f24c                isr16
                0x00000000c001f256                isr17
                0x00000000c001f260                isr18
                0x00000000c001f26a                irq3
                0x00000000c001f274                irq4
                0x00000000c001f27e                irq5
                0x00000000c001f288                irq6
                0x00000000c001f292                irq7
                0x00000000c001f29c                irq8
                0x00000000c001f2a6                irq9
                0x00000000c001f2b0                irq10
                0x00000000c001f2ba                irq11
                0x00000000c001f2c4                irq12
                0x00000000c001f2ce                irq13
                0x00000000c001f2d8                irq14
                0x00000000c001f2e2                irq15
                0x00000000c001f2ec                irq1
                0x00000000c001f2f3                irq2
                0x00000000c001f2fa                isr96
                0x00000000c001f301                irq0
                0x00000000c001f306                int_common_stub
                0x00000000c001f338                syscall_common_stub
                0x00000000c001f43c                irq16
                0x00000000c001f446                irq17
                0x00000000c001f450                irq18
                0x00000000c001f45a                irq19
                0x00000000c001f464                irq20
                0x00000000c001f46e                irq21
                0x00000000c001f478                irq22
                0x00000000c001f482                irq23
 *fill*         0x00000000c001f48c        0x4 
 .text          0x00000000c001f490       0x10 arch/i386/rdrand.32
                0x00000000c001f490                i386GetRDRAND
 .text          0x00000000c001f4a0       0x39 arch/i386/sse.32
                0x00000000c001f4a0                absolutelyNoChanceInHell
                0x00000000c001f4a0                sseDetect
                0x00000000c001f4b8                sseSave
                0x00000000c001f4c0                sseLoad
                0x00000000c001f4c8                sseInit
                0x00000000c001f4d8                sseClose
 *fill*         0x00000000c001f4d9        0x7 
 .text          0x00000000c001f4e0       0x49 arch/i386/x87.32
                0x00000000c001f4e6                x87Detect
                0x00000000c001f501                x87Save
                0x00000000c001f508                x87Load
                0x00000000c001f50f                x87Init
                0x00000000c001f528                x87Close
 *fill*         0x00000000c001f529        0x3 
 .text          0x00000000c001f52c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f551        0x0 crtn.32
 *fill*         0x00000000c001f551        0x3 
 .text          0x00000000c001f554      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f554                __divdi3
 *fill*         0x00000000c001f69f        0x1 
 .text          0x00000000c001f6a0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f6a0                __moddi3
 *fill*         0x00000000c001f81e        0x2 
 .text          0x00000000c001f820       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f820                __udivdi3
 *fill*         0x00000000c001f91f        0x1 
 .text          0x00000000c001f920      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f920                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001fa40        0x0
 .iplt          0x00000000c001fa40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001fa3a        0xf
 .init          0x00000000c001fa3a        0x3 crti.32
                0x00000000c001fa3a                _init
 .init          0x00000000c001fa3d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001fa42        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001fa47        0x2 crtn.32

.fini           0x00000000c001fa49        0xa
 .fini          0x00000000c001fa49        0x3 crti.32
                0x00000000c001fa49                _fini
 .fini          0x00000000c001fa4c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001fa51        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001fa54       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001fa54       0x23 core/computer.32
                0x00000000c001fa54                Computer::~Computer()
                0x00000000c001fa54                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001fa78       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001fa78       0x2a core/computer.32
                0x00000000c001fa78                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001faa2       0x21
 .text._Z10idleCommonv
                0x00000000c001faa2       0x21 core/idle.32
                0x00000000c001faa2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fac4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fac4        0x2 core/unixfile.32
                0x00000000c001fac4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001fac4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fac6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fac6       0x42 core/unixfile.32
                0x00000000c001fac6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001fac6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fb08       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fb08       0xd3 core/unixfile.32
                0x00000000c001fb08                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fbdc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fbdc        0x7 core/unixfile.32
                0x00000000c001fbdc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fbe4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fbe4       0xa1 core/unixfile.32
                0x00000000c001fbe4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc86        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc86        0x8 core/unixfile.32
                0x00000000c001fc86                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc8e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc8e       0x1a hal/device.32
                0x00000000c001fc8e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fc8e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fca8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fca8       0x2a hal/device.32
                0x00000000c001fca8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fcd2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fcd2       0xdc hal/device.32
                0x00000000c001fcd2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fdae       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fdae       0x42 hal/device.32
                0x00000000c001fdae                LinkedList<Device>::LinkedList()
                0x00000000c001fdae                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fdf0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fdf0       0x1c hal/timer.32
                0x00000000c001fdf0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fe0c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fe0c        0x7 hal/timer.32
                0x00000000c001fe0c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fe14       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fe14       0xbc hal/timer.32
                0x00000000c001fe14                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fed0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fed0       0xda hal/timer.32
                0x00000000c001fed0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ffac       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ffac       0x23 hw/acpi.32
                0x00000000c001ffac                ACPI::~ACPI()
                0x00000000c001ffac                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ffd0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ffd0       0x2a hw/acpi.32
                0x00000000c001ffd0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fffc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fffc        0x2 hw/acpi.32
                0x00000000c001fffc                LinkedList<Device>::~LinkedList()
                0x00000000c001fffc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020000       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020000       0x1c hw/acpi.32
                0x00000000c0020000                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c002001c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c002001c        0x7 hw/acpi.32
                0x00000000c002001c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020024       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020024       0xb8 hw/acpi.32
                0x00000000c0020024                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c00200dc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00200dc       0x23 hw/cpu.32
                0x00000000c00200dc                CPU::~CPU()
                0x00000000c00200dc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020100       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020100       0x2a hw/cpu.32
                0x00000000c0020100                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002012c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002012c        0x8 sys/kill.32
                0x00000000c002012c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020134        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020134        0x2 thr/prcssthr.32
                0x00000000c0020134                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020134                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020138       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020138       0x49 thr/prcssthr.32
                0x00000000c0020138                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020138                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020184       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020184       0x42 thr/prcssthr.32
                0x00000000c0020184                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020184                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c00201c6       0x23
 .text._ZN3PCID2Ev
                0x00000000c00201c6       0x23 hw/bus/pci.32
                0x00000000c00201c6                PCI::~PCI()
                0x00000000c00201c6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00201ea       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00201ea       0x2a hw/bus/pci.32
                0x00000000c00201ea                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020214       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020214       0x23 hw/diskctrl/ide.32
                0x00000000c0020214                IDE::~IDE()
                0x00000000c0020214                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020238       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020238       0x2a hw/diskctrl/ide.32
                0x00000000c0020238                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020262       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020262       0x23 hw/diskctrl/satabus.32
                0x00000000c0020262                SATABus::~SATABus()
                0x00000000c0020262                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020286       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020286       0x2a hw/diskctrl/satabus.32
                0x00000000c0020286                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c00202b0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c00202b0       0x23 hw/diskphys/ata.32
                0x00000000c00202b0                ATA::~ATA()
                0x00000000c00202b0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00202d4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00202d4       0x2a hw/diskphys/ata.32
                0x00000000c00202d4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00202fe       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00202fe       0x23 hw/diskphys/atapi.32
                0x00000000c00202fe                ATAPI::~ATAPI()
                0x00000000c00202fe                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020322       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020322       0x2a hw/diskphys/atapi.32
                0x00000000c0020322                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002034c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002034c       0x23 hw/diskphys/sata.32
                0x00000000c002034c                SATA::~SATA()
                0x00000000c002034c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020370       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020370       0x2a hw/diskphys/sata.32
                0x00000000c0020370                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002039a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002039a       0x23 hw/diskphys/satapi.32
                0x00000000c002039a                SATAPI::~SATAPI()
                0x00000000c002039a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00203be       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00203be       0x2a hw/diskphys/satapi.32
                0x00000000c00203be                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00203e8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00203e8       0x23 hw/intctrl/apic.32
                0x00000000c00203e8                IOAPIC::~IOAPIC()
                0x00000000c00203e8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002040c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002040c       0x2a hw/intctrl/apic.32
                0x00000000c002040c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020438       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020438       0x23 hw/timer/apictimer.32
                0x00000000c0020438                APICTimer::~APICTimer()
                0x00000000c0020438                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002045c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002045c       0x2a hw/timer/apictimer.32
                0x00000000c002045c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020488       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020488       0x23 hw/timer/pit.32
                0x00000000c0020488                PIT::~PIT()
                0x00000000c0020488                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00204ac       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00204ac       0x2a hw/timer/pit.32
                0x00000000c00204ac                PIT::~PIT()

.rodata         0x00000000c00204d6     0x32ee
                0x00000000c00204d6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00204d6        0x2 
 .ctors         0x00000000c00204d8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00204dc        0x4 core/unixfile.32
 .ctors         0x00000000c00204e0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00204e4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00204e8                end_ctors = .
                0x00000000c00204e8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00204e8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00204ec        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00204ec                __DTOR_END__
                0x00000000c00204f0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00204f0       0x10 
 .rodata        0x00000000c0020500      0x101 acpica/utclib.32
                0x00000000c0020500                AcpiGbl_Ctypes
 *fill*         0x00000000c0020601        0x3 
 .rodata        0x00000000c0020604       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002061c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020666       0x1a 
 .rodata        0x00000000c0020680       0xed fs/fat/ff.32
 *fill*         0x00000000c002076d       0x13 
 .rodata        0x00000000c0020780      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020b80       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020bef      0x12b core/computer.32
 *fill*         0x00000000c0020d1a        0x2 
 .rodata.str1.4
                0x00000000c0020d1c       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020d84       0x2c core/computer.32
                0x00000000c0020d84                vtable for Computer
 .rodata.str1.4
                0x00000000c0020db0       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020de0        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020dec       0x17 core/main.32
 *fill*         0x00000000c0020e03        0x1 
 .rodata.str1.4
                0x00000000c0020e04       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020ea9       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020f01       0x39 core/pipe.32
 *fill*         0x00000000c0020f3a        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020f3c       0x1c core/pipe.32
                0x00000000c0020f3c                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020f58       0x2b core/terminal.32
 *fill*         0x00000000c0020f83        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020f84       0x1c core/terminal.32
                0x00000000c0020f84                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020fa0       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020fc2       0x15 core/unixfile.32
 *fill*         0x00000000c0020fd7        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020fd8       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0021023        0x8 core/unixfile.32
 *fill*         0x00000000c002102b        0x1 
 .rodata.str1.4
                0x00000000c002102c       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c002104c       0x1c core/unixfile.32
                0x00000000c002104c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0021068       0x1c core/unixfile.32
                0x00000000c0021068                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0021084      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021318      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002143e       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0021471       0x11 dbg/kconsole.32
 *fill*         0x00000000c0021471        0x3 
 .rodata        0x00000000c0021474      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00215c4      0x169 dbg/usban.32
 *fill*         0x00000000c002172d        0x3 
 .rodata.str1.4
                0x00000000c0021730      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0021867      0x19b fs/symlink.32
 .rodata.str1.1
                0x00000000c0021a02       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c0021a43        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021a44       0x6c fs/vfs.32
                0x00000000c0021a44                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021ab0       0x1c fs/vfs.32
                0x00000000c0021ab0                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021acc       0x1c fs/vfs.32
                0x00000000c0021acc                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021ae8       0x2c hal/bus.32
                0x00000000c0021ae8                vtable for Bus
 .rodata.str1.1
                0x00000000c0021b14       0x1e hal/clock.32
 *fill*         0x00000000c0021b32        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021b34       0x3c hal/clock.32
                0x00000000c0021b34                vtable for Clock
 *fill*         0x00000000c0021b70       0x10 
 .rodata        0x00000000c0021b80       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021bb0       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021c14       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021c14       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021c14       0x2c hal/device.32
                0x00000000c0021c14                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021c40       0x2c hal/device.32
                0x00000000c0021c40                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021c6c       0x2c hal/diskctrl.32
                0x00000000c0021c6c                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021c98       0x38 hal/diskphys.32
                0x00000000c0021c98                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021cd0       0x3e hal/intctrl.32
 *fill*         0x00000000c0021d0e        0x2 
 .rodata.str1.4
                0x00000000c0021d10       0x5d hal/intctrl.32
 .rodata        0x00000000c0021d6d       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021dc0       0x34 hal/keybrd.32
                0x00000000c0021dc0                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021df4       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021e38       0x2c hal/logidisk.32
                0x00000000c0021e38                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021e64       0x2c hal/mouse.32
                0x00000000c0021e64                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021e90       0x34 hal/nic.32
                0x00000000c0021e90                vtable for NIC
 .rodata.str1.1
                0x00000000c0021ec4        0xb hal/partition.32
 *fill*         0x00000000c0021ecf        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021ed0       0x44 hal/serial.32
                0x00000000c0021ed0                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021f14       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021f14        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021f14       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021f14       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021f14       0x30 hal/timer.32
                0x00000000c0021f14                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021f44       0x10 hal/vcache.32
                0x00000000c0021f44                vtable for VCache
 .rodata.str1.1
                0x00000000c0021f54       0x93 hal/video.32
 *fill*         0x00000000c0021fe7        0x1 
 .rodata._ZTV5Video
                0x00000000c0021fe8       0x4c hal/video.32
                0x00000000c0021fe8                vtable for Video
 .rodata.str1.1
                0x00000000c0022034      0x1fd hw/acpi.32
                                        0x217 (size before relaxing)
 *fill*         0x00000000c0022231        0x3 
 .rodata.str1.4
                0x00000000c0022234       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00222cf       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00222cf        0x8 hw/acpi.32
 *fill*         0x00000000c00222cf        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00222d0       0x2c hw/acpi.32
                0x00000000c00222d0                vtable for ACPI
 .rodata.str1.1
                0x00000000c00222fc      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022477        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022478       0x2c hw/cpu.32
                0x00000000c0022478                vtable for CPU
 .rodata.str1.1
                0x00000000c00224a4       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00224e4       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0022520       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c00225b1       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c002267a       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00226c2       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00226ed       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0022763       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00227a8        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00227b2       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00227d3       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022869       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00228bd       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00228e9      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022ab5       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022b0c      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022c1c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022c1c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022c1c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022c1c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022c1c       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022cde        0x2 
 .rodata        0x00000000c0022ce0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022d10      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022eaf        0x1 
 .rodata.str1.4
                0x00000000c0022eb0       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022f23       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022f38       0x3c arch/i386/rtc.32
                0x00000000c0022f38                vtable for RTC
 .rodata.str1.1
                0x00000000c0022f74       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022fb5        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022fb8       0x6c fs/fat/vfslink.32
                0x00000000c0022fb8                vtable for FAT
 .rodata.str1.1
                0x00000000c0023024       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0023024      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002315c       0x6c fs/iso9660/vfslink.32
                0x00000000c002315c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00231c8       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002320c       0x34 hal/sound/sndcard.32
                0x00000000c002320c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023240       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002327f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00232b7       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023358       0x2c hw/bus/pci.32
                0x00000000c0023358                vtable for PCI
 .rodata.str1.1
                0x00000000c0023384       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c002340b        0x1 
 .rodata._ZTV3IDE
                0x00000000c002340c       0x2c hw/diskctrl/ide.32
                0x00000000c002340c                vtable for IDE
 .rodata.str1.4
                0x00000000c0023438       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c002345c       0x2c hw/diskctrl/satabus.32
                0x00000000c002345c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023488       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c002349a        0x2 
 .rodata._ZTV3ATA
                0x00000000c002349c       0x38 hw/diskphys/ata.32
                0x00000000c002349c                vtable for ATA
 .rodata.str1.1
                0x00000000c00234d4        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00234e1        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00234e4       0x38 hw/diskphys/atapi.32
                0x00000000c00234e4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002351c       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023598       0x38 hw/diskphys/sata.32
                0x00000000c0023598                vtable for SATA
 .rodata.str1.1
                0x00000000c00235d0       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00236ba        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00236bc       0x38 hw/diskphys/satapi.32
                0x00000000c00236bc                vtable for SATAPI
 .rodata        0x00000000c00236f4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00236fc       0x2c hw/intctrl/apic.32
                0x00000000c00236fc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023728       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0023743        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023744       0x30 hw/timer/apictimer.32
                0x00000000c0023744                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023774       0x1d hw/timer/pit.32
 *fill*         0x00000000c0023791        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023794       0x30 hw/timer/pit.32
                0x00000000c0023794                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00237c4      0xbbd
 *(.data)
 .data          0x00000000c00237c4        0x0 crti.32
 .data          0x00000000c00237c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00237c4                __dso_handle
 .data          0x00000000c00237c8        0x0 acpica/utclib.32
 .data          0x00000000c00237c8        0x0 core/malloc.32
 .data          0x00000000c00237c8        0x0 libk/ctype.32
 .data          0x00000000c00237c8        0x0 libk/string.32
 .data          0x00000000c00237c8        0x0 fs/fat/diskio.32
 .data          0x00000000c00237c8        0x0 fs/fat/ff.32
 .data          0x00000000c00237c8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00237c8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00237c8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00237c8        0x0 core/computer.32
 .data          0x00000000c00237c8        0x0 core/gdt.32
 .data          0x00000000c00237c8        0x0 core/idle.32
 .data          0x00000000c00237c8        0x0 core/idt.32
 .data          0x00000000c00237c8        0x4 core/kheap.32
 .data          0x00000000c00237cc        0x0 core/main.32
 .data          0x00000000c00237cc        0x4 core/physmgr.32
                0x00000000c00237cc                Phys::bitmap
 .data          0x00000000c00237d0        0x0 core/pipe.32
 *fill*         0x00000000c00237d0       0x10 
 .data          0x00000000c00237e0       0x60 core/terminal.32
                0x00000000c00237e0                VgaText::hiddenOut
                0x00000000c0023800                ansiToVGAMappings
 .data          0x00000000c0023840        0x0 core/tss.32
 .data          0x00000000c0023840        0x4 core/unixfile.32
                0x00000000c0023840                UnixFile::nextFd
 .data          0x00000000c0023844       0x15 core/virtmgr.32
                0x00000000c0023844                Virt::pageAllocPtr
                0x00000000c0023848                Virt::bitmap
                0x00000000c002384c                Virt::swapfileSectorsPerPage
                0x00000000c0023850                Virt::swapfileLength
                0x00000000c0023854                Virt::swapfileSector
                0x00000000c0023858                Virt::swapfileDrive
 *fill*         0x00000000c0023859        0x3 
 .data          0x00000000c002385c        0x4 coreobjs/c++.32
                0x00000000c002385c                __stack_chk_guard
 .data          0x00000000c0023860        0x0 dbg/kconsole.32
 .data          0x00000000c0023860       0x28 dbg/usban.32
                0x00000000c0023860                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023888        0x0 fs/symlink.32
 .data          0x00000000c0023888        0x0 fs/vfs.32
 .data          0x00000000c0023888        0x0 hal/bus.32
 .data          0x00000000c0023888        0x0 hal/buzzer.32
 .data          0x00000000c0023888        0x0 hal/clock.32
 .data          0x00000000c0023888        0x0 hal/device.32
 .data          0x00000000c0023888        0x0 hal/diskctrl.32
 .data          0x00000000c0023888        0x0 hal/diskphys.32
 .data          0x00000000c0023888        0x0 hal/fpu.32
 .data          0x00000000c0023888        0x0 hal/intctrl.32
 .data          0x00000000c0023888        0x0 hal/keybrd.32
 .data          0x00000000c0023888        0x0 hal/logidisk.32
 .data          0x00000000c0023888        0x0 hal/mouse.32
 .data          0x00000000c0023888        0x0 hal/nic.32
 .data          0x00000000c0023888        0x0 hal/partition.32
 .data          0x00000000c0023888        0x0 hal/serial.32
 .data          0x00000000c0023888        0x0 hal/timer.32
 .data          0x00000000c0023888        0x0 hal/vcache.32
 .data          0x00000000c0023888        0x0 hal/video.32
 .data          0x00000000c0023888       0x10 hw/acpi.32
                0x00000000c0023888                legacyIRQRemaps
 .data          0x00000000c0023898        0x4 hw/cpu.32
                0x00000000c0023898                lastCode
 .data          0x00000000c002389c        0x0 krnl/atexit.32
 *fill*         0x00000000c002389c        0x4 
 .data          0x00000000c00238a0      0x142 krnl/bootmsg.32
                0x00000000c00238a0                KiSplashScreen
 .data          0x00000000c00239e2        0x0 krnl/compat.32
 *fill*         0x00000000c00239e2       0x1e 
 .data          0x00000000c0023a00      0x400 krnl/crc32.32
                0x00000000c0023a00                KiPolyLookupCRC32
 .data          0x00000000c0023e00       0x4d krnl/env.32
                0x00000000c0023e00                defaultSysEnv
 .data          0x00000000c0023e4d        0x0 krnl/inlines.32
 .data          0x00000000c0023e4d        0x0 krnl/panic.32
 .data          0x00000000c0023e4d        0x0 krnl/powctrl.32
 .data          0x00000000c0023e4d        0x0 krnl/random.32
 .data          0x00000000c0023e4d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023e4d       0x13 
 .data          0x00000000c0023e60       0x4c krnl/signal.32
                0x00000000c0023e60                KiDefaultSignalHandlers
 *fill*         0x00000000c0023eac       0x14 
 .data          0x00000000c0023ec0       0xfc krnl/syscalls.32
                0x00000000c0023ec0                systemCallHandlers
 .data          0x00000000c0023fbc        0x0 net/ethernet.32
 *fill*         0x00000000c0023fbc        0x4 
 .data          0x00000000c0023fc0      0x100 reg/cm.32
                0x00000000c0023fc0                CmComponents
 .data          0x00000000c00240c0        0x0 reg/registry.32
 .data          0x00000000c00240c0        0x0 sys/eject.32
 .data          0x00000000c00240c0        0x0 sys/exit.32
 .data          0x00000000c00240c0        0x0 sys/getcwd.32
 .data          0x00000000c00240c0        0x0 sys/getpid.32
 .data          0x00000000c00240c0        0x0 sys/getramdata.32
 .data          0x00000000c00240c0        0x0 sys/getvgaptr.32
 .data          0x00000000c00240c0        0x0 sys/kill.32
 .data          0x00000000c00240c0        0x0 sys/loaddll.32
 .data          0x00000000c00240c0        0x0 sys/read.32
 .data          0x00000000c00240c0        0x0 sys/registersignal.32
 .data          0x00000000c00240c0        0x0 sys/registry.32
 .data          0x00000000c00240c0        0x0 sys/sbrk.32
 .data          0x00000000c00240c0        0x0 sys/setcwd.32
 .data          0x00000000c00240c0        0x0 sys/settime.32
 .data          0x00000000c00240c0        0x0 sys/symlink.32
 .data          0x00000000c00240c0        0x0 sys/timezone.32
 .data          0x00000000c00240c0        0x0 sys/truncate.32
 .data          0x00000000c00240c0        0x0 sys/write.32
 .data          0x00000000c00240c0        0x0 sys/wsbe.32
 .data          0x00000000c00240c0        0x0 sys/yield.32
 .data          0x00000000c00240c0        0x0 thr/elf.32
 .data          0x00000000c00240c0        0x4 thr/prcssthr.32
                0x00000000c00240c0                Thr::nextPID
 .data          0x00000000c00240c4        0x0 vm86/vm8086.32
 *fill*         0x00000000c00240c4       0x1c 
 .data          0x00000000c00240e0      0x2a0 arch/i386/hal.32
                0x00000000c00240e0                exceptionNames
 .data          0x00000000c0024380        0x0 arch/i386/pic.32
 .data          0x00000000c0024380        0x0 arch/i386/rtc.32
 .data          0x00000000c0024380        0x0 arch/i386/vga.32
 .data          0x00000000c0024380        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024380        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024380        0x1 fs/iso9660/vfslink.32
                0x00000000c0024380                recentDriveletter
 .data          0x00000000c0024381        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024381        0x0 hal/sound/sndport.32
 .data          0x00000000c0024381        0x0 hw/bus/isa.32
 .data          0x00000000c0024381        0x0 hw/bus/pci.32
 .data          0x00000000c0024381        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024381        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024381        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024381        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024381        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024381        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024381        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024381        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024381        0x0 hw/timer/pit.32
 .data          0x00000000c0024381        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024381        0x0 crtn.32
 .data          0x00000000c0024381        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024381        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024381        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024381        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024384        0x0
 .got           0x00000000c0024384        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024384        0x0
 .got.plt       0x00000000c0024384        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024384        0x0
 .igot.plt      0x00000000c0024384        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024384        0x0
 .tm_clone_table
                0x00000000c0024384        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024384        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024381      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024381        0x3 
 .eh_frame      0x00000000c0024384        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024384        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024384       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00243dc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002441c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024488       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
