Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootflags.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/apic.32
 .group         0x0000000000000000        0xc arch/i386/apic.32
 .comment       0x0000000000000000       0x12 arch/i386/apic.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootflags.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/apic.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21f4e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x2ad dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f13                Dbg::logs(char*)
                0x00000000c0006f3d                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f5b                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f7c                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070f3        0x1 
 .text          0x00000000c00070f4      0x2d4 dbg/usban.32
                0x00000000c00070f4                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007160                __ubsan_handle_type_mismatch_v1
                0x00000000c000723c                __ubsan_handle_pointer_overflow
                0x00000000c0007268                __ubsan_handle_out_of_bounds
                0x00000000c0007294                __ubsan_handle_add_overflow
                0x00000000c00072c0                __ubsan_handle_load_invalid_value
                0x00000000c00072ec                __ubsan_handle_divrem_overflow
                0x00000000c0007318                __ubsan_handle_mul_overflow
                0x00000000c0007344                __ubsan_handle_sub_overflow
                0x00000000c0007370                __ubsan_handle_shift_out_of_bounds
                0x00000000c000739c                __ubsan_handle_negate_overflow
 .text          0x00000000c00073c8      0x814 fs/symlink.32
                0x00000000c0007517                KiDeinitialiseSymlinks(void*)
                0x00000000c00075aa                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000762d                KeInitialiseSymlinks()
                0x00000000c000778f                KiIsSymlinkRegistered(char const*)
                0x00000000c00078f9                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007aa0                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bdc      0xd88 fs/vfs.32
                0x00000000c0007bdc                File::read(unsigned long long, void*, int*)
                0x00000000c0007c34                File::write(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007ce4                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007d12                File::isAtty()
                0x00000000c0007d16                Directory::isAtty()
                0x00000000c0007d1a                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007d20                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d26                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d2c                File::~File()
                0x00000000c0007d2c                File::~File()
                0x00000000c0007d50                File::~File()
                0x00000000c0007d7a                Directory::~Directory()
                0x00000000c0007d7a                Directory::~Directory()
                0x00000000c0007d9e                Directory::~Directory()
                0x00000000c0007dc8                Filesystem::Filesystem()
                0x00000000c0007dc8                Filesystem::Filesystem()
                0x00000000c0007dec                Filesystem::~Filesystem()
                0x00000000c0007dec                Filesystem::~Filesystem()
                0x00000000c0007dfa                Filesystem::~Filesystem()
                0x00000000c0007e1e                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e48                Fs::initVFS()
                0x00000000c0007e72                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000808c                File::File(char const*, Process*, bool)
                0x00000000c000808c                File::File(char const*, Process*, bool)
                0x00000000c000818a                File::File(char const*, Process*)
                0x00000000c000818a                File::File(char const*, Process*)
                0x00000000c00081a8                File::open(FileOpenMode)
                0x00000000c0008206                File::close()
                0x00000000c0008266                File::seek(unsigned long long)
                0x00000000c00082bc                File::truncate(unsigned long long)
                0x00000000c0008312                File::tell(unsigned long long*)
                0x00000000c0008362                File::rewind()
                0x00000000c0008376                File::unlink()
                0x00000000c00083c2                File::rename(char const*)
                0x00000000c0008410                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000846c                File::exists()
                0x00000000c00084aa                File::stat(unsigned long long*, bool*)
                0x00000000c000850b                Fs::setcwd(Process*, char*)
                0x00000000c000866a                Directory::Directory(char const*, Process*)
                0x00000000c000866a                Directory::Directory(char const*, Process*)
                0x00000000c0008732                Directory::open()
                0x00000000c000878e                Directory::close()
                0x00000000c00087ee                Directory::unlink()
                0x00000000c000883a                Directory::rename(char const*)
                0x00000000c0008888                Directory::exists()
                0x00000000c00088c6                Directory::read(dirent*)
                0x00000000c0008912                Directory::create()
                0x00000000c000895e                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0008964       0x86 hal/bus.32
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c000899c                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
                0x00000000c00089c0                Bus::~Bus()
 .text          0x00000000c00089ea       0x9b hal/buzzer.32
                0x00000000c00089ea                KeBeepThread(void*)
                0x00000000c0008a2b                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a85        0x1 
 .text          0x00000000c0008a86      0xeac hal/clock.32
                0x00000000c0008a86                KeLoadTimezoneStrings()
                0x00000000c0008e15                KeGetTimezoneStringFromID(int)
                0x00000000c0008eb2                KeUpdateTimezone(char const*)
                0x00000000c0008fac                KeSetTimezone(char const*)
                0x00000000c0009009                KeSetTimezone(int)
                0x00000000c000903c                KeLoadTimezone()
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009110                Clock::~Clock()
                0x00000000c000913a                Clock::timeInSecondsLocal()
                0x00000000c00091b0                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000923c                KeDatetimeToSeconds(datetime_t)
                0x00000000c000957c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000964a                KeSecondsToDatetime(unsigned long long)
                0x00000000c0009906                Clock::timeInDatetimeLocal()
 .text          0x00000000c0009932      0x47a hal/device.32
                0x00000000c0009932                Device::hibernate()
                0x00000000c0009934                Device::wake()
                0x00000000c0009936                Device::detect()
                0x00000000c0009938                Device::disableLegacy()
                0x00000000c000993a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000993c                DriverlessDevice::close(int, int, void*)
                0x00000000c0009940                DriverlessDevice::detect()
                0x00000000c0009942                DriverlessDevice::open(int, int, void*)
                0x00000000c0009956                Device::~Device()
                0x00000000c0009956                Device::~Device()
                0x00000000c0009964                Device::~Device()
                0x00000000c000998c                Device::findAndLoadDriver()
                0x00000000c000999a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00099c0                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0009a00                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009a2a                Device::getParent()
                0x00000000c0009a36                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009a54                Device::addChild(Device*)
                0x00000000c0009a98                Device::removeAllChildren()
                0x00000000c0009ade                Device::hibernateAll()
                0x00000000c0009b0e                Device::wakeAll()
                0x00000000c0009b3e                Device::detectAll()
                0x00000000c0009b6e                Device::disableLegacyAll()
                0x00000000c0009b70                Device::loadDriversForAll()
                0x00000000c0009b72                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009ba8                Device::setName(char const*)
                0x00000000c0009bb6                Device::Device(char const*)
                0x00000000c0009bb6                Device::Device(char const*)
                0x00000000c0009cb2                Device::getName()
                0x00000000c0009cbc                Device::closeAll()
                0x00000000c0009d08                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009d08                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009d3e                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d82                getDevicesOfType(DeviceType)
 .text          0x00000000c0009dac       0x86 hal/diskctrl.32
                0x00000000c0009dac                HardDiskController::HardDiskController(char const*)
                0x00000000c0009dac                HardDiskController::HardDiskController(char const*)
                0x00000000c0009de4                HardDiskController::~HardDiskController()
                0x00000000c0009de4                HardDiskController::~HardDiskController()
                0x00000000c0009e08                HardDiskController::~HardDiskController()
 .text          0x00000000c0009e32       0xe2 hal/diskphys.32
                0x00000000c0009e32                PhysicalDisk::eject()
                0x00000000c0009e36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e9e                PhysicalDisk::startCache()
                0x00000000c0009ec6                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009ec6                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009eea                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009f14        0x0 hal/fpu.32
 .text          0x00000000c0009f14      0x874 hal/keybrd.32
                0x00000000c0009f14                startGUI(void*)
                0x00000000c0009f79                startGUIVESA(void*)
                0x00000000c0009fde                sendKeyToTerminal(unsigned char)
                0x00000000c000a0b4                sendKeyboardToken(KeyboardToken)
                0x00000000c000a570                clearInternalKeybuffer(VgaText*)
                0x00000000c000a5a5                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6fe                Keyboard::Keyboard(char const*)
                0x00000000c000a6fe                Keyboard::Keyboard(char const*)
                0x00000000c000a73a                Keyboard::~Keyboard()
                0x00000000c000a73a                Keyboard::~Keyboard()
                0x00000000c000a75e                Keyboard::~Keyboard()
 .text          0x00000000c000a788      0x3f8 hal/logidisk.32
                0x00000000c000a788                LogicalDisk::close(int, int, void*)
                0x00000000c000a78c                LogicalDisk::~LogicalDisk()
                0x00000000c000a78c                LogicalDisk::~LogicalDisk()
                0x00000000c000a7b0                LogicalDisk::~LogicalDisk()
                0x00000000c000a7da                LogicalDisk::open(int, int, void*)
                0x00000000c000a7ee                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a826                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a86c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a86c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a92c                LogicalDisk::assignDriveLetter()
                0x00000000c000a9e6                LogicalDisk::mount()
                0x00000000c000aa2e                LogicalDisk::unmount()
                0x00000000c000aa3e                LogicalDisk::eject()
                0x00000000c000aa52                LogicalDisk::unassignDriveLetter()
                0x00000000c000aaa8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ab14                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab80       0x86 hal/mouse.32
                0x00000000c000ab80                Mouse::Mouse(char const*)
                0x00000000c000ab80                Mouse::Mouse(char const*)
                0x00000000c000abb8                Mouse::~Mouse()
                0x00000000c000abb8                Mouse::~Mouse()
                0x00000000c000abdc                Mouse::~Mouse()
 .text          0x00000000c000ac06       0x90 hal/nic.32
                0x00000000c000ac06                NIC::getMAC()
                0x00000000c000ac0c                NIC::write(int, unsigned char*, int*)
                0x00000000c000ac12                NIC::NIC(char const*)
                0x00000000c000ac12                NIC::NIC(char const*)
                0x00000000c000ac48                NIC::~NIC()
                0x00000000c000ac48                NIC::~NIC()
                0x00000000c000ac6c                NIC::~NIC()
 .text          0x00000000c000ac96      0x33b hal/partition.32
                0x00000000c000ac96                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ad3e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000afd1        0x3 
 .text          0x00000000c000afd4       0x86 hal/serial.32
                0x00000000c000afd4                Serial::Serial(char const*)
                0x00000000c000afd4                Serial::Serial(char const*)
                0x00000000c000b00c                Serial::~Serial()
                0x00000000c000b00c                Serial::~Serial()
                0x00000000c000b030                Serial::~Serial()
 *fill*         0x00000000c000b05a        0x2 
 .text          0x00000000c000b05c      0x230 hal/timer.32
                0x00000000c000b05c                Timer::Timer(char const*)
                0x00000000c000b05c                Timer::Timer(char const*)
                0x00000000c000b094                Timer::~Timer()
                0x00000000c000b094                Timer::~Timer()
                0x00000000c000b0b8                Timer::~Timer()
                0x00000000c000b0e2                Timer::read()
                0x00000000c000b0ed                setupTimer(int)
                0x00000000c000b128                timerHandler(unsigned int)
 .text          0x00000000c000b28c      0x5fe hal/vcache.32
                0x00000000c000b28c                VCache::VCache(PhysicalDisk*)
                0x00000000c000b28c                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3fc                VCache::invalidateReadBuffer()
                0x00000000c000b40c                VCache::writeWriteBuffer()
                0x00000000c000b458                VCache::~VCache()
                0x00000000c000b458                VCache::~VCache()
                0x00000000c000b4b0                VCache::~VCache()
                0x00000000c000b4d8                VCache::write(unsigned long long, int, void*)
                0x00000000c000b6a6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b88a      0x70e hal/video.32
                0x00000000c000b88a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b8d6                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b946                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b9c4                Video::clearScreen(unsigned int)
                0x00000000c000b9f8                Video::putpixel(int, int, unsigned int)
                0x00000000c000ba06                Video::readPixelApprox(int, int)
                0x00000000c000ba1a                Video::Video(char const*)
                0x00000000c000ba1a                Video::Video(char const*)
                0x00000000c000ba50                Video::~Video()
                0x00000000c000ba50                Video::~Video()
                0x00000000c000ba74                Video::~Video()
                0x00000000c000ba9e                Video::isMonochrome()
                0x00000000c000baaa                Video::getWidth()
                0x00000000c000bab6                Video::getHeight()
                0x00000000c000bac2                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb7e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000bf28                Video::putTGA(int, int, unsigned char*, int)
 .text          0x00000000c000bf98     0x11a3 hw/acpi.32
                0x00000000c000bf98                ACPI::close(int, int, void*)
                0x00000000c000bfa0                loadACPITables(unsigned char*)
                0x00000000c000c200                findRSDT(unsigned char*)
                0x00000000c000c34c                findDataTable(unsigned char*, char*)
                0x00000000c000c3c0                scanMADT()
                0x00000000c000c870                ACPI::ACPI()
                0x00000000c000c870                ACPI::ACPI()
                0x00000000c000c8c0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c9bc                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca88                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca90                ACPI::detectPCI()
                0x00000000c000cc9c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ccb4                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d13b        0x1 
 .text          0x00000000c000d13c       0xea krnl/assert.32
                0x00000000c000d13c                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d226       0xb6 krnl/atexit.32
                0x00000000c000d226                KeInitialiseAtexit()
                0x00000000c000d245                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d279                KeExecuteAtexit()
 .text          0x00000000c000d2dc       0x1e krnl/bootflags.32
                0x00000000c000d2dc                KeGetBootConfigurationFlag(BootConfigurationFlag)
                0x00000000c000d2ec                KeInitialiseBootConfigurationFlags()
 .text          0x00000000c000d2fa       0x9f krnl/bootmsg.32
                0x00000000c000d2fa                KeDisplaySplashScreen()
                0x00000000c000d329                KeSetBootMessage(char const*)
 .text          0x00000000c000d399       0x5f krnl/c++.32
                0x00000000c000d399                __cxa_atexit
                0x00000000c000d39c                __cxa_finalize
                0x00000000c000d39d                __stack_chk_fail
                0x00000000c000d3d3                __cxa_pure_virtual
                0x00000000c000d3e4                operator new[](unsigned long)
                0x00000000c000d3e9                operator delete(void*, unsigned long)
                0x00000000c000d3ee                operator delete[](void*)
                0x00000000c000d3f3                operator delete[](void*, unsigned long)
 .text          0x00000000c000d3f8       0x44 krnl/cdefs.32
                0x00000000c000d3f8                CUnlockScheduler
                0x00000000c000d410                CLockScheduler
                0x00000000c000d420                CPrintf
 .text          0x00000000c000d43c      0xd56 krnl/cm.32
                0x00000000c000d43c                CmOpen(char const*)
                0x00000000c000d55a                CmClose(Reghive_Tag*)
                0x00000000c000d570                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d5ac                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d623                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d662                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d694                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d6d0                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d6f8                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d719                CmExpand(Reghive_Tag*, int)
                0x00000000c000d794                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d81a                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d90e                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000da4a                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000daab                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000dadb                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000db12                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000db3c                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000db7c                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000dc20                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000dc4e                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000ddec                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000de39                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000deb3                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000df06                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000dfca                zStrtok(char*, char const*)
                0x00000000c000e03c                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000e0bd                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000e160                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000e192        0x2 
 .text          0x00000000c000e194       0x1d krnl/compat.32
                0x00000000c000e194                Krnl::handlePowerButton()
                0x00000000c000e1a4                Krnl::handleSleepButton()
 *fill*         0x00000000c000e1b1        0x1 
 .text          0x00000000c000e1b2       0xe3 krnl/computer.32
                0x00000000c000e1b2                Computer::close(int, int, void*)
                0x00000000c000e1b8                Computer::Computer()
                0x00000000c000e1b8                Computer::Computer()
                0x00000000c000e1fc                Computer::open(int, int, void*)
 .text          0x00000000c000e295       0x2b krnl/crc32.32
                0x00000000c000e295                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e2c0      0x5bf krnl/env.32
                0x00000000c000e2c0                EnvVarContainer::getEnv(char const*)
                0x00000000c000e2fe                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e3c0                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e3c2                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e5e6                EnvVarContainer::__loadSystem()
                0x00000000c000e600                EnvVarContainer::__loadUser()
                0x00000000c000e602                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e602                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e624                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e624                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e654                KeGetEnv(Process*, char const*)
                0x00000000c000e6b9                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e6d3                KeSetEnvUser(char const*, char const*)
                0x00000000c000e6f2                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e705                KeDeleteEnvSystem(char const*)
                0x00000000c000e706                KeDeleteEnvUser(char const*)
                0x00000000c000e707                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e708                KeNewProcessEnv(Process*)
                0x00000000c000e72a                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e776                KeLoadSystemEnv()
                0x00000000c000e7a4                KeLoadUserEnv()
                0x00000000c000e7ca                KeFlushEnv()
                0x00000000c000e7cb                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e7eb                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e87f        0x1 
 .text          0x00000000c000e880      0x371 krnl/fault.32
                0x00000000c000e880                KeSetupInterrupts()
                0x00000000c000e8f8                int_handler
                0x00000000c000ea28                KeDisplayProgramFault(char const*)
                0x00000000c000ea78                KeGeneralProtectionFault(void*, void*)
                0x00000000c000eadc                KePageFault(void*, void*)
                0x00000000c000eb40                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000eb50                KeOtherFault(void*, void*)
                0x00000000c000eb84                KeOpcodeFault(void*, void*)
                0x00000000c000ebd8                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000ebf1        0x1 
 .text          0x00000000c000ebf2      0x1db krnl/gdt.32
                0x00000000c000ebf2                GDTEntry::setBase(unsigned int)
                0x00000000c000ec0e                GDTEntry::setLimit(unsigned int)
                0x00000000c000ec2c                GDT::GDT()
                0x00000000c000ec2c                GDT::GDT()
                0x00000000c000ec42                GDT::addEntry(GDTEntry)
                0x00000000c000ec64                GDT::getNumberOfEntries()
                0x00000000c000ec6c                GDT::flush()
                0x00000000c000ec8e                GDT::setup()
 .text          0x00000000c000edcd       0x20 krnl/idle.32
                0x00000000c000edcd                idleFunction(void*)
 *fill*         0x00000000c000eded        0x3 
 .text          0x00000000c000edf0      0x46c krnl/idt.32
                0x00000000c000edf0                IDTEntry::IDTEntry(bool)
                0x00000000c000edf0                IDTEntry::IDTEntry(bool)
                0x00000000c000ee6a                IDTEntry::setOffset(unsigned int)
                0x00000000c000ee80                IDT::IDT()
                0x00000000c000ee80                IDT::IDT()
                0x00000000c000ee82                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ee8a                IDT::addEntry(IDTEntry, int)
                0x00000000c000eea4                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000eedc                IDT::flush()
                0x00000000c000eef6                IDT::setup()
 .text          0x00000000c000f25c       0x9a krnl/inlines.32
                0x00000000c000f25c                CPU::current()
                0x00000000c000f268                operator new(unsigned long)
                0x00000000c000f26d                operator delete(void*)
                0x00000000c000f272                disableIRQs()
                0x00000000c000f274                enableIRQs()
                0x00000000c000f276                lockScheduler()
                0x00000000c000f27e                unlockScheduler()
                0x00000000c000f290                lockStuff()
                0x00000000c000f29e                unlockStuff()
                0x00000000c000f2db                Virt::getAKernelVAS()
                0x00000000c000f2e1                __not_memcpy
 .text          0x00000000c000f2f6      0x2bc krnl/intlformat.32
                0x00000000c000f2f6                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f4e6                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f508                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f52a                KeSetLocale(klocale_t)
                0x00000000c000f540                KeInitialiseLocale()
                0x00000000c000f5ae                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f5af                KeFormatCurrency(char*, int, double)
                0x00000000c000f5b0                KeFormatNumber(char*, long long, long long)
                0x00000000c000f5b1                KeFormatNumber(char*, double)
 *fill*         0x00000000c000f5b2        0x2 
 .text          0x00000000c000f5b4      0x42e krnl/intops.32
                0x00000000c000f5b4                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f73c                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f8e8                KeGetDigitsInNumber(long long)
                0x00000000c000f954                KeItoa(unsigned long long, char*)
                0x00000000c000f984                KeItoa(long long, char*)
                0x00000000c000f9b4                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f9e2      0x207 krnl/kheap.32
                0x00000000c000f9e2                sbrk
                0x00000000c000fa79                sbrk_thunk
                0x00000000c000faaf                mmap
                0x00000000c000fb0d                munmap
                0x00000000c000fb22                liballoc_lock()
                0x00000000c000fb30                liballoc_unlock()
                0x00000000c000fb48                liballoc_alloc(int)
                0x00000000c000fb60                liballoc_free(void*, int)
                0x00000000c000fb7b                realloc
                0x00000000c000fb8f                malloc
                0x00000000c000fb9f                free
                0x00000000c000fbaf                rfree
                0x00000000c000fbbf                calloc
 *fill*         0x00000000c000fbe9        0x3 
 .text          0x00000000c000fbec      0x1d3 krnl/mailbox.32
                0x00000000c000fbec                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fc4c                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fcac                KeMailboxCreate()
                0x00000000c000fce0                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fd44                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fda8                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fdbf      0x20b krnl/main.32
                0x00000000c000fdbf                KeFirstTask()
                0x00000000c000feca                KeEntryPoint
 *fill*         0x00000000c000ffca        0x2 
 .text          0x00000000c000ffcc       0x1a krnl/mutex.32
                0x00000000c000ffcc                Mutex::Mutex()
                0x00000000c000ffcc                Mutex::Mutex()
 .text          0x00000000c000ffe6        0xc krnl/panic.32
                0x00000000c000ffe6                KePanic(char const*)
 .text          0x00000000c000fff2      0x667 krnl/physmgr.32
                0x00000000c000fff2                Phys::allocateDMA(unsigned long)
                0x00000000c00100da                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0010115                Phys::setPageState(unsigned long, bool)
                0x00000000c0010155                Phys::getPageState(unsigned long)
                0x00000000c0010171                Phys::freePage(unsigned long)
                0x00000000c00101da                Phys::allocatePage()
                0x00000000c00102b8                Phys::allocateContiguousPages(int)
                0x00000000c0010333                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c001036b                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0010659        0x1 
 .text          0x00000000c001065a      0x275 krnl/pipe.32
                0x00000000c001065a                Pipe::isAtty()
                0x00000000c001065e                Pipe::~Pipe()
                0x00000000c001065e                Pipe::~Pipe()
                0x00000000c0010682                Pipe::~Pipe()
                0x00000000c00106aa                Pipe::write(unsigned long long, void*, int*)
                0x00000000c001076a                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0010868                Pipe::Pipe(int)
                0x00000000c0010868                Pipe::Pipe(int)
 .text          0x00000000c00108cf      0x1a3 krnl/powctrl.32
                0x00000000c00108cf                KePowerThread(void*)
                0x00000000c0010901                KeChangePowerSettings(PowerSettings)
                0x00000000c0010917                KeUserIOReceived()
                0x00000000c0010922                KeSetupPowerManager()
                0x00000000c00109ab                KePrepareShutdown()
                0x00000000c00109ca                KeRegisterShutdownHandler(void (*)())
                0x00000000c00109d4                KeRegisterRestartHandler(void (*)())
                0x00000000c00109de                KeRegisterSleepHandler(void (*)())
                0x00000000c00109e8                KeShutdown()
                0x00000000c0010a1e                KeSleep()
                0x00000000c0010a2a                KeHandlePowerButton()
                0x00000000c0010a3c                KeHandleSleepButton()
                0x00000000c0010a4e                KeRestart()
 .text          0x00000000c0010a72       0x9d krnl/random.32
                0x00000000c0010a72                KeRand()
                0x00000000c0010ab4                KeSeedRand(unsigned int)
                0x00000000c0010add                KeInitRand()
 *fill*         0x00000000c0010b0f        0x1 
 .text          0x00000000c0010b10      0x1e8 krnl/resolve.32
                0x00000000c0010b10                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010cf8      0x415 krnl/semaphore.32
                0x00000000c0010cf8                Semaphore::Semaphore(int)
                0x00000000c0010cf8                Semaphore::Semaphore(int)
                0x00000000c0010d28                Semaphore::tryAcquire()
                0x00000000c0010dfc                Semaphore::assertLocked(char const*)
                0x00000000c0010e88                Semaphore::acquire(int)
                0x00000000c0011040                Semaphore::acquire()
                0x00000000c001105c                Semaphore::release()
 .text          0x00000000c001110d      0x3a8 krnl/signal.32
                0x00000000c001110d                KiSigKill(int)
                0x00000000c0011121                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011122                KiDefaultSignalHandlerPause(int)
                0x00000000c001114e                KiDefaultSignalHandlerResume(int)
                0x00000000c001117a                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001117f                KeInitSignals()
                0x00000000c00111f1                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011227                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00112a8                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c00113d7                KiCheckSignalZ
                0x00000000c0011428                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011463                KiFinishSignalZ
 .text          0x00000000c00114b5      0xe88 krnl/syscalls.32
                0x00000000c00114b5                SysSeekDir(regs*)
                0x00000000c00114ba                SysTellDir(regs*)
                0x00000000c00114bf                SysVerify(regs*)
                0x00000000c00114c9                SysGetArgc(regs*)
                0x00000000c00114dd                SysTTYName(regs*)
                0x00000000c00114e5                SysFormatDisk(regs*)
                0x00000000c001155c                SysSetDiskVolumeLabel(regs*)
                0x00000000c00115b0                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011609                SysRealpath(regs*)
                0x00000000c001164d                SysReadDir(regs*)
                0x00000000c00116cd                SysIsATTY(regs*)
                0x00000000c0011727                SysSeek(regs*)
                0x00000000c0011785                SysTell(regs*)
                0x00000000c00117fa                SysSize(regs*)
                0x00000000c0011874                SysSizeFromFilename(regs*)
                0x00000000c001199e                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011ac8                SysClose(regs*)
                0x00000000c0011b28                SysOpenDir(regs*)
                0x00000000c0011ba5                SysMakeDir(regs*)
                0x00000000c0011c13                SysCloseDir(regs*)
                0x00000000c0011c67                SysWait(regs*)
                0x00000000c0011c88                SysNotImpl(regs*)
                0x00000000c0011ca3                SysPanic(regs*)
                0x00000000c0011cbe                SysRmdir(regs*)
                0x00000000c0011d23                SysUnlink(regs*)
                0x00000000c0011d88                SysGetArgv(regs*)
                0x00000000c0011dd5                SysUSleep(regs*)
                0x00000000c0011dff                SysSpawn(regs*)
                0x00000000c0011e72                SysGetEnv(regs*)
                0x00000000c0011f23                SysSetFatAttrib(regs*)
                0x00000000c0011f96                SysShutdown(regs*)
                0x00000000c0011ff3                SysPipe(regs*)
                0x00000000c0012038                SysGetUnixTime(regs*)
                0x00000000c00120bc                string_ends_with(char const*, char const*)
                0x00000000c0012104                SysOpen(regs*)
                0x00000000c00122fb                KeSystemCall(regs*, void*)
 *fill*         0x00000000c001233d        0x1 
 .text          0x00000000c001233e      0xb0b krnl/terminal.32
                0x00000000c001233e                VgaText::isAtty()
                0x00000000c0012342                VgaText::~VgaText()
                0x00000000c0012342                VgaText::~VgaText()
                0x00000000c0012366                VgaText::~VgaText()
                0x00000000c0012390                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00123b0                setTerminalScrollLock(bool)
                0x00000000c00123b1                doTerminalCycle()
                0x00000000c00123b2                addToTerminalCycle(VgaText*)
                0x00000000c00123b3                scrollTerminalScrollLock(int)
                0x00000000c00123b4                VgaText::updateTitle()
                0x00000000c00123b6                VgaText::load()
                0x00000000c00123b8                VgaText::updateCursor()
                0x00000000c00123ce                VgaText::doANSI_SGR(int)
                0x00000000c0012442                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0012452                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0012462                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0012482                VgaText::setTitleTextColour(VgaColour)
                0x00000000c001248e                VgaText::setTitleColour(VgaColour)
                0x00000000c001249a                VgaText::setTitle(char*)
                0x00000000c001249c                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00124ae                VgaText::scrollScreen()
                0x00000000c0012540                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0012550                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00125fc                VgaText::getCursorX()
                0x00000000c0012604                VgaText::getCursorY()
                0x00000000c001260c                VgaText::setCursor(int, int)
                0x00000000c0012623                setActiveTerminal(VgaText*)
                0x00000000c001266e                VgaText::clearScreen()
                0x00000000c00126bc                VgaText::setCursorX(int)
                0x00000000c00126d4                VgaText::setCursorY(int)
                0x00000000c00126ec                VgaText::incrementCursor(bool)
                0x00000000c0012740                VgaText::decrementCursor(bool)
                0x00000000c0012762                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0012832                VgaText::putchar(char)
                0x00000000c001292a                VgaText::putx(unsigned int)
                0x00000000c0012970                VgaText::puts(char const*)
                0x00000000c0012996                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00129e2                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0012b5c                VgaText::VgaText(char const*)
                0x00000000c0012b5c                VgaText::VgaText(char const*)
                0x00000000c0012cbc                VgaText::receiveKey(unsigned char)
                0x00000000c0012e48                VgaText::doUpdate()
 *fill*         0x00000000c0012e49        0x3 
 .text          0x00000000c0012e4c      0x224 krnl/tss.32
                0x00000000c0012e4c                TSS::TSS()
                0x00000000c0012e4c                TSS::TSS()
                0x00000000c0012e5c                TSS::setESP(unsigned long)
                0x00000000c0012e70                TSS::flush()
                0x00000000c0012e90                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0013070      0x4ce krnl/unixfile.32
                0x00000000c0013070                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00130c6                ReservedFilename::isAtty()
                0x00000000c00130e2                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0013140                UnixFile::getFileDescriptor()
                0x00000000c0013148                UnixFile::UnixFile(int)
                0x00000000c0013148                UnixFile::UnixFile(int)
                0x00000000c00132fc                ReservedFilename::ReservedFilename(int)
                0x00000000c00132fc                ReservedFilename::ReservedFilename(int)
                0x00000000c001332e                UnixFile::~UnixFile()
                0x00000000c001332e                UnixFile::~UnixFile()
                0x00000000c00133ca                UnixFile::~UnixFile()
                0x00000000c00133f2                ReservedFilename::~ReservedFilename()
                0x00000000c00133f2                ReservedFilename::~ReservedFilename()
                0x00000000c0013416                ReservedFilename::~ReservedFilename()
                0x00000000c001343d                KeGetFileFromDescriptor(int)
 .text          0x00000000c001353e     0x14bc krnl/virtmgr.32
                0x00000000c001353e                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0013578                Virt::getPageState(unsigned long)
                0x00000000c001359b                Virt::allocateKernelVirtualPages(int)
                0x00000000c00136c0                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00136e3                Virt::swapIDToSector(unsigned long)
                0x00000000c00136f9                Virt::allocateSwapfilePage()
                0x00000000c0013779                Virt::virtualMemorySetup()
                0x00000000c00137ca                Virt::setupPageSwapping(int)
                0x00000000c001383c                VAS::setCPUSpecific(unsigned long)
                0x00000000c001383e                VAS::VAS(VAS*)
                0x00000000c001383e                VAS::VAS(VAS*)
                0x00000000c0013856                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0013884                VAS::getPageTableEntry(unsigned long)
                0x00000000c00138a3                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00139e0                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0013a04                VAS::virtualToPhysical(unsigned long)
                0x00000000c0013a1e                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0013a60                VAS::VAS()
                0x00000000c0013a60                VAS::VAS()
                0x00000000c0013aca                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0013aea                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0013b16                VAS::~VAS()
                0x00000000c0013b16                VAS::~VAS()
                0x00000000c0013c7e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013d82                VAS::allocatePages(int, int)
                0x00000000c0013e68                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013ec0                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013fb6                VAS::VAS(bool)
                0x00000000c0013fb6                VAS::VAS(bool)
                0x00000000c001419e                VAS::evict(unsigned long)
                0x00000000c00142a2                VAS::canLockPage(unsigned long)
                0x00000000c00142bc                VAS::unlockPage(unsigned long)
                0x00000000c00142f0                VAS::canLockPages(unsigned long, int)
                0x00000000c001432c                VAS::unlockPages(unsigned long, int)
                0x00000000c0014368                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0014678                VAS::lockPage(unsigned long)
                0x00000000c00146ea                VAS::lockPages(unsigned long, int)
                0x00000000c0014726                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c001479a                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00147c6                VAS::scanForEviction()
                0x00000000c00148ff                mapVASFirstTime
 .text          0x00000000c00149fa       0x2f sys/alarm.32
                0x00000000c00149fa                SysAlarm(regs*)
 .text          0x00000000c0014a29       0x36 sys/eject.32
                0x00000000c0014a29                SysEject(regs*)
 .text          0x00000000c0014a5f       0x18 sys/exit.32
                0x00000000c0014a5f                SysExit(regs*)
 .text          0x00000000c0014a77       0x1f sys/getcwd.32
                0x00000000c0014a77                SysGetCwd(regs*)
 .text          0x00000000c0014a96       0x26 sys/getpid.32
                0x00000000c0014a96                SysGetPID(regs*)
 .text          0x00000000c0014abc       0x21 sys/getramdata.32
                0x00000000c0014abc                SysGetRAMData(regs*)
 .text          0x00000000c0014add       0xbe sys/getvgaptr.32
                0x00000000c0014add                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014b9b        0x1 
 .text          0x00000000c0014b9c       0xb9 sys/kill.32
                0x00000000c0014b9c                SysKill(regs*)
 .text          0x00000000c0014c55       0xa8 sys/loaddll.32
                0x00000000c0014c55                SysLoadDLL(regs*)
 .text          0x00000000c0014cfd       0x12 sys/pause.32
                0x00000000c0014cfd                SysPause(regs*)
 .text          0x00000000c0014d0f       0x49 sys/pthread.32
                0x00000000c0014d0f                SysPthreadCreate(regs*)
                0x00000000c0014d27                SysPthreadGetTID(regs*)
                0x00000000c0014d31                SysInternalPthreadGetContext(regs*)
                0x00000000c0014d36                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c0014d3b                SysPthreadJoin(regs*)
                0x00000000c0014d40                SysPthreadExit(regs*)
 .text          0x00000000c0014d58       0x68 sys/read.32
                0x00000000c0014d58                SysRead(regs*)
 .text          0x00000000c0014dc0       0x29 sys/registersignal.32
                0x00000000c0014dc0                SysRegisterSignal(regs*)
 .text          0x00000000c0014de9      0x1cc sys/registry.32
                0x00000000c0014de9                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014e2d                SysRegistryReadExtent(regs*)
                0x00000000c0014e75                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014e8c                SysRegistryEnterDirectory(regs*)
                0x00000000c0014ea3                SysRegistryGetNext(regs*)
                0x00000000c0014eba                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014ef4                SysRegistryOpen(regs*)
                0x00000000c0014f08                SysRegistryClose(regs*)
                0x00000000c0014f1f                SysRegistryEasyReadString(regs*)
                0x00000000c0014f6b                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014fb5       0x55 sys/sbrk.32
                0x00000000c0014fb5                SysSbrk(regs*)
 .text          0x00000000c001500a       0x1c sys/setcwd.32
                0x00000000c001500a                SysSetCwd(regs*)
 .text          0x00000000c0015026       0xd7 sys/settime.32
                0x00000000c0015026                SysSetTime(regs*)
 .text          0x00000000c00150fd       0x73 sys/symlink.32
                0x00000000c00150fd                SysSymlink(regs*)
 .text          0x00000000c0015170       0x3e sys/timezone.32
                0x00000000c0015170                SysTimezone(regs*)
 .text          0x00000000c00151ae       0xfc sys/truncate.32
                0x00000000c00151ae                SysTruncate(regs*)
 .text          0x00000000c00152aa       0x68 sys/write.32
                0x00000000c00152aa                SysWrite(regs*)
 .text          0x00000000c0015312       0x9d sys/wsbe.32
                0x00000000c0015312                SysWsbe(regs*)
 .text          0x00000000c00153af       0x28 sys/yield.32
                0x00000000c00153af                SysYield(regs*)
 *fill*         0x00000000c00153d7        0x1 
 .text          0x00000000c00153d8      0x281 thr/alarm.32
                0x00000000c00153d8                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c0015568                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c0015659     0x12a0 thr/elf.32
                0x00000000c0015659                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00158eb                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0015b83                Thr::runtimeReferenceHelper()
                0x00000000c0015b96                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0015be5                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015ea3                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00165eb                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001661d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0016654                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001666e                Thr::loadDLL(char const*, bool)
                0x00000000c00168c0                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00168f9       0x5a thr/exec.32
                0x00000000c00168f9                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0016953        0x1 
 .text          0x00000000c0016954     0x129d thr/prcssthr.32
                0x00000000c0016954                userModeEntryPoint(void*)
                0x00000000c0016980                changeTSS
                0x00000000c00169b0                switchToThread(ThreadControlBlock*)
                0x00000000c0016a70                Process::addArgs(char**)
                0x00000000c0016adc                Process::Process(char const*, Process*, char**)
                0x00000000c0016adc                Process::Process(char const*, Process*, char**)
                0x00000000c0016d14                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016d14                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016f00                taskStartupFunction
                0x00000000c0016f0c                KeDisablePreemption()
                0x00000000c0016f34                KeRestorePreemption()
                0x00000000c0016f54                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00170ac                Process::createUserThread()
                0x00000000c00170cc                setupMultitasking(void (*)())
                0x00000000c0017214                schedule()
                0x00000000c00172a8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00172d4                blockTask(TaskState)
                0x00000000c0017310                waitTask(int, int*, int)
                0x00000000c0017354                milliTenthSleepUntil(unsigned long long)
                0x00000000c0017408                milliTenthSleep(unsigned long long)
                0x00000000c0017420                sleep(unsigned long long)
                0x00000000c0017440                sleep(unsigned int)
                0x00000000c0017458                milliTenthSleep(unsigned int)
                0x00000000c0017478                taskReturned
                0x00000000c00174c0                Thr::processFromPID(int)
                0x00000000c0017570                unblockTask(ThreadControlBlock*)
                0x00000000c0017624                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00178fc                cleanerTaskFunction(void*)
                0x00000000c0017a14                terminateTask(int)
                0x00000000c0017b24                Thr::terminateFromIRQ(int)
 .text          0x00000000c0017bf1      0xe5f vm86/vm8086.32
                0x00000000c0017bf1                Vm::inbv(unsigned short)
                0x00000000c0017c04                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017c3a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0017c4a                Vm::getSegment(unsigned int)
                0x00000000c0017c52                Vm::getOffset(unsigned int)
                0x00000000c0017c57                Vm::mainloop2()
                0x00000000c0017c98                Vm::mainVm8086Loop(void*)
                0x00000000c0017cac                Vm::mainloop3(unsigned long)
                0x00000000c0017cde                Vm::initialise8086()
                0x00000000c0017d22                Vm::resetConventionalMemory8086()
                0x00000000c0017d23                Vm::finish8086()
                0x00000000c0017d94                Vm::getOutput8086(unsigned char*)
                0x00000000c0017db9                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017f1b                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0018163                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00181fd                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001820e                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0018220                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0018231                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018246                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001825c                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0018271                Vm::faultHandler(regs*)
 .text          0x00000000c0018a50      0x45f arch/i386/apic.32
                0x00000000c0018a50                IOAPIC::close(int, int, void*)
                0x00000000c0018a56                apicGetBase()
                0x00000000c0018a90                IOAPIC::IOAPIC()
                0x00000000c0018a90                IOAPIC::IOAPIC()
                0x00000000c0018ab8                apicOpen()
                0x00000000c0018c44                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0018c76                IOAPIC::read(int)
                0x00000000c0018c9e                IOAPIC::open(int, int, void*)
                0x00000000c0018d84                IOAPIC::write(int, int)
                0x00000000c0018db0                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0018eaf        0x1 
 .text          0x00000000c0018eb0     0x1f3f arch/i386/hal.32
                0x00000000c0018eb0                noCopro(unsigned long)
                0x00000000c0018eb1                HalRestart()
                0x00000000c0018ebc                HalShutdown()
                0x00000000c0018ebd                HalSleep()
                0x00000000c0018ebe                CPU::close(int, int, void*)
                0x00000000c0018ec1                x86ReadCMOS(unsigned char)
                0x00000000c0018f15                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018f75                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018f94                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018fb1                AMD_K6_writeback(int, int, int)
                0x00000000c0019071                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c001910f                cpuidCheckEDX(unsigned int)
                0x00000000c001913c                cpuidCheckECX(unsigned int)
                0x00000000c001916a                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0019198                cpuidCheckExtendedECX(unsigned int)
                0x00000000c00191c6                HalDetectFeatures()
                0x00000000c0019fb1                HalEnableNMI()
                0x00000000c0019fc4                HalDisableNMI()
                0x00000000c0019fd7                HalGetNMIState()
                0x00000000c0019fdd                x86rdmsr(unsigned int)
                0x00000000c001a01b                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c001a060                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c001a076                HalFindRSDP()
                0x00000000c001a153                HalHandlePageFault(void*, void*)
                0x00000000c001a182                HalHandleOpcodeFault(void*, void*)
                0x00000000c001a1c4                HalDisplayDebugInfo(void*)
                0x00000000c001a552                HalReceivedNMI()
                0x00000000c001a5ed                HalSystemIdle()
                0x00000000c001a64c                i386SaveCoprocessor(void*)
                0x00000000c001a660                i386LoadCoprocessor(void*)
                0x00000000c001a674                x87EmulHandler(regs*, void*)
                0x00000000c001a711                HalInitialiseCoprocessor()
                0x00000000c001a795                HalPanic(char const*)
                0x00000000c001a8a9                HalQueryPerformanceCounter()
                0x00000000c001a8b9                HalInitialise()
                0x00000000c001aaa1                HalMakeBeep(int)
                0x00000000c001aadb                HalGetRand()
                0x00000000c001aade                HalEndOfInterrupt(int)
                0x00000000c001ab0a                CPU::CPU()
                0x00000000c001ab0a                CPU::CPU()
                0x00000000c001ab8e                CPU::setupSMEP()
                0x00000000c001ab9a                CPU::setupUMIP()
                0x00000000c001aba4                CPU::setupTSC()
                0x00000000c001abae                CPU::setupLargePages()
                0x00000000c001abb8                CPU::setupPAT()
                0x00000000c001abea                CPU::setupMTRR()
                0x00000000c001abec                CPU::setupGlobalPages()
                0x00000000c001abf6                CPU::allowUsermodeDataAccess()
                0x00000000c001ac04                CPU::prohibitUsermodeDataAccess()
                0x00000000c001ac12                CPU::setupSMAP()
                0x00000000c001ac20                CPU::setupFeatures()
                0x00000000c001acec                CPU::open(int, int, void*)
 .text          0x00000000c001adef      0x261 arch/i386/intctrl.32
                0x00000000c001adef                convertLegacyIRQNumber(int)
                0x00000000c001ae2b                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001ae75                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001afa3                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001afd7                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 .text          0x00000000c001b050      0x2dc arch/i386/pic.32
                0x00000000c001b050                picIoWait()
                0x00000000c001b058                picDisable()
                0x00000000c001b08c                picGetIRQReg(int)
                0x00000000c001b108                picOpen()
                0x00000000c001b28c                picEOI(int)
 .text          0x00000000c001b32c      0x5f3 arch/i386/rtc.32
                0x00000000c001b32c                RTC::open(int, int, void*)
                0x00000000c001b330                RTC::close(int, int, void*)
                0x00000000c001b334                RTC::timeInSecondsUTC()
                0x00000000c001b346                RTC::timeInDatetimeUTC()
                0x00000000c001b36c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b3aa                RTC::~RTC()
                0x00000000c001b3aa                RTC::~RTC()
                0x00000000c001b3ce                RTC::~RTC()
                0x00000000c001b3f8                RTC::get_update_in_progress_flag()
                0x00000000c001b40c                RTC::completeRTCRefresh()
                0x00000000c001b6c0                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b836                rtcIRQHandler(regs*, void*)
                0x00000000c001b876                RTC::RTC()
                0x00000000c001b876                RTC::RTC()
 *fill*         0x00000000c001b91f        0x1 
 .text          0x00000000c001b920      0x1f4 arch/i386/vga.32
                0x00000000c001b920                HalConsoleScroll(int, int)
                0x00000000c001ba28                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001ba8c                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001bb14     0x14cf fs/fat/vfslink.32
                0x00000000c001bb14                FAT::getName()
                0x00000000c001bb1c                FAT::tell(void*, unsigned long long*)
                0x00000000c001bb58                FAT::stat(void*, unsigned long long*)
                0x00000000c001bb94                FAT::~FAT()
                0x00000000c001bb94                FAT::~FAT()
                0x00000000c001bbb8                FAT::~FAT()
                0x00000000c001bbe0                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001bc84                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001bd48                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001bf2c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001c148                FAT::allocateSwapfile(char const*, int)
                0x00000000c001c308                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c478                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c4d8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c538                FAT::close(void*)
                0x00000000c001c58c                FAT::closeDir(void*)
                0x00000000c001c5e0                FAT::truncate(void*, unsigned long long)
                0x00000000c001c64c                FAT::seek(void*, unsigned long long)
                0x00000000c001c6a4                fatWrapperReadDisk
                0x00000000c001c6e4                fatWrapperWriteDisk
                0x00000000c001c724                fatWrapperIoctl
                0x00000000c001c840                FAT::FAT()
                0x00000000c001c840                FAT::FAT()
                0x00000000c001c898                FAT::fixFilepath(char*)
                0x00000000c001c8d8                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001ca4c                FAT::openDir(char const*, void**)
                0x00000000c001cafc                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001cbf4                FAT::unlink(char const*)
                0x00000000c001cc74                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ce28                FAT::rename(char const*, char const*)
                0x00000000c001cef4                FAT::mkdir(char const*)
                0x00000000c001cf74                FAT::exists(char const*)
 *fill*         0x00000000c001cfe3        0x1 
 .text          0x00000000c001cfe4       0x94 fs/iso9660/helper.32
                0x00000000c001cfe4                isoReadDiscSectorHelper
                0x00000000c001d040                iso_kprintf
                0x00000000c001d05c                iso_kprintfd
 .text          0x00000000c001d078      0x71c fs/iso9660/vfslink.32
                0x00000000c001d078                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001d07e                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001d084                ISO9660::getName()
                0x00000000c001d08a                ISO9660::closeDir(void*)
                0x00000000c001d094                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001d09a                ISO9660::unlink(char const*)
                0x00000000c001d0a0                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001d0a6                ISO9660::rename(char const*, char const*)
                0x00000000c001d0ac                ISO9660::mkdir(char const*)
                0x00000000c001d0b2                ISO9660::~ISO9660()
                0x00000000c001d0b2                ISO9660::~ISO9660()
                0x00000000c001d0d6                ISO9660::~ISO9660()
                0x00000000c001d0fe                ISO9660::exists(char const*)
                0x00000000c001d112                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001d1f8                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001d240                ISO9660::seek(void*, unsigned long long)
                0x00000000c001d282                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001d2c0                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001d312                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d454                ISO9660::close(void*)
                0x00000000c001d484                ISO9660::openDir(char const*, void**)
                0x00000000c001d55e                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d67b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d6fa                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d76c                ISO9660::ISO9660()
                0x00000000c001d76c                ISO9660::ISO9660()
 .text          0x00000000c001d794      0x26c hal/sound/sndcard.32
                0x00000000c001d794                SoundCard::beginPlayback()
                0x00000000c001d7a2                SoundCard::stopPlayback()
                0x00000000c001d7b0                SoundCard::SoundCard(char const*)
                0x00000000c001d7b0                SoundCard::SoundCard(char const*)
                0x00000000c001d84e                SoundCard::~SoundCard()
                0x00000000c001d84e                SoundCard::~SoundCard()
                0x00000000c001d872                SoundCard::~SoundCard()
                0x00000000c001d89c                SoundCard::configureRates(int, int, int)
                0x00000000c001d8cc                SoundCard::getSamples16(int, short*)
                0x00000000c001d928                SoundCard::getSamples32(int, int*)
                0x00000000c001d9ae                SoundCard::addChannel(SoundPort*)
                0x00000000c001d9ec                SoundCard::removeChannel(int)
 .text          0x00000000c001da00      0x426 hal/sound/sndport.32
                0x00000000c001da00                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001da00                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001da8c                SoundPort::~SoundPort()
                0x00000000c001da8c                SoundPort::~SoundPort()
                0x00000000c001dac0                SoundPort::unpause()
                0x00000000c001dacc                SoundPort::pause()
                0x00000000c001dad8                SoundPort::getBufferUsed()
                0x00000000c001dae0                SoundPort::getBufferSize()
                0x00000000c001dae8                SoundPort::buffer8(signed char*, int)
                0x00000000c001db7c                SoundPort::buffer16(short*, int)
                0x00000000c001dc10                SoundPort::buffer32(int*, int)
                0x00000000c001dc9c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001dd68                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001de26      0xc23 hw/bus/pci.32
                0x00000000c001de26                PCI::open(int, int, void*)
                0x00000000c001de44                PCI::close(int, int, void*)
                0x00000000c001de48                PCI::PCI()
                0x00000000c001de48                PCI::PCI()
                0x00000000c001dee0                PCI::readBAR8(unsigned int, int)
                0x00000000c001defc                PCI::readBAR16(unsigned int, int)
                0x00000000c001df1a                PCI::readBAR32(unsigned int, int)
                0x00000000c001df36                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001df56                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001df78                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001df98                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e00e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e0b8                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001e0dc                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001e104                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001e14e                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001e176                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001e19a                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001e1be                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001e1e6                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e24a                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001e332                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e5f8                PCI::checkBus(unsigned char)
                0x00000000c001e61c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e802                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e97e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e9f0                PCI::detect()
 *fill*         0x00000000c001ea49        0x1 
 .text          0x00000000c001ea4a      0xe58 hw/diskctrl/ide.32
                0x00000000c001ea4a                IDE::close(int, int, void*)
                0x00000000c001ea4e                IDE::IDE()
                0x00000000c001ea4e                IDE::IDE()
                0x00000000c001ea82                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ea94                selectDrive(unsigned char, unsigned char)
                0x00000000c001ea96                IDE::getBase(unsigned char)
                0x00000000c001eaa8                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001eb68                IDE::read(unsigned char, unsigned char)
                0x00000000c001ec16                IDE::waitInterrupt(unsigned char)
                0x00000000c001ec79                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ec95                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ecb2                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ecfc                IDE::open(int, int, void*)
                0x00000000c001f256                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001f326                IDE::detect()
                0x00000000c001f794                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f84e                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f8a2      0x33d hw/diskctrl/satabus.32
                0x00000000c001f8a2                SATABus::close(int, int, void*)
                0x00000000c001f8a6                SATABus::detect()
                0x00000000c001f8a8                SATABus::SATABus()
                0x00000000c001f8a8                SATABus::SATABus()
                0x00000000c001f92e                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f960                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f9a8                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f9c8                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f9f2                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001fb02                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001fbac                SATABus::open(int, int, void*)
 *fill*         0x00000000c001fbdf        0x1 
 .text          0x00000000c001fbe0      0x7a9 hw/diskphys/ata.32
                0x00000000c001fbe0                ATA::close(int, int, void*)
                0x00000000c001fc04                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001fc06                ATA::ATA()
                0x00000000c001fc06                ATA::ATA()
                0x00000000c001fc34                ATA::flush(bool)
                0x00000000c001fc82                ATA::readyForCommand()
                0x00000000c001fcce                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c00200be                ATA::read(unsigned long long, int, void*)
                0x00000000c002010a                ATA::write(unsigned long long, int, void*)
                0x00000000c0020156                ATA::detectCHS()
                0x00000000c0020180                ATA::open(int, int, void*)
                0x00000000c002036b                combineCharAndColour(char, unsigned char)
                0x00000000c002037c                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c0020389        0x1 
 .text          0x00000000c002038a      0x618 hw/diskphys/atapi.32
                0x00000000c002038a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c0020390                ATAPI::close(int, int, void*)
                0x00000000c00203b4                ATAPI::ATAPI()
                0x00000000c00203b4                ATAPI::ATAPI()
                0x00000000c00203e2                ATAPI::readyForCommand()
                0x00000000c0020434                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c00206fc                ATAPI::diskRemoved()
                0x00000000c0020736                ATAPI::eject()
                0x00000000c002077e                ATAPI::diskInserted()
                0x00000000c002078a                ATAPI::detectMedia()
                0x00000000c0020848                ATAPI::open(int, int, void*)
                0x00000000c0020928                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c00209a2      0x44c hw/diskphys/sata.32
                0x00000000c00209a2                SATA::close(int, int, void*)
                0x00000000c00209c6                SATA::powerSaving(PowerSavingLevel)
                0x00000000c00209c8                SATA::open(int, int, void*)
                0x00000000c0020a80                SATA::SATA()
                0x00000000c0020a80                SATA::SATA()
                0x00000000c0020aae                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020d36                SATA::read(unsigned long long, int, void*)
                0x00000000c0020d82                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020dee      0x5d4 hw/diskphys/satapi.32
                0x00000000c0020dee                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020df4                SATAPI::close(int, int, void*)
                0x00000000c0020e18                SATAPI::SATAPI()
                0x00000000c0020e18                SATAPI::SATAPI()
                0x00000000c0020e46                SATAPI::diskRemoved()
                0x00000000c0020e48                SATAPI::diskInserted()
                0x00000000c0020e64                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0021146                SATAPI::eject()
                0x00000000c0021182                SATAPI::detectMedia()
                0x00000000c00211d8                SATAPI::open(int, int, void*)
                0x00000000c00212d8                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c00213c2        0x2 
 .text          0x00000000c00213c4       0xf0 hw/timer/apictimer.32
                0x00000000c00213c4                APICTimer::close(int, int, void*)
                0x00000000c00213cc                apicTimerHandler(regs*, void*)
                0x00000000c00213f4                APICTimer::open(int, int, void*)
                0x00000000c0021464                APICTimer::write(int)
                0x00000000c002148c                APICTimer::APICTimer()
                0x00000000c002148c                APICTimer::APICTimer()
 .text          0x00000000c00214b4      0x1ad hw/timer/pit.32
                0x00000000c00214b4                PIT::write(int)
                0x00000000c0021538                pitHandler(regs*, void*)
                0x00000000c0021560                PIT::open(int, int, void*)
                0x00000000c00215b0                PIT::close(int, int, void*)
                0x00000000c00215e0                PIT::PIT()
                0x00000000c00215e0                PIT::PIT()
 *fill*         0x00000000c0021661        0xf 
 .text          0x00000000c0021670       0x6f arch/i386/avx.32
                0x00000000c0021670                avxDetect
                0x00000000c002169a                avxSave
                0x00000000c00216ab                avxLoad
                0x00000000c00216bc                avxInit
                0x00000000c00216de                avxClose
 *fill*         0x00000000c00216df        0x1 
 .text          0x00000000c00216e0      0x2b4 arch/i386/interrupt.32
                0x00000000c00216e0                isr0
                0x00000000c00216f0                isr1
                0x00000000c00216fa                isr2
                0x00000000c0021704                isr3
                0x00000000c002170e                isr4
                0x00000000c0021718                isr5
                0x00000000c0021722                isr6
                0x00000000c002172c                isr7
                0x00000000c0021736                isr8
                0x00000000c002173e                isr9
                0x00000000c0021748                isr10
                0x00000000c0021750                isr11
                0x00000000c0021758                isr12
                0x00000000c0021760                isr13
                0x00000000c002177a                isr14
                0x00000000c0021782                isr15
                0x00000000c002178c                isr16
                0x00000000c0021796                isr17
                0x00000000c00217a0                isr18
                0x00000000c00217aa                irq3
                0x00000000c00217b4                irq4
                0x00000000c00217be                irq5
                0x00000000c00217c8                irq6
                0x00000000c00217d2                irq7
                0x00000000c00217dc                irq8
                0x00000000c00217e6                irq9
                0x00000000c00217f0                irq10
                0x00000000c00217fa                irq11
                0x00000000c0021804                irq12
                0x00000000c002180e                irq13
                0x00000000c0021818                irq14
                0x00000000c0021822                irq15
                0x00000000c002182c                irq1
                0x00000000c0021833                irq2
                0x00000000c002183a                isr96
                0x00000000c0021841                irq0
                0x00000000c0021846                int_common_stub
                0x00000000c0021846                syscall_common_stub
                0x00000000c0021944                irq16
                0x00000000c002194e                irq17
                0x00000000c0021958                irq18
                0x00000000c0021962                irq19
                0x00000000c002196c                irq20
                0x00000000c0021976                irq21
                0x00000000c0021980                irq22
                0x00000000c002198a                irq23
 *fill*         0x00000000c0021994        0xc 
 .text          0x00000000c00219a0       0x10 arch/i386/rdrand.32
                0x00000000c00219a0                i386GetRDRAND
 .text          0x00000000c00219b0       0x39 arch/i386/sse.32
                0x00000000c00219b0                sseDetect
                0x00000000c00219c8                sseSave
                0x00000000c00219d0                sseLoad
                0x00000000c00219d8                sseInit
                0x00000000c00219e8                sseClose
 *fill*         0x00000000c00219e9        0x7 
 .text          0x00000000c00219f0       0x4f arch/i386/x87.32
                0x00000000c00219f6                x87Detect
                0x00000000c0021a17                x87Save
                0x00000000c0021a1e                x87Load
                0x00000000c0021a25                x87Init
                0x00000000c0021a3e                x87Close
 *fill*         0x00000000c0021a3f        0x1 
 .text          0x00000000c0021a40       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021a65        0x0 crtn.32
 *fill*         0x00000000c0021a65        0x3 
 .text          0x00000000c0021a68      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021a68                __divdi3
 *fill*         0x00000000c0021bb3        0x1 
 .text          0x00000000c0021bb4      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021bb4                __moddi3
 *fill*         0x00000000c0021d32        0x2 
 .text          0x00000000c0021d34       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021d34                __udivdi3
 *fill*         0x00000000c0021e33        0x1 
 .text          0x00000000c0021e34      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021e34                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021f50        0x0
 .iplt          0x00000000c0021f50        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021f4e        0xf
 .init          0x00000000c0021f4e        0x3 crti.32
                0x00000000c0021f4e                _init
 .init          0x00000000c0021f51        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021f56        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021f5b        0x2 crtn.32

.fini           0x00000000c0021f5d        0xa
 .fini          0x00000000c0021f5d        0x3 crti.32
                0x00000000c0021f5d                _fini
 .fini          0x00000000c0021f60        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021f65        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021f68       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021f68       0x1a hal/device.32
                0x00000000c0021f68                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021f68                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021f82       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021f82       0x2a hal/device.32
                0x00000000c0021f82                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021fac       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021fac       0xdc hal/device.32
                0x00000000c0021fac                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0022088       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0022088       0x42 hal/device.32
                0x00000000c0022088                LinkedList<Device>::LinkedList()
                0x00000000c0022088                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00220cc       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00220cc       0x1c hal/timer.32
                0x00000000c00220cc                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00220e8        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00220e8        0x7 hal/timer.32
                0x00000000c00220e8                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00220f0       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00220f0       0xbc hal/timer.32
                0x00000000c00220f0                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00221ac       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00221ac       0xda hal/timer.32
                0x00000000c00221ac                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0022288       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0022288       0x23 hw/acpi.32
                0x00000000c0022288                ACPI::~ACPI()
                0x00000000c0022288                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c00222ac       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c00222ac       0x2a hw/acpi.32
                0x00000000c00222ac                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00222d8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00222d8        0x2 hw/acpi.32
                0x00000000c00222d8                LinkedList<Device>::~LinkedList()
                0x00000000c00222d8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00222dc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00222dc       0x1c hw/acpi.32
                0x00000000c00222dc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00222f8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00222f8        0x7 hw/acpi.32
                0x00000000c00222f8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022300       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022300       0xb8 hw/acpi.32
                0x00000000c0022300                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c00223b8       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c00223b8       0x23 krnl/computer.32
                0x00000000c00223b8                Computer::~Computer()
                0x00000000c00223b8                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c00223dc       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c00223dc       0x2a krnl/computer.32
                0x00000000c00223dc                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0022406       0x24
 .text._Z10idleCommonv
                0x00000000c0022406       0x24 krnl/idle.32
                0x00000000c0022406                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002242a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002242a        0x2 krnl/unixfile.32
                0x00000000c002242a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c002242a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002242c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002242c       0x42 krnl/unixfile.32
                0x00000000c002242c                LinkedList<UnixFile>::LinkedList()
                0x00000000c002242c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002246e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002246e       0xd3 krnl/unixfile.32
                0x00000000c002246e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022542        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022542        0x7 krnl/unixfile.32
                0x00000000c0022542                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002254a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002254a       0xa1 krnl/unixfile.32
                0x00000000c002254a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00225ec        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00225ec        0x8 krnl/unixfile.32
                0x00000000c00225ec                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00225f4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00225f4        0x8 sys/kill.32
                0x00000000c00225f4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00225fc        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00225fc        0x2 thr/prcssthr.32
                0x00000000c00225fc                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00225fc                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022600       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022600       0x49 thr/prcssthr.32
                0x00000000c0022600                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0022600                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002264c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002264c       0x42 thr/prcssthr.32
                0x00000000c002264c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c002264c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN6IOAPICD2Ev
                0x00000000c002268e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002268e       0x23 arch/i386/apic.32
                0x00000000c002268e                IOAPIC::~IOAPIC()
                0x00000000c002268e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00226b2       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00226b2       0x2a arch/i386/apic.32
                0x00000000c00226b2                IOAPIC::~IOAPIC()

.text._ZN3CPUD2Ev
                0x00000000c00226dc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00226dc       0x23 arch/i386/hal.32
                0x00000000c00226dc                CPU::~CPU()
                0x00000000c00226dc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0022700       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0022700       0x2a arch/i386/hal.32
                0x00000000c0022700                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002272a       0x23
 .text._ZN3PCID2Ev
                0x00000000c002272a       0x23 hw/bus/pci.32
                0x00000000c002272a                PCI::~PCI()
                0x00000000c002272a                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002274e       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002274e       0x2a hw/bus/pci.32
                0x00000000c002274e                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0022778       0x23
 .text._ZN3IDED2Ev
                0x00000000c0022778       0x23 hw/diskctrl/ide.32
                0x00000000c0022778                IDE::~IDE()
                0x00000000c0022778                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002279c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002279c       0x2a hw/diskctrl/ide.32
                0x00000000c002279c                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00227c6       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00227c6       0x23 hw/diskctrl/satabus.32
                0x00000000c00227c6                SATABus::~SATABus()
                0x00000000c00227c6                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c00227ea       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c00227ea       0x2a hw/diskctrl/satabus.32
                0x00000000c00227ea                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0022814       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0022814       0x23 hw/diskphys/ata.32
                0x00000000c0022814                ATA::~ATA()
                0x00000000c0022814                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0022838       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0022838       0x2a hw/diskphys/ata.32
                0x00000000c0022838                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0022862       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0022862       0x23 hw/diskphys/atapi.32
                0x00000000c0022862                ATAPI::~ATAPI()
                0x00000000c0022862                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0022886       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0022886       0x2a hw/diskphys/atapi.32
                0x00000000c0022886                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00228b0       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00228b0       0x23 hw/diskphys/sata.32
                0x00000000c00228b0                SATA::~SATA()
                0x00000000c00228b0                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c00228d4       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c00228d4       0x2a hw/diskphys/sata.32
                0x00000000c00228d4                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00228fe       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00228fe       0x23 hw/diskphys/satapi.32
                0x00000000c00228fe                SATAPI::~SATAPI()
                0x00000000c00228fe                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0022922       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0022922       0x2a hw/diskphys/satapi.32
                0x00000000c0022922                SATAPI::~SATAPI()

.text._ZN9APICTimerD2Ev
                0x00000000c002294c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c002294c       0x23 hw/timer/apictimer.32
                0x00000000c002294c                APICTimer::~APICTimer()
                0x00000000c002294c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022970       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022970       0x2a hw/timer/apictimer.32
                0x00000000c0022970                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002299c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002299c       0x23 hw/timer/pit.32
                0x00000000c002299c                PIT::~PIT()
                0x00000000c002299c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00229c0       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00229c0       0x2a hw/timer/pit.32
                0x00000000c00229c0                PIT::~PIT()

.rodata         0x00000000c00229ea     0x3da2
                0x00000000c00229ea                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00229ea        0x2 
 .ctors         0x00000000c00229ec        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00229f0        0x4 krnl/unixfile.32
 .ctors         0x00000000c00229f4        0x4 thr/prcssthr.32
 .ctors         0x00000000c00229f8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00229fc                end_ctors = .
                0x00000000c00229fc                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00229fc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022a00        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022a00                __DTOR_END__
                0x00000000c0022a04                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022a04       0x1c 
 .rodata        0x00000000c0022a20      0x101 acpica/utclib.32
                0x00000000c0022a20                AcpiGbl_Ctypes
 *fill*         0x00000000c0022b21        0x3 
 .rodata        0x00000000c0022b24       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0022b3c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022b86       0x1a 
 .rodata        0x00000000c0022ba0       0xed fs/fat/ff.32
 *fill*         0x00000000c0022c8d       0x13 
 .rodata        0x00000000c0022ca0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00230a0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002310f       0x11 dbg/kconsole.32
 .rodata.str1.4
                0x00000000c0023120       0x38 dbg/kconsole.32
 .rodata        0x00000000c0023158      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00232a8      0x169 dbg/usban.32
 *fill*         0x00000000c0023411        0x3 
 .rodata.str1.4
                0x00000000c0023414      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002354b      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c002366e       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c00236c7        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c00236c8       0x6c fs/vfs.32
                0x00000000c00236c8                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0023734       0x1c fs/vfs.32
                0x00000000c0023734                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0023750       0x1c fs/vfs.32
                0x00000000c0023750                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002376c       0x2c hal/bus.32
                0x00000000c002376c                vtable for Bus
 *fill*         0x00000000c0023798        0x8 
 .rodata        0x00000000c00237a0      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c00238f0       0x3c hal/clock.32
                0x00000000c00238f0                vtable for Clock
 .rodata.str1.1
                0x00000000c002392c       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0023990       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00239b2       0x15 hal/device.32
 *fill*         0x00000000c00239c7        0x1 
 .rodata._ZTV6Device
                0x00000000c00239c8       0x2c hal/device.32
                0x00000000c00239c8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00239f4       0x2c hal/device.32
                0x00000000c00239f4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023a20       0x2c hal/diskctrl.32
                0x00000000c0023a20                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0023a4c       0x38 hal/diskphys.32
                0x00000000c0023a4c                vtable for PhysicalDisk
 .rodata        0x00000000c0023a84       0x53 hal/keybrd.32
 *fill*         0x00000000c0023ad7        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023ad8       0x34 hal/keybrd.32
                0x00000000c0023ad8                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0023b0c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0023b50       0x2c hal/logidisk.32
                0x00000000c0023b50                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0023b7c       0x2c hal/mouse.32
                0x00000000c0023b7c                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023ba8       0x34 hal/nic.32
                0x00000000c0023ba8                vtable for NIC
 .rodata.str1.1
                0x00000000c0023bdc        0xb hal/partition.32
 *fill*         0x00000000c0023be7        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023be8       0x44 hal/serial.32
                0x00000000c0023be8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023c2c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023c77        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023c7f       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023c7f       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0023c7f       0x45 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0023cc4       0x30 hal/timer.32
                0x00000000c0023cc4                vtable for Timer
 .rodata.str1.1
                0x00000000c0023cf4       0x3e hal/vcache.32
 *fill*         0x00000000c0023d32        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023d34       0x10 hal/vcache.32
                0x00000000c0023d34                vtable for VCache
 .rodata.str1.1
                0x00000000c0023d44       0xba hal/video.32
 *fill*         0x00000000c0023dfe        0x2 
 .rodata._ZTV5Video
                0x00000000c0023e00       0x4c hal/video.32
                0x00000000c0023e00                vtable for Video
 .rodata.str1.1
                0x00000000c0023e4c      0x1b7 hw/acpi.32
 *fill*         0x00000000c0024003        0x1 
 .rodata.str1.4
                0x00000000c0024004       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c002409f       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c002409f        0x8 hw/acpi.32
 *fill*         0x00000000c002409f        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00240a0       0x2c hw/acpi.32
                0x00000000c00240a0                vtable for ACPI
 .rodata.str1.1
                0x00000000c00240cc       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c00240df       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c002411f       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0024140       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0024173        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0024176       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c00241ec       0x21 krnl/computer.32
 *fill*         0x00000000c002420d        0x3 
 .rodata.str1.4
                0x00000000c0024210       0x2c krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c002423c       0x2c krnl/computer.32
                0x00000000c002423c                vtable for Computer
 .rodata.str1.1
                0x00000000c0024268       0x3c krnl/env.32
 .rodata        0x00000000c00242a4       0x7e krnl/fault.32
 .rodata.str1.1
                0x00000000c0024322        0x4 krnl/intlformat.32
 .rodata.str1.1
                0x00000000c0024326       0x11 krnl/intops.32
 *fill*         0x00000000c0024326        0x2 
 .rodata.str1.4
                0x00000000c0024328       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0024358        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0024367       0x9f krnl/main.32
                                         0xb9 (size before relaxing)
 *fill*         0x00000000c0024406        0x2 
 .rodata.str1.4
                0x00000000c0024408       0x48 krnl/main.32
 .rodata.str1.4
                0x00000000c0024450      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024555       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00245ad       0x39 krnl/pipe.32
 *fill*         0x00000000c00245e6        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00245e8       0x1c krnl/pipe.32
                0x00000000c00245e8                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024604       0x54 krnl/powctrl.32
 .rodata.str1.1
                0x00000000c0024658       0xa4 krnl/resolve.32
 .rodata.str1.4
                0x00000000c00246fc       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c002471b      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c0024823       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002486b       0x4d krnl/terminal.32
                                         0x5e (size before relaxing)
 .rodata._ZTV7VgaText
                0x00000000c00248b8       0x1c krnl/terminal.32
                0x00000000c00248b8                vtable for VgaText
 .rodata        0x00000000c00248d4       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002490f       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002490f       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002490f       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002490f        0x8 krnl/unixfile.32
 *fill*         0x00000000c002490f        0x1 
 .rodata.str1.4
                0x00000000c0024910       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0024930       0x1c krnl/unixfile.32
                0x00000000c0024930                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002494c       0x1c krnl/unixfile.32
                0x00000000c002494c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024968      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024eeb      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c002504c       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0025061        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0025070        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002507a       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002509b       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c00250df       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c00250f4       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0025120       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c0025131      0x219 thr/elf.32
                                        0x228 (size before relaxing)
 .rodata.str1.1
                0x00000000c002534a       0x57 thr/prcssthr.32
 *fill*         0x00000000c00253a1        0x3 
 .rodata.str1.4
                0x00000000c00253a4       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002549c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002549c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002549c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002549c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002549c       0x61 vm86/vm8086.32
 *fill*         0x00000000c00254fd        0x3 
 .rodata.str1.4
                0x00000000c0025500       0x81 vm86/vm8086.32
 *fill*         0x00000000c0025581        0x3 
 .rodata        0x00000000c0025584      0x390 vm86/vm8086.32
 .rodata        0x00000000c0025914       0x17 arch/i386/apic.32
 *fill*         0x00000000c002592b        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c002592c       0x2c arch/i386/apic.32
                0x00000000c002592c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025958      0x322 arch/i386/hal.32
                                        0x335 (size before relaxing)
 *fill*         0x00000000c0025c7a        0x2 
 .rodata.str1.4
                0x00000000c0025c7c       0x23 arch/i386/hal.32
 *fill*         0x00000000c0025c9f        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025ca0       0x2c arch/i386/hal.32
                0x00000000c0025ca0                vtable for CPU
 .rodata.str1.4
                0x00000000c0025ccc       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025d2d       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025d6b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0025d80       0x3c arch/i386/rtc.32
                0x00000000c0025d80                vtable for RTC
 .rodata.str1.1
                0x00000000c0025dbc       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025dfd        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025e00       0x6c fs/fat/vfslink.32
                0x00000000c0025e00                vtable for FAT
 .rodata.str1.1
                0x00000000c0025e6c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025e6c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0025fa4       0x6c fs/iso9660/vfslink.32
                0x00000000c0025fa4                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0026010       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0026054       0x34 hal/sound/sndcard.32
                0x00000000c0026054                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0026088       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00260c7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00260ff       0xa1 hw/bus/pci.32
 .rodata        0x00000000c00261a0       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0026204       0x2c hw/bus/pci.32
                0x00000000c0026204                vtable for PCI
 .rodata.str1.1
                0x00000000c0026230      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0026354       0x2c hw/diskctrl/ide.32
                0x00000000c0026354                vtable for IDE
 .rodata.str1.4
                0x00000000c0026380       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00263a4       0x2c hw/diskctrl/satabus.32
                0x00000000c00263a4                vtable for SATABus
 .rodata.str1.1
                0x00000000c00263d0       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c002648b        0x1 
 .rodata._ZTV3ATA
                0x00000000c002648c       0x38 hw/diskphys/ata.32
                0x00000000c002648c                vtable for ATA
 .rodata.str1.1
                0x00000000c00264c4        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00264d1        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00264d4       0x38 hw/diskphys/atapi.32
                0x00000000c00264d4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002650c       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0026594       0x38 hw/diskphys/sata.32
                0x00000000c0026594                vtable for SATA
 .rodata.str1.1
                0x00000000c00265cc       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00266b6        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00266b8       0x38 hw/diskphys/satapi.32
                0x00000000c00266b8                vtable for SATAPI
 .rodata.str1.1
                0x00000000c00266f0       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002670b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002670c       0x30 hw/timer/apictimer.32
                0x00000000c002670c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002673c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0026759        0x3 
 .rodata._ZTV3PIT
                0x00000000c002675c       0x30 hw/timer/pit.32
                0x00000000c002675c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002678c      0xa79
 *(.data)
 .data          0x00000000c002678c        0x0 crti.32
 .data          0x00000000c002678c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002678c                __dso_handle
 .data          0x00000000c0026790        0x0 acpica/utclib.32
 .data          0x00000000c0026790        0x0 krnl/malloc.32
 .data          0x00000000c0026790        0x0 libk/ctype.32
 .data          0x00000000c0026790        0x0 libk/string.32
 .data          0x00000000c0026790        0x0 arch/i386/cc.32
 .data          0x00000000c0026790        0x0 fs/fat/diskio.32
 .data          0x00000000c0026790        0x0 fs/fat/ff.32
 .data          0x00000000c0026790        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0026790        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0026790        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0026790        0x0 dbg/kconsole.32
 *fill*         0x00000000c0026790       0x10 
 .data          0x00000000c00267a0       0x28 dbg/usban.32
                0x00000000c00267a0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00267c8        0x0 fs/symlink.32
 .data          0x00000000c00267c8        0x0 fs/vfs.32
 .data          0x00000000c00267c8        0x0 hal/bus.32
 .data          0x00000000c00267c8        0x0 hal/buzzer.32
 .data          0x00000000c00267c8        0x0 hal/clock.32
 .data          0x00000000c00267c8        0x0 hal/device.32
 .data          0x00000000c00267c8        0x0 hal/diskctrl.32
 .data          0x00000000c00267c8        0x0 hal/diskphys.32
 .data          0x00000000c00267c8        0x0 hal/fpu.32
 .data          0x00000000c00267c8        0x0 hal/keybrd.32
 .data          0x00000000c00267c8        0x0 hal/logidisk.32
 .data          0x00000000c00267c8        0x0 hal/mouse.32
 .data          0x00000000c00267c8        0x0 hal/nic.32
 .data          0x00000000c00267c8        0x0 hal/partition.32
 .data          0x00000000c00267c8        0x0 hal/serial.32
 .data          0x00000000c00267c8        0x0 hal/timer.32
 .data          0x00000000c00267c8        0x0 hal/vcache.32
 .data          0x00000000c00267c8        0x0 hal/video.32
 .data          0x00000000c00267c8       0x10 hw/acpi.32
                0x00000000c00267c8                legacyIRQRemaps
 .data          0x00000000c00267d8        0x0 krnl/assert.32
 .data          0x00000000c00267d8        0x0 krnl/atexit.32
 .data          0x00000000c00267d8        0x0 krnl/bootflags.32
 .data          0x00000000c00267d8        0x0 krnl/bootmsg.32
 .data          0x00000000c00267d8        0x4 krnl/c++.32
                0x00000000c00267d8                __stack_chk_guard
 .data          0x00000000c00267dc        0x0 krnl/cdefs.32
 *fill*         0x00000000c00267dc        0x4 
 .data          0x00000000c00267e0      0x100 krnl/cm.32
                0x00000000c00267e0                CmComponents
 .data          0x00000000c00268e0        0x0 krnl/compat.32
 .data          0x00000000c00268e0        0x0 krnl/computer.32
 .data          0x00000000c00268e0      0x400 krnl/crc32.32
                0x00000000c00268e0                KiPolyLookupCRC32
 .data          0x00000000c0026ce0       0x4d krnl/env.32
                0x00000000c0026ce0                defaultSysEnv
 .data          0x00000000c0026d2d        0x0 krnl/fault.32
 .data          0x00000000c0026d2d        0x0 krnl/gdt.32
 .data          0x00000000c0026d2d        0x0 krnl/idle.32
 .data          0x00000000c0026d2d        0x0 krnl/idt.32
 .data          0x00000000c0026d2d        0x0 krnl/inlines.32
 .data          0x00000000c0026d2d        0x0 krnl/intlformat.32
 .data          0x00000000c0026d2d        0x0 krnl/intops.32
 *fill*         0x00000000c0026d2d        0x3 
 .data          0x00000000c0026d30        0x4 krnl/kheap.32
 .data          0x00000000c0026d34        0x0 krnl/mailbox.32
 .data          0x00000000c0026d34        0x0 krnl/main.32
 .data          0x00000000c0026d34        0x0 krnl/mutex.32
 .data          0x00000000c0026d34        0x0 krnl/panic.32
 .data          0x00000000c0026d34        0x4 krnl/physmgr.32
                0x00000000c0026d34                Phys::bitmap
 .data          0x00000000c0026d38        0x0 krnl/pipe.32
 .data          0x00000000c0026d38        0x0 krnl/powctrl.32
 .data          0x00000000c0026d38        0x0 krnl/random.32
 .data          0x00000000c0026d38        0x0 krnl/resolve.32
 .data          0x00000000c0026d38        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026d38        0x8 
 .data          0x00000000c0026d40       0x4c krnl/signal.32
                0x00000000c0026d40                KiDefaultSignalHandlers
 *fill*         0x00000000c0026d8c       0x14 
 .data          0x00000000c0026da0      0x124 krnl/syscalls.32
                0x00000000c0026da0                systemCallHandlers
 *fill*         0x00000000c0026ec4       0x1c 
 .data          0x00000000c0026ee0       0x60 krnl/terminal.32
                0x00000000c0026ee0                VgaText::hiddenOut
                0x00000000c0026f00                ansiToVGAMappings
 .data          0x00000000c0026f40        0x0 krnl/tss.32
 .data          0x00000000c0026f40        0x4 krnl/unixfile.32
                0x00000000c0026f40                UnixFile::nextFd
 .data          0x00000000c0026f44       0x15 krnl/virtmgr.32
                0x00000000c0026f44                Virt::pageAllocPtr
                0x00000000c0026f48                Virt::bitmap
                0x00000000c0026f4c                Virt::swapfileSectorsPerPage
                0x00000000c0026f50                Virt::swapfileLength
                0x00000000c0026f54                Virt::swapfileSector
                0x00000000c0026f58                Virt::swapfileDrive
 .data          0x00000000c0026f59        0x0 sys/alarm.32
 .data          0x00000000c0026f59        0x0 sys/eject.32
 .data          0x00000000c0026f59        0x0 sys/exit.32
 .data          0x00000000c0026f59        0x0 sys/getcwd.32
 .data          0x00000000c0026f59        0x0 sys/getpid.32
 .data          0x00000000c0026f59        0x0 sys/getramdata.32
 .data          0x00000000c0026f59        0x0 sys/getvgaptr.32
 .data          0x00000000c0026f59        0x0 sys/kill.32
 .data          0x00000000c0026f59        0x0 sys/loaddll.32
 .data          0x00000000c0026f59        0x0 sys/pause.32
 .data          0x00000000c0026f59        0x0 sys/pthread.32
 .data          0x00000000c0026f59        0x0 sys/read.32
 .data          0x00000000c0026f59        0x0 sys/registersignal.32
 .data          0x00000000c0026f59        0x0 sys/registry.32
 .data          0x00000000c0026f59        0x0 sys/sbrk.32
 .data          0x00000000c0026f59        0x0 sys/setcwd.32
 .data          0x00000000c0026f59        0x0 sys/settime.32
 .data          0x00000000c0026f59        0x0 sys/symlink.32
 .data          0x00000000c0026f59        0x0 sys/timezone.32
 .data          0x00000000c0026f59        0x0 sys/truncate.32
 .data          0x00000000c0026f59        0x0 sys/write.32
 .data          0x00000000c0026f59        0x0 sys/wsbe.32
 .data          0x00000000c0026f59        0x0 sys/yield.32
 .data          0x00000000c0026f59        0x0 thr/alarm.32
 .data          0x00000000c0026f59        0x0 thr/elf.32
 .data          0x00000000c0026f59        0x0 thr/exec.32
 *fill*         0x00000000c0026f59        0x3 
 .data          0x00000000c0026f5c        0x4 thr/prcssthr.32
                0x00000000c0026f5c                Thr::nextPID
 .data          0x00000000c0026f60        0x0 vm86/vm8086.32
 .data          0x00000000c0026f60        0x0 arch/i386/apic.32
 .data          0x00000000c0026f60      0x2a4 arch/i386/hal.32
                0x00000000c0026f60                exceptionNames
                0x00000000c0027200                lastCode
 .data          0x00000000c0027204        0x0 arch/i386/intctrl.32
 .data          0x00000000c0027204        0x0 arch/i386/pic.32
 .data          0x00000000c0027204        0x0 arch/i386/rtc.32
 .data          0x00000000c0027204        0x0 arch/i386/vga.32
 .data          0x00000000c0027204        0x0 fs/fat/vfslink.32
 .data          0x00000000c0027204        0x0 fs/iso9660/helper.32
 .data          0x00000000c0027204        0x1 fs/iso9660/vfslink.32
                0x00000000c0027204                recentDriveletter
 .data          0x00000000c0027205        0x0 hal/sound/sndcard.32
 .data          0x00000000c0027205        0x0 hal/sound/sndport.32
 .data          0x00000000c0027205        0x0 hw/bus/pci.32
 .data          0x00000000c0027205        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0027205        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0027205        0x0 hw/diskphys/ata.32
 .data          0x00000000c0027205        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0027205        0x0 hw/diskphys/sata.32
 .data          0x00000000c0027205        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0027205        0x0 hw/timer/apictimer.32
 .data          0x00000000c0027205        0x0 hw/timer/pit.32
 .data          0x00000000c0027205        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0027205        0x0 crtn.32
 .data          0x00000000c0027205        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0027205        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0027205        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0027205        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0027208        0x0
 .got           0x00000000c0027208        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0027208        0x0
 .got.plt       0x00000000c0027208        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0027208        0x0
 .igot.plt      0x00000000c0027208        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0027208        0x0
 .tm_clone_table
                0x00000000c0027208        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0027208        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0027205      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0027205        0x3 
 .eh_frame      0x00000000c0027208        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0027208        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0027208       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0027260       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00272a0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002730c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0028000       0x7d
 *(userkernel)
 userkernel     0x00000000c0028000       0x52 krnl/signal.32
                0x00000000c0028000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002802c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0028052       0x2b krnl/syscalls.32
                0x00000000c0028052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0029000        0x1
 *(align_previous)
 align_previous
                0x00000000c0029000        0x1 krnl/signal.32
                0x00000000c0029000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0029004        0x0
 .rel.got       0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0029001     0x749b
                0x00000000c0029001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0029001       0x1f 
 COMMON         0x00000000c0029020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0029020                dcache
                0x00000000c0029060                cdDriveLetter
                0x00000000c0029080                icache
 *(.bss)
 .bss           0x00000000c00290c0        0x0 crti.32
 .bss           0x00000000c00290c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00290e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00290e4       0x1c 
 .bss           0x00000000c0029100      0x378 krnl/malloc.32
 .bss           0x00000000c0029478        0x0 libk/ctype.32
 .bss           0x00000000c0029478        0x0 libk/string.32
 .bss           0x00000000c0029478        0x0 arch/i386/cc.32
 .bss           0x00000000c0029478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0029478        0x8 
 .bss           0x00000000c0029480       0x88 fs/fat/ff.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0029508       0x18 
 .bss           0x00000000c0029520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0029eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0029eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0029eb8        0x8 
 .bss           0x00000000c0029ec0     0x2444 fs/symlink.32
                0x00000000c0029ec0                kiNumWaitingRoomSymlinks
                0x00000000c0029ee0                kiNewlyCreatedIDs
                0x00000000c0029f00                kiNewlyCreatedSymlinks
                0x00000000c002a300                kiSymlinkHashTable
                0x00000000c002c300                kiBaseSymlinkID
 .bss           0x00000000c002c304        0x4 fs/vfs.32
                0x00000000c002c304                installedFilesystems
 .bss           0x00000000c002c308        0x0 hal/bus.32
 .bss           0x00000000c002c308        0x0 hal/buzzer.32
 *fill*         0x00000000c002c308       0x18 
 .bss           0x00000000c002c320      0x348 hal/clock.32
                0x00000000c002c320                keLoadedTimezones
                0x00000000c002c324                keNumberOfTimezones
                0x00000000c002c340                keTimezoneStrings
                0x00000000c002c660                keDstOn
                0x00000000c002c661                keTimezoneHalfHourOffset
                0x00000000c002c664                keTimezoneHourOffset
 .bss           0x00000000c002c668        0x0 hal/device.32
 .bss           0x00000000c002c668        0x0 hal/diskctrl.32
 .bss           0x00000000c002c668        0x0 hal/diskphys.32
 .bss           0x00000000c002c668        0x0 hal/fpu.32
 *fill*         0x00000000c002c668       0x18 
 .bss           0x00000000c002c680      0x428 hal/keybrd.32
                0x00000000c002c680                keyboardWaitingTaskList
                0x00000000c002c684                keyboardSetupYet
                0x00000000c002c688                guiKeyboardHandler
                0x00000000c002c6a0                keystates
 *fill*         0x00000000c002caa8       0x18 
 .bss           0x00000000c002cac0       0x88 hal/logidisk.32
                0x00000000c002cac0                diskAssignments
                0x00000000c002cae0                disks
 .bss           0x00000000c002cb48        0x4 hal/mouse.32
                0x00000000c002cb48                guiMouseHandler
 .bss           0x00000000c002cb4c        0x0 hal/nic.32
 .bss           0x00000000c002cb4c        0x0 hal/partition.32
 .bss           0x00000000c002cb4c        0x0 hal/serial.32
 *fill*         0x00000000c002cb4c        0x4 
 .bss           0x00000000c002cb50        0x8 hal/timer.32
                0x00000000c002cb50                milliTenthsSinceBoot
 .bss           0x00000000c002cb58        0x0 hal/vcache.32
 .bss           0x00000000c002cb58        0x4 hal/video.32
                0x00000000c002cb58                screen
 *fill*         0x00000000c002cb5c        0x4 
 .bss           0x00000000c002cb60      0x480 hw/acpi.32
                0x00000000c002cb60                nextACPITable
                0x00000000c002cb80                acpiTables
                0x00000000c002cd80                usingXSDT
                0x00000000c002cd84                RSDTpointer
                0x00000000c002cd88                RSDPpointer
                0x00000000c002cd8c                nextAPICNMI
                0x00000000c002cda0                apicNMIInfo
                0x00000000c002ce20                legacyIRQFlags
                0x00000000c002ce40                ioapicDiscoveryNumber
                0x00000000c002ce60                ioapicFoundInMADT
                0x00000000c002ce80                ioapicAddresses
                0x00000000c002cf00                ioapicGSIBase
                0x00000000c002cf80                processorDiscoveryNumber
                0x00000000c002cfa0                matchingAPICID
                0x00000000c002cfc0                processorID
 .bss           0x00000000c002cfe0        0x0 krnl/assert.32
 .bss           0x00000000c002cfe0       0xe0 krnl/atexit.32
                0x00000000c002cfe0                KiNextAtexitHandler
                0x00000000c002d000                KiAtexitContexts
                0x00000000c002d060                KiAtexitHandlers
 .bss           0x00000000c002d0c0        0x4 krnl/bootflags.32
                0x00000000c002d0c0                keBootSettings
 .bss           0x00000000c002d0c4        0x0 krnl/bootmsg.32
 .bss           0x00000000c002d0c4        0x0 krnl/c++.32
 .bss           0x00000000c002d0c4        0x0 krnl/cdefs.32
 .bss           0x00000000c002d0c4        0x4 krnl/cm.32
 .bss           0x00000000c002d0c8        0x0 krnl/compat.32
 .bss           0x00000000c002d0c8        0x6 krnl/computer.32
                0x00000000c002d0c8                computer
                0x00000000c002d0cc                KeIsPreemptionOn
                0x00000000c002d0cd                KeIsSchedulingOn
 .bss           0x00000000c002d0ce        0x0 krnl/crc32.32
 *fill*         0x00000000c002d0ce        0x2 
 .bss           0x00000000c002d0d0        0x8 krnl/env.32
                0x00000000c002d0d0                KeUserEnv
                0x00000000c002d0d4                KeSystemEnv
 *fill*         0x00000000c002d0d8        0x8 
 .bss           0x00000000c002d0e0     0x2000 krnl/fault.32
                0x00000000c002d0e0                keInterruptContexts
                0x00000000c002e0e0                keInterruptHandlers
 .bss           0x00000000c002f0e0        0x6 krnl/gdt.32
                0x00000000c002f0e0                gdtDescr
 .bss           0x00000000c002f0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002f0e6        0x2 
 .bss           0x00000000c002f0e8        0x6 krnl/idt.32
                0x00000000c002f0e8                idtDescr
 .bss           0x00000000c002f0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002f0ee       0x12 
 .bss           0x00000000c002f100       0x24 krnl/intlformat.32
                0x00000000c002f100                keLocale
 .bss           0x00000000c002f124        0x0 krnl/intops.32
 .bss           0x00000000c002f124        0x0 krnl/kheap.32
 .bss           0x00000000c002f124        0x0 krnl/mailbox.32
 .bss           0x00000000c002f124        0x0 krnl/main.32
 .bss           0x00000000c002f124        0x0 krnl/mutex.32
 .bss           0x00000000c002f124        0x1 krnl/panic.32
                0x00000000c002f124                KeIsKernelInPanic
 *fill*         0x00000000c002f125        0x3 
 .bss           0x00000000c002f128       0x29 krnl/physmgr.32
                0x00000000c002f128                Phys::forbidEvictions
                0x00000000c002f12c                Phys::currentPagePointer
                0x00000000c002f130                Phys::highestMem
                0x00000000c002f134                Phys::oldPercent
                0x00000000c002f138                Phys::usedPages
                0x00000000c002f13c                Phys::usablePages
                0x00000000c002f140                Phys::dmaUsage
 .bss           0x00000000c002f151        0x0 krnl/pipe.32
 *fill*         0x00000000c002f151        0xf 
 .bss           0x00000000c002f160       0x48 krnl/powctrl.32
                0x00000000c002f160                keSleepFunction
                0x00000000c002f164                keRestartFunction
                0x00000000c002f168                keShutdownFunction
                0x00000000c002f16c                powCtrlOnBattery
                0x00000000c002f180                currentPowerSettings
                0x00000000c002f1a4                secondsSinceLastUserIO
 .bss           0x00000000c002f1a8        0x8 krnl/random.32
                0x00000000c002f1a8                kiRandSeed
 .bss           0x00000000c002f1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002f1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002f1b0        0x0 krnl/signal.32
 .bss           0x00000000c002f1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002f1b0        0x9 krnl/terminal.32
                0x00000000c002f1b0                terminalCycle
                0x00000000c002f1b4                activeTerminal
                0x00000000c002f1b8                VgaText::graphicMode
 *fill*         0x00000000c002f1b9        0x1 
 .bss           0x00000000c002f1ba        0x2 krnl/tss.32
                0x00000000c002f1ba                doubleFaultSelector
 *fill*         0x00000000c002f1bc        0x4 
 .bss           0x00000000c002f1c0       0x84 krnl/unixfile.32
                0x00000000c002f1c0                sfileLpt
                0x00000000c002f200                sfileCom
                0x00000000c002f224                sfileNul
                0x00000000c002f228                sfilePnt
                0x00000000c002f22c                sfileAux
                0x00000000c002f230                sfileCon
                0x00000000c002f234                initialFilesAdded
                0x00000000c002f238                unixFileLinkedList
 .bss           0x00000000c002f244       0x10 krnl/virtmgr.32
                0x00000000c002f244                twswaps
                0x00000000c002f248                swapBalance
                0x00000000c002f24c                Virt::swapfileBitmap
                0x00000000c002f250                keFirstVAS
 .bss           0x00000000c002f254        0x0 sys/alarm.32
 .bss           0x00000000c002f254        0x0 sys/eject.32
 .bss           0x00000000c002f254        0x0 sys/exit.32
 .bss           0x00000000c002f254        0x0 sys/getcwd.32
 .bss           0x00000000c002f254        0x0 sys/getpid.32
 .bss           0x00000000c002f254        0x0 sys/getramdata.32
 .bss           0x00000000c002f254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002f254        0x0 sys/kill.32
 .bss           0x00000000c002f254        0x0 sys/loaddll.32
 .bss           0x00000000c002f254        0x0 sys/pause.32
 .bss           0x00000000c002f254        0x0 sys/pthread.32
 .bss           0x00000000c002f254        0x0 sys/read.32
 .bss           0x00000000c002f254        0x0 sys/registersignal.32
 .bss           0x00000000c002f254        0x0 sys/registry.32
 .bss           0x00000000c002f254        0x0 sys/sbrk.32
 .bss           0x00000000c002f254        0x0 sys/setcwd.32
 .bss           0x00000000c002f254        0x0 sys/settime.32
 .bss           0x00000000c002f254        0x0 sys/symlink.32
 .bss           0x00000000c002f254        0x0 sys/timezone.32
 .bss           0x00000000c002f254        0x0 sys/truncate.32
 .bss           0x00000000c002f254        0x0 sys/write.32
 .bss           0x00000000c002f254        0x0 sys/wsbe.32
 .bss           0x00000000c002f254        0x0 sys/yield.32
 .bss           0x00000000c002f254        0x0 thr/alarm.32
 *fill*         0x00000000c002f254        0xc 
 .bss           0x00000000c002f260      0x7a4 thr/elf.32
                0x00000000c002f260                Thr::driverLookupNext
                0x00000000c002f280                Thr::driverLookupLen
                0x00000000c002f480                Thr::driverLookupAddr
                0x00000000c002f680                Thr::driverNameLookup
                0x00000000c002f880                Thr::kernelSymbols
                0x00000000c002f900                Thr::kernelStringTable
                0x00000000c002f980                Thr::kernelSymbolTable
                0x00000000c002fa00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002fa04        0x0 thr/exec.32
 *fill*         0x00000000c002fa04        0x4 
 .bss           0x00000000c002fa08       0x70 thr/prcssthr.32
                0x00000000c002fa08                KiRestorePreemptionValue
                0x00000000c002fa0c                KiPreemptionDisableCounter
                0x00000000c002fa10                cleanerThread
                0x00000000c002fa14                weNeedTheCleanerToNotBlock
                0x00000000c002fa18                retValLockStuff
                0x00000000c002fa1c                retValSchedLock
                0x00000000c002fa20                lockStuffLock
                0x00000000c002fa24                schedulerLock
                0x00000000c002fa28                taskSwitchesPostponedFlag
                0x00000000c002fa2c                postponeTaskSwitchesCounter
                0x00000000c002fa30                irqDisableCounter
                0x00000000c002fa34                terminatedTaskList
                0x00000000c002fa40                sleepingTaskList
                0x00000000c002fa4c                taskList
                0x00000000c002fa58                kernelProcess
 *fill*         0x00000000c002fa78        0x8 
 .bss           0x00000000c002fa80       0x40 vm86/vm8086.32
                0x00000000c002fa80                Vm::started8086Yet
                0x00000000c002fa84                Vm::vmRetV
                0x00000000c002fa88                Vm::vmDone
                0x00000000c002fa89                Vm::vmReady
                0x00000000c002fa8c                Vm::vm86Thread
                0x00000000c002fa90                Vm::vmToHostCommsPtr
                0x00000000c002faa0                Vm::vmToHostComms
 .bss           0x00000000c002fac0       0x41 arch/i386/apic.32
                0x00000000c002fac0                noOfIOAPICs
                0x00000000c002fae0                ioapics
                0x00000000c002fb00                IOAPICsSetupYet
 *fill*         0x00000000c002fb01        0x3 
 .bss           0x00000000c002fb04       0x50 arch/i386/hal.32
                0x00000000c002fb04                guiPanicHandler
                0x00000000c002fb08                fpuOwner
                0x00000000c002fb0c                coproLoadFunc
                0x00000000c002fb10                coproSaveFunc
                0x00000000c002fb14                lastD
                0x00000000c002fb18                lastC
                0x00000000c002fb1c                lastB
                0x00000000c002fb20                lastA
                0x00000000c002fb24                HalPageWriteCombiningFlag
                0x00000000c002fb28                HalPageGlobalFlag
                0x00000000c002fb2c                keNMIEnabled
                0x00000000c002fb30                vendorIDString
                0x00000000c002fb3d                familyID
                0x00000000c002fb3e                model
                0x00000000c002fb3f                processorType
                0x00000000c002fb40                steppingID
                0x00000000c002fb44                vendor
                0x00000000c002fb48                opcodeDetectionMode
                0x00000000c002fb4c                features
 .bss           0x00000000c002fb54        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002fb54        0x0 arch/i386/pic.32
 .bss           0x00000000c002fb54        0x2 arch/i386/rtc.32
 .bss           0x00000000c002fb56        0x0 arch/i386/vga.32
 *fill*         0x00000000c002fb56        0xa 
 .bss           0x00000000c002fb60       0xf0 fs/fat/vfslink.32
                0x00000000c002fb60                FAT::fats
                0x00000000c002fb80                FAT::vfsToFatRemaps
                0x00000000c002fc00                fatToVFSRemaps
 .bss           0x00000000c002fc50        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002fc50       0x10 
 .bss           0x00000000c002fc60      0x820 fs/iso9660/vfslink.32
                0x00000000c002fc60                iso9660Owner
                0x00000000c002fc64                recentSector
                0x00000000c002fc80                recentBuffer
 .bss           0x00000000c0030480        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0030480        0x0 hal/sound/sndport.32
 .bss           0x00000000c0030480        0xd hw/bus/pci.32
                0x00000000c0030480                thePCI
 .bss           0x00000000c003048d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c003048d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c003048d        0x3 
 .bss           0x00000000c0030490        0x8 hw/diskphys/ata.32
                0x00000000c0030490                ataSectorsWritten
                0x00000000c0030494                ataSectorsRead
 .bss           0x00000000c0030498        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0030498        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0030498        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c0030498        0x0 hw/timer/apictimer.32
 .bss           0x00000000c0030498        0x4 hw/timer/pit.32
                0x00000000c0030498                pitFreq
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c003049c        0x0 crtn.32
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c003049c                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0037937                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
