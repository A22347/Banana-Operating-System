Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootflags.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/apic.32
 .group         0x0000000000000000        0xc arch/i386/apic.32
 .comment       0x0000000000000000       0x12 arch/i386/apic.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootflags.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/apic.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21fce
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x2ad dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f13                Dbg::logs(char*)
                0x00000000c0006f3d                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f5b                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f7c                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070f3        0x1 
 .text          0x00000000c00070f4      0x2d4 dbg/usban.32
                0x00000000c00070f4                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007160                __ubsan_handle_type_mismatch_v1
                0x00000000c000723c                __ubsan_handle_pointer_overflow
                0x00000000c0007268                __ubsan_handle_out_of_bounds
                0x00000000c0007294                __ubsan_handle_add_overflow
                0x00000000c00072c0                __ubsan_handle_load_invalid_value
                0x00000000c00072ec                __ubsan_handle_divrem_overflow
                0x00000000c0007318                __ubsan_handle_mul_overflow
                0x00000000c0007344                __ubsan_handle_sub_overflow
                0x00000000c0007370                __ubsan_handle_shift_out_of_bounds
                0x00000000c000739c                __ubsan_handle_negate_overflow
 .text          0x00000000c00073c8      0x814 fs/symlink.32
                0x00000000c0007517                KiDeinitialiseSymlinks(void*)
                0x00000000c00075aa                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000762d                KeInitialiseSymlinks()
                0x00000000c000778f                KiIsSymlinkRegistered(char const*)
                0x00000000c00078f9                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007aa0                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bdc      0xd88 fs/vfs.32
                0x00000000c0007bdc                File::read(unsigned long long, void*, int*)
                0x00000000c0007c34                File::write(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007ce4                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007d12                File::isAtty()
                0x00000000c0007d16                Directory::isAtty()
                0x00000000c0007d1a                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007d20                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d26                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d2c                File::~File()
                0x00000000c0007d2c                File::~File()
                0x00000000c0007d50                File::~File()
                0x00000000c0007d7a                Directory::~Directory()
                0x00000000c0007d7a                Directory::~Directory()
                0x00000000c0007d9e                Directory::~Directory()
                0x00000000c0007dc8                Filesystem::Filesystem()
                0x00000000c0007dc8                Filesystem::Filesystem()
                0x00000000c0007dec                Filesystem::~Filesystem()
                0x00000000c0007dec                Filesystem::~Filesystem()
                0x00000000c0007dfa                Filesystem::~Filesystem()
                0x00000000c0007e1e                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e48                Fs::initVFS()
                0x00000000c0007e72                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000808c                File::File(char const*, Process*, bool)
                0x00000000c000808c                File::File(char const*, Process*, bool)
                0x00000000c000818a                File::File(char const*, Process*)
                0x00000000c000818a                File::File(char const*, Process*)
                0x00000000c00081a8                File::open(FileOpenMode)
                0x00000000c0008206                File::close()
                0x00000000c0008266                File::seek(unsigned long long)
                0x00000000c00082bc                File::truncate(unsigned long long)
                0x00000000c0008312                File::tell(unsigned long long*)
                0x00000000c0008362                File::rewind()
                0x00000000c0008376                File::unlink()
                0x00000000c00083c2                File::rename(char const*)
                0x00000000c0008410                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000846c                File::exists()
                0x00000000c00084aa                File::stat(unsigned long long*, bool*)
                0x00000000c000850b                Fs::setcwd(Process*, char*)
                0x00000000c000866a                Directory::Directory(char const*, Process*)
                0x00000000c000866a                Directory::Directory(char const*, Process*)
                0x00000000c0008732                Directory::open()
                0x00000000c000878e                Directory::close()
                0x00000000c00087ee                Directory::unlink()
                0x00000000c000883a                Directory::rename(char const*)
                0x00000000c0008888                Directory::exists()
                0x00000000c00088c6                Directory::read(dirent*)
                0x00000000c0008912                Directory::create()
                0x00000000c000895e                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0008964       0x86 hal/bus.32
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c000899c                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
                0x00000000c00089c0                Bus::~Bus()
 .text          0x00000000c00089ea       0x9b hal/buzzer.32
                0x00000000c00089ea                KeBeepThread(void*)
                0x00000000c0008a2b                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a85        0x1 
 .text          0x00000000c0008a86      0xeac hal/clock.32
                0x00000000c0008a86                KeLoadTimezoneStrings()
                0x00000000c0008e15                KeGetTimezoneStringFromID(int)
                0x00000000c0008eb2                KeUpdateTimezone(char const*)
                0x00000000c0008fac                KeSetTimezone(char const*)
                0x00000000c0009009                KeSetTimezone(int)
                0x00000000c000903c                KeLoadTimezone()
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009110                Clock::~Clock()
                0x00000000c000913a                Clock::timeInSecondsLocal()
                0x00000000c00091b0                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000923c                KeDatetimeToSeconds(datetime_t)
                0x00000000c000957c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000964a                KeSecondsToDatetime(unsigned long long)
                0x00000000c0009906                Clock::timeInDatetimeLocal()
 .text          0x00000000c0009932      0x47a hal/device.32
                0x00000000c0009932                Device::hibernate()
                0x00000000c0009934                Device::wake()
                0x00000000c0009936                Device::detect()
                0x00000000c0009938                Device::disableLegacy()
                0x00000000c000993a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000993c                DriverlessDevice::close(int, int, void*)
                0x00000000c0009940                DriverlessDevice::detect()
                0x00000000c0009942                DriverlessDevice::open(int, int, void*)
                0x00000000c0009956                Device::~Device()
                0x00000000c0009956                Device::~Device()
                0x00000000c0009964                Device::~Device()
                0x00000000c000998c                Device::findAndLoadDriver()
                0x00000000c000999a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00099c0                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0009a00                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009a2a                Device::getParent()
                0x00000000c0009a36                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009a54                Device::addChild(Device*)
                0x00000000c0009a98                Device::removeAllChildren()
                0x00000000c0009ade                Device::hibernateAll()
                0x00000000c0009b0e                Device::wakeAll()
                0x00000000c0009b3e                Device::detectAll()
                0x00000000c0009b6e                Device::disableLegacyAll()
                0x00000000c0009b70                Device::loadDriversForAll()
                0x00000000c0009b72                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009ba8                Device::setName(char const*)
                0x00000000c0009bb6                Device::Device(char const*)
                0x00000000c0009bb6                Device::Device(char const*)
                0x00000000c0009cb2                Device::getName()
                0x00000000c0009cbc                Device::closeAll()
                0x00000000c0009d08                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009d08                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009d3e                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d82                getDevicesOfType(DeviceType)
 .text          0x00000000c0009dac       0x86 hal/diskctrl.32
                0x00000000c0009dac                HardDiskController::HardDiskController(char const*)
                0x00000000c0009dac                HardDiskController::HardDiskController(char const*)
                0x00000000c0009de4                HardDiskController::~HardDiskController()
                0x00000000c0009de4                HardDiskController::~HardDiskController()
                0x00000000c0009e08                HardDiskController::~HardDiskController()
 .text          0x00000000c0009e32       0xe2 hal/diskphys.32
                0x00000000c0009e32                PhysicalDisk::eject()
                0x00000000c0009e36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e9e                PhysicalDisk::startCache()
                0x00000000c0009ec6                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009ec6                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009eea                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009f14        0x0 hal/fpu.32
 .text          0x00000000c0009f14      0x874 hal/keybrd.32
                0x00000000c0009f14                startGUI(void*)
                0x00000000c0009f79                startGUIVESA(void*)
                0x00000000c0009fde                sendKeyToTerminal(unsigned char)
                0x00000000c000a0b4                sendKeyboardToken(KeyboardToken)
                0x00000000c000a570                clearInternalKeybuffer(VgaText*)
                0x00000000c000a5a5                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6fe                Keyboard::Keyboard(char const*)
                0x00000000c000a6fe                Keyboard::Keyboard(char const*)
                0x00000000c000a73a                Keyboard::~Keyboard()
                0x00000000c000a73a                Keyboard::~Keyboard()
                0x00000000c000a75e                Keyboard::~Keyboard()
 .text          0x00000000c000a788      0x3f8 hal/logidisk.32
                0x00000000c000a788                LogicalDisk::close(int, int, void*)
                0x00000000c000a78c                LogicalDisk::~LogicalDisk()
                0x00000000c000a78c                LogicalDisk::~LogicalDisk()
                0x00000000c000a7b0                LogicalDisk::~LogicalDisk()
                0x00000000c000a7da                LogicalDisk::open(int, int, void*)
                0x00000000c000a7ee                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a826                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a86c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a86c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a92c                LogicalDisk::assignDriveLetter()
                0x00000000c000a9e6                LogicalDisk::mount()
                0x00000000c000aa2e                LogicalDisk::unmount()
                0x00000000c000aa3e                LogicalDisk::eject()
                0x00000000c000aa52                LogicalDisk::unassignDriveLetter()
                0x00000000c000aaa8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ab14                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab80       0x86 hal/mouse.32
                0x00000000c000ab80                Mouse::Mouse(char const*)
                0x00000000c000ab80                Mouse::Mouse(char const*)
                0x00000000c000abb8                Mouse::~Mouse()
                0x00000000c000abb8                Mouse::~Mouse()
                0x00000000c000abdc                Mouse::~Mouse()
 .text          0x00000000c000ac06       0x90 hal/nic.32
                0x00000000c000ac06                NIC::getMAC()
                0x00000000c000ac0c                NIC::write(int, unsigned char*, int*)
                0x00000000c000ac12                NIC::NIC(char const*)
                0x00000000c000ac12                NIC::NIC(char const*)
                0x00000000c000ac48                NIC::~NIC()
                0x00000000c000ac48                NIC::~NIC()
                0x00000000c000ac6c                NIC::~NIC()
 .text          0x00000000c000ac96      0x33b hal/partition.32
                0x00000000c000ac96                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ad3e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000afd1        0x3 
 .text          0x00000000c000afd4       0x86 hal/serial.32
                0x00000000c000afd4                Serial::Serial(char const*)
                0x00000000c000afd4                Serial::Serial(char const*)
                0x00000000c000b00c                Serial::~Serial()
                0x00000000c000b00c                Serial::~Serial()
                0x00000000c000b030                Serial::~Serial()
 *fill*         0x00000000c000b05a        0x2 
 .text          0x00000000c000b05c      0x230 hal/timer.32
                0x00000000c000b05c                Timer::Timer(char const*)
                0x00000000c000b05c                Timer::Timer(char const*)
                0x00000000c000b094                Timer::~Timer()
                0x00000000c000b094                Timer::~Timer()
                0x00000000c000b0b8                Timer::~Timer()
                0x00000000c000b0e2                Timer::read()
                0x00000000c000b0ed                setupTimer(int)
                0x00000000c000b128                timerHandler(unsigned int)
 .text          0x00000000c000b28c      0x5fe hal/vcache.32
                0x00000000c000b28c                VCache::VCache(PhysicalDisk*)
                0x00000000c000b28c                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3fc                VCache::invalidateReadBuffer()
                0x00000000c000b40c                VCache::writeWriteBuffer()
                0x00000000c000b458                VCache::~VCache()
                0x00000000c000b458                VCache::~VCache()
                0x00000000c000b4b0                VCache::~VCache()
                0x00000000c000b4d8                VCache::write(unsigned long long, int, void*)
                0x00000000c000b6a6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b88a      0x70e hal/video.32
                0x00000000c000b88a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b8d6                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b946                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b9c4                Video::clearScreen(unsigned int)
                0x00000000c000b9f8                Video::putpixel(int, int, unsigned int)
                0x00000000c000ba06                Video::readPixelApprox(int, int)
                0x00000000c000ba1a                Video::Video(char const*)
                0x00000000c000ba1a                Video::Video(char const*)
                0x00000000c000ba50                Video::~Video()
                0x00000000c000ba50                Video::~Video()
                0x00000000c000ba74                Video::~Video()
                0x00000000c000ba9e                Video::isMonochrome()
                0x00000000c000baaa                Video::getWidth()
                0x00000000c000bab6                Video::getHeight()
                0x00000000c000bac2                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb7e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000bf28                Video::putTGA(int, int, unsigned char*, int)
 .text          0x00000000c000bf98     0x11a3 hw/acpi.32
                0x00000000c000bf98                ACPI::close(int, int, void*)
                0x00000000c000bfa0                loadACPITables(unsigned char*)
                0x00000000c000c200                findRSDT(unsigned char*)
                0x00000000c000c34c                findDataTable(unsigned char*, char*)
                0x00000000c000c3c0                scanMADT()
                0x00000000c000c870                ACPI::ACPI()
                0x00000000c000c870                ACPI::ACPI()
                0x00000000c000c8c0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c9bc                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca88                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca90                ACPI::detectPCI()
                0x00000000c000cc9c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ccb4                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d13b        0x1 
 .text          0x00000000c000d13c       0xea krnl/assert.32
                0x00000000c000d13c                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d226       0xb6 krnl/atexit.32
                0x00000000c000d226                KeInitialiseAtexit()
                0x00000000c000d245                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d279                KeExecuteAtexit()
 .text          0x00000000c000d2dc       0x1e krnl/bootflags.32
                0x00000000c000d2dc                KeGetBootConfigurationFlag(BootConfigurationFlag)
                0x00000000c000d2ec                KeInitialiseBootConfigurationFlags()
 .text          0x00000000c000d2fa       0x9f krnl/bootmsg.32
                0x00000000c000d2fa                KeDisplaySplashScreen()
                0x00000000c000d329                KeSetBootMessage(char const*)
 .text          0x00000000c000d399       0x5f krnl/c++.32
                0x00000000c000d399                __cxa_atexit
                0x00000000c000d39c                __cxa_finalize
                0x00000000c000d39d                __stack_chk_fail
                0x00000000c000d3d3                __cxa_pure_virtual
                0x00000000c000d3e4                operator new[](unsigned long)
                0x00000000c000d3e9                operator delete(void*, unsigned long)
                0x00000000c000d3ee                operator delete[](void*)
                0x00000000c000d3f3                operator delete[](void*, unsigned long)
 .text          0x00000000c000d3f8       0x44 krnl/cdefs.32
                0x00000000c000d3f8                CUnlockScheduler
                0x00000000c000d410                CLockScheduler
                0x00000000c000d420                CPrintf
 .text          0x00000000c000d43c      0xd56 krnl/cm.32
                0x00000000c000d43c                CmOpen(char const*)
                0x00000000c000d55a                CmClose(Reghive_Tag*)
                0x00000000c000d570                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d5ac                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d623                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d662                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d694                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d6d0                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d6f8                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d719                CmExpand(Reghive_Tag*, int)
                0x00000000c000d794                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d81a                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d90e                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000da4a                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000daab                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000dadb                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000db12                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000db3c                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000db7c                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000dc20                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000dc4e                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000ddec                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000de39                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000deb3                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000df06                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000dfca                zStrtok(char*, char const*)
                0x00000000c000e03c                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000e0bd                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000e160                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000e192        0x2 
 .text          0x00000000c000e194       0x1d krnl/compat.32
                0x00000000c000e194                Krnl::handlePowerButton()
                0x00000000c000e1a4                Krnl::handleSleepButton()
 *fill*         0x00000000c000e1b1        0x1 
 .text          0x00000000c000e1b2      0x2b1 krnl/computer.32
                0x00000000c000e1b2                Computer::close(int, int, void*)
                0x00000000c000e1b8                KeFirstTask()
                0x00000000c000e2da                Computer::Computer()
                0x00000000c000e2da                Computer::Computer()
                0x00000000c000e31e                KePrepareShutdown()
                0x00000000c000e33e                KeShutdown()
                0x00000000c000e362                KeSleep()
                0x00000000c000e36e                KeRestart()
                0x00000000c000e390                Computer::open(int, int, void*)
 .text          0x00000000c000e463       0x2b krnl/crc32.32
                0x00000000c000e463                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e48e      0x5bf krnl/env.32
                0x00000000c000e48e                EnvVarContainer::getEnv(char const*)
                0x00000000c000e4cc                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e58e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e590                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e7b4                EnvVarContainer::__loadSystem()
                0x00000000c000e7ce                EnvVarContainer::__loadUser()
                0x00000000c000e7d0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e7d0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e7f2                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e7f2                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e822                KeGetEnv(Process*, char const*)
                0x00000000c000e887                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e8a1                KeSetEnvUser(char const*, char const*)
                0x00000000c000e8c0                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e8d3                KeDeleteEnvSystem(char const*)
                0x00000000c000e8d4                KeDeleteEnvUser(char const*)
                0x00000000c000e8d5                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e8d6                KeNewProcessEnv(Process*)
                0x00000000c000e8f8                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e944                KeLoadSystemEnv()
                0x00000000c000e972                KeLoadUserEnv()
                0x00000000c000e998                KeFlushEnv()
                0x00000000c000e999                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e9b9                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000ea4d        0x3 
 .text          0x00000000c000ea50      0x371 krnl/fault.32
                0x00000000c000ea50                KeSetupInterrupts()
                0x00000000c000eac8                int_handler
                0x00000000c000ebf8                KeDisplayProgramFault(char const*)
                0x00000000c000ec48                KeGeneralProtectionFault(void*, void*)
                0x00000000c000ecac                KePageFault(void*, void*)
                0x00000000c000ed10                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000ed20                KeOtherFault(void*, void*)
                0x00000000c000ed54                KeOpcodeFault(void*, void*)
                0x00000000c000eda8                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000edc1        0x1 
 .text          0x00000000c000edc2      0x1db krnl/gdt.32
                0x00000000c000edc2                GDTEntry::setBase(unsigned int)
                0x00000000c000edde                GDTEntry::setLimit(unsigned int)
                0x00000000c000edfc                GDT::GDT()
                0x00000000c000edfc                GDT::GDT()
                0x00000000c000ee12                GDT::addEntry(GDTEntry)
                0x00000000c000ee34                GDT::getNumberOfEntries()
                0x00000000c000ee3c                GDT::flush()
                0x00000000c000ee5e                GDT::setup()
 .text          0x00000000c000ef9d       0x20 krnl/idle.32
                0x00000000c000ef9d                idleFunction(void*)
 *fill*         0x00000000c000efbd        0x3 
 .text          0x00000000c000efc0      0x46c krnl/idt.32
                0x00000000c000efc0                IDTEntry::IDTEntry(bool)
                0x00000000c000efc0                IDTEntry::IDTEntry(bool)
                0x00000000c000f03a                IDTEntry::setOffset(unsigned int)
                0x00000000c000f050                IDT::IDT()
                0x00000000c000f050                IDT::IDT()
                0x00000000c000f052                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000f05a                IDT::addEntry(IDTEntry, int)
                0x00000000c000f074                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000f0ac                IDT::flush()
                0x00000000c000f0c6                IDT::setup()
 .text          0x00000000c000f42c       0x9a krnl/inlines.32
                0x00000000c000f42c                CPU::current()
                0x00000000c000f438                operator new(unsigned long)
                0x00000000c000f43d                operator delete(void*)
                0x00000000c000f442                disableIRQs()
                0x00000000c000f444                enableIRQs()
                0x00000000c000f446                lockScheduler()
                0x00000000c000f44e                unlockScheduler()
                0x00000000c000f460                lockStuff()
                0x00000000c000f46e                unlockStuff()
                0x00000000c000f4ab                Virt::getAKernelVAS()
                0x00000000c000f4b1                __not_memcpy
 .text          0x00000000c000f4c6      0x2bc krnl/intlformat.32
                0x00000000c000f4c6                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f6b6                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f6d8                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f6fa                KeSetLocale(klocale_t)
                0x00000000c000f710                KeInitialiseLocale()
                0x00000000c000f77e                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f77f                KeFormatCurrency(char*, int, double)
                0x00000000c000f780                KeFormatNumber(char*, long long, long long)
                0x00000000c000f781                KeFormatNumber(char*, double)
 *fill*         0x00000000c000f782        0x2 
 .text          0x00000000c000f784      0x42e krnl/intops.32
                0x00000000c000f784                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f90c                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000fab8                KeGetDigitsInNumber(long long)
                0x00000000c000fb24                KeItoa(unsigned long long, char*)
                0x00000000c000fb54                KeItoa(long long, char*)
                0x00000000c000fb84                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000fbb2      0x207 krnl/kheap.32
                0x00000000c000fbb2                sbrk
                0x00000000c000fc49                sbrk_thunk
                0x00000000c000fc7f                mmap
                0x00000000c000fcdd                munmap
                0x00000000c000fcf2                liballoc_lock()
                0x00000000c000fd00                liballoc_unlock()
                0x00000000c000fd18                liballoc_alloc(int)
                0x00000000c000fd30                liballoc_free(void*, int)
                0x00000000c000fd4b                realloc
                0x00000000c000fd5f                malloc
                0x00000000c000fd6f                free
                0x00000000c000fd7f                rfree
                0x00000000c000fd8f                calloc
 *fill*         0x00000000c000fdb9        0x3 
 .text          0x00000000c000fdbc      0x1d3 krnl/mailbox.32
                0x00000000c000fdbc                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fe1c                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fe7c                KeMailboxCreate()
                0x00000000c000feb0                KeMailboxPost(Mailbox*, void*)
                0x00000000c000ff14                KeMailboxGet(Mailbox*, void**)
                0x00000000c000ff78                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000ff8f       0xc5 krnl/main.32
                0x00000000c000ff8f                KeEntryPoint
 .text          0x00000000c0010054       0x1a krnl/mutex.32
                0x00000000c0010054                Mutex::Mutex()
                0x00000000c0010054                Mutex::Mutex()
 .text          0x00000000c001006e        0xc krnl/panic.32
                0x00000000c001006e                KePanic(char const*)
 .text          0x00000000c001007a      0x667 krnl/physmgr.32
                0x00000000c001007a                Phys::allocateDMA(unsigned long)
                0x00000000c0010162                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c001019d                Phys::setPageState(unsigned long, bool)
                0x00000000c00101dd                Phys::getPageState(unsigned long)
                0x00000000c00101f9                Phys::freePage(unsigned long)
                0x00000000c0010262                Phys::allocatePage()
                0x00000000c0010340                Phys::allocateContiguousPages(int)
                0x00000000c00103bb                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c00103f3                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c00106e1        0x1 
 .text          0x00000000c00106e2      0x275 krnl/pipe.32
                0x00000000c00106e2                Pipe::isAtty()
                0x00000000c00106e6                Pipe::~Pipe()
                0x00000000c00106e6                Pipe::~Pipe()
                0x00000000c001070a                Pipe::~Pipe()
                0x00000000c0010732                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00107f2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00108f0                Pipe::Pipe(int)
                0x00000000c00108f0                Pipe::Pipe(int)
 .text          0x00000000c0010957      0x10c krnl/powctrl.32
                0x00000000c0010957                KePowerThread(void*)
                0x00000000c0010989                KeChangePowerSettings(PowerSettings)
                0x00000000c001099f                KeUserIOReceived()
                0x00000000c00109aa                KeHandlePowerButton()
                0x00000000c00109c2                KeHandleSleepButton()
                0x00000000c00109da                KeSetupPowerManager()
 .text          0x00000000c0010a63       0x9d krnl/random.32
                0x00000000c0010a63                KeRand()
                0x00000000c0010aa5                KeSeedRand(unsigned int)
                0x00000000c0010ace                KeInitRand()
 .text          0x00000000c0010b00      0x1bc krnl/resolve.32
                0x00000000c0010b00                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010cbc      0x415 krnl/semaphore.32
                0x00000000c0010cbc                Semaphore::Semaphore(int)
                0x00000000c0010cbc                Semaphore::Semaphore(int)
                0x00000000c0010cec                Semaphore::tryAcquire()
                0x00000000c0010dc0                Semaphore::assertLocked(char const*)
                0x00000000c0010e4c                Semaphore::acquire(int)
                0x00000000c0011004                Semaphore::acquire()
                0x00000000c0011020                Semaphore::release()
 .text          0x00000000c00110d1      0x3a8 krnl/signal.32
                0x00000000c00110d1                KiSigKill(int)
                0x00000000c00110e5                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00110e6                KiDefaultSignalHandlerPause(int)
                0x00000000c0011112                KiDefaultSignalHandlerResume(int)
                0x00000000c001113e                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011143                KeInitSignals()
                0x00000000c00111b5                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00111eb                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001126c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001139b                KiCheckSignalZ
                0x00000000c00113ec                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011427                KiFinishSignalZ
 .text          0x00000000c0011479      0xe88 krnl/syscalls.32
                0x00000000c0011479                SysSeekDir(regs*)
                0x00000000c001147e                SysTellDir(regs*)
                0x00000000c0011483                SysVerify(regs*)
                0x00000000c001148d                SysGetArgc(regs*)
                0x00000000c00114a1                SysTTYName(regs*)
                0x00000000c00114a9                SysFormatDisk(regs*)
                0x00000000c0011520                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011574                SysGetDiskVolumeLabel(regs*)
                0x00000000c00115cd                SysRealpath(regs*)
                0x00000000c0011611                SysReadDir(regs*)
                0x00000000c0011691                SysIsATTY(regs*)
                0x00000000c00116eb                SysSeek(regs*)
                0x00000000c0011749                SysTell(regs*)
                0x00000000c00117be                SysSize(regs*)
                0x00000000c0011838                SysSizeFromFilename(regs*)
                0x00000000c0011962                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011a8c                SysClose(regs*)
                0x00000000c0011aec                SysOpenDir(regs*)
                0x00000000c0011b69                SysMakeDir(regs*)
                0x00000000c0011bd7                SysCloseDir(regs*)
                0x00000000c0011c2b                SysWait(regs*)
                0x00000000c0011c4c                SysNotImpl(regs*)
                0x00000000c0011c67                SysPanic(regs*)
                0x00000000c0011c82                SysRmdir(regs*)
                0x00000000c0011ce7                SysUnlink(regs*)
                0x00000000c0011d4c                SysGetArgv(regs*)
                0x00000000c0011d99                SysUSleep(regs*)
                0x00000000c0011dc3                SysSpawn(regs*)
                0x00000000c0011e36                SysGetEnv(regs*)
                0x00000000c0011ee7                SysSetFatAttrib(regs*)
                0x00000000c0011f5a                SysShutdown(regs*)
                0x00000000c0011fb7                SysPipe(regs*)
                0x00000000c0011ffc                SysGetUnixTime(regs*)
                0x00000000c0012080                string_ends_with(char const*, char const*)
                0x00000000c00120c8                SysOpen(regs*)
                0x00000000c00122bf                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012301        0x1 
 .text          0x00000000c0012302      0xb0b krnl/terminal.32
                0x00000000c0012302                VgaText::isAtty()
                0x00000000c0012306                VgaText::~VgaText()
                0x00000000c0012306                VgaText::~VgaText()
                0x00000000c001232a                VgaText::~VgaText()
                0x00000000c0012354                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0012374                setTerminalScrollLock(bool)
                0x00000000c0012375                doTerminalCycle()
                0x00000000c0012376                addToTerminalCycle(VgaText*)
                0x00000000c0012377                scrollTerminalScrollLock(int)
                0x00000000c0012378                VgaText::updateTitle()
                0x00000000c001237a                VgaText::load()
                0x00000000c001237c                VgaText::updateCursor()
                0x00000000c0012392                VgaText::doANSI_SGR(int)
                0x00000000c0012406                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0012416                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0012426                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0012446                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0012452                VgaText::setTitleColour(VgaColour)
                0x00000000c001245e                VgaText::setTitle(char*)
                0x00000000c0012460                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0012472                VgaText::scrollScreen()
                0x00000000c0012504                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0012514                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00125c0                VgaText::getCursorX()
                0x00000000c00125c8                VgaText::getCursorY()
                0x00000000c00125d0                VgaText::setCursor(int, int)
                0x00000000c00125e7                setActiveTerminal(VgaText*)
                0x00000000c0012632                VgaText::clearScreen()
                0x00000000c0012680                VgaText::setCursorX(int)
                0x00000000c0012698                VgaText::setCursorY(int)
                0x00000000c00126b0                VgaText::incrementCursor(bool)
                0x00000000c0012704                VgaText::decrementCursor(bool)
                0x00000000c0012726                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00127f6                VgaText::putchar(char)
                0x00000000c00128ee                VgaText::putx(unsigned int)
                0x00000000c0012934                VgaText::puts(char const*)
                0x00000000c001295a                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00129a6                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0012b20                VgaText::VgaText(char const*)
                0x00000000c0012b20                VgaText::VgaText(char const*)
                0x00000000c0012c80                VgaText::receiveKey(unsigned char)
                0x00000000c0012e0c                VgaText::doUpdate()
 *fill*         0x00000000c0012e0d        0x3 
 .text          0x00000000c0012e10      0x224 krnl/tss.32
                0x00000000c0012e10                TSS::TSS()
                0x00000000c0012e10                TSS::TSS()
                0x00000000c0012e20                TSS::setESP(unsigned long)
                0x00000000c0012e34                TSS::flush()
                0x00000000c0012e54                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0013034      0x4dc krnl/unixfile.32
                0x00000000c0013034                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c001308a                ReservedFilename::isAtty()
                0x00000000c00130a6                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0013104                UnixFile::getFileDescriptor()
                0x00000000c001310c                UnixFile::UnixFile(int)
                0x00000000c001310c                UnixFile::UnixFile(int)
                0x00000000c00132c0                ReservedFilename::ReservedFilename(int)
                0x00000000c00132c0                ReservedFilename::ReservedFilename(int)
                0x00000000c00132f2                UnixFile::~UnixFile()
                0x00000000c00132f2                UnixFile::~UnixFile()
                0x00000000c001338e                UnixFile::~UnixFile()
                0x00000000c00133b6                ReservedFilename::~ReservedFilename()
                0x00000000c00133b6                ReservedFilename::~ReservedFilename()
                0x00000000c00133da                ReservedFilename::~ReservedFilename()
                0x00000000c0013401                KeGetFileFromDescriptor(int)
 .text          0x00000000c0013510     0x14bc krnl/virtmgr.32
                0x00000000c0013510                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c001354a                Virt::getPageState(unsigned long)
                0x00000000c001356d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0013692                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00136b5                Virt::swapIDToSector(unsigned long)
                0x00000000c00136cb                Virt::allocateSwapfilePage()
                0x00000000c001374b                Virt::virtualMemorySetup()
                0x00000000c001379c                Virt::setupPageSwapping(int)
                0x00000000c001380e                VAS::setCPUSpecific(unsigned long)
                0x00000000c0013810                VAS::VAS(VAS*)
                0x00000000c0013810                VAS::VAS(VAS*)
                0x00000000c0013828                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0013856                VAS::getPageTableEntry(unsigned long)
                0x00000000c0013875                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00139b2                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00139d6                VAS::virtualToPhysical(unsigned long)
                0x00000000c00139f0                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0013a32                VAS::VAS()
                0x00000000c0013a32                VAS::VAS()
                0x00000000c0013a9c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0013abc                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0013ae8                VAS::~VAS()
                0x00000000c0013ae8                VAS::~VAS()
                0x00000000c0013c50                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013d54                VAS::allocatePages(int, int)
                0x00000000c0013e3a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013e92                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013f88                VAS::VAS(bool)
                0x00000000c0013f88                VAS::VAS(bool)
                0x00000000c0014170                VAS::evict(unsigned long)
                0x00000000c0014274                VAS::canLockPage(unsigned long)
                0x00000000c001428e                VAS::unlockPage(unsigned long)
                0x00000000c00142c2                VAS::canLockPages(unsigned long, int)
                0x00000000c00142fe                VAS::unlockPages(unsigned long, int)
                0x00000000c001433a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c001464a                VAS::lockPage(unsigned long)
                0x00000000c00146bc                VAS::lockPages(unsigned long, int)
                0x00000000c00146f8                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c001476c                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0014798                VAS::scanForEviction()
                0x00000000c00148d1                mapVASFirstTime
 .text          0x00000000c00149cc       0x2f sys/alarm.32
                0x00000000c00149cc                SysAlarm(regs*)
 .text          0x00000000c00149fb       0x36 sys/eject.32
                0x00000000c00149fb                SysEject(regs*)
 .text          0x00000000c0014a31       0x18 sys/exit.32
                0x00000000c0014a31                SysExit(regs*)
 .text          0x00000000c0014a49       0x1f sys/getcwd.32
                0x00000000c0014a49                SysGetCwd(regs*)
 .text          0x00000000c0014a68       0x26 sys/getpid.32
                0x00000000c0014a68                SysGetPID(regs*)
 .text          0x00000000c0014a8e       0x21 sys/getramdata.32
                0x00000000c0014a8e                SysGetRAMData(regs*)
 .text          0x00000000c0014aaf       0xd3 sys/getvgaptr.32
                0x00000000c0014aaf                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014b82        0x2 
 .text          0x00000000c0014b84       0xb9 sys/kill.32
                0x00000000c0014b84                SysKill(regs*)
 .text          0x00000000c0014c3d       0xa8 sys/loaddll.32
                0x00000000c0014c3d                SysLoadDLL(regs*)
 .text          0x00000000c0014ce5       0x12 sys/pause.32
                0x00000000c0014ce5                SysPause(regs*)
 .text          0x00000000c0014cf7       0x49 sys/pthread.32
                0x00000000c0014cf7                SysPthreadCreate(regs*)
                0x00000000c0014d0f                SysPthreadGetTID(regs*)
                0x00000000c0014d19                SysInternalPthreadGetContext(regs*)
                0x00000000c0014d1e                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c0014d23                SysPthreadJoin(regs*)
                0x00000000c0014d28                SysPthreadExit(regs*)
 .text          0x00000000c0014d40       0x68 sys/read.32
                0x00000000c0014d40                SysRead(regs*)
 .text          0x00000000c0014da8       0x29 sys/registersignal.32
                0x00000000c0014da8                SysRegisterSignal(regs*)
 .text          0x00000000c0014dd1      0x1cc sys/registry.32
                0x00000000c0014dd1                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014e15                SysRegistryReadExtent(regs*)
                0x00000000c0014e5d                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014e74                SysRegistryEnterDirectory(regs*)
                0x00000000c0014e8b                SysRegistryGetNext(regs*)
                0x00000000c0014ea2                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014edc                SysRegistryOpen(regs*)
                0x00000000c0014ef0                SysRegistryClose(regs*)
                0x00000000c0014f07                SysRegistryEasyReadString(regs*)
                0x00000000c0014f53                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014f9d       0x55 sys/sbrk.32
                0x00000000c0014f9d                SysSbrk(regs*)
 .text          0x00000000c0014ff2       0x1c sys/setcwd.32
                0x00000000c0014ff2                SysSetCwd(regs*)
 .text          0x00000000c001500e       0xd7 sys/settime.32
                0x00000000c001500e                SysSetTime(regs*)
 .text          0x00000000c00150e5       0x73 sys/symlink.32
                0x00000000c00150e5                SysSymlink(regs*)
 .text          0x00000000c0015158       0x3e sys/timezone.32
                0x00000000c0015158                SysTimezone(regs*)
 .text          0x00000000c0015196       0xfc sys/truncate.32
                0x00000000c0015196                SysTruncate(regs*)
 .text          0x00000000c0015292       0x68 sys/write.32
                0x00000000c0015292                SysWrite(regs*)
 .text          0x00000000c00152fa       0x9d sys/wsbe.32
                0x00000000c00152fa                SysWsbe(regs*)
 .text          0x00000000c0015397       0x28 sys/yield.32
                0x00000000c0015397                SysYield(regs*)
 *fill*         0x00000000c00153bf        0x1 
 .text          0x00000000c00153c0      0x281 thr/alarm.32
                0x00000000c00153c0                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c0015550                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c0015641     0x1382 thr/elf.32
                0x00000000c0015641                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00158d3                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0015b96                Thr::runtimeReferenceHelper()
                0x00000000c0015ba9                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0015bf8                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015eb6                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00166b5                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00166e7                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001671e                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0016738                Thr::loadDLL(char const*, bool)
                0x00000000c001698a                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00169c3       0x5a thr/exec.32
                0x00000000c00169c3                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0016a1d        0x3 
 .text          0x00000000c0016a20     0x129d thr/prcssthr.32
                0x00000000c0016a20                userModeEntryPoint(void*)
                0x00000000c0016a4c                changeTSS
                0x00000000c0016a7c                switchToThread(ThreadControlBlock*)
                0x00000000c0016b3c                Process::addArgs(char**)
                0x00000000c0016ba8                Process::Process(char const*, Process*, char**)
                0x00000000c0016ba8                Process::Process(char const*, Process*, char**)
                0x00000000c0016de0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016de0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016fcc                taskStartupFunction
                0x00000000c0016fd8                KeDisablePreemption()
                0x00000000c0017000                KeRestorePreemption()
                0x00000000c0017020                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0017178                Process::createUserThread()
                0x00000000c0017198                setupMultitasking(void (*)())
                0x00000000c00172e0                schedule()
                0x00000000c0017374                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00173a0                blockTask(TaskState)
                0x00000000c00173dc                waitTask(int, int*, int)
                0x00000000c0017420                milliTenthSleepUntil(unsigned long long)
                0x00000000c00174d4                milliTenthSleep(unsigned long long)
                0x00000000c00174ec                sleep(unsigned long long)
                0x00000000c001750c                sleep(unsigned int)
                0x00000000c0017524                milliTenthSleep(unsigned int)
                0x00000000c0017544                taskReturned
                0x00000000c001758c                Thr::processFromPID(int)
                0x00000000c001763c                unblockTask(ThreadControlBlock*)
                0x00000000c00176f0                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00179c8                cleanerTaskFunction(void*)
                0x00000000c0017ae0                terminateTask(int)
                0x00000000c0017bf0                Thr::terminateFromIRQ(int)
 .text          0x00000000c0017cbd      0xe5f vm86/vm8086.32
                0x00000000c0017cbd                Vm::inbv(unsigned short)
                0x00000000c0017cd0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017d06                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0017d16                Vm::getSegment(unsigned int)
                0x00000000c0017d1e                Vm::getOffset(unsigned int)
                0x00000000c0017d23                Vm::mainloop2()
                0x00000000c0017d64                Vm::mainVm8086Loop(void*)
                0x00000000c0017d78                Vm::mainloop3(unsigned long)
                0x00000000c0017daa                Vm::initialise8086()
                0x00000000c0017dee                Vm::resetConventionalMemory8086()
                0x00000000c0017def                Vm::finish8086()
                0x00000000c0017e60                Vm::getOutput8086(unsigned char*)
                0x00000000c0017e85                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017fe7                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001822f                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00182c9                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00182da                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00182ec                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00182fd                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018312                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0018328                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001833d                Vm::faultHandler(regs*)
 .text          0x00000000c0018b1c      0x45f arch/i386/apic.32
                0x00000000c0018b1c                IOAPIC::close(int, int, void*)
                0x00000000c0018b22                apicGetBase()
                0x00000000c0018b5c                IOAPIC::IOAPIC()
                0x00000000c0018b5c                IOAPIC::IOAPIC()
                0x00000000c0018b84                apicOpen()
                0x00000000c0018d10                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0018d42                IOAPIC::read(int)
                0x00000000c0018d6a                IOAPIC::open(int, int, void*)
                0x00000000c0018e50                IOAPIC::write(int, int)
                0x00000000c0018e7c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0018f7b        0x1 
 .text          0x00000000c0018f7c     0x1ef9 arch/i386/hal.32
                0x00000000c0018f7c                noCopro(unsigned long)
                0x00000000c0018f7e                CPU::close(int, int, void*)
                0x00000000c0018f81                x86ReadCMOS(unsigned char)
                0x00000000c0018fd5                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0019035                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0019054                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0019071                AMD_K6_writeback(int, int, int)
                0x00000000c0019131                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00191cf                cpuidCheckEDX(unsigned int)
                0x00000000c00191fc                cpuidCheckECX(unsigned int)
                0x00000000c001922a                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0019258                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0019286                HalDetectFeatures()
                0x00000000c001a071                HalEnableNMI()
                0x00000000c001a084                HalDisableNMI()
                0x00000000c001a097                HalGetNMIState()
                0x00000000c001a09d                x86rdmsr(unsigned int)
                0x00000000c001a0db                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c001a120                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c001a136                HalFindRSDP()
                0x00000000c001a213                HalHandlePageFault(void*, void*)
                0x00000000c001a242                HalHandleOpcodeFault(void*, void*)
                0x00000000c001a284                HalDisplayDebugInfo(void*)
                0x00000000c001a612                HalReceivedNMI()
                0x00000000c001a6ad                HalSystemIdle()
                0x00000000c001a70c                i386SaveCoprocessor(void*)
                0x00000000c001a720                i386LoadCoprocessor(void*)
                0x00000000c001a734                x87EmulHandler(regs*, void*)
                0x00000000c001a7d1                HalInitialiseCoprocessor()
                0x00000000c001a855                HalPanic(char const*)
                0x00000000c001a969                HalQueryPerformanceCounter()
                0x00000000c001a979                HalInitialise()
                0x00000000c001ab24                HalMakeBeep(int)
                0x00000000c001ab5e                HalGetRand()
                0x00000000c001ab61                HalEndOfInterrupt(int)
                0x00000000c001ab8c                HalRestart()
                0x00000000c001ab8d                HalShutdown()
                0x00000000c001ab8e                HalSleep()
                0x00000000c001ab90                CPU::CPU()
                0x00000000c001ab90                CPU::CPU()
                0x00000000c001ac14                CPU::setupSMEP()
                0x00000000c001ac20                CPU::setupUMIP()
                0x00000000c001ac2a                CPU::setupTSC()
                0x00000000c001ac34                CPU::setupLargePages()
                0x00000000c001ac3e                CPU::setupPAT()
                0x00000000c001ac70                CPU::setupMTRR()
                0x00000000c001ac72                CPU::setupGlobalPages()
                0x00000000c001ac7c                CPU::allowUsermodeDataAccess()
                0x00000000c001ac8a                CPU::prohibitUsermodeDataAccess()
                0x00000000c001ac98                CPU::setupSMAP()
                0x00000000c001aca6                CPU::setupFeatures()
                0x00000000c001ad72                CPU::open(int, int, void*)
 .text          0x00000000c001ae75      0x261 arch/i386/intctrl.32
                0x00000000c001ae75                convertLegacyIRQNumber(int)
                0x00000000c001aeb1                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001aefb                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001b029                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001b05d                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001b0d6        0x2 
 .text          0x00000000c001b0d8      0x2dc arch/i386/pic.32
                0x00000000c001b0d8                picIoWait()
                0x00000000c001b0e0                picDisable()
                0x00000000c001b114                picGetIRQReg(int)
                0x00000000c001b190                picOpen()
                0x00000000c001b314                picEOI(int)
 .text          0x00000000c001b3b4      0x5f3 arch/i386/rtc.32
                0x00000000c001b3b4                RTC::open(int, int, void*)
                0x00000000c001b3b8                RTC::close(int, int, void*)
                0x00000000c001b3bc                RTC::timeInSecondsUTC()
                0x00000000c001b3ce                RTC::timeInDatetimeUTC()
                0x00000000c001b3f4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b432                RTC::~RTC()
                0x00000000c001b432                RTC::~RTC()
                0x00000000c001b456                RTC::~RTC()
                0x00000000c001b480                RTC::get_update_in_progress_flag()
                0x00000000c001b494                RTC::completeRTCRefresh()
                0x00000000c001b748                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b8be                rtcIRQHandler(regs*, void*)
                0x00000000c001b8fe                RTC::RTC()
                0x00000000c001b8fe                RTC::RTC()
 *fill*         0x00000000c001b9a7        0x1 
 .text          0x00000000c001b9a8      0x1f4 arch/i386/vga.32
                0x00000000c001b9a8                HalConsoleScroll(int, int)
                0x00000000c001bab0                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001bb14                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001bb9c     0x14cf fs/fat/vfslink.32
                0x00000000c001bb9c                FAT::getName()
                0x00000000c001bba4                FAT::tell(void*, unsigned long long*)
                0x00000000c001bbe0                FAT::stat(void*, unsigned long long*)
                0x00000000c001bc1c                FAT::~FAT()
                0x00000000c001bc1c                FAT::~FAT()
                0x00000000c001bc40                FAT::~FAT()
                0x00000000c001bc68                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001bd0c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001bdd0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001bfb4                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001c1d0                FAT::allocateSwapfile(char const*, int)
                0x00000000c001c390                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c500                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c560                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c5c0                FAT::close(void*)
                0x00000000c001c614                FAT::closeDir(void*)
                0x00000000c001c668                FAT::truncate(void*, unsigned long long)
                0x00000000c001c6d4                FAT::seek(void*, unsigned long long)
                0x00000000c001c72c                fatWrapperReadDisk
                0x00000000c001c76c                fatWrapperWriteDisk
                0x00000000c001c7ac                fatWrapperIoctl
                0x00000000c001c8c8                FAT::FAT()
                0x00000000c001c8c8                FAT::FAT()
                0x00000000c001c920                FAT::fixFilepath(char*)
                0x00000000c001c960                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001cad4                FAT::openDir(char const*, void**)
                0x00000000c001cb84                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001cc7c                FAT::unlink(char const*)
                0x00000000c001ccfc                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ceb0                FAT::rename(char const*, char const*)
                0x00000000c001cf7c                FAT::mkdir(char const*)
                0x00000000c001cffc                FAT::exists(char const*)
 *fill*         0x00000000c001d06b        0x1 
 .text          0x00000000c001d06c       0x94 fs/iso9660/helper.32
                0x00000000c001d06c                isoReadDiscSectorHelper
                0x00000000c001d0c8                iso_kprintf
                0x00000000c001d0e4                iso_kprintfd
 .text          0x00000000c001d100      0x71c fs/iso9660/vfslink.32
                0x00000000c001d100                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001d106                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001d10c                ISO9660::getName()
                0x00000000c001d112                ISO9660::closeDir(void*)
                0x00000000c001d11c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001d122                ISO9660::unlink(char const*)
                0x00000000c001d128                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001d12e                ISO9660::rename(char const*, char const*)
                0x00000000c001d134                ISO9660::mkdir(char const*)
                0x00000000c001d13a                ISO9660::~ISO9660()
                0x00000000c001d13a                ISO9660::~ISO9660()
                0x00000000c001d15e                ISO9660::~ISO9660()
                0x00000000c001d186                ISO9660::exists(char const*)
                0x00000000c001d19a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001d280                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001d2c8                ISO9660::seek(void*, unsigned long long)
                0x00000000c001d30a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001d348                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001d39a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d4dc                ISO9660::close(void*)
                0x00000000c001d50c                ISO9660::openDir(char const*, void**)
                0x00000000c001d5e6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d703                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d782                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d7f4                ISO9660::ISO9660()
                0x00000000c001d7f4                ISO9660::ISO9660()
 .text          0x00000000c001d81c      0x26c hal/sound/sndcard.32
                0x00000000c001d81c                SoundCard::beginPlayback()
                0x00000000c001d82a                SoundCard::stopPlayback()
                0x00000000c001d838                SoundCard::SoundCard(char const*)
                0x00000000c001d838                SoundCard::SoundCard(char const*)
                0x00000000c001d8d6                SoundCard::~SoundCard()
                0x00000000c001d8d6                SoundCard::~SoundCard()
                0x00000000c001d8fa                SoundCard::~SoundCard()
                0x00000000c001d924                SoundCard::configureRates(int, int, int)
                0x00000000c001d954                SoundCard::getSamples16(int, short*)
                0x00000000c001d9b0                SoundCard::getSamples32(int, int*)
                0x00000000c001da36                SoundCard::addChannel(SoundPort*)
                0x00000000c001da74                SoundCard::removeChannel(int)
 .text          0x00000000c001da88      0x426 hal/sound/sndport.32
                0x00000000c001da88                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001da88                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001db14                SoundPort::~SoundPort()
                0x00000000c001db14                SoundPort::~SoundPort()
                0x00000000c001db48                SoundPort::unpause()
                0x00000000c001db54                SoundPort::pause()
                0x00000000c001db60                SoundPort::getBufferUsed()
                0x00000000c001db68                SoundPort::getBufferSize()
                0x00000000c001db70                SoundPort::buffer8(signed char*, int)
                0x00000000c001dc04                SoundPort::buffer16(short*, int)
                0x00000000c001dc98                SoundPort::buffer32(int*, int)
                0x00000000c001dd24                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001ddf0                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001deae      0xc23 hw/bus/pci.32
                0x00000000c001deae                PCI::open(int, int, void*)
                0x00000000c001decc                PCI::close(int, int, void*)
                0x00000000c001ded0                PCI::PCI()
                0x00000000c001ded0                PCI::PCI()
                0x00000000c001df68                PCI::readBAR8(unsigned int, int)
                0x00000000c001df84                PCI::readBAR16(unsigned int, int)
                0x00000000c001dfa2                PCI::readBAR32(unsigned int, int)
                0x00000000c001dfbe                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001dfde                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001e000                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001e020                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e096                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e140                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001e164                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001e18c                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001e1d6                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001e1fe                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001e222                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001e246                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001e26e                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e2d2                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001e3ba                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e680                PCI::checkBus(unsigned char)
                0x00000000c001e6a4                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e88a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ea06                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001ea78                PCI::detect()
 *fill*         0x00000000c001ead1        0x1 
 .text          0x00000000c001ead2      0xe58 hw/diskctrl/ide.32
                0x00000000c001ead2                IDE::close(int, int, void*)
                0x00000000c001ead6                IDE::IDE()
                0x00000000c001ead6                IDE::IDE()
                0x00000000c001eb0a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001eb1c                selectDrive(unsigned char, unsigned char)
                0x00000000c001eb1e                IDE::getBase(unsigned char)
                0x00000000c001eb30                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ebf0                IDE::read(unsigned char, unsigned char)
                0x00000000c001ec9e                IDE::waitInterrupt(unsigned char)
                0x00000000c001ed01                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ed1d                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ed3a                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ed84                IDE::open(int, int, void*)
                0x00000000c001f2de                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001f3ae                IDE::detect()
                0x00000000c001f81c                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f8d6                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f92a      0x33d hw/diskctrl/satabus.32
                0x00000000c001f92a                SATABus::close(int, int, void*)
                0x00000000c001f92e                SATABus::detect()
                0x00000000c001f930                SATABus::SATABus()
                0x00000000c001f930                SATABus::SATABus()
                0x00000000c001f9b6                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f9e8                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fa30                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fa50                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fa7a                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001fb8a                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001fc34                SATABus::open(int, int, void*)
 *fill*         0x00000000c001fc67        0x1 
 .text          0x00000000c001fc68      0x7a9 hw/diskphys/ata.32
                0x00000000c001fc68                ATA::close(int, int, void*)
                0x00000000c001fc8c                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001fc8e                ATA::ATA()
                0x00000000c001fc8e                ATA::ATA()
                0x00000000c001fcbc                ATA::flush(bool)
                0x00000000c001fd0a                ATA::readyForCommand()
                0x00000000c001fd56                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020146                ATA::read(unsigned long long, int, void*)
                0x00000000c0020192                ATA::write(unsigned long long, int, void*)
                0x00000000c00201de                ATA::detectCHS()
                0x00000000c0020208                ATA::open(int, int, void*)
                0x00000000c00203f3                combineCharAndColour(char, unsigned char)
                0x00000000c0020404                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c0020411        0x1 
 .text          0x00000000c0020412      0x618 hw/diskphys/atapi.32
                0x00000000c0020412                ATAPI::write(unsigned long long, int, void*)
                0x00000000c0020418                ATAPI::close(int, int, void*)
                0x00000000c002043c                ATAPI::ATAPI()
                0x00000000c002043c                ATAPI::ATAPI()
                0x00000000c002046a                ATAPI::readyForCommand()
                0x00000000c00204bc                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0020784                ATAPI::diskRemoved()
                0x00000000c00207be                ATAPI::eject()
                0x00000000c0020806                ATAPI::diskInserted()
                0x00000000c0020812                ATAPI::detectMedia()
                0x00000000c00208d0                ATAPI::open(int, int, void*)
                0x00000000c00209b0                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020a2a      0x44c hw/diskphys/sata.32
                0x00000000c0020a2a                SATA::close(int, int, void*)
                0x00000000c0020a4e                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0020a50                SATA::open(int, int, void*)
                0x00000000c0020b08                SATA::SATA()
                0x00000000c0020b08                SATA::SATA()
                0x00000000c0020b36                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020dbe                SATA::read(unsigned long long, int, void*)
                0x00000000c0020e0a                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020e76      0x5d4 hw/diskphys/satapi.32
                0x00000000c0020e76                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020e7c                SATAPI::close(int, int, void*)
                0x00000000c0020ea0                SATAPI::SATAPI()
                0x00000000c0020ea0                SATAPI::SATAPI()
                0x00000000c0020ece                SATAPI::diskRemoved()
                0x00000000c0020ed0                SATAPI::diskInserted()
                0x00000000c0020eec                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c00211ce                SATAPI::eject()
                0x00000000c002120a                SATAPI::detectMedia()
                0x00000000c0021260                SATAPI::open(int, int, void*)
                0x00000000c0021360                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c002144a        0x2 
 .text          0x00000000c002144c       0xf0 hw/timer/apictimer.32
                0x00000000c002144c                APICTimer::close(int, int, void*)
                0x00000000c0021454                apicTimerHandler(regs*, void*)
                0x00000000c002147c                APICTimer::open(int, int, void*)
                0x00000000c00214ec                APICTimer::write(int)
                0x00000000c0021514                APICTimer::APICTimer()
                0x00000000c0021514                APICTimer::APICTimer()
 .text          0x00000000c002153c      0x1ad hw/timer/pit.32
                0x00000000c002153c                PIT::write(int)
                0x00000000c00215c0                pitHandler(regs*, void*)
                0x00000000c00215e8                PIT::open(int, int, void*)
                0x00000000c0021638                PIT::close(int, int, void*)
                0x00000000c0021668                PIT::PIT()
                0x00000000c0021668                PIT::PIT()
 *fill*         0x00000000c00216e9        0x7 
 .text          0x00000000c00216f0       0x6f arch/i386/avx.32
                0x00000000c00216f0                avxDetect
                0x00000000c002171a                avxSave
                0x00000000c002172b                avxLoad
                0x00000000c002173c                avxInit
                0x00000000c002175e                avxClose
 *fill*         0x00000000c002175f        0x1 
 .text          0x00000000c0021760      0x2b4 arch/i386/interrupt.32
                0x00000000c0021760                isr0
                0x00000000c0021770                isr1
                0x00000000c002177a                isr2
                0x00000000c0021784                isr3
                0x00000000c002178e                isr4
                0x00000000c0021798                isr5
                0x00000000c00217a2                isr6
                0x00000000c00217ac                isr7
                0x00000000c00217b6                isr8
                0x00000000c00217be                isr9
                0x00000000c00217c8                isr10
                0x00000000c00217d0                isr11
                0x00000000c00217d8                isr12
                0x00000000c00217e0                isr13
                0x00000000c00217fa                isr14
                0x00000000c0021802                isr15
                0x00000000c002180c                isr16
                0x00000000c0021816                isr17
                0x00000000c0021820                isr18
                0x00000000c002182a                irq3
                0x00000000c0021834                irq4
                0x00000000c002183e                irq5
                0x00000000c0021848                irq6
                0x00000000c0021852                irq7
                0x00000000c002185c                irq8
                0x00000000c0021866                irq9
                0x00000000c0021870                irq10
                0x00000000c002187a                irq11
                0x00000000c0021884                irq12
                0x00000000c002188e                irq13
                0x00000000c0021898                irq14
                0x00000000c00218a2                irq15
                0x00000000c00218ac                irq1
                0x00000000c00218b3                irq2
                0x00000000c00218ba                isr96
                0x00000000c00218c1                irq0
                0x00000000c00218c6                int_common_stub
                0x00000000c00218c6                syscall_common_stub
                0x00000000c00219c4                irq16
                0x00000000c00219ce                irq17
                0x00000000c00219d8                irq18
                0x00000000c00219e2                irq19
                0x00000000c00219ec                irq20
                0x00000000c00219f6                irq21
                0x00000000c0021a00                irq22
                0x00000000c0021a0a                irq23
 *fill*         0x00000000c0021a14        0xc 
 .text          0x00000000c0021a20       0x10 arch/i386/rdrand.32
                0x00000000c0021a20                i386GetRDRAND
 .text          0x00000000c0021a30       0x39 arch/i386/sse.32
                0x00000000c0021a30                sseDetect
                0x00000000c0021a48                sseSave
                0x00000000c0021a50                sseLoad
                0x00000000c0021a58                sseInit
                0x00000000c0021a68                sseClose
 *fill*         0x00000000c0021a69        0x7 
 .text          0x00000000c0021a70       0x4f arch/i386/x87.32
                0x00000000c0021a76                x87Detect
                0x00000000c0021a97                x87Save
                0x00000000c0021a9e                x87Load
                0x00000000c0021aa5                x87Init
                0x00000000c0021abe                x87Close
 *fill*         0x00000000c0021abf        0x1 
 .text          0x00000000c0021ac0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021ae5        0x0 crtn.32
 *fill*         0x00000000c0021ae5        0x3 
 .text          0x00000000c0021ae8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021ae8                __divdi3
 *fill*         0x00000000c0021c33        0x1 
 .text          0x00000000c0021c34      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021c34                __moddi3
 *fill*         0x00000000c0021db2        0x2 
 .text          0x00000000c0021db4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021db4                __udivdi3
 *fill*         0x00000000c0021eb3        0x1 
 .text          0x00000000c0021eb4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021eb4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021fd0        0x0
 .iplt          0x00000000c0021fd0        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021fce        0xf
 .init          0x00000000c0021fce        0x3 crti.32
                0x00000000c0021fce                _init
 .init          0x00000000c0021fd1        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021fd6        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021fdb        0x2 crtn.32

.fini           0x00000000c0021fdd        0xa
 .fini          0x00000000c0021fdd        0x3 crti.32
                0x00000000c0021fdd                _fini
 .fini          0x00000000c0021fe0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021fe5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021fe8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021fe8       0x1a hal/device.32
                0x00000000c0021fe8                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021fe8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0022002       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0022002       0x2a hal/device.32
                0x00000000c0022002                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002202c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002202c       0xdc hal/device.32
                0x00000000c002202c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0022108       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0022108       0x42 hal/device.32
                0x00000000c0022108                LinkedList<Device>::LinkedList()
                0x00000000c0022108                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002214c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002214c       0x1c hal/timer.32
                0x00000000c002214c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0022168        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0022168        0x7 hal/timer.32
                0x00000000c0022168                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0022170       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0022170       0xbc hal/timer.32
                0x00000000c0022170                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002222c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002222c       0xda hal/timer.32
                0x00000000c002222c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0022308       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0022308       0x23 hw/acpi.32
                0x00000000c0022308                ACPI::~ACPI()
                0x00000000c0022308                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002232c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002232c       0x2a hw/acpi.32
                0x00000000c002232c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022358        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022358        0x2 hw/acpi.32
                0x00000000c0022358                LinkedList<Device>::~LinkedList()
                0x00000000c0022358                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002235c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002235c       0x1c hw/acpi.32
                0x00000000c002235c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0022378        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0022378        0x7 hw/acpi.32
                0x00000000c0022378                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022380       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022380       0xb8 hw/acpi.32
                0x00000000c0022380                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0022438       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0022438       0x23 krnl/computer.32
                0x00000000c0022438                Computer::~Computer()
                0x00000000c0022438                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002245c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002245c       0x2a krnl/computer.32
                0x00000000c002245c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0022486       0x24
 .text._Z10idleCommonv
                0x00000000c0022486       0x24 krnl/idle.32
                0x00000000c0022486                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00224aa        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00224aa        0x2 krnl/unixfile.32
                0x00000000c00224aa                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00224aa                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00224ac       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00224ac       0x42 krnl/unixfile.32
                0x00000000c00224ac                LinkedList<UnixFile>::LinkedList()
                0x00000000c00224ac                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00224ee       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00224ee       0xd3 krnl/unixfile.32
                0x00000000c00224ee                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00225c2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00225c2        0x7 krnl/unixfile.32
                0x00000000c00225c2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00225ca       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00225ca       0xa1 krnl/unixfile.32
                0x00000000c00225ca                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002266c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002266c        0x8 krnl/unixfile.32
                0x00000000c002266c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022674        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022674        0x8 sys/kill.32
                0x00000000c0022674                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002267c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002267c        0x2 thr/prcssthr.32
                0x00000000c002267c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002267c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022680       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022680       0x49 thr/prcssthr.32
                0x00000000c0022680                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0022680                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00226cc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00226cc       0x42 thr/prcssthr.32
                0x00000000c00226cc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00226cc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN6IOAPICD2Ev
                0x00000000c002270e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002270e       0x23 arch/i386/apic.32
                0x00000000c002270e                IOAPIC::~IOAPIC()
                0x00000000c002270e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022732       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022732       0x2a arch/i386/apic.32
                0x00000000c0022732                IOAPIC::~IOAPIC()

.text._ZN3CPUD2Ev
                0x00000000c002275c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002275c       0x23 arch/i386/hal.32
                0x00000000c002275c                CPU::~CPU()
                0x00000000c002275c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0022780       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0022780       0x2a arch/i386/hal.32
                0x00000000c0022780                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c00227aa       0x23
 .text._ZN3PCID2Ev
                0x00000000c00227aa       0x23 hw/bus/pci.32
                0x00000000c00227aa                PCI::~PCI()
                0x00000000c00227aa                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00227ce       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00227ce       0x2a hw/bus/pci.32
                0x00000000c00227ce                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00227f8       0x23
 .text._ZN3IDED2Ev
                0x00000000c00227f8       0x23 hw/diskctrl/ide.32
                0x00000000c00227f8                IDE::~IDE()
                0x00000000c00227f8                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002281c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002281c       0x2a hw/diskctrl/ide.32
                0x00000000c002281c                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022846       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022846       0x23 hw/diskctrl/satabus.32
                0x00000000c0022846                SATABus::~SATABus()
                0x00000000c0022846                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002286a       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002286a       0x2a hw/diskctrl/satabus.32
                0x00000000c002286a                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0022894       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0022894       0x23 hw/diskphys/ata.32
                0x00000000c0022894                ATA::~ATA()
                0x00000000c0022894                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00228b8       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00228b8       0x2a hw/diskphys/ata.32
                0x00000000c00228b8                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00228e2       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00228e2       0x23 hw/diskphys/atapi.32
                0x00000000c00228e2                ATAPI::~ATAPI()
                0x00000000c00228e2                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0022906       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0022906       0x2a hw/diskphys/atapi.32
                0x00000000c0022906                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022930       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022930       0x23 hw/diskphys/sata.32
                0x00000000c0022930                SATA::~SATA()
                0x00000000c0022930                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022954       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022954       0x2a hw/diskphys/sata.32
                0x00000000c0022954                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002297e       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002297e       0x23 hw/diskphys/satapi.32
                0x00000000c002297e                SATAPI::~SATAPI()
                0x00000000c002297e                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00229a2       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00229a2       0x2a hw/diskphys/satapi.32
                0x00000000c00229a2                SATAPI::~SATAPI()

.text._ZN9APICTimerD2Ev
                0x00000000c00229cc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00229cc       0x23 hw/timer/apictimer.32
                0x00000000c00229cc                APICTimer::~APICTimer()
                0x00000000c00229cc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00229f0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00229f0       0x2a hw/timer/apictimer.32
                0x00000000c00229f0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0022a1c       0x23
 .text._ZN3PITD2Ev
                0x00000000c0022a1c       0x23 hw/timer/pit.32
                0x00000000c0022a1c                PIT::~PIT()
                0x00000000c0022a1c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022a40       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022a40       0x2a hw/timer/pit.32
                0x00000000c0022a40                PIT::~PIT()

.rodata         0x00000000c0022a6a     0x3f12
                0x00000000c0022a6a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0022a6a        0x2 
 .ctors         0x00000000c0022a6c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022a70        0x4 krnl/unixfile.32
 .ctors         0x00000000c0022a74        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022a78        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022a7c                end_ctors = .
                0x00000000c0022a7c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0022a7c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022a80        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022a80                __DTOR_END__
                0x00000000c0022a84                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022a84       0x1c 
 .rodata        0x00000000c0022aa0      0x101 acpica/utclib.32
                0x00000000c0022aa0                AcpiGbl_Ctypes
 *fill*         0x00000000c0022ba1        0x3 
 .rodata        0x00000000c0022ba4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0022bbc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022c06       0x1a 
 .rodata        0x00000000c0022c20       0xed fs/fat/ff.32
 *fill*         0x00000000c0022d0d       0x13 
 .rodata        0x00000000c0022d20      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0023120       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002318f       0x11 dbg/kconsole.32
 .rodata.str1.4
                0x00000000c00231a0       0x38 dbg/kconsole.32
 .rodata        0x00000000c00231d8      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0023328      0x169 dbg/usban.32
 *fill*         0x00000000c0023491        0x3 
 .rodata.str1.4
                0x00000000c0023494      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00235cb      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c00236ee       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0023747        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023748       0x6c fs/vfs.32
                0x00000000c0023748                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00237b4       0x1c fs/vfs.32
                0x00000000c00237b4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00237d0       0x1c fs/vfs.32
                0x00000000c00237d0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00237ec       0x2c hal/bus.32
                0x00000000c00237ec                vtable for Bus
 *fill*         0x00000000c0023818        0x8 
 .rodata        0x00000000c0023820      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0023970       0x3c hal/clock.32
                0x00000000c0023970                vtable for Clock
 .rodata.str1.1
                0x00000000c00239ac       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0023a10       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023a32       0x15 hal/device.32
 *fill*         0x00000000c0023a47        0x1 
 .rodata._ZTV6Device
                0x00000000c0023a48       0x2c hal/device.32
                0x00000000c0023a48                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023a74       0x2c hal/device.32
                0x00000000c0023a74                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023aa0       0x2c hal/diskctrl.32
                0x00000000c0023aa0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0023acc       0x38 hal/diskphys.32
                0x00000000c0023acc                vtable for PhysicalDisk
 .rodata        0x00000000c0023b04       0x53 hal/keybrd.32
 *fill*         0x00000000c0023b57        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023b58       0x34 hal/keybrd.32
                0x00000000c0023b58                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0023b8c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0023bd0       0x2c hal/logidisk.32
                0x00000000c0023bd0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0023bfc       0x2c hal/mouse.32
                0x00000000c0023bfc                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023c28       0x34 hal/nic.32
                0x00000000c0023c28                vtable for NIC
 .rodata.str1.1
                0x00000000c0023c5c        0xb hal/partition.32
 *fill*         0x00000000c0023c67        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023c68       0x44 hal/serial.32
                0x00000000c0023c68                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023cac       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023cf7        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023cff       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023cff       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0023cff       0x45 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0023d44       0x30 hal/timer.32
                0x00000000c0023d44                vtable for Timer
 .rodata.str1.1
                0x00000000c0023d74       0x3e hal/vcache.32
 *fill*         0x00000000c0023db2        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023db4       0x10 hal/vcache.32
                0x00000000c0023db4                vtable for VCache
 .rodata.str1.1
                0x00000000c0023dc4       0xba hal/video.32
 *fill*         0x00000000c0023e7e        0x2 
 .rodata._ZTV5Video
                0x00000000c0023e80       0x4c hal/video.32
                0x00000000c0023e80                vtable for Video
 .rodata.str1.1
                0x00000000c0023ecc      0x1b7 hw/acpi.32
 *fill*         0x00000000c0024083        0x1 
 .rodata.str1.4
                0x00000000c0024084       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c002411f       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c002411f        0x8 hw/acpi.32
 *fill*         0x00000000c002411f        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0024120       0x2c hw/acpi.32
                0x00000000c0024120                vtable for ACPI
 .rodata.str1.1
                0x00000000c002414c       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c002415f       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c002419f       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c00241c0       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c00241f3        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c00241f6       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002426c       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0024315        0x3 
 .rodata.str1.4
                0x00000000c0024318       0xb8 krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c00243d0       0x2c krnl/computer.32
                0x00000000c00243d0                vtable for Computer
 .rodata.str1.1
                0x00000000c00243fc       0x3c krnl/env.32
 .rodata        0x00000000c0024438       0x7e krnl/fault.32
 .rodata.str1.1
                0x00000000c00244b6        0x4 krnl/intlformat.32
 .rodata.str1.1
                0x00000000c00244ba       0x11 krnl/intops.32
 *fill*         0x00000000c00244ba        0x2 
 .rodata.str1.4
                0x00000000c00244bc       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c00244ec        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c00244fb       0x17 krnl/main.32
 *fill*         0x00000000c0024512        0x2 
 .rodata.str1.4
                0x00000000c0024514      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024619       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024671       0x39 krnl/pipe.32
 *fill*         0x00000000c00246aa        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00246ac       0x1c krnl/pipe.32
                0x00000000c00246ac                vtable for Pipe
 .rodata.str1.1
                0x00000000c00246c8       0x91 krnl/resolve.32
 *fill*         0x00000000c0024759        0x3 
 .rodata.str1.4
                0x00000000c002475c       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c002477b      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c0024883       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00248cb       0x4d krnl/terminal.32
                                         0x5e (size before relaxing)
 .rodata._ZTV7VgaText
                0x00000000c0024918       0x1c krnl/terminal.32
                0x00000000c0024918                vtable for VgaText
 .rodata        0x00000000c0024934       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002496f       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002496f       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002496f       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002496f        0x8 krnl/unixfile.32
 *fill*         0x00000000c002496f        0x1 
 .rodata.str1.4
                0x00000000c0024970       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0024990       0x22 krnl/unixfile.32
 *fill*         0x00000000c00249b2        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c00249b4       0x1c krnl/unixfile.32
                0x00000000c00249b4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00249d0       0x1c krnl/unixfile.32
                0x00000000c00249d0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00249ec      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024f6f      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c00250d0       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c00250e5        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c00250f4       0x13 sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0025107       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0025128       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c002516c       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0025181       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00251ad       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c00251be      0x37d thr/elf.32
                                        0x38c (size before relaxing)
 .rodata.str1.1
                0x00000000c002553b       0x57 thr/prcssthr.32
 *fill*         0x00000000c0025592        0x2 
 .rodata.str1.4
                0x00000000c0025594       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002568c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002568c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002568c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002568c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002568c       0x61 vm86/vm8086.32
 *fill*         0x00000000c00256ed        0x3 
 .rodata.str1.4
                0x00000000c00256f0       0x81 vm86/vm8086.32
 *fill*         0x00000000c0025771        0x3 
 .rodata        0x00000000c0025774      0x390 vm86/vm8086.32
 .rodata        0x00000000c0025b04       0x17 arch/i386/apic.32
 *fill*         0x00000000c0025b1b        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c0025b1c       0x2c arch/i386/apic.32
                0x00000000c0025b1c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025b48      0x322 arch/i386/hal.32
                                        0x335 (size before relaxing)
 *fill*         0x00000000c0025e6a        0x2 
 .rodata.str1.4
                0x00000000c0025e6c       0x23 arch/i386/hal.32
 *fill*         0x00000000c0025e8f        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025e90       0x2c arch/i386/hal.32
                0x00000000c0025e90                vtable for CPU
 .rodata.str1.4
                0x00000000c0025ebc       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025f1d       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025f5b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0025f70       0x3c arch/i386/rtc.32
                0x00000000c0025f70                vtable for RTC
 .rodata.str1.1
                0x00000000c0025fac       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025fed        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025ff0       0x6c fs/fat/vfslink.32
                0x00000000c0025ff0                vtable for FAT
 .rodata.str1.1
                0x00000000c002605c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c002605c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0026194       0x6c fs/iso9660/vfslink.32
                0x00000000c0026194                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0026200       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0026244       0x34 hal/sound/sndcard.32
                0x00000000c0026244                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0026278       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00262b7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00262ef       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0026390       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00263f4       0x2c hw/bus/pci.32
                0x00000000c00263f4                vtable for PCI
 .rodata.str1.1
                0x00000000c0026420      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0026544       0x2c hw/diskctrl/ide.32
                0x00000000c0026544                vtable for IDE
 .rodata.str1.4
                0x00000000c0026570       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0026594       0x2c hw/diskctrl/satabus.32
                0x00000000c0026594                vtable for SATABus
 .rodata.str1.1
                0x00000000c00265c0       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c002667b        0x1 
 .rodata._ZTV3ATA
                0x00000000c002667c       0x38 hw/diskphys/ata.32
                0x00000000c002667c                vtable for ATA
 .rodata.str1.1
                0x00000000c00266b4        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00266c1        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00266c4       0x38 hw/diskphys/atapi.32
                0x00000000c00266c4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00266fc       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0026784       0x38 hw/diskphys/sata.32
                0x00000000c0026784                vtable for SATA
 .rodata.str1.1
                0x00000000c00267bc       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00268a6        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00268a8       0x38 hw/diskphys/satapi.32
                0x00000000c00268a8                vtable for SATAPI
 .rodata.str1.1
                0x00000000c00268e0       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00268fb        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00268fc       0x30 hw/timer/apictimer.32
                0x00000000c00268fc                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002692c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0026949        0x3 
 .rodata._ZTV3PIT
                0x00000000c002694c       0x30 hw/timer/pit.32
                0x00000000c002694c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002697c      0xa69
 *(.data)
 .data          0x00000000c002697c        0x0 crti.32
 .data          0x00000000c002697c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002697c                __dso_handle
 .data          0x00000000c0026980        0x0 acpica/utclib.32
 .data          0x00000000c0026980        0x0 krnl/malloc.32
 .data          0x00000000c0026980        0x0 libk/ctype.32
 .data          0x00000000c0026980        0x0 libk/string.32
 .data          0x00000000c0026980        0x0 arch/i386/cc.32
 .data          0x00000000c0026980        0x0 fs/fat/diskio.32
 .data          0x00000000c0026980        0x0 fs/fat/ff.32
 .data          0x00000000c0026980        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0026980        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0026980        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0026980        0x0 dbg/kconsole.32
 .data          0x00000000c0026980       0x28 dbg/usban.32
                0x00000000c0026980                KiUsbanTypeMismatchTypes
 .data          0x00000000c00269a8        0x0 fs/symlink.32
 .data          0x00000000c00269a8        0x0 fs/vfs.32
 .data          0x00000000c00269a8        0x0 hal/bus.32
 .data          0x00000000c00269a8        0x0 hal/buzzer.32
 .data          0x00000000c00269a8        0x0 hal/clock.32
 .data          0x00000000c00269a8        0x0 hal/device.32
 .data          0x00000000c00269a8        0x0 hal/diskctrl.32
 .data          0x00000000c00269a8        0x0 hal/diskphys.32
 .data          0x00000000c00269a8        0x0 hal/fpu.32
 .data          0x00000000c00269a8        0x0 hal/keybrd.32
 .data          0x00000000c00269a8        0x0 hal/logidisk.32
 .data          0x00000000c00269a8        0x0 hal/mouse.32
 .data          0x00000000c00269a8        0x0 hal/nic.32
 .data          0x00000000c00269a8        0x0 hal/partition.32
 .data          0x00000000c00269a8        0x0 hal/serial.32
 .data          0x00000000c00269a8        0x0 hal/timer.32
 .data          0x00000000c00269a8        0x0 hal/vcache.32
 .data          0x00000000c00269a8        0x0 hal/video.32
 .data          0x00000000c00269a8       0x10 hw/acpi.32
                0x00000000c00269a8                legacyIRQRemaps
 .data          0x00000000c00269b8        0x0 krnl/assert.32
 .data          0x00000000c00269b8        0x0 krnl/atexit.32
 .data          0x00000000c00269b8        0x0 krnl/bootflags.32
 .data          0x00000000c00269b8        0x0 krnl/bootmsg.32
 .data          0x00000000c00269b8        0x4 krnl/c++.32
                0x00000000c00269b8                __stack_chk_guard
 .data          0x00000000c00269bc        0x0 krnl/cdefs.32
 *fill*         0x00000000c00269bc        0x4 
 .data          0x00000000c00269c0      0x100 krnl/cm.32
                0x00000000c00269c0                CmComponents
 .data          0x00000000c0026ac0        0x0 krnl/compat.32
 .data          0x00000000c0026ac0        0x0 krnl/computer.32
 .data          0x00000000c0026ac0      0x400 krnl/crc32.32
                0x00000000c0026ac0                KiPolyLookupCRC32
 .data          0x00000000c0026ec0       0x4d krnl/env.32
                0x00000000c0026ec0                defaultSysEnv
 .data          0x00000000c0026f0d        0x0 krnl/fault.32
 .data          0x00000000c0026f0d        0x0 krnl/gdt.32
 .data          0x00000000c0026f0d        0x0 krnl/idle.32
 .data          0x00000000c0026f0d        0x0 krnl/idt.32
 .data          0x00000000c0026f0d        0x0 krnl/inlines.32
 .data          0x00000000c0026f0d        0x0 krnl/intlformat.32
 .data          0x00000000c0026f0d        0x0 krnl/intops.32
 *fill*         0x00000000c0026f0d        0x3 
 .data          0x00000000c0026f10        0x4 krnl/kheap.32
 .data          0x00000000c0026f14        0x0 krnl/mailbox.32
 .data          0x00000000c0026f14        0x0 krnl/main.32
 .data          0x00000000c0026f14        0x0 krnl/mutex.32
 .data          0x00000000c0026f14        0x0 krnl/panic.32
 .data          0x00000000c0026f14        0x4 krnl/physmgr.32
                0x00000000c0026f14                Phys::bitmap
 .data          0x00000000c0026f18        0x0 krnl/pipe.32
 .data          0x00000000c0026f18        0x0 krnl/powctrl.32
 .data          0x00000000c0026f18        0x0 krnl/random.32
 .data          0x00000000c0026f18        0x0 krnl/resolve.32
 .data          0x00000000c0026f18        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026f18        0x8 
 .data          0x00000000c0026f20       0x4c krnl/signal.32
                0x00000000c0026f20                KiDefaultSignalHandlers
 *fill*         0x00000000c0026f6c       0x14 
 .data          0x00000000c0026f80      0x124 krnl/syscalls.32
                0x00000000c0026f80                systemCallHandlers
 *fill*         0x00000000c00270a4       0x1c 
 .data          0x00000000c00270c0       0x60 krnl/terminal.32
                0x00000000c00270c0                VgaText::hiddenOut
                0x00000000c00270e0                ansiToVGAMappings
 .data          0x00000000c0027120        0x0 krnl/tss.32
 .data          0x00000000c0027120        0x4 krnl/unixfile.32
                0x00000000c0027120                UnixFile::nextFd
 .data          0x00000000c0027124       0x15 krnl/virtmgr.32
                0x00000000c0027124                Virt::pageAllocPtr
                0x00000000c0027128                Virt::bitmap
                0x00000000c002712c                Virt::swapfileSectorsPerPage
                0x00000000c0027130                Virt::swapfileLength
                0x00000000c0027134                Virt::swapfileSector
                0x00000000c0027138                Virt::swapfileDrive
 .data          0x00000000c0027139        0x0 sys/alarm.32
 .data          0x00000000c0027139        0x0 sys/eject.32
 .data          0x00000000c0027139        0x0 sys/exit.32
 .data          0x00000000c0027139        0x0 sys/getcwd.32
 .data          0x00000000c0027139        0x0 sys/getpid.32
 .data          0x00000000c0027139        0x0 sys/getramdata.32
 .data          0x00000000c0027139        0x0 sys/getvgaptr.32
 .data          0x00000000c0027139        0x0 sys/kill.32
 .data          0x00000000c0027139        0x0 sys/loaddll.32
 .data          0x00000000c0027139        0x0 sys/pause.32
 .data          0x00000000c0027139        0x0 sys/pthread.32
 .data          0x00000000c0027139        0x0 sys/read.32
 .data          0x00000000c0027139        0x0 sys/registersignal.32
 .data          0x00000000c0027139        0x0 sys/registry.32
 .data          0x00000000c0027139        0x0 sys/sbrk.32
 .data          0x00000000c0027139        0x0 sys/setcwd.32
 .data          0x00000000c0027139        0x0 sys/settime.32
 .data          0x00000000c0027139        0x0 sys/symlink.32
 .data          0x00000000c0027139        0x0 sys/timezone.32
 .data          0x00000000c0027139        0x0 sys/truncate.32
 .data          0x00000000c0027139        0x0 sys/write.32
 .data          0x00000000c0027139        0x0 sys/wsbe.32
 .data          0x00000000c0027139        0x0 sys/yield.32
 .data          0x00000000c0027139        0x0 thr/alarm.32
 .data          0x00000000c0027139        0x0 thr/elf.32
 .data          0x00000000c0027139        0x0 thr/exec.32
 *fill*         0x00000000c0027139        0x3 
 .data          0x00000000c002713c        0x4 thr/prcssthr.32
                0x00000000c002713c                Thr::nextPID
 .data          0x00000000c0027140        0x0 vm86/vm8086.32
 .data          0x00000000c0027140        0x0 arch/i386/apic.32
 .data          0x00000000c0027140      0x2a4 arch/i386/hal.32
                0x00000000c0027140                exceptionNames
                0x00000000c00273e0                lastCode
 .data          0x00000000c00273e4        0x0 arch/i386/intctrl.32
 .data          0x00000000c00273e4        0x0 arch/i386/pic.32
 .data          0x00000000c00273e4        0x0 arch/i386/rtc.32
 .data          0x00000000c00273e4        0x0 arch/i386/vga.32
 .data          0x00000000c00273e4        0x0 fs/fat/vfslink.32
 .data          0x00000000c00273e4        0x0 fs/iso9660/helper.32
 .data          0x00000000c00273e4        0x1 fs/iso9660/vfslink.32
                0x00000000c00273e4                recentDriveletter
 .data          0x00000000c00273e5        0x0 hal/sound/sndcard.32
 .data          0x00000000c00273e5        0x0 hal/sound/sndport.32
 .data          0x00000000c00273e5        0x0 hw/bus/pci.32
 .data          0x00000000c00273e5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00273e5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00273e5        0x0 hw/diskphys/ata.32
 .data          0x00000000c00273e5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00273e5        0x0 hw/diskphys/sata.32
 .data          0x00000000c00273e5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00273e5        0x0 hw/timer/apictimer.32
 .data          0x00000000c00273e5        0x0 hw/timer/pit.32
 .data          0x00000000c00273e5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00273e5        0x0 crtn.32
 .data          0x00000000c00273e5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00273e5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00273e5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00273e5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00273e8        0x0
 .got           0x00000000c00273e8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00273e8        0x0
 .got.plt       0x00000000c00273e8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00273e8        0x0
 .igot.plt      0x00000000c00273e8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00273e8        0x0
 .tm_clone_table
                0x00000000c00273e8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00273e8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00273e5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00273e5        0x3 
 .eh_frame      0x00000000c00273e8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00273e8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00273e8       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0027440       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0027480       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00274ec       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0028000       0x7d
 *(userkernel)
 userkernel     0x00000000c0028000       0x52 krnl/signal.32
                0x00000000c0028000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002802c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0028052       0x2b krnl/syscalls.32
                0x00000000c0028052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0029000        0x1
 *(align_previous)
 align_previous
                0x00000000c0029000        0x1 krnl/signal.32
                0x00000000c0029000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0029004        0x0
 .rel.got       0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0029001     0x74bb
                0x00000000c0029001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0029001       0x1f 
 COMMON         0x00000000c0029020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0029020                dcache
                0x00000000c0029060                cdDriveLetter
                0x00000000c0029080                icache
 *(.bss)
 .bss           0x00000000c00290c0        0x0 crti.32
 .bss           0x00000000c00290c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00290e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00290e4       0x1c 
 .bss           0x00000000c0029100      0x378 krnl/malloc.32
 .bss           0x00000000c0029478        0x0 libk/ctype.32
 .bss           0x00000000c0029478        0x0 libk/string.32
 .bss           0x00000000c0029478        0x0 arch/i386/cc.32
 .bss           0x00000000c0029478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0029478        0x8 
 .bss           0x00000000c0029480       0x88 fs/fat/ff.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0029508       0x18 
 .bss           0x00000000c0029520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0029eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0029eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0029eb8        0x8 
 .bss           0x00000000c0029ec0     0x2444 fs/symlink.32
                0x00000000c0029ec0                kiNumWaitingRoomSymlinks
                0x00000000c0029ee0                kiNewlyCreatedIDs
                0x00000000c0029f00                kiNewlyCreatedSymlinks
                0x00000000c002a300                kiSymlinkHashTable
                0x00000000c002c300                kiBaseSymlinkID
 .bss           0x00000000c002c304        0x4 fs/vfs.32
                0x00000000c002c304                installedFilesystems
 .bss           0x00000000c002c308        0x0 hal/bus.32
 .bss           0x00000000c002c308        0x0 hal/buzzer.32
 *fill*         0x00000000c002c308       0x18 
 .bss           0x00000000c002c320      0x348 hal/clock.32
                0x00000000c002c320                keLoadedTimezones
                0x00000000c002c324                keNumberOfTimezones
                0x00000000c002c340                keTimezoneStrings
                0x00000000c002c660                keDstOn
                0x00000000c002c661                keTimezoneHalfHourOffset
                0x00000000c002c664                keTimezoneHourOffset
 .bss           0x00000000c002c668        0x0 hal/device.32
 .bss           0x00000000c002c668        0x0 hal/diskctrl.32
 .bss           0x00000000c002c668        0x0 hal/diskphys.32
 .bss           0x00000000c002c668        0x0 hal/fpu.32
 *fill*         0x00000000c002c668       0x18 
 .bss           0x00000000c002c680      0x428 hal/keybrd.32
                0x00000000c002c680                keyboardWaitingTaskList
                0x00000000c002c684                keyboardSetupYet
                0x00000000c002c688                guiKeyboardHandler
                0x00000000c002c6a0                keystates
 *fill*         0x00000000c002caa8       0x18 
 .bss           0x00000000c002cac0       0x88 hal/logidisk.32
                0x00000000c002cac0                diskAssignments
                0x00000000c002cae0                disks
 .bss           0x00000000c002cb48        0x4 hal/mouse.32
                0x00000000c002cb48                guiMouseHandler
 .bss           0x00000000c002cb4c        0x0 hal/nic.32
 .bss           0x00000000c002cb4c        0x0 hal/partition.32
 .bss           0x00000000c002cb4c        0x0 hal/serial.32
 *fill*         0x00000000c002cb4c        0x4 
 .bss           0x00000000c002cb50        0x8 hal/timer.32
                0x00000000c002cb50                milliTenthsSinceBoot
 .bss           0x00000000c002cb58        0x0 hal/vcache.32
 .bss           0x00000000c002cb58        0x4 hal/video.32
                0x00000000c002cb58                screen
 *fill*         0x00000000c002cb5c        0x4 
 .bss           0x00000000c002cb60      0x480 hw/acpi.32
                0x00000000c002cb60                nextACPITable
                0x00000000c002cb80                acpiTables
                0x00000000c002cd80                usingXSDT
                0x00000000c002cd84                RSDTpointer
                0x00000000c002cd88                RSDPpointer
                0x00000000c002cd8c                nextAPICNMI
                0x00000000c002cda0                apicNMIInfo
                0x00000000c002ce20                legacyIRQFlags
                0x00000000c002ce40                ioapicDiscoveryNumber
                0x00000000c002ce60                ioapicFoundInMADT
                0x00000000c002ce80                ioapicAddresses
                0x00000000c002cf00                ioapicGSIBase
                0x00000000c002cf80                processorDiscoveryNumber
                0x00000000c002cfa0                matchingAPICID
                0x00000000c002cfc0                processorID
 .bss           0x00000000c002cfe0        0x0 krnl/assert.32
 .bss           0x00000000c002cfe0       0xe0 krnl/atexit.32
                0x00000000c002cfe0                KiNextAtexitHandler
                0x00000000c002d000                KiAtexitContexts
                0x00000000c002d060                KiAtexitHandlers
 .bss           0x00000000c002d0c0        0x4 krnl/bootflags.32
                0x00000000c002d0c0                keBootSettings
 .bss           0x00000000c002d0c4        0x0 krnl/bootmsg.32
 .bss           0x00000000c002d0c4        0x0 krnl/c++.32
 .bss           0x00000000c002d0c4        0x0 krnl/cdefs.32
 .bss           0x00000000c002d0c4        0x4 krnl/cm.32
 .bss           0x00000000c002d0c8        0x0 krnl/compat.32
 .bss           0x00000000c002d0c8       0x12 krnl/computer.32
                0x00000000c002d0c8                systemSleepFunction
                0x00000000c002d0cc                systemResetFunction
                0x00000000c002d0d0                systemShutdownFunction
                0x00000000c002d0d4                Krnl::computer
                0x00000000c002d0d8                KeIsPreemptionOn
                0x00000000c002d0d9                KeIsSchedulingOn
 .bss           0x00000000c002d0da        0x0 krnl/crc32.32
 *fill*         0x00000000c002d0da        0x2 
 .bss           0x00000000c002d0dc        0x8 krnl/env.32
                0x00000000c002d0dc                KeUserEnv
                0x00000000c002d0e0                KeSystemEnv
 *fill*         0x00000000c002d0e4       0x1c 
 .bss           0x00000000c002d100     0x2000 krnl/fault.32
                0x00000000c002d100                keInterruptContexts
                0x00000000c002e100                keInterruptHandlers
 .bss           0x00000000c002f100        0x6 krnl/gdt.32
                0x00000000c002f100                gdtDescr
 .bss           0x00000000c002f106        0x0 krnl/idle.32
 *fill*         0x00000000c002f106        0x2 
 .bss           0x00000000c002f108        0x6 krnl/idt.32
                0x00000000c002f108                idtDescr
 .bss           0x00000000c002f10e        0x0 krnl/inlines.32
 *fill*         0x00000000c002f10e       0x12 
 .bss           0x00000000c002f120       0x24 krnl/intlformat.32
                0x00000000c002f120                keLocale
 .bss           0x00000000c002f144        0x0 krnl/intops.32
 .bss           0x00000000c002f144        0x0 krnl/kheap.32
 .bss           0x00000000c002f144        0x0 krnl/mailbox.32
 .bss           0x00000000c002f144        0x0 krnl/main.32
 .bss           0x00000000c002f144        0x0 krnl/mutex.32
 .bss           0x00000000c002f144        0x1 krnl/panic.32
                0x00000000c002f144                KeIsKernelInPanic
 *fill*         0x00000000c002f145        0x3 
 .bss           0x00000000c002f148       0x29 krnl/physmgr.32
                0x00000000c002f148                Phys::forbidEvictions
                0x00000000c002f14c                Phys::currentPagePointer
                0x00000000c002f150                Phys::highestMem
                0x00000000c002f154                Phys::oldPercent
                0x00000000c002f158                Phys::usedPages
                0x00000000c002f15c                Phys::usablePages
                0x00000000c002f160                Phys::dmaUsage
 .bss           0x00000000c002f171        0x0 krnl/pipe.32
 *fill*         0x00000000c002f171        0xf 
 .bss           0x00000000c002f180       0x48 krnl/powctrl.32
                0x00000000c002f180                powCtrlOnBattery
                0x00000000c002f1a0                currentPowerSettings
                0x00000000c002f1c4                secondsSinceLastUserIO
 .bss           0x00000000c002f1c8        0x8 krnl/random.32
                0x00000000c002f1c8                kiRandSeed
 .bss           0x00000000c002f1d0        0x0 krnl/resolve.32
 .bss           0x00000000c002f1d0        0x0 krnl/semaphore.32
 .bss           0x00000000c002f1d0        0x0 krnl/signal.32
 .bss           0x00000000c002f1d0        0x0 krnl/syscalls.32
 .bss           0x00000000c002f1d0        0x9 krnl/terminal.32
                0x00000000c002f1d0                terminalCycle
                0x00000000c002f1d4                activeTerminal
                0x00000000c002f1d8                VgaText::graphicMode
 *fill*         0x00000000c002f1d9        0x1 
 .bss           0x00000000c002f1da        0x2 krnl/tss.32
                0x00000000c002f1da                doubleFaultSelector
 *fill*         0x00000000c002f1dc        0x4 
 .bss           0x00000000c002f1e0       0x84 krnl/unixfile.32
                0x00000000c002f1e0                sfileLpt
                0x00000000c002f220                sfileCom
                0x00000000c002f244                sfileNul
                0x00000000c002f248                sfilePnt
                0x00000000c002f24c                sfileAux
                0x00000000c002f250                sfileCon
                0x00000000c002f254                initialFilesAdded
                0x00000000c002f258                unixFileLinkedList
 .bss           0x00000000c002f264       0x10 krnl/virtmgr.32
                0x00000000c002f264                twswaps
                0x00000000c002f268                swapBalance
                0x00000000c002f26c                Virt::swapfileBitmap
                0x00000000c002f270                keFirstVAS
 .bss           0x00000000c002f274        0x0 sys/alarm.32
 .bss           0x00000000c002f274        0x0 sys/eject.32
 .bss           0x00000000c002f274        0x0 sys/exit.32
 .bss           0x00000000c002f274        0x0 sys/getcwd.32
 .bss           0x00000000c002f274        0x0 sys/getpid.32
 .bss           0x00000000c002f274        0x0 sys/getramdata.32
 .bss           0x00000000c002f274        0x0 sys/getvgaptr.32
 .bss           0x00000000c002f274        0x0 sys/kill.32
 .bss           0x00000000c002f274        0x0 sys/loaddll.32
 .bss           0x00000000c002f274        0x0 sys/pause.32
 .bss           0x00000000c002f274        0x0 sys/pthread.32
 .bss           0x00000000c002f274        0x0 sys/read.32
 .bss           0x00000000c002f274        0x0 sys/registersignal.32
 .bss           0x00000000c002f274        0x0 sys/registry.32
 .bss           0x00000000c002f274        0x0 sys/sbrk.32
 .bss           0x00000000c002f274        0x0 sys/setcwd.32
 .bss           0x00000000c002f274        0x0 sys/settime.32
 .bss           0x00000000c002f274        0x0 sys/symlink.32
 .bss           0x00000000c002f274        0x0 sys/timezone.32
 .bss           0x00000000c002f274        0x0 sys/truncate.32
 .bss           0x00000000c002f274        0x0 sys/write.32
 .bss           0x00000000c002f274        0x0 sys/wsbe.32
 .bss           0x00000000c002f274        0x0 sys/yield.32
 .bss           0x00000000c002f274        0x0 thr/alarm.32
 *fill*         0x00000000c002f274        0xc 
 .bss           0x00000000c002f280      0x7a4 thr/elf.32
                0x00000000c002f280                Thr::driverLookupNext
                0x00000000c002f2a0                Thr::driverLookupLen
                0x00000000c002f4a0                Thr::driverLookupAddr
                0x00000000c002f6a0                Thr::driverNameLookup
                0x00000000c002f8a0                Thr::kernelSymbols
                0x00000000c002f920                Thr::kernelStringTable
                0x00000000c002f9a0                Thr::kernelSymbolTable
                0x00000000c002fa20                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002fa24        0x0 thr/exec.32
 *fill*         0x00000000c002fa24        0x4 
 .bss           0x00000000c002fa28       0x70 thr/prcssthr.32
                0x00000000c002fa28                KiRestorePreemptionValue
                0x00000000c002fa2c                KiPreemptionDisableCounter
                0x00000000c002fa30                cleanerThread
                0x00000000c002fa34                weNeedTheCleanerToNotBlock
                0x00000000c002fa38                retValLockStuff
                0x00000000c002fa3c                retValSchedLock
                0x00000000c002fa40                lockStuffLock
                0x00000000c002fa44                schedulerLock
                0x00000000c002fa48                taskSwitchesPostponedFlag
                0x00000000c002fa4c                postponeTaskSwitchesCounter
                0x00000000c002fa50                irqDisableCounter
                0x00000000c002fa54                terminatedTaskList
                0x00000000c002fa60                sleepingTaskList
                0x00000000c002fa6c                taskList
                0x00000000c002fa78                kernelProcess
 *fill*         0x00000000c002fa98        0x8 
 .bss           0x00000000c002faa0       0x40 vm86/vm8086.32
                0x00000000c002faa0                Vm::started8086Yet
                0x00000000c002faa4                Vm::vmRetV
                0x00000000c002faa8                Vm::vmDone
                0x00000000c002faa9                Vm::vmReady
                0x00000000c002faac                Vm::vm86Thread
                0x00000000c002fab0                Vm::vmToHostCommsPtr
                0x00000000c002fac0                Vm::vmToHostComms
 .bss           0x00000000c002fae0       0x41 arch/i386/apic.32
                0x00000000c002fae0                noOfIOAPICs
                0x00000000c002fb00                ioapics
                0x00000000c002fb20                IOAPICsSetupYet
 *fill*         0x00000000c002fb21        0x3 
 .bss           0x00000000c002fb24       0x54 arch/i386/hal.32
                0x00000000c002fb24                apic
                0x00000000c002fb28                guiPanicHandler
                0x00000000c002fb2c                fpuOwner
                0x00000000c002fb30                coproLoadFunc
                0x00000000c002fb34                coproSaveFunc
                0x00000000c002fb38                lastD
                0x00000000c002fb3c                lastC
                0x00000000c002fb40                lastB
                0x00000000c002fb44                lastA
                0x00000000c002fb48                HalPageWriteCombiningFlag
                0x00000000c002fb4c                HalPageGlobalFlag
                0x00000000c002fb50                nmi
                0x00000000c002fb54                vendorIDString
                0x00000000c002fb61                familyID
                0x00000000c002fb62                model
                0x00000000c002fb63                processorType
                0x00000000c002fb64                steppingID
                0x00000000c002fb68                vendor
                0x00000000c002fb6c                opcodeDetectionMode
                0x00000000c002fb70                features
 .bss           0x00000000c002fb78        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002fb78        0x0 arch/i386/pic.32
 .bss           0x00000000c002fb78        0x2 arch/i386/rtc.32
 .bss           0x00000000c002fb7a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002fb7a        0x6 
 .bss           0x00000000c002fb80       0xf0 fs/fat/vfslink.32
                0x00000000c002fb80                FAT::fats
                0x00000000c002fba0                FAT::vfsToFatRemaps
                0x00000000c002fc20                fatToVFSRemaps
 .bss           0x00000000c002fc70        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002fc70       0x10 
 .bss           0x00000000c002fc80      0x820 fs/iso9660/vfslink.32
                0x00000000c002fc80                iso9660Owner
                0x00000000c002fc84                recentSector
                0x00000000c002fca0                recentBuffer
 .bss           0x00000000c00304a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00304a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00304a0        0xd hw/bus/pci.32
                0x00000000c00304a0                thePCI
 .bss           0x00000000c00304ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00304ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00304ad        0x3 
 .bss           0x00000000c00304b0        0x8 hw/diskphys/ata.32
                0x00000000c00304b0                ataSectorsWritten
                0x00000000c00304b4                ataSectorsRead
 .bss           0x00000000c00304b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00304b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00304b8        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c00304b8        0x0 hw/timer/apictimer.32
 .bss           0x00000000c00304b8        0x4 hw/timer/pit.32
                0x00000000c00304b8                pitFreq
 .bss           0x00000000c00304bc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00304bc        0x0 crtn.32
 .bss           0x00000000c00304bc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00304bc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00304bc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00304bc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00304bc                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0037977                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
