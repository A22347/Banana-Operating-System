Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c6da
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0x2 
 .text          0x00000000c00003a4      0x5dd acpica/utclib.32
                0x00000000c00003a4                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004a8                memset
                0x00000000c00004c4                strlen
                0x00000000c00004dc                strpbrk
                0x00000000c0000518                strtok
                0x00000000c0000564                strcpy
                0x00000000c0000588                strncpy
                0x00000000c00005f0                strcmp
                0x00000000c0000630                strchr
                0x00000000c0000654                strncmp
                0x00000000c00006a4                strcat
                0x00000000c00006d4                strncat
                0x00000000c0000710                strstr
                0x00000000c0000758                toupper
                0x00000000c000076c                tolower
                0x00000000c0000780                simple_strtoul
 .text          0x00000000c0000981      0xfad core/malloc.32
                0x00000000c0000aec                dlfree
                0x00000000c0000e47                dlmalloc
                0x00000000c0001384                dlrealloc
                0x00000000c0001527                dlmemalign
                0x00000000c000164a                dlcalloc
                0x00000000c00016e4                dlcfree
                0x00000000c00016e9                dlindependent_calloc
                0x00000000c000170e                dlindependent_comalloc
                0x00000000c0001725                dlvalloc
                0x00000000c0001750                dlpvalloc
                0x00000000c0001786                dlmalloc_trim
                0x00000000c0001793                dlmalloc_usable_size
                0x00000000c00017c4                dlmallinfo
                0x00000000c0001893                dlmalloc_stats
                0x00000000c00018a4                dlmallopt
 .text          0x00000000c000192e        0x0 libk/string.32
 .text          0x00000000c000192e       0x51 fs/fat/diskio.32
                0x00000000c000192e                disk_status
                0x00000000c0001931                disk_initialize
                0x00000000c0001934                disk_read
                0x00000000c000194a                disk_write
                0x00000000c0001960                disk_ioctl
 .text          0x00000000c000197f     0x3c6f fs/fat/ff.32
                0x00000000c000352d                f_mount
                0x00000000c000358f                f_open
                0x00000000c0003848                f_read
                0x00000000c0003a56                f_write
                0x00000000c0003c99                f_sync
                0x00000000c0003d4e                f_close
                0x00000000c0003d7d                f_lseek
                0x00000000c0004067                f_opendir
                0x00000000c0004110                f_closedir
                0x00000000c0004132                f_readdir
                0x00000000c00041a3                f_stat
                0x00000000c000420c                f_getfree
                0x00000000c000430e                f_truncate
                0x00000000c00043f2                f_unlink
                0x00000000c00044df                f_mkdir
                0x00000000c000465b                f_rename
                0x00000000c00047d9                f_chmod
                0x00000000c0004863                f_utime
                0x00000000c00048eb                f_getlabel
                0x00000000c00049c0                f_setlabel
                0x00000000c0004b50                f_expand
                0x00000000c0004cb0                f_forward
                0x00000000c0004e3e                f_mkfs
 .text          0x00000000c00055ee        0x0 fs/fat/ffsystem.32
 *fill*         0x00000000c00055ee        0x2 
 .text          0x00000000c00055f0      0x274 fs/fat/ffunicode.32
                0x00000000c00055f0                ff_uni2oem
                0x00000000c0005688                ff_oem2uni
                0x00000000c00056fc                ff_wtoupper
 .text          0x00000000c0005864       0xa7 compat/inlines.32
                0x00000000c0005864                CPU::current()
                0x00000000c0005870                operator new(unsigned long)
                0x00000000c0005875                operator delete(void*)
                0x00000000c000587a                disableIRQs()
                0x00000000c0005882                enableIRQs()
                0x00000000c0005891                lockScheduler()
                0x00000000c0005899                unlockScheduler()
                0x00000000c00058a8                lockStuff()
                0x00000000c00058b6                unlockStuff()
                0x00000000c00058f0                Virt::getAKernelVAS()
                0x00000000c00058f6                __not_memcpy
 *fill*         0x00000000c000590b        0x1 
 .text          0x00000000c000590c      0x118 compat/resolve.32
                0x00000000c000590c                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0005a24      0x76b core/computer.32
                0x00000000c0005a24                Computer::close(int, int, void*)
                0x00000000c0005a68                Krnl::firstTask()
                0x00000000c0005bb0                Computer::Computer()
                0x00000000c0005bb0                Computer::Computer()
                0x00000000c0005d0c                Computer::setBootMessage(char const*)
                0x00000000c0005d0e                Computer::detectFeatures()
                0x00000000c0005f18                Computer::displayFeatures()
                0x00000000c0005f1a                Computer::rdmsr(unsigned int)
                0x00000000c0005f46                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0005f7e                Computer::shutdown()
                0x00000000c0005f96                Computer::restart()
                0x00000000c0005fae                Computer::sleep()
                0x00000000c0005fc2                Computer::nmiEnabled()
                0x00000000c0005fce                Computer::readCMOS(unsigned char)
                0x00000000c0005fe8                Computer::enableNMI(bool)
                0x00000000c0006000                Computer::open(int, int, void*)
                0x00000000c00060d2                Computer::disableNMI()
                0x00000000c00060e0                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00060fe                Computer::handleNMI()
                0x00000000c0006164                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000618f        0x1 
 .text          0x00000000c0006190      0x211 core/gdt.32
                0x00000000c0006190                GDTEntry::setBase(unsigned int)
                0x00000000c00061ac                GDTEntry::setLimit(unsigned int)
                0x00000000c00061ca                GDT::GDT()
                0x00000000c00061ca                GDT::GDT()
                0x00000000c00061e0                GDT::addEntry(GDTEntry)
                0x00000000c0006202                GDT::getNumberOfEntries()
                0x00000000c000620a                GDT::flush()
                0x00000000c000622c                GDT::setup()
 .text          0x00000000c00063a1       0x19 core/idle.32
                0x00000000c00063a1                idleFunction(void*)
 *fill*         0x00000000c00063ba        0x2 
 .text          0x00000000c00063bc      0x464 core/idt.32
                0x00000000c00063bc                IDTEntry::IDTEntry(bool)
                0x00000000c00063bc                IDTEntry::IDTEntry(bool)
                0x00000000c000642e                IDTEntry::setOffset(unsigned int)
                0x00000000c0006444                IDT::IDT()
                0x00000000c0006444                IDT::IDT()
                0x00000000c0006446                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000644e                IDT::addEntry(IDTEntry, int)
                0x00000000c0006468                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00064a0                IDT::flush()
                0x00000000c00064ba                IDT::setup()
 .text          0x00000000c0006820      0x183 core/kheap.32
                0x00000000c0006820                sbrk
                0x00000000c00068b5                mmap
                0x00000000c00068cb                munmap
                0x00000000c00068e1                liballoc_lock()
                0x00000000c00068ee                liballoc_unlock()
                0x00000000c0006902                liballoc_alloc(int)
                0x00000000c000691a                liballoc_free(void*, int)
                0x00000000c0006935                realloc
                0x00000000c0006949                malloc
                0x00000000c0006959                free
                0x00000000c0006969                rfree
                0x00000000c0006979                calloc
 .text          0x00000000c00069a3      0x1b3 core/main.32
                0x00000000c00069a3                Krnl::setBootMessage(char const*)
                0x00000000c0006a0f                kernel_main
 .text          0x00000000c0006b56      0x5ce core/physmgr.32
                0x00000000c0006b56                Phys::allocateDMA(unsigned long)
                0x00000000c0006c2d                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0006c60                Phys::setPageState(unsigned long, bool)
                0x00000000c0006c92                Phys::getPageState(unsigned long)
                0x00000000c0006cae                Phys::freePage(unsigned long)
                0x00000000c0006d10                Phys::allocatePage()
                0x00000000c0006dcd                Phys::allocateContiguousPages(int)
                0x00000000c0006e29                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0006e61                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007124      0x273 core/pipe.32
                0x00000000c0007124                Pipe::isAtty()
                0x00000000c0007128                Pipe::~Pipe()
                0x00000000c0007128                Pipe::~Pipe()
                0x00000000c000714c                Pipe::~Pipe()
                0x00000000c0007174                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007234                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0007330                Pipe::Pipe(int)
                0x00000000c0007330                Pipe::Pipe(int)
 *fill*         0x00000000c0007397        0x1 
 .text          0x00000000c0007398      0xa1a core/terminal.32
                0x00000000c0007398                VgaText::isAtty()
                0x00000000c000739c                VgaText::~VgaText()
                0x00000000c000739c                VgaText::~VgaText()
                0x00000000c00073c0                VgaText::~VgaText()
                0x00000000c00073ea                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000740a                setTerminalScrollLock(bool)
                0x00000000c000740b                doTerminalCycle()
                0x00000000c000740c                addToTerminalCycle(VgaText*)
                0x00000000c000740d                scrollTerminalScrollLock(int)
                0x00000000c000740e                VgaText::updateTitle()
                0x00000000c0007410                VgaText::load()
                0x00000000c0007412                VgaText::updateCursor()
                0x00000000c0007428                VgaText::doANSI_SGR(int)
                0x00000000c000749c                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00074ac                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00074bc                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00074dc                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00074e8                VgaText::setTitleColour(VgaColour)
                0x00000000c00074f4                VgaText::setTitle(char*)
                0x00000000c00074f6                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0007508                VgaText::scrollScreen()
                0x00000000c00075a0                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00075b2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0007642                VgaText::getCursorX()
                0x00000000c000764a                VgaText::getCursorY()
                0x00000000c0007652                VgaText::setCursor(int, int)
                0x00000000c0007669                setActiveTerminal(VgaText*)
                0x00000000c00076b4                VgaText::clearScreen()
                0x00000000c0007702                VgaText::setCursorX(int)
                0x00000000c000771a                VgaText::setCursorY(int)
                0x00000000c0007732                VgaText::incrementCursor(bool)
                0x00000000c0007786                VgaText::decrementCursor(bool)
                0x00000000c00077a8                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0007876                VgaText::putchar(char)
                0x00000000c0007962                VgaText::putx(unsigned int)
                0x00000000c00079a8                VgaText::puts(char const*)
                0x00000000c00079ce                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0007a1a                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0007b68                VgaText::VgaText(char const*)
                0x00000000c0007b68                VgaText::VgaText(char const*)
                0x00000000c0007cb4                VgaText::receiveKey(unsigned char)
                0x00000000c0007d8c                VgaText::doUpdate()
                0x00000000c0007d8d                newTerminal(char*)
 *fill*         0x00000000c0007db2        0x2 
 .text          0x00000000c0007db4      0x1a1 core/tss.32
                0x00000000c0007db4                TSS::TSS()
                0x00000000c0007db4                TSS::TSS()
                0x00000000c0007dc4                TSS::setESP(unsigned long)
                0x00000000c0007dd8                TSS::flush()
                0x00000000c0007df8                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0007f55        0x1 
 .text          0x00000000c0007f56      0x4c2 core/unixfile.32
                0x00000000c0007f56                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0007fac                ReservedFilename::isAtty()
                0x00000000c0007fc8                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008026                UnixFile::getFileDescriptor()
                0x00000000c000802e                UnixFile::UnixFile(int)
                0x00000000c000802e                UnixFile::UnixFile(int)
                0x00000000c00081de                ReservedFilename::ReservedFilename(int)
                0x00000000c00081de                ReservedFilename::ReservedFilename(int)
                0x00000000c0008210                UnixFile::~UnixFile()
                0x00000000c0008210                UnixFile::~UnixFile()
                0x00000000c00082a8                UnixFile::~UnixFile()
                0x00000000c00082d0                ReservedFilename::~ReservedFilename()
                0x00000000c00082d0                ReservedFilename::~ReservedFilename()
                0x00000000c00082f4                ReservedFilename::~ReservedFilename()
                0x00000000c000831b                getFromFileDescriptor(int)
 .text          0x00000000c0008418     0x118a core/virtmgr.32
                0x00000000c0008418                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000844d                Virt::getPageState(unsigned long)
                0x00000000c0008471                Virt::allocateKernelVirtualPages(int)
                0x00000000c0008582                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00085a0                Virt::swapIDToSector(unsigned long)
                0x00000000c00085b2                Virt::allocateSwapfilePage()
                0x00000000c0008630                Virt::virtualMemorySetup()
                0x00000000c000867b                Virt::setupPageSwapping(int)
                0x00000000c00086ec                VAS::VAS(VAS*)
                0x00000000c00086ec                VAS::VAS(VAS*)
                0x00000000c000871a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0008746                VAS::getPageTableEntry(unsigned long)
                0x00000000c0008765                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0008888                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00088ac                VAS::virtualToPhysical(unsigned long)
                0x00000000c00088c4                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0008904                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0008936                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0008960                VAS::~VAS()
                0x00000000c0008960                VAS::~VAS()
                0x00000000c0008ac4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0008bc8                VAS::allocatePages(int, int)
                0x00000000c0008da0                VAS::setCPUSpecific(unsigned long)
                0x00000000c0008dbc                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0008e82                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0008f70                VAS::VAS(bool)
                0x00000000c0008f70                VAS::VAS(bool)
                0x00000000c00091f0                VAS::VAS()
                0x00000000c00091f0                VAS::VAS()
                0x00000000c0009260                VAS::evict(unsigned long)
                0x00000000c000931e                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000940a                VAS::scanForEviction()
                0x00000000c00094e8                mapVASFirstTime
 .text          0x00000000c00095a2       0x5f coreobjs/c++.32
                0x00000000c00095a2                __cxa_atexit
                0x00000000c00095a5                __cxa_finalize
                0x00000000c00095a6                __stack_chk_fail
                0x00000000c00095dc                __cxa_pure_virtual
                0x00000000c00095ed                operator new[](unsigned long)
                0x00000000c00095f2                operator delete(void*, unsigned long)
                0x00000000c00095f7                operator delete[](void*)
                0x00000000c00095fc                operator delete[](void*, unsigned long)
 .text          0x00000000c0009601      0x1fc dbg/kconsole.32
                0x00000000c0009601                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000965a                Dbg::logc(char)
                0x00000000c000967a                Dbg::logs(char*)
                0x00000000c0009697                Dbg::logWriteInt(unsigned int)
                0x00000000c00096b4                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c00096d3                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00097fd        0x1 
 .text          0x00000000c00097fe      0xc50 fs/vfs.32
                0x00000000c00097fe                File::read(unsigned long long, void*, int*)
                0x00000000c0009856                File::write(unsigned long long, void*, int*)
                0x00000000c00098ae                Directory::read(unsigned long long, void*, int*)
                0x00000000c0009906                Directory::write(unsigned long long, void*, int*)
                0x00000000c0009934                File::isAtty()
                0x00000000c0009938                Directory::isAtty()
                0x00000000c000993c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0009942                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0009948                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000994e                File::~File()
                0x00000000c000994e                File::~File()
                0x00000000c0009972                File::~File()
                0x00000000c000999c                Directory::~Directory()
                0x00000000c000999c                Directory::~Directory()
                0x00000000c00099c0                Directory::~Directory()
                0x00000000c00099ea                Filesystem::Filesystem()
                0x00000000c00099ea                Filesystem::Filesystem()
                0x00000000c0009a0e                Filesystem::~Filesystem()
                0x00000000c0009a0e                Filesystem::~Filesystem()
                0x00000000c0009a1c                Filesystem::~Filesystem()
                0x00000000c0009a40                Fs::getcwd(Process*, char*, int)
                0x00000000c0009a6a                Fs::initVFS()
                0x00000000c0009a94                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c0009c3e                File::File(char const*, Process*)
                0x00000000c0009c3e                File::File(char const*, Process*)
                0x00000000c0009cf8                File::open(FileOpenMode)
                0x00000000c0009d56                File::close()
                0x00000000c0009db6                File::seek(unsigned long long)
                0x00000000c0009e0c                File::tell(unsigned long long*)
                0x00000000c0009e5c                File::rewind()
                0x00000000c0009e70                File::unlink()
                0x00000000c0009ebc                File::rename(char const*)
                0x00000000c0009f0a                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0009f66                File::exists()
                0x00000000c0009fa4                File::stat(unsigned long long*, bool*)
                0x00000000c000a005                Fs::setcwd(Process*, char*)
                0x00000000c000a162                Directory::Directory(char const*, Process*)
                0x00000000c000a162                Directory::Directory(char const*, Process*)
                0x00000000c000a21c                Directory::open()
                0x00000000c000a278                Directory::close()
                0x00000000c000a2d8                Directory::unlink()
                0x00000000c000a324                Directory::rename(char const*)
                0x00000000c000a372                Directory::exists()
                0x00000000c000a3b0                Directory::read(dirent*)
                0x00000000c000a3fc                Directory::create()
                0x00000000c000a448                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000a44e        0x2 
 .text          0x00000000c000a450       0x86 hal/bus.32
                0x00000000c000a450                Bus::Bus(char const*)
                0x00000000c000a450                Bus::Bus(char const*)
                0x00000000c000a488                Bus::~Bus()
                0x00000000c000a488                Bus::~Bus()
                0x00000000c000a4ac                Bus::~Bus()
 .text          0x00000000c000a4d6       0x96 hal/buzzer.32
                0x00000000c000a4d6                beepThread(void*)
                0x00000000c000a513                Krnl::beep(int, int, bool)
 .text          0x00000000c000a56c      0x467 hal/clock.32
                0x00000000c000a56c                User::loadClockSettings(int)
                0x00000000c000a5be                Clock::Clock(char const*)
                0x00000000c000a5be                Clock::Clock(char const*)
                0x00000000c000a5f4                Clock::~Clock()
                0x00000000c000a5f4                Clock::~Clock()
                0x00000000c000a618                Clock::~Clock()
                0x00000000c000a642                Clock::timeInSecondsLocal()
                0x00000000c000a68a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000a6e3                datetimeToSeconds(datetime_t)
                0x00000000c000a80a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000a86a                secondsToDatetime(unsigned long long)
                0x00000000c000a9ae                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000a9d3        0x1 
 .text          0x00000000c000a9d4      0x464 hal/device.32
                0x00000000c000a9d4                Device::hibernate()
                0x00000000c000a9d6                Device::wake()
                0x00000000c000a9d8                Device::detect()
                0x00000000c000a9da                Device::disableLegacy()
                0x00000000c000a9dc                Device::powerSaving(PowerSavingLevel)
                0x00000000c000a9de                DriverlessDevice::close(int, int, void*)
                0x00000000c000a9e2                DriverlessDevice::detect()
                0x00000000c000a9e4                DriverlessDevice::open(int, int, void*)
                0x00000000c000a9f8                Device::~Device()
                0x00000000c000a9f8                Device::~Device()
                0x00000000c000aa06                Device::~Device()
                0x00000000c000aa2e                Device::findAndLoadDriver()
                0x00000000c000aa3c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000aa62                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000aaa2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000aacc                Device::getParent()
                0x00000000c000aad8                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000aaf6                Device::addChild(Device*)
                0x00000000c000ab3a                Device::removeAllChildren()
                0x00000000c000ab80                Device::hibernateAll()
                0x00000000c000abb0                Device::wakeAll()
                0x00000000c000abe0                Device::detectAll()
                0x00000000c000ac10                Device::disableLegacyAll()
                0x00000000c000ac12                Device::loadDriversForAll()
                0x00000000c000ac14                Device::closeAll()
                0x00000000c000ac4a                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000ac80                Device::setName(char const*)
                0x00000000c000ac8e                Device::Device(char const*)
                0x00000000c000ac8e                Device::Device(char const*)
                0x00000000c000ad8a                Device::getName()
                0x00000000c000ad94                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ad94                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000adca                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ae0e                getDevicesOfType(DeviceType)
 .text          0x00000000c000ae38       0x86 hal/diskctrl.32
                0x00000000c000ae38                HardDiskController::HardDiskController(char const*)
                0x00000000c000ae38                HardDiskController::HardDiskController(char const*)
                0x00000000c000ae70                HardDiskController::~HardDiskController()
                0x00000000c000ae70                HardDiskController::~HardDiskController()
                0x00000000c000ae94                HardDiskController::~HardDiskController()
 .text          0x00000000c000aebe       0xe2 hal/diskphys.32
                0x00000000c000aebe                PhysicalDisk::eject()
                0x00000000c000aec2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000aec2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000af2a                PhysicalDisk::startCache()
                0x00000000c000af52                PhysicalDisk::~PhysicalDisk()
                0x00000000c000af52                PhysicalDisk::~PhysicalDisk()
                0x00000000c000af76                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000afa0        0x0 hal/fpu.32
 .text          0x00000000c000afa0      0x34c hal/intctrl.32
                0x00000000c000afa0                int_handler
                0x00000000c000b028                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000b070                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b19b                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000b1cf                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b24d                setupINTS()
                0x00000000c000b2aa                convertLegacyIRQNumber(int)
 .text          0x00000000c000b2ec      0x778 hal/keybrd.32
                0x00000000c000b2ec                startGUI(void*)
                0x00000000c000b358                startGUIVESA(void*)
                0x00000000c000b3c4                sendKeyToTerminal(unsigned char)
                0x00000000c000b482                sendKeyboardToken(KeyboardToken)
                0x00000000c000b8b4                clearInternalKeybuffer(VgaText*)
                0x00000000c000b8e9                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000b9da                Keyboard::Keyboard(char const*)
                0x00000000c000b9da                Keyboard::Keyboard(char const*)
                0x00000000c000ba16                Keyboard::~Keyboard()
                0x00000000c000ba16                Keyboard::~Keyboard()
                0x00000000c000ba3a                Keyboard::~Keyboard()
 .text          0x00000000c000ba64      0x3ea hal/logidisk.32
                0x00000000c000ba64                LogicalDisk::close(int, int, void*)
                0x00000000c000ba68                LogicalDisk::~LogicalDisk()
                0x00000000c000ba68                LogicalDisk::~LogicalDisk()
                0x00000000c000ba8c                LogicalDisk::~LogicalDisk()
                0x00000000c000bab6                LogicalDisk::open(int, int, void*)
                0x00000000c000baca                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000bb02                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000bb48                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bb48                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bbfe                LogicalDisk::assignDriveLetter()
                0x00000000c000bcb4                LogicalDisk::mount()
                0x00000000c000bcfc                LogicalDisk::unmount()
                0x00000000c000bd0c                LogicalDisk::eject()
                0x00000000c000bd20                LogicalDisk::unassignDriveLetter()
                0x00000000c000bd76                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000bde2                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000be4e        0x2 
 .text          0x00000000c000be50       0x86 hal/mouse.32
                0x00000000c000be50                Mouse::Mouse(char const*)
                0x00000000c000be50                Mouse::Mouse(char const*)
                0x00000000c000be88                Mouse::~Mouse()
                0x00000000c000be88                Mouse::~Mouse()
                0x00000000c000beac                Mouse::~Mouse()
 .text          0x00000000c000bed6      0x339 hal/partition.32
                0x00000000c000bed6                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bf7e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000c20f        0x1 
 .text          0x00000000c000c210       0x86 hal/serial.32
                0x00000000c000c210                Serial::Serial(char const*)
                0x00000000c000c210                Serial::Serial(char const*)
                0x00000000c000c248                Serial::~Serial()
                0x00000000c000c248                Serial::~Serial()
                0x00000000c000c26c                Serial::~Serial()
 *fill*         0x00000000c000c296        0x2 
 .text          0x00000000c000c298      0x234 hal/timer.32
                0x00000000c000c298                Timer::Timer(char const*)
                0x00000000c000c298                Timer::Timer(char const*)
                0x00000000c000c2d0                Timer::~Timer()
                0x00000000c000c2d0                Timer::~Timer()
                0x00000000c000c2f4                Timer::~Timer()
                0x00000000c000c31e                Timer::read()
                0x00000000c000c329                setupTimer(int)
                0x00000000c000c364                timerHandler(unsigned int)
 .text          0x00000000c000c4cc      0x43e hal/vcache.32
                0x00000000c000c4cc                VCache::VCache(PhysicalDisk*)
                0x00000000c000c4cc                VCache::VCache(PhysicalDisk*)
                0x00000000c000c634                VCache::invalidateReadBuffer()
                0x00000000c000c644                VCache::writeWriteBuffer()
                0x00000000c000c690                VCache::~VCache()
                0x00000000c000c690                VCache::~VCache()
                0x00000000c000c6e4                VCache::~VCache()
                0x00000000c000c70c                VCache::write(unsigned long long, int, void*)
                0x00000000c000c806                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000c90a      0x4b3 hal/video.32
                0x00000000c000c90a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000c956                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000c9c6                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000ca44                Video::clearScreen(unsigned int)
                0x00000000c000ca78                Video::putpixel(int, int, unsigned int)
                0x00000000c000ca86                Video::Video(char const*)
                0x00000000c000ca86                Video::Video(char const*)
                0x00000000c000cabc                Video::~Video()
                0x00000000c000cabc                Video::~Video()
                0x00000000c000cae0                Video::~Video()
                0x00000000c000cb0a                Video::isMonochrome()
                0x00000000c000cb16                Video::getWidth()
                0x00000000c000cb22                Video::getHeight()
                0x00000000c000cb2e                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000cbea                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000cd52                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000cdbd        0x3 
 .text          0x00000000c000cdc0     0x12bf hw/acpi.32
                0x00000000c000cdc0                ACPI::close(int, int, void*)
                0x00000000c000ce74                findRSDP()
                0x00000000c000cf04                loadACPITables(unsigned char*)
                0x00000000c000d168                findRSDT(unsigned char*)
                0x00000000c000d2b8                findDataTable(unsigned char*, char*)
                0x00000000c000d330                scanMADT()
                0x00000000c000d7cc                ACPI::ACPI()
                0x00000000c000d7cc                ACPI::ACPI()
                0x00000000c000d820                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000d908                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000d9d0                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000d9d8                ACPI::detectPCI()
                0x00000000c000dbe0                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000dc28                ACPI::sleep()
                0x00000000c000dc44                ACPI::open(int, int, void*)
 *fill*         0x00000000c000e07f        0x1 
 .text          0x00000000c000e080      0xda3 hw/cpu.32
                0x00000000c000e080                CPU::close(int, int, void*)
                0x00000000c000e084                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000e0a0                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000e0b8                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000e12c                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000e1b0                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000e1de                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000e20c                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000e23a                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000e268                CPU::CPU()
                0x00000000c000e268                CPU::CPU()
                0x00000000c000e2f6                CPU::displayFeatures()
                0x00000000c000e2f8                CPU::detectFeatures()
                0x00000000c000e9ce                CPU::setupSMEP()
                0x00000000c000e9da                CPU::setupUMIP()
                0x00000000c000e9e4                CPU::setupTSC()
                0x00000000c000e9ee                CPU::setupLargePages()
                0x00000000c000e9f8                CPU::setupPAT()
                0x00000000c000ea34                CPU::setupMTRR()
                0x00000000c000ea36                CPU::setupGlobalPages()
                0x00000000c000ea40                CPU::allowUsermodeDataAccess()
                0x00000000c000ea52                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ea64                CPU::setupSMAP()
                0x00000000c000ea72                CPU::setupFeatures()
                0x00000000c000eb3e                CPU::open(int, int, void*)
                0x00000000c000ec28                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c000ee23        0x4 hw/smp.32
                0x00000000c000ee23                Krnl::smpEntry()
                0x00000000c000ee25                Krnl::startCPU(int)
                0x00000000c000ee26                Krnl::startCPUs()
 *fill*         0x00000000c000ee27        0x1 
 .text          0x00000000c000ee28      0x581 krnl/env.32
                0x00000000c000ee28                EnvVarContainer::getEnv(char const*)
                0x00000000c000ee66                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000ef28                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000ef2a                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000f110                EnvVarContainer::__loadSystem()
                0x00000000c000f12a                EnvVarContainer::__loadUser()
                0x00000000c000f12c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f12c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f14e                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f14e                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f17e                Krnl::getEnv(Process*, char const*)
                0x00000000c000f1e3                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000f1fd                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000f21c                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000f22f                Krnl::deleteEnvSystem(char const*)
                0x00000000c000f230                Krnl::deleteEnvUser(char const*)
                0x00000000c000f231                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000f232                Krnl::newProcessEnv(Process*)
                0x00000000c000f254                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000f2a0                Krnl::loadSystemEnv()
                0x00000000c000f2ce                Krnl::loadUserEnv()
                0x00000000c000f2f4                Krnl::flushEnv()
                0x00000000c000f2f5                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000f315                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c000f3a9      0x25b krnl/panic.32
                0x00000000c000f3a9                Krnl::panic(char const*)
 .text          0x00000000c000f604      0x168 krnl/powctrl.32
                0x00000000c000f604                Krnl::powerThread(void*)
                0x00000000c000f658                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c000f66e                Krnl::userIOReceived()
                0x00000000c000f679                Krnl::handlePowerButton()
                0x00000000c000f6ae                Krnl::handleSleepButton()
                0x00000000c000f6e3                Krnl::setupPowerManager()
 .text          0x00000000c000f76c      0x50e reg/registry.32
                0x00000000c000f76c                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c000f8c4                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c000fa19                Reg::getLine(char*, char*, char*)
                0x00000000c000fa50                Reg::readInt(char*, char*, int*)
                0x00000000c000fb3b                Reg::readString(char*, char*, char*, int)
                0x00000000c000fbbc                Reg::readBool(char*, char*, bool*)
                0x00000000c000fbe1                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c000fc0d                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c000fc39                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c000fc7a       0x36 sys/sc_eject.32
                0x00000000c000fc7a                Sys::eject(regs*)
 .text          0x00000000c000fcb0       0x18 sys/sc_exit.32
                0x00000000c000fcb0                Sys::exit(regs*)
 .text          0x00000000c000fcc8       0x1f sys/sc_getcwd.32
                0x00000000c000fcc8                Sys::getCwd(regs*)
 .text          0x00000000c000fce7        0xc sys/sc_getpid.32
                0x00000000c000fce7                Sys::getPID(regs*)
 .text          0x00000000c000fcf3       0x1a sys/sc_getramdata.32
                0x00000000c000fcf3                Sys::getRAMData(regs*)
 .text          0x00000000c000fd0d       0x82 sys/sc_getvgaptr.32
                0x00000000c000fd0d                Sys::getVGAPtr(regs*)
 .text          0x00000000c000fd8f       0xa8 sys/sc_loaddll.32
                0x00000000c000fd8f                Sys::loadDLL(regs*)
 .text          0x00000000c000fe37       0x68 sys/sc_read.32
                0x00000000c000fe37                Sys::read(regs*)
 .text          0x00000000c000fe9f       0x55 sys/sc_sbrk.32
                0x00000000c000fe9f                Sys::sbrk(regs*)
 .text          0x00000000c000fef4       0x1c sys/sc_setcwd.32
                0x00000000c000fef4                Sys::setCwd(regs*)
 .text          0x00000000c000ff10       0x95 sys/sc_settime.32
                0x00000000c000ff10                Sys::setTime(regs*)
 .text          0x00000000c000ffa5       0x4a sys/sc_timezone.32
                0x00000000c000ffa5                Sys::timezone(regs*)
 .text          0x00000000c000ffef       0x68 sys/sc_write.32
                0x00000000c000ffef                Sys::write(regs*)
 .text          0x00000000c0010057       0x62 sys/sc_wsbe.32
                0x00000000c0010057                Sys::wsbe(regs*)
 .text          0x00000000c00100b9       0x25 sys/sc_yield.32
                0x00000000c00100b9                Sys::yield(regs*)
 .text          0x00000000c00100de      0xdf5 sys/syscalls.32
                0x00000000c00100de                sysCallSeekDir(regs*)
                0x00000000c00100e3                sysCallTellDir(regs*)
                0x00000000c00100e8                sysCallVerify(regs*)
                0x00000000c00100f2                sysCallGetArgc(regs*)
                0x00000000c0010102                sysCallTTYName(regs*)
                0x00000000c001010a                sysFormatDisk(regs*)
                0x00000000c0010174                sysSetDiskVolumeLabel(regs*)
                0x00000000c00101be                sysGetDiskVolumeLabel(regs*)
                0x00000000c0010213                sysShutdown(regs*)
                0x00000000c0010271                sysCallRealpath(regs*)
                0x00000000c00102b4                sysCallReadDir(regs*)
                0x00000000c0010333                sysCallIsATTY(regs*)
                0x00000000c001038d                sysCallSeek(regs*)
                0x00000000c00103e4                sysCallTell(regs*)
                0x00000000c0010450                sysCallSize(regs*)
                0x00000000c00104c2                sysCallSizeFromFilename(regs*)
                0x00000000c0010571                sysCallClose(regs*)
                0x00000000c00105d1                sysCallOpenDir(regs*)
                0x00000000c0010646                sysCallCloseDir(regs*)
                0x00000000c001069a                sysCallMakeDir(regs*)
                0x00000000c001070a                sysCallWait(regs*)
                0x00000000c0010724                sysCallNotImpl(regs*)
                0x00000000c001073f                sysPanic(regs*)
                0x00000000c0010759                sysCallRmdir(regs*)
                0x00000000c00107bd                sysCallUnlink(regs*)
                0x00000000c0010821                sysCallGetArgv(regs*)
                0x00000000c001086d                sysCallUSleep(regs*)
                0x00000000c0010896                sysCallSpawn(regs*)
                0x00000000c00108fe                sysCallGetEnv(regs*)
                0x00000000c00109ab                sysSetFatAttrib(regs*)
                0x00000000c0010a1d                sysPipe(regs*)
                0x00000000c0010a62                sysGetUnixTime(regs*)
                0x00000000c0010a76                string_ends_with(char const*, char const*)
                0x00000000c0010abe                sysCallOpen(regs*)
                0x00000000c0010ca6                Sys::loadSyscalls()
                0x00000000c0010e91                Sys::systemCall(regs*, void*)
 .text          0x00000000c0010ed3     0x11e5 thr/elf.32
                0x00000000c0010ed3                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001115f                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0011375                Thr::runtimeReferenceHelper()
                0x00000000c0011388                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00113d7                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0011695                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0011dcb                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0011dfd                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0011e34                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0011e4e                Thr::loadDLL(char const*, bool)
                0x00000000c001207f                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00120b8     0x12a1 thr/prcssthr.32
                0x00000000c00120b8                userModeEntryPoint(void*)
                0x00000000c00120e0                changeTSS
                0x00000000c0012110                switchToThread(ThreadControlBlock*)
                0x00000000c00121bc                Process::addArgs(char**)
                0x00000000c001221c                Process::Process(char const*, Process*, char**)
                0x00000000c001221c                Process::Process(char const*, Process*, char**)
                0x00000000c0012408                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0012408                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00125c0                taskStartupFunction
                0x00000000c00125cc                Semaphore::Semaphore(int)
                0x00000000c00125cc                Semaphore::Semaphore(int)
                0x00000000c00125fc                Mutex::Mutex()
                0x00000000c00125fc                Mutex::Mutex()
                0x00000000c0012610                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0012708                Process::createUserThread()
                0x00000000c0012724                setupMultitasking(void (*)())
                0x00000000c001282c                schedule()
                0x00000000c00128b8                Semaphore::tryAcquire()
                0x00000000c0012984                Semaphore::assertLocked(char const*)
                0x00000000c00129fc                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0012a24                blockTask(TaskState)
                0x00000000c0012a54                waitTask(int, int*, int)
                0x00000000c0012a98                milliTenthSleepUntil(unsigned int)
                0x00000000c0012b24                milliTenthSleep(unsigned int)
                0x00000000c0012b34                sleep(unsigned int)
                0x00000000c0012b50                Semaphore::acquire()
                0x00000000c0012c0c                taskReturned
                0x00000000c0012c48                Thr::processFromPID(int)
                0x00000000c0012ce8                unblockTask(ThreadControlBlock*)
                0x00000000c0012d8c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0013054                cleanerTaskFunction(void*)
                0x00000000c0013144                terminateTask(int)
                0x00000000c0013210                Thr::terminateFromIRQ(int)
                0x00000000c001321c                Semaphore::release()
 .text          0x00000000c0013359      0xb93 vm86/vm8086.32
                0x00000000c0013359                Vm::inbv(unsigned short)
                0x00000000c001336c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00133a2                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00133b2                Vm::getSegment(unsigned int)
                0x00000000c00133ba                Vm::getOffset(unsigned int)
                0x00000000c00133bf                Vm::mainloop2()
                0x00000000c00133f9                Vm::mainVm8086Loop(void*)
                0x00000000c0013409                Vm::mainloop3(unsigned long)
                0x00000000c001342f                Vm::initialise8086()
                0x00000000c0013472                Vm::finish8086()
                0x00000000c00134d3                Vm::getOutput8086(unsigned char*)
                0x00000000c00134f8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00135b1                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0013719                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00137a3                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00137b4                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00137c6                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00137d7                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00137ec                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0013802                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0013817                Vm::faultHandler(regs*)
 .text          0x00000000c0013eec      0xfcd vm86/x87em.32
                0x00000000c0013eec                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c0013f4a                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c0013f53                Vm::fpu32ToInternal(unsigned int)
                0x00000000c0013f98                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c0013fa1                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c0014000                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c001403c                Vm::fpuLongToFloat(long long)
                0x00000000c001409b                Vm::fpuGet0()
                0x00000000c00140a0                Vm::fpuGet1()
                0x00000000c00140a8                Vm::fpuGetPi()
                0x00000000c00140b0                Vm::fpuGetLog2E()
                0x00000000c00140c8                Vm::fpuGetLogE2()
                0x00000000c00140e0                Vm::fpuGetLog210()
                0x00000000c00140f8                Vm::fpuGetLog102()
                0x00000000c0014110                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c0014124                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c001413a                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c0014190                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c00141a1                Vm::fpuAbs(unsigned long long)
                0x00000000c00141aa                Vm::fpuChs(unsigned long long)
                0x00000000c00141ba                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c00141c9                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c00141e8                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c0014204                Vm::fpuSquare(unsigned long long)
                0x00000000c001421a                Vm::fpuGetReg(int)
                0x00000000c001425d                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c00142a9                Vm::fpuPush(unsigned long long)
                0x00000000c0014307                Vm::fpuPop()
                0x00000000c001435a                Vm::x87Handler(regs*)
 .text          0x00000000c0014eb9      0x8e8 arch/i386/hal.32
                0x00000000c0014eb9                Hal::noCopro(unsigned long)
                0x00000000c0014eba                Hal::noTSC()
                0x00000000c0014ebf                Hal::readTSC()
                0x00000000c0014ec2                nmiHandler(regs*, void*)
                0x00000000c0014edb                doubleFault(regs*, void*)
                0x00000000c0014ef4                displayDebugInfo(regs*)
                0x00000000c0015215                displayProgramFault(char const*)
                0x00000000c0015261                gpFault(regs*, void*)
                0x00000000c00152c6                pgFault(regs*, void*)
                0x00000000c0015328                otherISRHandler(regs*, void*)
                0x00000000c001535c                opcodeFault(regs*, void*)
                0x00000000c00153dc                i386SaveCoprocessor(void*)
                0x00000000c00153f0                i386LoadCoprocessor(void*)
                0x00000000c0015404                x87EmulHandler(regs*, void*)
                0x00000000c00154b7                Hal::initialiseCoprocessor()
                0x00000000c0015565                Hal::panic(char const*)
                0x00000000c001556a                Hal::initialise()
                0x00000000c0015733                Hal::makeBeep(int)
                0x00000000c001576d                Hal::getRand()
                0x00000000c0015770                Hal::endOfInterrupt(int)
 *fill*         0x00000000c00157a1        0x3 
 .text          0x00000000c00157a4      0x2dc arch/i386/pic.32
                0x00000000c00157a4                picIoWait()
                0x00000000c00157ac                picDisable()
                0x00000000c00157e0                picGetIRQReg(int)
                0x00000000c001585c                picOpen()
                0x00000000c00159e0                picEOI(int)
 .text          0x00000000c0015a80      0x64a arch/i386/rtc.32
                0x00000000c0015a80                RTC::open(int, int, void*)
                0x00000000c0015a84                RTC::close(int, int, void*)
                0x00000000c0015a88                RTC::timeInSecondsUTC()
                0x00000000c0015a9a                RTC::timeInDatetimeUTC()
                0x00000000c0015ac0                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015afe                RTC::~RTC()
                0x00000000c0015afe                RTC::~RTC()
                0x00000000c0015b22                RTC::~RTC()
                0x00000000c0015b4c                RTC::get_update_in_progress_flag()
                0x00000000c0015b64                RTC::completeRTCRefresh()
                0x00000000c0015e1c                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0015fcf                rtcIRQHandler(regs*, void*)
                0x00000000c0016014                RTC::RTC()
                0x00000000c0016014                RTC::RTC()
 *fill*         0x00000000c00160ca        0x2 
 .text          0x00000000c00160cc      0x1f7 arch/i386/vga.32
                0x00000000c00160cc                Hal::consoleScroll(int, int)
                0x00000000c00161d4                Hal::consoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016238                Hal::consoleCursorUpdate(int, int)
 *fill*         0x00000000c00162c3        0x1 
 .text          0x00000000c00162c4     0x13a7 fs/fat/vfslink.32
                0x00000000c00162c4                FAT::getName()
                0x00000000c00162cc                FAT::tell(void*, unsigned long long*)
                0x00000000c0016308                FAT::stat(void*, unsigned long long*)
                0x00000000c0016344                FAT::~FAT()
                0x00000000c0016344                FAT::~FAT()
                0x00000000c0016368                FAT::~FAT()
                0x00000000c0016390                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016434                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00164f8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00166cc                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00168e4                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016aa4                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016c10                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016c70                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016cd0                FAT::close(void*)
                0x00000000c0016d24                FAT::closeDir(void*)
                0x00000000c0016d78                FAT::seek(void*, unsigned long long)
                0x00000000c0016dd0                fatWrapperReadDisk
                0x00000000c0016e10                fatWrapperWriteDisk
                0x00000000c0016e50                fatWrapperIoctl
                0x00000000c0016f5c                FAT::FAT()
                0x00000000c0016f5c                FAT::FAT()
                0x00000000c0016fb0                FAT::fixFilepath(char*)
                0x00000000c0016fec                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0017120                FAT::openDir(char const*, void**)
                0x00000000c00171d0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00172c8                FAT::unlink(char const*)
                0x00000000c0017348                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00174b0                FAT::rename(char const*, char const*)
                0x00000000c001757c                FAT::mkdir(char const*)
                0x00000000c00175fc                FAT::exists(char const*)
 *fill*         0x00000000c001766b        0x1 
 .text          0x00000000c001766c      0xba7 fs/iso9660/vfslink.32
                0x00000000c001766c                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017672                ISO9660::seek(void*, unsigned long long)
                0x00000000c00176a2                ISO9660::tell(void*, unsigned long long*)
                0x00000000c00176c6                ISO9660::getName()
                0x00000000c00176cc                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00176f0                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00176f6                ISO9660::unlink(char const*)
                0x00000000c00176fc                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017702                ISO9660::rename(char const*, char const*)
                0x00000000c0017708                ISO9660::mkdir(char const*)
                0x00000000c001770e                ISO9660::close(void*)
                0x00000000c0017730                ISO9660::closeDir(void*)
                0x00000000c0017752                ISO9660::~ISO9660()
                0x00000000c0017752                ISO9660::~ISO9660()
                0x00000000c0017776                ISO9660::~ISO9660()
                0x00000000c001779d                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c00177df                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001785a                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c00178ba                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017abe                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017d38                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0017d8c                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c0017f62                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c0017ff0                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001809e                ISO9660::exists(char const*)
                0x00000000c00180c2                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018156                ISO9660::openDir(char const*, void**)
                0x00000000c00181f0                ISO9660::ISO9660()
                0x00000000c00181f0                ISO9660::ISO9660()
 *fill*         0x00000000c0018213        0x1 
 .text          0x00000000c0018214      0x26c hal/sound/sndcard.32
                0x00000000c0018214                SoundCard::beginPlayback()
                0x00000000c0018222                SoundCard::stopPlayback()
                0x00000000c0018230                SoundCard::SoundCard(char const*)
                0x00000000c0018230                SoundCard::SoundCard(char const*)
                0x00000000c00182ce                SoundCard::~SoundCard()
                0x00000000c00182ce                SoundCard::~SoundCard()
                0x00000000c00182f2                SoundCard::~SoundCard()
                0x00000000c001831c                SoundCard::configureRates(int, int, int)
                0x00000000c001834c                SoundCard::getSamples16(int, short*)
                0x00000000c00183a8                SoundCard::getSamples32(int, int*)
                0x00000000c001842e                SoundCard::addChannel(SoundPort*)
                0x00000000c001846c                SoundCard::removeChannel(int)
 .text          0x00000000c0018480      0x377 hal/sound/sndport.32
                0x00000000c0018480                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018480                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001850c                SoundPort::~SoundPort()
                0x00000000c001850c                SoundPort::~SoundPort()
                0x00000000c0018540                SoundPort::unpause()
                0x00000000c001854c                SoundPort::pause()
                0x00000000c0018558                SoundPort::getBufferUsed()
                0x00000000c0018560                SoundPort::getBufferSize()
                0x00000000c0018568                SoundPort::buffer16(short*, int)
                0x00000000c00185f4                SoundPort::buffer32(int*, int)
                0x00000000c001867c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0018740                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c00187f7        0x0 hw/bus/isa.32
 *fill*         0x00000000c00187f7        0x1 
 .text          0x00000000c00187f8      0xb43 hw/bus/pci.32
                0x00000000c00187f8                PCI::open(int, int, void*)
                0x00000000c0018816                PCI::close(int, int, void*)
                0x00000000c001881a                PCI::PCI()
                0x00000000c001881a                PCI::PCI()
                0x00000000c00188b0                PCI::readBAR8(unsigned int, int)
                0x00000000c00188cc                PCI::readBAR16(unsigned int, int)
                0x00000000c00188ea                PCI::readBAR32(unsigned int, int)
                0x00000000c0018906                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0018926                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0018948                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0018968                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00189d6                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018a7e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018aa2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0018aca                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018b14                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0018b3c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018b60                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018b84                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018bac                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018c10                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018cf8                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018f72                PCI::checkBus(unsigned char)
                0x00000000c0018f96                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0019108                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001927c                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c00192e8                PCI::detect()
 *fill*         0x00000000c001933b        0x1 
 .text          0x00000000c001933c      0xb4a hw/diskctrl/ide.32
                0x00000000c001933c                IDE::close(int, int, void*)
                0x00000000c0019340                IDE::IDE()
                0x00000000c0019340                IDE::IDE()
                0x00000000c0019374                IDE::prepareInterrupt(unsigned char)
                0x00000000c0019386                selectDrive(unsigned char, unsigned char)
                0x00000000c0019388                IDE::getBase(unsigned char)
                0x00000000c001939a                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001945a                IDE::read(unsigned char, unsigned char)
                0x00000000c0019508                IDE::waitInterrupt(unsigned char)
                0x00000000c001956a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0019586                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00195a2                IDE::enableIRQs(unsigned char, bool)
                0x00000000c00195e8                IDE::open(int, int, void*)
                0x00000000c00199f6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0019ac2                IDE::detect()
                0x00000000c0019d82                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019e32                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019e86      0x320 hw/diskctrl/satabus.32
                0x00000000c0019e86                SATABus::close(int, int, void*)
                0x00000000c0019e8a                SATABus::detect()
                0x00000000c0019e8c                SATABus::SATABus()
                0x00000000c0019e8c                SATABus::SATABus()
                0x00000000c0019f12                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019f44                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019f8c                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019fac                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019fd6                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001a0dc                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001a186                SATABus::open(int, int, void*)
 .text          0x00000000c001a1a6      0x5f4 hw/diskphys/ata.32
                0x00000000c001a1a6                ATA::close(int, int, void*)
                0x00000000c001a1ca                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001a1cc                ATA::ATA()
                0x00000000c001a1cc                ATA::ATA()
                0x00000000c001a1fa                ATA::flush(bool)
                0x00000000c001a244                ATA::readyForCommand()
                0x00000000c001a290                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a60c                ATA::read(unsigned long long, int, void*)
                0x00000000c001a658                ATA::write(unsigned long long, int, void*)
                0x00000000c001a6a4                ATA::detectCHS()
                0x00000000c001a6ce                ATA::open(int, int, void*)
 .text          0x00000000c001a79a      0x613 hw/diskphys/atapi.32
                0x00000000c001a79a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a7a0                ATAPI::close(int, int, void*)
                0x00000000c001a7c4                ATAPI::ATAPI()
                0x00000000c001a7c4                ATAPI::ATAPI()
                0x00000000c001a7f2                ATAPI::readyForCommand()
                0x00000000c001a844                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001ab04                ATAPI::diskRemoved()
                0x00000000c001ab3e                ATAPI::eject()
                0x00000000c001ab86                ATAPI::diskInserted()
                0x00000000c001ab92                ATAPI::detectMedia()
                0x00000000c001ac4e                ATAPI::open(int, int, void*)
                0x00000000c001ad2e                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001adad        0x1 
 .text          0x00000000c001adae      0x402 hw/diskphys/sata.32
                0x00000000c001adae                SATA::close(int, int, void*)
                0x00000000c001add2                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001add4                SATA::open(int, int, void*)
                0x00000000c001ae7e                SATA::SATA()
                0x00000000c001ae7e                SATA::SATA()
                0x00000000c001aeac                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001b0f8                SATA::read(unsigned long long, int, void*)
                0x00000000c001b144                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001b1b0      0x642 hw/diskphys/satapi.32
                0x00000000c001b1b0                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001b1b6                SATAPI::close(int, int, void*)
                0x00000000c001b1da                SATAPI::SATAPI()
                0x00000000c001b1da                SATAPI::SATAPI()
                0x00000000c001b208                SATAPI::diskRemoved()
                0x00000000c001b20a                SATAPI::diskInserted()
                0x00000000c001b226                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b4b4                SATAPI::eject()
                0x00000000c001b4f0                SATAPI::detectMedia()
                0x00000000c001b61a                SATAPI::open(int, int, void*)
                0x00000000c001b71a                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001b7f2      0x42d hw/intctrl/apic.32
                0x00000000c001b7f2                IOAPIC::close(int, int, void*)
                0x00000000c001b7f8                apicGetBase()
                0x00000000c001b83a                IOAPIC::IOAPIC()
                0x00000000c001b83a                IOAPIC::IOAPIC()
                0x00000000c001b862                apicOpen()
                0x00000000c001b9bc                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b9ee                IOAPIC::read(int)
                0x00000000c001ba16                IOAPIC::open(int, int, void*)
                0x00000000c001bafa                IOAPIC::write(int, int)
                0x00000000c001bb26                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001bc1f        0x1 
 .text          0x00000000c001bc20       0xf0 hw/timer/apictimer.32
                0x00000000c001bc20                APICTimer::close(int, int, void*)
                0x00000000c001bc28                apicTimerHandler(regs*, void*)
                0x00000000c001bc50                APICTimer::open(int, int, void*)
                0x00000000c001bcc0                APICTimer::write(int)
                0x00000000c001bce8                APICTimer::APICTimer()
                0x00000000c001bce8                APICTimer::APICTimer()
 .text          0x00000000c001bd10      0x1a3 hw/timer/pit.32
                0x00000000c001bd10                PIT::write(int)
                0x00000000c001bd90                pitHandler(regs*, void*)
                0x00000000c001bdb4                PIT::open(int, int, void*)
                0x00000000c001be04                PIT::close(int, int, void*)
                0x00000000c001be34                PIT::PIT()
                0x00000000c001be34                PIT::PIT()
 *fill*         0x00000000c001beb3        0xd 
 .text          0x00000000c001bec0       0x83 arch/i386/avx.32
                0x00000000c001bec0                avxDetect
                0x00000000c001beea                avxSave
                0x00000000c001befb                avxLoad
                0x00000000c001bf0c                avxInit
                0x00000000c001bf2e                avxClose
                0x00000000c001bf2f                wouldSheSayYes
 *fill*         0x00000000c001bf43        0xd 
 .text          0x00000000c001bf50      0x1d6 arch/i386/interrupt.32
                0x00000000c001bf50                isr0
                0x00000000c001bf60                isr1
                0x00000000c001bf6a                isr2
                0x00000000c001bf74                isr3
                0x00000000c001bf7e                isr4
                0x00000000c001bf88                isr5
                0x00000000c001bf92                isr6
                0x00000000c001bf9c                isr7
                0x00000000c001bfa6                isr8
                0x00000000c001bfae                isr9
                0x00000000c001bfb8                isr10
                0x00000000c001bfc0                isr11
                0x00000000c001bfc8                isr12
                0x00000000c001bfd0                isr13
                0x00000000c001bfd8                isr14
                0x00000000c001bfe0                isr15
                0x00000000c001bfea                isr16
                0x00000000c001bff4                isr17
                0x00000000c001bffe                isr18
                0x00000000c001c008                irq3
                0x00000000c001c012                irq4
                0x00000000c001c01c                irq5
                0x00000000c001c026                irq6
                0x00000000c001c030                irq7
                0x00000000c001c03a                irq8
                0x00000000c001c044                irq9
                0x00000000c001c04e                irq10
                0x00000000c001c058                irq11
                0x00000000c001c062                irq12
                0x00000000c001c06c                irq13
                0x00000000c001c076                irq14
                0x00000000c001c080                irq15
                0x00000000c001c08a                irq1
                0x00000000c001c091                irq2
                0x00000000c001c098                isr96
                0x00000000c001c09f                irq0
                0x00000000c001c0a4                int_common_stub
                0x00000000c001c0a4                syscall_common_stub
                0x00000000c001c0d6                irq16
                0x00000000c001c0e0                irq17
                0x00000000c001c0ea                irq18
                0x00000000c001c0f4                irq19
                0x00000000c001c0fe                irq20
                0x00000000c001c108                irq21
                0x00000000c001c112                irq22
                0x00000000c001c11c                irq23
 *fill*         0x00000000c001c126        0xa 
 .text          0x00000000c001c130       0x10 arch/i386/rdrand.32
                0x00000000c001c130                i386GetRDRAND
 .text          0x00000000c001c140       0x39 arch/i386/sse.32
                0x00000000c001c140                absolutelyNoChanceInHell
                0x00000000c001c140                sseDetect
                0x00000000c001c158                sseSave
                0x00000000c001c160                sseLoad
                0x00000000c001c168                sseInit
                0x00000000c001c178                sseClose
 *fill*         0x00000000c001c179        0x7 
 .text          0x00000000c001c180       0x49 arch/i386/x87.32
                0x00000000c001c186                x87Detect
                0x00000000c001c1a1                x87Save
                0x00000000c001c1a8                x87Load
                0x00000000c001c1af                x87Init
                0x00000000c001c1c8                x87Close
 *fill*         0x00000000c001c1c9        0x3 
 .text          0x00000000c001c1cc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001c1f1        0x0 crtn.32
 *fill*         0x00000000c001c1f1        0x3 
 .text          0x00000000c001c1f4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001c1f4                __divdi3
 *fill*         0x00000000c001c33f        0x1 
 .text          0x00000000c001c340      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c340                __moddi3
 *fill*         0x00000000c001c4be        0x2 
 .text          0x00000000c001c4c0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c4c0                __udivdi3
 *fill*         0x00000000c001c5bf        0x1 
 .text          0x00000000c001c5c0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c5c0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c6e0        0x0
 .iplt          0x00000000c001c6e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c6da        0xf
 .init          0x00000000c001c6da        0x3 crti.32
                0x00000000c001c6da                _init
 .init          0x00000000c001c6dd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c6e2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c6e7        0x2 crtn.32

.fini           0x00000000c001c6e9        0xa
 .fini          0x00000000c001c6e9        0x3 crti.32
                0x00000000c001c6e9                _fini
 .fini          0x00000000c001c6ec        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c6f1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c6f4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c6f4       0x23 core/computer.32
                0x00000000c001c6f4                Computer::~Computer()
                0x00000000c001c6f4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c718       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c718       0x2a core/computer.32
                0x00000000c001c718                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c742       0x21
 .text._Z10idleCommonv
                0x00000000c001c742       0x21 core/idle.32
                0x00000000c001c742                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c764        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c764        0x2 core/unixfile.32
                0x00000000c001c764                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c764                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c766       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c766       0x42 core/unixfile.32
                0x00000000c001c766                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c766                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c7a8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c7a8       0xd3 core/unixfile.32
                0x00000000c001c7a8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c87c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c87c        0x7 core/unixfile.32
                0x00000000c001c87c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c884       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c884       0xa1 core/unixfile.32
                0x00000000c001c884                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c926        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c926        0x8 core/unixfile.32
                0x00000000c001c926                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c92e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c92e       0x1a hal/device.32
                0x00000000c001c92e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c92e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c948       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c948       0x2a hal/device.32
                0x00000000c001c948                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c972       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c972       0xdc hal/device.32
                0x00000000c001c972                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ca4e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ca4e       0x42 hal/device.32
                0x00000000c001ca4e                LinkedList<Device>::LinkedList()
                0x00000000c001ca4e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ca90       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ca90       0x1c hal/timer.32
                0x00000000c001ca90                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001caac        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001caac        0x7 hal/timer.32
                0x00000000c001caac                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001cab4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001cab4       0xb8 hal/timer.32
                0x00000000c001cab4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001cb6c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001cb6c       0xda hal/timer.32
                0x00000000c001cb6c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001cc48       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001cc48       0x23 hw/acpi.32
                0x00000000c001cc48                ACPI::~ACPI()
                0x00000000c001cc48                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001cc6c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001cc6c       0x2a hw/acpi.32
                0x00000000c001cc6c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001cc98        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001cc98        0x2 hw/acpi.32
                0x00000000c001cc98                LinkedList<Device>::~LinkedList()
                0x00000000c001cc98                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001cc9c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001cc9c       0x1c hw/acpi.32
                0x00000000c001cc9c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ccb8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ccb8        0x7 hw/acpi.32
                0x00000000c001ccb8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ccc0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ccc0       0xb8 hw/acpi.32
                0x00000000c001ccc0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001cd78       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001cd78       0x23 hw/cpu.32
                0x00000000c001cd78                CPU::~CPU()
                0x00000000c001cd78                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001cd9c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001cd9c       0x2a hw/cpu.32
                0x00000000c001cd9c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cdc8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cdc8        0x2 thr/prcssthr.32
                0x00000000c001cdc8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001cdc8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cdcc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cdcc       0x49 thr/prcssthr.32
                0x00000000c001cdcc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001cdcc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ce18       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ce18       0x42 thr/prcssthr.32
                0x00000000c001ce18                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ce18                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ce5c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ce5c        0x8 thr/prcssthr.32
                0x00000000c001ce5c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c001ce64        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c001ce64        0xd vm86/x87em.32
                0x00000000c001ce64                Vm::_FPUState::_FPUState()
                0x00000000c001ce64                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c001ce72       0x23
 .text._ZN3PCID2Ev
                0x00000000c001ce72       0x23 hw/bus/pci.32
                0x00000000c001ce72                PCI::~PCI()
                0x00000000c001ce72                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ce96       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001ce96       0x2a hw/bus/pci.32
                0x00000000c001ce96                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cec0       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cec0       0x23 hw/diskctrl/ide.32
                0x00000000c001cec0                IDE::~IDE()
                0x00000000c001cec0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cee4       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cee4       0x2a hw/diskctrl/ide.32
                0x00000000c001cee4                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cf0e       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cf0e       0x23 hw/diskctrl/satabus.32
                0x00000000c001cf0e                SATABus::~SATABus()
                0x00000000c001cf0e                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cf32       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cf32       0x2a hw/diskctrl/satabus.32
                0x00000000c001cf32                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cf5c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cf5c       0x23 hw/diskphys/ata.32
                0x00000000c001cf5c                ATA::~ATA()
                0x00000000c001cf5c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cf80       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cf80       0x2a hw/diskphys/ata.32
                0x00000000c001cf80                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cfaa       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cfaa       0x23 hw/diskphys/atapi.32
                0x00000000c001cfaa                ATAPI::~ATAPI()
                0x00000000c001cfaa                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cfce       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cfce       0x2a hw/diskphys/atapi.32
                0x00000000c001cfce                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cff8       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cff8       0x23 hw/diskphys/sata.32
                0x00000000c001cff8                SATA::~SATA()
                0x00000000c001cff8                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001d01c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001d01c       0x2a hw/diskphys/sata.32
                0x00000000c001d01c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001d046       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001d046       0x23 hw/diskphys/satapi.32
                0x00000000c001d046                SATAPI::~SATAPI()
                0x00000000c001d046                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001d06a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001d06a       0x2a hw/diskphys/satapi.32
                0x00000000c001d06a                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001d094       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001d094       0x23 hw/intctrl/apic.32
                0x00000000c001d094                IOAPIC::~IOAPIC()
                0x00000000c001d094                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001d0b8       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001d0b8       0x2a hw/intctrl/apic.32
                0x00000000c001d0b8                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001d0e4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001d0e4       0x23 hw/timer/apictimer.32
                0x00000000c001d0e4                APICTimer::~APICTimer()
                0x00000000c001d0e4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001d108       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001d108       0x2a hw/timer/apictimer.32
                0x00000000c001d108                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001d134       0x23
 .text._ZN3PITD2Ev
                0x00000000c001d134       0x23 hw/timer/pit.32
                0x00000000c001d134                PIT::~PIT()
                0x00000000c001d134                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001d158       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001d158       0x2a hw/timer/pit.32
                0x00000000c001d158                PIT::~PIT()

.rodata         0x00000000c001d182     0x29a6
                0x00000000c001d182                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001d182        0x2 
 .ctors         0x00000000c001d184        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001d188        0x4 core/unixfile.32
 .ctors         0x00000000c001d18c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001d190        0x4 vm86/x87em.32
 .ctors         0x00000000c001d194        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001d198                end_ctors = .
                0x00000000c001d198                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001d198        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001d19c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001d19c                __DTOR_END__
                0x00000000c001d1a0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001d1a0        0x0 
 .rodata        0x00000000c001d1a0      0x101 acpica/utclib.32
                0x00000000c001d1a0                AcpiGbl_Ctypes
 *fill*         0x00000000c001d2a1        0x3 
 .rodata        0x00000000c001d2a4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001d2bc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d306       0x1a 
 .rodata        0x00000000c001d320       0xed fs/fat/ff.32
 *fill*         0x00000000c001d40d       0x13 
 .rodata        0x00000000c001d420      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d820       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001d869      0x115 core/computer.32
 *fill*         0x00000000c001d97e        0x2 
 .rodata.str1.4
                0x00000000c001d980       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d9e8       0x2c core/computer.32
                0x00000000c001d9e8                vtable for Computer
 .rodata.str1.4
                0x00000000c001da14       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001da44        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001da50       0x17 core/main.32
 *fill*         0x00000000c001da67        0x1 
 .rodata.str1.4
                0x00000000c001da68       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001db0d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001db65       0x39 core/pipe.32
 *fill*         0x00000000c001db9e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001dba0       0x1c core/pipe.32
                0x00000000c001dba0                vtable for Pipe
 .rodata.str1.1
                0x00000000c001dbbc       0x69 core/terminal.32
 *fill*         0x00000000c001dc25        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001dc28       0x1c core/terminal.32
                0x00000000c001dc28                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001dc44       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001dc66       0x15 core/unixfile.32
 *fill*         0x00000000c001dc7b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001dc7c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001dcc7        0x8 core/unixfile.32
 *fill*         0x00000000c001dccf        0x1 
 .rodata.str1.4
                0x00000000c001dcd0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001dcf0       0x1c core/unixfile.32
                0x00000000c001dcf0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001dd0c       0x1c core/unixfile.32
                0x00000000c001dd0c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001dd28      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001de8f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001df96       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dfc9       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dfc9        0x3 
 .rodata        0x00000000c001dfcc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001e11c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001e11c       0x68 fs/vfs.32
                0x00000000c001e11c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001e184       0x1c fs/vfs.32
                0x00000000c001e184                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001e1a0       0x1c fs/vfs.32
                0x00000000c001e1a0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001e1bc       0x2c hal/bus.32
                0x00000000c001e1bc                vtable for Bus
 .rodata.str1.1
                0x00000000c001e1e8       0x1e hal/clock.32
 *fill*         0x00000000c001e206        0x2 
 .rodata._ZTV5Clock
                0x00000000c001e208       0x3c hal/clock.32
                0x00000000c001e208                vtable for Clock
 *fill*         0x00000000c001e244       0x1c 
 .rodata        0x00000000c001e260       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001e290       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001e2e8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001e2e8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001e2e8       0x2c hal/device.32
                0x00000000c001e2e8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001e314       0x2c hal/device.32
                0x00000000c001e314                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e340       0x2c hal/diskctrl.32
                0x00000000c001e340                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e36c       0x38 hal/diskphys.32
                0x00000000c001e36c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e3a4       0x3e hal/intctrl.32
 *fill*         0x00000000c001e3e2        0x2 
 .rodata.str1.4
                0x00000000c001e3e4       0x5d hal/intctrl.32
 .rodata        0x00000000c001e441       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e494       0x34 hal/keybrd.32
                0x00000000c001e494                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e4c8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e50c       0x2c hal/logidisk.32
                0x00000000c001e50c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e538       0x2c hal/mouse.32
                0x00000000c001e538                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e564        0xb hal/partition.32
 *fill*         0x00000000c001e56f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e570       0x44 hal/serial.32
                0x00000000c001e570                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e5b4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e5b4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e5b4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e5b4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e5b4       0x30 hal/timer.32
                0x00000000c001e5b4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e5e4       0x10 hal/vcache.32
                0x00000000c001e5e4                vtable for VCache
 .rodata.str1.1
                0x00000000c001e5f4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e65c       0x48 hal/video.32
                0x00000000c001e65c                vtable for Video
 .rodata.str1.4
                0x00000000c001e6a4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e73f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e87b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e87b        0x8 hw/acpi.32
 *fill*         0x00000000c001e87b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e87c       0x2c hw/acpi.32
                0x00000000c001e87c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e8a8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001ea15        0x3 
 .rodata._ZTV3CPU
                0x00000000c001ea18       0x2c hw/cpu.32
                0x00000000c001ea18                vtable for CPU
 .rodata.str1.1
                0x00000000c001ea44       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001ea80       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 .rodata.str1.4
                0x00000000c001eb20      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c001ec5e       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001eca3        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001ecad       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001ed01       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001ed2d       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001ed75      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001ef41       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001ef98      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001f0a4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001f0a4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001f0a4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001f0a4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001f0a4       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001f144       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001f174       0x58 vm86/x87em.32
 .rodata        0x00000000c001f1cc       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c001f208      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001f316        0x2 
 .rodata.str1.4
                0x00000000c001f318       0x4b arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001f363       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001f378       0x3c arch/i386/rtc.32
                0x00000000c001f378                vtable for RTC
 .rodata.str1.1
                0x00000000c001f3b4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f3f5        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f3f8       0x68 fs/fat/vfslink.32
                0x00000000c001f3f8                vtable for FAT
 .rodata.str1.1
                0x00000000c001f460       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c001f47b        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c001f47c       0x68 fs/iso9660/vfslink.32
                0x00000000c001f47c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f4e4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f528       0x34 hal/sound/sndcard.32
                0x00000000c001f528                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f55c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f59b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f5d3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f674       0x2c hw/bus/pci.32
                0x00000000c001f674                vtable for PCI
 .rodata.str1.1
                0x00000000c001f6a0       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f727        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f728       0x2c hw/diskctrl/ide.32
                0x00000000c001f728                vtable for IDE
 .rodata.str1.4
                0x00000000c001f754       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f778       0x2c hw/diskctrl/satabus.32
                0x00000000c001f778                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f7a4       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f7b6        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f7b8       0x38 hw/diskphys/ata.32
                0x00000000c001f7b8                vtable for ATA
 .rodata.str1.1
                0x00000000c001f7f0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f7fd        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f800       0x38 hw/diskphys/atapi.32
                0x00000000c001f800                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f838       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f8b4       0x38 hw/diskphys/sata.32
                0x00000000c001f8b4                vtable for SATA
 .rodata.str1.1
                0x00000000c001f8ec      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c001fa1e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c001fa20       0x38 hw/diskphys/satapi.32
                0x00000000c001fa20                vtable for SATAPI
 .rodata        0x00000000c001fa58        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001fa60       0x2c hw/intctrl/apic.32
                0x00000000c001fa60                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001fa8c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001faa7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001faa8       0x30 hw/timer/apictimer.32
                0x00000000c001faa8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001fad8       0x1d hw/timer/pit.32
 *fill*         0x00000000c001faf5        0x3 
 .rodata._ZTV3PIT
                0x00000000c001faf8       0x30 hw/timer/pit.32
                0x00000000c001faf8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001fb28      0x26d
 *(.data)
 .data          0x00000000c001fb28        0x0 crti.32
 .data          0x00000000c001fb28        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001fb28                __dso_handle
 .data          0x00000000c001fb2c        0x0 acpica/utclib.32
 .data          0x00000000c001fb2c        0x0 core/malloc.32
 .data          0x00000000c001fb2c        0x0 libk/string.32
 .data          0x00000000c001fb2c        0x0 fs/fat/diskio.32
 .data          0x00000000c001fb2c        0x0 fs/fat/ff.32
 .data          0x00000000c001fb2c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001fb2c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001fb2c        0x0 compat/inlines.32
 .data          0x00000000c001fb2c        0x0 compat/resolve.32
 .data          0x00000000c001fb2c        0x0 core/computer.32
 .data          0x00000000c001fb2c        0x0 core/gdt.32
 .data          0x00000000c001fb2c        0x0 core/idle.32
 .data          0x00000000c001fb2c        0x0 core/idt.32
 .data          0x00000000c001fb2c        0x4 core/kheap.32
 *fill*         0x00000000c001fb30       0x10 
 .data          0x00000000c001fb40      0x142 core/main.32
                0x00000000c001fb40                titleScreen
 *fill*         0x00000000c001fc82        0x2 
 .data          0x00000000c001fc84        0x4 core/physmgr.32
                0x00000000c001fc84                Phys::bitmap
 .data          0x00000000c001fc88        0x0 core/pipe.32
 *fill*         0x00000000c001fc88       0x18 
 .data          0x00000000c001fca0       0x60 core/terminal.32
                0x00000000c001fca0                VgaText::hiddenOut
                0x00000000c001fcc0                ansiToVGAMappings
 .data          0x00000000c001fd00        0x0 core/tss.32
 .data          0x00000000c001fd00        0x4 core/unixfile.32
                0x00000000c001fd00                UnixFile::nextFd
 .data          0x00000000c001fd04       0x15 core/virtmgr.32
                0x00000000c001fd04                Virt::pageAllocPtr
                0x00000000c001fd08                Virt::bitmap
                0x00000000c001fd0c                Virt::swapfileSectorsPerPage
                0x00000000c001fd10                Virt::swapfileLength
                0x00000000c001fd14                Virt::swapfileSector
                0x00000000c001fd18                Virt::swapfileDrive
 *fill*         0x00000000c001fd19        0x3 
 .data          0x00000000c001fd1c        0x4 coreobjs/c++.32
                0x00000000c001fd1c                __stack_chk_guard
 .data          0x00000000c001fd20        0x0 dbg/kconsole.32
 .data          0x00000000c001fd20        0x0 fs/vfs.32
 .data          0x00000000c001fd20        0x0 hal/bus.32
 .data          0x00000000c001fd20        0x0 hal/buzzer.32
 .data          0x00000000c001fd20        0x0 hal/clock.32
 .data          0x00000000c001fd20        0x0 hal/device.32
 .data          0x00000000c001fd20        0x0 hal/diskctrl.32
 .data          0x00000000c001fd20        0x0 hal/diskphys.32
 .data          0x00000000c001fd20        0x0 hal/fpu.32
 .data          0x00000000c001fd20        0x0 hal/intctrl.32
 .data          0x00000000c001fd20        0x0 hal/keybrd.32
 .data          0x00000000c001fd20        0x0 hal/logidisk.32
 .data          0x00000000c001fd20        0x0 hal/mouse.32
 .data          0x00000000c001fd20        0x0 hal/partition.32
 .data          0x00000000c001fd20        0x0 hal/serial.32
 .data          0x00000000c001fd20        0x0 hal/timer.32
 .data          0x00000000c001fd20        0x0 hal/vcache.32
 .data          0x00000000c001fd20        0x0 hal/video.32
 .data          0x00000000c001fd20       0x10 hw/acpi.32
                0x00000000c001fd20                legacyIRQRemaps
 .data          0x00000000c001fd30        0x4 hw/cpu.32
                0x00000000c001fd30                lastCode
 .data          0x00000000c001fd34        0x0 hw/smp.32
 *fill*         0x00000000c001fd34        0xc 
 .data          0x00000000c001fd40       0x4d krnl/env.32
                0x00000000c001fd40                defaultSysEnv
 .data          0x00000000c001fd8d        0x0 krnl/panic.32
 .data          0x00000000c001fd8d        0x0 krnl/powctrl.32
 .data          0x00000000c001fd8d        0x0 reg/registry.32
 .data          0x00000000c001fd8d        0x0 sys/sc_eject.32
 .data          0x00000000c001fd8d        0x0 sys/sc_exit.32
 .data          0x00000000c001fd8d        0x0 sys/sc_getcwd.32
 .data          0x00000000c001fd8d        0x0 sys/sc_getpid.32
 .data          0x00000000c001fd8d        0x0 sys/sc_getramdata.32
 .data          0x00000000c001fd8d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001fd8d        0x0 sys/sc_loaddll.32
 .data          0x00000000c001fd8d        0x0 sys/sc_read.32
 .data          0x00000000c001fd8d        0x0 sys/sc_sbrk.32
 .data          0x00000000c001fd8d        0x0 sys/sc_setcwd.32
 .data          0x00000000c001fd8d        0x0 sys/sc_settime.32
 .data          0x00000000c001fd8d        0x0 sys/sc_timezone.32
 .data          0x00000000c001fd8d        0x0 sys/sc_write.32
 .data          0x00000000c001fd8d        0x0 sys/sc_wsbe.32
 .data          0x00000000c001fd8d        0x0 sys/sc_yield.32
 .data          0x00000000c001fd8d        0x0 sys/syscalls.32
 .data          0x00000000c001fd8d        0x0 thr/elf.32
 *fill*         0x00000000c001fd8d        0x3 
 .data          0x00000000c001fd90        0x4 thr/prcssthr.32
                0x00000000c001fd90                Thr::nextPID
 .data          0x00000000c001fd94        0x0 vm86/vm8086.32
 .data          0x00000000c001fd94        0x0 vm86/x87em.32
 .data          0x00000000c001fd94        0x0 arch/i386/hal.32
 .data          0x00000000c001fd94        0x0 arch/i386/pic.32
 .data          0x00000000c001fd94        0x0 arch/i386/rtc.32
 .data          0x00000000c001fd94        0x0 arch/i386/vga.32
 .data          0x00000000c001fd94        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fd94        0x1 fs/iso9660/vfslink.32
                0x00000000c001fd94                recentDriveletter
 .data          0x00000000c001fd95        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fd95        0x0 hal/sound/sndport.32
 .data          0x00000000c001fd95        0x0 hw/bus/isa.32
 .data          0x00000000c001fd95        0x0 hw/bus/pci.32
 .data          0x00000000c001fd95        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fd95        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fd95        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fd95        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fd95        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fd95        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fd95        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fd95        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fd95        0x0 hw/timer/pit.32
 .data          0x00000000c001fd95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fd95        0x0 crtn.32
 .data          0x00000000c001fd95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fd95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fd95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fd95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fd98        0x0
 .got           0x00000000c001fd98        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fd98        0x0
 .got.plt       0x00000000c001fd98        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fd98        0x0
 .igot.plt      0x00000000c001fd98        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fd98        0x0
 .tm_clone_table
                0x00000000c001fd98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fd98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fd95      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fd95        0x3 
 .eh_frame      0x00000000c001fd98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fd98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fd98       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fdf0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fe30       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fe9c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001ff20        0x0
 .rel.got       0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001ff20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001ff20     0x43c8
                0x00000000c001ff20                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c001ff20        0x0 crti.32
 .bss           0x00000000c001ff20       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001ff40        0x4 acpica/utclib.32
 *fill*         0x00000000c001ff44       0x1c 
 .bss           0x00000000c001ff60      0x378 core/malloc.32
 .bss           0x00000000c00202d8        0x0 libk/string.32
 .bss           0x00000000c00202d8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c00202d8        0x8 
 .bss           0x00000000c00202e0       0x88 fs/fat/ff.32
 .bss           0x00000000c0020368        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0020368        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0020368        0x0 compat/inlines.32
 .bss           0x00000000c0020368        0x0 compat/resolve.32
 .bss           0x00000000c0020368        0x6 core/computer.32
                0x00000000c0020368                Krnl::computer
                0x00000000c002036c                Krnl::preemptionOn
                0x00000000c002036d                Krnl::schedulingOn
 *fill*         0x00000000c002036e        0x2 
 .bss           0x00000000c0020370        0x6 core/gdt.32
                0x00000000c0020370                gdtDescr
 .bss           0x00000000c0020376        0x0 core/idle.32
 *fill*         0x00000000c0020376        0x2 
 .bss           0x00000000c0020378        0x6 core/idt.32
                0x00000000c0020378                idtDescr
 .bss           0x00000000c002037e        0x0 core/kheap.32
 *fill*         0x00000000c002037e        0x2 
 .bss           0x00000000c0020380        0x4 core/main.32
                0x00000000c0020380                sysBootSettings
 .bss           0x00000000c0020384       0x29 core/physmgr.32
                0x00000000c0020384                Phys::forbidEvictions
                0x00000000c0020388                Phys::currentPagePointer
                0x00000000c002038c                Phys::highestMem
                0x00000000c0020390                Phys::oldPercent
                0x00000000c0020394                Phys::usedPages
                0x00000000c0020398                Phys::usablePages
                0x00000000c002039c                Phys::dmaUsage
 .bss           0x00000000c00203ad        0x0 core/pipe.32
 *fill*         0x00000000c00203ad        0x3 
 .bss           0x00000000c00203b0        0x9 core/terminal.32
                0x00000000c00203b0                terminalCycle
                0x00000000c00203b4                activeTerminal
                0x00000000c00203b8                VgaText::graphicMode
 *fill*         0x00000000c00203b9        0x1 
 .bss           0x00000000c00203ba        0x2 core/tss.32
                0x00000000c00203ba                doubleFaultSelector
 *fill*         0x00000000c00203bc        0x4 
 .bss           0x00000000c00203c0       0x84 core/unixfile.32
                0x00000000c00203c0                sfileLpt
                0x00000000c0020400                sfileCom
                0x00000000c0020424                sfileNul
                0x00000000c0020428                sfilePnt
                0x00000000c002042c                sfileAux
                0x00000000c0020430                sfileCon
                0x00000000c0020434                initialFilesAdded
                0x00000000c0020438                unixFileLinkedList
 .bss           0x00000000c0020444       0x14 core/virtmgr.32
                0x00000000c0020444                twswaps
                0x00000000c0020448                swapBalance
                0x00000000c002044c                panicVAS
                0x00000000c0020450                Virt::swapfileBitmap
                0x00000000c0020454                firstVAS
 .bss           0x00000000c0020458        0x0 coreobjs/c++.32
 .bss           0x00000000c0020458        0x0 dbg/kconsole.32
 .bss           0x00000000c0020458        0x4 fs/vfs.32
                0x00000000c0020458                installedFilesystems
 .bss           0x00000000c002045c        0x0 hal/bus.32
 .bss           0x00000000c002045c        0x0 hal/buzzer.32
 .bss           0x00000000c002045c        0x8 hal/clock.32
                0x00000000c002045c                User::dstOn
                0x00000000c002045d                User::timezoneHalfHourOffset
                0x00000000c0020460                User::timezoneHourOffset
 .bss           0x00000000c0020464        0x0 hal/device.32
 .bss           0x00000000c0020464        0x0 hal/diskctrl.32
 .bss           0x00000000c0020464        0x0 hal/diskphys.32
 .bss           0x00000000c0020464        0x0 hal/fpu.32
 *fill*         0x00000000c0020464       0x1c 
 .bss           0x00000000c0020480     0x2000 hal/intctrl.32
                0x00000000c0020480                INT_contexts
                0x00000000c0021480                INT_handlers
 .bss           0x00000000c0022480      0x429 hal/keybrd.32
                0x00000000c0022480                keyboardWaitingTaskList
                0x00000000c0022484                keyboardSetupYet
                0x00000000c0022488                guiKeyboardHandler
                0x00000000c00224a0                keystates
 *fill*         0x00000000c00228a9       0x17 
 .bss           0x00000000c00228c0       0x88 hal/logidisk.32
                0x00000000c00228c0                diskAssignments
                0x00000000c00228e0                disks
 .bss           0x00000000c0022948        0x4 hal/mouse.32
                0x00000000c0022948                guiMouseHandler
 .bss           0x00000000c002294c        0x0 hal/partition.32
 .bss           0x00000000c002294c        0x0 hal/serial.32
 .bss           0x00000000c002294c        0x4 hal/timer.32
                0x00000000c002294c                milliTenthsSinceBoot
 .bss           0x00000000c0022950        0x0 hal/vcache.32
 .bss           0x00000000c0022950        0x4 hal/video.32
                0x00000000c0022950                screen
 *fill*         0x00000000c0022954        0xc 
 .bss           0x00000000c0022960      0x480 hw/acpi.32
                0x00000000c0022960                systemSleepFunction
                0x00000000c0022964                systemResetFunction
                0x00000000c0022968                systemShutdownFunction
                0x00000000c002296c                nextACPITable
                0x00000000c0022980                acpiTables
                0x00000000c0022b80                usingXSDT
                0x00000000c0022b84                MADTpointer
                0x00000000c0022b88                RSDTpointer
                0x00000000c0022b8c                RSDPpointer
                0x00000000c0022b90                nextAPICNMI
                0x00000000c0022ba0                apicNMIInfo
                0x00000000c0022c20                legacyIRQFlags
                0x00000000c0022c40                ioapicDiscoveryNumber
                0x00000000c0022c60                ioapicFoundInMADT
                0x00000000c0022c80                ioapicAddresses
                0x00000000c0022d00                ioapicGSIBase
                0x00000000c0022d80                processorDiscoveryNumber
                0x00000000c0022da0                matchingAPICID
                0x00000000c0022dc0                processorID
 .bss           0x00000000c0022de0       0x10 hw/cpu.32
                0x00000000c0022de0                lastD
                0x00000000c0022de4                lastC
                0x00000000c0022de8                lastB
                0x00000000c0022dec                lastA
 .bss           0x00000000c0022df0        0x1 hw/smp.32
                0x00000000c0022df0                Krnl::bspID
 *fill*         0x00000000c0022df1        0x3 
 .bss           0x00000000c0022df4        0x8 krnl/env.32
                0x00000000c0022df4                Krnl::userEnv
                0x00000000c0022df8                Krnl::systemEnv
 .bss           0x00000000c0022dfc        0x9 krnl/panic.32
                0x00000000c0022dfc                Krnl::guiProgramFaultHandler
                0x00000000c0022e00                Krnl::guiPanicHandler
                0x00000000c0022e04                Krnl::kernelInPanic
 *fill*         0x00000000c0022e05       0x1b 
 .bss           0x00000000c0022e20       0x48 krnl/powctrl.32
                0x00000000c0022e20                Krnl::powCtrlOnBattery
                0x00000000c0022e40                Krnl::currentPowerSettings
                0x00000000c0022e64                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0022e68        0x0 reg/registry.32
 .bss           0x00000000c0022e68        0x0 sys/sc_eject.32
 .bss           0x00000000c0022e68        0x0 sys/sc_exit.32
 .bss           0x00000000c0022e68        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0022e68        0x0 sys/sc_getpid.32
 .bss           0x00000000c0022e68        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0022e68        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0022e68        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0022e68        0x0 sys/sc_read.32
 .bss           0x00000000c0022e68        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0022e68        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0022e68        0x0 sys/sc_settime.32
 .bss           0x00000000c0022e68        0x0 sys/sc_timezone.32
 .bss           0x00000000c0022e68        0x0 sys/sc_write.32
 .bss           0x00000000c0022e68        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0022e68        0x0 sys/sc_yield.32
 *fill*         0x00000000c0022e68       0x18 
 .bss           0x00000000c0022e80      0x200 sys/syscalls.32
                0x00000000c0022e80                systemCallHandlers
 .bss           0x00000000c0023080      0x7a4 thr/elf.32
                0x00000000c0023080                Thr::driverLookupNext
                0x00000000c00230a0                Thr::driverLookupLen
                0x00000000c00232a0                Thr::driverLookupAddr
                0x00000000c00234a0                Thr::driverNameLookup
                0x00000000c00236a0                Thr::kernelSymbols
                0x00000000c0023720                Thr::kernelStringTable
                0x00000000c00237a0                Thr::kernelSymbolTable
                0x00000000c0023820                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023824        0x4 
 .bss           0x00000000c0023828       0x68 thr/prcssthr.32
                0x00000000c0023828                cleanerThread
                0x00000000c002382c                weNeedTheCleanerToNotBlock
                0x00000000c0023830                retValLockStuff
                0x00000000c0023834                retValSchedLock
                0x00000000c0023838                lockStuffLock
                0x00000000c002383c                schedulerLock
                0x00000000c0023840                taskSwitchesPostponedFlag
                0x00000000c0023844                postponeTaskSwitchesCounter
                0x00000000c0023848                irqDisableCounter
                0x00000000c002384c                terminatedTaskList
                0x00000000c0023858                sleepingTaskList
                0x00000000c0023864                taskList
                0x00000000c0023870                kernelProcess
 *fill*         0x00000000c0023890       0x10 
 .bss           0x00000000c00238a0       0x40 vm86/vm8086.32
                0x00000000c00238a0                Vm::vmRetV
                0x00000000c00238a4                Vm::vmDone
                0x00000000c00238a5                Vm::vmReady
                0x00000000c00238a8                Vm::vm86Thread
                0x00000000c00238ac                Vm::vmToHostCommsPtr
                0x00000000c00238c0                Vm::vmToHostComms
 .bss           0x00000000c00238e0       0x48 vm86/x87em.32
                0x00000000c00238e0                Vm::fpuState
 .bss           0x00000000c0023928       0x18 arch/i386/hal.32
                0x00000000c0023928                Hal::apic
                0x00000000c002392c                fpuOwner
                0x00000000c0023930                coproLoadFunc
                0x00000000c0023934                coproSaveFunc
                0x00000000c0023938                _i386_HAL_tscFunction
                0x00000000c002393c                gpFaultIntercept
 .bss           0x00000000c0023940        0x0 arch/i386/pic.32
 .bss           0x00000000c0023940        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023942        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023942       0x1e 
 .bss           0x00000000c0023960       0xf0 fs/fat/vfslink.32
                0x00000000c0023960                FAT::fats
                0x00000000c0023980                FAT::vfsToFatRemaps
                0x00000000c0023a00                fatToVFSRemaps
 *fill*         0x00000000c0023a50       0x10 
 .bss           0x00000000c0023a60      0x820 fs/iso9660/vfslink.32
                0x00000000c0023a60                recentSector
                0x00000000c0023a80                recentBuffer
 .bss           0x00000000c0024280        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0024280        0x0 hal/sound/sndport.32
 .bss           0x00000000c0024280        0x0 hw/bus/isa.32
 .bss           0x00000000c0024280        0xd hw/bus/pci.32
                0x00000000c0024280                thePCI
 .bss           0x00000000c002428d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002428d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002428d        0x3 
 .bss           0x00000000c0024290        0x8 hw/diskphys/ata.32
                0x00000000c0024290                ataSectorsWritten
                0x00000000c0024294                ataSectorsRead
 .bss           0x00000000c0024298        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024298        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0024298        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0024298        0x8 
 .bss           0x00000000c00242a0       0x41 hw/intctrl/apic.32
                0x00000000c00242a0                noOfIOAPICs
                0x00000000c00242c0                ioapics
                0x00000000c00242e0                IOAPICsSetupYet
 .bss           0x00000000c00242e1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00242e1        0x3 
 .bss           0x00000000c00242e4        0x4 hw/timer/pit.32
                0x00000000c00242e4                pitFreq
 .bss           0x00000000c00242e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00242e8        0x0 crtn.32
 .bss           0x00000000c00242e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00242e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00242e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00242e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00242e8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00286b0                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
