Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21ebe
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x28a dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f06                Dbg::logs(char*)
                0x00000000c0006f25                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f43                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f64                Dbg::kprintf(char const*, ...)
 .text          0x00000000c00070d0      0x2d4 dbg/usban.32
                0x00000000c00070d0                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000713c                __ubsan_handle_type_mismatch_v1
                0x00000000c0007218                __ubsan_handle_pointer_overflow
                0x00000000c0007244                __ubsan_handle_out_of_bounds
                0x00000000c0007270                __ubsan_handle_add_overflow
                0x00000000c000729c                __ubsan_handle_load_invalid_value
                0x00000000c00072c8                __ubsan_handle_divrem_overflow
                0x00000000c00072f4                __ubsan_handle_mul_overflow
                0x00000000c0007320                __ubsan_handle_sub_overflow
                0x00000000c000734c                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007378                __ubsan_handle_negate_overflow
 .text          0x00000000c00073a4      0x814 fs/symlink.32
                0x00000000c00074f3                KiDeinitialiseSymlinks(void*)
                0x00000000c0007586                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c0007609                KeInitialiseSymlinks()
                0x00000000c000776b                KiIsSymlinkRegistered(char const*)
                0x00000000c00078d5                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a7c                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bb8      0xd88 fs/vfs.32
                0x00000000c0007bb8                File::read(unsigned long long, void*, int*)
                0x00000000c0007c10                File::write(unsigned long long, void*, int*)
                0x00000000c0007c68                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007cc0                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cee                File::isAtty()
                0x00000000c0007cf2                Directory::isAtty()
                0x00000000c0007cf6                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cfc                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d02                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d08                File::~File()
                0x00000000c0007d08                File::~File()
                0x00000000c0007d2c                File::~File()
                0x00000000c0007d56                Directory::~Directory()
                0x00000000c0007d56                Directory::~Directory()
                0x00000000c0007d7a                Directory::~Directory()
                0x00000000c0007da4                Filesystem::Filesystem()
                0x00000000c0007da4                Filesystem::Filesystem()
                0x00000000c0007dc8                Filesystem::~Filesystem()
                0x00000000c0007dc8                Filesystem::~Filesystem()
                0x00000000c0007dd6                Filesystem::~Filesystem()
                0x00000000c0007dfa                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e24                Fs::initVFS()
                0x00000000c0007e4e                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c0008068                File::File(char const*, Process*, bool)
                0x00000000c0008068                File::File(char const*, Process*, bool)
                0x00000000c0008166                File::File(char const*, Process*)
                0x00000000c0008166                File::File(char const*, Process*)
                0x00000000c0008184                File::open(FileOpenMode)
                0x00000000c00081e2                File::close()
                0x00000000c0008242                File::seek(unsigned long long)
                0x00000000c0008298                File::truncate(unsigned long long)
                0x00000000c00082ee                File::tell(unsigned long long*)
                0x00000000c000833e                File::rewind()
                0x00000000c0008352                File::unlink()
                0x00000000c000839e                File::rename(char const*)
                0x00000000c00083ec                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0008448                File::exists()
                0x00000000c0008486                File::stat(unsigned long long*, bool*)
                0x00000000c00084e7                Fs::setcwd(Process*, char*)
                0x00000000c0008646                Directory::Directory(char const*, Process*)
                0x00000000c0008646                Directory::Directory(char const*, Process*)
                0x00000000c000870e                Directory::open()
                0x00000000c000876a                Directory::close()
                0x00000000c00087ca                Directory::unlink()
                0x00000000c0008816                Directory::rename(char const*)
                0x00000000c0008864                Directory::exists()
                0x00000000c00088a2                Directory::read(dirent*)
                0x00000000c00088ee                Directory::create()
                0x00000000c000893a                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0008940       0x86 hal/bus.32
                0x00000000c0008940                Bus::Bus(char const*)
                0x00000000c0008940                Bus::Bus(char const*)
                0x00000000c0008978                Bus::~Bus()
                0x00000000c0008978                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
 .text          0x00000000c00089c6       0x9b hal/buzzer.32
                0x00000000c00089c6                KeBeepThread(void*)
                0x00000000c0008a07                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a61        0x1 
 .text          0x00000000c0008a62      0xeac hal/clock.32
                0x00000000c0008a62                KeLoadTimezoneStrings()
                0x00000000c0008df1                KeGetTimezoneStringFromID(int)
                0x00000000c0008e8e                KeUpdateTimezone(char const*)
                0x00000000c0008f88                KeSetTimezone(char const*)
                0x00000000c0008fe5                KeSetTimezone(int)
                0x00000000c0009018                KeLoadTimezone()
                0x00000000c0009092                Clock::Clock(char const*)
                0x00000000c0009092                Clock::Clock(char const*)
                0x00000000c00090c8                Clock::~Clock()
                0x00000000c00090c8                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009116                Clock::timeInSecondsLocal()
                0x00000000c000918c                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0009218                KeDatetimeToSeconds(datetime_t)
                0x00000000c0009558                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0009626                KeSecondsToDatetime(unsigned long long)
                0x00000000c00098e2                Clock::timeInDatetimeLocal()
 .text          0x00000000c000990e      0x47a hal/device.32
                0x00000000c000990e                Device::hibernate()
                0x00000000c0009910                Device::wake()
                0x00000000c0009912                Device::detect()
                0x00000000c0009914                Device::disableLegacy()
                0x00000000c0009916                Device::powerSaving(PowerSavingLevel)
                0x00000000c0009918                DriverlessDevice::close(int, int, void*)
                0x00000000c000991c                DriverlessDevice::detect()
                0x00000000c000991e                DriverlessDevice::open(int, int, void*)
                0x00000000c0009932                Device::~Device()
                0x00000000c0009932                Device::~Device()
                0x00000000c0009940                Device::~Device()
                0x00000000c0009968                Device::findAndLoadDriver()
                0x00000000c0009976                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000999c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00099dc                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009a06                Device::getParent()
                0x00000000c0009a12                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009a30                Device::addChild(Device*)
                0x00000000c0009a74                Device::removeAllChildren()
                0x00000000c0009aba                Device::hibernateAll()
                0x00000000c0009aea                Device::wakeAll()
                0x00000000c0009b1a                Device::detectAll()
                0x00000000c0009b4a                Device::disableLegacyAll()
                0x00000000c0009b4c                Device::loadDriversForAll()
                0x00000000c0009b4e                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009b84                Device::setName(char const*)
                0x00000000c0009b92                Device::Device(char const*)
                0x00000000c0009b92                Device::Device(char const*)
                0x00000000c0009c8e                Device::getName()
                0x00000000c0009c98                Device::closeAll()
                0x00000000c0009ce4                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009ce4                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009d1a                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d5e                getDevicesOfType(DeviceType)
 .text          0x00000000c0009d88       0x86 hal/diskctrl.32
                0x00000000c0009d88                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d88                HardDiskController::HardDiskController(char const*)
                0x00000000c0009dc0                HardDiskController::~HardDiskController()
                0x00000000c0009dc0                HardDiskController::~HardDiskController()
                0x00000000c0009de4                HardDiskController::~HardDiskController()
 .text          0x00000000c0009e0e       0xe2 hal/diskphys.32
                0x00000000c0009e0e                PhysicalDisk::eject()
                0x00000000c0009e12                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e12                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e7a                PhysicalDisk::startCache()
                0x00000000c0009ea2                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009ea2                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009ec6                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009ef0        0x0 hal/fpu.32
 .text          0x00000000c0009ef0      0x874 hal/keybrd.32
                0x00000000c0009ef0                startGUI(void*)
                0x00000000c0009f55                startGUIVESA(void*)
                0x00000000c0009fba                sendKeyToTerminal(unsigned char)
                0x00000000c000a090                sendKeyboardToken(KeyboardToken)
                0x00000000c000a54c                clearInternalKeybuffer(VgaText*)
                0x00000000c000a581                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6da                Keyboard::Keyboard(char const*)
                0x00000000c000a6da                Keyboard::Keyboard(char const*)
                0x00000000c000a716                Keyboard::~Keyboard()
                0x00000000c000a716                Keyboard::~Keyboard()
                0x00000000c000a73a                Keyboard::~Keyboard()
 .text          0x00000000c000a764      0x3f8 hal/logidisk.32
                0x00000000c000a764                LogicalDisk::close(int, int, void*)
                0x00000000c000a768                LogicalDisk::~LogicalDisk()
                0x00000000c000a768                LogicalDisk::~LogicalDisk()
                0x00000000c000a78c                LogicalDisk::~LogicalDisk()
                0x00000000c000a7b6                LogicalDisk::open(int, int, void*)
                0x00000000c000a7ca                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a802                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a848                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a848                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a908                LogicalDisk::assignDriveLetter()
                0x00000000c000a9c2                LogicalDisk::mount()
                0x00000000c000aa0a                LogicalDisk::unmount()
                0x00000000c000aa1a                LogicalDisk::eject()
                0x00000000c000aa2e                LogicalDisk::unassignDriveLetter()
                0x00000000c000aa84                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aaf0                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab5c       0x86 hal/mouse.32
                0x00000000c000ab5c                Mouse::Mouse(char const*)
                0x00000000c000ab5c                Mouse::Mouse(char const*)
                0x00000000c000ab94                Mouse::~Mouse()
                0x00000000c000ab94                Mouse::~Mouse()
                0x00000000c000abb8                Mouse::~Mouse()
 .text          0x00000000c000abe2       0x90 hal/nic.32
                0x00000000c000abe2                NIC::getMAC()
                0x00000000c000abe8                NIC::write(int, unsigned char*, int*)
                0x00000000c000abee                NIC::NIC(char const*)
                0x00000000c000abee                NIC::NIC(char const*)
                0x00000000c000ac24                NIC::~NIC()
                0x00000000c000ac24                NIC::~NIC()
                0x00000000c000ac48                NIC::~NIC()
 .text          0x00000000c000ac72      0x33b hal/partition.32
                0x00000000c000ac72                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ad1a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000afad        0x3 
 .text          0x00000000c000afb0       0x86 hal/serial.32
                0x00000000c000afb0                Serial::Serial(char const*)
                0x00000000c000afb0                Serial::Serial(char const*)
                0x00000000c000afe8                Serial::~Serial()
                0x00000000c000afe8                Serial::~Serial()
                0x00000000c000b00c                Serial::~Serial()
 *fill*         0x00000000c000b036        0x2 
 .text          0x00000000c000b038      0x230 hal/timer.32
                0x00000000c000b038                Timer::Timer(char const*)
                0x00000000c000b038                Timer::Timer(char const*)
                0x00000000c000b070                Timer::~Timer()
                0x00000000c000b070                Timer::~Timer()
                0x00000000c000b094                Timer::~Timer()
                0x00000000c000b0be                Timer::read()
                0x00000000c000b0c9                setupTimer(int)
                0x00000000c000b104                timerHandler(unsigned int)
 .text          0x00000000c000b268      0x5fe hal/vcache.32
                0x00000000c000b268                VCache::VCache(PhysicalDisk*)
                0x00000000c000b268                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3d8                VCache::invalidateReadBuffer()
                0x00000000c000b3e8                VCache::writeWriteBuffer()
                0x00000000c000b434                VCache::~VCache()
                0x00000000c000b434                VCache::~VCache()
                0x00000000c000b48c                VCache::~VCache()
                0x00000000c000b4b4                VCache::write(unsigned long long, int, void*)
                0x00000000c000b682                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b866      0x70e hal/video.32
                0x00000000c000b866                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b8b2                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b922                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b9a0                Video::clearScreen(unsigned int)
                0x00000000c000b9d4                Video::putpixel(int, int, unsigned int)
                0x00000000c000b9e2                Video::readPixelApprox(int, int)
                0x00000000c000b9f6                Video::Video(char const*)
                0x00000000c000b9f6                Video::Video(char const*)
                0x00000000c000ba2c                Video::~Video()
                0x00000000c000ba2c                Video::~Video()
                0x00000000c000ba50                Video::~Video()
                0x00000000c000ba7a                Video::isMonochrome()
                0x00000000c000ba86                Video::getWidth()
                0x00000000c000ba92                Video::getHeight()
                0x00000000c000ba9e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb5a                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000bf04                Video::putTGA(int, int, unsigned char*, int)
 .text          0x00000000c000bf74     0x1157 hw/acpi.32
                0x00000000c000bf74                ACPI::close(int, int, void*)
                0x00000000c000bf7c                loadACPITables(unsigned char*)
                0x00000000c000c1dc                findRSDT(unsigned char*)
                0x00000000c000c328                findDataTable(unsigned char*, char*)
                0x00000000c000c39c                scanMADT()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c834                ACPI::ACPI()
                0x00000000c000c888                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c984                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca50                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca58                ACPI::detectPCI()
                0x00000000c000cc64                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cc7c                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d0cb        0x1 
 .text          0x00000000c000d0cc       0xea krnl/assert.32
                0x00000000c000d0cc                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d1b6       0xb6 krnl/atexit.32
                0x00000000c000d1b6                KeInitialiseAtexit()
                0x00000000c000d1d5                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d209                KeExecuteAtexit()
 .text          0x00000000c000d26c       0x9f krnl/bootmsg.32
                0x00000000c000d26c                KeDisplaySplashScreen()
                0x00000000c000d29b                KeSetBootMessage(char const*)
 .text          0x00000000c000d30b       0x5f krnl/c++.32
                0x00000000c000d30b                __cxa_atexit
                0x00000000c000d30e                __cxa_finalize
                0x00000000c000d30f                __stack_chk_fail
                0x00000000c000d345                __cxa_pure_virtual
                0x00000000c000d356                operator new[](unsigned long)
                0x00000000c000d35b                operator delete(void*, unsigned long)
                0x00000000c000d360                operator delete[](void*)
                0x00000000c000d365                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d36a        0x2 
 .text          0x00000000c000d36c       0x44 krnl/cdefs.32
                0x00000000c000d36c                CUnlockScheduler
                0x00000000c000d384                CLockScheduler
                0x00000000c000d394                CPrintf
 .text          0x00000000c000d3b0      0xd56 krnl/cm.32
                0x00000000c000d3b0                CmOpen(char const*)
                0x00000000c000d4ce                CmClose(Reghive_Tag*)
                0x00000000c000d4e4                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d520                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d597                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d5d6                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d608                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d644                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d66c                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d68d                CmExpand(Reghive_Tag*, int)
                0x00000000c000d708                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d78e                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d882                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d9be                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000da1f                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000da4f                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000da86                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000dab0                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000daf0                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000db94                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000dbc2                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dd60                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000ddad                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000de27                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000de7a                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000df3e                zStrtok(char*, char const*)
                0x00000000c000dfb0                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000e031                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000e0d4                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000e106        0x2 
 .text          0x00000000c000e108       0x1d krnl/compat.32
                0x00000000c000e108                Krnl::handlePowerButton()
                0x00000000c000e118                Krnl::handleSleepButton()
 *fill*         0x00000000c000e125        0x1 
 .text          0x00000000c000e126      0x2c7 krnl/computer.32
                0x00000000c000e126                Computer::close(int, int, void*)
                0x00000000c000e12c                KeFirstTask()
                0x00000000c000e24e                Computer::Computer()
                0x00000000c000e24e                Computer::Computer()
                0x00000000c000e292                KePrepareShutdown()
                0x00000000c000e2b2                KeShutdown()
                0x00000000c000e2d6                KeSleep()
                0x00000000c000e2e2                KeRestart()
                0x00000000c000e304                Computer::open(int, int, void*)
 .text          0x00000000c000e3ed       0x2b krnl/crc32.32
                0x00000000c000e3ed                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e418      0x5bf krnl/env.32
                0x00000000c000e418                EnvVarContainer::getEnv(char const*)
                0x00000000c000e456                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e518                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e51a                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e73e                EnvVarContainer::__loadSystem()
                0x00000000c000e758                EnvVarContainer::__loadUser()
                0x00000000c000e75a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e75a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e77c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e77c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e7ac                KeGetEnv(Process*, char const*)
                0x00000000c000e811                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e82b                KeSetEnvUser(char const*, char const*)
                0x00000000c000e84a                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e85d                KeDeleteEnvSystem(char const*)
                0x00000000c000e85e                KeDeleteEnvUser(char const*)
                0x00000000c000e85f                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e860                KeNewProcessEnv(Process*)
                0x00000000c000e882                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e8ce                KeLoadSystemEnv()
                0x00000000c000e8fc                KeLoadUserEnv()
                0x00000000c000e922                KeFlushEnv()
                0x00000000c000e923                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e943                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e9d7        0x1 
 .text          0x00000000c000e9d8      0x371 krnl/fault.32
                0x00000000c000e9d8                KeSetupInterrupts()
                0x00000000c000ea50                int_handler
                0x00000000c000eb80                KeDisplayProgramFault(char const*)
                0x00000000c000ebd0                KeGeneralProtectionFault(void*, void*)
                0x00000000c000ec34                KePageFault(void*, void*)
                0x00000000c000ec98                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000eca8                KeOtherFault(void*, void*)
                0x00000000c000ecdc                KeOpcodeFault(void*, void*)
                0x00000000c000ed30                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000ed49        0x1 
 .text          0x00000000c000ed4a      0x1db krnl/gdt.32
                0x00000000c000ed4a                GDTEntry::setBase(unsigned int)
                0x00000000c000ed66                GDTEntry::setLimit(unsigned int)
                0x00000000c000ed84                GDT::GDT()
                0x00000000c000ed84                GDT::GDT()
                0x00000000c000ed9a                GDT::addEntry(GDTEntry)
                0x00000000c000edbc                GDT::getNumberOfEntries()
                0x00000000c000edc4                GDT::flush()
                0x00000000c000ede6                GDT::setup()
 .text          0x00000000c000ef25       0x20 krnl/idle.32
                0x00000000c000ef25                idleFunction(void*)
 *fill*         0x00000000c000ef45        0x3 
 .text          0x00000000c000ef48      0x46c krnl/idt.32
                0x00000000c000ef48                IDTEntry::IDTEntry(bool)
                0x00000000c000ef48                IDTEntry::IDTEntry(bool)
                0x00000000c000efc2                IDTEntry::setOffset(unsigned int)
                0x00000000c000efd8                IDT::IDT()
                0x00000000c000efd8                IDT::IDT()
                0x00000000c000efda                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000efe2                IDT::addEntry(IDTEntry, int)
                0x00000000c000effc                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000f034                IDT::flush()
                0x00000000c000f04e                IDT::setup()
 .text          0x00000000c000f3b4       0x9a krnl/inlines.32
                0x00000000c000f3b4                CPU::current()
                0x00000000c000f3c0                operator new(unsigned long)
                0x00000000c000f3c5                operator delete(void*)
                0x00000000c000f3ca                disableIRQs()
                0x00000000c000f3cc                enableIRQs()
                0x00000000c000f3ce                lockScheduler()
                0x00000000c000f3d6                unlockScheduler()
                0x00000000c000f3e8                lockStuff()
                0x00000000c000f3f6                unlockStuff()
                0x00000000c000f433                Virt::getAKernelVAS()
                0x00000000c000f439                __not_memcpy
 .text          0x00000000c000f44e      0x2bc krnl/intlformat.32
                0x00000000c000f44e                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f63e                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f660                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f682                KeSetLocale(klocale_t)
                0x00000000c000f698                KeInitialiseLocale()
                0x00000000c000f706                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f707                KeFormatCurrency(char*, int, double)
                0x00000000c000f708                KeFormatNumber(char*, long long, long long)
                0x00000000c000f709                KeFormatNumber(char*, double)
 *fill*         0x00000000c000f70a        0x2 
 .text          0x00000000c000f70c      0x42e krnl/intops.32
                0x00000000c000f70c                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f894                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000fa40                KeGetDigitsInNumber(long long)
                0x00000000c000faac                KeItoa(unsigned long long, char*)
                0x00000000c000fadc                KeItoa(long long, char*)
                0x00000000c000fb0c                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000fb3a      0x207 krnl/kheap.32
                0x00000000c000fb3a                sbrk
                0x00000000c000fbd1                sbrk_thunk
                0x00000000c000fc07                mmap
                0x00000000c000fc65                munmap
                0x00000000c000fc7a                liballoc_lock()
                0x00000000c000fc88                liballoc_unlock()
                0x00000000c000fca0                liballoc_alloc(int)
                0x00000000c000fcb8                liballoc_free(void*, int)
                0x00000000c000fcd3                realloc
                0x00000000c000fce7                malloc
                0x00000000c000fcf7                free
                0x00000000c000fd07                rfree
                0x00000000c000fd17                calloc
 *fill*         0x00000000c000fd41        0x3 
 .text          0x00000000c000fd44      0x1d3 krnl/mailbox.32
                0x00000000c000fd44                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fda4                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fe04                KeMailboxCreate()
                0x00000000c000fe38                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fe9c                KeMailboxGet(Mailbox*, void**)
                0x00000000c000ff00                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000ff17       0xfd krnl/main.32
                0x00000000c000ff17                KeEntryPoint
 .text          0x00000000c0010014       0x1a krnl/mutex.32
                0x00000000c0010014                Mutex::Mutex()
                0x00000000c0010014                Mutex::Mutex()
 .text          0x00000000c001002e        0xc krnl/panic.32
                0x00000000c001002e                KePanic(char const*)
 .text          0x00000000c001003a      0x667 krnl/physmgr.32
                0x00000000c001003a                Phys::allocateDMA(unsigned long)
                0x00000000c0010122                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c001015d                Phys::setPageState(unsigned long, bool)
                0x00000000c001019d                Phys::getPageState(unsigned long)
                0x00000000c00101b9                Phys::freePage(unsigned long)
                0x00000000c0010222                Phys::allocatePage()
                0x00000000c0010300                Phys::allocateContiguousPages(int)
                0x00000000c001037b                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c00103b3                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c00106a1        0x1 
 .text          0x00000000c00106a2      0x275 krnl/pipe.32
                0x00000000c00106a2                Pipe::isAtty()
                0x00000000c00106a6                Pipe::~Pipe()
                0x00000000c00106a6                Pipe::~Pipe()
                0x00000000c00106ca                Pipe::~Pipe()
                0x00000000c00106f2                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00107b2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00108b0                Pipe::Pipe(int)
                0x00000000c00108b0                Pipe::Pipe(int)
 .text          0x00000000c0010917      0x10c krnl/powctrl.32
                0x00000000c0010917                KePowerThread(void*)
                0x00000000c0010949                KeChangePowerSettings(PowerSettings)
                0x00000000c001095f                KeUserIOReceived()
                0x00000000c001096a                KeHandlePowerButton()
                0x00000000c0010982                KeHandleSleepButton()
                0x00000000c001099a                KeSetupPowerManager()
 .text          0x00000000c0010a23       0x9d krnl/random.32
                0x00000000c0010a23                KeRand()
                0x00000000c0010a65                KeSeedRand(unsigned int)
                0x00000000c0010a8e                KeInitRand()
 .text          0x00000000c0010ac0      0x1bc krnl/resolve.32
                0x00000000c0010ac0                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010c7c      0x415 krnl/semaphore.32
                0x00000000c0010c7c                Semaphore::Semaphore(int)
                0x00000000c0010c7c                Semaphore::Semaphore(int)
                0x00000000c0010cac                Semaphore::tryAcquire()
                0x00000000c0010d80                Semaphore::assertLocked(char const*)
                0x00000000c0010e0c                Semaphore::acquire(int)
                0x00000000c0010fc4                Semaphore::acquire()
                0x00000000c0010fe0                Semaphore::release()
 .text          0x00000000c0011091      0x3a8 krnl/signal.32
                0x00000000c0011091                KiSigKill(int)
                0x00000000c00110a5                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00110a6                KiDefaultSignalHandlerPause(int)
                0x00000000c00110d2                KiDefaultSignalHandlerResume(int)
                0x00000000c00110fe                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011103                KeInitSignals()
                0x00000000c0011175                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00111ab                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001122c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001135b                KiCheckSignalZ
                0x00000000c00113ac                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00113e7                KiFinishSignalZ
 .text          0x00000000c0011439      0xe2b krnl/syscalls.32
                0x00000000c0011439                SysSeekDir(regs*)
                0x00000000c001143e                SysTellDir(regs*)
                0x00000000c0011443                SysVerify(regs*)
                0x00000000c001144d                SysGetArgc(regs*)
                0x00000000c0011461                SysTTYName(regs*)
                0x00000000c0011469                SysFormatDisk(regs*)
                0x00000000c00114e0                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011534                SysGetDiskVolumeLabel(regs*)
                0x00000000c001158d                SysRealpath(regs*)
                0x00000000c00115d1                SysReadDir(regs*)
                0x00000000c0011651                SysIsATTY(regs*)
                0x00000000c00116ab                SysSeek(regs*)
                0x00000000c0011709                SysTell(regs*)
                0x00000000c001177e                SysSize(regs*)
                0x00000000c00117f8                SysSizeFromFilename(regs*)
                0x00000000c0011922                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011a4c                SysClose(regs*)
                0x00000000c0011aac                SysOpenDir(regs*)
                0x00000000c0011b29                SysMakeDir(regs*)
                0x00000000c0011b97                SysCloseDir(regs*)
                0x00000000c0011beb                SysWait(regs*)
                0x00000000c0011c0c                SysNotImpl(regs*)
                0x00000000c0011c27                SysPanic(regs*)
                0x00000000c0011c42                SysRmdir(regs*)
                0x00000000c0011ca7                SysUnlink(regs*)
                0x00000000c0011d0c                SysGetArgv(regs*)
                0x00000000c0011d59                SysUSleep(regs*)
                0x00000000c0011d83                SysSpawn(regs*)
                0x00000000c0011df6                SysGetEnv(regs*)
                0x00000000c0011ea7                SysSetFatAttrib(regs*)
                0x00000000c0011f1a                SysShutdown(regs*)
                0x00000000c0011f77                SysPipe(regs*)
                0x00000000c0011fbc                SysGetUnixTime(regs*)
                0x00000000c0011fd0                string_ends_with(char const*, char const*)
                0x00000000c0012018                SysOpen(regs*)
                0x00000000c001220f                KeSystemCall(regs*, void*)
 .text          0x00000000c0012264      0xb0b krnl/terminal.32
                0x00000000c0012264                VgaText::isAtty()
                0x00000000c0012268                VgaText::~VgaText()
                0x00000000c0012268                VgaText::~VgaText()
                0x00000000c001228c                VgaText::~VgaText()
                0x00000000c00122b6                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00122d6                setTerminalScrollLock(bool)
                0x00000000c00122d7                doTerminalCycle()
                0x00000000c00122d8                addToTerminalCycle(VgaText*)
                0x00000000c00122d9                scrollTerminalScrollLock(int)
                0x00000000c00122da                VgaText::updateTitle()
                0x00000000c00122dc                VgaText::load()
                0x00000000c00122de                VgaText::updateCursor()
                0x00000000c00122f4                VgaText::doANSI_SGR(int)
                0x00000000c0012368                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0012378                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0012388                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00123a8                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00123b4                VgaText::setTitleColour(VgaColour)
                0x00000000c00123c0                VgaText::setTitle(char*)
                0x00000000c00123c2                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00123d4                VgaText::scrollScreen()
                0x00000000c0012466                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0012476                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0012522                VgaText::getCursorX()
                0x00000000c001252a                VgaText::getCursorY()
                0x00000000c0012532                VgaText::setCursor(int, int)
                0x00000000c0012549                setActiveTerminal(VgaText*)
                0x00000000c0012594                VgaText::clearScreen()
                0x00000000c00125e2                VgaText::setCursorX(int)
                0x00000000c00125fa                VgaText::setCursorY(int)
                0x00000000c0012612                VgaText::incrementCursor(bool)
                0x00000000c0012666                VgaText::decrementCursor(bool)
                0x00000000c0012688                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0012758                VgaText::putchar(char)
                0x00000000c0012850                VgaText::putx(unsigned int)
                0x00000000c0012896                VgaText::puts(char const*)
                0x00000000c00128bc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0012908                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0012a82                VgaText::VgaText(char const*)
                0x00000000c0012a82                VgaText::VgaText(char const*)
                0x00000000c0012be2                VgaText::receiveKey(unsigned char)
                0x00000000c0012d6e                VgaText::doUpdate()
 *fill*         0x00000000c0012d6f        0x1 
 .text          0x00000000c0012d70      0x224 krnl/tss.32
                0x00000000c0012d70                TSS::TSS()
                0x00000000c0012d70                TSS::TSS()
                0x00000000c0012d80                TSS::setESP(unsigned long)
                0x00000000c0012d94                TSS::flush()
                0x00000000c0012db4                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012f94      0x4dc krnl/unixfile.32
                0x00000000c0012f94                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012fea                ReservedFilename::isAtty()
                0x00000000c0013006                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0013064                UnixFile::getFileDescriptor()
                0x00000000c001306c                UnixFile::UnixFile(int)
                0x00000000c001306c                UnixFile::UnixFile(int)
                0x00000000c0013220                ReservedFilename::ReservedFilename(int)
                0x00000000c0013220                ReservedFilename::ReservedFilename(int)
                0x00000000c0013252                UnixFile::~UnixFile()
                0x00000000c0013252                UnixFile::~UnixFile()
                0x00000000c00132ee                UnixFile::~UnixFile()
                0x00000000c0013316                ReservedFilename::~ReservedFilename()
                0x00000000c0013316                ReservedFilename::~ReservedFilename()
                0x00000000c001333a                ReservedFilename::~ReservedFilename()
                0x00000000c0013361                KeGetFileFromDescriptor(int)
 .text          0x00000000c0013470     0x14bc krnl/virtmgr.32
                0x00000000c0013470                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00134aa                Virt::getPageState(unsigned long)
                0x00000000c00134cd                Virt::allocateKernelVirtualPages(int)
                0x00000000c00135f2                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0013615                Virt::swapIDToSector(unsigned long)
                0x00000000c001362b                Virt::allocateSwapfilePage()
                0x00000000c00136ab                Virt::virtualMemorySetup()
                0x00000000c00136fc                Virt::setupPageSwapping(int)
                0x00000000c001376e                VAS::setCPUSpecific(unsigned long)
                0x00000000c0013770                VAS::VAS(VAS*)
                0x00000000c0013770                VAS::VAS(VAS*)
                0x00000000c0013788                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00137b6                VAS::getPageTableEntry(unsigned long)
                0x00000000c00137d5                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0013912                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0013936                VAS::virtualToPhysical(unsigned long)
                0x00000000c0013950                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0013992                VAS::VAS()
                0x00000000c0013992                VAS::VAS()
                0x00000000c00139fc                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0013a1c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0013a48                VAS::~VAS()
                0x00000000c0013a48                VAS::~VAS()
                0x00000000c0013bb0                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013cb4                VAS::allocatePages(int, int)
                0x00000000c0013d9a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013df2                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013ee8                VAS::VAS(bool)
                0x00000000c0013ee8                VAS::VAS(bool)
                0x00000000c00140d0                VAS::evict(unsigned long)
                0x00000000c00141d4                VAS::canLockPage(unsigned long)
                0x00000000c00141ee                VAS::unlockPage(unsigned long)
                0x00000000c0014222                VAS::canLockPages(unsigned long, int)
                0x00000000c001425e                VAS::unlockPages(unsigned long, int)
                0x00000000c001429a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c00145aa                VAS::lockPage(unsigned long)
                0x00000000c001461c                VAS::lockPages(unsigned long, int)
                0x00000000c0014658                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c00146cc                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00146f8                VAS::scanForEviction()
                0x00000000c0014831                mapVASFirstTime
 .text          0x00000000c001492c       0x2f sys/alarm.32
                0x00000000c001492c                SysAlarm(regs*)
 .text          0x00000000c001495b       0x36 sys/eject.32
                0x00000000c001495b                SysEject(regs*)
 .text          0x00000000c0014991       0x18 sys/exit.32
                0x00000000c0014991                SysExit(regs*)
 .text          0x00000000c00149a9       0x1f sys/getcwd.32
                0x00000000c00149a9                SysGetCwd(regs*)
 .text          0x00000000c00149c8       0x26 sys/getpid.32
                0x00000000c00149c8                SysGetPID(regs*)
 .text          0x00000000c00149ee       0x21 sys/getramdata.32
                0x00000000c00149ee                SysGetRAMData(regs*)
 .text          0x00000000c0014a0f       0xd3 sys/getvgaptr.32
                0x00000000c0014a0f                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014ae2        0x2 
 .text          0x00000000c0014ae4       0xb9 sys/kill.32
                0x00000000c0014ae4                SysKill(regs*)
 .text          0x00000000c0014b9d       0xa8 sys/loaddll.32
                0x00000000c0014b9d                SysLoadDLL(regs*)
 .text          0x00000000c0014c45       0x12 sys/pause.32
                0x00000000c0014c45                SysPause(regs*)
 .text          0x00000000c0014c57       0x49 sys/pthread.32
                0x00000000c0014c57                SysPthreadCreate(regs*)
                0x00000000c0014c6f                SysPthreadGetTID(regs*)
                0x00000000c0014c79                SysInternalPthreadGetContext(regs*)
                0x00000000c0014c7e                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c0014c83                SysPthreadJoin(regs*)
                0x00000000c0014c88                SysPthreadExit(regs*)
 .text          0x00000000c0014ca0       0x68 sys/read.32
                0x00000000c0014ca0                SysRead(regs*)
 .text          0x00000000c0014d08       0x29 sys/registersignal.32
                0x00000000c0014d08                SysRegisterSignal(regs*)
 .text          0x00000000c0014d31      0x1cc sys/registry.32
                0x00000000c0014d31                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014d75                SysRegistryReadExtent(regs*)
                0x00000000c0014dbd                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014dd4                SysRegistryEnterDirectory(regs*)
                0x00000000c0014deb                SysRegistryGetNext(regs*)
                0x00000000c0014e02                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014e3c                SysRegistryOpen(regs*)
                0x00000000c0014e50                SysRegistryClose(regs*)
                0x00000000c0014e67                SysRegistryEasyReadString(regs*)
                0x00000000c0014eb3                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014efd       0x55 sys/sbrk.32
                0x00000000c0014efd                SysSbrk(regs*)
 .text          0x00000000c0014f52       0x1c sys/setcwd.32
                0x00000000c0014f52                SysSetCwd(regs*)
 .text          0x00000000c0014f6e       0xd7 sys/settime.32
                0x00000000c0014f6e                SysSetTime(regs*)
 .text          0x00000000c0015045       0x73 sys/symlink.32
                0x00000000c0015045                SysSymlink(regs*)
 .text          0x00000000c00150b8       0x3e sys/timezone.32
                0x00000000c00150b8                SysTimezone(regs*)
 .text          0x00000000c00150f6       0xfc sys/truncate.32
                0x00000000c00150f6                SysTruncate(regs*)
 .text          0x00000000c00151f2       0x68 sys/write.32
                0x00000000c00151f2                SysWrite(regs*)
 .text          0x00000000c001525a       0x9d sys/wsbe.32
                0x00000000c001525a                SysWsbe(regs*)
 .text          0x00000000c00152f7       0x28 sys/yield.32
                0x00000000c00152f7                SysYield(regs*)
 *fill*         0x00000000c001531f        0x1 
 .text          0x00000000c0015320      0x281 thr/alarm.32
                0x00000000c0015320                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c00154b0                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c00155a1     0x1382 thr/elf.32
                0x00000000c00155a1                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0015833                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0015af6                Thr::runtimeReferenceHelper()
                0x00000000c0015b09                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0015b58                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015e16                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0016615                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0016647                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001667e                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0016698                Thr::loadDLL(char const*, bool)
                0x00000000c00168ea                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0016923       0x5a thr/exec.32
                0x00000000c0016923                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c001697d        0x3 
 .text          0x00000000c0016980     0x129d thr/prcssthr.32
                0x00000000c0016980                userModeEntryPoint(void*)
                0x00000000c00169ac                changeTSS
                0x00000000c00169dc                switchToThread(ThreadControlBlock*)
                0x00000000c0016a9c                Process::addArgs(char**)
                0x00000000c0016b08                Process::Process(char const*, Process*, char**)
                0x00000000c0016b08                Process::Process(char const*, Process*, char**)
                0x00000000c0016d40                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016d40                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016f2c                taskStartupFunction
                0x00000000c0016f38                KeDisablePreemption()
                0x00000000c0016f60                KeRestorePreemption()
                0x00000000c0016f80                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00170d8                Process::createUserThread()
                0x00000000c00170f8                setupMultitasking(void (*)())
                0x00000000c0017240                schedule()
                0x00000000c00172d4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0017300                blockTask(TaskState)
                0x00000000c001733c                waitTask(int, int*, int)
                0x00000000c0017380                milliTenthSleepUntil(unsigned long long)
                0x00000000c0017434                milliTenthSleep(unsigned long long)
                0x00000000c001744c                sleep(unsigned long long)
                0x00000000c001746c                sleep(unsigned int)
                0x00000000c0017484                milliTenthSleep(unsigned int)
                0x00000000c00174a4                taskReturned
                0x00000000c00174ec                Thr::processFromPID(int)
                0x00000000c001759c                unblockTask(ThreadControlBlock*)
                0x00000000c0017650                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0017928                cleanerTaskFunction(void*)
                0x00000000c0017a40                terminateTask(int)
                0x00000000c0017b50                Thr::terminateFromIRQ(int)
 .text          0x00000000c0017c1d      0xe5f vm86/vm8086.32
                0x00000000c0017c1d                Vm::inbv(unsigned short)
                0x00000000c0017c30                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017c66                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0017c76                Vm::getSegment(unsigned int)
                0x00000000c0017c7e                Vm::getOffset(unsigned int)
                0x00000000c0017c83                Vm::mainloop2()
                0x00000000c0017cc4                Vm::mainVm8086Loop(void*)
                0x00000000c0017cd8                Vm::mainloop3(unsigned long)
                0x00000000c0017d0a                Vm::initialise8086()
                0x00000000c0017d4e                Vm::resetConventionalMemory8086()
                0x00000000c0017d4f                Vm::finish8086()
                0x00000000c0017dc0                Vm::getOutput8086(unsigned char*)
                0x00000000c0017de5                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017f47                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001818f                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0018229                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001823a                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001824c                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001825d                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018272                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0018288                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001829d                Vm::faultHandler(regs*)
 .text          0x00000000c0018a7c     0x1ea9 arch/i386/hal.32
                0x00000000c0018a7c                noCopro(unsigned long)
                0x00000000c0018a7e                CPU::close(int, int, void*)
                0x00000000c0018a81                x86ReadCMOS(unsigned char)
                0x00000000c0018ad5                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018b35                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018b54                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018b71                AMD_K6_writeback(int, int, int)
                0x00000000c0018c31                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018ccf                cpuidCheckEDX(unsigned int)
                0x00000000c0018cfc                cpuidCheckECX(unsigned int)
                0x00000000c0018d2a                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018d58                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018d86                HalDetectFeatures()
                0x00000000c0019b61                HalEnableNMI()
                0x00000000c0019b74                HalDisableNMI()
                0x00000000c0019b87                HalGetNMIState()
                0x00000000c0019b8d                x86rdmsr(unsigned int)
                0x00000000c0019bcb                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0019c10                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0019c26                HalFindRSDP()
                0x00000000c0019ceb                HalHandlePageFault(void*, void*)
                0x00000000c0019d1a                HalHandleOpcodeFault(void*, void*)
                0x00000000c0019d5c                HalDisplayDebugInfo(void*)
                0x00000000c001a0ea                HalReceivedNMI()
                0x00000000c001a185                HalSystemIdle()
                0x00000000c001a1e4                i386SaveCoprocessor(void*)
                0x00000000c001a1f8                i386LoadCoprocessor(void*)
                0x00000000c001a20c                x87EmulHandler(regs*, void*)
                0x00000000c001a2a9                HalInitialiseCoprocessor()
                0x00000000c001a32d                HalPanic(char const*)
                0x00000000c001a441                HalQueryPerformanceCounter()
                0x00000000c001a451                HalInitialise()
                0x00000000c001a5e3                HalMakeBeep(int)
                0x00000000c001a61d                HalGetRand()
                0x00000000c001a620                HalEndOfInterrupt(int)
                0x00000000c001a64b                HalRestart()
                0x00000000c001a64c                HalShutdown()
                0x00000000c001a64d                HalSleep()
                0x00000000c001a64e                CPU::CPU()
                0x00000000c001a64e                CPU::CPU()
                0x00000000c001a6d2                CPU::setupSMEP()
                0x00000000c001a6de                CPU::setupUMIP()
                0x00000000c001a6e8                CPU::setupTSC()
                0x00000000c001a6f2                CPU::setupLargePages()
                0x00000000c001a6fc                CPU::setupPAT()
                0x00000000c001a72e                CPU::setupMTRR()
                0x00000000c001a730                CPU::setupGlobalPages()
                0x00000000c001a73a                CPU::allowUsermodeDataAccess()
                0x00000000c001a748                CPU::prohibitUsermodeDataAccess()
                0x00000000c001a756                CPU::setupSMAP()
                0x00000000c001a764                CPU::setupFeatures()
                0x00000000c001a830                CPU::open(int, int, void*)
 .text          0x00000000c001a925      0x261 arch/i386/intctrl.32
                0x00000000c001a925                convertLegacyIRQNumber(int)
                0x00000000c001a961                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001a9ab                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001aad9                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001ab0d                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001ab86        0x2 
 .text          0x00000000c001ab88      0x2dc arch/i386/pic.32
                0x00000000c001ab88                picIoWait()
                0x00000000c001ab90                picDisable()
                0x00000000c001abc4                picGetIRQReg(int)
                0x00000000c001ac40                picOpen()
                0x00000000c001adc4                picEOI(int)
 .text          0x00000000c001ae64      0x5f3 arch/i386/rtc.32
                0x00000000c001ae64                RTC::open(int, int, void*)
                0x00000000c001ae68                RTC::close(int, int, void*)
                0x00000000c001ae6c                RTC::timeInSecondsUTC()
                0x00000000c001ae7e                RTC::timeInDatetimeUTC()
                0x00000000c001aea4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001aee2                RTC::~RTC()
                0x00000000c001aee2                RTC::~RTC()
                0x00000000c001af06                RTC::~RTC()
                0x00000000c001af30                RTC::get_update_in_progress_flag()
                0x00000000c001af44                RTC::completeRTCRefresh()
                0x00000000c001b1f8                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b36e                rtcIRQHandler(regs*, void*)
                0x00000000c001b3ae                RTC::RTC()
                0x00000000c001b3ae                RTC::RTC()
 *fill*         0x00000000c001b457        0x1 
 .text          0x00000000c001b458      0x1f4 arch/i386/vga.32
                0x00000000c001b458                HalConsoleScroll(int, int)
                0x00000000c001b560                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b5c4                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b64c     0x14cf fs/fat/vfslink.32
                0x00000000c001b64c                FAT::getName()
                0x00000000c001b654                FAT::tell(void*, unsigned long long*)
                0x00000000c001b690                FAT::stat(void*, unsigned long long*)
                0x00000000c001b6cc                FAT::~FAT()
                0x00000000c001b6cc                FAT::~FAT()
                0x00000000c001b6f0                FAT::~FAT()
                0x00000000c001b718                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b7bc                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b880                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001ba64                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001bc80                FAT::allocateSwapfile(char const*, int)
                0x00000000c001be40                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bfb0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c010                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c070                FAT::close(void*)
                0x00000000c001c0c4                FAT::closeDir(void*)
                0x00000000c001c118                FAT::truncate(void*, unsigned long long)
                0x00000000c001c184                FAT::seek(void*, unsigned long long)
                0x00000000c001c1dc                fatWrapperReadDisk
                0x00000000c001c21c                fatWrapperWriteDisk
                0x00000000c001c25c                fatWrapperIoctl
                0x00000000c001c378                FAT::FAT()
                0x00000000c001c378                FAT::FAT()
                0x00000000c001c3d0                FAT::fixFilepath(char*)
                0x00000000c001c410                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c584                FAT::openDir(char const*, void**)
                0x00000000c001c634                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c72c                FAT::unlink(char const*)
                0x00000000c001c7ac                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c960                FAT::rename(char const*, char const*)
                0x00000000c001ca2c                FAT::mkdir(char const*)
                0x00000000c001caac                FAT::exists(char const*)
 *fill*         0x00000000c001cb1b        0x1 
 .text          0x00000000c001cb1c       0x94 fs/iso9660/helper.32
                0x00000000c001cb1c                isoReadDiscSectorHelper
                0x00000000c001cb78                iso_kprintf
                0x00000000c001cb94                iso_kprintfd
 .text          0x00000000c001cbb0      0x71c fs/iso9660/vfslink.32
                0x00000000c001cbb0                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001cbb6                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001cbbc                ISO9660::getName()
                0x00000000c001cbc2                ISO9660::closeDir(void*)
                0x00000000c001cbcc                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cbd2                ISO9660::unlink(char const*)
                0x00000000c001cbd8                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001cbde                ISO9660::rename(char const*, char const*)
                0x00000000c001cbe4                ISO9660::mkdir(char const*)
                0x00000000c001cbea                ISO9660::~ISO9660()
                0x00000000c001cbea                ISO9660::~ISO9660()
                0x00000000c001cc0e                ISO9660::~ISO9660()
                0x00000000c001cc36                ISO9660::exists(char const*)
                0x00000000c001cc4a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001cd30                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001cd78                ISO9660::seek(void*, unsigned long long)
                0x00000000c001cdba                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001cdf8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001ce4a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001cf8c                ISO9660::close(void*)
                0x00000000c001cfbc                ISO9660::openDir(char const*, void**)
                0x00000000c001d096                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d1b3                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d232                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d2a4                ISO9660::ISO9660()
                0x00000000c001d2a4                ISO9660::ISO9660()
 .text          0x00000000c001d2cc      0x26c hal/sound/sndcard.32
                0x00000000c001d2cc                SoundCard::beginPlayback()
                0x00000000c001d2da                SoundCard::stopPlayback()
                0x00000000c001d2e8                SoundCard::SoundCard(char const*)
                0x00000000c001d2e8                SoundCard::SoundCard(char const*)
                0x00000000c001d386                SoundCard::~SoundCard()
                0x00000000c001d386                SoundCard::~SoundCard()
                0x00000000c001d3aa                SoundCard::~SoundCard()
                0x00000000c001d3d4                SoundCard::configureRates(int, int, int)
                0x00000000c001d404                SoundCard::getSamples16(int, short*)
                0x00000000c001d460                SoundCard::getSamples32(int, int*)
                0x00000000c001d4e6                SoundCard::addChannel(SoundPort*)
                0x00000000c001d524                SoundCard::removeChannel(int)
 .text          0x00000000c001d538      0x426 hal/sound/sndport.32
                0x00000000c001d538                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d538                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d5c4                SoundPort::~SoundPort()
                0x00000000c001d5c4                SoundPort::~SoundPort()
                0x00000000c001d5f8                SoundPort::unpause()
                0x00000000c001d604                SoundPort::pause()
                0x00000000c001d610                SoundPort::getBufferUsed()
                0x00000000c001d618                SoundPort::getBufferSize()
                0x00000000c001d620                SoundPort::buffer8(signed char*, int)
                0x00000000c001d6b4                SoundPort::buffer16(short*, int)
                0x00000000c001d748                SoundPort::buffer32(int*, int)
                0x00000000c001d7d4                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001d8a0                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001d95e        0x0 hw/bus/isa.32
 .text          0x00000000c001d95e      0xc23 hw/bus/pci.32
                0x00000000c001d95e                PCI::open(int, int, void*)
                0x00000000c001d97c                PCI::close(int, int, void*)
                0x00000000c001d980                PCI::PCI()
                0x00000000c001d980                PCI::PCI()
                0x00000000c001da18                PCI::readBAR8(unsigned int, int)
                0x00000000c001da34                PCI::readBAR16(unsigned int, int)
                0x00000000c001da52                PCI::readBAR32(unsigned int, int)
                0x00000000c001da6e                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001da8e                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001dab0                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001dad0                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001db46                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dbf0                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001dc14                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001dc3c                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001dc86                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001dcae                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001dcd2                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001dcf6                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001dd1e                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dd82                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001de6a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e130                PCI::checkBus(unsigned char)
                0x00000000c001e154                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e33a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e4b6                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e528                PCI::detect()
 *fill*         0x00000000c001e581        0x1 
 .text          0x00000000c001e582      0xe58 hw/diskctrl/ide.32
                0x00000000c001e582                IDE::close(int, int, void*)
                0x00000000c001e586                IDE::IDE()
                0x00000000c001e586                IDE::IDE()
                0x00000000c001e5ba                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e5cc                selectDrive(unsigned char, unsigned char)
                0x00000000c001e5ce                IDE::getBase(unsigned char)
                0x00000000c001e5e0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e6a0                IDE::read(unsigned char, unsigned char)
                0x00000000c001e74e                IDE::waitInterrupt(unsigned char)
                0x00000000c001e7b1                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001e7cd                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001e7ea                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001e834                IDE::open(int, int, void*)
                0x00000000c001ed8e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ee5e                IDE::detect()
                0x00000000c001f2cc                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f386                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f3da      0x33d hw/diskctrl/satabus.32
                0x00000000c001f3da                SATABus::close(int, int, void*)
                0x00000000c001f3de                SATABus::detect()
                0x00000000c001f3e0                SATABus::SATABus()
                0x00000000c001f3e0                SATABus::SATABus()
                0x00000000c001f466                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f498                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f4e0                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f500                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f52a                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f63a                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001f6e4                SATABus::open(int, int, void*)
 *fill*         0x00000000c001f717        0x1 
 .text          0x00000000c001f718      0x7a9 hw/diskphys/ata.32
                0x00000000c001f718                ATA::close(int, int, void*)
                0x00000000c001f73c                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001f73e                ATA::ATA()
                0x00000000c001f73e                ATA::ATA()
                0x00000000c001f76c                ATA::flush(bool)
                0x00000000c001f7ba                ATA::readyForCommand()
                0x00000000c001f806                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001fbf6                ATA::read(unsigned long long, int, void*)
                0x00000000c001fc42                ATA::write(unsigned long long, int, void*)
                0x00000000c001fc8e                ATA::detectCHS()
                0x00000000c001fcb8                ATA::open(int, int, void*)
                0x00000000c001fea3                combineCharAndColour(char, unsigned char)
                0x00000000c001feb4                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001fec1        0x1 
 .text          0x00000000c001fec2      0x618 hw/diskphys/atapi.32
                0x00000000c001fec2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001fec8                ATAPI::close(int, int, void*)
                0x00000000c001feec                ATAPI::ATAPI()
                0x00000000c001feec                ATAPI::ATAPI()
                0x00000000c001ff1a                ATAPI::readyForCommand()
                0x00000000c001ff6c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0020234                ATAPI::diskRemoved()
                0x00000000c002026e                ATAPI::eject()
                0x00000000c00202b6                ATAPI::diskInserted()
                0x00000000c00202c2                ATAPI::detectMedia()
                0x00000000c0020380                ATAPI::open(int, int, void*)
                0x00000000c0020460                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c00204da      0x44c hw/diskphys/sata.32
                0x00000000c00204da                SATA::close(int, int, void*)
                0x00000000c00204fe                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0020500                SATA::open(int, int, void*)
                0x00000000c00205b8                SATA::SATA()
                0x00000000c00205b8                SATA::SATA()
                0x00000000c00205e6                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c002086e                SATA::read(unsigned long long, int, void*)
                0x00000000c00208ba                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020926      0x5d4 hw/diskphys/satapi.32
                0x00000000c0020926                SATAPI::write(unsigned long long, int, void*)
                0x00000000c002092c                SATAPI::close(int, int, void*)
                0x00000000c0020950                SATAPI::SATAPI()
                0x00000000c0020950                SATAPI::SATAPI()
                0x00000000c002097e                SATAPI::diskRemoved()
                0x00000000c0020980                SATAPI::diskInserted()
                0x00000000c002099c                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020c7e                SATAPI::eject()
                0x00000000c0020cba                SATAPI::detectMedia()
                0x00000000c0020d10                SATAPI::open(int, int, void*)
                0x00000000c0020e10                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020efa      0x443 hw/intctrl/apic.32
                0x00000000c0020efa                IOAPIC::close(int, int, void*)
                0x00000000c0020f00                apicGetBase()
                0x00000000c0020f1e                IOAPIC::IOAPIC()
                0x00000000c0020f1e                IOAPIC::IOAPIC()
                0x00000000c0020f46                apicOpen()
                0x00000000c00210d2                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0021104                IOAPIC::read(int)
                0x00000000c002112c                IOAPIC::open(int, int, void*)
                0x00000000c0021212                IOAPIC::write(int, int)
                0x00000000c002123e                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c002133d        0x3 
 .text          0x00000000c0021340       0xf0 hw/timer/apictimer.32
                0x00000000c0021340                APICTimer::close(int, int, void*)
                0x00000000c0021348                apicTimerHandler(regs*, void*)
                0x00000000c0021370                APICTimer::open(int, int, void*)
                0x00000000c00213e0                APICTimer::write(int)
                0x00000000c0021408                APICTimer::APICTimer()
                0x00000000c0021408                APICTimer::APICTimer()
 .text          0x00000000c0021430      0x1ad hw/timer/pit.32
                0x00000000c0021430                PIT::write(int)
                0x00000000c00214b4                pitHandler(regs*, void*)
                0x00000000c00214dc                PIT::open(int, int, void*)
                0x00000000c002152c                PIT::close(int, int, void*)
                0x00000000c002155c                PIT::PIT()
                0x00000000c002155c                PIT::PIT()
 *fill*         0x00000000c00215dd        0x3 
 .text          0x00000000c00215e0       0x6f arch/i386/avx.32
                0x00000000c00215e0                avxDetect
                0x00000000c002160a                avxSave
                0x00000000c002161b                avxLoad
                0x00000000c002162c                avxInit
                0x00000000c002164e                avxClose
 *fill*         0x00000000c002164f        0x1 
 .text          0x00000000c0021650      0x2b4 arch/i386/interrupt.32
                0x00000000c0021650                isr0
                0x00000000c0021660                isr1
                0x00000000c002166a                isr2
                0x00000000c0021674                isr3
                0x00000000c002167e                isr4
                0x00000000c0021688                isr5
                0x00000000c0021692                isr6
                0x00000000c002169c                isr7
                0x00000000c00216a6                isr8
                0x00000000c00216ae                isr9
                0x00000000c00216b8                isr10
                0x00000000c00216c0                isr11
                0x00000000c00216c8                isr12
                0x00000000c00216d0                isr13
                0x00000000c00216ea                isr14
                0x00000000c00216f2                isr15
                0x00000000c00216fc                isr16
                0x00000000c0021706                isr17
                0x00000000c0021710                isr18
                0x00000000c002171a                irq3
                0x00000000c0021724                irq4
                0x00000000c002172e                irq5
                0x00000000c0021738                irq6
                0x00000000c0021742                irq7
                0x00000000c002174c                irq8
                0x00000000c0021756                irq9
                0x00000000c0021760                irq10
                0x00000000c002176a                irq11
                0x00000000c0021774                irq12
                0x00000000c002177e                irq13
                0x00000000c0021788                irq14
                0x00000000c0021792                irq15
                0x00000000c002179c                irq1
                0x00000000c00217a3                irq2
                0x00000000c00217aa                isr96
                0x00000000c00217b1                irq0
                0x00000000c00217b6                int_common_stub
                0x00000000c00217b6                syscall_common_stub
                0x00000000c00218b4                irq16
                0x00000000c00218be                irq17
                0x00000000c00218c8                irq18
                0x00000000c00218d2                irq19
                0x00000000c00218dc                irq20
                0x00000000c00218e6                irq21
                0x00000000c00218f0                irq22
                0x00000000c00218fa                irq23
 *fill*         0x00000000c0021904        0xc 
 .text          0x00000000c0021910       0x10 arch/i386/rdrand.32
                0x00000000c0021910                i386GetRDRAND
 .text          0x00000000c0021920       0x39 arch/i386/sse.32
                0x00000000c0021920                sseDetect
                0x00000000c0021938                sseSave
                0x00000000c0021940                sseLoad
                0x00000000c0021948                sseInit
                0x00000000c0021958                sseClose
 *fill*         0x00000000c0021959        0x7 
 .text          0x00000000c0021960       0x4f arch/i386/x87.32
                0x00000000c0021966                x87Detect
                0x00000000c0021987                x87Save
                0x00000000c002198e                x87Load
                0x00000000c0021995                x87Init
                0x00000000c00219ae                x87Close
 *fill*         0x00000000c00219af        0x1 
 .text          0x00000000c00219b0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00219d5        0x0 crtn.32
 *fill*         0x00000000c00219d5        0x3 
 .text          0x00000000c00219d8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00219d8                __divdi3
 *fill*         0x00000000c0021b23        0x1 
 .text          0x00000000c0021b24      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021b24                __moddi3
 *fill*         0x00000000c0021ca2        0x2 
 .text          0x00000000c0021ca4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021ca4                __udivdi3
 *fill*         0x00000000c0021da3        0x1 
 .text          0x00000000c0021da4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021da4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021ec0        0x0
 .iplt          0x00000000c0021ec0        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021ebe        0xf
 .init          0x00000000c0021ebe        0x3 crti.32
                0x00000000c0021ebe                _init
 .init          0x00000000c0021ec1        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021ec6        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021ecb        0x2 crtn.32

.fini           0x00000000c0021ecd        0xa
 .fini          0x00000000c0021ecd        0x3 crti.32
                0x00000000c0021ecd                _fini
 .fini          0x00000000c0021ed0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021ed5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021ed8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021ed8       0x1a hal/device.32
                0x00000000c0021ed8                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021ed8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021ef2       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021ef2       0x2a hal/device.32
                0x00000000c0021ef2                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021f1c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021f1c       0xdc hal/device.32
                0x00000000c0021f1c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021ff8       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021ff8       0x42 hal/device.32
                0x00000000c0021ff8                LinkedList<Device>::LinkedList()
                0x00000000c0021ff8                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002203c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002203c       0x1c hal/timer.32
                0x00000000c002203c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0022058        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0022058        0x7 hal/timer.32
                0x00000000c0022058                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0022060       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0022060       0xbc hal/timer.32
                0x00000000c0022060                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002211c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002211c       0xda hal/timer.32
                0x00000000c002211c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c00221f8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c00221f8       0x23 hw/acpi.32
                0x00000000c00221f8                ACPI::~ACPI()
                0x00000000c00221f8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002221c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002221c       0x2a hw/acpi.32
                0x00000000c002221c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022248        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022248        0x2 hw/acpi.32
                0x00000000c0022248                LinkedList<Device>::~LinkedList()
                0x00000000c0022248                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002224c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002224c       0x1c hw/acpi.32
                0x00000000c002224c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0022268        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0022268        0x7 hw/acpi.32
                0x00000000c0022268                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022270       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0022270       0xb8 hw/acpi.32
                0x00000000c0022270                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0022328       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0022328       0x23 krnl/computer.32
                0x00000000c0022328                Computer::~Computer()
                0x00000000c0022328                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002234c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002234c       0x2a krnl/computer.32
                0x00000000c002234c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0022376       0x24
 .text._Z10idleCommonv
                0x00000000c0022376       0x24 krnl/idle.32
                0x00000000c0022376                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002239a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002239a        0x2 krnl/unixfile.32
                0x00000000c002239a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c002239a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002239c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002239c       0x42 krnl/unixfile.32
                0x00000000c002239c                LinkedList<UnixFile>::LinkedList()
                0x00000000c002239c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00223de       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00223de       0xd3 krnl/unixfile.32
                0x00000000c00223de                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00224b2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00224b2        0x7 krnl/unixfile.32
                0x00000000c00224b2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00224ba       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00224ba       0xa1 krnl/unixfile.32
                0x00000000c00224ba                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002255c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002255c        0x8 krnl/unixfile.32
                0x00000000c002255c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022564        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022564        0x8 sys/kill.32
                0x00000000c0022564                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002256c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002256c        0x2 thr/prcssthr.32
                0x00000000c002256c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002256c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022570       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022570       0x49 thr/prcssthr.32
                0x00000000c0022570                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0022570                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00225bc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00225bc       0x42 thr/prcssthr.32
                0x00000000c00225bc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00225bc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c00225fe       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00225fe       0x23 arch/i386/hal.32
                0x00000000c00225fe                CPU::~CPU()
                0x00000000c00225fe                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0022622       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0022622       0x2a arch/i386/hal.32
                0x00000000c0022622                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002264c       0x23
 .text._ZN3PCID2Ev
                0x00000000c002264c       0x23 hw/bus/pci.32
                0x00000000c002264c                PCI::~PCI()
                0x00000000c002264c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0022670       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0022670       0x2a hw/bus/pci.32
                0x00000000c0022670                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c002269a       0x23
 .text._ZN3IDED2Ev
                0x00000000c002269a       0x23 hw/diskctrl/ide.32
                0x00000000c002269a                IDE::~IDE()
                0x00000000c002269a                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00226be       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00226be       0x2a hw/diskctrl/ide.32
                0x00000000c00226be                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00226e8       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00226e8       0x23 hw/diskctrl/satabus.32
                0x00000000c00226e8                SATABus::~SATABus()
                0x00000000c00226e8                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002270c       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002270c       0x2a hw/diskctrl/satabus.32
                0x00000000c002270c                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0022736       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0022736       0x23 hw/diskphys/ata.32
                0x00000000c0022736                ATA::~ATA()
                0x00000000c0022736                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c002275a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c002275a       0x2a hw/diskphys/ata.32
                0x00000000c002275a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0022784       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0022784       0x23 hw/diskphys/atapi.32
                0x00000000c0022784                ATAPI::~ATAPI()
                0x00000000c0022784                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00227a8       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00227a8       0x2a hw/diskphys/atapi.32
                0x00000000c00227a8                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00227d2       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00227d2       0x23 hw/diskphys/sata.32
                0x00000000c00227d2                SATA::~SATA()
                0x00000000c00227d2                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c00227f6       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c00227f6       0x2a hw/diskphys/sata.32
                0x00000000c00227f6                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0022820       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0022820       0x23 hw/diskphys/satapi.32
                0x00000000c0022820                SATAPI::~SATAPI()
                0x00000000c0022820                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0022844       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0022844       0x2a hw/diskphys/satapi.32
                0x00000000c0022844                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c002286e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002286e       0x23 hw/intctrl/apic.32
                0x00000000c002286e                IOAPIC::~IOAPIC()
                0x00000000c002286e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022892       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022892       0x2a hw/intctrl/apic.32
                0x00000000c0022892                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00228bc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00228bc       0x23 hw/timer/apictimer.32
                0x00000000c00228bc                APICTimer::~APICTimer()
                0x00000000c00228bc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00228e0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00228e0       0x2a hw/timer/apictimer.32
                0x00000000c00228e0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002290c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002290c       0x23 hw/timer/pit.32
                0x00000000c002290c                PIT::~PIT()
                0x00000000c002290c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022930       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022930       0x2a hw/timer/pit.32
                0x00000000c0022930                PIT::~PIT()

.rodata         0x00000000c002295a     0x3f32
                0x00000000c002295a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002295a        0x2 
 .ctors         0x00000000c002295c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022960        0x4 krnl/unixfile.32
 .ctors         0x00000000c0022964        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022968        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002296c                end_ctors = .
                0x00000000c002296c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c002296c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022970        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022970                __DTOR_END__
                0x00000000c0022974                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022974        0xc 
 .rodata        0x00000000c0022980      0x101 acpica/utclib.32
                0x00000000c0022980                AcpiGbl_Ctypes
 *fill*         0x00000000c0022a81        0x3 
 .rodata        0x00000000c0022a84       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0022a9c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022ae6       0x1a 
 .rodata        0x00000000c0022b00       0xed fs/fat/ff.32
 *fill*         0x00000000c0022bed       0x13 
 .rodata        0x00000000c0022c00      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0023000       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002306f       0x22 dbg/kconsole.32
 *fill*         0x00000000c0023091        0x3 
 .rodata        0x00000000c0023094      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00231e4      0x169 dbg/usban.32
 *fill*         0x00000000c002334d        0x3 
 .rodata.str1.4
                0x00000000c0023350      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0023487      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c00235aa       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0023603        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023604       0x6c fs/vfs.32
                0x00000000c0023604                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0023670       0x1c fs/vfs.32
                0x00000000c0023670                vtable for File
 .rodata._ZTV9Directory
                0x00000000c002368c       0x1c fs/vfs.32
                0x00000000c002368c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00236a8       0x2c hal/bus.32
                0x00000000c00236a8                vtable for Bus
 *fill*         0x00000000c00236d4        0xc 
 .rodata        0x00000000c00236e0      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0023830       0x3c hal/clock.32
                0x00000000c0023830                vtable for Clock
 .rodata.str1.1
                0x00000000c002386c       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00238d0       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00238f2       0x15 hal/device.32
 *fill*         0x00000000c0023907        0x1 
 .rodata._ZTV6Device
                0x00000000c0023908       0x2c hal/device.32
                0x00000000c0023908                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023934       0x2c hal/device.32
                0x00000000c0023934                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023960       0x2c hal/diskctrl.32
                0x00000000c0023960                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002398c       0x38 hal/diskphys.32
                0x00000000c002398c                vtable for PhysicalDisk
 .rodata        0x00000000c00239c4       0x53 hal/keybrd.32
 *fill*         0x00000000c0023a17        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023a18       0x34 hal/keybrd.32
                0x00000000c0023a18                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0023a4c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0023a90       0x2c hal/logidisk.32
                0x00000000c0023a90                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0023abc       0x2c hal/mouse.32
                0x00000000c0023abc                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023ae8       0x34 hal/nic.32
                0x00000000c0023ae8                vtable for NIC
 .rodata.str1.1
                0x00000000c0023b1c        0xb hal/partition.32
 *fill*         0x00000000c0023b27        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023b28       0x44 hal/serial.32
                0x00000000c0023b28                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023b6c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023bb7        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023bbf       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023bbf       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0023bbf       0x45 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0023c04       0x30 hal/timer.32
                0x00000000c0023c04                vtable for Timer
 .rodata.str1.1
                0x00000000c0023c34       0x3e hal/vcache.32
 *fill*         0x00000000c0023c72        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023c74       0x10 hal/vcache.32
                0x00000000c0023c74                vtable for VCache
 .rodata.str1.1
                0x00000000c0023c84       0xba hal/video.32
 *fill*         0x00000000c0023d3e        0x2 
 .rodata._ZTV5Video
                0x00000000c0023d40       0x4c hal/video.32
                0x00000000c0023d40                vtable for Video
 .rodata.str1.1
                0x00000000c0023d8c      0x19b hw/acpi.32
 *fill*         0x00000000c0023f27        0x1 
 .rodata.str1.4
                0x00000000c0023f28       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023fc3       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023fc3        0x8 hw/acpi.32
 *fill*         0x00000000c0023fc3        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023fc4       0x2c hw/acpi.32
                0x00000000c0023fc4                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023ff0       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0024003       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024043       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0024064       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0024097        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c002409a       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0024110       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c00241b9        0x3 
 .rodata.str1.4
                0x00000000c00241bc       0xb8 krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c0024274       0x2c krnl/computer.32
                0x00000000c0024274                vtable for Computer
 .rodata.str1.1
                0x00000000c00242a0       0x3c krnl/env.32
 .rodata        0x00000000c00242dc       0x7e krnl/fault.32
 .rodata.str1.1
                0x00000000c002435a        0x4 krnl/intlformat.32
 .rodata.str1.1
                0x00000000c002435e       0x11 krnl/intops.32
 *fill*         0x00000000c002435e        0x2 
 .rodata.str1.4
                0x00000000c0024360       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0024390        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c002439f       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c0024400      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024505       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c002455d       0x39 krnl/pipe.32
 *fill*         0x00000000c0024596        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0024598       0x1c krnl/pipe.32
                0x00000000c0024598                vtable for Pipe
 .rodata.str1.1
                0x00000000c00245b4       0x91 krnl/resolve.32
 *fill*         0x00000000c0024645        0x3 
 .rodata.str1.4
                0x00000000c0024648       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c0024667      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c002476f       0x50 krnl/syscalls.32
                                         0x58 (size before relaxing)
 .rodata.str1.1
                0x00000000c00247bf       0x4d krnl/terminal.32
                                         0x5e (size before relaxing)
 .rodata._ZTV7VgaText
                0x00000000c002480c       0x1c krnl/terminal.32
                0x00000000c002480c                vtable for VgaText
 .rodata        0x00000000c0024828       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0024863       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0024863       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0024863       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0024863        0x8 krnl/unixfile.32
 *fill*         0x00000000c0024863        0x1 
 .rodata.str1.4
                0x00000000c0024864       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0024884       0x22 krnl/unixfile.32
 *fill*         0x00000000c00248a6        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c00248a8       0x1c krnl/unixfile.32
                0x00000000c00248a8                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00248c4       0x1c krnl/unixfile.32
                0x00000000c00248c4                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00248e0      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024e63      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024fc4       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024fd9        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024fe8       0x13 sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024ffb       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002501c       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0025060       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0025075       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00250a1       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c00250b2      0x37d thr/elf.32
                                        0x38c (size before relaxing)
 .rodata.str1.1
                0x00000000c002542f       0x57 thr/prcssthr.32
 *fill*         0x00000000c0025486        0x2 
 .rodata.str1.4
                0x00000000c0025488       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0025580       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0025580       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0025580       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0025580        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0025580       0x61 vm86/vm8086.32
 *fill*         0x00000000c00255e1        0x3 
 .rodata.str1.4
                0x00000000c00255e4       0x81 vm86/vm8086.32
 *fill*         0x00000000c0025665        0x3 
 .rodata        0x00000000c0025668      0x390 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00259f8      0x32e arch/i386/hal.32
                                        0x341 (size before relaxing)
 *fill*         0x00000000c0025d26        0x2 
 .rodata.str1.4
                0x00000000c0025d28       0x23 arch/i386/hal.32
 *fill*         0x00000000c0025d4b        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025d4c       0x2c arch/i386/hal.32
                0x00000000c0025d4c                vtable for CPU
 .rodata.str1.4
                0x00000000c0025d78       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025dd9       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025e17       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0025e2c       0x3c arch/i386/rtc.32
                0x00000000c0025e2c                vtable for RTC
 .rodata.str1.1
                0x00000000c0025e68       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025ea9        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025eac       0x6c fs/fat/vfslink.32
                0x00000000c0025eac                vtable for FAT
 .rodata.str1.1
                0x00000000c0025f18       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025f18      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0026050       0x6c fs/iso9660/vfslink.32
                0x00000000c0026050                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00260bc       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0026100       0x34 hal/sound/sndcard.32
                0x00000000c0026100                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0026134       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0026173       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00261ab       0xa1 hw/bus/pci.32
 .rodata        0x00000000c002624c       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00262b0       0x2c hw/bus/pci.32
                0x00000000c00262b0                vtable for PCI
 .rodata.str1.1
                0x00000000c00262dc      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0026400       0x2c hw/diskctrl/ide.32
                0x00000000c0026400                vtable for IDE
 .rodata.str1.4
                0x00000000c002642c       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0026450       0x2c hw/diskctrl/satabus.32
                0x00000000c0026450                vtable for SATABus
 .rodata.str1.1
                0x00000000c002647c       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0026537        0x1 
 .rodata._ZTV3ATA
                0x00000000c0026538       0x38 hw/diskphys/ata.32
                0x00000000c0026538                vtable for ATA
 .rodata.str1.1
                0x00000000c0026570        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c002657d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0026580       0x38 hw/diskphys/atapi.32
                0x00000000c0026580                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00265b8       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0026640       0x38 hw/diskphys/sata.32
                0x00000000c0026640                vtable for SATA
 .rodata.str1.1
                0x00000000c0026678       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0026762        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0026764       0x38 hw/diskphys/satapi.32
                0x00000000c0026764                vtable for SATAPI
 .rodata        0x00000000c002679c       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c00267c2        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c00267c4       0x2c hw/intctrl/apic.32
                0x00000000c00267c4                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00267f0       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002680b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002680c       0x30 hw/timer/apictimer.32
                0x00000000c002680c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002683c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0026859        0x3 
 .rodata._ZTV3PIT
                0x00000000c002685c       0x30 hw/timer/pit.32
                0x00000000c002685c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002688c      0xa79
 *(.data)
 .data          0x00000000c002688c        0x0 crti.32
 .data          0x00000000c002688c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002688c                __dso_handle
 .data          0x00000000c0026890        0x0 acpica/utclib.32
 .data          0x00000000c0026890        0x0 krnl/malloc.32
 .data          0x00000000c0026890        0x0 libk/ctype.32
 .data          0x00000000c0026890        0x0 libk/string.32
 .data          0x00000000c0026890        0x0 arch/i386/cc.32
 .data          0x00000000c0026890        0x0 fs/fat/diskio.32
 .data          0x00000000c0026890        0x0 fs/fat/ff.32
 .data          0x00000000c0026890        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0026890        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0026890        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0026890        0x0 dbg/kconsole.32
 *fill*         0x00000000c0026890       0x10 
 .data          0x00000000c00268a0       0x28 dbg/usban.32
                0x00000000c00268a0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00268c8        0x0 fs/symlink.32
 .data          0x00000000c00268c8        0x0 fs/vfs.32
 .data          0x00000000c00268c8        0x0 hal/bus.32
 .data          0x00000000c00268c8        0x0 hal/buzzer.32
 .data          0x00000000c00268c8        0x0 hal/clock.32
 .data          0x00000000c00268c8        0x0 hal/device.32
 .data          0x00000000c00268c8        0x0 hal/diskctrl.32
 .data          0x00000000c00268c8        0x0 hal/diskphys.32
 .data          0x00000000c00268c8        0x0 hal/fpu.32
 .data          0x00000000c00268c8        0x0 hal/keybrd.32
 .data          0x00000000c00268c8        0x0 hal/logidisk.32
 .data          0x00000000c00268c8        0x0 hal/mouse.32
 .data          0x00000000c00268c8        0x0 hal/nic.32
 .data          0x00000000c00268c8        0x0 hal/partition.32
 .data          0x00000000c00268c8        0x0 hal/serial.32
 .data          0x00000000c00268c8        0x0 hal/timer.32
 .data          0x00000000c00268c8        0x0 hal/vcache.32
 .data          0x00000000c00268c8        0x0 hal/video.32
 .data          0x00000000c00268c8       0x10 hw/acpi.32
                0x00000000c00268c8                legacyIRQRemaps
 .data          0x00000000c00268d8        0x0 krnl/assert.32
 .data          0x00000000c00268d8        0x0 krnl/atexit.32
 .data          0x00000000c00268d8        0x0 krnl/bootmsg.32
 .data          0x00000000c00268d8        0x4 krnl/c++.32
                0x00000000c00268d8                __stack_chk_guard
 .data          0x00000000c00268dc        0x0 krnl/cdefs.32
 *fill*         0x00000000c00268dc        0x4 
 .data          0x00000000c00268e0      0x100 krnl/cm.32
                0x00000000c00268e0                CmComponents
 .data          0x00000000c00269e0        0x0 krnl/compat.32
 .data          0x00000000c00269e0        0x0 krnl/computer.32
 .data          0x00000000c00269e0      0x400 krnl/crc32.32
                0x00000000c00269e0                KiPolyLookupCRC32
 .data          0x00000000c0026de0       0x4d krnl/env.32
                0x00000000c0026de0                defaultSysEnv
 .data          0x00000000c0026e2d        0x0 krnl/fault.32
 .data          0x00000000c0026e2d        0x0 krnl/gdt.32
 .data          0x00000000c0026e2d        0x0 krnl/idle.32
 .data          0x00000000c0026e2d        0x0 krnl/idt.32
 .data          0x00000000c0026e2d        0x0 krnl/inlines.32
 .data          0x00000000c0026e2d        0x0 krnl/intlformat.32
 .data          0x00000000c0026e2d        0x0 krnl/intops.32
 *fill*         0x00000000c0026e2d        0x3 
 .data          0x00000000c0026e30        0x4 krnl/kheap.32
 .data          0x00000000c0026e34        0x0 krnl/mailbox.32
 .data          0x00000000c0026e34        0x0 krnl/main.32
 .data          0x00000000c0026e34        0x0 krnl/mutex.32
 .data          0x00000000c0026e34        0x0 krnl/panic.32
 .data          0x00000000c0026e34        0x4 krnl/physmgr.32
                0x00000000c0026e34                Phys::bitmap
 .data          0x00000000c0026e38        0x0 krnl/pipe.32
 .data          0x00000000c0026e38        0x0 krnl/powctrl.32
 .data          0x00000000c0026e38        0x0 krnl/random.32
 .data          0x00000000c0026e38        0x0 krnl/resolve.32
 .data          0x00000000c0026e38        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026e38        0x8 
 .data          0x00000000c0026e40       0x4c krnl/signal.32
                0x00000000c0026e40                KiDefaultSignalHandlers
 *fill*         0x00000000c0026e8c       0x14 
 .data          0x00000000c0026ea0      0x124 krnl/syscalls.32
                0x00000000c0026ea0                systemCallHandlers
 *fill*         0x00000000c0026fc4       0x1c 
 .data          0x00000000c0026fe0       0x60 krnl/terminal.32
                0x00000000c0026fe0                VgaText::hiddenOut
                0x00000000c0027000                ansiToVGAMappings
 .data          0x00000000c0027040        0x0 krnl/tss.32
 .data          0x00000000c0027040        0x4 krnl/unixfile.32
                0x00000000c0027040                UnixFile::nextFd
 .data          0x00000000c0027044       0x15 krnl/virtmgr.32
                0x00000000c0027044                Virt::pageAllocPtr
                0x00000000c0027048                Virt::bitmap
                0x00000000c002704c                Virt::swapfileSectorsPerPage
                0x00000000c0027050                Virt::swapfileLength
                0x00000000c0027054                Virt::swapfileSector
                0x00000000c0027058                Virt::swapfileDrive
 .data          0x00000000c0027059        0x0 sys/alarm.32
 .data          0x00000000c0027059        0x0 sys/eject.32
 .data          0x00000000c0027059        0x0 sys/exit.32
 .data          0x00000000c0027059        0x0 sys/getcwd.32
 .data          0x00000000c0027059        0x0 sys/getpid.32
 .data          0x00000000c0027059        0x0 sys/getramdata.32
 .data          0x00000000c0027059        0x0 sys/getvgaptr.32
 .data          0x00000000c0027059        0x0 sys/kill.32
 .data          0x00000000c0027059        0x0 sys/loaddll.32
 .data          0x00000000c0027059        0x0 sys/pause.32
 .data          0x00000000c0027059        0x0 sys/pthread.32
 .data          0x00000000c0027059        0x0 sys/read.32
 .data          0x00000000c0027059        0x0 sys/registersignal.32
 .data          0x00000000c0027059        0x0 sys/registry.32
 .data          0x00000000c0027059        0x0 sys/sbrk.32
 .data          0x00000000c0027059        0x0 sys/setcwd.32
 .data          0x00000000c0027059        0x0 sys/settime.32
 .data          0x00000000c0027059        0x0 sys/symlink.32
 .data          0x00000000c0027059        0x0 sys/timezone.32
 .data          0x00000000c0027059        0x0 sys/truncate.32
 .data          0x00000000c0027059        0x0 sys/write.32
 .data          0x00000000c0027059        0x0 sys/wsbe.32
 .data          0x00000000c0027059        0x0 sys/yield.32
 .data          0x00000000c0027059        0x0 thr/alarm.32
 .data          0x00000000c0027059        0x0 thr/elf.32
 .data          0x00000000c0027059        0x0 thr/exec.32
 *fill*         0x00000000c0027059        0x3 
 .data          0x00000000c002705c        0x4 thr/prcssthr.32
                0x00000000c002705c                Thr::nextPID
 .data          0x00000000c0027060        0x0 vm86/vm8086.32
 .data          0x00000000c0027060      0x2a4 arch/i386/hal.32
                0x00000000c0027060                exceptionNames
                0x00000000c0027300                lastCode
 .data          0x00000000c0027304        0x0 arch/i386/intctrl.32
 .data          0x00000000c0027304        0x0 arch/i386/pic.32
 .data          0x00000000c0027304        0x0 arch/i386/rtc.32
 .data          0x00000000c0027304        0x0 arch/i386/vga.32
 .data          0x00000000c0027304        0x0 fs/fat/vfslink.32
 .data          0x00000000c0027304        0x0 fs/iso9660/helper.32
 .data          0x00000000c0027304        0x1 fs/iso9660/vfslink.32
                0x00000000c0027304                recentDriveletter
 .data          0x00000000c0027305        0x0 hal/sound/sndcard.32
 .data          0x00000000c0027305        0x0 hal/sound/sndport.32
 .data          0x00000000c0027305        0x0 hw/bus/isa.32
 .data          0x00000000c0027305        0x0 hw/bus/pci.32
 .data          0x00000000c0027305        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0027305        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0027305        0x0 hw/diskphys/ata.32
 .data          0x00000000c0027305        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0027305        0x0 hw/diskphys/sata.32
 .data          0x00000000c0027305        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0027305        0x0 hw/intctrl/apic.32
 .data          0x00000000c0027305        0x0 hw/timer/apictimer.32
 .data          0x00000000c0027305        0x0 hw/timer/pit.32
 .data          0x00000000c0027305        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0027305        0x0 crtn.32
 .data          0x00000000c0027305        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0027305        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0027305        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0027305        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0027308        0x0
 .got           0x00000000c0027308        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0027308        0x0
 .got.plt       0x00000000c0027308        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0027308        0x0
 .igot.plt      0x00000000c0027308        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0027308        0x0
 .tm_clone_table
                0x00000000c0027308        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0027308        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0027305      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0027305        0x3 
 .eh_frame      0x00000000c0027308        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0027308        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0027308       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0027360       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00273a0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002740c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0028000       0x7d
 *(userkernel)
 userkernel     0x00000000c0028000       0x52 krnl/signal.32
                0x00000000c0028000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002802c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0028052       0x2b krnl/syscalls.32
                0x00000000c0028052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0029000        0x1
 *(align_previous)
 align_previous
                0x00000000c0029000        0x1 krnl/signal.32
                0x00000000c0029000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0029004        0x0
 .rel.got       0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0029001     0x74a7
                0x00000000c0029001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0029001       0x1f 
 COMMON         0x00000000c0029020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0029020                dcache
                0x00000000c0029060                cdDriveLetter
                0x00000000c0029080                icache
 *(.bss)
 .bss           0x00000000c00290c0        0x0 crti.32
 .bss           0x00000000c00290c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00290e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00290e4       0x1c 
 .bss           0x00000000c0029100      0x378 krnl/malloc.32
 .bss           0x00000000c0029478        0x0 libk/ctype.32
 .bss           0x00000000c0029478        0x0 libk/string.32
 .bss           0x00000000c0029478        0x0 arch/i386/cc.32
 .bss           0x00000000c0029478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0029478        0x8 
 .bss           0x00000000c0029480       0x88 fs/fat/ff.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0029508       0x18 
 .bss           0x00000000c0029520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0029eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0029eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0029eb8        0x8 
 .bss           0x00000000c0029ec0     0x2444 fs/symlink.32
                0x00000000c0029ec0                kiNumWaitingRoomSymlinks
                0x00000000c0029ee0                kiNewlyCreatedIDs
                0x00000000c0029f00                kiNewlyCreatedSymlinks
                0x00000000c002a300                kiSymlinkHashTable
                0x00000000c002c300                kiBaseSymlinkID
 .bss           0x00000000c002c304        0x4 fs/vfs.32
                0x00000000c002c304                installedFilesystems
 .bss           0x00000000c002c308        0x0 hal/bus.32
 .bss           0x00000000c002c308        0x0 hal/buzzer.32
 *fill*         0x00000000c002c308       0x18 
 .bss           0x00000000c002c320      0x348 hal/clock.32
                0x00000000c002c320                keLoadedTimezones
                0x00000000c002c324                keNumberOfTimezones
                0x00000000c002c340                keTimezoneStrings
                0x00000000c002c660                keDstOn
                0x00000000c002c661                keTimezoneHalfHourOffset
                0x00000000c002c664                keTimezoneHourOffset
 .bss           0x00000000c002c668        0x0 hal/device.32
 .bss           0x00000000c002c668        0x0 hal/diskctrl.32
 .bss           0x00000000c002c668        0x0 hal/diskphys.32
 .bss           0x00000000c002c668        0x0 hal/fpu.32
 *fill*         0x00000000c002c668       0x18 
 .bss           0x00000000c002c680      0x428 hal/keybrd.32
                0x00000000c002c680                keyboardWaitingTaskList
                0x00000000c002c684                keyboardSetupYet
                0x00000000c002c688                guiKeyboardHandler
                0x00000000c002c6a0                keystates
 *fill*         0x00000000c002caa8       0x18 
 .bss           0x00000000c002cac0       0x88 hal/logidisk.32
                0x00000000c002cac0                diskAssignments
                0x00000000c002cae0                disks
 .bss           0x00000000c002cb48        0x4 hal/mouse.32
                0x00000000c002cb48                guiMouseHandler
 .bss           0x00000000c002cb4c        0x0 hal/nic.32
 .bss           0x00000000c002cb4c        0x0 hal/partition.32
 .bss           0x00000000c002cb4c        0x0 hal/serial.32
 *fill*         0x00000000c002cb4c        0x4 
 .bss           0x00000000c002cb50        0x8 hal/timer.32
                0x00000000c002cb50                milliTenthsSinceBoot
 .bss           0x00000000c002cb58        0x0 hal/vcache.32
 .bss           0x00000000c002cb58        0x4 hal/video.32
                0x00000000c002cb58                screen
 *fill*         0x00000000c002cb5c        0x4 
 .bss           0x00000000c002cb60      0x480 hw/acpi.32
                0x00000000c002cb60                nextACPITable
                0x00000000c002cb80                acpiTables
                0x00000000c002cd80                usingXSDT
                0x00000000c002cd84                RSDTpointer
                0x00000000c002cd88                RSDPpointer
                0x00000000c002cd8c                nextAPICNMI
                0x00000000c002cda0                apicNMIInfo
                0x00000000c002ce20                legacyIRQFlags
                0x00000000c002ce40                ioapicDiscoveryNumber
                0x00000000c002ce60                ioapicFoundInMADT
                0x00000000c002ce80                ioapicAddresses
                0x00000000c002cf00                ioapicGSIBase
                0x00000000c002cf80                processorDiscoveryNumber
                0x00000000c002cfa0                matchingAPICID
                0x00000000c002cfc0                processorID
 .bss           0x00000000c002cfe0        0x0 krnl/assert.32
 .bss           0x00000000c002cfe0       0xe0 krnl/atexit.32
                0x00000000c002cfe0                KiNextAtexitHandler
                0x00000000c002d000                KiAtexitContexts
                0x00000000c002d060                KiAtexitHandlers
 .bss           0x00000000c002d0c0        0x0 krnl/bootmsg.32
 .bss           0x00000000c002d0c0        0x0 krnl/c++.32
 .bss           0x00000000c002d0c0        0x0 krnl/cdefs.32
 .bss           0x00000000c002d0c0        0x4 krnl/cm.32
 .bss           0x00000000c002d0c4        0x0 krnl/compat.32
 .bss           0x00000000c002d0c4       0x12 krnl/computer.32
                0x00000000c002d0c4                systemSleepFunction
                0x00000000c002d0c8                systemResetFunction
                0x00000000c002d0cc                systemShutdownFunction
                0x00000000c002d0d0                Krnl::computer
                0x00000000c002d0d4                KeIsPreemptionOn
                0x00000000c002d0d5                KeIsSchedulingOn
 .bss           0x00000000c002d0d6        0x0 krnl/crc32.32
 *fill*         0x00000000c002d0d6        0x2 
 .bss           0x00000000c002d0d8        0x8 krnl/env.32
                0x00000000c002d0d8                KeUserEnv
                0x00000000c002d0dc                KeSystemEnv
 .bss           0x00000000c002d0e0     0x2000 krnl/fault.32
                0x00000000c002d0e0                keInterruptContexts
                0x00000000c002e0e0                keInterruptHandlers
 .bss           0x00000000c002f0e0        0x6 krnl/gdt.32
                0x00000000c002f0e0                gdtDescr
 .bss           0x00000000c002f0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002f0e6        0x2 
 .bss           0x00000000c002f0e8        0x6 krnl/idt.32
                0x00000000c002f0e8                idtDescr
 .bss           0x00000000c002f0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002f0ee       0x12 
 .bss           0x00000000c002f100       0x24 krnl/intlformat.32
                0x00000000c002f100                keLocale
 .bss           0x00000000c002f124        0x0 krnl/intops.32
 .bss           0x00000000c002f124        0x0 krnl/kheap.32
 .bss           0x00000000c002f124        0x0 krnl/mailbox.32
 .bss           0x00000000c002f124        0x4 krnl/main.32
                0x00000000c002f124                keBootSettings
 .bss           0x00000000c002f128        0x0 krnl/mutex.32
 .bss           0x00000000c002f128        0x1 krnl/panic.32
                0x00000000c002f128                KeIsKernelInPanic
 *fill*         0x00000000c002f129        0x3 
 .bss           0x00000000c002f12c       0x29 krnl/physmgr.32
                0x00000000c002f12c                Phys::forbidEvictions
                0x00000000c002f130                Phys::currentPagePointer
                0x00000000c002f134                Phys::highestMem
                0x00000000c002f138                Phys::oldPercent
                0x00000000c002f13c                Phys::usedPages
                0x00000000c002f140                Phys::usablePages
                0x00000000c002f144                Phys::dmaUsage
 .bss           0x00000000c002f155        0x0 krnl/pipe.32
 *fill*         0x00000000c002f155        0xb 
 .bss           0x00000000c002f160       0x48 krnl/powctrl.32
                0x00000000c002f160                powCtrlOnBattery
                0x00000000c002f180                currentPowerSettings
                0x00000000c002f1a4                secondsSinceLastUserIO
 .bss           0x00000000c002f1a8        0x8 krnl/random.32
                0x00000000c002f1a8                kiRandSeed
 .bss           0x00000000c002f1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002f1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002f1b0        0x0 krnl/signal.32
 .bss           0x00000000c002f1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002f1b0        0x9 krnl/terminal.32
                0x00000000c002f1b0                terminalCycle
                0x00000000c002f1b4                activeTerminal
                0x00000000c002f1b8                VgaText::graphicMode
 *fill*         0x00000000c002f1b9        0x1 
 .bss           0x00000000c002f1ba        0x2 krnl/tss.32
                0x00000000c002f1ba                doubleFaultSelector
 *fill*         0x00000000c002f1bc        0x4 
 .bss           0x00000000c002f1c0       0x84 krnl/unixfile.32
                0x00000000c002f1c0                sfileLpt
                0x00000000c002f200                sfileCom
                0x00000000c002f224                sfileNul
                0x00000000c002f228                sfilePnt
                0x00000000c002f22c                sfileAux
                0x00000000c002f230                sfileCon
                0x00000000c002f234                initialFilesAdded
                0x00000000c002f238                unixFileLinkedList
 .bss           0x00000000c002f244       0x10 krnl/virtmgr.32
                0x00000000c002f244                twswaps
                0x00000000c002f248                swapBalance
                0x00000000c002f24c                Virt::swapfileBitmap
                0x00000000c002f250                keFirstVAS
 .bss           0x00000000c002f254        0x0 sys/alarm.32
 .bss           0x00000000c002f254        0x0 sys/eject.32
 .bss           0x00000000c002f254        0x0 sys/exit.32
 .bss           0x00000000c002f254        0x0 sys/getcwd.32
 .bss           0x00000000c002f254        0x0 sys/getpid.32
 .bss           0x00000000c002f254        0x0 sys/getramdata.32
 .bss           0x00000000c002f254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002f254        0x0 sys/kill.32
 .bss           0x00000000c002f254        0x0 sys/loaddll.32
 .bss           0x00000000c002f254        0x0 sys/pause.32
 .bss           0x00000000c002f254        0x0 sys/pthread.32
 .bss           0x00000000c002f254        0x0 sys/read.32
 .bss           0x00000000c002f254        0x0 sys/registersignal.32
 .bss           0x00000000c002f254        0x0 sys/registry.32
 .bss           0x00000000c002f254        0x0 sys/sbrk.32
 .bss           0x00000000c002f254        0x0 sys/setcwd.32
 .bss           0x00000000c002f254        0x0 sys/settime.32
 .bss           0x00000000c002f254        0x0 sys/symlink.32
 .bss           0x00000000c002f254        0x0 sys/timezone.32
 .bss           0x00000000c002f254        0x0 sys/truncate.32
 .bss           0x00000000c002f254        0x0 sys/write.32
 .bss           0x00000000c002f254        0x0 sys/wsbe.32
 .bss           0x00000000c002f254        0x0 sys/yield.32
 .bss           0x00000000c002f254        0x0 thr/alarm.32
 *fill*         0x00000000c002f254        0xc 
 .bss           0x00000000c002f260      0x7a4 thr/elf.32
                0x00000000c002f260                Thr::driverLookupNext
                0x00000000c002f280                Thr::driverLookupLen
                0x00000000c002f480                Thr::driverLookupAddr
                0x00000000c002f680                Thr::driverNameLookup
                0x00000000c002f880                Thr::kernelSymbols
                0x00000000c002f900                Thr::kernelStringTable
                0x00000000c002f980                Thr::kernelSymbolTable
                0x00000000c002fa00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002fa04        0x0 thr/exec.32
 *fill*         0x00000000c002fa04        0x4 
 .bss           0x00000000c002fa08       0x70 thr/prcssthr.32
                0x00000000c002fa08                KiRestorePreemptionValue
                0x00000000c002fa0c                KiPreemptionDisableCounter
                0x00000000c002fa10                cleanerThread
                0x00000000c002fa14                weNeedTheCleanerToNotBlock
                0x00000000c002fa18                retValLockStuff
                0x00000000c002fa1c                retValSchedLock
                0x00000000c002fa20                lockStuffLock
                0x00000000c002fa24                schedulerLock
                0x00000000c002fa28                taskSwitchesPostponedFlag
                0x00000000c002fa2c                postponeTaskSwitchesCounter
                0x00000000c002fa30                irqDisableCounter
                0x00000000c002fa34                terminatedTaskList
                0x00000000c002fa40                sleepingTaskList
                0x00000000c002fa4c                taskList
                0x00000000c002fa58                kernelProcess
 *fill*         0x00000000c002fa78        0x8 
 .bss           0x00000000c002fa80       0x40 vm86/vm8086.32
                0x00000000c002fa80                Vm::started8086Yet
                0x00000000c002fa84                Vm::vmRetV
                0x00000000c002fa88                Vm::vmDone
                0x00000000c002fa89                Vm::vmReady
                0x00000000c002fa8c                Vm::vm86Thread
                0x00000000c002fa90                Vm::vmToHostCommsPtr
                0x00000000c002faa0                Vm::vmToHostComms
 .bss           0x00000000c002fac0       0x54 arch/i386/hal.32
                0x00000000c002fac0                apic
                0x00000000c002fac4                guiPanicHandler
                0x00000000c002fac8                fpuOwner
                0x00000000c002facc                coproLoadFunc
                0x00000000c002fad0                coproSaveFunc
                0x00000000c002fad4                lastD
                0x00000000c002fad8                lastC
                0x00000000c002fadc                lastB
                0x00000000c002fae0                lastA
                0x00000000c002fae4                HalPageWriteCombiningFlag
                0x00000000c002fae8                HalPageGlobalFlag
                0x00000000c002faec                nmi
                0x00000000c002faf0                vendorIDString
                0x00000000c002fafd                familyID
                0x00000000c002fafe                model
                0x00000000c002faff                processorType
                0x00000000c002fb00                steppingID
                0x00000000c002fb04                vendor
                0x00000000c002fb08                opcodeDetectionMode
                0x00000000c002fb0c                features
 .bss           0x00000000c002fb14        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002fb14        0x0 arch/i386/pic.32
 .bss           0x00000000c002fb14        0x2 arch/i386/rtc.32
 .bss           0x00000000c002fb16        0x0 arch/i386/vga.32
 *fill*         0x00000000c002fb16        0xa 
 .bss           0x00000000c002fb20       0xf0 fs/fat/vfslink.32
                0x00000000c002fb20                FAT::fats
                0x00000000c002fb40                FAT::vfsToFatRemaps
                0x00000000c002fbc0                fatToVFSRemaps
 .bss           0x00000000c002fc10        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002fc10       0x10 
 .bss           0x00000000c002fc20      0x820 fs/iso9660/vfslink.32
                0x00000000c002fc20                iso9660Owner
                0x00000000c002fc24                recentSector
                0x00000000c002fc40                recentBuffer
 .bss           0x00000000c0030440        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0030440        0x0 hal/sound/sndport.32
 .bss           0x00000000c0030440        0x0 hw/bus/isa.32
 .bss           0x00000000c0030440        0xd hw/bus/pci.32
                0x00000000c0030440                thePCI
 .bss           0x00000000c003044d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c003044d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c003044d        0x3 
 .bss           0x00000000c0030450        0x8 hw/diskphys/ata.32
                0x00000000c0030450                ataSectorsWritten
                0x00000000c0030454                ataSectorsRead
 .bss           0x00000000c0030458        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0030458        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0030458        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0030458        0x8 
 .bss           0x00000000c0030460       0x41 hw/intctrl/apic.32
                0x00000000c0030460                noOfIOAPICs
                0x00000000c0030480                ioapics
                0x00000000c00304a0                IOAPICsSetupYet
 .bss           0x00000000c00304a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00304a1        0x3 
 .bss           0x00000000c00304a4        0x4 hw/timer/pit.32
                0x00000000c00304a4                pitFreq
 .bss           0x00000000c00304a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00304a8        0x0 crtn.32
 .bss           0x00000000c00304a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00304a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00304a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00304a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00304a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003794f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
