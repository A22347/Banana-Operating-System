Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                              hal/sound/sndhw.32 (__addsf3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                              hal/libresample/src_linear.32 (__adddf3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                              hal/libresample/samplerate.32 (__truncdfsf2)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD net/ethernet.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x285f8
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x4ed D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                voodooXADD
                0x00000000c000027f                doTPAUSE
                0x00000000c0000289                hasLegacyFPU
                0x00000000c00002ae                is486
                0x00000000c00002e4                detectCPUID
                0x00000000c00002fa                goToVM86
                0x00000000c000032a                goToUsermode
                0x00000000c0000354                switchToThreadASMFirstTime
                0x00000000c0000362                switchToThreadASM
                0x00000000c00003ea                asmQuickAcquireLock
                0x00000000c0000408                asmQuickReleaseLock
                0x00000000c0000414                asmAcquireLock
                0x00000000c0000435                asmReleaseLock
                0x00000000c0000448                loadGDT
                0x00000000c0000468                isr0
                0x00000000c0000478                isr1
                0x00000000c0000482                isr2
                0x00000000c000048c                isr3
                0x00000000c0000496                isr4
                0x00000000c00004a0                isr5
                0x00000000c00004aa                isr6
                0x00000000c00004b4                isr7
                0x00000000c00004be                isr8
                0x00000000c00004c6                isr9
                0x00000000c00004d0                isr10
                0x00000000c00004d8                isr11
                0x00000000c00004e0                isr12
                0x00000000c00004e8                isr13
                0x00000000c00004f0                isr14
                0x00000000c00004f8                isr15
                0x00000000c0000502                isr16
                0x00000000c000050c                isr17
                0x00000000c0000516                isr18
                0x00000000c0000520                irq3
                0x00000000c000052a                irq4
                0x00000000c0000534                irq5
                0x00000000c000053e                irq6
                0x00000000c0000548                irq7
                0x00000000c0000552                irq8
                0x00000000c000055c                irq9
                0x00000000c0000566                irq10
                0x00000000c0000570                irq11
                0x00000000c000057a                irq12
                0x00000000c0000584                irq13
                0x00000000c000058e                irq14
                0x00000000c0000598                irq15
                0x00000000c00005a2                irq1
                0x00000000c00005a9                irq2
                0x00000000c00005b0                isr96
                0x00000000c00005b7                irq0
                0x00000000c00005bc                int_common_stub
                0x00000000c00005bc                syscall_common_stub
                0x00000000c00005ed                irq16
                0x00000000c00005f7                irq17
                0x00000000c0000601                irq18
                0x00000000c000060b                irq19
                0x00000000c0000615                irq20
                0x00000000c000061f                irq21
                0x00000000c0000629                irq22
                0x00000000c0000633                irq23
 *fill*         0x00000000c000063d        0x3 
 .text          0x00000000c0000640      0x611 acpica/utclib.32
                0x00000000c0000640                memcmp
                0x00000000c000067c                memmove
                0x00000000c0000744                memcpy
                0x00000000c0000778                memset
                0x00000000c0000794                strlen
                0x00000000c00007ac                strpbrk
                0x00000000c00007e8                strtok
                0x00000000c0000834                strcpy
                0x00000000c0000858                strncpy
                0x00000000c00008c0                strcmp
                0x00000000c0000900                strchr
                0x00000000c0000924                strncmp
                0x00000000c0000974                strcat
                0x00000000c00009a4                strncat
                0x00000000c00009e0                strstr
                0x00000000c0000a28                toupper
                0x00000000c0000a3c                tolower
                0x00000000c0000a50                simple_strtoul
 .text          0x00000000c0000c51      0xfbf core/malloc.32
                0x00000000c0000dbc                dlfree
                0x00000000c0001117                dlmalloc
                0x00000000c0001654                dlrealloc
                0x00000000c0001809                dlmemalign
                0x00000000c000192c                dlcalloc
                0x00000000c00019c6                dlcfree
                0x00000000c00019cb                dlindependent_calloc
                0x00000000c00019f0                dlindependent_comalloc
                0x00000000c0001a07                dlvalloc
                0x00000000c0001a32                dlpvalloc
                0x00000000c0001a68                dlmalloc_trim
                0x00000000c0001a75                dlmalloc_usable_size
                0x00000000c0001aa6                dlmallinfo
                0x00000000c0001b75                dlmalloc_stats
                0x00000000c0001b86                dlmallopt
 .text          0x00000000c0001c10        0x0 libk/string.32
 .text          0x00000000c0001c10       0x51 fs/fat/diskio.32
                0x00000000c0001c10                disk_status
                0x00000000c0001c13                disk_initialize
                0x00000000c0001c16                disk_read
                0x00000000c0001c2c                disk_write
                0x00000000c0001c42                disk_ioctl
 .text          0x00000000c0001c61     0x6833 fs/fat/ff.32
                0x00000000c0004f2f                f_mount
                0x00000000c0004f91                f_open
                0x00000000c00053cd                f_read
                0x00000000c000564d                f_write
                0x00000000c0005907                f_sync
                0x00000000c0005ae3                f_close
                0x00000000c0005b12                f_lseek
                0x00000000c0005fc9                f_opendir
                0x00000000c00060cb                f_closedir
                0x00000000c00060ed                f_readdir
                0x00000000c0006188                f_stat
                0x00000000c0006217                f_getfree
                0x00000000c00063e2                f_truncate
                0x00000000c00064da                f_unlink
                0x00000000c000665d                f_mkdir
                0x00000000c0006889                f_rename
                0x00000000c0006b7c                f_chmod
                0x00000000c0006c5a                f_utime
                0x00000000c0006d38                f_getlabel
                0x00000000c0006f26                f_setlabel
                0x00000000c0007193                f_forward
                0x00000000c0007371                f_mkfs
 .text          0x00000000c0008494       0x2d fs/fat/ffsystem.32
                0x00000000c0008494                ff_memalloc
                0x00000000c00084aa                ff_memfree
 .text          0x00000000c00084c1      0x253 fs/fat/ffunicode.32
                0x00000000c00084c1                ff_uni2oem
                0x00000000c0008551                ff_oem2uni
                0x00000000c00085bd                ff_wtoupper
 .text          0x00000000c0008714      0x8fb hal/libresample/samplerate.32
                0x00000000c0008758                src_delete
                0x00000000c0008794                src_process
                0x00000000c000894a                src_callback_read
                0x00000000c0008ac7                src_set_ratio
                0x00000000c0008b31                src_get_channels
                0x00000000c0008b53                src_reset
                0x00000000c0008b9f                src_new
                0x00000000c0008c2d                src_callback_new
                0x00000000c0008c8f                src_get_name
                0x00000000c0008cc6                src_get_description
                0x00000000c0008cfd                src_get_version
                0x00000000c0008d03                src_is_valid_ratio
                0x00000000c0008d57                src_error
                0x00000000c0008d65                src_strerror
                0x00000000c0008d78                src_simple
                0x00000000c0008dcb                src_short_to_float_array
                0x00000000c0008e30                src_float_to_short_array
                0x00000000c0008eef                src_int_to_float_array
                0x00000000c0008f52                src_float_to_int_array
 .text          0x00000000c000900f      0x8cb hal/libresample/src_linear.32
                0x00000000c0009835                linear_get_name
                0x00000000c0009844                linear_get_description
                0x00000000c0009853                linear_set_converter
 .text          0x00000000c00098da     0x447c hal/libresample/src_sinc.32
                0x00000000c000dc6d                sinc_get_name
                0x00000000c000dc80                sinc_get_description
                0x00000000c000dc93                sinc_set_converter
 .text          0x00000000c000dd56      0x77c hal/libresample/src_zoh.32
                0x00000000c000e42d                zoh_get_name
                0x00000000c000e43c                zoh_get_description
                0x00000000c000e44b                zoh_set_converter
 .text          0x00000000c000e4d2       0x23 compat/inlines.32
                0x00000000c000e4d2                CPU::current()
                0x00000000c000e4df                operator new(unsigned long)
 .text          0x00000000c000e4f5      0x111 compat/resolve.32
                0x00000000c000e4f5                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c000e606      0xa17 core/computer.32
                0x00000000c000e606                Computer::close(int, int, void*)
                0x00000000c000e64a                Krnl::firstTask()
                0x00000000c000e73a                Computer::Computer()
                0x00000000c000e73a                Computer::Computer()
                0x00000000c000e896                Computer::setBootMessage(char const*)
                0x00000000c000e898                Computer::detectFeatures()
                0x00000000c000eaa2                Computer::displayFeatures()
                0x00000000c000ede8                Computer::rdmsr(unsigned int)
                0x00000000c000ee14                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000ee4c                Computer::nmiEnabled()
                0x00000000c000ee58                Computer::readCMOS(unsigned char)
                0x00000000c000ee72                Computer::enableNMI(bool)
                0x00000000c000ee8a                Computer::open(int, int, void*)
                0x00000000c000ef60                Computer::disableNMI()
                0x00000000c000ef6e                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000ef8c                Computer::handleNMI()
                0x00000000c000eff2                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000f01d        0x1 
 .text          0x00000000c000f01e      0x1b7 core/gdt.32
                0x00000000c000f01e                GDTEntry::setBase(unsigned int)
                0x00000000c000f03a                GDTEntry::setLimit(unsigned int)
                0x00000000c000f058                GDT::GDT()
                0x00000000c000f058                GDT::GDT()
                0x00000000c000f06e                GDT::addEntry(GDTEntry)
                0x00000000c000f0aa                GDT::getNumberOfEntries()
                0x00000000c000f0b2                GDT::flush()
                0x00000000c000f0d4                GDT::setup()
 .text          0x00000000c000f1d5       0x62 core/idle.32
                0x00000000c000f1d5                idleFunction(void*)
 *fill*         0x00000000c000f237        0x1 
 .text          0x00000000c000f238      0x45f core/idt.32
                0x00000000c000f238                IDTEntry::IDTEntry(bool)
                0x00000000c000f238                IDTEntry::IDTEntry(bool)
                0x00000000c000f2a6                IDTEntry::setOffset(unsigned int)
                0x00000000c000f2ba                IDT::IDT()
                0x00000000c000f2ba                IDT::IDT()
                0x00000000c000f2bc                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000f2c4                IDT::addEntry(IDTEntry, int)
                0x00000000c000f2de                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000f316                IDT::flush()
                0x00000000c000f330                IDT::setup()
 .text          0x00000000c000f697      0x203 core/kheap.32
                0x00000000c000f697                sbrk
                0x00000000c000f7a5                mmap
                0x00000000c000f7bb                munmap
                0x00000000c000f7d1                liballoc_lock()
                0x00000000c000f7e2                liballoc_unlock()
                0x00000000c000f7f3                liballoc_alloc(int)
                0x00000000c000f80e                liballoc_free(void*, int)
                0x00000000c000f82c                realloc
                0x00000000c000f840                malloc
                0x00000000c000f850                free
                0x00000000c000f860                rfree
                0x00000000c000f870                calloc
 .text          0x00000000c000f89a      0x485 core/main.32
                0x00000000c000f89a                hwTextMode_loadInData(VgaText*)
                0x00000000c000f8e5                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000f963                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000f9c1                hwTextMode_update(VgaText*)
                0x00000000c000f9c2                hwTextMode_updateCursor(VgaText*)
                0x00000000c000fa13                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000fa59                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000fb06                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000fb88                setupTextMode()
                0x00000000c000fbf8                kernel_main
 .text          0x00000000c000fd1f      0x5c8 core/physmgr.32
                0x00000000c000fd1f                Phys::allocateDMA(unsigned long)
                0x00000000c000fdc2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000fe0a                Phys::setPageState(unsigned long, bool)
                0x00000000c000fe3c                Phys::getPageState(unsigned long)
                0x00000000c000fe58                Phys::freePage(unsigned long)
                0x00000000c000fee2                Phys::allocatePage()
                0x00000000c0010025                Phys::allocateContiguousPages(int)
                0x00000000c001007f                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c00100b7                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c00102e7        0x1 
 .text          0x00000000c00102e8      0x273 core/pipe.32
                0x00000000c00102e8                Pipe::isAtty()
                0x00000000c00102ec                Pipe::~Pipe()
                0x00000000c00102ec                Pipe::~Pipe()
                0x00000000c0010310                Pipe::~Pipe()
                0x00000000c0010338                Pipe::read(unsigned long long, void*, int*)
                0x00000000c001042c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00104f4                Pipe::Pipe(int)
                0x00000000c00104f4                Pipe::Pipe(int)
 *fill*         0x00000000c001055b        0x1 
 .text          0x00000000c001055c      0xf73 core/terminal.32
                0x00000000c001055c                VgaText::isAtty()
                0x00000000c0010560                VgaText::~VgaText()
                0x00000000c0010560                VgaText::~VgaText()
                0x00000000c0010584                VgaText::~VgaText()
                0x00000000c00105ae                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00105ce                setTerminalScrollLock(bool)
                0x00000000c00105cf                addToTerminalCycle(VgaText*)
                0x00000000c00105fc                installVgaTextImplementation()
                0x00000000c0010611                scrollTerminalScrollLock(int)
                0x00000000c0010612                VgaText::load()
                0x00000000c0010666                VgaText::updateCursor()
                0x00000000c0010680                VgaText::showCursor(bool)
                0x00000000c0010690                VgaText::disableBlink(bool)
                0x00000000c00106ca                VgaText::doANSI_SGR(int)
                0x00000000c0010756                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c001076c                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0010782                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00107a2                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00107b4                VgaText::scrollScreen()
                0x00000000c0010848                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c001085a                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00108ba                VgaText::getCursorX()
                0x00000000c00108c6                VgaText::getCursorY()
                0x00000000c00108d2                VgaText::setCursor(int, int)
                0x00000000c00108f0                VgaText::setCursorX(int)
                0x00000000c001090c                VgaText::setCursorY(int)
                0x00000000c0010928                VgaText::incrementCursor(bool)
                0x00000000c0010990                VgaText::updateRAMUsageDisplay(int)
                0x00000000c00109f4                VgaText::updateDiskUsage()
                0x00000000c0010b5e                VgaText::updateTitle()
                0x00000000c0010ba4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0010bb4                VgaText::setTitleColour(VgaColour)
                0x00000000c0010bc4                VgaText::setTitle(char*)
                0x00000000c0010bea                VgaText::decrementCursor(bool)
                0x00000000c0010c12                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0010d0e                VgaText::isShowingCursor()
                0x00000000c0010d1a                VgaText::isBlinkDisabled()
                0x00000000c0010d28                VgaText::setCursorHeight(int)
                0x00000000c0010d46                VgaText::getCursorHeight()
                0x00000000c0010d51                setActiveTerminal(VgaText*)
                0x00000000c0010e03                doTerminalCycle()
                0x00000000c0010e20                VgaText::doUpdate()
                0x00000000c0010e32                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0010ff2                VgaText::clearScreen()
                0x00000000c0011056                VgaText::putchar(char)
                0x00000000c0011170                VgaText::puts(char const*)
                0x00000000c0011196                VgaText::putx(unsigned int)
                0x00000000c00111dc                VgaText::VgaText(char const*)
                0x00000000c00111dc                VgaText::VgaText(char const*)
                0x00000000c001136e                VgaText::receiveKey(unsigned char)
                0x00000000c0011456                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00114aa                newTerminal(char*)
 *fill*         0x00000000c00114cf        0x1 
 .text          0x00000000c00114d0      0x1b3 core/tss.32
                0x00000000c00114d0                TSS::TSS()
                0x00000000c00114d0                TSS::TSS()
                0x00000000c00114de                TSS::setESP(unsigned long)
                0x00000000c00114f0                TSS::flush()
                0x00000000c0011510                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0011683        0x1 
 .text          0x00000000c0011684      0x4c2 core/unixfile.32
                0x00000000c0011684                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00116da                ReservedFilename::isAtty()
                0x00000000c00116f6                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011754                UnixFile::getFileDescriptor()
                0x00000000c001175c                UnixFile::UnixFile(int)
                0x00000000c001175c                UnixFile::UnixFile(int)
                0x00000000c001190c                ReservedFilename::ReservedFilename(int)
                0x00000000c001190c                ReservedFilename::ReservedFilename(int)
                0x00000000c001193e                UnixFile::~UnixFile()
                0x00000000c001193e                UnixFile::~UnixFile()
                0x00000000c00119d6                UnixFile::~UnixFile()
                0x00000000c00119fe                ReservedFilename::~ReservedFilename()
                0x00000000c00119fe                ReservedFilename::~ReservedFilename()
                0x00000000c0011a22                ReservedFilename::~ReservedFilename()
                0x00000000c0011a49                getFromFileDescriptor(int)
 .text          0x00000000c0011b46     0x1248 core/virtmgr.32
                0x00000000c0011b46                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0011b7b                Virt::getPageState(unsigned long)
                0x00000000c0011b9f                Virt::allocateKernelVirtualPages(int)
                0x00000000c0011cb0                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0011cce                Virt::swapIDToSector(unsigned long)
                0x00000000c0011ce0                Virt::allocateSwapfilePage()
                0x00000000c0011d5e                Virt::virtualMemorySetup()
                0x00000000c0011ddd                Virt::swappingSetup()
                0x00000000c0011e3a                Virt::getAKernelVAS()
                0x00000000c0011e40                Virt::setupPageSwapping(int)
                0x00000000c0011f70                VAS::VAS()
                0x00000000c0011f70                VAS::VAS()
                0x00000000c0011fa0                VAS::VAS(VAS*)
                0x00000000c0011fa0                VAS::VAS(VAS*)
                0x00000000c0011fc4                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0011ff0                VAS::getPageTableEntry(unsigned long)
                0x00000000c001200f                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0012132                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0012156                VAS::virtualToPhysical(unsigned long)
                0x00000000c001216e                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c00121ae                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00121e0                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c001220a                VAS::~VAS()
                0x00000000c001220a                VAS::~VAS()
                0x00000000c0012376                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0012476                VAS::allocatePages(int, int)
                0x00000000c001264e                VAS::setCPUSpecific(unsigned long)
                0x00000000c001266a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0012730                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c001281e                VAS::VAS(bool)
                0x00000000c001281e                VAS::VAS(bool)
                0x00000000c0012a7a                VAS::evict(unsigned long)
                0x00000000c0012b22                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0012c1c                VAS::scanForEviction(int, int)
                0x00000000c0012cd2                mapVASFirstTime
 .text          0x00000000c0012d8e       0x95 coreobjs/c++.32
                0x00000000c0012d8e                __cxa_atexit
                0x00000000c0012d91                __cxa_finalize
                0x00000000c0012d92                __stack_chk_fail
                0x00000000c0012dfe                __cxa_pure_virtual
                0x00000000c0012e0f                operator new[](unsigned long)
                0x00000000c0012e14                operator delete(void*, unsigned long)
                0x00000000c0012e19                operator delete[](void*)
                0x00000000c0012e1e                operator delete[](void*, unsigned long)
 .text          0x00000000c0012e23      0x1ef dbg/kconsole.32
                0x00000000c0012e23                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0012e84                Dbg::logc(char)
                0x00000000c0012e9b                Dbg::logs(char*)
                0x00000000c0012eb8                Dbg::logWriteInt(unsigned int)
                0x00000000c0012ed5                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0012ef4                Dbg::kprintf(char const*, ...)
 .text          0x00000000c0013012      0xb7c fs/vfs.32
                0x00000000c0013012                File::read(unsigned long long, void*, int*)
                0x00000000c001306a                File::write(unsigned long long, void*, int*)
                0x00000000c00130c2                Directory::read(unsigned long long, void*, int*)
                0x00000000c001311a                Directory::write(unsigned long long, void*, int*)
                0x00000000c0013148                File::isAtty()
                0x00000000c001314c                Directory::isAtty()
                0x00000000c0013150                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0013156                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c001315c                File::~File()
                0x00000000c001315c                File::~File()
                0x00000000c0013180                File::~File()
                0x00000000c00131aa                Directory::~Directory()
                0x00000000c00131aa                Directory::~Directory()
                0x00000000c00131ce                Directory::~Directory()
                0x00000000c00131f8                Filesystem::Filesystem()
                0x00000000c00131f8                Filesystem::Filesystem()
                0x00000000c001321c                Filesystem::~Filesystem()
                0x00000000c001321c                Filesystem::~Filesystem()
                0x00000000c001322a                Filesystem::~Filesystem()
                0x00000000c001324e                Fs::getcwd(Process*, char*, int)
                0x00000000c0013278                Fs::initVFS()
                0x00000000c00132a2                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c001344c                File::File(char const*, Process*)
                0x00000000c001344c                File::File(char const*, Process*)
                0x00000000c00134b0                File::open(FileOpenMode)
                0x00000000c001350e                File::close()
                0x00000000c001356e                File::seek(unsigned long long)
                0x00000000c00135c4                File::tell(unsigned long long*)
                0x00000000c0013614                File::rewind()
                0x00000000c0013628                File::unlink()
                0x00000000c0013674                File::rename(char const*)
                0x00000000c00136c2                File::chfatattr(unsigned char, unsigned char)
                0x00000000c001371e                File::exists()
                0x00000000c001375c                File::stat(unsigned long long*, bool*)
                0x00000000c00137bd                Fs::setcwd(Process*, char*)
                0x00000000c00138f8                Directory::Directory(char const*, Process*)
                0x00000000c00138f8                Directory::Directory(char const*, Process*)
                0x00000000c001395c                Directory::open()
                0x00000000c00139b8                Directory::close()
                0x00000000c0013a18                Directory::unlink()
                0x00000000c0013a64                Directory::rename(char const*)
                0x00000000c0013ab2                Directory::exists()
                0x00000000c0013af0                Directory::read(dirent*)
                0x00000000c0013b3c                Directory::create()
                0x00000000c0013b88                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0013b8e       0x84 hal/bus.32
                0x00000000c0013b8e                Bus::Bus(char const*)
                0x00000000c0013b8e                Bus::Bus(char const*)
                0x00000000c0013bc4                Bus::~Bus()
                0x00000000c0013bc4                Bus::~Bus()
                0x00000000c0013be8                Bus::~Bus()
 .text          0x00000000c0013c12      0x14e hal/buzzer.32
                0x00000000c0013c12                Buzzer::Buzzer(char const*)
                0x00000000c0013c12                Buzzer::Buzzer(char const*)
                0x00000000c0013c56                Buzzer::~Buzzer()
                0x00000000c0013c56                Buzzer::~Buzzer()
                0x00000000c0013c7a                Buzzer::~Buzzer()
                0x00000000c0013ca4                Buzzer::stop()
                0x00000000c0013cb7                beepThread(void*)
                0x00000000c0013cf2                Buzzer::beep(int, int, bool)
 .text          0x00000000c0013d60      0x467 hal/clock.32
                0x00000000c0013d60                User::loadClockSettings(int)
                0x00000000c0013db2                Clock::Clock(char const*)
                0x00000000c0013db2                Clock::Clock(char const*)
                0x00000000c0013de8                Clock::~Clock()
                0x00000000c0013de8                Clock::~Clock()
                0x00000000c0013e0c                Clock::~Clock()
                0x00000000c0013e36                Clock::timeInSecondsLocal()
                0x00000000c0013e7e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0013ed7                datetimeToSeconds(datetime_t)
                0x00000000c0013ffe                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c001405e                secondsToDatetime(unsigned long long)
                0x00000000c00141a2                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c00141c7        0x1 
 .text          0x00000000c00141c8      0x4de hal/device.32
                0x00000000c00141c8                Device::hibernate()
                0x00000000c00141ca                Device::wake()
                0x00000000c00141cc                Device::detect()
                0x00000000c00141ce                Device::disableLegacy()
                0x00000000c00141d0                Device::powerSaving(PowerSavingLevel)
                0x00000000c00141d2                DriverlessDevice::close(int, int, void*)
                0x00000000c00141d6                DriverlessDevice::detect()
                0x00000000c00141d8                DriverlessDevice::open(int, int, void*)
                0x00000000c00141ec                Device::~Device()
                0x00000000c00141ec                Device::~Device()
                0x00000000c00141fa                Device::~Device()
                0x00000000c0014222                Device::findAndLoadDriver()
                0x00000000c0014224                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c001424a                Device::preOpenACPI(void*, char*, char*)
                0x00000000c001429e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00142dc                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c001431a                Device::addChild(Device*)
                0x00000000c001435e                Device::removeAllChildren()
                0x00000000c00143a4                Device::hibernateAll()
                0x00000000c00143d4                Device::wakeAll()
                0x00000000c0014404                Device::detectAll()
                0x00000000c0014434                Device::disableLegacyAll()
                0x00000000c0014464                Device::loadDriversForAll()
                0x00000000c0014490                Device::closeAll()
                0x00000000c00144c6                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00144fc                Device::setName(char const*)
                0x00000000c001450a                Device::Device(char const*)
                0x00000000c001450a                Device::Device(char const*)
                0x00000000c0014606                Device::getName()
                0x00000000c0014610                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0014610                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0014638                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c001467c                getDevicesOfType(DeviceType)
 .text          0x00000000c00146a6       0x84 hal/diskctrl.32
                0x00000000c00146a6                HardDiskController::HardDiskController(char const*)
                0x00000000c00146a6                HardDiskController::HardDiskController(char const*)
                0x00000000c00146dc                HardDiskController::~HardDiskController()
                0x00000000c00146dc                HardDiskController::~HardDiskController()
                0x00000000c0014700                HardDiskController::~HardDiskController()
 .text          0x00000000c001472a       0xf2 hal/diskphys.32
                0x00000000c001472a                PhysicalDisk::eject()
                0x00000000c001473e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c001473e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00147a6                PhysicalDisk::startCache()
                0x00000000c00147ce                PhysicalDisk::~PhysicalDisk()
                0x00000000c00147ce                PhysicalDisk::~PhysicalDisk()
                0x00000000c00147f2                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c001481c      0x13b hal/fpu.32
                0x00000000c001481c                FPU::FPU(char const*)
                0x00000000c001481c                FPU::FPU(char const*)
                0x00000000c0014852                FPU::~FPU()
                0x00000000c0014852                FPU::~FPU()
                0x00000000c0014876                FPU::~FPU()
                0x00000000c00148a0                setupFPU()
 *fill*         0x00000000c0014957        0x1 
 .text          0x00000000c0014958     0x13b7 hal/intctrl.32
                0x00000000c0014958                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0014990                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c00149e2                doubleFault(regs*, void*)
                0x00000000c00149fc                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0014a98                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0014b40                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0014bc7                nmiHandler(regs*, void*)
                0x00000000c0014bd5                int_handler
                0x00000000c0014c76                InterruptController::InterruptController(char const*)
                0x00000000c0014c76                InterruptController::InterruptController(char const*)
                0x00000000c0014d1c                InterruptController::~InterruptController()
                0x00000000c0014d1c                InterruptController::~InterruptController()
                0x00000000c0014d40                InterruptController::~InterruptController()
                0x00000000c0014d6a                displayDebugInfo(regs*)
                0x00000000c00151f9                x87EmulHandler(regs*, void*)
                0x00000000c0015228                gpFault(regs*, void*)
                0x00000000c0015261                pgFault(regs*, void*)
                0x00000000c00152ad                otherISRHandler(regs*, void*)
                0x00000000c00152cc                opcodeFault(regs*, void*)
                0x00000000c00158d2                displayProgramFault(char const*)
                0x00000000c00158fa                setupInterruptController()
                0x00000000c0015cc2                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c0015d0f        0x1 
 .text          0x00000000c0015d10      0x6c8 hal/keybrd.32
                0x00000000c0015d10                startGUI(void*)
                0x00000000c0015d6c                startGUIVESA(void*)
                0x00000000c0015dc8                sendKeyToTerminal(unsigned char)
                0x00000000c0015e34                sendKeyboardToken(KeyboardToken)
                0x00000000c0016271                clearInternalKeybuffer(VgaText*)
                0x00000000c00162a6                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c001634e                Keyboard::Keyboard(char const*)
                0x00000000c001634e                Keyboard::Keyboard(char const*)
                0x00000000c001638a                Keyboard::~Keyboard()
                0x00000000c001638a                Keyboard::~Keyboard()
                0x00000000c00163ae                Keyboard::~Keyboard()
 .text          0x00000000c00163d8      0x414 hal/logidisk.32
                0x00000000c00163d8                LogicalDisk::close(int, int, void*)
                0x00000000c00163dc                LogicalDisk::~LogicalDisk()
                0x00000000c00163dc                LogicalDisk::~LogicalDisk()
                0x00000000c0016400                LogicalDisk::~LogicalDisk()
                0x00000000c001642a                LogicalDisk::open(int, int, void*)
                0x00000000c001643e                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0016476                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c00164bc                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00164bc                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0016572                LogicalDisk::assignDriveLetter()
                0x00000000c0016628                LogicalDisk::mount()
                0x00000000c001669a                LogicalDisk::unmount()
                0x00000000c00166aa                LogicalDisk::eject()
                0x00000000c00166be                LogicalDisk::unassignDriveLetter()
                0x00000000c0016714                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0016780                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c00167ec       0x84 hal/mouse.32
                0x00000000c00167ec                Mouse::Mouse(char const*)
                0x00000000c00167ec                Mouse::Mouse(char const*)
                0x00000000c0016822                Mouse::~Mouse()
                0x00000000c0016822                Mouse::~Mouse()
                0x00000000c0016846                Mouse::~Mouse()
 .text          0x00000000c0016870      0x34d hal/partition.32
                0x00000000c0016870                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c001692c                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0016bbd        0x1 
 .text          0x00000000c0016bbe       0x84 hal/serial.32
                0x00000000c0016bbe                Serial::Serial(char const*)
                0x00000000c0016bbe                Serial::Serial(char const*)
                0x00000000c0016bf4                Serial::~Serial()
                0x00000000c0016bf4                Serial::~Serial()
                0x00000000c0016c18                Serial::~Serial()
 .text          0x00000000c0016c42      0x2b8 hal/timer.32
                0x00000000c0016c42                Timer::Timer(char const*)
                0x00000000c0016c42                Timer::Timer(char const*)
                0x00000000c0016c78                Timer::~Timer()
                0x00000000c0016c78                Timer::~Timer()
                0x00000000c0016c9c                Timer::~Timer()
                0x00000000c0016cc6                Timer::read()
                0x00000000c0016cd1                timerHandler(unsigned long long)
                0x00000000c0016e08                setupTimer(int)
 .text          0x00000000c0016efa      0x425 hal/vcache.32
                0x00000000c0016efa                VCache::VCache(PhysicalDisk*)
                0x00000000c0016efa                VCache::VCache(PhysicalDisk*)
                0x00000000c0017062                VCache::invalidateReadBuffer()
                0x00000000c0017072                VCache::writeWriteBuffer()
                0x00000000c00170ae                VCache::~VCache()
                0x00000000c00170ae                VCache::~VCache()
                0x00000000c0017102                VCache::~VCache()
                0x00000000c001712a                VCache::write(unsigned long long, int, void*)
                0x00000000c0017220                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c001731f        0x1 
 .text          0x00000000c0017320      0x4cd hal/video.32
                0x00000000c0017320                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c001736c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c00173dc                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c001745a                Video::clearScreen(unsigned int)
                0x00000000c001748e                Video::putpixel(int, int, unsigned int)
                0x00000000c001749c                Video::Video(char const*)
                0x00000000c001749c                Video::Video(char const*)
                0x00000000c00174d2                Video::~Video()
                0x00000000c00174d2                Video::~Video()
                0x00000000c00174f6                Video::~Video()
                0x00000000c0017520                Video::isMonochrome()
                0x00000000c001752c                Video::getWidth()
                0x00000000c0017538                Video::getHeight()
                0x00000000c0017544                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c0017600                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c0017782                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c00177ed        0x1 
 .text          0x00000000c00177ee      0xf64 hw/acpi.32
                0x00000000c00177ee                ACPI::close(int, int, void*)
                0x00000000c00178a3                findRSDP()
                0x00000000c001792d                loadACPITables(unsigned char*)
                0x00000000c0017b54                findRSDT(unsigned char*)
                0x00000000c0017c72                findDataTable(unsigned char*, char*)
                0x00000000c0017d0e                scanMADT()
                0x00000000c0018194                ACPI::ACPI()
                0x00000000c0018194                ACPI::ACPI()
                0x00000000c00181fe                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c00182e0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c00183a6                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c00183ac                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c00183f4                ACPI::open(int, int, void*)
                0x00000000c001873a                ACPI::sleep()
 .text          0x00000000c0018752     0x1715 hw/cpu.32
                0x00000000c0018752                CPU::close(int, int, void*)
                0x00000000c0018756                CPU::lookupAMDName(unsigned char, unsigned char)
                0x00000000c00188ea                CPU::lookupIntelName(unsigned char, unsigned char)
                0x00000000c0018b98                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0018bb4                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0018bcc                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0018c40                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018cc4                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0018cf2                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0018d20                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018d4e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018d7c                CPU::CPU()
                0x00000000c0018d7c                CPU::CPU()
                0x00000000c0018e0a                CPU::displayFeatures()
                0x00000000c0019086                CPU::detectFeatures()
                0x00000000c0019a76                CPU::setupSMEP()
                0x00000000c0019a82                CPU::setupUMIP()
                0x00000000c0019a8c                CPU::setupTSC()
                0x00000000c0019a96                CPU::setupLargePages()
                0x00000000c0019aa0                CPU::setupPAT()
                0x00000000c0019adc                CPU::setupMTRR()
                0x00000000c0019ade                CPU::setupGlobalPages()
                0x00000000c0019ae8                CPU::allowUsermodeDataAccess()
                0x00000000c0019afa                CPU::prohibitUsermodeDataAccess()
                0x00000000c0019b0c                CPU::setupSMAP()
                0x00000000c0019b1a                CPU::setupFeatures()
                0x00000000c0019b9a                CPU::open(int, int, void*)
                0x00000000c0019c6c                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0019e67        0x0 hw/ports.32
 .text          0x00000000c0019e67      0x16a hw/smp.32
                0x00000000c0019e67                Krnl::smpEntry()
                0x00000000c0019e69                Krnl::startCPU(int)
                0x00000000c0019fb2                Krnl::startCPUs()
 *fill*         0x00000000c0019fd1        0x1 
 .text          0x00000000c0019fd2      0x5d3 krnl/env.32
                0x00000000c0019fd2                EnvVarContainer::getEnv(char const*)
                0x00000000c001a010                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001a0dc                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001a0de                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001a2d4                EnvVarContainer::__loadSystem()
                0x00000000c001a2ee                EnvVarContainer::__loadUser()
                0x00000000c001a2f0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001a2f0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001a312                EnvVarContainer::~EnvVarContainer()
                0x00000000c001a312                EnvVarContainer::~EnvVarContainer()
                0x00000000c001a342                Krnl::getEnv(Process*, char const*)
                0x00000000c001a3a7                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001a3c1                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001a3e0                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c001a3f3                Krnl::deleteEnvSystem(char const*)
                0x00000000c001a3f4                Krnl::deleteEnvUser(char const*)
                0x00000000c001a3f5                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c001a3f6                Krnl::newProcessEnv(Process*)
                0x00000000c001a418                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c001a46c                Krnl::loadSystemEnv()
                0x00000000c001a49a                Krnl::loadUserEnv()
                0x00000000c001a4c0                Krnl::flushEnv()
                0x00000000c001a4c1                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001a4e1                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001a5a5      0x396 krnl/panic.32
                0x00000000c001a5a5                Krnl::panic(char const*)
 .text          0x00000000c001a93b      0x3b6 net/ethernet.32
                0x00000000c001a93b                Net::switchEndian16(unsigned short)
                0x00000000c001a95c                Net::switchEndian32(unsigned int)
                0x00000000c001a98b                Net::crc32Calc(unsigned char*, int)
                0x00000000c001aa1c                Net::wrapEthernetFrame(Net::UnwrappedEthernetFrame, unsigned char*)
                0x00000000c001ab58                Net::unwrapEthernetFrame(unsigned char*, int)
 .text          0x00000000c001acf1      0x513 reg/registry.32
                0x00000000c001acf1                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c001ae49                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001af9e                Reg::getLine(char*, char*, char*)
                0x00000000c001afd5                Reg::readInt(char*, char*, int*)
                0x00000000c001b0c0                Reg::readString(char*, char*, char*, int)
                0x00000000c001b141                Reg::readBool(char*, char*, bool*)
                0x00000000c001b166                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001b192                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001b1be                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001b204       0x36 sys/sc_eject.32
                0x00000000c001b204                Sys::eject(regs*)
 .text          0x00000000c001b23a       0x18 sys/sc_exit.32
                0x00000000c001b23a                Sys::exit(regs*)
 .text          0x00000000c001b252       0x1f sys/sc_getcwd.32
                0x00000000c001b252                Sys::getCwd(regs*)
 .text          0x00000000c001b271        0xc sys/sc_getpid.32
                0x00000000c001b271                Sys::getPID(regs*)
 .text          0x00000000c001b27d       0x17 sys/sc_getramdata.32
                0x00000000c001b27d                Sys::getRAMData(regs*)
 .text          0x00000000c001b294       0xa8 sys/sc_loaddll.32
                0x00000000c001b294                Sys::loadDLL(regs*)
 .text          0x00000000c001b33c       0x68 sys/sc_read.32
                0x00000000c001b33c                Sys::read(regs*)
 .text          0x00000000c001b3a4       0x55 sys/sc_sbrk.32
                0x00000000c001b3a4                Sys::sbrk(regs*)
 .text          0x00000000c001b3f9       0x1c sys/sc_setcwd.32
                0x00000000c001b3f9                Sys::setCwd(regs*)
 .text          0x00000000c001b415      0x128 sys/sc_settime.32
                0x00000000c001b415                Sys::setTime(regs*)
 .text          0x00000000c001b53d       0x4a sys/sc_timezone.32
                0x00000000c001b53d                Sys::timezone(regs*)
 .text          0x00000000c001b587       0x68 sys/sc_write.32
                0x00000000c001b587                Sys::write(regs*)
 .text          0x00000000c001b5ef       0x62 sys/sc_wsbe.32
                0x00000000c001b5ef                Sys::wsbe(regs*)
 .text          0x00000000c001b651       0x3b sys/sc_yield.32
                0x00000000c001b651                Sys::yield(regs*)
 .text          0x00000000c001b68c     0x10e5 sys/syscalls.32
                0x00000000c001b68c                sysCallSeekDir(regs*)
                0x00000000c001b691                sysCallTellDir(regs*)
                0x00000000c001b696                sysCallVerify(regs*)
                0x00000000c001b6a0                sysFormatDisk(regs*)
                0x00000000c001b70a                sysSetDiskVolumeLabel(regs*)
                0x00000000c001b750                sysGetDiskVolumeLabel(regs*)
                0x00000000c001b7a1                sysShutdown(regs*)
                0x00000000c001b7ff                sysCallRealpath(regs*)
                0x00000000c001b842                sysCallGetArgc(regs*)
                0x00000000c001b870                sysCallReadDir(regs*)
                0x00000000c001b8fe                sysCallIsATTY(regs*)
                0x00000000c001b958                sysCallSeek(regs*)
                0x00000000c001b9c1                sysCallTell(regs*)
                0x00000000c001ba3e                sysCallSize(regs*)
                0x00000000c001bac1                sysCallSizeFromFilename(regs*)
                0x00000000c001bb81                sysCallClose(regs*)
                0x00000000c001bc09                sysCallOpenDir(regs*)
                0x00000000c001bc7e                sysCallCloseDir(regs*)
                0x00000000c001bce4                sysCallMakeDir(regs*)
                0x00000000c001bd54                sysCallWait(regs*)
                0x00000000c001bd6e                sysCallNotImpl(regs*)
                0x00000000c001bd89                sysPanic(regs*)
                0x00000000c001bdaf                sysCallRmdir(regs*)
                0x00000000c001be13                sysCallUnlink(regs*)
                0x00000000c001be77                sysCallGetArgv(regs*)
                0x00000000c001bec3                sysCallTTYName(regs*)
                0x00000000c001bf46                sysCallUSleep(regs*)
                0x00000000c001bf6d                sysCallSpawn(regs*)
                0x00000000c001bfc5                sysCallGetEnv(regs*)
                0x00000000c001c0fd                sysAppSettings(regs*)
                0x00000000c001c21c                sysSetFatAttrib(regs*)
                0x00000000c001c28e                sysPipe(regs*)
                0x00000000c001c2d3                sysGetUnixTime(regs*)
                0x00000000c001c2e7                string_ends_with(char const*, char const*)
                0x00000000c001c32f                sysCallOpen(regs*)
                0x00000000c001c544                Sys::loadSyscalls()
                0x00000000c001c72f                Sys::systemCall(regs*, void*)
 .text          0x00000000c001c771     0x11d4 thr/elf.32
                0x00000000c001c771                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001ca03                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001cc19                Thr::runtimeReferenceHelper()
                0x00000000c001cc2c                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001cc7b                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001cf39                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001d655                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001d687                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001d6be                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001d6d8                Thr::loadDLL(char const*, bool)
                0x00000000c001d90c                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001d945        0x1 
 .text          0x00000000c001d946     0x1056 thr/prcssthr.32
                0x00000000c001d946                changeTSS
                0x00000000c001d976                Process::addArgs(char**)
                0x00000000c001d9d0                Process::Process(char const*, Process*, char**)
                0x00000000c001d9d0                Process::Process(char const*, Process*, char**)
                0x00000000c001dbb4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001dbb4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001dd63                disableIRQs()
                0x00000000c001dd6b                getIRQNestingLevel()
                0x00000000c001dd71                enableIRQs()
                0x00000000c001dd80                lockScheduler()
                0x00000000c001dd82                unlockScheduler()
                0x00000000c001dd84                userModeEntryPoint(void*)
                0x00000000c001dda7                lockStuff()
                0x00000000c001ddb3                taskStartupFunction
                0x00000000c001ddbc                updateTimeUsed()
                0x00000000c001de21                switchToThread(ThreadControlBlock*)
                0x00000000c001de72                Semaphore::Semaphore(int)
                0x00000000c001de72                Semaphore::Semaphore(int)
                0x00000000c001dea0                Mutex::Mutex()
                0x00000000c001dea0                Mutex::Mutex()
                0x00000000c001deb2                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001df96                Process::createUserThread()
                0x00000000c001dfb2                setupMultitasking(void (*)())
                0x00000000c001e0bc                schedule()
                0x00000000c001e141                unlockStuff()
                0x00000000c001e176                Semaphore::tryAcquire()
                0x00000000c001e1a4                Semaphore::assertLocked(char const*)
                0x00000000c001e1d4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001e216                blockTask(TaskState)
                0x00000000c001e237                waitTask(int, int*, int)
                0x00000000c001e279                nanoSleepUntil(unsigned long long)
                0x00000000c001e2d0                nanoSleep(unsigned long long)
                0x00000000c001e2e5                sleep(unsigned long long)
                0x00000000c001e302                Semaphore::acquire()
                0x00000000c001e36a                taskReturned
                0x00000000c001e398                unblockTask(ThreadControlBlock*)
                0x00000000c001e447                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001e710                cleanerTaskFunction(void*)
                0x00000000c001e7c3                terminateTask(int)
                0x00000000c001e8a3                Thr::terminateFromIRQ(int)
                0x00000000c001e8b0                Semaphore::release()
 .text          0x00000000c001e99c      0xc26 vm86/vm8086.32
                0x00000000c001e99c                Vm::inbv(unsigned short)
                0x00000000c001e9af                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001ea02                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001ea12                Vm::getSegment(unsigned int)
                0x00000000c001ea1a                Vm::getOffset(unsigned int)
                0x00000000c001ea1f                Vm::mainloop2()
                0x00000000c001ea5a                Vm::mainVm8086Loop(void*)
                0x00000000c001ea67                Vm::mainloop3(unsigned long)
                0x00000000c001ea91                Vm::initialise8086()
                0x00000000c001ead4                Vm::finish8086()
                0x00000000c001eb19                Vm::getOutput8086(unsigned char*)
                0x00000000c001eb43                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001ec93                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001ed1d                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001ed2e                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001ed40                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001ed51                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001ed66                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001ed7c                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001ed91                Vm::faultHandler(regs*)
 .text          0x00000000c001f5c2      0xefd vm86/x87em.32
                0x00000000c001f5c2                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c001f61d                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c001f626                Vm::fpu32ToInternal(unsigned int)
                0x00000000c001f66b                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c001f674                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c001f6cf                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c001f705                Vm::fpuLongToFloat(long long)
                0x00000000c001f75b                Vm::fpuGet0()
                0x00000000c001f760                Vm::fpuGet1()
                0x00000000c001f768                Vm::fpuGetPi()
                0x00000000c001f770                Vm::fpuGetLog2E()
                0x00000000c001f788                Vm::fpuGetLogE2()
                0x00000000c001f7a0                Vm::fpuGetLog210()
                0x00000000c001f7b8                Vm::fpuGetLog102()
                0x00000000c001f7d0                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c001f7e4                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c001f7fa                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c001f84d                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c001f85e                Vm::fpuAbs(unsigned long long)
                0x00000000c001f867                Vm::fpuChs(unsigned long long)
                0x00000000c001f877                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c001f886                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c001f8a5                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c001f8c1                Vm::fpuSquare(unsigned long long)
                0x00000000c001f8d7                Vm::fpuGetReg(int)
                0x00000000c001f91a                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c001f965                Vm::fpuPush(unsigned long long)
                0x00000000c001f9c2                Vm::fpuPop()
                0x00000000c001fa14                Vm::x87Handler(regs*)
 *fill*         0x00000000c00204bf        0x1 
 .text          0x00000000c00204c0     0x10ed fs/fat/vfslink.32
                0x00000000c00204c0                FAT::getName()
                0x00000000c00204c6                FAT::tell(void*, unsigned long long*)
                0x00000000c00204fa                FAT::stat(void*, unsigned long long*)
                0x00000000c002052e                FAT::~FAT()
                0x00000000c002052e                FAT::~FAT()
                0x00000000c0020552                FAT::~FAT()
                0x00000000c002057a                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0020618                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00206d2                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00208b6                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0020abc                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0020bc2                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0020c1c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0020c76                FAT::close(void*)
                0x00000000c0020cc2                FAT::closeDir(void*)
                0x00000000c0020d0e                FAT::seek(void*, unsigned long long)
                0x00000000c0020d62                fatWrapperReadDisk
                0x00000000c0020da9                fatWrapperWriteDisk
                0x00000000c0020df0                fatWrapperIoctl
                0x00000000c0020ef4                FAT::FAT()
                0x00000000c0020ef4                FAT::FAT()
                0x00000000c0020f46                FAT::fixFilepath(char*)
                0x00000000c0020f7e                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00210a6                FAT::openDir(char const*, void**)
                0x00000000c002114c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0021236                FAT::unlink(char const*)
                0x00000000c00212b0                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0021404                FAT::rename(char const*, char const*)
                0x00000000c00214c8                FAT::mkdir(char const*)
                0x00000000c0021542                FAT::exists(char const*)
 *fill*         0x00000000c00215ad        0x1 
 .text          0x00000000c00215ae      0xbc1 fs/iso9660/vfslink.32
                0x00000000c00215ae                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00215b4                ISO9660::seek(void*, unsigned long long)
                0x00000000c00215e4                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0021608                ISO9660::getName()
                0x00000000c002160e                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0021632                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0021638                ISO9660::unlink(char const*)
                0x00000000c002163e                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0021644                ISO9660::rename(char const*, char const*)
                0x00000000c002164a                ISO9660::mkdir(char const*)
                0x00000000c0021650                ISO9660::close(void*)
                0x00000000c0021672                ISO9660::closeDir(void*)
                0x00000000c0021694                ISO9660::~ISO9660()
                0x00000000c0021694                ISO9660::~ISO9660()
                0x00000000c00216b8                ISO9660::~ISO9660()
                0x00000000c00216df                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0021721                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0021788                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c00217d8                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c00219d8                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0021c65                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0021cba                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c0021e8d                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c0021f1c                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0021fdc                ISO9660::exists(char const*)
                0x00000000c0022000                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0022094                ISO9660::openDir(char const*, void**)
                0x00000000c002214c                ISO9660::ISO9660()
                0x00000000c002214c                ISO9660::ISO9660()
 *fill*         0x00000000c002216f        0x1 
 .text          0x00000000c0022170      0x326 hal/sound/sndchannel.32
                0x00000000c0022170                SoundChannel::~SoundChannel()
                0x00000000c0022170                SoundChannel::~SoundChannel()
                0x00000000c002218c                SoundChannel::setSpeed(float)
                0x00000000c0022198                SoundChannel::getSpeed()
                0x00000000c00221a0                SoundChannel::setVolume(int)
                0x00000000c00221bc                SoundChannel::getVolume()
                0x00000000c00221c4                SoundChannel::pause()
                0x00000000c00221ce                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c00221ce                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c0022324                SoundChannel::play()
                0x00000000c002232e                SoundChannel::paused()
                0x00000000c0022336                SoundChannel::getSampleRate()
                0x00000000c002233e                SoundChannel::getBits()
                0x00000000c0022346                SoundChannel::getBufferUsed()
                0x00000000c002234e                SoundChannel::getBufferSize()
                0x00000000c0022356                SoundChannel::unbuffer(float*, int, int)
                0x00000000c00223f6                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c0022496      0x3d5 hal/sound/sndhw.32
                0x00000000c0022496                SoundDevice::SoundDevice(char const*)
                0x00000000c0022496                SoundDevice::SoundDevice(char const*)
                0x00000000c0022502                SoundDevice::~SoundDevice()
                0x00000000c0022502                SoundDevice::~SoundDevice()
                0x00000000c002257c                SoundDevice::~SoundDevice()
                0x00000000c00225a6                SoundDevice::getFreeChannelNum()
                0x00000000c00225c0                SoundDevice::addChannel(SoundChannel*)
                0x00000000c0022630                SoundDevice::removeChannel(int)
                0x00000000c0022662                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c002274a                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c002286b        0x0 hw/bus/isa.32
 *fill*         0x00000000c002286b        0x1 
 .text          0x00000000c002286c      0x6c3 hw/bus/pci.32
                0x00000000c002286c                PCI::open(int, int, void*)
                0x00000000c0022880                PCI::close(int, int, void*)
                0x00000000c0022884                PCI::PCI()
                0x00000000c0022884                PCI::PCI()
                0x00000000c0022904                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c002294c                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c002296e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0022992                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c00229d6                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c00229fa                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a1c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a3e                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a62                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0022ac2                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0022b2e                PCI::checkBus(unsigned char)
                0x00000000c0022b52                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0022cc4                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0022e70                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0022edc                PCI::detect()
 *fill*         0x00000000c0022f2f        0x1 
 .text          0x00000000c0022f30      0xc70 hw/diskctrl/ide.32
                0x00000000c0022f30                IDE::close(int, int, void*)
                0x00000000c0022f34                IDE::IDE()
                0x00000000c0022f34                IDE::IDE()
                0x00000000c0022f68                IDE::prepareInterrupt(unsigned char)
                0x00000000c0022f7a                selectDrive(unsigned char, unsigned char)
                0x00000000c0022f7c                IDE::getBase(unsigned char)
                0x00000000c0022f8e                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c002304e                IDE::read(unsigned char, unsigned char)
                0x00000000c00230fc                IDE::waitInterrupt(unsigned char)
                0x00000000c0023162                ideChannel0IRQHandler(regs*, void*)
                0x00000000c002317e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c002319a                IDE::enableIRQs(unsigned char, bool)
                0x00000000c00231e0                IDE::open(int, int, void*)
                0x00000000c00235f0                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c00236bc                IDE::detect()
                0x00000000c00239a4                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0023b3a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0023ba0      0x390 hw/diskctrl/satabus.32
                0x00000000c0023ba0                SATABus::close(int, int, void*)
                0x00000000c0023ba4                SATABus::detect()
                0x00000000c0023ba6                SATABus::SATABus()
                0x00000000c0023ba6                SATABus::SATABus()
                0x00000000c0023c52                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023c9a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023ce2                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d02                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d2c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0023e32                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0023f10                SATABus::open(int, int, void*)
 .text          0x00000000c0023f30      0x63c hw/diskphys/ata.32
                0x00000000c0023f30                ATA::close(int, int, void*)
                0x00000000c0023f54                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0023f56                ATA::ATA()
                0x00000000c0023f56                ATA::ATA()
                0x00000000c0023f84                ATA::flush(bool)
                0x00000000c0023fce                ATA::readyForCommand()
                0x00000000c002401e                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c00243a6                ATA::read(unsigned long long, int, void*)
                0x00000000c002440e                ATA::write(unsigned long long, int, void*)
                0x00000000c0024476                ATA::detectCHS()
                0x00000000c00244a0                ATA::open(int, int, void*)
 .text          0x00000000c002456c      0x5bd hw/diskphys/atapi.32
                0x00000000c002456c                ATAPI::write(unsigned long long, int, void*)
                0x00000000c0024572                ATAPI::close(int, int, void*)
                0x00000000c0024596                ATAPI::ATAPI()
                0x00000000c0024596                ATAPI::ATAPI()
                0x00000000c00245c4                ATAPI::readyForCommand()
                0x00000000c0024614                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c00248d4                ATAPI::diskRemoved()
                0x00000000c00248f0                ATAPI::eject()
                0x00000000c0024938                ATAPI::diskInserted()
                0x00000000c0024966                ATAPI::detectMedia()
                0x00000000c0024a22                ATAPI::open(int, int, void*)
                0x00000000c0024aaa                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0024b29        0x1 
 .text          0x00000000c0024b2a      0x455 hw/diskphys/sata.32
                0x00000000c0024b2a                SATA::close(int, int, void*)
                0x00000000c0024b4e                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0024b50                SATA::open(int, int, void*)
                0x00000000c0024bfe                SATA::SATA()
                0x00000000c0024bfe                SATA::SATA()
                0x00000000c0024c2c                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0024e92                SATA::read(unsigned long long, int, void*)
                0x00000000c0024efa                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c0024f7f        0x1 
 .text          0x00000000c0024f80      0x500 hw/diskphys/satapi.32
                0x00000000c0024f80                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0024f86                SATAPI::close(int, int, void*)
                0x00000000c0024faa                SATAPI::SATAPI()
                0x00000000c0024faa                SATAPI::SATAPI()
                0x00000000c0024fd8                SATAPI::diskRemoved()
                0x00000000c0024ff4                SATAPI::diskInserted()
                0x00000000c0025022                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0025226                SATAPI::eject()
                0x00000000c002526e                SATAPI::detectMedia()
                0x00000000c0025330                SATAPI::open(int, int, void*)
                0x00000000c00253de                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0025480       0x8e hw/fpu/avx.32
                0x00000000c0025480                AVX::open(int, int, void*)
                0x00000000c0025492                AVX::close(int, int, void*)
                0x00000000c00254a4                AVX::available()
                0x00000000c00254b6                AVX::save(void*)
                0x00000000c00254ce                AVX::load(void*)
                0x00000000c00254e6                AVX::AVX()
                0x00000000c00254e6                AVX::AVX()
 .text          0x00000000c002550e       0x90 hw/fpu/mmx.32
                0x00000000c002550e                MMX::available()
                0x00000000c0025522                MMX::open(int, int, void*)
                0x00000000c0025534                MMX::close(int, int, void*)
                0x00000000c0025546                MMX::save(void*)
                0x00000000c002555e                MMX::load(void*)
                0x00000000c0025576                MMX::MMX()
                0x00000000c0025576                MMX::MMX()
 .text          0x00000000c002559e       0x96 hw/fpu/sse.32
                0x00000000c002559e                SSE::open(int, int, void*)
                0x00000000c00255b0                SSE::close(int, int, void*)
                0x00000000c00255c2                SSE::available()
                0x00000000c00255dc                SSE::save(void*)
                0x00000000c00255f4                SSE::load(void*)
                0x00000000c002560c                SSE::SSE()
                0x00000000c002560c                SSE::SSE()
 .text          0x00000000c0025634       0x8e hw/fpu/x87.32
                0x00000000c0025634                x87::open(int, int, void*)
                0x00000000c0025646                x87::close(int, int, void*)
                0x00000000c0025658                x87::available()
                0x00000000c002566a                x87::save(void*)
                0x00000000c0025682                x87::load(void*)
                0x00000000c002569a                x87::x87()
                0x00000000c002569a                x87::x87()
 .text          0x00000000c00256c2      0x71e hw/intctrl/apic.32
                0x00000000c00256c2                APIC::disable()
                0x00000000c00256c4                APIC::close(int, int, void*)
                0x00000000c00256e6                IOAPIC::close(int, int, void*)
                0x00000000c00256ec                APIC::io_wait()
                0x00000000c00256f2                APIC::getBase()
                0x00000000c0025734                APIC::eoi(unsigned char)
                0x00000000c0025762                APIC::open(int, int, void*)
                0x00000000c00258b0                IOAPIC::IOAPIC()
                0x00000000c00258b0                IOAPIC::IOAPIC()
                0x00000000c00258d8                APIC::APIC()
                0x00000000c00258d8                APIC::APIC()
                0x00000000c00259b4                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c00259e6                IOAPIC::read(int)
                0x00000000c0025a0e                IOAPIC::open(int, int, void*)
                0x00000000c0025b04                IOAPIC::write(int, int)
                0x00000000c0025b30                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
                0x00000000c0025c2a                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 .text          0x00000000c0025de0      0x3d3 hw/intctrl/pic.32
                0x00000000c0025de0                PIC::disable()
                0x00000000c0025e0e                PIC::close(int, int, void*)
                0x00000000c0025e30                PIC::PIC()
                0x00000000c0025e30                PIC::PIC()
                0x00000000c0025f06                PIC::ioWait()
                0x00000000c0025f0c                PIC::getIRQReg(int)
                0x00000000c0025f76                PIC::eoi(unsigned char)
                0x00000000c0026008                PIC::remap()
                0x00000000c0026174                PIC::open(int, int, void*)
 *fill*         0x00000000c00261b3        0x1 
 .text          0x00000000c00261b4      0x25e hw/timer/apictimer.32
                0x00000000c00261b4                APICTimer::close(int, int, void*)
                0x00000000c00261ba                apicTimerHandler(regs*, void*)
                0x00000000c00261e8                APICTimer::write(int)
                0x00000000c00262ec                APICTimer::open(int, int, void*)
                0x00000000c00263ea                APICTimer::APICTimer()
                0x00000000c00263ea                APICTimer::APICTimer()
 .text          0x00000000c0026412      0x1a7 hw/timer/pit.32
                0x00000000c0026412                PIT::write(int)
                0x00000000c0026490                pitHandler(regs*, void*)
                0x00000000c00264bc                PIT::open(int, int, void*)
                0x00000000c002650a                PIT::close(int, int, void*)
                0x00000000c002653a                PIT::PIT()
                0x00000000c002653a                PIT::PIT()
 *fill*         0x00000000c00265b9        0x7 
 .text          0x00000000c00265c0       0x1e hw/fpu/x86/avx.32
                0x00000000c00265c0                avxDetect
                0x00000000c00265c6                avxSave
                0x00000000c00265c7                avxLoad
                0x00000000c00265c8                avxInit
                0x00000000c00265c9                avxClose
                0x00000000c00265ca                wouldSheSayYes
 *fill*         0x00000000c00265de        0x2 
 .text          0x00000000c00265e0       0x35 hw/fpu/x86/sse.32
                0x00000000c00265e0                absolutelyNoChanceInHell
                0x00000000c00265e0                sseDetect
                0x00000000c00265f8                sseSave
                0x00000000c00265fe                sseLoad
                0x00000000c0026604                sseInit
                0x00000000c0026614                sseClose
 *fill*         0x00000000c0026615        0xb 
 .text          0x00000000c0026620       0x47 hw/fpu/x86/x87.32
                0x00000000c0026626                x87Detect
                0x00000000c0026641                x87Save
                0x00000000c0026647                x87Load
                0x00000000c002664c                x87Init
                0x00000000c0026666                x87Close
 *fill*         0x00000000c0026667        0x1 
 .text          0x00000000c0026668       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c002668d        0x0 crtn.32
 *fill*         0x00000000c002668d        0x3 
 .text          0x00000000c0026690      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0026690                __divdi3
 *fill*         0x00000000c00267db        0x1 
 .text          0x00000000c00267dc      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c00267dc                __moddi3
 *fill*         0x00000000c002695a        0x2 
 .text          0x00000000c002695c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c002695c                __udivdi3
 *fill*         0x00000000c0026a5b        0x1 
 .text          0x00000000c0026a5c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0026a5c                __umoddi3
 .text          0x00000000c0026b76      0x96d D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                0x00000000c0026b76                __addsf3
                0x00000000c0026e78                __subsf3
                0x00000000c0026e8c                __negsf2
                0x00000000c0026e99                __mulsf3
                0x00000000c002705c                __divsf3
                0x00000000c0027287                __floatsisf
                0x00000000c00272fb                __floatunsisf
                0x00000000c002733d                __fixsfsi
                0x00000000c002739f                __fixunssfsi
                0x00000000c00273d0                __cmpsf2
                0x00000000c0027465                __eqsf2
                0x00000000c00274a0                __nesf2
                0x00000000c00274a2                __gtsf2
                0x00000000c00274dd                __gesf2
                0x00000000c00274df                __ltsf2
                0x00000000c00274e1                __lesf2
 .text          0x00000000c00274e3      0xf50 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                0x00000000c00274e3                __adddf3
                0x00000000c0027b34                __subdf3
                0x00000000c0027b4f                __negdf2
                0x00000000c0027b60                __muldf3
                0x00000000c0027e44                __divdf3
                0x00000000c00281c3                __floatsidf
                0x00000000c002821e                __floatunsidf
                0x00000000c002825c                __fixdfsi
                0x00000000c00282c9                __fixunsdfsi
                0x00000000c0028305                __cmpdf2
                0x00000000c00283f3                __eqdf2
                0x00000000c002840f                __nedf2
                0x00000000c0028411                __gtdf2
                0x00000000c002842d                __gedf2
                0x00000000c002842f                __ltdf2
                0x00000000c0028431                __ledf2
 .text          0x00000000c0028433      0x18d D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                0x00000000c0028433                __truncdfsf2
                0x00000000c0028557                __extendsfdf2
 .text          0x00000000c00285c0       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c00285c0                fabs
 *fill*         0x00000000c00285de        0x2 
 .text          0x00000000c00285e0        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c00285e0                lrint
 .text          0x00000000c00285ec        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c00285ec                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c00285f8        0x0
 .iplt          0x00000000c00285f8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c00285f8        0xf
 .init          0x00000000c00285f8        0x3 crti.32
                0x00000000c00285f8                _init
 .init          0x00000000c00285fb        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0028600        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0028605        0x2 crtn.32

.fini           0x00000000c0028607        0xa
 .fini          0x00000000c0028607        0x3 crti.32
                0x00000000c0028607                _fini
 .fini          0x00000000c002860a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c002860f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c0028612       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0028612       0x23 core/computer.32
                0x00000000c0028612                Computer::~Computer()
                0x00000000c0028612                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0028636       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0028636       0x2a core/computer.32
                0x00000000c0028636                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0028660       0x15
 .text._Z10idleCommonv
                0x00000000c0028660       0x15 core/idle.32
                0x00000000c0028660                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0028676        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0028676        0x2 core/unixfile.32
                0x00000000c0028676                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0028676                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0028678       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0028678       0x58 core/unixfile.32
                0x00000000c0028678                LinkedList<UnixFile>::LinkedList()
                0x00000000c0028678                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00286d0       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00286d0       0xd3 core/unixfile.32
                0x00000000c00286d0                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00287a4        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00287a4        0x7 core/unixfile.32
                0x00000000c00287a4                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00287ac       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00287ac       0xa1 core/unixfile.32
                0x00000000c00287ac                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002884e        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002884e        0x8 core/unixfile.32
                0x00000000c002884e                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028856       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028856       0x1a hal/device.32
                0x00000000c0028856                DriverlessDevice::~DriverlessDevice()
                0x00000000c0028856                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028870       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028870       0x2a hal/device.32
                0x00000000c0028870                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002889a       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002889a       0xdc hal/device.32
                0x00000000c002889a                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0028976       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0028976       0x58 hal/device.32
                0x00000000c0028976                LinkedList<Device>::LinkedList()
                0x00000000c0028976                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00289ce        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00289ce        0x7 hal/timer.32
                0x00000000c00289ce                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00289d6       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00289d6       0x1c hal/timer.32
                0x00000000c00289d6                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00289f2       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00289f2       0xae hal/timer.32
                0x00000000c00289f2                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0028aa0       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0028aa0       0xd3 hal/timer.32
                0x00000000c0028aa0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0028b74       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0028b74       0x23 hw/acpi.32
                0x00000000c0028b74                ACPI::~ACPI()
                0x00000000c0028b74                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0028b98       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0028b98       0x2a hw/acpi.32
                0x00000000c0028b98                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c0028bc2       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0028bc2       0x23 hw/cpu.32
                0x00000000c0028bc2                CPU::~CPU()
                0x00000000c0028bc2                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0028be6       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0028be6       0x2a hw/cpu.32
                0x00000000c0028be6                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0028c10        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0028c10        0x2 thr/prcssthr.32
                0x00000000c0028c10                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0028c10                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0028c12       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0028c12       0x3e thr/prcssthr.32
                0x00000000c0028c12                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0028c12                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0028c50       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0028c50       0x58 thr/prcssthr.32
                0x00000000c0028c50                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0028c50                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0028ca8        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0028ca8        0x8 thr/prcssthr.32
                0x00000000c0028ca8                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0028cb0        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0028cb0        0xd vm86/x87em.32
                0x00000000c0028cb0                Vm::_FPUState::_FPUState()
                0x00000000c0028cb0                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c0028cbe       0x23
 .text._ZN3PCID2Ev
                0x00000000c0028cbe       0x23 hw/bus/pci.32
                0x00000000c0028cbe                PCI::~PCI()
                0x00000000c0028cbe                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0028ce2       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0028ce2       0x2a hw/bus/pci.32
                0x00000000c0028ce2                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0028d0c       0x23
 .text._ZN3IDED2Ev
                0x00000000c0028d0c       0x23 hw/diskctrl/ide.32
                0x00000000c0028d0c                IDE::~IDE()
                0x00000000c0028d0c                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0028d30       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0028d30       0x2a hw/diskctrl/ide.32
                0x00000000c0028d30                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0028d5a       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0028d5a       0x23 hw/diskctrl/satabus.32
                0x00000000c0028d5a                SATABus::~SATABus()
                0x00000000c0028d5a                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0028d7e       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0028d7e       0x2a hw/diskctrl/satabus.32
                0x00000000c0028d7e                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0028da8       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0028da8       0x23 hw/diskphys/ata.32
                0x00000000c0028da8                ATA::~ATA()
                0x00000000c0028da8                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0028dcc       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0028dcc       0x2a hw/diskphys/ata.32
                0x00000000c0028dcc                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0028df6       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0028df6       0x23 hw/diskphys/atapi.32
                0x00000000c0028df6                ATAPI::~ATAPI()
                0x00000000c0028df6                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0028e1a       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0028e1a       0x2a hw/diskphys/atapi.32
                0x00000000c0028e1a                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0028e44       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0028e44       0x23 hw/diskphys/sata.32
                0x00000000c0028e44                SATA::~SATA()
                0x00000000c0028e44                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0028e68       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0028e68       0x2a hw/diskphys/sata.32
                0x00000000c0028e68                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0028e92       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0028e92       0x23 hw/diskphys/satapi.32
                0x00000000c0028e92                SATAPI::~SATAPI()
                0x00000000c0028e92                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0028eb6       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0028eb6       0x2a hw/diskphys/satapi.32
                0x00000000c0028eb6                SATAPI::~SATAPI()

.text._ZN3AVXD2Ev
                0x00000000c0028ee0       0x23
 .text._ZN3AVXD2Ev
                0x00000000c0028ee0       0x23 hw/fpu/avx.32
                0x00000000c0028ee0                AVX::~AVX()
                0x00000000c0028ee0                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c0028f04       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c0028f04       0x2a hw/fpu/avx.32
                0x00000000c0028f04                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c0028f2e       0x23
 .text._ZN3MMXD2Ev
                0x00000000c0028f2e       0x23 hw/fpu/mmx.32
                0x00000000c0028f2e                MMX::~MMX()
                0x00000000c0028f2e                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c0028f52       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c0028f52       0x2a hw/fpu/mmx.32
                0x00000000c0028f52                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c0028f7c       0x23
 .text._ZN3SSED2Ev
                0x00000000c0028f7c       0x23 hw/fpu/sse.32
                0x00000000c0028f7c                SSE::~SSE()
                0x00000000c0028f7c                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c0028fa0       0x2a
 .text._ZN3SSED0Ev
                0x00000000c0028fa0       0x2a hw/fpu/sse.32
                0x00000000c0028fa0                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c0028fca       0x23
 .text._ZN3x87D2Ev
                0x00000000c0028fca       0x23 hw/fpu/x87.32
                0x00000000c0028fca                x87::~x87()
                0x00000000c0028fca                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c0028fee       0x2a
 .text._ZN3x87D0Ev
                0x00000000c0028fee       0x2a hw/fpu/x87.32
                0x00000000c0028fee                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c0029018       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0029018       0x23 hw/intctrl/apic.32
                0x00000000c0029018                IOAPIC::~IOAPIC()
                0x00000000c0029018                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002903c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002903c       0x2a hw/intctrl/apic.32
                0x00000000c002903c                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c0029066       0x23
 .text._ZN4APICD2Ev
                0x00000000c0029066       0x23 hw/intctrl/apic.32
                0x00000000c0029066                APIC::~APIC()
                0x00000000c0029066                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c002908a       0x2a
 .text._ZN4APICD0Ev
                0x00000000c002908a       0x2a hw/intctrl/apic.32
                0x00000000c002908a                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c00290b4       0x23
 .text._ZN3PICD2Ev
                0x00000000c00290b4       0x23 hw/intctrl/pic.32
                0x00000000c00290b4                PIC::~PIC()
                0x00000000c00290b4                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c00290d8       0x2a
 .text._ZN3PICD0Ev
                0x00000000c00290d8       0x2a hw/intctrl/pic.32
                0x00000000c00290d8                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0029102       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0029102       0x23 hw/timer/apictimer.32
                0x00000000c0029102                APICTimer::~APICTimer()
                0x00000000c0029102                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0029126       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0029126       0x2a hw/timer/apictimer.32
                0x00000000c0029126                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0029150       0x23
 .text._ZN3PITD2Ev
                0x00000000c0029150       0x23 hw/timer/pit.32
                0x00000000c0029150                PIT::~PIT()
                0x00000000c0029150                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0029174       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0029174       0x2a hw/timer/pit.32
                0x00000000c0029174                PIT::~PIT()

.rodata         0x00000000c002919e     0x410a
                0x00000000c002919e                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002919e        0x2 
 .ctors         0x00000000c00291a0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00291a4        0x4 core/unixfile.32
 .ctors         0x00000000c00291a8        0x4 thr/prcssthr.32
 .ctors         0x00000000c00291ac        0x4 vm86/x87em.32
 .ctors         0x00000000c00291b0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00291b4                end_ctors = .
                0x00000000c00291b4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00291b4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00291b8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00291b8                __DTOR_END__
                0x00000000c00291bc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00291bc        0x4 
 .rodata        0x00000000c00291c0      0x101 acpica/utclib.32
                0x00000000c00291c0                AcpiGbl_Ctypes
 *fill*         0x00000000c00292c1        0x3 
 .rodata        0x00000000c00292c4       0x18 core/malloc.32
 *fill*         0x00000000c00292dc        0x4 
 .rodata        0x00000000c00292e0      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c0029400       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0029456        0xa 
 .rodata        0x00000000c0029460      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0029860       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c0029916        0x2 
 .rodata.str1.4
                0x00000000c0029918      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c0029cbd        0x3 
 .rodata        0x00000000c0029cc0       0x60 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c0029d20       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c0029d62        0x2 
 .rodata        0x00000000c0029d64       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c0029dd0       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0029e94       0x4a hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0029ede       0x48 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c0029f26       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0029f6f      0x1d0 core/computer.32
                                        0x1d2 (size before relaxing)
 *fill*         0x00000000c002a13f        0x1 
 .rodata._ZTV8Computer
                0x00000000c002a140       0x2c core/computer.32
                0x00000000c002a140                vtable for Computer
 .rodata.str1.1
                0x00000000c002a16c       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c002a188       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c002a1b8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c002a1c4       0x62 core/main.32
                                         0x63 (size before relaxing)
 .rodata.str1.1
                0x00000000c002a226       0x5f core/physmgr.32
 *fill*         0x00000000c002a285        0x3 
 .rodata.str1.4
                0x00000000c002a288       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c002a2d5       0x39 core/pipe.32
 *fill*         0x00000000c002a30e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c002a310       0x1c core/pipe.32
                0x00000000c002a310                vtable for Pipe
 .rodata.str1.1
                0x00000000c002a32c       0x9d core/terminal.32
 *fill*         0x00000000c002a3c9        0x3 
 .rodata._ZTV7VgaText
                0x00000000c002a3cc       0x1c core/terminal.32
                0x00000000c002a3cc                vtable for VgaText
 .rodata        0x00000000c002a3e8       0x1e core/tss.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c002a406       0x19 core/unixfile.32
 *fill*         0x00000000c002a41f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002a420       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002a442       0x15 core/unixfile.32
 *fill*         0x00000000c002a457        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002a458       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002a4a3        0x8 core/unixfile.32
 *fill*         0x00000000c002a4ab        0x1 
 .rodata.str1.4
                0x00000000c002a4ac       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c002a4cc       0x1c core/unixfile.32
                0x00000000c002a4cc                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002a4e8       0x1c core/unixfile.32
                0x00000000c002a4e8                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002a504      0x1a7 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002a6ab      0x173 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002a81e       0x83 coreobjs/c++.32
 *fill*         0x00000000c002a8a1        0x3 
 .rodata.str1.4
                0x00000000c002a8a4       0x3f dbg/kconsole.32
 *fill*         0x00000000c002a8e3        0x1 
 .rodata        0x00000000c002a8e4      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002aa34       0x83 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c002aa34       0x64 fs/vfs.32
                0x00000000c002aa34                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002aa98       0x1c fs/vfs.32
                0x00000000c002aa98                vtable for File
 .rodata._ZTV9Directory
                0x00000000c002aab4       0x1c fs/vfs.32
                0x00000000c002aab4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002aad0       0x2c hal/bus.32
                0x00000000c002aad0                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c002aafc       0x30 hal/buzzer.32
                0x00000000c002aafc                vtable for Buzzer
 .rodata.str1.1
                0x00000000c002ab2c       0x1e hal/clock.32
 *fill*         0x00000000c002ab4a        0x2 
 .rodata._ZTV5Clock
                0x00000000c002ab4c       0x3c hal/clock.32
                0x00000000c002ab4c                vtable for Clock
 *fill*         0x00000000c002ab88       0x18 
 .rodata        0x00000000c002aba0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c002abd0       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c002abee       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c002abee       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c002abee       0x19 hal/device.32
 *fill*         0x00000000c002abee        0x2 
 .rodata._ZTV6Device
                0x00000000c002abf0       0x2c hal/device.32
                0x00000000c002abf0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c002ac1c       0x2c hal/device.32
                0x00000000c002ac1c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c002ac48       0x2c hal/diskctrl.32
                0x00000000c002ac48                vtable for HardDiskController
 .rodata.str1.1
                0x00000000c002ac74       0x27 hal/diskphys.32
 *fill*         0x00000000c002ac9b        0x1 
 .rodata._ZTV12PhysicalDisk
                0x00000000c002ac9c       0x38 hal/diskphys.32
                0x00000000c002ac9c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c002acd4        0x9 hal/fpu.32
 *fill*         0x00000000c002acdd        0x3 
 .rodata._ZTV3FPU
                0x00000000c002ace0       0x38 hal/fpu.32
                0x00000000c002ace0                vtable for FPU
 .rodata        0x00000000c002ad18      0x359 hal/intctrl.32
 *fill*         0x00000000c002b071        0x3 
 .rodata._ZTV19InterruptController
                0x00000000c002b074       0x48 hal/intctrl.32
                0x00000000c002b074                vtable for InterruptController
 .rodata        0x00000000c002b0bc       0x4f hal/keybrd.32
 *fill*         0x00000000c002b10b        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c002b10c       0x34 hal/keybrd.32
                0x00000000c002b10c                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002b140       0x7a hal/logidisk.32
 *fill*         0x00000000c002b1ba        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c002b1bc       0x2c hal/logidisk.32
                0x00000000c002b1bc                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c002b1e8       0x2c hal/mouse.32
                0x00000000c002b1e8                vtable for Mouse
 .rodata.str1.1
                0x00000000c002b214       0x2d hal/partition.32
 *fill*         0x00000000c002b241        0x3 
 .rodata._ZTV6Serial
                0x00000000c002b244       0x44 hal/serial.32
                0x00000000c002b244                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002b288       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002b288        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002b288       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002b288       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c002b288       0x30 hal/timer.32
                0x00000000c002b288                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c002b2b8       0x10 hal/vcache.32
                0x00000000c002b2b8                vtable for VCache
 .rodata.str1.1
                0x00000000c002b2c8       0x7c hal/video.32
 .rodata._ZTV5Video
                0x00000000c002b344       0x48 hal/video.32
                0x00000000c002b344                vtable for Video
 .rodata.str1.1
                0x00000000c002b38c      0x122 hw/acpi.32
 *fill*         0x00000000c002b4ae        0x2 
 .rodata.str1.4
                0x00000000c002b4b0       0xbe hw/acpi.32
 *fill*         0x00000000c002b56e        0x2 
 .rodata._ZTV4ACPI
                0x00000000c002b570       0x2c hw/acpi.32
                0x00000000c002b570                vtable for ACPI
 .rodata.str1.1
                0x00000000c002b59c      0x3c1 hw/cpu.32
                                        0x3ce (size before relaxing)
 *fill*         0x00000000c002b95d        0x3 
 .rodata._ZTV3CPU
                0x00000000c002b960       0x2c hw/cpu.32
                0x00000000c002b960                vtable for CPU
 .rodata.str1.1
                0x00000000c002b98c       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c002b99d       0x89 krnl/env.32
 .rodata.str1.1
                0x00000000c002ba26       0xbe krnl/panic.32
                                         0xc5 (size before relaxing)
 .rodata.str1.4
                0x00000000c002bae4      0x13e krnl/panic.32
 *fill*         0x00000000c002bc22        0x2 
 .rodata.str1.4
                0x00000000c002bc24       0x4c net/ethernet.32
 .rodata.str1.1
                0x00000000c002bc70       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002bcb5       0x38 sys/sc_settime.32
 .rodata.str1.1
                0x00000000c002bced       0x77 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c002bd64       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c002bd90      0x115 sys/syscalls.32
                                        0x133 (size before relaxing)
 *fill*         0x00000000c002bea5        0x3 
 .rodata.str1.4
                0x00000000c002bea8       0x6f sys/syscalls.32
 .rodata.str1.1
                0x00000000c002bf17      0x254 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c002c16b       0xfb thr/prcssthr.32
 *fill*         0x00000000c002c266        0x2 
 .rodata.str1.4
                0x00000000c002c268      0x2a7 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c002c50f       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002c50f       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002c50f       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002c50f       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002c50f        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002c50f      0x19f vm86/vm8086.32
 *fill*         0x00000000c002c6ae        0x2 
 .rodata        0x00000000c002c6b0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002c6e0       0x58 vm86/x87em.32
 .rodata        0x00000000c002c738       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c002c774       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c002c7c7        0x1 
 .rodata.str1.4
                0x00000000c002c7c8       0x25 fs/fat/vfslink.32
 *fill*         0x00000000c002c7ed        0x3 
 .rodata._ZTV3FAT
                0x00000000c002c7f0       0x64 fs/fat/vfslink.32
                0x00000000c002c7f0                vtable for FAT
 .rodata.str1.1
                0x00000000c002c854       0x5c fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002c8b0       0x64 fs/iso9660/vfslink.32
                0x00000000c002c8b0                vtable for ISO9660
 .rodata.str1.1
                0x00000000c002c914       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c002c92e        0x2 
 .rodata.cst4   0x00000000c002c930        0x8 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c002c938       0x38 hal/sound/sndhw.32
                0x00000000c002c938                vtable for SoundDevice
 .rodata.str1.1
                0x00000000c002c970       0x62 hw/bus/pci.32
 *fill*         0x00000000c002c9d2        0x2 
 .rodata._ZTV3PCI
                0x00000000c002c9d4       0x2c hw/bus/pci.32
                0x00000000c002c9d4                vtable for PCI
 .rodata.str1.1
                0x00000000c002ca00      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c002cc36        0x2 
 .rodata._ZTV3IDE
                0x00000000c002cc38       0x2c hw/diskctrl/ide.32
                0x00000000c002cc38                vtable for IDE
 .rodata.str1.4
                0x00000000c002cc64       0x48 hw/diskctrl/satabus.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002ccac       0x6a hw/diskctrl/satabus.32
 *fill*         0x00000000c002cd16        0x2 
 .rodata._ZTV7SATABus
                0x00000000c002cd18       0x2c hw/diskctrl/satabus.32
                0x00000000c002cd18                vtable for SATABus
 .rodata.str1.1
                0x00000000c002cd44       0x1d hw/diskphys/ata.32
                                         0x2c (size before relaxing)
 *fill*         0x00000000c002cd61        0x3 
 .rodata._ZTV3ATA
                0x00000000c002cd64       0x38 hw/diskphys/ata.32
                0x00000000c002cd64                vtable for ATA
 .rodata.str1.1
                0x00000000c002cd9c       0x1d hw/diskphys/atapi.32
                                         0x38 (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c002cd9c       0x38 hw/diskphys/atapi.32
                0x00000000c002cd9c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002cdd4       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c002ce50       0x38 hw/diskphys/sata.32
                0x00000000c002ce50                vtable for SATA
 .rodata.str1.1
                0x00000000c002ce88       0xa3 hw/diskphys/satapi.32
                                         0xb1 (size before relaxing)
 *fill*         0x00000000c002cf2b        0x1 
 .rodata._ZTV6SATAPI
                0x00000000c002cf2c       0x38 hw/diskphys/satapi.32
                0x00000000c002cf2c                vtable for SATAPI
 .rodata.str1.1
                0x00000000c002cf64        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c002cf6c       0x38 hw/fpu/avx.32
                0x00000000c002cf6c                vtable for AVX
 .rodata.str1.1
                0x00000000c002cfa4        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c002cfac       0x38 hw/fpu/mmx.32
                0x00000000c002cfac                vtable for MMX
 .rodata.str1.1
                0x00000000c002cfe4        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c002cfec       0x38 hw/fpu/sse.32
                0x00000000c002cfec                vtable for SSE
 .rodata.str1.1
                0x00000000c002d024        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c002d02c       0x38 hw/fpu/x87.32
                0x00000000c002d02c                vtable for x87
 .rodata        0x00000000c002d064       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c002d13c       0x48 hw/intctrl/apic.32
                0x00000000c002d13c                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c002d184       0x2c hw/intctrl/apic.32
                0x00000000c002d184                vtable for IOAPIC
 .rodata        0x00000000c002d1b0       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c002d1d2        0x2 
 .rodata._ZTV3PIC
                0x00000000c002d1d4       0x48 hw/intctrl/pic.32
                0x00000000c002d1d4                vtable for PIC
 .rodata.str1.1
                0x00000000c002d21c        0xb hw/timer/apictimer.32
 *fill*         0x00000000c002d227        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002d228       0x30 hw/timer/apictimer.32
                0x00000000c002d228                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002d258       0x1d hw/timer/pit.32
 *fill*         0x00000000c002d275        0x3 
 .rodata._ZTV3PIT
                0x00000000c002d278       0x30 hw/timer/pit.32
                0x00000000c002d278                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002d2a8      0x66d
 *(.data)
 .data          0x00000000c002d2a8        0x0 crti.32
 .data          0x00000000c002d2a8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002d2a8                __dso_handle
 .data          0x00000000c002d2ac        0x0 acpica/utclib.32
 .data          0x00000000c002d2ac        0x0 core/malloc.32
 .data          0x00000000c002d2ac        0x0 libk/string.32
 .data          0x00000000c002d2ac        0x0 fs/fat/diskio.32
 .data          0x00000000c002d2ac        0x0 fs/fat/ff.32
 .data          0x00000000c002d2ac        0x0 fs/fat/ffsystem.32
 .data          0x00000000c002d2ac        0x0 fs/fat/ffunicode.32
 .data          0x00000000c002d2ac        0x0 hal/libresample/samplerate.32
 .data          0x00000000c002d2ac        0x0 hal/libresample/src_linear.32
 .data          0x00000000c002d2ac        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c002d2ac        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c002d2ac        0x0 compat/inlines.32
 .data          0x00000000c002d2ac        0x0 compat/resolve.32
 .data          0x00000000c002d2ac        0x0 core/computer.32
 .data          0x00000000c002d2ac        0x0 core/gdt.32
 .data          0x00000000c002d2ac        0x0 core/idle.32
 .data          0x00000000c002d2ac        0x0 core/idt.32
 .data          0x00000000c002d2ac        0x4 core/kheap.32
 .data          0x00000000c002d2b0        0x0 core/main.32
 .data          0x00000000c002d2b0        0x4 core/physmgr.32
                0x00000000c002d2b0                Phys::bitmap
 .data          0x00000000c002d2b4        0x0 core/pipe.32
 *fill*         0x00000000c002d2b4        0xc 
 .data          0x00000000c002d2c0       0x60 core/terminal.32
                0x00000000c002d2c0                VGA_TEXT_MODE_ADDRESS
                0x00000000c002d2c4                VgaText::hiddenOut
                0x00000000c002d2e0                ansiToVGAMappings
 .data          0x00000000c002d320        0x0 core/tss.32
 .data          0x00000000c002d320        0x4 core/unixfile.32
                0x00000000c002d320                UnixFile::nextFd
 .data          0x00000000c002d324       0x15 core/virtmgr.32
                0x00000000c002d324                Virt::pageAllocPtr
                0x00000000c002d328                Virt::bitmap
                0x00000000c002d32c                Virt::swapfileSectorsPerPage
                0x00000000c002d330                Virt::swapfileLength
                0x00000000c002d334                Virt::swapfileSector
                0x00000000c002d338                Virt::swapfileDrive
 *fill*         0x00000000c002d339        0x3 
 .data          0x00000000c002d33c        0x4 coreobjs/c++.32
                0x00000000c002d33c                __stack_chk_guard
 .data          0x00000000c002d340        0x0 dbg/kconsole.32
 .data          0x00000000c002d340        0x0 fs/vfs.32
 .data          0x00000000c002d340        0x0 hal/bus.32
 .data          0x00000000c002d340        0x0 hal/buzzer.32
 .data          0x00000000c002d340        0x0 hal/clock.32
 .data          0x00000000c002d340        0x0 hal/device.32
 .data          0x00000000c002d340        0x0 hal/diskctrl.32
 .data          0x00000000c002d340        0x0 hal/diskphys.32
 .data          0x00000000c002d340        0x0 hal/fpu.32
 .data          0x00000000c002d340      0x2a0 hal/intctrl.32
                0x00000000c002d340                exceptionNames
 .data          0x00000000c002d5e0        0x0 hal/keybrd.32
 .data          0x00000000c002d5e0        0x0 hal/logidisk.32
 .data          0x00000000c002d5e0        0x0 hal/mouse.32
 .data          0x00000000c002d5e0        0x0 hal/partition.32
 .data          0x00000000c002d5e0        0x0 hal/serial.32
 .data          0x00000000c002d5e0        0x0 hal/timer.32
 .data          0x00000000c002d5e0        0x0 hal/vcache.32
 .data          0x00000000c002d5e0        0x0 hal/video.32
 .data          0x00000000c002d5e0       0x10 hw/acpi.32
                0x00000000c002d5e0                legacyIRQRemaps
 *fill*         0x00000000c002d5f0       0x10 
 .data          0x00000000c002d600      0x2a4 hw/cpu.32
                0x00000000c002d600                cpuNameList
                0x00000000c002d8a0                lastCode
 .data          0x00000000c002d8a4        0x0 hw/ports.32
 .data          0x00000000c002d8a4        0x0 hw/smp.32
 *fill*         0x00000000c002d8a4       0x1c 
 .data          0x00000000c002d8c0       0x4d krnl/env.32
                0x00000000c002d8c0                defaultSysEnv
 .data          0x00000000c002d90d        0x0 krnl/panic.32
 .data          0x00000000c002d90d        0x0 net/ethernet.32
 .data          0x00000000c002d90d        0x0 reg/registry.32
 .data          0x00000000c002d90d        0x0 sys/sc_eject.32
 .data          0x00000000c002d90d        0x0 sys/sc_exit.32
 .data          0x00000000c002d90d        0x0 sys/sc_getcwd.32
 .data          0x00000000c002d90d        0x0 sys/sc_getpid.32
 .data          0x00000000c002d90d        0x0 sys/sc_getramdata.32
 .data          0x00000000c002d90d        0x0 sys/sc_loaddll.32
 .data          0x00000000c002d90d        0x0 sys/sc_read.32
 .data          0x00000000c002d90d        0x0 sys/sc_sbrk.32
 .data          0x00000000c002d90d        0x0 sys/sc_setcwd.32
 .data          0x00000000c002d90d        0x0 sys/sc_settime.32
 .data          0x00000000c002d90d        0x0 sys/sc_timezone.32
 .data          0x00000000c002d90d        0x0 sys/sc_write.32
 .data          0x00000000c002d90d        0x0 sys/sc_wsbe.32
 .data          0x00000000c002d90d        0x0 sys/sc_yield.32
 .data          0x00000000c002d90d        0x0 sys/syscalls.32
 .data          0x00000000c002d90d        0x0 thr/elf.32
 *fill*         0x00000000c002d90d        0x3 
 .data          0x00000000c002d910        0x4 thr/prcssthr.32
                0x00000000c002d910                Thr::nextPID
 .data          0x00000000c002d914        0x0 vm86/vm8086.32
 .data          0x00000000c002d914        0x0 vm86/x87em.32
 .data          0x00000000c002d914        0x0 fs/fat/vfslink.32
 .data          0x00000000c002d914        0x1 fs/iso9660/vfslink.32
                0x00000000c002d914                recentDriveletter
 .data          0x00000000c002d915        0x0 hal/sound/sndchannel.32
 .data          0x00000000c002d915        0x0 hal/sound/sndhw.32
 .data          0x00000000c002d915        0x0 hw/bus/isa.32
 .data          0x00000000c002d915        0x0 hw/bus/pci.32
 .data          0x00000000c002d915        0x0 hw/diskctrl/ide.32
 .data          0x00000000c002d915        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c002d915        0x0 hw/diskphys/ata.32
 .data          0x00000000c002d915        0x0 hw/diskphys/atapi.32
 .data          0x00000000c002d915        0x0 hw/diskphys/sata.32
 .data          0x00000000c002d915        0x0 hw/diskphys/satapi.32
 .data          0x00000000c002d915        0x0 hw/fpu/avx.32
 .data          0x00000000c002d915        0x0 hw/fpu/mmx.32
 .data          0x00000000c002d915        0x0 hw/fpu/sse.32
 .data          0x00000000c002d915        0x0 hw/fpu/x87.32
 .data          0x00000000c002d915        0x0 hw/intctrl/apic.32
 .data          0x00000000c002d915        0x0 hw/intctrl/pic.32
 .data          0x00000000c002d915        0x0 hw/timer/apictimer.32
 .data          0x00000000c002d915        0x0 hw/timer/pit.32
 .data          0x00000000c002d915        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c002d915        0x0 crtn.32
 .data          0x00000000c002d915        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c002d915        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c002d915        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c002d915        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .data          0x00000000c002d915        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .data          0x00000000c002d915        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .data          0x00000000c002d915        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .data          0x00000000c002d915        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c002d915        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c002d915        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c002d918        0x0
 .got           0x00000000c002d918        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c002d918        0x0
 .got.plt       0x00000000c002d918        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c002d918        0x0
 .igot.plt      0x00000000c002d918        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c002d918        0x0
 .tm_clone_table
                0x00000000c002d918        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c002d918        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c002d915      0x633
 *(.eh_frame)
 *fill*         0x00000000c002d915        0x3 
 .eh_frame      0x00000000c002d918        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c002d918        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c002d918       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002d970       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002d9b0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002da1c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c002daa0      0x218 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                                        0x230 (size before relaxing)
 .eh_frame      0x00000000c002dcb8      0x220 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                                        0x238 (size before relaxing)
 .eh_frame      0x00000000c002ded8       0x58 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                                         0x70 (size before relaxing)
 .eh_frame      0x00000000c002df30       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c002df48        0x0
 .rel.got       0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c002df48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c002df48     0x4800
                0x00000000c002df48                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c002df48        0x0 crti.32
 .bss           0x00000000c002df48       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c002df68        0x4 acpica/utclib.32
 *fill*         0x00000000c002df6c       0x14 
 .bss           0x00000000c002df80      0x378 core/malloc.32
 .bss           0x00000000c002e2f8        0x0 libk/string.32
 .bss           0x00000000c002e2f8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c002e2f8        0x8 
 .bss           0x00000000c002e300       0x88 fs/fat/ff.32
 .bss           0x00000000c002e388        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c002e388        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c002e388        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c002e388        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c002e388        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c002e388        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c002e388        0x0 compat/inlines.32
 .bss           0x00000000c002e388        0x0 compat/resolve.32
 .bss           0x00000000c002e388        0x6 core/computer.32
                0x00000000c002e388                Krnl::computer
                0x00000000c002e38c                Krnl::preemptionOn
                0x00000000c002e38d                Krnl::schedulingOn
 *fill*         0x00000000c002e38e        0x2 
 .bss           0x00000000c002e390        0x6 core/gdt.32
                0x00000000c002e390                gdtDescr
 .bss           0x00000000c002e396        0x0 core/idle.32
 *fill*         0x00000000c002e396        0x2 
 .bss           0x00000000c002e398        0x6 core/idt.32
                0x00000000c002e398                idtDescr
 .bss           0x00000000c002e39e        0x0 core/kheap.32
 *fill*         0x00000000c002e39e        0x2 
 .bss           0x00000000c002e3a0        0x4 core/main.32
                0x00000000c002e3a0                sysBootSettings
 *fill*         0x00000000c002e3a4       0x1c 
 .bss           0x00000000c002e3c0       0x50 core/physmgr.32
                0x00000000c002e3c0                Phys::forbidEvictions
                0x00000000c002e3c4                Phys::currentPagePointer
                0x00000000c002e3c8                Phys::highestMem
                0x00000000c002e3cc                Phys::oldPercent
                0x00000000c002e3d0                Phys::usedPages
                0x00000000c002e3d4                Phys::usablePages
                0x00000000c002e3e0                Phys::dmaUsage
 .bss           0x00000000c002e410        0x0 core/pipe.32
 *fill*         0x00000000c002e410       0x10 
 .bss           0x00000000c002e420       0x49 core/terminal.32
                0x00000000c002e420                vgamono
                0x00000000c002e440                textModeImplementation
                0x00000000c002e460                terminalCycle
                0x00000000c002e464                activeTerminal
                0x00000000c002e468                VgaText::graphicMode
 *fill*         0x00000000c002e469        0x1 
 .bss           0x00000000c002e46a        0x2 core/tss.32
                0x00000000c002e46a                doubleFaultSelector
 *fill*         0x00000000c002e46c       0x14 
 .bss           0x00000000c002e480       0x84 core/unixfile.32
                0x00000000c002e480                sfileLpt
                0x00000000c002e4c0                sfileCom
                0x00000000c002e4e4                sfileNul
                0x00000000c002e4e8                sfilePnt
                0x00000000c002e4ec                sfileAux
                0x00000000c002e4f0                sfileCon
                0x00000000c002e4f4                initialFilesAdded
                0x00000000c002e4f8                unixFileLinkedList
 .bss           0x00000000c002e504        0x8 core/virtmgr.32
                0x00000000c002e504                Virt::swapfileBitmap
                0x00000000c002e508                firstVAS
 .bss           0x00000000c002e50c        0x0 coreobjs/c++.32
 .bss           0x00000000c002e50c        0x0 dbg/kconsole.32
 .bss           0x00000000c002e50c        0x4 fs/vfs.32
                0x00000000c002e50c                installedFilesystems
 .bss           0x00000000c002e510        0x0 hal/bus.32
 .bss           0x00000000c002e510        0x4 hal/buzzer.32
                0x00000000c002e510                systemBuzzer
 .bss           0x00000000c002e514        0x8 hal/clock.32
                0x00000000c002e514                User::dstOn
                0x00000000c002e515                User::timezoneHalfHourOffset
                0x00000000c002e518                User::timezoneHourOffset
 .bss           0x00000000c002e51c        0x0 hal/device.32
 .bss           0x00000000c002e51c        0x0 hal/diskctrl.32
 .bss           0x00000000c002e51c        0x0 hal/diskphys.32
 .bss           0x00000000c002e51c        0x0 hal/fpu.32
 .bss           0x00000000c002e51c       0x1c hal/intctrl.32
                0x00000000c002e51c                pf5
                0x00000000c002e520                pf4
                0x00000000c002e524                pf3
                0x00000000c002e528                pf2
                0x00000000c002e52c                pf1
                0x00000000c002e530                pf0
                0x00000000c002e534                gpFaultIntercept
 *fill*         0x00000000c002e538        0x8 
 .bss           0x00000000c002e540      0x429 hal/keybrd.32
                0x00000000c002e540                keyboardWaitingTaskList
                0x00000000c002e544                keyboardSetupYet
                0x00000000c002e548                guiKeyboardHandler
                0x00000000c002e560                keystates
 *fill*         0x00000000c002e969       0x17 
 .bss           0x00000000c002e980       0x88 hal/logidisk.32
                0x00000000c002e980                diskAssignments
                0x00000000c002e9a0                disks
 .bss           0x00000000c002ea08        0x4 hal/mouse.32
                0x00000000c002ea08                guiMouseHandler
 .bss           0x00000000c002ea0c        0x0 hal/partition.32
 .bss           0x00000000c002ea0c        0x0 hal/serial.32
 *fill*         0x00000000c002ea0c        0x4 
 .bss           0x00000000c002ea10        0x8 hal/timer.32
                0x00000000c002ea10                nanoSinceBoot
 *fill*         0x00000000c002ea18        0x8 
 .bss           0x00000000c002ea20     0x2000 hal/vcache.32
                0x00000000c002ea20                testBuffer
 .bss           0x00000000c0030a20        0x4 hal/video.32
                0x00000000c0030a20                screen
 *fill*         0x00000000c0030a24       0x1c 
 .bss           0x00000000c0030a40      0x480 hw/acpi.32
                0x00000000c0030a40                systemSleepFunction
                0x00000000c0030a44                systemResetFunction
                0x00000000c0030a48                systemShutdownFunction
                0x00000000c0030a4c                nextACPITable
                0x00000000c0030a60                acpiTables
                0x00000000c0030c60                usingXSDT
                0x00000000c0030c64                MADTpointer
                0x00000000c0030c68                RSDTpointer
                0x00000000c0030c6c                RSDPpointer
                0x00000000c0030c70                nextAPICNMI
                0x00000000c0030c80                apicNMIInfo
                0x00000000c0030d00                legacyIRQFlags
                0x00000000c0030d20                ioapicDiscoveryNumber
                0x00000000c0030d40                ioapicFoundInMADT
                0x00000000c0030d60                ioapicAddresses
                0x00000000c0030de0                ioapicGSIBase
                0x00000000c0030e60                processorDiscoveryNumber
                0x00000000c0030e80                matchingAPICID
                0x00000000c0030ea0                processorID
 .bss           0x00000000c0030ec0       0x10 hw/cpu.32
                0x00000000c0030ec0                lastD
                0x00000000c0030ec4                lastC
                0x00000000c0030ec8                lastB
                0x00000000c0030ecc                lastA
 .bss           0x00000000c0030ed0        0x0 hw/ports.32
 .bss           0x00000000c0030ed0        0x1 hw/smp.32
                0x00000000c0030ed0                Krnl::bspID
 *fill*         0x00000000c0030ed1        0x3 
 .bss           0x00000000c0030ed4        0x8 krnl/env.32
                0x00000000c0030ed4                Krnl::userEnv
                0x00000000c0030ed8                Krnl::systemEnv
 .bss           0x00000000c0030edc        0x9 krnl/panic.32
                0x00000000c0030edc                Krnl::guiProgramFaultHandler
                0x00000000c0030ee0                Krnl::guiPanicHandler
                0x00000000c0030ee4                Krnl::kernelInPanic
 .bss           0x00000000c0030ee5        0x0 net/ethernet.32
 .bss           0x00000000c0030ee5        0x0 reg/registry.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_eject.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_exit.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_getpid.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_read.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_settime.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_timezone.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_write.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0030ee5        0x0 sys/sc_yield.32
 *fill*         0x00000000c0030ee5       0x1b 
 .bss           0x00000000c0030f00      0x200 sys/syscalls.32
                0x00000000c0030f00                systemCallHandlers
 .bss           0x00000000c0031100      0x7a4 thr/elf.32
                0x00000000c0031100                Thr::driverLookupNext
                0x00000000c0031120                Thr::driverLookupLen
                0x00000000c0031320                Thr::driverLookupAddr
                0x00000000c0031520                Thr::driverNameLookup
                0x00000000c0031720                Thr::kernelSymbols
                0x00000000c00317a0                Thr::kernelStringTable
                0x00000000c0031820                Thr::kernelSymbolTable
                0x00000000c00318a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00318a4        0x4 
 .bss           0x00000000c00318a8       0x68 thr/prcssthr.32
                0x00000000c00318a8                cleanerThread
                0x00000000c00318ac                weNeedTheCleanerToNotBlock
                0x00000000c00318b0                xxxx
                0x00000000c00318b4                retValLockStuff
                0x00000000c00318b8                retValSchedLock
                0x00000000c00318bc                lockStuffLock
                0x00000000c00318c0                schedulerLock
                0x00000000c00318c4                taskSwitchesPostponedFlag
                0x00000000c00318c8                postponeTaskSwitchesCounter
                0x00000000c00318cc                irqDisableCounter
                0x00000000c00318d0                terminatedTaskList
                0x00000000c00318dc                sleepingTaskList
                0x00000000c00318e8                taskList
                0x00000000c00318f4                kernelProcess
 *fill*         0x00000000c0031910       0x10 
 .bss           0x00000000c0031920       0x40 vm86/vm8086.32
                0x00000000c0031920                Vm::vmRetV
                0x00000000c0031924                Vm::vmDone
                0x00000000c0031925                Vm::vmReady
                0x00000000c0031928                Vm::vm86Thread
                0x00000000c003192c                Vm::vmToHostCommsPtr
                0x00000000c0031940                Vm::vmToHostComms
 .bss           0x00000000c0031960       0x48 vm86/x87em.32
                0x00000000c0031960                Vm::fpuState
 *fill*         0x00000000c00319a8       0x18 
 .bss           0x00000000c00319c0       0xf0 fs/fat/vfslink.32
                0x00000000c00319c0                FAT::fats
                0x00000000c00319e0                FAT::vfsToFatRemaps
                0x00000000c0031a60                fatToVFSRemaps
 *fill*         0x00000000c0031ab0       0x10 
 .bss           0x00000000c0031ac0      0x820 fs/iso9660/vfslink.32
                0x00000000c0031ac0                recentSector
                0x00000000c0031ae0                recentBuffer
 .bss           0x00000000c00322e0      0x401 hal/sound/sndchannel.32
                0x00000000c00322e0                lookupTable8
                0x00000000c00326e0                gotLookupTable
 .bss           0x00000000c00326e1        0x0 hal/sound/sndhw.32
 .bss           0x00000000c00326e1        0x0 hw/bus/isa.32
 .bss           0x00000000c00326e1        0x0 hw/bus/pci.32
 .bss           0x00000000c00326e1        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00326e1        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00326e1        0x3 
 .bss           0x00000000c00326e4        0x8 hw/diskphys/ata.32
                0x00000000c00326e4                ataSectorsWritten
                0x00000000c00326e8                ataSectorsRead
 .bss           0x00000000c00326ec        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00326ec        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00326ec        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c00326ec        0x0 hw/fpu/avx.32
 .bss           0x00000000c00326ec        0x0 hw/fpu/mmx.32
 .bss           0x00000000c00326ec        0x0 hw/fpu/sse.32
 .bss           0x00000000c00326ec        0x0 hw/fpu/x87.32
 *fill*         0x00000000c00326ec       0x14 
 .bss           0x00000000c0032700       0x41 hw/intctrl/apic.32
                0x00000000c0032700                noOfIOAPICs
                0x00000000c0032720                ioapics
                0x00000000c0032740                IOAPICsSetupYet
 .bss           0x00000000c0032741        0x0 hw/intctrl/pic.32
 .bss           0x00000000c0032741        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0032741        0x3 
 .bss           0x00000000c0032744        0x4 hw/timer/pit.32
                0x00000000c0032744                pitFreq
 .bss           0x00000000c0032748        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0032748        0x0 crtn.32
 .bss           0x00000000c0032748        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0032748        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0032748        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0032748        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .bss           0x00000000c0032748        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .bss           0x00000000c0032748        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .bss           0x00000000c0032748        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .bss           0x00000000c0032748        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c0032748        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c0032748        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0032748                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0036f48                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
