Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                              hal/sound/sndhw.32 (__addsf3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                              hal/libresample/src_linear.32 (__adddf3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                              hal/libresample/samplerate.32 (__truncdfsf2)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD net/ethernet.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x28648
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x4ed D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                voodooXADD
                0x00000000c000027f                doTPAUSE
                0x00000000c0000289                hasLegacyFPU
                0x00000000c00002ae                is486
                0x00000000c00002e4                detectCPUID
                0x00000000c00002fa                goToVM86
                0x00000000c000032a                goToUsermode
                0x00000000c0000354                switchToThreadASMFirstTime
                0x00000000c0000362                switchToThreadASM
                0x00000000c00003ea                asmQuickAcquireLock
                0x00000000c0000408                asmQuickReleaseLock
                0x00000000c0000414                asmAcquireLock
                0x00000000c0000435                asmReleaseLock
                0x00000000c0000448                loadGDT
                0x00000000c0000468                isr0
                0x00000000c0000478                isr1
                0x00000000c0000482                isr2
                0x00000000c000048c                isr3
                0x00000000c0000496                isr4
                0x00000000c00004a0                isr5
                0x00000000c00004aa                isr6
                0x00000000c00004b4                isr7
                0x00000000c00004be                isr8
                0x00000000c00004c6                isr9
                0x00000000c00004d0                isr10
                0x00000000c00004d8                isr11
                0x00000000c00004e0                isr12
                0x00000000c00004e8                isr13
                0x00000000c00004f0                isr14
                0x00000000c00004f8                isr15
                0x00000000c0000502                isr16
                0x00000000c000050c                isr17
                0x00000000c0000516                isr18
                0x00000000c0000520                irq3
                0x00000000c000052a                irq4
                0x00000000c0000534                irq5
                0x00000000c000053e                irq6
                0x00000000c0000548                irq7
                0x00000000c0000552                irq8
                0x00000000c000055c                irq9
                0x00000000c0000566                irq10
                0x00000000c0000570                irq11
                0x00000000c000057a                irq12
                0x00000000c0000584                irq13
                0x00000000c000058e                irq14
                0x00000000c0000598                irq15
                0x00000000c00005a2                irq1
                0x00000000c00005a9                irq2
                0x00000000c00005b0                isr96
                0x00000000c00005b7                irq0
                0x00000000c00005bc                int_common_stub
                0x00000000c00005bc                syscall_common_stub
                0x00000000c00005ed                irq16
                0x00000000c00005f7                irq17
                0x00000000c0000601                irq18
                0x00000000c000060b                irq19
                0x00000000c0000615                irq20
                0x00000000c000061f                irq21
                0x00000000c0000629                irq22
                0x00000000c0000633                irq23
 *fill*         0x00000000c000063d        0x3 
 .text          0x00000000c0000640      0x611 acpica/utclib.32
                0x00000000c0000640                memcmp
                0x00000000c000067c                memmove
                0x00000000c0000744                memcpy
                0x00000000c0000778                memset
                0x00000000c0000794                strlen
                0x00000000c00007ac                strpbrk
                0x00000000c00007e8                strtok
                0x00000000c0000834                strcpy
                0x00000000c0000858                strncpy
                0x00000000c00008c0                strcmp
                0x00000000c0000900                strchr
                0x00000000c0000924                strncmp
                0x00000000c0000974                strcat
                0x00000000c00009a4                strncat
                0x00000000c00009e0                strstr
                0x00000000c0000a28                toupper
                0x00000000c0000a3c                tolower
                0x00000000c0000a50                simple_strtoul
 .text          0x00000000c0000c51      0xfbf core/malloc.32
                0x00000000c0000dbc                dlfree
                0x00000000c0001117                dlmalloc
                0x00000000c0001654                dlrealloc
                0x00000000c0001809                dlmemalign
                0x00000000c000192c                dlcalloc
                0x00000000c00019c6                dlcfree
                0x00000000c00019cb                dlindependent_calloc
                0x00000000c00019f0                dlindependent_comalloc
                0x00000000c0001a07                dlvalloc
                0x00000000c0001a32                dlpvalloc
                0x00000000c0001a68                dlmalloc_trim
                0x00000000c0001a75                dlmalloc_usable_size
                0x00000000c0001aa6                dlmallinfo
                0x00000000c0001b75                dlmalloc_stats
                0x00000000c0001b86                dlmallopt
 .text          0x00000000c0001c10        0x0 libk/string.32
 .text          0x00000000c0001c10       0x51 fs/fat/diskio.32
                0x00000000c0001c10                disk_status
                0x00000000c0001c13                disk_initialize
                0x00000000c0001c16                disk_read
                0x00000000c0001c2c                disk_write
                0x00000000c0001c42                disk_ioctl
 .text          0x00000000c0001c61     0x6833 fs/fat/ff.32
                0x00000000c0004f2f                f_mount
                0x00000000c0004f91                f_open
                0x00000000c00053cd                f_read
                0x00000000c000564d                f_write
                0x00000000c0005907                f_sync
                0x00000000c0005ae3                f_close
                0x00000000c0005b12                f_lseek
                0x00000000c0005fc9                f_opendir
                0x00000000c00060cb                f_closedir
                0x00000000c00060ed                f_readdir
                0x00000000c0006188                f_stat
                0x00000000c0006217                f_getfree
                0x00000000c00063e2                f_truncate
                0x00000000c00064da                f_unlink
                0x00000000c000665d                f_mkdir
                0x00000000c0006889                f_rename
                0x00000000c0006b7c                f_chmod
                0x00000000c0006c5a                f_utime
                0x00000000c0006d38                f_getlabel
                0x00000000c0006f26                f_setlabel
                0x00000000c0007193                f_forward
                0x00000000c0007371                f_mkfs
 .text          0x00000000c0008494       0x2d fs/fat/ffsystem.32
                0x00000000c0008494                ff_memalloc
                0x00000000c00084aa                ff_memfree
 .text          0x00000000c00084c1      0x253 fs/fat/ffunicode.32
                0x00000000c00084c1                ff_uni2oem
                0x00000000c0008551                ff_oem2uni
                0x00000000c00085bd                ff_wtoupper
 .text          0x00000000c0008714      0x8fb hal/libresample/samplerate.32
                0x00000000c0008758                src_delete
                0x00000000c0008794                src_process
                0x00000000c000894a                src_callback_read
                0x00000000c0008ac7                src_set_ratio
                0x00000000c0008b31                src_get_channels
                0x00000000c0008b53                src_reset
                0x00000000c0008b9f                src_new
                0x00000000c0008c2d                src_callback_new
                0x00000000c0008c8f                src_get_name
                0x00000000c0008cc6                src_get_description
                0x00000000c0008cfd                src_get_version
                0x00000000c0008d03                src_is_valid_ratio
                0x00000000c0008d57                src_error
                0x00000000c0008d65                src_strerror
                0x00000000c0008d78                src_simple
                0x00000000c0008dcb                src_short_to_float_array
                0x00000000c0008e30                src_float_to_short_array
                0x00000000c0008eef                src_int_to_float_array
                0x00000000c0008f52                src_float_to_int_array
 .text          0x00000000c000900f      0x8cb hal/libresample/src_linear.32
                0x00000000c0009835                linear_get_name
                0x00000000c0009844                linear_get_description
                0x00000000c0009853                linear_set_converter
 .text          0x00000000c00098da     0x447c hal/libresample/src_sinc.32
                0x00000000c000dc6d                sinc_get_name
                0x00000000c000dc80                sinc_get_description
                0x00000000c000dc93                sinc_set_converter
 .text          0x00000000c000dd56      0x77c hal/libresample/src_zoh.32
                0x00000000c000e42d                zoh_get_name
                0x00000000c000e43c                zoh_get_description
                0x00000000c000e44b                zoh_set_converter
 .text          0x00000000c000e4d2       0x23 compat/inlines.32
                0x00000000c000e4d2                CPU::current()
                0x00000000c000e4df                operator new(unsigned long)
 .text          0x00000000c000e4f5      0x111 compat/resolve.32
                0x00000000c000e4f5                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c000e606      0xa17 core/computer.32
                0x00000000c000e606                Computer::close(int, int, void*)
                0x00000000c000e64a                Krnl::firstTask()
                0x00000000c000e73a                Computer::Computer()
                0x00000000c000e73a                Computer::Computer()
                0x00000000c000e896                Computer::setBootMessage(char const*)
                0x00000000c000e898                Computer::detectFeatures()
                0x00000000c000eaa2                Computer::displayFeatures()
                0x00000000c000ede8                Computer::rdmsr(unsigned int)
                0x00000000c000ee14                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000ee4c                Computer::nmiEnabled()
                0x00000000c000ee58                Computer::readCMOS(unsigned char)
                0x00000000c000ee72                Computer::enableNMI(bool)
                0x00000000c000ee8a                Computer::open(int, int, void*)
                0x00000000c000ef60                Computer::disableNMI()
                0x00000000c000ef6e                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000ef8c                Computer::handleNMI()
                0x00000000c000eff2                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000f01d        0x1 
 .text          0x00000000c000f01e      0x1b7 core/gdt.32
                0x00000000c000f01e                GDTEntry::setBase(unsigned int)
                0x00000000c000f03a                GDTEntry::setLimit(unsigned int)
                0x00000000c000f058                GDT::GDT()
                0x00000000c000f058                GDT::GDT()
                0x00000000c000f06e                GDT::addEntry(GDTEntry)
                0x00000000c000f0aa                GDT::getNumberOfEntries()
                0x00000000c000f0b2                GDT::flush()
                0x00000000c000f0d4                GDT::setup()
 .text          0x00000000c000f1d5       0x62 core/idle.32
                0x00000000c000f1d5                idleFunction(void*)
 *fill*         0x00000000c000f237        0x1 
 .text          0x00000000c000f238      0x45f core/idt.32
                0x00000000c000f238                IDTEntry::IDTEntry(bool)
                0x00000000c000f238                IDTEntry::IDTEntry(bool)
                0x00000000c000f2a6                IDTEntry::setOffset(unsigned int)
                0x00000000c000f2ba                IDT::IDT()
                0x00000000c000f2ba                IDT::IDT()
                0x00000000c000f2bc                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000f2c4                IDT::addEntry(IDTEntry, int)
                0x00000000c000f2de                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000f316                IDT::flush()
                0x00000000c000f330                IDT::setup()
 .text          0x00000000c000f697      0x203 core/kheap.32
                0x00000000c000f697                sbrk
                0x00000000c000f7a5                mmap
                0x00000000c000f7bb                munmap
                0x00000000c000f7d1                liballoc_lock()
                0x00000000c000f7e2                liballoc_unlock()
                0x00000000c000f7f3                liballoc_alloc(int)
                0x00000000c000f80e                liballoc_free(void*, int)
                0x00000000c000f82c                realloc
                0x00000000c000f840                malloc
                0x00000000c000f850                free
                0x00000000c000f860                rfree
                0x00000000c000f870                calloc
 .text          0x00000000c000f89a      0x485 core/main.32
                0x00000000c000f89a                hwTextMode_loadInData(VgaText*)
                0x00000000c000f8e5                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000f963                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000f9c1                hwTextMode_update(VgaText*)
                0x00000000c000f9c2                hwTextMode_updateCursor(VgaText*)
                0x00000000c000fa13                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000fa59                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000fb06                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000fb88                setupTextMode()
                0x00000000c000fbf8                kernel_main
 .text          0x00000000c000fd1f      0x5c8 core/physmgr.32
                0x00000000c000fd1f                Phys::allocateDMA(unsigned long)
                0x00000000c000fdc2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000fe0a                Phys::setPageState(unsigned long, bool)
                0x00000000c000fe3c                Phys::getPageState(unsigned long)
                0x00000000c000fe58                Phys::freePage(unsigned long)
                0x00000000c000fee2                Phys::allocatePage()
                0x00000000c0010025                Phys::allocateContiguousPages(int)
                0x00000000c001007f                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c00100b7                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c00102e7        0x1 
 .text          0x00000000c00102e8      0x273 core/pipe.32
                0x00000000c00102e8                Pipe::isAtty()
                0x00000000c00102ec                Pipe::~Pipe()
                0x00000000c00102ec                Pipe::~Pipe()
                0x00000000c0010310                Pipe::~Pipe()
                0x00000000c0010338                Pipe::read(unsigned long long, void*, int*)
                0x00000000c001042c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00104f4                Pipe::Pipe(int)
                0x00000000c00104f4                Pipe::Pipe(int)
 *fill*         0x00000000c001055b        0x1 
 .text          0x00000000c001055c      0xf73 core/terminal.32
                0x00000000c001055c                VgaText::isAtty()
                0x00000000c0010560                VgaText::~VgaText()
                0x00000000c0010560                VgaText::~VgaText()
                0x00000000c0010584                VgaText::~VgaText()
                0x00000000c00105ae                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00105ce                setTerminalScrollLock(bool)
                0x00000000c00105cf                addToTerminalCycle(VgaText*)
                0x00000000c00105fc                installVgaTextImplementation()
                0x00000000c0010611                scrollTerminalScrollLock(int)
                0x00000000c0010612                VgaText::load()
                0x00000000c0010666                VgaText::updateCursor()
                0x00000000c0010680                VgaText::showCursor(bool)
                0x00000000c0010690                VgaText::disableBlink(bool)
                0x00000000c00106ca                VgaText::doANSI_SGR(int)
                0x00000000c0010756                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c001076c                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0010782                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00107a2                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00107b4                VgaText::scrollScreen()
                0x00000000c0010848                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c001085a                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00108ba                VgaText::getCursorX()
                0x00000000c00108c6                VgaText::getCursorY()
                0x00000000c00108d2                VgaText::setCursor(int, int)
                0x00000000c00108f0                VgaText::setCursorX(int)
                0x00000000c001090c                VgaText::setCursorY(int)
                0x00000000c0010928                VgaText::incrementCursor(bool)
                0x00000000c0010990                VgaText::updateRAMUsageDisplay(int)
                0x00000000c00109f4                VgaText::updateDiskUsage()
                0x00000000c0010b5e                VgaText::updateTitle()
                0x00000000c0010ba4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0010bb4                VgaText::setTitleColour(VgaColour)
                0x00000000c0010bc4                VgaText::setTitle(char*)
                0x00000000c0010bea                VgaText::decrementCursor(bool)
                0x00000000c0010c12                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0010d0e                VgaText::isShowingCursor()
                0x00000000c0010d1a                VgaText::isBlinkDisabled()
                0x00000000c0010d28                VgaText::setCursorHeight(int)
                0x00000000c0010d46                VgaText::getCursorHeight()
                0x00000000c0010d51                setActiveTerminal(VgaText*)
                0x00000000c0010e03                doTerminalCycle()
                0x00000000c0010e20                VgaText::doUpdate()
                0x00000000c0010e32                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0010ff2                VgaText::clearScreen()
                0x00000000c0011056                VgaText::putchar(char)
                0x00000000c0011170                VgaText::puts(char const*)
                0x00000000c0011196                VgaText::putx(unsigned int)
                0x00000000c00111dc                VgaText::VgaText(char const*)
                0x00000000c00111dc                VgaText::VgaText(char const*)
                0x00000000c001136e                VgaText::receiveKey(unsigned char)
                0x00000000c0011456                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00114aa                newTerminal(char*)
 *fill*         0x00000000c00114cf        0x1 
 .text          0x00000000c00114d0      0x1b3 core/tss.32
                0x00000000c00114d0                TSS::TSS()
                0x00000000c00114d0                TSS::TSS()
                0x00000000c00114de                TSS::setESP(unsigned long)
                0x00000000c00114f0                TSS::flush()
                0x00000000c0011510                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0011683        0x1 
 .text          0x00000000c0011684      0x4c2 core/unixfile.32
                0x00000000c0011684                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00116da                ReservedFilename::isAtty()
                0x00000000c00116f6                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011754                UnixFile::getFileDescriptor()
                0x00000000c001175c                UnixFile::UnixFile(int)
                0x00000000c001175c                UnixFile::UnixFile(int)
                0x00000000c001190c                ReservedFilename::ReservedFilename(int)
                0x00000000c001190c                ReservedFilename::ReservedFilename(int)
                0x00000000c001193e                UnixFile::~UnixFile()
                0x00000000c001193e                UnixFile::~UnixFile()
                0x00000000c00119d6                UnixFile::~UnixFile()
                0x00000000c00119fe                ReservedFilename::~ReservedFilename()
                0x00000000c00119fe                ReservedFilename::~ReservedFilename()
                0x00000000c0011a22                ReservedFilename::~ReservedFilename()
                0x00000000c0011a49                getFromFileDescriptor(int)
 .text          0x00000000c0011b46     0x1294 core/virtmgr.32
                0x00000000c0011b46                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0011b7b                Virt::getPageState(unsigned long)
                0x00000000c0011b9f                Virt::allocateKernelVirtualPages(int)
                0x00000000c0011cb0                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0011cce                Virt::swapIDToSector(unsigned long)
                0x00000000c0011ce0                Virt::allocateSwapfilePage()
                0x00000000c0011d5e                Virt::virtualMemorySetup()
                0x00000000c0011ddd                Virt::swappingSetup()
                0x00000000c0011e3a                Virt::getAKernelVAS()
                0x00000000c0011e40                Virt::setupPageSwapping(int)
                0x00000000c0011f70                VAS::VAS()
                0x00000000c0011f70                VAS::VAS()
                0x00000000c0011fa0                VAS::VAS(VAS*)
                0x00000000c0011fa0                VAS::VAS(VAS*)
                0x00000000c0011fc4                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0011ff0                VAS::getPageTableEntry(unsigned long)
                0x00000000c001200f                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0012132                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0012156                VAS::virtualToPhysical(unsigned long)
                0x00000000c001216e                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c00121ae                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00121e0                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c001220a                VAS::~VAS()
                0x00000000c001220a                VAS::~VAS()
                0x00000000c0012376                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0012476                VAS::allocatePages(int, int)
                0x00000000c001264e                VAS::setCPUSpecific(unsigned long)
                0x00000000c001266a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0012730                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c001281e                VAS::VAS(bool)
                0x00000000c001281e                VAS::VAS(bool)
                0x00000000c0012a7a                VAS::evict(unsigned long)
                0x00000000c0012b56                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0012c68                VAS::scanForEviction(int, int)
                0x00000000c0012d1e                mapVASFirstTime
 .text          0x00000000c0012dda       0x95 coreobjs/c++.32
                0x00000000c0012dda                __cxa_atexit
                0x00000000c0012ddd                __cxa_finalize
                0x00000000c0012dde                __stack_chk_fail
                0x00000000c0012e4a                __cxa_pure_virtual
                0x00000000c0012e5b                operator new[](unsigned long)
                0x00000000c0012e60                operator delete(void*, unsigned long)
                0x00000000c0012e65                operator delete[](void*)
                0x00000000c0012e6a                operator delete[](void*, unsigned long)
 .text          0x00000000c0012e6f      0x1ef dbg/kconsole.32
                0x00000000c0012e6f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0012ed0                Dbg::logc(char)
                0x00000000c0012ee7                Dbg::logs(char*)
                0x00000000c0012f04                Dbg::logWriteInt(unsigned int)
                0x00000000c0012f21                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0012f40                Dbg::kprintf(char const*, ...)
 .text          0x00000000c001305e      0xb7c fs/vfs.32
                0x00000000c001305e                File::read(unsigned long long, void*, int*)
                0x00000000c00130b6                File::write(unsigned long long, void*, int*)
                0x00000000c001310e                Directory::read(unsigned long long, void*, int*)
                0x00000000c0013166                Directory::write(unsigned long long, void*, int*)
                0x00000000c0013194                File::isAtty()
                0x00000000c0013198                Directory::isAtty()
                0x00000000c001319c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00131a2                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c00131a8                File::~File()
                0x00000000c00131a8                File::~File()
                0x00000000c00131cc                File::~File()
                0x00000000c00131f6                Directory::~Directory()
                0x00000000c00131f6                Directory::~Directory()
                0x00000000c001321a                Directory::~Directory()
                0x00000000c0013244                Filesystem::Filesystem()
                0x00000000c0013244                Filesystem::Filesystem()
                0x00000000c0013268                Filesystem::~Filesystem()
                0x00000000c0013268                Filesystem::~Filesystem()
                0x00000000c0013276                Filesystem::~Filesystem()
                0x00000000c001329a                Fs::getcwd(Process*, char*, int)
                0x00000000c00132c4                Fs::initVFS()
                0x00000000c00132ee                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c0013498                File::File(char const*, Process*)
                0x00000000c0013498                File::File(char const*, Process*)
                0x00000000c00134fc                File::open(FileOpenMode)
                0x00000000c001355a                File::close()
                0x00000000c00135ba                File::seek(unsigned long long)
                0x00000000c0013610                File::tell(unsigned long long*)
                0x00000000c0013660                File::rewind()
                0x00000000c0013674                File::unlink()
                0x00000000c00136c0                File::rename(char const*)
                0x00000000c001370e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c001376a                File::exists()
                0x00000000c00137a8                File::stat(unsigned long long*, bool*)
                0x00000000c0013809                Fs::setcwd(Process*, char*)
                0x00000000c0013944                Directory::Directory(char const*, Process*)
                0x00000000c0013944                Directory::Directory(char const*, Process*)
                0x00000000c00139a8                Directory::open()
                0x00000000c0013a04                Directory::close()
                0x00000000c0013a64                Directory::unlink()
                0x00000000c0013ab0                Directory::rename(char const*)
                0x00000000c0013afe                Directory::exists()
                0x00000000c0013b3c                Directory::read(dirent*)
                0x00000000c0013b88                Directory::create()
                0x00000000c0013bd4                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0013bda       0x84 hal/bus.32
                0x00000000c0013bda                Bus::Bus(char const*)
                0x00000000c0013bda                Bus::Bus(char const*)
                0x00000000c0013c10                Bus::~Bus()
                0x00000000c0013c10                Bus::~Bus()
                0x00000000c0013c34                Bus::~Bus()
 .text          0x00000000c0013c5e      0x14e hal/buzzer.32
                0x00000000c0013c5e                Buzzer::Buzzer(char const*)
                0x00000000c0013c5e                Buzzer::Buzzer(char const*)
                0x00000000c0013ca2                Buzzer::~Buzzer()
                0x00000000c0013ca2                Buzzer::~Buzzer()
                0x00000000c0013cc6                Buzzer::~Buzzer()
                0x00000000c0013cf0                Buzzer::stop()
                0x00000000c0013d03                beepThread(void*)
                0x00000000c0013d3e                Buzzer::beep(int, int, bool)
 .text          0x00000000c0013dac      0x467 hal/clock.32
                0x00000000c0013dac                User::loadClockSettings(int)
                0x00000000c0013dfe                Clock::Clock(char const*)
                0x00000000c0013dfe                Clock::Clock(char const*)
                0x00000000c0013e34                Clock::~Clock()
                0x00000000c0013e34                Clock::~Clock()
                0x00000000c0013e58                Clock::~Clock()
                0x00000000c0013e82                Clock::timeInSecondsLocal()
                0x00000000c0013eca                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0013f23                datetimeToSeconds(datetime_t)
                0x00000000c001404a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c00140aa                secondsToDatetime(unsigned long long)
                0x00000000c00141ee                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0014213        0x1 
 .text          0x00000000c0014214      0x4de hal/device.32
                0x00000000c0014214                Device::hibernate()
                0x00000000c0014216                Device::wake()
                0x00000000c0014218                Device::detect()
                0x00000000c001421a                Device::disableLegacy()
                0x00000000c001421c                Device::powerSaving(PowerSavingLevel)
                0x00000000c001421e                DriverlessDevice::close(int, int, void*)
                0x00000000c0014222                DriverlessDevice::detect()
                0x00000000c0014224                DriverlessDevice::open(int, int, void*)
                0x00000000c0014238                Device::~Device()
                0x00000000c0014238                Device::~Device()
                0x00000000c0014246                Device::~Device()
                0x00000000c001426e                Device::findAndLoadDriver()
                0x00000000c0014270                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0014296                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00142ea                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0014328                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0014366                Device::addChild(Device*)
                0x00000000c00143aa                Device::removeAllChildren()
                0x00000000c00143f0                Device::hibernateAll()
                0x00000000c0014420                Device::wakeAll()
                0x00000000c0014450                Device::detectAll()
                0x00000000c0014480                Device::disableLegacyAll()
                0x00000000c00144b0                Device::loadDriversForAll()
                0x00000000c00144dc                Device::closeAll()
                0x00000000c0014512                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0014548                Device::setName(char const*)
                0x00000000c0014556                Device::Device(char const*)
                0x00000000c0014556                Device::Device(char const*)
                0x00000000c0014652                Device::getName()
                0x00000000c001465c                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c001465c                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0014684                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00146c8                getDevicesOfType(DeviceType)
 .text          0x00000000c00146f2       0x84 hal/diskctrl.32
                0x00000000c00146f2                HardDiskController::HardDiskController(char const*)
                0x00000000c00146f2                HardDiskController::HardDiskController(char const*)
                0x00000000c0014728                HardDiskController::~HardDiskController()
                0x00000000c0014728                HardDiskController::~HardDiskController()
                0x00000000c001474c                HardDiskController::~HardDiskController()
 .text          0x00000000c0014776       0xf2 hal/diskphys.32
                0x00000000c0014776                PhysicalDisk::eject()
                0x00000000c001478a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c001478a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00147f2                PhysicalDisk::startCache()
                0x00000000c001481a                PhysicalDisk::~PhysicalDisk()
                0x00000000c001481a                PhysicalDisk::~PhysicalDisk()
                0x00000000c001483e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0014868      0x13b hal/fpu.32
                0x00000000c0014868                FPU::FPU(char const*)
                0x00000000c0014868                FPU::FPU(char const*)
                0x00000000c001489e                FPU::~FPU()
                0x00000000c001489e                FPU::~FPU()
                0x00000000c00148c2                FPU::~FPU()
                0x00000000c00148ec                setupFPU()
 *fill*         0x00000000c00149a3        0x1 
 .text          0x00000000c00149a4     0x13b7 hal/intctrl.32
                0x00000000c00149a4                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c00149dc                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0014a2e                doubleFault(regs*, void*)
                0x00000000c0014a48                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0014ae4                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0014b8c                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0014c13                nmiHandler(regs*, void*)
                0x00000000c0014c21                int_handler
                0x00000000c0014cc2                InterruptController::InterruptController(char const*)
                0x00000000c0014cc2                InterruptController::InterruptController(char const*)
                0x00000000c0014d68                InterruptController::~InterruptController()
                0x00000000c0014d68                InterruptController::~InterruptController()
                0x00000000c0014d8c                InterruptController::~InterruptController()
                0x00000000c0014db6                displayDebugInfo(regs*)
                0x00000000c0015245                x87EmulHandler(regs*, void*)
                0x00000000c0015274                gpFault(regs*, void*)
                0x00000000c00152ad                pgFault(regs*, void*)
                0x00000000c00152f9                otherISRHandler(regs*, void*)
                0x00000000c0015318                opcodeFault(regs*, void*)
                0x00000000c001591e                displayProgramFault(char const*)
                0x00000000c0015946                setupInterruptController()
                0x00000000c0015d0e                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c0015d5b        0x1 
 .text          0x00000000c0015d5c      0x6c8 hal/keybrd.32
                0x00000000c0015d5c                startGUI(void*)
                0x00000000c0015db8                startGUIVESA(void*)
                0x00000000c0015e14                sendKeyToTerminal(unsigned char)
                0x00000000c0015e80                sendKeyboardToken(KeyboardToken)
                0x00000000c00162bd                clearInternalKeybuffer(VgaText*)
                0x00000000c00162f2                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c001639a                Keyboard::Keyboard(char const*)
                0x00000000c001639a                Keyboard::Keyboard(char const*)
                0x00000000c00163d6                Keyboard::~Keyboard()
                0x00000000c00163d6                Keyboard::~Keyboard()
                0x00000000c00163fa                Keyboard::~Keyboard()
 .text          0x00000000c0016424      0x414 hal/logidisk.32
                0x00000000c0016424                LogicalDisk::close(int, int, void*)
                0x00000000c0016428                LogicalDisk::~LogicalDisk()
                0x00000000c0016428                LogicalDisk::~LogicalDisk()
                0x00000000c001644c                LogicalDisk::~LogicalDisk()
                0x00000000c0016476                LogicalDisk::open(int, int, void*)
                0x00000000c001648a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c00164c2                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0016508                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0016508                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00165be                LogicalDisk::assignDriveLetter()
                0x00000000c0016674                LogicalDisk::mount()
                0x00000000c00166e6                LogicalDisk::unmount()
                0x00000000c00166f6                LogicalDisk::eject()
                0x00000000c001670a                LogicalDisk::unassignDriveLetter()
                0x00000000c0016760                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c00167cc                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0016838       0x84 hal/mouse.32
                0x00000000c0016838                Mouse::Mouse(char const*)
                0x00000000c0016838                Mouse::Mouse(char const*)
                0x00000000c001686e                Mouse::~Mouse()
                0x00000000c001686e                Mouse::~Mouse()
                0x00000000c0016892                Mouse::~Mouse()
 .text          0x00000000c00168bc      0x34d hal/partition.32
                0x00000000c00168bc                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0016978                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0016c09        0x1 
 .text          0x00000000c0016c0a       0x84 hal/serial.32
                0x00000000c0016c0a                Serial::Serial(char const*)
                0x00000000c0016c0a                Serial::Serial(char const*)
                0x00000000c0016c40                Serial::~Serial()
                0x00000000c0016c40                Serial::~Serial()
                0x00000000c0016c64                Serial::~Serial()
 .text          0x00000000c0016c8e      0x2b8 hal/timer.32
                0x00000000c0016c8e                Timer::Timer(char const*)
                0x00000000c0016c8e                Timer::Timer(char const*)
                0x00000000c0016cc4                Timer::~Timer()
                0x00000000c0016cc4                Timer::~Timer()
                0x00000000c0016ce8                Timer::~Timer()
                0x00000000c0016d12                Timer::read()
                0x00000000c0016d1d                timerHandler(unsigned long long)
                0x00000000c0016e54                setupTimer(int)
 .text          0x00000000c0016f46      0x425 hal/vcache.32
                0x00000000c0016f46                VCache::VCache(PhysicalDisk*)
                0x00000000c0016f46                VCache::VCache(PhysicalDisk*)
                0x00000000c00170ae                VCache::invalidateReadBuffer()
                0x00000000c00170be                VCache::writeWriteBuffer()
                0x00000000c00170fa                VCache::~VCache()
                0x00000000c00170fa                VCache::~VCache()
                0x00000000c001714e                VCache::~VCache()
                0x00000000c0017176                VCache::write(unsigned long long, int, void*)
                0x00000000c001726c                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c001736b        0x1 
 .text          0x00000000c001736c      0x4cd hal/video.32
                0x00000000c001736c                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00173b8                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c0017428                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c00174a6                Video::clearScreen(unsigned int)
                0x00000000c00174da                Video::putpixel(int, int, unsigned int)
                0x00000000c00174e8                Video::Video(char const*)
                0x00000000c00174e8                Video::Video(char const*)
                0x00000000c001751e                Video::~Video()
                0x00000000c001751e                Video::~Video()
                0x00000000c0017542                Video::~Video()
                0x00000000c001756c                Video::isMonochrome()
                0x00000000c0017578                Video::getWidth()
                0x00000000c0017584                Video::getHeight()
                0x00000000c0017590                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c001764c                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c00177ce                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c0017839        0x1 
 .text          0x00000000c001783a      0xf64 hw/acpi.32
                0x00000000c001783a                ACPI::close(int, int, void*)
                0x00000000c00178ef                findRSDP()
                0x00000000c0017979                loadACPITables(unsigned char*)
                0x00000000c0017ba0                findRSDT(unsigned char*)
                0x00000000c0017cbe                findDataTable(unsigned char*, char*)
                0x00000000c0017d5a                scanMADT()
                0x00000000c00181e0                ACPI::ACPI()
                0x00000000c00181e0                ACPI::ACPI()
                0x00000000c001824a                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c001832c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c00183f2                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c00183f8                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0018440                ACPI::open(int, int, void*)
                0x00000000c0018786                ACPI::sleep()
 .text          0x00000000c001879e     0x1715 hw/cpu.32
                0x00000000c001879e                CPU::close(int, int, void*)
                0x00000000c00187a2                CPU::lookupAMDName(unsigned char, unsigned char)
                0x00000000c0018936                CPU::lookupIntelName(unsigned char, unsigned char)
                0x00000000c0018be4                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0018c00                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0018c18                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0018c8c                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018d10                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0018d3e                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0018d6c                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018d9a                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018dc8                CPU::CPU()
                0x00000000c0018dc8                CPU::CPU()
                0x00000000c0018e56                CPU::displayFeatures()
                0x00000000c00190d2                CPU::detectFeatures()
                0x00000000c0019ac2                CPU::setupSMEP()
                0x00000000c0019ace                CPU::setupUMIP()
                0x00000000c0019ad8                CPU::setupTSC()
                0x00000000c0019ae2                CPU::setupLargePages()
                0x00000000c0019aec                CPU::setupPAT()
                0x00000000c0019b28                CPU::setupMTRR()
                0x00000000c0019b2a                CPU::setupGlobalPages()
                0x00000000c0019b34                CPU::allowUsermodeDataAccess()
                0x00000000c0019b46                CPU::prohibitUsermodeDataAccess()
                0x00000000c0019b58                CPU::setupSMAP()
                0x00000000c0019b66                CPU::setupFeatures()
                0x00000000c0019be6                CPU::open(int, int, void*)
                0x00000000c0019cb8                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0019eb3        0x0 hw/ports.32
 .text          0x00000000c0019eb3      0x16a hw/smp.32
                0x00000000c0019eb3                Krnl::smpEntry()
                0x00000000c0019eb5                Krnl::startCPU(int)
                0x00000000c0019ffe                Krnl::startCPUs()
 *fill*         0x00000000c001a01d        0x1 
 .text          0x00000000c001a01e      0x5d3 krnl/env.32
                0x00000000c001a01e                EnvVarContainer::getEnv(char const*)
                0x00000000c001a05c                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001a128                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001a12a                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001a320                EnvVarContainer::__loadSystem()
                0x00000000c001a33a                EnvVarContainer::__loadUser()
                0x00000000c001a33c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001a33c                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001a35e                EnvVarContainer::~EnvVarContainer()
                0x00000000c001a35e                EnvVarContainer::~EnvVarContainer()
                0x00000000c001a38e                Krnl::getEnv(Process*, char const*)
                0x00000000c001a3f3                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001a40d                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001a42c                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c001a43f                Krnl::deleteEnvSystem(char const*)
                0x00000000c001a440                Krnl::deleteEnvUser(char const*)
                0x00000000c001a441                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c001a442                Krnl::newProcessEnv(Process*)
                0x00000000c001a464                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c001a4b8                Krnl::loadSystemEnv()
                0x00000000c001a4e6                Krnl::loadUserEnv()
                0x00000000c001a50c                Krnl::flushEnv()
                0x00000000c001a50d                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001a52d                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001a5f1      0x396 krnl/panic.32
                0x00000000c001a5f1                Krnl::panic(char const*)
 .text          0x00000000c001a987      0x3b6 net/ethernet.32
                0x00000000c001a987                Net::switchEndian16(unsigned short)
                0x00000000c001a9a8                Net::switchEndian32(unsigned int)
                0x00000000c001a9d7                Net::crc32Calc(unsigned char*, int)
                0x00000000c001aa68                Net::wrapEthernetFrame(Net::UnwrappedEthernetFrame, unsigned char*)
                0x00000000c001aba4                Net::unwrapEthernetFrame(unsigned char*, int)
 .text          0x00000000c001ad3d      0x513 reg/registry.32
                0x00000000c001ad3d                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c001ae95                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001afea                Reg::getLine(char*, char*, char*)
                0x00000000c001b021                Reg::readInt(char*, char*, int*)
                0x00000000c001b10c                Reg::readString(char*, char*, char*, int)
                0x00000000c001b18d                Reg::readBool(char*, char*, bool*)
                0x00000000c001b1b2                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001b1de                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001b20a                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001b250       0x36 sys/sc_eject.32
                0x00000000c001b250                Sys::eject(regs*)
 .text          0x00000000c001b286       0x18 sys/sc_exit.32
                0x00000000c001b286                Sys::exit(regs*)
 .text          0x00000000c001b29e       0x1f sys/sc_getcwd.32
                0x00000000c001b29e                Sys::getCwd(regs*)
 .text          0x00000000c001b2bd        0xc sys/sc_getpid.32
                0x00000000c001b2bd                Sys::getPID(regs*)
 .text          0x00000000c001b2c9       0x17 sys/sc_getramdata.32
                0x00000000c001b2c9                Sys::getRAMData(regs*)
 .text          0x00000000c001b2e0       0xa8 sys/sc_loaddll.32
                0x00000000c001b2e0                Sys::loadDLL(regs*)
 .text          0x00000000c001b388       0x68 sys/sc_read.32
                0x00000000c001b388                Sys::read(regs*)
 .text          0x00000000c001b3f0       0x55 sys/sc_sbrk.32
                0x00000000c001b3f0                Sys::sbrk(regs*)
 .text          0x00000000c001b445       0x1c sys/sc_setcwd.32
                0x00000000c001b445                Sys::setCwd(regs*)
 .text          0x00000000c001b461      0x128 sys/sc_settime.32
                0x00000000c001b461                Sys::setTime(regs*)
 .text          0x00000000c001b589       0x4a sys/sc_timezone.32
                0x00000000c001b589                Sys::timezone(regs*)
 .text          0x00000000c001b5d3       0x68 sys/sc_write.32
                0x00000000c001b5d3                Sys::write(regs*)
 .text          0x00000000c001b63b       0x62 sys/sc_wsbe.32
                0x00000000c001b63b                Sys::wsbe(regs*)
 .text          0x00000000c001b69d       0x3b sys/sc_yield.32
                0x00000000c001b69d                Sys::yield(regs*)
 .text          0x00000000c001b6d8     0x10e5 sys/syscalls.32
                0x00000000c001b6d8                sysCallSeekDir(regs*)
                0x00000000c001b6dd                sysCallTellDir(regs*)
                0x00000000c001b6e2                sysCallVerify(regs*)
                0x00000000c001b6ec                sysFormatDisk(regs*)
                0x00000000c001b756                sysSetDiskVolumeLabel(regs*)
                0x00000000c001b79c                sysGetDiskVolumeLabel(regs*)
                0x00000000c001b7ed                sysShutdown(regs*)
                0x00000000c001b84b                sysCallRealpath(regs*)
                0x00000000c001b88e                sysCallGetArgc(regs*)
                0x00000000c001b8bc                sysCallReadDir(regs*)
                0x00000000c001b94a                sysCallIsATTY(regs*)
                0x00000000c001b9a4                sysCallSeek(regs*)
                0x00000000c001ba0d                sysCallTell(regs*)
                0x00000000c001ba8a                sysCallSize(regs*)
                0x00000000c001bb0d                sysCallSizeFromFilename(regs*)
                0x00000000c001bbcd                sysCallClose(regs*)
                0x00000000c001bc55                sysCallOpenDir(regs*)
                0x00000000c001bcca                sysCallCloseDir(regs*)
                0x00000000c001bd30                sysCallMakeDir(regs*)
                0x00000000c001bda0                sysCallWait(regs*)
                0x00000000c001bdba                sysCallNotImpl(regs*)
                0x00000000c001bdd5                sysPanic(regs*)
                0x00000000c001bdfb                sysCallRmdir(regs*)
                0x00000000c001be5f                sysCallUnlink(regs*)
                0x00000000c001bec3                sysCallGetArgv(regs*)
                0x00000000c001bf0f                sysCallTTYName(regs*)
                0x00000000c001bf92                sysCallUSleep(regs*)
                0x00000000c001bfb9                sysCallSpawn(regs*)
                0x00000000c001c011                sysCallGetEnv(regs*)
                0x00000000c001c149                sysAppSettings(regs*)
                0x00000000c001c268                sysSetFatAttrib(regs*)
                0x00000000c001c2da                sysPipe(regs*)
                0x00000000c001c31f                sysGetUnixTime(regs*)
                0x00000000c001c333                string_ends_with(char const*, char const*)
                0x00000000c001c37b                sysCallOpen(regs*)
                0x00000000c001c590                Sys::loadSyscalls()
                0x00000000c001c77b                Sys::systemCall(regs*, void*)
 .text          0x00000000c001c7bd     0x11d4 thr/elf.32
                0x00000000c001c7bd                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001ca4f                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001cc65                Thr::runtimeReferenceHelper()
                0x00000000c001cc78                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001ccc7                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001cf85                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001d6a1                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001d6d3                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001d70a                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001d724                Thr::loadDLL(char const*, bool)
                0x00000000c001d958                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001d991        0x1 
 .text          0x00000000c001d992     0x1056 thr/prcssthr.32
                0x00000000c001d992                changeTSS
                0x00000000c001d9c2                Process::addArgs(char**)
                0x00000000c001da1c                Process::Process(char const*, Process*, char**)
                0x00000000c001da1c                Process::Process(char const*, Process*, char**)
                0x00000000c001dc00                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001dc00                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001ddaf                disableIRQs()
                0x00000000c001ddb7                getIRQNestingLevel()
                0x00000000c001ddbd                enableIRQs()
                0x00000000c001ddcc                lockScheduler()
                0x00000000c001ddce                unlockScheduler()
                0x00000000c001ddd0                userModeEntryPoint(void*)
                0x00000000c001ddf3                lockStuff()
                0x00000000c001ddff                taskStartupFunction
                0x00000000c001de08                updateTimeUsed()
                0x00000000c001de6d                switchToThread(ThreadControlBlock*)
                0x00000000c001debe                Semaphore::Semaphore(int)
                0x00000000c001debe                Semaphore::Semaphore(int)
                0x00000000c001deec                Mutex::Mutex()
                0x00000000c001deec                Mutex::Mutex()
                0x00000000c001defe                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001dfe2                Process::createUserThread()
                0x00000000c001dffe                setupMultitasking(void (*)())
                0x00000000c001e108                schedule()
                0x00000000c001e18d                unlockStuff()
                0x00000000c001e1c2                Semaphore::tryAcquire()
                0x00000000c001e1f0                Semaphore::assertLocked(char const*)
                0x00000000c001e220                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001e262                blockTask(TaskState)
                0x00000000c001e283                waitTask(int, int*, int)
                0x00000000c001e2c5                nanoSleepUntil(unsigned long long)
                0x00000000c001e31c                nanoSleep(unsigned long long)
                0x00000000c001e331                sleep(unsigned long long)
                0x00000000c001e34e                Semaphore::acquire()
                0x00000000c001e3b6                taskReturned
                0x00000000c001e3e4                unblockTask(ThreadControlBlock*)
                0x00000000c001e493                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001e75c                cleanerTaskFunction(void*)
                0x00000000c001e80f                terminateTask(int)
                0x00000000c001e8ef                Thr::terminateFromIRQ(int)
                0x00000000c001e8fc                Semaphore::release()
 .text          0x00000000c001e9e8      0xc26 vm86/vm8086.32
                0x00000000c001e9e8                Vm::inbv(unsigned short)
                0x00000000c001e9fb                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001ea4e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001ea5e                Vm::getSegment(unsigned int)
                0x00000000c001ea66                Vm::getOffset(unsigned int)
                0x00000000c001ea6b                Vm::mainloop2()
                0x00000000c001eaa6                Vm::mainVm8086Loop(void*)
                0x00000000c001eab3                Vm::mainloop3(unsigned long)
                0x00000000c001eadd                Vm::initialise8086()
                0x00000000c001eb20                Vm::finish8086()
                0x00000000c001eb65                Vm::getOutput8086(unsigned char*)
                0x00000000c001eb8f                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001ecdf                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001ed69                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001ed7a                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001ed8c                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001ed9d                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001edb2                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001edc8                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001eddd                Vm::faultHandler(regs*)
 .text          0x00000000c001f60e      0xefd vm86/x87em.32
                0x00000000c001f60e                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c001f669                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c001f672                Vm::fpu32ToInternal(unsigned int)
                0x00000000c001f6b7                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c001f6c0                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c001f71b                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c001f751                Vm::fpuLongToFloat(long long)
                0x00000000c001f7a7                Vm::fpuGet0()
                0x00000000c001f7ac                Vm::fpuGet1()
                0x00000000c001f7b4                Vm::fpuGetPi()
                0x00000000c001f7bc                Vm::fpuGetLog2E()
                0x00000000c001f7d4                Vm::fpuGetLogE2()
                0x00000000c001f7ec                Vm::fpuGetLog210()
                0x00000000c001f804                Vm::fpuGetLog102()
                0x00000000c001f81c                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c001f830                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c001f846                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c001f899                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c001f8aa                Vm::fpuAbs(unsigned long long)
                0x00000000c001f8b3                Vm::fpuChs(unsigned long long)
                0x00000000c001f8c3                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c001f8d2                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c001f8f1                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c001f90d                Vm::fpuSquare(unsigned long long)
                0x00000000c001f923                Vm::fpuGetReg(int)
                0x00000000c001f966                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c001f9b1                Vm::fpuPush(unsigned long long)
                0x00000000c001fa0e                Vm::fpuPop()
                0x00000000c001fa60                Vm::x87Handler(regs*)
 *fill*         0x00000000c002050b        0x1 
 .text          0x00000000c002050c     0x10ed fs/fat/vfslink.32
                0x00000000c002050c                FAT::getName()
                0x00000000c0020512                FAT::tell(void*, unsigned long long*)
                0x00000000c0020546                FAT::stat(void*, unsigned long long*)
                0x00000000c002057a                FAT::~FAT()
                0x00000000c002057a                FAT::~FAT()
                0x00000000c002059e                FAT::~FAT()
                0x00000000c00205c6                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0020664                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c002071e                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0020902                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0020b08                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0020c0e                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0020c68                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0020cc2                FAT::close(void*)
                0x00000000c0020d0e                FAT::closeDir(void*)
                0x00000000c0020d5a                FAT::seek(void*, unsigned long long)
                0x00000000c0020dae                fatWrapperReadDisk
                0x00000000c0020df5                fatWrapperWriteDisk
                0x00000000c0020e3c                fatWrapperIoctl
                0x00000000c0020f40                FAT::FAT()
                0x00000000c0020f40                FAT::FAT()
                0x00000000c0020f92                FAT::fixFilepath(char*)
                0x00000000c0020fca                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00210f2                FAT::openDir(char const*, void**)
                0x00000000c0021198                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0021282                FAT::unlink(char const*)
                0x00000000c00212fc                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0021450                FAT::rename(char const*, char const*)
                0x00000000c0021514                FAT::mkdir(char const*)
                0x00000000c002158e                FAT::exists(char const*)
 *fill*         0x00000000c00215f9        0x1 
 .text          0x00000000c00215fa      0xbc1 fs/iso9660/vfslink.32
                0x00000000c00215fa                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0021600                ISO9660::seek(void*, unsigned long long)
                0x00000000c0021630                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0021654                ISO9660::getName()
                0x00000000c002165a                ISO9660::stat(void*, unsigned long long*)
                0x00000000c002167e                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0021684                ISO9660::unlink(char const*)
                0x00000000c002168a                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0021690                ISO9660::rename(char const*, char const*)
                0x00000000c0021696                ISO9660::mkdir(char const*)
                0x00000000c002169c                ISO9660::close(void*)
                0x00000000c00216be                ISO9660::closeDir(void*)
                0x00000000c00216e0                ISO9660::~ISO9660()
                0x00000000c00216e0                ISO9660::~ISO9660()
                0x00000000c0021704                ISO9660::~ISO9660()
                0x00000000c002172b                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c002176d                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c00217d4                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0021824                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0021a24                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0021cb1                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0021d06                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c0021ed9                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c0021f68                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0022028                ISO9660::exists(char const*)
                0x00000000c002204c                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c00220e0                ISO9660::openDir(char const*, void**)
                0x00000000c0022198                ISO9660::ISO9660()
                0x00000000c0022198                ISO9660::ISO9660()
 *fill*         0x00000000c00221bb        0x1 
 .text          0x00000000c00221bc      0x326 hal/sound/sndchannel.32
                0x00000000c00221bc                SoundChannel::~SoundChannel()
                0x00000000c00221bc                SoundChannel::~SoundChannel()
                0x00000000c00221d8                SoundChannel::setSpeed(float)
                0x00000000c00221e4                SoundChannel::getSpeed()
                0x00000000c00221ec                SoundChannel::setVolume(int)
                0x00000000c0022208                SoundChannel::getVolume()
                0x00000000c0022210                SoundChannel::pause()
                0x00000000c002221a                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c002221a                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c0022370                SoundChannel::play()
                0x00000000c002237a                SoundChannel::paused()
                0x00000000c0022382                SoundChannel::getSampleRate()
                0x00000000c002238a                SoundChannel::getBits()
                0x00000000c0022392                SoundChannel::getBufferUsed()
                0x00000000c002239a                SoundChannel::getBufferSize()
                0x00000000c00223a2                SoundChannel::unbuffer(float*, int, int)
                0x00000000c0022442                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c00224e2      0x3d5 hal/sound/sndhw.32
                0x00000000c00224e2                SoundDevice::SoundDevice(char const*)
                0x00000000c00224e2                SoundDevice::SoundDevice(char const*)
                0x00000000c002254e                SoundDevice::~SoundDevice()
                0x00000000c002254e                SoundDevice::~SoundDevice()
                0x00000000c00225c8                SoundDevice::~SoundDevice()
                0x00000000c00225f2                SoundDevice::getFreeChannelNum()
                0x00000000c002260c                SoundDevice::addChannel(SoundChannel*)
                0x00000000c002267c                SoundDevice::removeChannel(int)
                0x00000000c00226ae                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c0022796                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c00228b7        0x0 hw/bus/isa.32
 *fill*         0x00000000c00228b7        0x1 
 .text          0x00000000c00228b8      0x6c3 hw/bus/pci.32
                0x00000000c00228b8                PCI::open(int, int, void*)
                0x00000000c00228cc                PCI::close(int, int, void*)
                0x00000000c00228d0                PCI::PCI()
                0x00000000c00228d0                PCI::PCI()
                0x00000000c0022950                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0022998                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c00229ba                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c00229de                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a22                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a46                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a68                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a8a                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0022aae                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0022b0e                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0022b7a                PCI::checkBus(unsigned char)
                0x00000000c0022b9e                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0022d10                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0022ebc                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0022f28                PCI::detect()
 *fill*         0x00000000c0022f7b        0x1 
 .text          0x00000000c0022f7c      0xc70 hw/diskctrl/ide.32
                0x00000000c0022f7c                IDE::close(int, int, void*)
                0x00000000c0022f80                IDE::IDE()
                0x00000000c0022f80                IDE::IDE()
                0x00000000c0022fb4                IDE::prepareInterrupt(unsigned char)
                0x00000000c0022fc6                selectDrive(unsigned char, unsigned char)
                0x00000000c0022fc8                IDE::getBase(unsigned char)
                0x00000000c0022fda                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c002309a                IDE::read(unsigned char, unsigned char)
                0x00000000c0023148                IDE::waitInterrupt(unsigned char)
                0x00000000c00231ae                ideChannel0IRQHandler(regs*, void*)
                0x00000000c00231ca                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00231e6                IDE::enableIRQs(unsigned char, bool)
                0x00000000c002322c                IDE::open(int, int, void*)
                0x00000000c002363c                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0023708                IDE::detect()
                0x00000000c00239f0                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0023b86                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0023bec      0x390 hw/diskctrl/satabus.32
                0x00000000c0023bec                SATABus::close(int, int, void*)
                0x00000000c0023bf0                SATABus::detect()
                0x00000000c0023bf2                SATABus::SATABus()
                0x00000000c0023bf2                SATABus::SATABus()
                0x00000000c0023c9e                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023ce6                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d2e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d4e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d78                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0023e7e                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0023f5c                SATABus::open(int, int, void*)
 .text          0x00000000c0023f7c      0x63c hw/diskphys/ata.32
                0x00000000c0023f7c                ATA::close(int, int, void*)
                0x00000000c0023fa0                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0023fa2                ATA::ATA()
                0x00000000c0023fa2                ATA::ATA()
                0x00000000c0023fd0                ATA::flush(bool)
                0x00000000c002401a                ATA::readyForCommand()
                0x00000000c002406a                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c00243f2                ATA::read(unsigned long long, int, void*)
                0x00000000c002445a                ATA::write(unsigned long long, int, void*)
                0x00000000c00244c2                ATA::detectCHS()
                0x00000000c00244ec                ATA::open(int, int, void*)
 .text          0x00000000c00245b8      0x5bd hw/diskphys/atapi.32
                0x00000000c00245b8                ATAPI::write(unsigned long long, int, void*)
                0x00000000c00245be                ATAPI::close(int, int, void*)
                0x00000000c00245e2                ATAPI::ATAPI()
                0x00000000c00245e2                ATAPI::ATAPI()
                0x00000000c0024610                ATAPI::readyForCommand()
                0x00000000c0024660                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0024920                ATAPI::diskRemoved()
                0x00000000c002493c                ATAPI::eject()
                0x00000000c0024984                ATAPI::diskInserted()
                0x00000000c00249b2                ATAPI::detectMedia()
                0x00000000c0024a6e                ATAPI::open(int, int, void*)
                0x00000000c0024af6                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0024b75        0x1 
 .text          0x00000000c0024b76      0x455 hw/diskphys/sata.32
                0x00000000c0024b76                SATA::close(int, int, void*)
                0x00000000c0024b9a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0024b9c                SATA::open(int, int, void*)
                0x00000000c0024c4a                SATA::SATA()
                0x00000000c0024c4a                SATA::SATA()
                0x00000000c0024c78                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0024ede                SATA::read(unsigned long long, int, void*)
                0x00000000c0024f46                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c0024fcb        0x1 
 .text          0x00000000c0024fcc      0x500 hw/diskphys/satapi.32
                0x00000000c0024fcc                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0024fd2                SATAPI::close(int, int, void*)
                0x00000000c0024ff6                SATAPI::SATAPI()
                0x00000000c0024ff6                SATAPI::SATAPI()
                0x00000000c0025024                SATAPI::diskRemoved()
                0x00000000c0025040                SATAPI::diskInserted()
                0x00000000c002506e                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0025272                SATAPI::eject()
                0x00000000c00252ba                SATAPI::detectMedia()
                0x00000000c002537c                SATAPI::open(int, int, void*)
                0x00000000c002542a                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c00254cc       0x8e hw/fpu/avx.32
                0x00000000c00254cc                AVX::open(int, int, void*)
                0x00000000c00254de                AVX::close(int, int, void*)
                0x00000000c00254f0                AVX::available()
                0x00000000c0025502                AVX::save(void*)
                0x00000000c002551a                AVX::load(void*)
                0x00000000c0025532                AVX::AVX()
                0x00000000c0025532                AVX::AVX()
 .text          0x00000000c002555a       0x90 hw/fpu/mmx.32
                0x00000000c002555a                MMX::available()
                0x00000000c002556e                MMX::open(int, int, void*)
                0x00000000c0025580                MMX::close(int, int, void*)
                0x00000000c0025592                MMX::save(void*)
                0x00000000c00255aa                MMX::load(void*)
                0x00000000c00255c2                MMX::MMX()
                0x00000000c00255c2                MMX::MMX()
 .text          0x00000000c00255ea       0x96 hw/fpu/sse.32
                0x00000000c00255ea                SSE::open(int, int, void*)
                0x00000000c00255fc                SSE::close(int, int, void*)
                0x00000000c002560e                SSE::available()
                0x00000000c0025628                SSE::save(void*)
                0x00000000c0025640                SSE::load(void*)
                0x00000000c0025658                SSE::SSE()
                0x00000000c0025658                SSE::SSE()
 .text          0x00000000c0025680       0x8e hw/fpu/x87.32
                0x00000000c0025680                x87::open(int, int, void*)
                0x00000000c0025692                x87::close(int, int, void*)
                0x00000000c00256a4                x87::available()
                0x00000000c00256b6                x87::save(void*)
                0x00000000c00256ce                x87::load(void*)
                0x00000000c00256e6                x87::x87()
                0x00000000c00256e6                x87::x87()
 .text          0x00000000c002570e      0x71e hw/intctrl/apic.32
                0x00000000c002570e                APIC::disable()
                0x00000000c0025710                APIC::close(int, int, void*)
                0x00000000c0025732                IOAPIC::close(int, int, void*)
                0x00000000c0025738                APIC::io_wait()
                0x00000000c002573e                APIC::getBase()
                0x00000000c0025780                APIC::eoi(unsigned char)
                0x00000000c00257ae                APIC::open(int, int, void*)
                0x00000000c00258fc                IOAPIC::IOAPIC()
                0x00000000c00258fc                IOAPIC::IOAPIC()
                0x00000000c0025924                APIC::APIC()
                0x00000000c0025924                APIC::APIC()
                0x00000000c0025a00                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0025a32                IOAPIC::read(int)
                0x00000000c0025a5a                IOAPIC::open(int, int, void*)
                0x00000000c0025b50                IOAPIC::write(int, int)
                0x00000000c0025b7c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
                0x00000000c0025c76                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 .text          0x00000000c0025e2c      0x3d3 hw/intctrl/pic.32
                0x00000000c0025e2c                PIC::disable()
                0x00000000c0025e5a                PIC::close(int, int, void*)
                0x00000000c0025e7c                PIC::PIC()
                0x00000000c0025e7c                PIC::PIC()
                0x00000000c0025f52                PIC::ioWait()
                0x00000000c0025f58                PIC::getIRQReg(int)
                0x00000000c0025fc2                PIC::eoi(unsigned char)
                0x00000000c0026054                PIC::remap()
                0x00000000c00261c0                PIC::open(int, int, void*)
 *fill*         0x00000000c00261ff        0x1 
 .text          0x00000000c0026200      0x25e hw/timer/apictimer.32
                0x00000000c0026200                APICTimer::close(int, int, void*)
                0x00000000c0026206                apicTimerHandler(regs*, void*)
                0x00000000c0026234                APICTimer::write(int)
                0x00000000c0026338                APICTimer::open(int, int, void*)
                0x00000000c0026436                APICTimer::APICTimer()
                0x00000000c0026436                APICTimer::APICTimer()
 .text          0x00000000c002645e      0x1a7 hw/timer/pit.32
                0x00000000c002645e                PIT::write(int)
                0x00000000c00264dc                pitHandler(regs*, void*)
                0x00000000c0026508                PIT::open(int, int, void*)
                0x00000000c0026556                PIT::close(int, int, void*)
                0x00000000c0026586                PIT::PIT()
                0x00000000c0026586                PIT::PIT()
 *fill*         0x00000000c0026605        0xb 
 .text          0x00000000c0026610       0x1e hw/fpu/x86/avx.32
                0x00000000c0026610                avxDetect
                0x00000000c0026616                avxSave
                0x00000000c0026617                avxLoad
                0x00000000c0026618                avxInit
                0x00000000c0026619                avxClose
                0x00000000c002661a                wouldSheSayYes
 *fill*         0x00000000c002662e        0x2 
 .text          0x00000000c0026630       0x35 hw/fpu/x86/sse.32
                0x00000000c0026630                absolutelyNoChanceInHell
                0x00000000c0026630                sseDetect
                0x00000000c0026648                sseSave
                0x00000000c002664e                sseLoad
                0x00000000c0026654                sseInit
                0x00000000c0026664                sseClose
 *fill*         0x00000000c0026665        0xb 
 .text          0x00000000c0026670       0x47 hw/fpu/x86/x87.32
                0x00000000c0026676                x87Detect
                0x00000000c0026691                x87Save
                0x00000000c0026697                x87Load
                0x00000000c002669c                x87Init
                0x00000000c00266b6                x87Close
 *fill*         0x00000000c00266b7        0x1 
 .text          0x00000000c00266b8       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00266dd        0x0 crtn.32
 *fill*         0x00000000c00266dd        0x3 
 .text          0x00000000c00266e0      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00266e0                __divdi3
 *fill*         0x00000000c002682b        0x1 
 .text          0x00000000c002682c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c002682c                __moddi3
 *fill*         0x00000000c00269aa        0x2 
 .text          0x00000000c00269ac       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00269ac                __udivdi3
 *fill*         0x00000000c0026aab        0x1 
 .text          0x00000000c0026aac      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0026aac                __umoddi3
 .text          0x00000000c0026bc6      0x96d D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                0x00000000c0026bc6                __addsf3
                0x00000000c0026ec8                __subsf3
                0x00000000c0026edc                __negsf2
                0x00000000c0026ee9                __mulsf3
                0x00000000c00270ac                __divsf3
                0x00000000c00272d7                __floatsisf
                0x00000000c002734b                __floatunsisf
                0x00000000c002738d                __fixsfsi
                0x00000000c00273ef                __fixunssfsi
                0x00000000c0027420                __cmpsf2
                0x00000000c00274b5                __eqsf2
                0x00000000c00274f0                __nesf2
                0x00000000c00274f2                __gtsf2
                0x00000000c002752d                __gesf2
                0x00000000c002752f                __ltsf2
                0x00000000c0027531                __lesf2
 .text          0x00000000c0027533      0xf50 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                0x00000000c0027533                __adddf3
                0x00000000c0027b84                __subdf3
                0x00000000c0027b9f                __negdf2
                0x00000000c0027bb0                __muldf3
                0x00000000c0027e94                __divdf3
                0x00000000c0028213                __floatsidf
                0x00000000c002826e                __floatunsidf
                0x00000000c00282ac                __fixdfsi
                0x00000000c0028319                __fixunsdfsi
                0x00000000c0028355                __cmpdf2
                0x00000000c0028443                __eqdf2
                0x00000000c002845f                __nedf2
                0x00000000c0028461                __gtdf2
                0x00000000c002847d                __gedf2
                0x00000000c002847f                __ltdf2
                0x00000000c0028481                __ledf2
 .text          0x00000000c0028483      0x18d D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                0x00000000c0028483                __truncdfsf2
                0x00000000c00285a7                __extendsfdf2
 .text          0x00000000c0028610       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c0028610                fabs
 *fill*         0x00000000c002862e        0x2 
 .text          0x00000000c0028630        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c0028630                lrint
 .text          0x00000000c002863c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c002863c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0028648        0x0
 .iplt          0x00000000c0028648        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0028648        0xf
 .init          0x00000000c0028648        0x3 crti.32
                0x00000000c0028648                _init
 .init          0x00000000c002864b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0028650        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0028655        0x2 crtn.32

.fini           0x00000000c0028657        0xa
 .fini          0x00000000c0028657        0x3 crti.32
                0x00000000c0028657                _fini
 .fini          0x00000000c002865a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c002865f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c0028662       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0028662       0x23 core/computer.32
                0x00000000c0028662                Computer::~Computer()
                0x00000000c0028662                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0028686       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0028686       0x2a core/computer.32
                0x00000000c0028686                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c00286b0       0x15
 .text._Z10idleCommonv
                0x00000000c00286b0       0x15 core/idle.32
                0x00000000c00286b0                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00286c6        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00286c6        0x2 core/unixfile.32
                0x00000000c00286c6                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00286c6                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00286c8       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00286c8       0x58 core/unixfile.32
                0x00000000c00286c8                LinkedList<UnixFile>::LinkedList()
                0x00000000c00286c8                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0028720       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0028720       0xd3 core/unixfile.32
                0x00000000c0028720                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00287f4        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00287f4        0x7 core/unixfile.32
                0x00000000c00287f4                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00287fc       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00287fc       0xa1 core/unixfile.32
                0x00000000c00287fc                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002889e        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002889e        0x8 core/unixfile.32
                0x00000000c002889e                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00288a6       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c00288a6       0x1a hal/device.32
                0x00000000c00288a6                DriverlessDevice::~DriverlessDevice()
                0x00000000c00288a6                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c00288c0       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c00288c0       0x2a hal/device.32
                0x00000000c00288c0                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00288ea       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00288ea       0xdc hal/device.32
                0x00000000c00288ea                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c00289c6       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c00289c6       0x58 hal/device.32
                0x00000000c00289c6                LinkedList<Device>::LinkedList()
                0x00000000c00289c6                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0028a1e        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0028a1e        0x7 hal/timer.32
                0x00000000c0028a1e                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0028a26       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0028a26       0x1c hal/timer.32
                0x00000000c0028a26                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0028a42       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0028a42       0xae hal/timer.32
                0x00000000c0028a42                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0028af0       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0028af0       0xd3 hal/timer.32
                0x00000000c0028af0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0028bc4       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0028bc4       0x23 hw/acpi.32
                0x00000000c0028bc4                ACPI::~ACPI()
                0x00000000c0028bc4                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0028be8       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0028be8       0x2a hw/acpi.32
                0x00000000c0028be8                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c0028c12       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0028c12       0x23 hw/cpu.32
                0x00000000c0028c12                CPU::~CPU()
                0x00000000c0028c12                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0028c36       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0028c36       0x2a hw/cpu.32
                0x00000000c0028c36                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0028c60        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0028c60        0x2 thr/prcssthr.32
                0x00000000c0028c60                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0028c60                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0028c62       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0028c62       0x3e thr/prcssthr.32
                0x00000000c0028c62                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0028c62                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0028ca0       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0028ca0       0x58 thr/prcssthr.32
                0x00000000c0028ca0                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0028ca0                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0028cf8        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0028cf8        0x8 thr/prcssthr.32
                0x00000000c0028cf8                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0028d00        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0028d00        0xd vm86/x87em.32
                0x00000000c0028d00                Vm::_FPUState::_FPUState()
                0x00000000c0028d00                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c0028d0e       0x23
 .text._ZN3PCID2Ev
                0x00000000c0028d0e       0x23 hw/bus/pci.32
                0x00000000c0028d0e                PCI::~PCI()
                0x00000000c0028d0e                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0028d32       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0028d32       0x2a hw/bus/pci.32
                0x00000000c0028d32                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0028d5c       0x23
 .text._ZN3IDED2Ev
                0x00000000c0028d5c       0x23 hw/diskctrl/ide.32
                0x00000000c0028d5c                IDE::~IDE()
                0x00000000c0028d5c                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0028d80       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0028d80       0x2a hw/diskctrl/ide.32
                0x00000000c0028d80                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0028daa       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0028daa       0x23 hw/diskctrl/satabus.32
                0x00000000c0028daa                SATABus::~SATABus()
                0x00000000c0028daa                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0028dce       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0028dce       0x2a hw/diskctrl/satabus.32
                0x00000000c0028dce                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0028df8       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0028df8       0x23 hw/diskphys/ata.32
                0x00000000c0028df8                ATA::~ATA()
                0x00000000c0028df8                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0028e1c       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0028e1c       0x2a hw/diskphys/ata.32
                0x00000000c0028e1c                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0028e46       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0028e46       0x23 hw/diskphys/atapi.32
                0x00000000c0028e46                ATAPI::~ATAPI()
                0x00000000c0028e46                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0028e6a       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0028e6a       0x2a hw/diskphys/atapi.32
                0x00000000c0028e6a                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0028e94       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0028e94       0x23 hw/diskphys/sata.32
                0x00000000c0028e94                SATA::~SATA()
                0x00000000c0028e94                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0028eb8       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0028eb8       0x2a hw/diskphys/sata.32
                0x00000000c0028eb8                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0028ee2       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0028ee2       0x23 hw/diskphys/satapi.32
                0x00000000c0028ee2                SATAPI::~SATAPI()
                0x00000000c0028ee2                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0028f06       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0028f06       0x2a hw/diskphys/satapi.32
                0x00000000c0028f06                SATAPI::~SATAPI()

.text._ZN3AVXD2Ev
                0x00000000c0028f30       0x23
 .text._ZN3AVXD2Ev
                0x00000000c0028f30       0x23 hw/fpu/avx.32
                0x00000000c0028f30                AVX::~AVX()
                0x00000000c0028f30                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c0028f54       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c0028f54       0x2a hw/fpu/avx.32
                0x00000000c0028f54                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c0028f7e       0x23
 .text._ZN3MMXD2Ev
                0x00000000c0028f7e       0x23 hw/fpu/mmx.32
                0x00000000c0028f7e                MMX::~MMX()
                0x00000000c0028f7e                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c0028fa2       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c0028fa2       0x2a hw/fpu/mmx.32
                0x00000000c0028fa2                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c0028fcc       0x23
 .text._ZN3SSED2Ev
                0x00000000c0028fcc       0x23 hw/fpu/sse.32
                0x00000000c0028fcc                SSE::~SSE()
                0x00000000c0028fcc                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c0028ff0       0x2a
 .text._ZN3SSED0Ev
                0x00000000c0028ff0       0x2a hw/fpu/sse.32
                0x00000000c0028ff0                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c002901a       0x23
 .text._ZN3x87D2Ev
                0x00000000c002901a       0x23 hw/fpu/x87.32
                0x00000000c002901a                x87::~x87()
                0x00000000c002901a                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c002903e       0x2a
 .text._ZN3x87D0Ev
                0x00000000c002903e       0x2a hw/fpu/x87.32
                0x00000000c002903e                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c0029068       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0029068       0x23 hw/intctrl/apic.32
                0x00000000c0029068                IOAPIC::~IOAPIC()
                0x00000000c0029068                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002908c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002908c       0x2a hw/intctrl/apic.32
                0x00000000c002908c                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c00290b6       0x23
 .text._ZN4APICD2Ev
                0x00000000c00290b6       0x23 hw/intctrl/apic.32
                0x00000000c00290b6                APIC::~APIC()
                0x00000000c00290b6                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c00290da       0x2a
 .text._ZN4APICD0Ev
                0x00000000c00290da       0x2a hw/intctrl/apic.32
                0x00000000c00290da                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c0029104       0x23
 .text._ZN3PICD2Ev
                0x00000000c0029104       0x23 hw/intctrl/pic.32
                0x00000000c0029104                PIC::~PIC()
                0x00000000c0029104                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c0029128       0x2a
 .text._ZN3PICD0Ev
                0x00000000c0029128       0x2a hw/intctrl/pic.32
                0x00000000c0029128                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0029152       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0029152       0x23 hw/timer/apictimer.32
                0x00000000c0029152                APICTimer::~APICTimer()
                0x00000000c0029152                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0029176       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0029176       0x2a hw/timer/apictimer.32
                0x00000000c0029176                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00291a0       0x23
 .text._ZN3PITD2Ev
                0x00000000c00291a0       0x23 hw/timer/pit.32
                0x00000000c00291a0                PIT::~PIT()
                0x00000000c00291a0                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00291c4       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00291c4       0x2a hw/timer/pit.32
                0x00000000c00291c4                PIT::~PIT()

.rodata         0x00000000c00291ee     0x413a
                0x00000000c00291ee                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00291ee        0x2 
 .ctors         0x00000000c00291f0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00291f4        0x4 core/unixfile.32
 .ctors         0x00000000c00291f8        0x4 thr/prcssthr.32
 .ctors         0x00000000c00291fc        0x4 vm86/x87em.32
 .ctors         0x00000000c0029200        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0029204                end_ctors = .
                0x00000000c0029204                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0029204        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0029208        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0029208                __DTOR_END__
                0x00000000c002920c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c002920c       0x14 
 .rodata        0x00000000c0029220      0x101 acpica/utclib.32
                0x00000000c0029220                AcpiGbl_Ctypes
 *fill*         0x00000000c0029321        0x3 
 .rodata        0x00000000c0029324       0x18 core/malloc.32
 *fill*         0x00000000c002933c        0x4 
 .rodata        0x00000000c0029340      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c0029460       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c00294b6        0xa 
 .rodata        0x00000000c00294c0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00298c0       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c0029976        0x2 
 .rodata.str1.4
                0x00000000c0029978      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c0029d1d        0x3 
 .rodata        0x00000000c0029d20       0x60 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c0029d80       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c0029dc2        0x2 
 .rodata        0x00000000c0029dc4       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c0029e30       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0029ef4       0x4a hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0029f3e       0x48 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c0029f86       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0029fcf      0x1d0 core/computer.32
                                        0x1d2 (size before relaxing)
 *fill*         0x00000000c002a19f        0x1 
 .rodata._ZTV8Computer
                0x00000000c002a1a0       0x2c core/computer.32
                0x00000000c002a1a0                vtable for Computer
 .rodata.str1.1
                0x00000000c002a1cc       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c002a1e8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c002a218        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c002a224       0x62 core/main.32
                                         0x63 (size before relaxing)
 .rodata.str1.1
                0x00000000c002a286       0x5f core/physmgr.32
 *fill*         0x00000000c002a2e5        0x3 
 .rodata.str1.4
                0x00000000c002a2e8       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c002a335       0x39 core/pipe.32
 *fill*         0x00000000c002a36e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c002a370       0x1c core/pipe.32
                0x00000000c002a370                vtable for Pipe
 .rodata.str1.1
                0x00000000c002a38c       0x9d core/terminal.32
 *fill*         0x00000000c002a429        0x3 
 .rodata._ZTV7VgaText
                0x00000000c002a42c       0x1c core/terminal.32
                0x00000000c002a42c                vtable for VgaText
 .rodata        0x00000000c002a448       0x1e core/tss.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c002a466       0x19 core/unixfile.32
 *fill*         0x00000000c002a47f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002a480       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002a4a2       0x15 core/unixfile.32
 *fill*         0x00000000c002a4b7        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002a4b8       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002a503        0x8 core/unixfile.32
 *fill*         0x00000000c002a50b        0x1 
 .rodata.str1.4
                0x00000000c002a50c       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c002a52c       0x1c core/unixfile.32
                0x00000000c002a52c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002a548       0x1c core/unixfile.32
                0x00000000c002a548                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002a564      0x1a7 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002a70b      0x1a9 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002a8b4       0x83 coreobjs/c++.32
 *fill*         0x00000000c002a937        0x1 
 .rodata.str1.4
                0x00000000c002a938       0x3f dbg/kconsole.32
 *fill*         0x00000000c002a977        0x1 
 .rodata        0x00000000c002a978      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002aac8       0x83 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c002aac8       0x64 fs/vfs.32
                0x00000000c002aac8                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002ab2c       0x1c fs/vfs.32
                0x00000000c002ab2c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c002ab48       0x1c fs/vfs.32
                0x00000000c002ab48                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002ab64       0x2c hal/bus.32
                0x00000000c002ab64                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c002ab90       0x30 hal/buzzer.32
                0x00000000c002ab90                vtable for Buzzer
 .rodata.str1.1
                0x00000000c002abc0       0x1e hal/clock.32
 *fill*         0x00000000c002abde        0x2 
 .rodata._ZTV5Clock
                0x00000000c002abe0       0x3c hal/clock.32
                0x00000000c002abe0                vtable for Clock
 *fill*         0x00000000c002ac1c        0x4 
 .rodata        0x00000000c002ac20       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c002ac50       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c002ac6e       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c002ac6e       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c002ac6e       0x19 hal/device.32
 *fill*         0x00000000c002ac6e        0x2 
 .rodata._ZTV6Device
                0x00000000c002ac70       0x2c hal/device.32
                0x00000000c002ac70                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c002ac9c       0x2c hal/device.32
                0x00000000c002ac9c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c002acc8       0x2c hal/diskctrl.32
                0x00000000c002acc8                vtable for HardDiskController
 .rodata.str1.1
                0x00000000c002acf4       0x27 hal/diskphys.32
 *fill*         0x00000000c002ad1b        0x1 
 .rodata._ZTV12PhysicalDisk
                0x00000000c002ad1c       0x38 hal/diskphys.32
                0x00000000c002ad1c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c002ad54        0x9 hal/fpu.32
 *fill*         0x00000000c002ad5d        0x3 
 .rodata._ZTV3FPU
                0x00000000c002ad60       0x38 hal/fpu.32
                0x00000000c002ad60                vtable for FPU
 .rodata        0x00000000c002ad98      0x359 hal/intctrl.32
 *fill*         0x00000000c002b0f1        0x3 
 .rodata._ZTV19InterruptController
                0x00000000c002b0f4       0x48 hal/intctrl.32
                0x00000000c002b0f4                vtable for InterruptController
 .rodata        0x00000000c002b13c       0x4f hal/keybrd.32
 *fill*         0x00000000c002b18b        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c002b18c       0x34 hal/keybrd.32
                0x00000000c002b18c                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002b1c0       0x7a hal/logidisk.32
 *fill*         0x00000000c002b23a        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c002b23c       0x2c hal/logidisk.32
                0x00000000c002b23c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c002b268       0x2c hal/mouse.32
                0x00000000c002b268                vtable for Mouse
 .rodata.str1.1
                0x00000000c002b294       0x2d hal/partition.32
 *fill*         0x00000000c002b2c1        0x3 
 .rodata._ZTV6Serial
                0x00000000c002b2c4       0x44 hal/serial.32
                0x00000000c002b2c4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002b308       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002b308        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002b308       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002b308       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c002b308       0x30 hal/timer.32
                0x00000000c002b308                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c002b338       0x10 hal/vcache.32
                0x00000000c002b338                vtable for VCache
 .rodata.str1.1
                0x00000000c002b348       0x7c hal/video.32
 .rodata._ZTV5Video
                0x00000000c002b3c4       0x48 hal/video.32
                0x00000000c002b3c4                vtable for Video
 .rodata.str1.1
                0x00000000c002b40c      0x122 hw/acpi.32
 *fill*         0x00000000c002b52e        0x2 
 .rodata.str1.4
                0x00000000c002b530       0xbe hw/acpi.32
 *fill*         0x00000000c002b5ee        0x2 
 .rodata._ZTV4ACPI
                0x00000000c002b5f0       0x2c hw/acpi.32
                0x00000000c002b5f0                vtable for ACPI
 .rodata.str1.1
                0x00000000c002b61c      0x3c1 hw/cpu.32
                                        0x3ce (size before relaxing)
 *fill*         0x00000000c002b9dd        0x3 
 .rodata._ZTV3CPU
                0x00000000c002b9e0       0x2c hw/cpu.32
                0x00000000c002b9e0                vtable for CPU
 .rodata.str1.1
                0x00000000c002ba0c       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c002ba1d       0x89 krnl/env.32
 .rodata.str1.1
                0x00000000c002baa6       0xbe krnl/panic.32
                                         0xc5 (size before relaxing)
 .rodata.str1.4
                0x00000000c002bb64      0x13e krnl/panic.32
 *fill*         0x00000000c002bca2        0x2 
 .rodata.str1.4
                0x00000000c002bca4       0x4c net/ethernet.32
 .rodata.str1.1
                0x00000000c002bcf0       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002bd35       0x38 sys/sc_settime.32
 .rodata.str1.1
                0x00000000c002bd6d       0x77 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c002bde4       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c002be10      0x115 sys/syscalls.32
                                        0x133 (size before relaxing)
 *fill*         0x00000000c002bf25        0x3 
 .rodata.str1.4
                0x00000000c002bf28       0x6f sys/syscalls.32
 .rodata.str1.1
                0x00000000c002bf97      0x254 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c002c1eb       0xfb thr/prcssthr.32
 *fill*         0x00000000c002c2e6        0x2 
 .rodata.str1.4
                0x00000000c002c2e8      0x2a7 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c002c58f       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002c58f       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002c58f       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002c58f       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002c58f        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002c58f      0x19f vm86/vm8086.32
 *fill*         0x00000000c002c72e        0x2 
 .rodata        0x00000000c002c730       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002c760       0x58 vm86/x87em.32
 .rodata        0x00000000c002c7b8       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c002c7f4       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c002c847        0x1 
 .rodata.str1.4
                0x00000000c002c848       0x25 fs/fat/vfslink.32
 *fill*         0x00000000c002c86d        0x3 
 .rodata._ZTV3FAT
                0x00000000c002c870       0x64 fs/fat/vfslink.32
                0x00000000c002c870                vtable for FAT
 .rodata.str1.1
                0x00000000c002c8d4       0x5c fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002c930       0x64 fs/iso9660/vfslink.32
                0x00000000c002c930                vtable for ISO9660
 .rodata.str1.1
                0x00000000c002c994       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c002c9ae        0x2 
 .rodata.cst4   0x00000000c002c9b0        0x8 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c002c9b8       0x38 hal/sound/sndhw.32
                0x00000000c002c9b8                vtable for SoundDevice
 .rodata.str1.1
                0x00000000c002c9f0       0x62 hw/bus/pci.32
 *fill*         0x00000000c002ca52        0x2 
 .rodata._ZTV3PCI
                0x00000000c002ca54       0x2c hw/bus/pci.32
                0x00000000c002ca54                vtable for PCI
 .rodata.str1.1
                0x00000000c002ca80      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c002ccb6        0x2 
 .rodata._ZTV3IDE
                0x00000000c002ccb8       0x2c hw/diskctrl/ide.32
                0x00000000c002ccb8                vtable for IDE
 .rodata.str1.4
                0x00000000c002cce4       0x48 hw/diskctrl/satabus.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002cd2c       0x6a hw/diskctrl/satabus.32
 *fill*         0x00000000c002cd96        0x2 
 .rodata._ZTV7SATABus
                0x00000000c002cd98       0x2c hw/diskctrl/satabus.32
                0x00000000c002cd98                vtable for SATABus
 .rodata.str1.1
                0x00000000c002cdc4       0x1d hw/diskphys/ata.32
                                         0x2c (size before relaxing)
 *fill*         0x00000000c002cde1        0x3 
 .rodata._ZTV3ATA
                0x00000000c002cde4       0x38 hw/diskphys/ata.32
                0x00000000c002cde4                vtable for ATA
 .rodata.str1.1
                0x00000000c002ce1c       0x1d hw/diskphys/atapi.32
                                         0x38 (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c002ce1c       0x38 hw/diskphys/atapi.32
                0x00000000c002ce1c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002ce54       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c002ced0       0x38 hw/diskphys/sata.32
                0x00000000c002ced0                vtable for SATA
 .rodata.str1.1
                0x00000000c002cf08       0xa3 hw/diskphys/satapi.32
                                         0xb1 (size before relaxing)
 *fill*         0x00000000c002cfab        0x1 
 .rodata._ZTV6SATAPI
                0x00000000c002cfac       0x38 hw/diskphys/satapi.32
                0x00000000c002cfac                vtable for SATAPI
 .rodata.str1.1
                0x00000000c002cfe4        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c002cfec       0x38 hw/fpu/avx.32
                0x00000000c002cfec                vtable for AVX
 .rodata.str1.1
                0x00000000c002d024        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c002d02c       0x38 hw/fpu/mmx.32
                0x00000000c002d02c                vtable for MMX
 .rodata.str1.1
                0x00000000c002d064        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c002d06c       0x38 hw/fpu/sse.32
                0x00000000c002d06c                vtable for SSE
 .rodata.str1.1
                0x00000000c002d0a4        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c002d0ac       0x38 hw/fpu/x87.32
                0x00000000c002d0ac                vtable for x87
 .rodata        0x00000000c002d0e4       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c002d1bc       0x48 hw/intctrl/apic.32
                0x00000000c002d1bc                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c002d204       0x2c hw/intctrl/apic.32
                0x00000000c002d204                vtable for IOAPIC
 .rodata        0x00000000c002d230       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c002d252        0x2 
 .rodata._ZTV3PIC
                0x00000000c002d254       0x48 hw/intctrl/pic.32
                0x00000000c002d254                vtable for PIC
 .rodata.str1.1
                0x00000000c002d29c        0xb hw/timer/apictimer.32
 *fill*         0x00000000c002d2a7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002d2a8       0x30 hw/timer/apictimer.32
                0x00000000c002d2a8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002d2d8       0x1d hw/timer/pit.32
 *fill*         0x00000000c002d2f5        0x3 
 .rodata._ZTV3PIT
                0x00000000c002d2f8       0x30 hw/timer/pit.32
                0x00000000c002d2f8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002d328      0x66d
 *(.data)
 .data          0x00000000c002d328        0x0 crti.32
 .data          0x00000000c002d328        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002d328                __dso_handle
 .data          0x00000000c002d32c        0x0 acpica/utclib.32
 .data          0x00000000c002d32c        0x0 core/malloc.32
 .data          0x00000000c002d32c        0x0 libk/string.32
 .data          0x00000000c002d32c        0x0 fs/fat/diskio.32
 .data          0x00000000c002d32c        0x0 fs/fat/ff.32
 .data          0x00000000c002d32c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c002d32c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c002d32c        0x0 hal/libresample/samplerate.32
 .data          0x00000000c002d32c        0x0 hal/libresample/src_linear.32
 .data          0x00000000c002d32c        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c002d32c        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c002d32c        0x0 compat/inlines.32
 .data          0x00000000c002d32c        0x0 compat/resolve.32
 .data          0x00000000c002d32c        0x0 core/computer.32
 .data          0x00000000c002d32c        0x0 core/gdt.32
 .data          0x00000000c002d32c        0x0 core/idle.32
 .data          0x00000000c002d32c        0x0 core/idt.32
 .data          0x00000000c002d32c        0x4 core/kheap.32
 .data          0x00000000c002d330        0x0 core/main.32
 .data          0x00000000c002d330        0x4 core/physmgr.32
                0x00000000c002d330                Phys::bitmap
 .data          0x00000000c002d334        0x0 core/pipe.32
 *fill*         0x00000000c002d334        0xc 
 .data          0x00000000c002d340       0x60 core/terminal.32
                0x00000000c002d340                VGA_TEXT_MODE_ADDRESS
                0x00000000c002d344                VgaText::hiddenOut
                0x00000000c002d360                ansiToVGAMappings
 .data          0x00000000c002d3a0        0x0 core/tss.32
 .data          0x00000000c002d3a0        0x4 core/unixfile.32
                0x00000000c002d3a0                UnixFile::nextFd
 .data          0x00000000c002d3a4       0x15 core/virtmgr.32
                0x00000000c002d3a4                Virt::pageAllocPtr
                0x00000000c002d3a8                Virt::bitmap
                0x00000000c002d3ac                Virt::swapfileSectorsPerPage
                0x00000000c002d3b0                Virt::swapfileLength
                0x00000000c002d3b4                Virt::swapfileSector
                0x00000000c002d3b8                Virt::swapfileDrive
 *fill*         0x00000000c002d3b9        0x3 
 .data          0x00000000c002d3bc        0x4 coreobjs/c++.32
                0x00000000c002d3bc                __stack_chk_guard
 .data          0x00000000c002d3c0        0x0 dbg/kconsole.32
 .data          0x00000000c002d3c0        0x0 fs/vfs.32
 .data          0x00000000c002d3c0        0x0 hal/bus.32
 .data          0x00000000c002d3c0        0x0 hal/buzzer.32
 .data          0x00000000c002d3c0        0x0 hal/clock.32
 .data          0x00000000c002d3c0        0x0 hal/device.32
 .data          0x00000000c002d3c0        0x0 hal/diskctrl.32
 .data          0x00000000c002d3c0        0x0 hal/diskphys.32
 .data          0x00000000c002d3c0        0x0 hal/fpu.32
 .data          0x00000000c002d3c0      0x2a0 hal/intctrl.32
                0x00000000c002d3c0                exceptionNames
 .data          0x00000000c002d660        0x0 hal/keybrd.32
 .data          0x00000000c002d660        0x0 hal/logidisk.32
 .data          0x00000000c002d660        0x0 hal/mouse.32
 .data          0x00000000c002d660        0x0 hal/partition.32
 .data          0x00000000c002d660        0x0 hal/serial.32
 .data          0x00000000c002d660        0x0 hal/timer.32
 .data          0x00000000c002d660        0x0 hal/vcache.32
 .data          0x00000000c002d660        0x0 hal/video.32
 .data          0x00000000c002d660       0x10 hw/acpi.32
                0x00000000c002d660                legacyIRQRemaps
 *fill*         0x00000000c002d670       0x10 
 .data          0x00000000c002d680      0x2a4 hw/cpu.32
                0x00000000c002d680                cpuNameList
                0x00000000c002d920                lastCode
 .data          0x00000000c002d924        0x0 hw/ports.32
 .data          0x00000000c002d924        0x0 hw/smp.32
 *fill*         0x00000000c002d924       0x1c 
 .data          0x00000000c002d940       0x4d krnl/env.32
                0x00000000c002d940                defaultSysEnv
 .data          0x00000000c002d98d        0x0 krnl/panic.32
 .data          0x00000000c002d98d        0x0 net/ethernet.32
 .data          0x00000000c002d98d        0x0 reg/registry.32
 .data          0x00000000c002d98d        0x0 sys/sc_eject.32
 .data          0x00000000c002d98d        0x0 sys/sc_exit.32
 .data          0x00000000c002d98d        0x0 sys/sc_getcwd.32
 .data          0x00000000c002d98d        0x0 sys/sc_getpid.32
 .data          0x00000000c002d98d        0x0 sys/sc_getramdata.32
 .data          0x00000000c002d98d        0x0 sys/sc_loaddll.32
 .data          0x00000000c002d98d        0x0 sys/sc_read.32
 .data          0x00000000c002d98d        0x0 sys/sc_sbrk.32
 .data          0x00000000c002d98d        0x0 sys/sc_setcwd.32
 .data          0x00000000c002d98d        0x0 sys/sc_settime.32
 .data          0x00000000c002d98d        0x0 sys/sc_timezone.32
 .data          0x00000000c002d98d        0x0 sys/sc_write.32
 .data          0x00000000c002d98d        0x0 sys/sc_wsbe.32
 .data          0x00000000c002d98d        0x0 sys/sc_yield.32
 .data          0x00000000c002d98d        0x0 sys/syscalls.32
 .data          0x00000000c002d98d        0x0 thr/elf.32
 *fill*         0x00000000c002d98d        0x3 
 .data          0x00000000c002d990        0x4 thr/prcssthr.32
                0x00000000c002d990                Thr::nextPID
 .data          0x00000000c002d994        0x0 vm86/vm8086.32
 .data          0x00000000c002d994        0x0 vm86/x87em.32
 .data          0x00000000c002d994        0x0 fs/fat/vfslink.32
 .data          0x00000000c002d994        0x1 fs/iso9660/vfslink.32
                0x00000000c002d994                recentDriveletter
 .data          0x00000000c002d995        0x0 hal/sound/sndchannel.32
 .data          0x00000000c002d995        0x0 hal/sound/sndhw.32
 .data          0x00000000c002d995        0x0 hw/bus/isa.32
 .data          0x00000000c002d995        0x0 hw/bus/pci.32
 .data          0x00000000c002d995        0x0 hw/diskctrl/ide.32
 .data          0x00000000c002d995        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c002d995        0x0 hw/diskphys/ata.32
 .data          0x00000000c002d995        0x0 hw/diskphys/atapi.32
 .data          0x00000000c002d995        0x0 hw/diskphys/sata.32
 .data          0x00000000c002d995        0x0 hw/diskphys/satapi.32
 .data          0x00000000c002d995        0x0 hw/fpu/avx.32
 .data          0x00000000c002d995        0x0 hw/fpu/mmx.32
 .data          0x00000000c002d995        0x0 hw/fpu/sse.32
 .data          0x00000000c002d995        0x0 hw/fpu/x87.32
 .data          0x00000000c002d995        0x0 hw/intctrl/apic.32
 .data          0x00000000c002d995        0x0 hw/intctrl/pic.32
 .data          0x00000000c002d995        0x0 hw/timer/apictimer.32
 .data          0x00000000c002d995        0x0 hw/timer/pit.32
 .data          0x00000000c002d995        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c002d995        0x0 crtn.32
 .data          0x00000000c002d995        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c002d995        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c002d995        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c002d995        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .data          0x00000000c002d995        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .data          0x00000000c002d995        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .data          0x00000000c002d995        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .data          0x00000000c002d995        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c002d995        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c002d995        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c002d998        0x0
 .got           0x00000000c002d998        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c002d998        0x0
 .got.plt       0x00000000c002d998        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c002d998        0x0
 .igot.plt      0x00000000c002d998        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c002d998        0x0
 .tm_clone_table
                0x00000000c002d998        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c002d998        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c002d995      0x633
 *(.eh_frame)
 *fill*         0x00000000c002d995        0x3 
 .eh_frame      0x00000000c002d998        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c002d998        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c002d998       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002d9f0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002da30       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002da9c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c002db20      0x218 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                                        0x230 (size before relaxing)
 .eh_frame      0x00000000c002dd38      0x220 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                                        0x238 (size before relaxing)
 .eh_frame      0x00000000c002df58       0x58 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                                         0x70 (size before relaxing)
 .eh_frame      0x00000000c002dfb0       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c002dfc8        0x0
 .rel.got       0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c002dfc8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c002dfc8     0x4800
                0x00000000c002dfc8                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c002dfc8        0x0 crti.32
 .bss           0x00000000c002dfc8       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c002dfe8        0x4 acpica/utclib.32
 *fill*         0x00000000c002dfec       0x14 
 .bss           0x00000000c002e000      0x378 core/malloc.32
 .bss           0x00000000c002e378        0x0 libk/string.32
 .bss           0x00000000c002e378        0x0 fs/fat/diskio.32
 *fill*         0x00000000c002e378        0x8 
 .bss           0x00000000c002e380       0x88 fs/fat/ff.32
 .bss           0x00000000c002e408        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c002e408        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c002e408        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c002e408        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c002e408        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c002e408        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c002e408        0x0 compat/inlines.32
 .bss           0x00000000c002e408        0x0 compat/resolve.32
 .bss           0x00000000c002e408        0x6 core/computer.32
                0x00000000c002e408                Krnl::computer
                0x00000000c002e40c                Krnl::preemptionOn
                0x00000000c002e40d                Krnl::schedulingOn
 *fill*         0x00000000c002e40e        0x2 
 .bss           0x00000000c002e410        0x6 core/gdt.32
                0x00000000c002e410                gdtDescr
 .bss           0x00000000c002e416        0x0 core/idle.32
 *fill*         0x00000000c002e416        0x2 
 .bss           0x00000000c002e418        0x6 core/idt.32
                0x00000000c002e418                idtDescr
 .bss           0x00000000c002e41e        0x0 core/kheap.32
 *fill*         0x00000000c002e41e        0x2 
 .bss           0x00000000c002e420        0x4 core/main.32
                0x00000000c002e420                sysBootSettings
 *fill*         0x00000000c002e424       0x1c 
 .bss           0x00000000c002e440       0x50 core/physmgr.32
                0x00000000c002e440                Phys::forbidEvictions
                0x00000000c002e444                Phys::currentPagePointer
                0x00000000c002e448                Phys::highestMem
                0x00000000c002e44c                Phys::oldPercent
                0x00000000c002e450                Phys::usedPages
                0x00000000c002e454                Phys::usablePages
                0x00000000c002e460                Phys::dmaUsage
 .bss           0x00000000c002e490        0x0 core/pipe.32
 *fill*         0x00000000c002e490       0x10 
 .bss           0x00000000c002e4a0       0x49 core/terminal.32
                0x00000000c002e4a0                vgamono
                0x00000000c002e4c0                textModeImplementation
                0x00000000c002e4e0                terminalCycle
                0x00000000c002e4e4                activeTerminal
                0x00000000c002e4e8                VgaText::graphicMode
 *fill*         0x00000000c002e4e9        0x1 
 .bss           0x00000000c002e4ea        0x2 core/tss.32
                0x00000000c002e4ea                doubleFaultSelector
 *fill*         0x00000000c002e4ec       0x14 
 .bss           0x00000000c002e500       0x84 core/unixfile.32
                0x00000000c002e500                sfileLpt
                0x00000000c002e540                sfileCom
                0x00000000c002e564                sfileNul
                0x00000000c002e568                sfilePnt
                0x00000000c002e56c                sfileAux
                0x00000000c002e570                sfileCon
                0x00000000c002e574                initialFilesAdded
                0x00000000c002e578                unixFileLinkedList
 .bss           0x00000000c002e584        0xc core/virtmgr.32
                0x00000000c002e584                swapBalance
                0x00000000c002e588                Virt::swapfileBitmap
                0x00000000c002e58c                firstVAS
 .bss           0x00000000c002e590        0x0 coreobjs/c++.32
 .bss           0x00000000c002e590        0x0 dbg/kconsole.32
 .bss           0x00000000c002e590        0x4 fs/vfs.32
                0x00000000c002e590                installedFilesystems
 .bss           0x00000000c002e594        0x0 hal/bus.32
 .bss           0x00000000c002e594        0x4 hal/buzzer.32
                0x00000000c002e594                systemBuzzer
 .bss           0x00000000c002e598        0x8 hal/clock.32
                0x00000000c002e598                User::dstOn
                0x00000000c002e599                User::timezoneHalfHourOffset
                0x00000000c002e59c                User::timezoneHourOffset
 .bss           0x00000000c002e5a0        0x0 hal/device.32
 .bss           0x00000000c002e5a0        0x0 hal/diskctrl.32
 .bss           0x00000000c002e5a0        0x0 hal/diskphys.32
 .bss           0x00000000c002e5a0        0x0 hal/fpu.32
 .bss           0x00000000c002e5a0       0x1c hal/intctrl.32
                0x00000000c002e5a0                pf5
                0x00000000c002e5a4                pf4
                0x00000000c002e5a8                pf3
                0x00000000c002e5ac                pf2
                0x00000000c002e5b0                pf1
                0x00000000c002e5b4                pf0
                0x00000000c002e5b8                gpFaultIntercept
 *fill*         0x00000000c002e5bc        0x4 
 .bss           0x00000000c002e5c0      0x429 hal/keybrd.32
                0x00000000c002e5c0                keyboardWaitingTaskList
                0x00000000c002e5c4                keyboardSetupYet
                0x00000000c002e5c8                guiKeyboardHandler
                0x00000000c002e5e0                keystates
 *fill*         0x00000000c002e9e9       0x17 
 .bss           0x00000000c002ea00       0x88 hal/logidisk.32
                0x00000000c002ea00                diskAssignments
                0x00000000c002ea20                disks
 .bss           0x00000000c002ea88        0x4 hal/mouse.32
                0x00000000c002ea88                guiMouseHandler
 .bss           0x00000000c002ea8c        0x0 hal/partition.32
 .bss           0x00000000c002ea8c        0x0 hal/serial.32
 *fill*         0x00000000c002ea8c        0x4 
 .bss           0x00000000c002ea90        0x8 hal/timer.32
                0x00000000c002ea90                nanoSinceBoot
 *fill*         0x00000000c002ea98        0x8 
 .bss           0x00000000c002eaa0     0x2000 hal/vcache.32
                0x00000000c002eaa0                testBuffer
 .bss           0x00000000c0030aa0        0x4 hal/video.32
                0x00000000c0030aa0                screen
 *fill*         0x00000000c0030aa4       0x1c 
 .bss           0x00000000c0030ac0      0x480 hw/acpi.32
                0x00000000c0030ac0                systemSleepFunction
                0x00000000c0030ac4                systemResetFunction
                0x00000000c0030ac8                systemShutdownFunction
                0x00000000c0030acc                nextACPITable
                0x00000000c0030ae0                acpiTables
                0x00000000c0030ce0                usingXSDT
                0x00000000c0030ce4                MADTpointer
                0x00000000c0030ce8                RSDTpointer
                0x00000000c0030cec                RSDPpointer
                0x00000000c0030cf0                nextAPICNMI
                0x00000000c0030d00                apicNMIInfo
                0x00000000c0030d80                legacyIRQFlags
                0x00000000c0030da0                ioapicDiscoveryNumber
                0x00000000c0030dc0                ioapicFoundInMADT
                0x00000000c0030de0                ioapicAddresses
                0x00000000c0030e60                ioapicGSIBase
                0x00000000c0030ee0                processorDiscoveryNumber
                0x00000000c0030f00                matchingAPICID
                0x00000000c0030f20                processorID
 .bss           0x00000000c0030f40       0x10 hw/cpu.32
                0x00000000c0030f40                lastD
                0x00000000c0030f44                lastC
                0x00000000c0030f48                lastB
                0x00000000c0030f4c                lastA
 .bss           0x00000000c0030f50        0x0 hw/ports.32
 .bss           0x00000000c0030f50        0x1 hw/smp.32
                0x00000000c0030f50                Krnl::bspID
 *fill*         0x00000000c0030f51        0x3 
 .bss           0x00000000c0030f54        0x8 krnl/env.32
                0x00000000c0030f54                Krnl::userEnv
                0x00000000c0030f58                Krnl::systemEnv
 .bss           0x00000000c0030f5c        0x9 krnl/panic.32
                0x00000000c0030f5c                Krnl::guiProgramFaultHandler
                0x00000000c0030f60                Krnl::guiPanicHandler
                0x00000000c0030f64                Krnl::kernelInPanic
 .bss           0x00000000c0030f65        0x0 net/ethernet.32
 .bss           0x00000000c0030f65        0x0 reg/registry.32
 .bss           0x00000000c0030f65        0x0 sys/sc_eject.32
 .bss           0x00000000c0030f65        0x0 sys/sc_exit.32
 .bss           0x00000000c0030f65        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0030f65        0x0 sys/sc_getpid.32
 .bss           0x00000000c0030f65        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0030f65        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0030f65        0x0 sys/sc_read.32
 .bss           0x00000000c0030f65        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0030f65        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0030f65        0x0 sys/sc_settime.32
 .bss           0x00000000c0030f65        0x0 sys/sc_timezone.32
 .bss           0x00000000c0030f65        0x0 sys/sc_write.32
 .bss           0x00000000c0030f65        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0030f65        0x0 sys/sc_yield.32
 *fill*         0x00000000c0030f65       0x1b 
 .bss           0x00000000c0030f80      0x200 sys/syscalls.32
                0x00000000c0030f80                systemCallHandlers
 .bss           0x00000000c0031180      0x7a4 thr/elf.32
                0x00000000c0031180                Thr::driverLookupNext
                0x00000000c00311a0                Thr::driverLookupLen
                0x00000000c00313a0                Thr::driverLookupAddr
                0x00000000c00315a0                Thr::driverNameLookup
                0x00000000c00317a0                Thr::kernelSymbols
                0x00000000c0031820                Thr::kernelStringTable
                0x00000000c00318a0                Thr::kernelSymbolTable
                0x00000000c0031920                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0031924        0x4 
 .bss           0x00000000c0031928       0x68 thr/prcssthr.32
                0x00000000c0031928                cleanerThread
                0x00000000c003192c                weNeedTheCleanerToNotBlock
                0x00000000c0031930                xxxx
                0x00000000c0031934                retValLockStuff
                0x00000000c0031938                retValSchedLock
                0x00000000c003193c                lockStuffLock
                0x00000000c0031940                schedulerLock
                0x00000000c0031944                taskSwitchesPostponedFlag
                0x00000000c0031948                postponeTaskSwitchesCounter
                0x00000000c003194c                irqDisableCounter
                0x00000000c0031950                terminatedTaskList
                0x00000000c003195c                sleepingTaskList
                0x00000000c0031968                taskList
                0x00000000c0031974                kernelProcess
 *fill*         0x00000000c0031990       0x10 
 .bss           0x00000000c00319a0       0x40 vm86/vm8086.32
                0x00000000c00319a0                Vm::vmRetV
                0x00000000c00319a4                Vm::vmDone
                0x00000000c00319a5                Vm::vmReady
                0x00000000c00319a8                Vm::vm86Thread
                0x00000000c00319ac                Vm::vmToHostCommsPtr
                0x00000000c00319c0                Vm::vmToHostComms
 .bss           0x00000000c00319e0       0x48 vm86/x87em.32
                0x00000000c00319e0                Vm::fpuState
 *fill*         0x00000000c0031a28       0x18 
 .bss           0x00000000c0031a40       0xf0 fs/fat/vfslink.32
                0x00000000c0031a40                FAT::fats
                0x00000000c0031a60                FAT::vfsToFatRemaps
                0x00000000c0031ae0                fatToVFSRemaps
 *fill*         0x00000000c0031b30       0x10 
 .bss           0x00000000c0031b40      0x820 fs/iso9660/vfslink.32
                0x00000000c0031b40                recentSector
                0x00000000c0031b60                recentBuffer
 .bss           0x00000000c0032360      0x401 hal/sound/sndchannel.32
                0x00000000c0032360                lookupTable8
                0x00000000c0032760                gotLookupTable
 .bss           0x00000000c0032761        0x0 hal/sound/sndhw.32
 .bss           0x00000000c0032761        0x0 hw/bus/isa.32
 .bss           0x00000000c0032761        0x0 hw/bus/pci.32
 .bss           0x00000000c0032761        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0032761        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0032761        0x3 
 .bss           0x00000000c0032764        0x8 hw/diskphys/ata.32
                0x00000000c0032764                ataSectorsWritten
                0x00000000c0032768                ataSectorsRead
 .bss           0x00000000c003276c        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c003276c        0x0 hw/diskphys/sata.32
 .bss           0x00000000c003276c        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c003276c        0x0 hw/fpu/avx.32
 .bss           0x00000000c003276c        0x0 hw/fpu/mmx.32
 .bss           0x00000000c003276c        0x0 hw/fpu/sse.32
 .bss           0x00000000c003276c        0x0 hw/fpu/x87.32
 *fill*         0x00000000c003276c       0x14 
 .bss           0x00000000c0032780       0x41 hw/intctrl/apic.32
                0x00000000c0032780                noOfIOAPICs
                0x00000000c00327a0                ioapics
                0x00000000c00327c0                IOAPICsSetupYet
 .bss           0x00000000c00327c1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c00327c1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00327c1        0x3 
 .bss           0x00000000c00327c4        0x4 hw/timer/pit.32
                0x00000000c00327c4                pitFreq
 .bss           0x00000000c00327c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00327c8        0x0 crtn.32
 .bss           0x00000000c00327c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00327c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00327c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00327c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .bss           0x00000000c00327c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .bss           0x00000000c00327c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .bss           0x00000000c00327c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .bss           0x00000000c00327c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c00327c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c00327c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00327c8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0036fc8                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
