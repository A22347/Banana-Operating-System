Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c11a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002ff                asmQuickAcquireLock
                0x00000000c000031d                asmQuickReleaseLock
                0x00000000c0000329                asmAcquireLock
                0x00000000c000034a                asmReleaseLock
                0x00000000c000035d                loadGDT
                0x00000000c000037d                memcpy
 *fill*         0x00000000c0000382        0xe 
 .text          0x00000000c0000390      0x79e acpica/utclib.32
                0x00000000c0000390                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004d0                memset
                0x00000000c0000540                strlen
                0x00000000c0000570                strpbrk
                0x00000000c00005b0                strtok
                0x00000000c0000600                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b2e      0xfad core/malloc.32
                0x00000000c0000c99                dlfree
                0x00000000c0000ff4                dlmalloc
                0x00000000c0001531                dlrealloc
                0x00000000c00016d4                dlmemalign
                0x00000000c00017f7                dlcalloc
                0x00000000c0001891                dlcfree
                0x00000000c0001896                dlindependent_calloc
                0x00000000c00018bb                dlindependent_comalloc
                0x00000000c00018d2                dlvalloc
                0x00000000c00018fd                dlpvalloc
                0x00000000c0001933                dlmalloc_trim
                0x00000000c0001940                dlmalloc_usable_size
                0x00000000c0001971                dlmallinfo
                0x00000000c0001a40                dlmalloc_stats
                0x00000000c0001a51                dlmallopt
 *fill*         0x00000000c0001adb        0x1 
 .text          0x00000000c0001adc      0x1f2 libk/ctype.32
                0x00000000c0001adc                isblank
                0x00000000c0001afc                iscntrl
                0x00000000c0001b1c                isdigit
                0x00000000c0001b38                islower
                0x00000000c0001b54                isspace
                0x00000000c0001b7c                isupper
                0x00000000c0001b98                isalpha
                0x00000000c0001bc8                isalnum
                0x00000000c0001bf8                ispunct
                0x00000000c0001c38                isgraph
                0x00000000c0001c68                isprint
                0x00000000c0001c90                isxdigit
 .text          0x00000000c0001cce        0x0 libk/string.32
 .text          0x00000000c0001cce       0x51 fs/fat/diskio.32
                0x00000000c0001cce                disk_status
                0x00000000c0001cd1                disk_initialize
                0x00000000c0001cd4                disk_read
                0x00000000c0001cea                disk_write
                0x00000000c0001d00                disk_ioctl
 .text          0x00000000c0001d1f     0x3d4b fs/fat/ff.32
                0x00000000c0003abb                f_mount
                0x00000000c0003b1d                f_open
                0x00000000c0003de8                f_read
                0x00000000c0003fe7                f_write
                0x00000000c000421b                f_sync
                0x00000000c00042d0                f_close
                0x00000000c00042ff                f_lseek
                0x00000000c00044a6                f_opendir
                0x00000000c0004571                f_closedir
                0x00000000c0004593                f_readdir
                0x00000000c0004625                f_stat
                0x00000000c00046a4                f_getfree
                0x00000000c00047a6                f_truncate
                0x00000000c000488a                f_unlink
                0x00000000c00049ac                f_mkdir
                0x00000000c0004b47                f_rename
                0x00000000c0004cfd                f_chmod
                0x00000000c0004da6                f_utime
                0x00000000c0004e54                f_getlabel
                0x00000000c0004fa5                f_setlabel
                0x00000000c0005135                f_expand
                0x00000000c0005295                f_mkfs
 *fill*         0x00000000c0005a6a        0x2 
 .text          0x00000000c0005a6c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a6c                ff_memalloc
                0x00000000c0005a84                ff_memfree
 *fill*         0x00000000c0005a9b        0x1 
 .text          0x00000000c0005a9c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a9c                ff_uni2oem
                0x00000000c0005b3c                ff_oem2uni
                0x00000000c0005bb4                ff_wtoupper
 .text          0x00000000c0005d44      0xc76 fs/iso9660/iso9660.32
                0x00000000c0005f63                isoReadDiscSector
                0x00000000c0005ffe                strnicmp
                0x00000000c00062b1                stricmp
                0x00000000c00062fd                iso_open
                0x00000000c0006387                iso_close
                0x00000000c00063a5                iso_read
                0x00000000c00064bb                iso_seek
                0x00000000c000653f                iso_tell
                0x00000000c0006570                iso_total
                0x00000000c000659b                fn_postprocess
                0x00000000c00065c1                iso_readdir
                0x00000000c00067b2                iso_reset
                0x00000000c00067bf                init_percd
                0x00000000c00068b9                iso_ioctl
                0x00000000c00068c1                fs_iso9660_init
                0x00000000c000694a                fs_iso9660_shutdown
 .text          0x00000000c00069ba      0x685 core/computer.32
                0x00000000c00069ba                Computer::close(int, int, void*)
                0x00000000c00069ff                Krnl::firstTask()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006be4                Computer::setBootMessage(char const*)
                0x00000000c0006be6                Computer::detectFeatures()
                0x00000000c0006df0                Computer::displayFeatures()
                0x00000000c0006df2                Computer::rdmsr(unsigned int)
                0x00000000c0006e1e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006e56                Computer::shutdown()
                0x00000000c0006e6e                Computer::restart()
                0x00000000c0006e86                Computer::sleep()
                0x00000000c0006e9a                Computer::nmiEnabled()
                0x00000000c0006ea6                Computer::readCMOS(unsigned char)
                0x00000000c0006ec0                Computer::enableNMI(bool)
                0x00000000c0006ed8                Computer::open(int, int, void*)
                0x00000000c0006fac                Computer::disableNMI()
                0x00000000c0006fbc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006fda                Computer::handleNMI()
 *fill*         0x00000000c000703f        0x1 
 .text          0x00000000c0007040      0x1cf core/gdt.32
                0x00000000c0007040                GDTEntry::setBase(unsigned int)
                0x00000000c000705c                GDTEntry::setLimit(unsigned int)
                0x00000000c000707a                GDT::GDT()
                0x00000000c000707a                GDT::GDT()
                0x00000000c0007090                GDT::addEntry(GDTEntry)
                0x00000000c00070b2                GDT::getNumberOfEntries()
                0x00000000c00070ba                GDT::flush()
                0x00000000c00070dc                GDT::setup()
 .text          0x00000000c000720f       0x1d core/idle.32
                0x00000000c000720f                idleFunction(void*)
 .text          0x00000000c000722c      0x464 core/idt.32
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000729e                IDTEntry::setOffset(unsigned int)
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00072be                IDT::addEntry(IDTEntry, int)
                0x00000000c00072d8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007310                IDT::flush()
                0x00000000c000732a                IDT::setup()
 .text          0x00000000c0007690      0x183 core/kheap.32
                0x00000000c0007690                sbrk
                0x00000000c0007725                mmap
                0x00000000c000773b                munmap
                0x00000000c0007751                liballoc_lock()
                0x00000000c000775e                liballoc_unlock()
                0x00000000c0007772                liballoc_alloc(int)
                0x00000000c000778a                liballoc_free(void*, int)
                0x00000000c00077a5                realloc
                0x00000000c00077b9                malloc
                0x00000000c00077c9                free
                0x00000000c00077d9                rfree
                0x00000000c00077e9                calloc
 .text          0x00000000c0007813       0xc3 core/main.32
                0x00000000c0007813                KeEntryPoint
 .text          0x00000000c00078d6      0x5dc core/physmgr.32
                0x00000000c00078d6                Phys::allocateDMA(unsigned long)
                0x00000000c00079ad                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c00079e0                Phys::setPageState(unsigned long, bool)
                0x00000000c0007a12                Phys::getPageState(unsigned long)
                0x00000000c0007a33                Phys::freePage(unsigned long)
                0x00000000c0007a95                Phys::allocatePage()
                0x00000000c0007b53                Phys::allocateContiguousPages(int)
                0x00000000c0007baf                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007be7                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007eb2      0x273 core/pipe.32
                0x00000000c0007eb2                Pipe::isAtty()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eda                Pipe::~Pipe()
                0x00000000c0007f02                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007fc2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00080be                Pipe::Pipe(int)
                0x00000000c00080be                Pipe::Pipe(int)
 *fill*         0x00000000c0008125        0x1 
 .text          0x00000000c0008126      0xaa0 core/terminal.32
                0x00000000c0008126                VgaText::isAtty()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000814e                VgaText::~VgaText()
                0x00000000c0008178                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008198                setTerminalScrollLock(bool)
                0x00000000c0008199                doTerminalCycle()
                0x00000000c000819a                addToTerminalCycle(VgaText*)
                0x00000000c000819b                scrollTerminalScrollLock(int)
                0x00000000c000819c                VgaText::updateTitle()
                0x00000000c000819e                VgaText::load()
                0x00000000c00081a0                VgaText::updateCursor()
                0x00000000c00081b6                VgaText::doANSI_SGR(int)
                0x00000000c000822a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000823a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000824a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000826a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008276                VgaText::setTitleColour(VgaColour)
                0x00000000c0008282                VgaText::setTitle(char*)
                0x00000000c0008284                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008296                VgaText::scrollScreen()
                0x00000000c000832e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008340                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00083d0                VgaText::getCursorX()
                0x00000000c00083d8                VgaText::getCursorY()
                0x00000000c00083e0                VgaText::setCursor(int, int)
                0x00000000c00083f7                setActiveTerminal(VgaText*)
                0x00000000c0008442                VgaText::clearScreen()
                0x00000000c0008490                VgaText::setCursorX(int)
                0x00000000c00084a8                VgaText::setCursorY(int)
                0x00000000c00084c0                VgaText::incrementCursor(bool)
                0x00000000c0008514                VgaText::decrementCursor(bool)
                0x00000000c0008536                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008604                VgaText::putchar(char)
                0x00000000c00086f0                VgaText::putx(unsigned int)
                0x00000000c0008736                VgaText::puts(char const*)
                0x00000000c000875c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00087a8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c0008a46                VgaText::receiveKey(unsigned char)
                0x00000000c0008ba0                VgaText::doUpdate()
                0x00000000c0008ba1                newTerminal(char*)
 *fill*         0x00000000c0008bc6        0x2 
 .text          0x00000000c0008bc8      0x1a1 core/tss.32
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bd8                TSS::setESP(unsigned long)
                0x00000000c0008bec                TSS::flush()
                0x00000000c0008c0c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008d69        0x1 
 .text          0x00000000c0008d6a      0x4c2 core/unixfile.32
                0x00000000c0008d6a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008dc0                ReservedFilename::isAtty()
                0x00000000c0008ddc                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008e3a                UnixFile::getFileDescriptor()
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c00090bc                UnixFile::~UnixFile()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c0009108                ReservedFilename::~ReservedFilename()
                0x00000000c000912f                getFromFileDescriptor(int)
 .text          0x00000000c000922c     0x1166 core/virtmgr.32
                0x00000000c000922c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009261                Virt::getPageState(unsigned long)
                0x00000000c0009285                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009396                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00093b4                Virt::swapIDToSector(unsigned long)
                0x00000000c00093c6                Virt::allocateSwapfilePage()
                0x00000000c0009444                Virt::virtualMemorySetup()
                0x00000000c000948f                Virt::setupPageSwapping(int)
                0x00000000c0009500                VAS::VAS()
                0x00000000c0009500                VAS::VAS()
                0x00000000c000953c                VAS::VAS(VAS*)
                0x00000000c000953c                VAS::VAS(VAS*)
                0x00000000c000956a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009596                VAS::getPageTableEntry(unsigned long)
                0x00000000c00095b5                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00096da                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00096fe                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009718                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009758                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000978c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00097b6                VAS::~VAS()
                0x00000000c00097b6                VAS::~VAS()
                0x00000000c000991a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009a1e                VAS::allocatePages(int, int)
                0x00000000c0009bf6                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009c14                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009cda                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009dc8                VAS::VAS(bool)
                0x00000000c0009dc8                VAS::VAS(bool)
                0x00000000c000a048                VAS::evict(unsigned long)
                0x00000000c000a10a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a1f8                VAS::scanForEviction()
                0x00000000c000a2d8                mapVASFirstTime
 .text          0x00000000c000a392       0x5f coreobjs/c++.32
                0x00000000c000a392                __cxa_atexit
                0x00000000c000a395                __cxa_finalize
                0x00000000c000a396                __stack_chk_fail
                0x00000000c000a3cc                __cxa_pure_virtual
                0x00000000c000a3dd                operator new[](unsigned long)
                0x00000000c000a3e2                operator delete(void*, unsigned long)
                0x00000000c000a3e7                operator delete[](void*)
                0x00000000c000a3ec                operator delete[](void*, unsigned long)
 .text          0x00000000c000a3f1      0x21c dbg/kconsole.32
                0x00000000c000a3f1                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a45c                Dbg::logc(char)
                0x00000000c000a47c                Dbg::logs(char*)
                0x00000000c000a499                Dbg::logWriteInt(unsigned int)
                0x00000000c000a4b7                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a4d8                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a60d        0x1 
 .text          0x00000000c000a60e      0xc5c fs/vfs.32
                0x00000000c000a60e                File::read(unsigned long long, void*, int*)
                0x00000000c000a666                File::write(unsigned long long, void*, int*)
                0x00000000c000a6be                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a716                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a744                File::isAtty()
                0x00000000c000a748                Directory::isAtty()
                0x00000000c000a74c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a752                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a758                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a75e                File::~File()
                0x00000000c000a75e                File::~File()
                0x00000000c000a782                File::~File()
                0x00000000c000a7ac                Directory::~Directory()
                0x00000000c000a7ac                Directory::~Directory()
                0x00000000c000a7d0                Directory::~Directory()
                0x00000000c000a7fa                Filesystem::Filesystem()
                0x00000000c000a7fa                Filesystem::Filesystem()
                0x00000000c000a81e                Filesystem::~Filesystem()
                0x00000000c000a81e                Filesystem::~Filesystem()
                0x00000000c000a82c                Filesystem::~Filesystem()
                0x00000000c000a850                Fs::getcwd(Process*, char*, int)
                0x00000000c000a87a                Fs::initVFS()
                0x00000000c000a8a4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aa4e                File::File(char const*, Process*)
                0x00000000c000aa4e                File::File(char const*, Process*)
                0x00000000c000ab0e                File::open(FileOpenMode)
                0x00000000c000ab6c                File::close()
                0x00000000c000abcc                File::seek(unsigned long long)
                0x00000000c000ac22                File::tell(unsigned long long*)
                0x00000000c000ac72                File::rewind()
                0x00000000c000ac86                File::unlink()
                0x00000000c000acd2                File::rename(char const*)
                0x00000000c000ad20                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ad7c                File::exists()
                0x00000000c000adba                File::stat(unsigned long long*, bool*)
                0x00000000c000ae1b                Fs::setcwd(Process*, char*)
                0x00000000c000af78                Directory::Directory(char const*, Process*)
                0x00000000c000af78                Directory::Directory(char const*, Process*)
                0x00000000c000b038                Directory::open()
                0x00000000c000b094                Directory::close()
                0x00000000c000b0f4                Directory::unlink()
                0x00000000c000b140                Directory::rename(char const*)
                0x00000000c000b18e                Directory::exists()
                0x00000000c000b1cc                Directory::read(dirent*)
                0x00000000c000b218                Directory::create()
                0x00000000c000b264                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b26a        0x2 
 .text          0x00000000c000b26c       0x86 hal/bus.32
                0x00000000c000b26c                Bus::Bus(char const*)
                0x00000000c000b26c                Bus::Bus(char const*)
                0x00000000c000b2a4                Bus::~Bus()
                0x00000000c000b2a4                Bus::~Bus()
                0x00000000c000b2c8                Bus::~Bus()
 .text          0x00000000c000b2f2       0x96 hal/buzzer.32
                0x00000000c000b2f2                beepThread(void*)
                0x00000000c000b32f                Krnl::beep(int, int, bool)
 .text          0x00000000c000b388      0x46d hal/clock.32
                0x00000000c000b388                User::loadClockSettings(int)
                0x00000000c000b3da                Clock::Clock(char const*)
                0x00000000c000b3da                Clock::Clock(char const*)
                0x00000000c000b410                Clock::~Clock()
                0x00000000c000b410                Clock::~Clock()
                0x00000000c000b434                Clock::~Clock()
                0x00000000c000b45e                Clock::timeInSecondsLocal()
                0x00000000c000b4a6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b4ff                datetimeToSeconds(datetime_t)
                0x00000000c000b62c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b68c                secondsToDatetime(unsigned long long)
                0x00000000c000b7d0                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b7f5        0x1 
 .text          0x00000000c000b7f6      0x464 hal/device.32
                0x00000000c000b7f6                Device::hibernate()
                0x00000000c000b7f8                Device::wake()
                0x00000000c000b7fa                Device::detect()
                0x00000000c000b7fc                Device::disableLegacy()
                0x00000000c000b7fe                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b800                DriverlessDevice::close(int, int, void*)
                0x00000000c000b804                DriverlessDevice::detect()
                0x00000000c000b806                DriverlessDevice::open(int, int, void*)
                0x00000000c000b81a                Device::~Device()
                0x00000000c000b81a                Device::~Device()
                0x00000000c000b828                Device::~Device()
                0x00000000c000b850                Device::findAndLoadDriver()
                0x00000000c000b85e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b884                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000b8c4                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b8ee                Device::getParent()
                0x00000000c000b8fa                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b918                Device::addChild(Device*)
                0x00000000c000b95c                Device::removeAllChildren()
                0x00000000c000b9a2                Device::hibernateAll()
                0x00000000c000b9d2                Device::wakeAll()
                0x00000000c000ba02                Device::detectAll()
                0x00000000c000ba32                Device::disableLegacyAll()
                0x00000000c000ba34                Device::loadDriversForAll()
                0x00000000c000ba36                Device::closeAll()
                0x00000000c000ba6c                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000baa2                Device::setName(char const*)
                0x00000000c000bab0                Device::Device(char const*)
                0x00000000c000bab0                Device::Device(char const*)
                0x00000000c000bbac                Device::getName()
                0x00000000c000bbb6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbb6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbec                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bc30                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bc5a        0x2 
 .text          0x00000000c000bc5c       0x86 hal/diskctrl.32
                0x00000000c000bc5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc94                HardDiskController::~HardDiskController()
                0x00000000c000bc94                HardDiskController::~HardDiskController()
                0x00000000c000bcb8                HardDiskController::~HardDiskController()
 .text          0x00000000c000bce2       0xe2 hal/diskphys.32
                0x00000000c000bce2                PhysicalDisk::eject()
                0x00000000c000bce6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bce6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bd4e                PhysicalDisk::startCache()
                0x00000000c000bd76                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd76                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd9a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000bdc4        0x0 hal/fpu.32
 .text          0x00000000c000bdc4      0x35d hal/intctrl.32
                0x00000000c000bdc4                int_handler
                0x00000000c000be4c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000be94                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bfcc                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c000                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c07f                setupINTS()
                0x00000000c000c0dc                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c121        0x1 
 .text          0x00000000c000c122      0x792 hal/keybrd.32
                0x00000000c000c122                startGUI(void*)
                0x00000000c000c18e                startGUIVESA(void*)
                0x00000000c000c1fa                sendKeyToTerminal(unsigned char)
                0x00000000c000c2c3                sendKeyboardToken(KeyboardToken)
                0x00000000c000c703                clearInternalKeybuffer(VgaText*)
                0x00000000c000c738                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c82a                Keyboard::Keyboard(char const*)
                0x00000000c000c82a                Keyboard::Keyboard(char const*)
                0x00000000c000c866                Keyboard::~Keyboard()
                0x00000000c000c866                Keyboard::~Keyboard()
                0x00000000c000c88a                Keyboard::~Keyboard()
 .text          0x00000000c000c8b4      0x3ea hal/logidisk.32
                0x00000000c000c8b4                LogicalDisk::close(int, int, void*)
                0x00000000c000c8b8                LogicalDisk::~LogicalDisk()
                0x00000000c000c8b8                LogicalDisk::~LogicalDisk()
                0x00000000c000c8dc                LogicalDisk::~LogicalDisk()
                0x00000000c000c906                LogicalDisk::open(int, int, void*)
                0x00000000c000c91a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000c952                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000c998                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c998                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ca4e                LogicalDisk::assignDriveLetter()
                0x00000000c000cb04                LogicalDisk::mount()
                0x00000000c000cb4c                LogicalDisk::unmount()
                0x00000000c000cb5c                LogicalDisk::eject()
                0x00000000c000cb70                LogicalDisk::unassignDriveLetter()
                0x00000000c000cbc6                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000cc32                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000cc9e        0x2 
 .text          0x00000000c000cca0       0x86 hal/mouse.32
                0x00000000c000cca0                Mouse::Mouse(char const*)
                0x00000000c000cca0                Mouse::Mouse(char const*)
                0x00000000c000ccd8                Mouse::~Mouse()
                0x00000000c000ccd8                Mouse::~Mouse()
                0x00000000c000ccfc                Mouse::~Mouse()
 .text          0x00000000c000cd26      0x339 hal/partition.32
                0x00000000c000cd26                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cdce                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d05f        0x1 
 .text          0x00000000c000d060       0x86 hal/serial.32
                0x00000000c000d060                Serial::Serial(char const*)
                0x00000000c000d060                Serial::Serial(char const*)
                0x00000000c000d098                Serial::~Serial()
                0x00000000c000d098                Serial::~Serial()
                0x00000000c000d0bc                Serial::~Serial()
 *fill*         0x00000000c000d0e6        0x2 
 .text          0x00000000c000d0e8      0x234 hal/timer.32
                0x00000000c000d0e8                Timer::Timer(char const*)
                0x00000000c000d0e8                Timer::Timer(char const*)
                0x00000000c000d120                Timer::~Timer()
                0x00000000c000d120                Timer::~Timer()
                0x00000000c000d144                Timer::~Timer()
                0x00000000c000d16e                Timer::read()
                0x00000000c000d179                setupTimer(int)
                0x00000000c000d1b4                timerHandler(unsigned int)
 .text          0x00000000c000d31c      0x3ce hal/vcache.32
                0x00000000c000d31c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d31c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d484                VCache::invalidateReadBuffer()
                0x00000000c000d494                VCache::writeWriteBuffer()
                0x00000000c000d4e0                VCache::~VCache()
                0x00000000c000d4e0                VCache::~VCache()
                0x00000000c000d534                VCache::~VCache()
                0x00000000c000d55c                VCache::write(unsigned long long, int, void*)
                0x00000000c000d672                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d6ea      0x4b3 hal/video.32
                0x00000000c000d6ea                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d736                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000d7a6                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000d824                Video::clearScreen(unsigned int)
                0x00000000c000d858                Video::putpixel(int, int, unsigned int)
                0x00000000c000d866                Video::Video(char const*)
                0x00000000c000d866                Video::Video(char const*)
                0x00000000c000d89c                Video::~Video()
                0x00000000c000d89c                Video::~Video()
                0x00000000c000d8c0                Video::~Video()
                0x00000000c000d8ea                Video::isMonochrome()
                0x00000000c000d8f6                Video::getWidth()
                0x00000000c000d902                Video::getHeight()
                0x00000000c000d90e                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000d9ca                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000db32                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000db9d        0x3 
 .text          0x00000000c000dba0     0x1307 hw/acpi.32
                0x00000000c000dba0                ACPI::close(int, int, void*)
                0x00000000c000dc58                findRSDP()
                0x00000000c000dce8                loadACPITables(unsigned char*)
                0x00000000c000df4c                findRSDT(unsigned char*)
                0x00000000c000e09c                findDataTable(unsigned char*, char*)
                0x00000000c000e114                scanMADT()
                0x00000000c000e5e8                ACPI::ACPI()
                0x00000000c000e5e8                ACPI::ACPI()
                0x00000000c000e63c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e724                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000e7ec                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000e7f4                ACPI::detectPCI()
                0x00000000c000e9fc                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ea50                ACPI::sleep()
                0x00000000c000ea6c                ACPI::open(int, int, void*)
 *fill*         0x00000000c000eea7        0x1 
 .text          0x00000000c000eea8      0xb95 hw/cpu.32
                0x00000000c000eea8                CPU::close(int, int, void*)
                0x00000000c000eeac                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000eec8                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000eee0                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ef54                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000efd8                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f006                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f034                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f062                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f090                CPU::CPU()
                0x00000000c000f090                CPU::CPU()
                0x00000000c000f11e                CPU::displayFeatures()
                0x00000000c000f120                CPU::detectFeatures()
                0x00000000c000f7e4                CPU::setupSMEP()
                0x00000000c000f7f0                CPU::setupUMIP()
                0x00000000c000f7fa                CPU::setupTSC()
                0x00000000c000f804                CPU::setupLargePages()
                0x00000000c000f80e                CPU::setupPAT()
                0x00000000c000f84a                CPU::setupMTRR()
                0x00000000c000f84c                CPU::setupGlobalPages()
                0x00000000c000f856                CPU::allowUsermodeDataAccess()
                0x00000000c000f868                CPU::prohibitUsermodeDataAccess()
                0x00000000c000f87a                CPU::setupSMAP()
                0x00000000c000f888                CPU::setupFeatures()
                0x00000000c000f954                CPU::open(int, int, void*)
 .text          0x00000000c000fa3d       0xd1 krnl/bootmsg.32
                0x00000000c000fa3d                KeDisplaySplashScreen()
                0x00000000c000faab                KeSetBootMessage(char const*)
 .text          0x00000000c000fb0e      0x581 krnl/env.32
                0x00000000c000fb0e                EnvVarContainer::getEnv(char const*)
                0x00000000c000fb4c                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fc0e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fc10                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000fdf6                EnvVarContainer::__loadSystem()
                0x00000000c000fe10                EnvVarContainer::__loadUser()
                0x00000000c000fe12                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe12                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe34                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe34                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe64                Krnl::getEnv(Process*, char const*)
                0x00000000c000fec9                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000fee3                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000ff02                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000ff15                Krnl::deleteEnvSystem(char const*)
                0x00000000c000ff16                Krnl::deleteEnvUser(char const*)
                0x00000000c000ff17                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000ff18                Krnl::newProcessEnv(Process*)
                0x00000000c000ff3a                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000ff86                Krnl::loadSystemEnv()
                0x00000000c000ffb4                Krnl::loadUserEnv()
                0x00000000c000ffda                Krnl::flushEnv()
                0x00000000c000ffdb                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000fffb                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001008f       0x94 krnl/inlines.32
                0x00000000c001008f                CPU::current()
                0x00000000c001009b                operator new(unsigned long)
                0x00000000c00100a0                operator delete(void*)
                0x00000000c00100a5                disableIRQs()
                0x00000000c00100a7                enableIRQs()
                0x00000000c00100a9                lockScheduler()
                0x00000000c00100b1                unlockScheduler()
                0x00000000c00100c0                lockStuff()
                0x00000000c00100ce                unlockStuff()
                0x00000000c0010108                Virt::getAKernelVAS()
                0x00000000c001010e                __not_memcpy
 .text          0x00000000c0010123        0xc krnl/panic.32
                0x00000000c0010123                KePanic(char const*)
 .text          0x00000000c001012f      0x142 krnl/powctrl.32
                0x00000000c001012f                Krnl::powerThread(void*)
                0x00000000c001015d                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010173                Krnl::userIOReceived()
                0x00000000c001017e                Krnl::handlePowerButton()
                0x00000000c00101b3                Krnl::handleSleepButton()
                0x00000000c00101e8                Krnl::setupPowerManager()
 *fill*         0x00000000c0010271        0x3 
 .text          0x00000000c0010274      0x190 krnl/resolve.32
                0x00000000c0010274                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010404      0x117 krnl/signal.32
                0x00000000c0010404                KiDefaultSignalHandlerAbort(int)
                0x00000000c0010411                KiDefaultSignalHandlerTerminate(int)
                0x00000000c001041e                KiSigKill(int)
                0x00000000c001042b                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001042c                KiDefaultSignalHandlerPause(int)
                0x00000000c0010439                KiDefaultSignalHandlerResume(int)
                0x00000000c0010446                KeInitSignals()
                0x00000000c00104a1                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00104d7                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00104dd                KeCheckSignal(SigHandlerBlock*)
                0x00000000c00104e0                KeCompleteSignal(SigHandlerBlock*, int)
 .text          0x00000000c001051b      0xcfe krnl/syscalls.32
                0x00000000c001051b                SysSeekDir(regs*)
                0x00000000c0010520                SysTellDir(regs*)
                0x00000000c0010525                SysVerify(regs*)
                0x00000000c001052f                SysGetArgc(regs*)
                0x00000000c001053f                SysTTYName(regs*)
                0x00000000c0010547                SysFormatDisk(regs*)
                0x00000000c00105b4                SysSetDiskVolumeLabel(regs*)
                0x00000000c00105fe                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010653                SysShutdown(regs*)
                0x00000000c00106b1                SysRealpath(regs*)
                0x00000000c00106f4                SysReadDir(regs*)
                0x00000000c0010774                SysIsATTY(regs*)
                0x00000000c00107d0                SysSeek(regs*)
                0x00000000c0010829                SysTell(regs*)
                0x00000000c0010898                SysSize(regs*)
                0x00000000c001090d                SysSizeFromFilename(regs*)
                0x00000000c00109c0                SysClose(regs*)
                0x00000000c0010a20                SysOpenDir(regs*)
                0x00000000c0010b31                SysCloseDir(regs*)
                0x00000000c0010b85                SysMakeDir(regs*)
                0x00000000c0010bf7                SysWait(regs*)
                0x00000000c0010c14                SysNotImpl(regs*)
                0x00000000c0010c2f                SysPanic(regs*)
                0x00000000c0010c4a                SysRmdir(regs*)
                0x00000000c0010cb1                SysUnlink(regs*)
                0x00000000c0010d18                SysGetArgv(regs*)
                0x00000000c0010d65                SysUSleep(regs*)
                0x00000000c0010d8e                SysSpawn(regs*)
                0x00000000c0010df7                SysGetEnv(regs*)
                0x00000000c0010ea6                SysSetFatAttrib(regs*)
                0x00000000c0010f1d                SysPipe(regs*)
                0x00000000c0010f62                SysGetUnixTime(regs*)
                0x00000000c0010f76                string_ends_with(char const*, char const*)
                0x00000000c0010fc0                SysOpen(regs*)
                0x00000000c00111c7                KeSystemCall(regs*, void*)
 .text          0x00000000c0011219      0x50e reg/registry.32
                0x00000000c0011219                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0011371                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00114c6                Reg::getLine(char*, char*, char*)
                0x00000000c00114fd                Reg::readInt(char*, char*, int*)
                0x00000000c00115e8                Reg::readString(char*, char*, char*, int)
                0x00000000c0011669                Reg::readBool(char*, char*, bool*)
                0x00000000c001168e                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00116ba                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00116e6                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0011727       0x36 sys/eject.32
                0x00000000c0011727                SysEject(regs*)
 .text          0x00000000c001175d       0x18 sys/exit.32
                0x00000000c001175d                SysExit(regs*)
 .text          0x00000000c0011775       0x1f sys/getcwd.32
                0x00000000c0011775                SysGetCwd(regs*)
 .text          0x00000000c0011794        0xc sys/getpid.32
                0x00000000c0011794                SysGetPID(regs*)
 .text          0x00000000c00117a0       0x1a sys/getramdata.32
                0x00000000c00117a0                SysGetRAMData(regs*)
 .text          0x00000000c00117ba       0x82 sys/getvgaptr.32
                0x00000000c00117ba                SysGetVGAPtr(regs*)
 .text          0x00000000c001183c       0xa8 sys/loaddll.32
                0x00000000c001183c                SysLoadDLL(regs*)
 .text          0x00000000c00118e4       0x68 sys/read.32
                0x00000000c00118e4                SysRead(regs*)
 .text          0x00000000c001194c       0x29 sys/registersignal.32
                0x00000000c001194c                SysRegisterSignal(regs*)
 .text          0x00000000c0011975       0x67 sys/sbrk.32
                0x00000000c0011975                SysSbrk(regs*)
 .text          0x00000000c00119dc       0x1c sys/setcwd.32
                0x00000000c00119dc                SysSetCwd(regs*)
 .text          0x00000000c00119f8       0x95 sys/settime.32
                0x00000000c00119f8                SysSetTime(regs*)
 .text          0x00000000c0011a8d       0x4a sys/timezone.32
                0x00000000c0011a8d                SysTimezone(regs*)
 .text          0x00000000c0011ad7       0x68 sys/write.32
                0x00000000c0011ad7                SysWrite(regs*)
 .text          0x00000000c0011b3f       0x62 sys/wsbe.32
                0x00000000c0011b3f                SysWsbe(regs*)
 .text          0x00000000c0011ba1       0x25 sys/yield.32
                0x00000000c0011ba1                SysYield(regs*)
 .text          0x00000000c0011bc6     0x11e5 thr/elf.32
                0x00000000c0011bc6                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0011e52                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0012068                Thr::runtimeReferenceHelper()
                0x00000000c001207b                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00120ca                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0012388                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012abe                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012af0                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012b27                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012b41                Thr::loadDLL(char const*, bool)
                0x00000000c0012d72                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0012dab        0x1 
 .text          0x00000000c0012dac     0x138d thr/prcssthr.32
                0x00000000c0012dac                userModeEntryPoint(void*)
                0x00000000c0012dd4                changeTSS
                0x00000000c0012e04                switchToThread(ThreadControlBlock*)
                0x00000000c0012eb8                Process::addArgs(char**)
                0x00000000c0012f18                Process::Process(char const*, Process*, char**)
                0x00000000c0012f18                Process::Process(char const*, Process*, char**)
                0x00000000c0013114                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013114                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001338c                taskStartupFunction
                0x00000000c0013398                Semaphore::Semaphore(int)
                0x00000000c0013398                Semaphore::Semaphore(int)
                0x00000000c00133c8                Mutex::Mutex()
                0x00000000c00133c8                Mutex::Mutex()
                0x00000000c00133dc                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00134d4                Process::createUserThread()
                0x00000000c00134f4                setupMultitasking(void (*)())
                0x00000000c00135fc                schedule()
                0x00000000c001368c                Semaphore::tryAcquire()
                0x00000000c0013758                Semaphore::assertLocked(char const*)
                0x00000000c00137d0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00137f8                blockTask(TaskState)
                0x00000000c0013828                waitTask(int, int*, int)
                0x00000000c001386c                milliTenthSleepUntil(unsigned int)
                0x00000000c00138fc                milliTenthSleep(unsigned int)
                0x00000000c001390c                sleep(unsigned int)
                0x00000000c0013928                Semaphore::acquire()
                0x00000000c00139e4                taskReturned
                0x00000000c0013a20                Thr::processFromPID(int)
                0x00000000c0013ac0                unblockTask(ThreadControlBlock*)
                0x00000000c0013b64                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0013e30                cleanerTaskFunction(void*)
                0x00000000c0013f20                terminateTask(int)
                0x00000000c0013fec                Thr::terminateFromIRQ(int)
                0x00000000c0013ffc                Semaphore::release()
 .text          0x00000000c0014139      0xb93 vm86/vm8086.32
                0x00000000c0014139                Vm::inbv(unsigned short)
                0x00000000c001414c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0014182                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0014192                Vm::getSegment(unsigned int)
                0x00000000c001419a                Vm::getOffset(unsigned int)
                0x00000000c001419f                Vm::mainloop2()
                0x00000000c00141d9                Vm::mainVm8086Loop(void*)
                0x00000000c00141e9                Vm::mainloop3(unsigned long)
                0x00000000c001420f                Vm::initialise8086()
                0x00000000c0014252                Vm::finish8086()
                0x00000000c00142b3                Vm::getOutput8086(unsigned char*)
                0x00000000c00142d8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014391                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00144f9                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0014583                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0014594                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00145a6                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00145b7                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00145cc                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00145e2                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00145f7                Vm::faultHandler(regs*)
 .text          0x00000000c0014ccc      0xa53 arch/i386/hal.32
                0x00000000c0014ccc                noCopro(unsigned long)
                0x00000000c0014ccd                nmiHandler(regs*, void*)
                0x00000000c0014ce6                doubleFault(regs*, void*)
                0x00000000c0014cff                displayDebugInfo(regs*)
                0x00000000c0015020                HalSystemIdle()
                0x00000000c0015096                displayProgramFault(char const*)
                0x00000000c00150e2                gpFault(regs*, void*)
                0x00000000c0015147                pgFault(regs*, void*)
                0x00000000c00151cd                otherISRHandler(regs*, void*)
                0x00000000c0015201                opcodeFault(regs*, void*)
                0x00000000c0015281                i386SaveCoprocessor(void*)
                0x00000000c0015295                i386LoadCoprocessor(void*)
                0x00000000c00152a9                x87EmulHandler(regs*, void*)
                0x00000000c0015346                HalInitialiseCoprocessor()
                0x00000000c00153f4                HalPanic(char const*)
                0x00000000c00154ed                HalQueryPerformanceCounter()
                0x00000000c0015508                HalInitialise()
                0x00000000c00156ae                HalMakeBeep(int)
                0x00000000c00156e8                HalGetRand()
                0x00000000c00156eb                HalEndOfInterrupt(int)
                0x00000000c001571c                HalRestart()
                0x00000000c001571d                HalShutdown()
                0x00000000c001571e                HalSleep()
 *fill*         0x00000000c001571f        0x1 
 .text          0x00000000c0015720      0x2f4 arch/i386/pic.32
                0x00000000c0015720                picIoWait()
                0x00000000c0015728                picDisable()
                0x00000000c001575c                picGetIRQReg(int)
                0x00000000c00157e0                picOpen()
                0x00000000c0015970                picEOI(int)
 .text          0x00000000c0015a14      0x64d arch/i386/rtc.32
                0x00000000c0015a14                RTC::open(int, int, void*)
                0x00000000c0015a18                RTC::close(int, int, void*)
                0x00000000c0015a1c                RTC::timeInSecondsUTC()
                0x00000000c0015a2e                RTC::timeInDatetimeUTC()
                0x00000000c0015a54                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015a92                RTC::~RTC()
                0x00000000c0015a92                RTC::~RTC()
                0x00000000c0015ab6                RTC::~RTC()
                0x00000000c0015ae0                RTC::get_update_in_progress_flag()
                0x00000000c0015af8                RTC::completeRTCRefresh()
                0x00000000c0015db0                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0015f63                rtcIRQHandler(regs*, void*)
                0x00000000c0015fa8                RTC::RTC()
                0x00000000c0015fa8                RTC::RTC()
 *fill*         0x00000000c0016061        0x3 
 .text          0x00000000c0016064      0x203 arch/i386/vga.32
                0x00000000c0016064                HalConsoleScroll(int, int)
                0x00000000c001616c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00161d8                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0016267        0x1 
 .text          0x00000000c0016268     0x13e7 fs/fat/vfslink.32
                0x00000000c0016268                FAT::getName()
                0x00000000c0016270                FAT::tell(void*, unsigned long long*)
                0x00000000c00162ac                FAT::stat(void*, unsigned long long*)
                0x00000000c00162e8                FAT::~FAT()
                0x00000000c00162e8                FAT::~FAT()
                0x00000000c001630c                FAT::~FAT()
                0x00000000c0016334                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00163d8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001649c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016670                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016888                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016a48                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016bb4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016c14                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016c74                FAT::close(void*)
                0x00000000c0016cc8                FAT::closeDir(void*)
                0x00000000c0016d1c                FAT::seek(void*, unsigned long long)
                0x00000000c0016d74                fatWrapperReadDisk
                0x00000000c0016db8                fatWrapperWriteDisk
                0x00000000c0016dfc                fatWrapperIoctl
                0x00000000c0016f18                FAT::FAT()
                0x00000000c0016f18                FAT::FAT()
                0x00000000c0016f6c                FAT::fixFilepath(char*)
                0x00000000c0016fa8                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00170e0                FAT::openDir(char const*, void**)
                0x00000000c0017190                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017288                FAT::unlink(char const*)
                0x00000000c0017308                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017494                FAT::rename(char const*, char const*)
                0x00000000c0017560                FAT::mkdir(char const*)
                0x00000000c00175e0                FAT::exists(char const*)
 *fill*         0x00000000c001764f        0x1 
 .text          0x00000000c0017650       0xc6 fs/iso9660/helper.32
                0x00000000c0017650                isoReadDiscSectorHelper
                0x00000000c00176ac                iso_kprintf
                0x00000000c00176cc                iso_kprintfd
 .text          0x00000000c0017716      0x586 fs/iso9660/vfslink.32
                0x00000000c0017716                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001771c                ISO9660::getName()
                0x00000000c0017722                ISO9660::closeDir(void*)
                0x00000000c001772c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017732                ISO9660::unlink(char const*)
                0x00000000c0017738                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001773e                ISO9660::rename(char const*, char const*)
                0x00000000c0017744                ISO9660::mkdir(char const*)
                0x00000000c001774a                ISO9660::~ISO9660()
                0x00000000c001774a                ISO9660::~ISO9660()
                0x00000000c001776e                ISO9660::~ISO9660()
                0x00000000c0017796                ISO9660::exists(char const*)
                0x00000000c00177aa                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001784a                ISO9660::openDir(char const*, void**)
                0x00000000c00178da                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001791a                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017952                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017988                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00179c2                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017a94                ISO9660::close(void*)
                0x00000000c0017aba                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017b87                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017c02                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017c74                ISO9660::ISO9660()
                0x00000000c0017c74                ISO9660::ISO9660()
 .text          0x00000000c0017c9c      0x26c hal/sound/sndcard.32
                0x00000000c0017c9c                SoundCard::beginPlayback()
                0x00000000c0017caa                SoundCard::stopPlayback()
                0x00000000c0017cb8                SoundCard::SoundCard(char const*)
                0x00000000c0017cb8                SoundCard::SoundCard(char const*)
                0x00000000c0017d56                SoundCard::~SoundCard()
                0x00000000c0017d56                SoundCard::~SoundCard()
                0x00000000c0017d7a                SoundCard::~SoundCard()
                0x00000000c0017da4                SoundCard::configureRates(int, int, int)
                0x00000000c0017dd4                SoundCard::getSamples16(int, short*)
                0x00000000c0017e30                SoundCard::getSamples32(int, int*)
                0x00000000c0017eb6                SoundCard::addChannel(SoundPort*)
                0x00000000c0017ef4                SoundCard::removeChannel(int)
 .text          0x00000000c0017f08      0x377 hal/sound/sndport.32
                0x00000000c0017f08                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017f08                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017f94                SoundPort::~SoundPort()
                0x00000000c0017f94                SoundPort::~SoundPort()
                0x00000000c0017fc8                SoundPort::unpause()
                0x00000000c0017fd4                SoundPort::pause()
                0x00000000c0017fe0                SoundPort::getBufferUsed()
                0x00000000c0017fe8                SoundPort::getBufferSize()
                0x00000000c0017ff0                SoundPort::buffer16(short*, int)
                0x00000000c001807c                SoundPort::buffer32(int*, int)
                0x00000000c0018104                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00181c8                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001827f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001827f        0x1 
 .text          0x00000000c0018280      0xb49 hw/bus/pci.32
                0x00000000c0018280                PCI::open(int, int, void*)
                0x00000000c001829e                PCI::close(int, int, void*)
                0x00000000c00182a2                PCI::PCI()
                0x00000000c00182a2                PCI::PCI()
                0x00000000c001833c                PCI::readBAR8(unsigned int, int)
                0x00000000c0018358                PCI::readBAR16(unsigned int, int)
                0x00000000c0018376                PCI::readBAR32(unsigned int, int)
                0x00000000c0018392                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c00183b2                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c00183d4                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c00183f4                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018462                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001850a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001852e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0018556                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c00185a0                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c00185c8                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c00185ec                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018610                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018638                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001869c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018784                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c00189fe                PCI::checkBus(unsigned char)
                0x00000000c0018a24                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018b96                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018d0a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018d76                PCI::detect()
 *fill*         0x00000000c0018dc9        0x1 
 .text          0x00000000c0018dca      0xb5a hw/diskctrl/ide.32
                0x00000000c0018dca                IDE::close(int, int, void*)
                0x00000000c0018dce                IDE::IDE()
                0x00000000c0018dce                IDE::IDE()
                0x00000000c0018e02                IDE::prepareInterrupt(unsigned char)
                0x00000000c0018e14                selectDrive(unsigned char, unsigned char)
                0x00000000c0018e16                IDE::getBase(unsigned char)
                0x00000000c0018e28                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0018ee8                IDE::read(unsigned char, unsigned char)
                0x00000000c0018f96                IDE::waitInterrupt(unsigned char)
                0x00000000c0018ffe                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001901a                ideChannel1IRQHandler(regs*, void*)
                0x00000000c0019036                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001907c                IDE::open(int, int, void*)
                0x00000000c001948a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0019556                IDE::detect()
                0x00000000c0019816                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c00198c6                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019924      0x32a hw/diskctrl/satabus.32
                0x00000000c0019924                SATABus::close(int, int, void*)
                0x00000000c0019928                SATABus::detect()
                0x00000000c001992a                SATABus::SATABus()
                0x00000000c001992a                SATABus::SATABus()
                0x00000000c00199b0                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c00199e2                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019a2a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019a4a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019a74                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019b84                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019c2e                SATABus::open(int, int, void*)
 .text          0x00000000c0019c4e      0x5f4 hw/diskphys/ata.32
                0x00000000c0019c4e                ATA::close(int, int, void*)
                0x00000000c0019c72                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019c74                ATA::ATA()
                0x00000000c0019c74                ATA::ATA()
                0x00000000c0019ca2                ATA::flush(bool)
                0x00000000c0019cec                ATA::readyForCommand()
                0x00000000c0019d38                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a0b4                ATA::read(unsigned long long, int, void*)
                0x00000000c001a100                ATA::write(unsigned long long, int, void*)
                0x00000000c001a14c                ATA::detectCHS()
                0x00000000c001a176                ATA::open(int, int, void*)
 .text          0x00000000c001a242      0x60e hw/diskphys/atapi.32
                0x00000000c001a242                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a248                ATAPI::close(int, int, void*)
                0x00000000c001a26c                ATAPI::ATAPI()
                0x00000000c001a26c                ATAPI::ATAPI()
                0x00000000c001a29a                ATAPI::readyForCommand()
                0x00000000c001a2ec                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a5ac                ATAPI::diskRemoved()
                0x00000000c001a5e6                ATAPI::eject()
                0x00000000c001a62e                ATAPI::diskInserted()
                0x00000000c001a63a                ATAPI::detectMedia()
                0x00000000c001a6f6                ATAPI::open(int, int, void*)
                0x00000000c001a7d6                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001a850      0x402 hw/diskphys/sata.32
                0x00000000c001a850                SATA::close(int, int, void*)
                0x00000000c001a874                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001a876                SATA::open(int, int, void*)
                0x00000000c001a920                SATA::SATA()
                0x00000000c001a920                SATA::SATA()
                0x00000000c001a94e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ab9a                SATA::read(unsigned long long, int, void*)
                0x00000000c001abe6                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001ac52      0x5af hw/diskphys/satapi.32
                0x00000000c001ac52                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ac58                SATAPI::close(int, int, void*)
                0x00000000c001ac7c                SATAPI::SATAPI()
                0x00000000c001ac7c                SATAPI::SATAPI()
                0x00000000c001acaa                SATAPI::diskRemoved()
                0x00000000c001acac                SATAPI::diskInserted()
                0x00000000c001acc8                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001afa8                SATAPI::eject()
                0x00000000c001afe4                SATAPI::detectMedia()
                0x00000000c001b00a                SATAPI::open(int, int, void*)
                0x00000000c001b10a                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b201        0x1 
 .text          0x00000000c001b202      0x455 hw/intctrl/apic.32
                0x00000000c001b202                IOAPIC::close(int, int, void*)
                0x00000000c001b208                apicGetBase()
                0x00000000c001b24a                IOAPIC::IOAPIC()
                0x00000000c001b24a                IOAPIC::IOAPIC()
                0x00000000c001b272                apicOpen()
                0x00000000c001b3d8                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b40a                IOAPIC::read(int)
                0x00000000c001b432                IOAPIC::open(int, int, void*)
                0x00000000c001b526                IOAPIC::write(int, int)
                0x00000000c001b552                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b657        0x1 
 .text          0x00000000c001b658       0xf0 hw/timer/apictimer.32
                0x00000000c001b658                APICTimer::close(int, int, void*)
                0x00000000c001b660                apicTimerHandler(regs*, void*)
                0x00000000c001b688                APICTimer::open(int, int, void*)
                0x00000000c001b6f8                APICTimer::write(int)
                0x00000000c001b720                APICTimer::APICTimer()
                0x00000000c001b720                APICTimer::APICTimer()
 .text          0x00000000c001b748      0x1aa hw/timer/pit.32
                0x00000000c001b748                PIT::write(int)
                0x00000000c001b7cc                pitHandler(regs*, void*)
                0x00000000c001b7f0                PIT::open(int, int, void*)
                0x00000000c001b840                PIT::close(int, int, void*)
                0x00000000c001b870                PIT::PIT()
                0x00000000c001b870                PIT::PIT()
 *fill*         0x00000000c001b8f2        0xe 
 .text          0x00000000c001b900       0x83 arch/i386/avx.32
                0x00000000c001b900                avxDetect
                0x00000000c001b92a                avxSave
                0x00000000c001b93b                avxLoad
                0x00000000c001b94c                avxInit
                0x00000000c001b96e                avxClose
                0x00000000c001b96f                wouldSheSayYes
 *fill*         0x00000000c001b983        0xd 
 .text          0x00000000c001b990      0x1d6 arch/i386/interrupt.32
                0x00000000c001b990                isr0
                0x00000000c001b9a0                isr1
                0x00000000c001b9aa                isr2
                0x00000000c001b9b4                isr3
                0x00000000c001b9be                isr4
                0x00000000c001b9c8                isr5
                0x00000000c001b9d2                isr6
                0x00000000c001b9dc                isr7
                0x00000000c001b9e6                isr8
                0x00000000c001b9ee                isr9
                0x00000000c001b9f8                isr10
                0x00000000c001ba00                isr11
                0x00000000c001ba08                isr12
                0x00000000c001ba10                isr13
                0x00000000c001ba18                isr14
                0x00000000c001ba20                isr15
                0x00000000c001ba2a                isr16
                0x00000000c001ba34                isr17
                0x00000000c001ba3e                isr18
                0x00000000c001ba48                irq3
                0x00000000c001ba52                irq4
                0x00000000c001ba5c                irq5
                0x00000000c001ba66                irq6
                0x00000000c001ba70                irq7
                0x00000000c001ba7a                irq8
                0x00000000c001ba84                irq9
                0x00000000c001ba8e                irq10
                0x00000000c001ba98                irq11
                0x00000000c001baa2                irq12
                0x00000000c001baac                irq13
                0x00000000c001bab6                irq14
                0x00000000c001bac0                irq15
                0x00000000c001baca                irq1
                0x00000000c001bad1                irq2
                0x00000000c001bad8                isr96
                0x00000000c001badf                irq0
                0x00000000c001bae4                int_common_stub
                0x00000000c001bae4                syscall_common_stub
                0x00000000c001bb16                irq16
                0x00000000c001bb20                irq17
                0x00000000c001bb2a                irq18
                0x00000000c001bb34                irq19
                0x00000000c001bb3e                irq20
                0x00000000c001bb48                irq21
                0x00000000c001bb52                irq22
                0x00000000c001bb5c                irq23
 *fill*         0x00000000c001bb66        0xa 
 .text          0x00000000c001bb70       0x10 arch/i386/rdrand.32
                0x00000000c001bb70                i386GetRDRAND
 .text          0x00000000c001bb80       0x39 arch/i386/sse.32
                0x00000000c001bb80                absolutelyNoChanceInHell
                0x00000000c001bb80                sseDetect
                0x00000000c001bb98                sseSave
                0x00000000c001bba0                sseLoad
                0x00000000c001bba8                sseInit
                0x00000000c001bbb8                sseClose
 *fill*         0x00000000c001bbb9        0x7 
 .text          0x00000000c001bbc0       0x49 arch/i386/x87.32
                0x00000000c001bbc6                x87Detect
                0x00000000c001bbe1                x87Save
                0x00000000c001bbe8                x87Load
                0x00000000c001bbef                x87Init
                0x00000000c001bc08                x87Close
 *fill*         0x00000000c001bc09        0x3 
 .text          0x00000000c001bc0c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bc31        0x0 crtn.32
 *fill*         0x00000000c001bc31        0x3 
 .text          0x00000000c001bc34      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bc34                __divdi3
 *fill*         0x00000000c001bd7f        0x1 
 .text          0x00000000c001bd80      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001bd80                __moddi3
 *fill*         0x00000000c001befe        0x2 
 .text          0x00000000c001bf00       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001bf00                __udivdi3
 *fill*         0x00000000c001bfff        0x1 
 .text          0x00000000c001c000      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c000                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c120        0x0
 .iplt          0x00000000c001c120        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c11a        0xf
 .init          0x00000000c001c11a        0x3 crti.32
                0x00000000c001c11a                _init
 .init          0x00000000c001c11d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c122        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c127        0x2 crtn.32

.fini           0x00000000c001c129        0xa
 .fini          0x00000000c001c129        0x3 crti.32
                0x00000000c001c129                _fini
 .fini          0x00000000c001c12c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c131        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c134       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c134       0x23 core/computer.32
                0x00000000c001c134                Computer::~Computer()
                0x00000000c001c134                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c158       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c158       0x2a core/computer.32
                0x00000000c001c158                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c182       0x21
 .text._Z10idleCommonv
                0x00000000c001c182       0x21 core/idle.32
                0x00000000c001c182                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c1a4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c1a4        0x2 core/unixfile.32
                0x00000000c001c1a4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c1a4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c1a6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c1a6       0x42 core/unixfile.32
                0x00000000c001c1a6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c1a6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c1e8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c1e8       0xd3 core/unixfile.32
                0x00000000c001c1e8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c2bc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c2bc        0x7 core/unixfile.32
                0x00000000c001c2bc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c2c4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c2c4       0xa1 core/unixfile.32
                0x00000000c001c2c4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c366        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c366        0x8 core/unixfile.32
                0x00000000c001c366                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c36e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c36e       0x1a hal/device.32
                0x00000000c001c36e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c36e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c388       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c388       0x2a hal/device.32
                0x00000000c001c388                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c3b2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c3b2       0xdc hal/device.32
                0x00000000c001c3b2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c48e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c48e       0x42 hal/device.32
                0x00000000c001c48e                LinkedList<Device>::LinkedList()
                0x00000000c001c48e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c4d0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c4d0       0x1c hal/timer.32
                0x00000000c001c4d0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c4ec        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c4ec        0x7 hal/timer.32
                0x00000000c001c4ec                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c4f4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c4f4       0xb8 hal/timer.32
                0x00000000c001c4f4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c5ac       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c5ac       0xda hal/timer.32
                0x00000000c001c5ac                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c688       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c688       0x23 hw/acpi.32
                0x00000000c001c688                ACPI::~ACPI()
                0x00000000c001c688                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c6ac       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c6ac       0x2a hw/acpi.32
                0x00000000c001c6ac                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c6d8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c6d8        0x2 hw/acpi.32
                0x00000000c001c6d8                LinkedList<Device>::~LinkedList()
                0x00000000c001c6d8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c6dc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c6dc       0x1c hw/acpi.32
                0x00000000c001c6dc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c6f8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c6f8        0x7 hw/acpi.32
                0x00000000c001c6f8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c700       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c700       0xb8 hw/acpi.32
                0x00000000c001c700                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001c7b8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001c7b8       0x23 hw/cpu.32
                0x00000000c001c7b8                CPU::~CPU()
                0x00000000c001c7b8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001c7dc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001c7dc       0x2a hw/cpu.32
                0x00000000c001c7dc                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c808        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c808        0x2 thr/prcssthr.32
                0x00000000c001c808                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001c808                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c80c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c80c       0x49 thr/prcssthr.32
                0x00000000c001c80c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001c80c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c858       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c858       0x42 thr/prcssthr.32
                0x00000000c001c858                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001c858                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c89c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c89c        0x8 thr/prcssthr.32
                0x00000000c001c89c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001c8a4       0x23
 .text._ZN3PCID2Ev
                0x00000000c001c8a4       0x23 hw/bus/pci.32
                0x00000000c001c8a4                PCI::~PCI()
                0x00000000c001c8a4                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001c8c8       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001c8c8       0x2a hw/bus/pci.32
                0x00000000c001c8c8                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001c8f2       0x23
 .text._ZN3IDED2Ev
                0x00000000c001c8f2       0x23 hw/diskctrl/ide.32
                0x00000000c001c8f2                IDE::~IDE()
                0x00000000c001c8f2                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001c916       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001c916       0x2a hw/diskctrl/ide.32
                0x00000000c001c916                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001c940       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001c940       0x23 hw/diskctrl/satabus.32
                0x00000000c001c940                SATABus::~SATABus()
                0x00000000c001c940                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001c964       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001c964       0x2a hw/diskctrl/satabus.32
                0x00000000c001c964                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001c98e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001c98e       0x23 hw/diskphys/ata.32
                0x00000000c001c98e                ATA::~ATA()
                0x00000000c001c98e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001c9b2       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001c9b2       0x2a hw/diskphys/ata.32
                0x00000000c001c9b2                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001c9dc       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001c9dc       0x23 hw/diskphys/atapi.32
                0x00000000c001c9dc                ATAPI::~ATAPI()
                0x00000000c001c9dc                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001ca00       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001ca00       0x2a hw/diskphys/atapi.32
                0x00000000c001ca00                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001ca2a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001ca2a       0x23 hw/diskphys/sata.32
                0x00000000c001ca2a                SATA::~SATA()
                0x00000000c001ca2a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001ca4e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001ca4e       0x2a hw/diskphys/sata.32
                0x00000000c001ca4e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001ca78       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001ca78       0x23 hw/diskphys/satapi.32
                0x00000000c001ca78                SATAPI::~SATAPI()
                0x00000000c001ca78                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001ca9c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001ca9c       0x2a hw/diskphys/satapi.32
                0x00000000c001ca9c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cac6       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cac6       0x23 hw/intctrl/apic.32
                0x00000000c001cac6                IOAPIC::~IOAPIC()
                0x00000000c001cac6                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001caea       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001caea       0x2a hw/intctrl/apic.32
                0x00000000c001caea                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001cb14       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001cb14       0x23 hw/timer/apictimer.32
                0x00000000c001cb14                APICTimer::~APICTimer()
                0x00000000c001cb14                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001cb38       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001cb38       0x2a hw/timer/apictimer.32
                0x00000000c001cb38                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001cb64       0x23
 .text._ZN3PITD2Ev
                0x00000000c001cb64       0x23 hw/timer/pit.32
                0x00000000c001cb64                PIT::~PIT()
                0x00000000c001cb64                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001cb88       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001cb88       0x2a hw/timer/pit.32
                0x00000000c001cb88                PIT::~PIT()

.rodata         0x00000000c001cbb2     0x2962
                0x00000000c001cbb2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cbb2        0x2 
 .ctors         0x00000000c001cbb4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cbb8        0x4 core/unixfile.32
 .ctors         0x00000000c001cbbc        0x4 thr/prcssthr.32
 .ctors         0x00000000c001cbc0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cbc4                end_ctors = .
                0x00000000c001cbc4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001cbc4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001cbc8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cbc8                __DTOR_END__
                0x00000000c001cbcc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cbcc       0x14 
 .rodata        0x00000000c001cbe0      0x101 acpica/utclib.32
                0x00000000c001cbe0                AcpiGbl_Ctypes
 *fill*         0x00000000c001cce1        0x3 
 .rodata        0x00000000c001cce4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001ccfc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001cd46       0x1a 
 .rodata        0x00000000c001cd60       0xed fs/fat/ff.32
 *fill*         0x00000000c001ce4d       0x13 
 .rodata        0x00000000c001ce60      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d260       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d271      0x115 core/computer.32
 *fill*         0x00000000c001d386        0x2 
 .rodata.str1.4
                0x00000000c001d388       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d3f0       0x2c core/computer.32
                0x00000000c001d3f0                vtable for Computer
 .rodata.str1.4
                0x00000000c001d41c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d44c        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d458       0x17 core/main.32
 *fill*         0x00000000c001d46f        0x1 
 .rodata.str1.4
                0x00000000c001d470       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d515       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d56d       0x39 core/pipe.32
 *fill*         0x00000000c001d5a6        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d5a8       0x1c core/pipe.32
                0x00000000c001d5a8                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d5c4       0x75 core/terminal.32
 *fill*         0x00000000c001d639        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d63c       0x1c core/terminal.32
                0x00000000c001d63c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d658       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d67a       0x15 core/unixfile.32
 *fill*         0x00000000c001d68f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d690       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d6db        0x8 core/unixfile.32
 *fill*         0x00000000c001d6e3        0x1 
 .rodata.str1.4
                0x00000000c001d6e4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d704       0x1c core/unixfile.32
                0x00000000c001d704                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001d720       0x1c core/unixfile.32
                0x00000000c001d720                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001d73c      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d8a3      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d9aa       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001d9dd       0x11 dbg/kconsole.32
 *fill*         0x00000000c001d9dd        0x3 
 .rodata        0x00000000c001d9e0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001db30       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001db30       0x68 fs/vfs.32
                0x00000000c001db30                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001db98       0x1c fs/vfs.32
                0x00000000c001db98                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001dbb4       0x1c fs/vfs.32
                0x00000000c001dbb4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001dbd0       0x2c hal/bus.32
                0x00000000c001dbd0                vtable for Bus
 .rodata.str1.1
                0x00000000c001dbfc       0x1e hal/clock.32
 *fill*         0x00000000c001dc1a        0x2 
 .rodata._ZTV5Clock
                0x00000000c001dc1c       0x3c hal/clock.32
                0x00000000c001dc1c                vtable for Clock
 *fill*         0x00000000c001dc58        0x8 
 .rodata        0x00000000c001dc60       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001dc90       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001dce8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001dce8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001dce8       0x2c hal/device.32
                0x00000000c001dce8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001dd14       0x2c hal/device.32
                0x00000000c001dd14                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001dd40       0x2c hal/diskctrl.32
                0x00000000c001dd40                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001dd6c       0x38 hal/diskphys.32
                0x00000000c001dd6c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001dda4       0x3e hal/intctrl.32
 *fill*         0x00000000c001dde2        0x2 
 .rodata.str1.4
                0x00000000c001dde4       0x5d hal/intctrl.32
 .rodata        0x00000000c001de41       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001de94       0x34 hal/keybrd.32
                0x00000000c001de94                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001dec8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001df0c       0x2c hal/logidisk.32
                0x00000000c001df0c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001df38       0x2c hal/mouse.32
                0x00000000c001df38                vtable for Mouse
 .rodata.str1.1
                0x00000000c001df64        0xb hal/partition.32
 *fill*         0x00000000c001df6f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001df70       0x44 hal/serial.32
                0x00000000c001df70                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001dfb4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001dfb4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001dfb4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001dfb4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001dfb4       0x30 hal/timer.32
                0x00000000c001dfb4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001dfe4       0x10 hal/vcache.32
                0x00000000c001dfe4                vtable for VCache
 .rodata.str1.1
                0x00000000c001dff4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e05c       0x48 hal/video.32
                0x00000000c001e05c                vtable for Video
 .rodata.str1.4
                0x00000000c001e0a4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e13f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e27b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e27b        0x8 hw/acpi.32
 *fill*         0x00000000c001e27b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e27c       0x2c hw/acpi.32
                0x00000000c001e27c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e2a8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e415        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e418       0x2c hw/cpu.32
                0x00000000c001e418                vtable for CPU
 .rodata.str1.1
                0x00000000c001e444       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e480       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c001e511       0xb2 krnl/signal.32
 *fill*         0x00000000c001e5c3        0x1 
 .rodata.str1.4
                0x00000000c001e5c4       0x26 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c001e5ea       0x97 krnl/syscalls.32
                                         0xa7 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e681       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e6c6        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001e6d0        0xc sys/sbrk.32
 .rodata.str1.1
                0x00000000c001e6dc       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001e730       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001e75c      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001e928       0x57 thr/prcssthr.32
 *fill*         0x00000000c001e97f        0x1 
 .rodata.str1.4
                0x00000000c001e980      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ea8c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ea8c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ea8c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ea8c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001ea8c       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001eb2c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001eb5c      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001ecde        0x2 
 .rodata.str1.4
                0x00000000c001ece0       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001ed53       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001ed68       0x3c arch/i386/rtc.32
                0x00000000c001ed68                vtable for RTC
 .rodata.str1.1
                0x00000000c001eda4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001ede5        0x3 
 .rodata._ZTV3FAT
                0x00000000c001ede8       0x68 fs/fat/vfslink.32
                0x00000000c001ede8                vtable for FAT
 .rodata.str1.1
                0x00000000c001ee50        0x3 fs/iso9660/helper.32
                                          0x5 (size before relaxing)
 .rodata.str1.1
                0x00000000c001ee53       0x49 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001ee9c       0x68 fs/iso9660/vfslink.32
                0x00000000c001ee9c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001ef04       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001ef48       0x34 hal/sound/sndcard.32
                0x00000000c001ef48                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001ef7c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001efbb       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001eff3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f094       0x2c hw/bus/pci.32
                0x00000000c001f094                vtable for PCI
 .rodata.str1.1
                0x00000000c001f0c0       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f147        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f148       0x2c hw/diskctrl/ide.32
                0x00000000c001f148                vtable for IDE
 .rodata.str1.4
                0x00000000c001f174       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f198       0x2c hw/diskctrl/satabus.32
                0x00000000c001f198                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f1c4       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f1d6        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f1d8       0x38 hw/diskphys/ata.32
                0x00000000c001f1d8                vtable for ATA
 .rodata.str1.1
                0x00000000c001f210        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f21d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f220       0x38 hw/diskphys/atapi.32
                0x00000000c001f220                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f258       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f2d4       0x38 hw/diskphys/sata.32
                0x00000000c001f2d4                vtable for SATA
 .rodata.str1.1
                0x00000000c001f30c      0x100 hw/diskphys/satapi.32
                                        0x10d (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f40c       0x38 hw/diskphys/satapi.32
                0x00000000c001f40c                vtable for SATAPI
 .rodata        0x00000000c001f444        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f44c       0x2c hw/intctrl/apic.32
                0x00000000c001f44c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f478       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f493        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f494       0x30 hw/timer/apictimer.32
                0x00000000c001f494                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f4c4       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f4e1        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f4e4       0x30 hw/timer/pit.32
                0x00000000c001f4e4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f514      0x39d
 *(.data)
 .data          0x00000000c001f514        0x0 crti.32
 .data          0x00000000c001f514        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f514                __dso_handle
 .data          0x00000000c001f518        0x0 acpica/utclib.32
 .data          0x00000000c001f518        0x0 core/malloc.32
 .data          0x00000000c001f518        0x0 libk/ctype.32
 .data          0x00000000c001f518        0x0 libk/string.32
 .data          0x00000000c001f518        0x0 fs/fat/diskio.32
 .data          0x00000000c001f518        0x0 fs/fat/ff.32
 .data          0x00000000c001f518        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f518        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f518        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f518        0x0 core/computer.32
 .data          0x00000000c001f518        0x0 core/gdt.32
 .data          0x00000000c001f518        0x0 core/idle.32
 .data          0x00000000c001f518        0x0 core/idt.32
 .data          0x00000000c001f518        0x4 core/kheap.32
 .data          0x00000000c001f51c        0x0 core/main.32
 .data          0x00000000c001f51c        0x4 core/physmgr.32
                0x00000000c001f51c                Phys::bitmap
 .data          0x00000000c001f520        0x0 core/pipe.32
 .data          0x00000000c001f520       0x60 core/terminal.32
                0x00000000c001f520                VgaText::hiddenOut
                0x00000000c001f540                ansiToVGAMappings
 .data          0x00000000c001f580        0x0 core/tss.32
 .data          0x00000000c001f580        0x4 core/unixfile.32
                0x00000000c001f580                UnixFile::nextFd
 .data          0x00000000c001f584       0x15 core/virtmgr.32
                0x00000000c001f584                Virt::pageAllocPtr
                0x00000000c001f588                Virt::bitmap
                0x00000000c001f58c                Virt::swapfileSectorsPerPage
                0x00000000c001f590                Virt::swapfileLength
                0x00000000c001f594                Virt::swapfileSector
                0x00000000c001f598                Virt::swapfileDrive
 *fill*         0x00000000c001f599        0x3 
 .data          0x00000000c001f59c        0x4 coreobjs/c++.32
                0x00000000c001f59c                __stack_chk_guard
 .data          0x00000000c001f5a0        0x0 dbg/kconsole.32
 .data          0x00000000c001f5a0        0x0 fs/vfs.32
 .data          0x00000000c001f5a0        0x0 hal/bus.32
 .data          0x00000000c001f5a0        0x0 hal/buzzer.32
 .data          0x00000000c001f5a0        0x0 hal/clock.32
 .data          0x00000000c001f5a0        0x0 hal/device.32
 .data          0x00000000c001f5a0        0x0 hal/diskctrl.32
 .data          0x00000000c001f5a0        0x0 hal/diskphys.32
 .data          0x00000000c001f5a0        0x0 hal/fpu.32
 .data          0x00000000c001f5a0        0x0 hal/intctrl.32
 .data          0x00000000c001f5a0        0x0 hal/keybrd.32
 .data          0x00000000c001f5a0        0x0 hal/logidisk.32
 .data          0x00000000c001f5a0        0x0 hal/mouse.32
 .data          0x00000000c001f5a0        0x0 hal/partition.32
 .data          0x00000000c001f5a0        0x0 hal/serial.32
 .data          0x00000000c001f5a0        0x0 hal/timer.32
 .data          0x00000000c001f5a0        0x0 hal/vcache.32
 .data          0x00000000c001f5a0        0x0 hal/video.32
 .data          0x00000000c001f5a0       0x10 hw/acpi.32
                0x00000000c001f5a0                legacyIRQRemaps
 .data          0x00000000c001f5b0        0x4 hw/cpu.32
                0x00000000c001f5b0                lastCode
 *fill*         0x00000000c001f5b4        0xc 
 .data          0x00000000c001f5c0      0x142 krnl/bootmsg.32
                0x00000000c001f5c0                KiSplashScreen
 *fill*         0x00000000c001f702       0x1e 
 .data          0x00000000c001f720       0x4d krnl/env.32
                0x00000000c001f720                defaultSysEnv
 .data          0x00000000c001f76d        0x0 krnl/inlines.32
 .data          0x00000000c001f76d        0x0 krnl/panic.32
 .data          0x00000000c001f76d        0x0 krnl/powctrl.32
 .data          0x00000000c001f76d        0x0 krnl/resolve.32
 *fill*         0x00000000c001f76d       0x13 
 .data          0x00000000c001f780       0x4c krnl/signal.32
                0x00000000c001f780                KiDefaultSignalHandlers
 *fill*         0x00000000c001f7cc       0x14 
 .data          0x00000000c001f7e0       0xcc krnl/syscalls.32
                0x00000000c001f7e0                systemCallHandlers
 .data          0x00000000c001f8ac        0x0 reg/registry.32
 .data          0x00000000c001f8ac        0x0 sys/eject.32
 .data          0x00000000c001f8ac        0x0 sys/exit.32
 .data          0x00000000c001f8ac        0x0 sys/getcwd.32
 .data          0x00000000c001f8ac        0x0 sys/getpid.32
 .data          0x00000000c001f8ac        0x0 sys/getramdata.32
 .data          0x00000000c001f8ac        0x0 sys/getvgaptr.32
 .data          0x00000000c001f8ac        0x0 sys/loaddll.32
 .data          0x00000000c001f8ac        0x0 sys/read.32
 .data          0x00000000c001f8ac        0x0 sys/registersignal.32
 .data          0x00000000c001f8ac        0x0 sys/sbrk.32
 .data          0x00000000c001f8ac        0x0 sys/setcwd.32
 .data          0x00000000c001f8ac        0x0 sys/settime.32
 .data          0x00000000c001f8ac        0x0 sys/timezone.32
 .data          0x00000000c001f8ac        0x0 sys/write.32
 .data          0x00000000c001f8ac        0x0 sys/wsbe.32
 .data          0x00000000c001f8ac        0x0 sys/yield.32
 .data          0x00000000c001f8ac        0x0 thr/elf.32
 .data          0x00000000c001f8ac        0x4 thr/prcssthr.32
                0x00000000c001f8ac                Thr::nextPID
 .data          0x00000000c001f8b0        0x0 vm86/vm8086.32
 .data          0x00000000c001f8b0        0x0 arch/i386/hal.32
 .data          0x00000000c001f8b0        0x0 arch/i386/pic.32
 .data          0x00000000c001f8b0        0x0 arch/i386/rtc.32
 .data          0x00000000c001f8b0        0x0 arch/i386/vga.32
 .data          0x00000000c001f8b0        0x0 fs/fat/vfslink.32
 .data          0x00000000c001f8b0        0x0 fs/iso9660/helper.32
 .data          0x00000000c001f8b0        0x1 fs/iso9660/vfslink.32
                0x00000000c001f8b0                recentDriveletter
 .data          0x00000000c001f8b1        0x0 hal/sound/sndcard.32
 .data          0x00000000c001f8b1        0x0 hal/sound/sndport.32
 .data          0x00000000c001f8b1        0x0 hw/bus/isa.32
 .data          0x00000000c001f8b1        0x0 hw/bus/pci.32
 .data          0x00000000c001f8b1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001f8b1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001f8b1        0x0 hw/diskphys/ata.32
 .data          0x00000000c001f8b1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001f8b1        0x0 hw/diskphys/sata.32
 .data          0x00000000c001f8b1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001f8b1        0x0 hw/intctrl/apic.32
 .data          0x00000000c001f8b1        0x0 hw/timer/apictimer.32
 .data          0x00000000c001f8b1        0x0 hw/timer/pit.32
 .data          0x00000000c001f8b1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001f8b1        0x0 crtn.32
 .data          0x00000000c001f8b1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001f8b1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001f8b1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001f8b1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001f8b4        0x0
 .got           0x00000000c001f8b4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001f8b4        0x0
 .got.plt       0x00000000c001f8b4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001f8b4        0x0
 .igot.plt      0x00000000c001f8b4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001f8b4        0x0
 .tm_clone_table
                0x00000000c001f8b4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001f8b4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001f8b1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001f8b1        0x3 
 .eh_frame      0x00000000c001f8b4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001f8b4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001f8b4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001f90c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001f94c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001f9b8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001fa3c        0x0
 .rel.got       0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001fa3c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001fa3c     0x4b8c
                0x00000000c001fa3c                sbss = .
 *(COMMON)
 *fill*         0x00000000c001fa3c        0x4 
 COMMON         0x00000000c001fa40       0xa0 fs/iso9660/iso9660.32
                0x00000000c001fa40                dcache
                0x00000000c001fa80                cdDriveLetter
                0x00000000c001faa0                icache
 *(.bss)
 .bss           0x00000000c001fae0        0x0 crti.32
 .bss           0x00000000c001fae0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001fb00        0x4 acpica/utclib.32
 *fill*         0x00000000c001fb04       0x1c 
 .bss           0x00000000c001fb20      0x378 core/malloc.32
 .bss           0x00000000c001fe98        0x0 libk/ctype.32
 .bss           0x00000000c001fe98        0x0 libk/string.32
 .bss           0x00000000c001fe98        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001fe98        0x8 
 .bss           0x00000000c001fea0       0x88 fs/fat/ff.32
 .bss           0x00000000c001ff28        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001ff28        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c001ff28       0x18 
 .bss           0x00000000c001ff40      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c00208d8        0x6 core/computer.32
                0x00000000c00208d8                Krnl::computer
                0x00000000c00208dc                KeIsPreemptionOn
                0x00000000c00208dd                KeIsSchedulingOn
 *fill*         0x00000000c00208de        0x2 
 .bss           0x00000000c00208e0        0x6 core/gdt.32
                0x00000000c00208e0                gdtDescr
 .bss           0x00000000c00208e6        0x0 core/idle.32
 *fill*         0x00000000c00208e6        0x2 
 .bss           0x00000000c00208e8        0x6 core/idt.32
                0x00000000c00208e8                idtDescr
 .bss           0x00000000c00208ee        0x0 core/kheap.32
 *fill*         0x00000000c00208ee        0x2 
 .bss           0x00000000c00208f0        0x4 core/main.32
                0x00000000c00208f0                sysBootSettings
 .bss           0x00000000c00208f4       0x29 core/physmgr.32
                0x00000000c00208f4                Phys::forbidEvictions
                0x00000000c00208f8                Phys::currentPagePointer
                0x00000000c00208fc                Phys::highestMem
                0x00000000c0020900                Phys::oldPercent
                0x00000000c0020904                Phys::usedPages
                0x00000000c0020908                Phys::usablePages
                0x00000000c002090c                Phys::dmaUsage
 .bss           0x00000000c002091d        0x0 core/pipe.32
 *fill*         0x00000000c002091d        0x3 
 .bss           0x00000000c0020920        0x9 core/terminal.32
                0x00000000c0020920                terminalCycle
                0x00000000c0020924                activeTerminal
                0x00000000c0020928                VgaText::graphicMode
 *fill*         0x00000000c0020929        0x1 
 .bss           0x00000000c002092a        0x2 core/tss.32
                0x00000000c002092a                doubleFaultSelector
 *fill*         0x00000000c002092c       0x14 
 .bss           0x00000000c0020940       0x84 core/unixfile.32
                0x00000000c0020940                sfileLpt
                0x00000000c0020980                sfileCom
                0x00000000c00209a4                sfileNul
                0x00000000c00209a8                sfilePnt
                0x00000000c00209ac                sfileAux
                0x00000000c00209b0                sfileCon
                0x00000000c00209b4                initialFilesAdded
                0x00000000c00209b8                unixFileLinkedList
 .bss           0x00000000c00209c4       0x10 core/virtmgr.32
                0x00000000c00209c4                twswaps
                0x00000000c00209c8                swapBalance
                0x00000000c00209cc                Virt::swapfileBitmap
                0x00000000c00209d0                firstVAS
 .bss           0x00000000c00209d4        0x0 coreobjs/c++.32
 .bss           0x00000000c00209d4        0x0 dbg/kconsole.32
 .bss           0x00000000c00209d4        0x4 fs/vfs.32
                0x00000000c00209d4                installedFilesystems
 .bss           0x00000000c00209d8        0x0 hal/bus.32
 .bss           0x00000000c00209d8        0x0 hal/buzzer.32
 .bss           0x00000000c00209d8        0x8 hal/clock.32
                0x00000000c00209d8                User::dstOn
                0x00000000c00209d9                User::timezoneHalfHourOffset
                0x00000000c00209dc                User::timezoneHourOffset
 .bss           0x00000000c00209e0        0x0 hal/device.32
 .bss           0x00000000c00209e0        0x0 hal/diskctrl.32
 .bss           0x00000000c00209e0        0x0 hal/diskphys.32
 .bss           0x00000000c00209e0        0x0 hal/fpu.32
 .bss           0x00000000c00209e0     0x2000 hal/intctrl.32
                0x00000000c00209e0                INT_contexts
                0x00000000c00219e0                INT_handlers
 .bss           0x00000000c00229e0      0x429 hal/keybrd.32
                0x00000000c00229e0                keyboardWaitingTaskList
                0x00000000c00229e4                keyboardSetupYet
                0x00000000c00229e8                guiKeyboardHandler
                0x00000000c0022a00                keystates
 *fill*         0x00000000c0022e09       0x17 
 .bss           0x00000000c0022e20       0x88 hal/logidisk.32
                0x00000000c0022e20                diskAssignments
                0x00000000c0022e40                disks
 .bss           0x00000000c0022ea8        0x4 hal/mouse.32
                0x00000000c0022ea8                guiMouseHandler
 .bss           0x00000000c0022eac        0x0 hal/partition.32
 .bss           0x00000000c0022eac        0x0 hal/serial.32
 .bss           0x00000000c0022eac        0x4 hal/timer.32
                0x00000000c0022eac                milliTenthsSinceBoot
 .bss           0x00000000c0022eb0        0x0 hal/vcache.32
 .bss           0x00000000c0022eb0        0x4 hal/video.32
                0x00000000c0022eb0                screen
 *fill*         0x00000000c0022eb4        0xc 
 .bss           0x00000000c0022ec0      0x480 hw/acpi.32
                0x00000000c0022ec0                systemSleepFunction
                0x00000000c0022ec4                systemResetFunction
                0x00000000c0022ec8                systemShutdownFunction
                0x00000000c0022ecc                nextACPITable
                0x00000000c0022ee0                acpiTables
                0x00000000c00230e0                usingXSDT
                0x00000000c00230e4                MADTpointer
                0x00000000c00230e8                RSDTpointer
                0x00000000c00230ec                RSDPpointer
                0x00000000c00230f0                nextAPICNMI
                0x00000000c0023100                apicNMIInfo
                0x00000000c0023180                legacyIRQFlags
                0x00000000c00231a0                ioapicDiscoveryNumber
                0x00000000c00231c0                ioapicFoundInMADT
                0x00000000c00231e0                ioapicAddresses
                0x00000000c0023260                ioapicGSIBase
                0x00000000c00232e0                processorDiscoveryNumber
                0x00000000c0023300                matchingAPICID
                0x00000000c0023320                processorID
 .bss           0x00000000c0023340       0x10 hw/cpu.32
                0x00000000c0023340                lastD
                0x00000000c0023344                lastC
                0x00000000c0023348                lastB
                0x00000000c002334c                lastA
 .bss           0x00000000c0023350        0x0 krnl/bootmsg.32
 .bss           0x00000000c0023350        0x8 krnl/env.32
                0x00000000c0023350                Krnl::userEnv
                0x00000000c0023354                Krnl::systemEnv
 .bss           0x00000000c0023358        0x0 krnl/inlines.32
 .bss           0x00000000c0023358        0x1 krnl/panic.32
                0x00000000c0023358                KeIsKernelInPanic
 *fill*         0x00000000c0023359        0x7 
 .bss           0x00000000c0023360       0x48 krnl/powctrl.32
                0x00000000c0023360                Krnl::powCtrlOnBattery
                0x00000000c0023380                Krnl::currentPowerSettings
                0x00000000c00233a4                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c00233a8        0x0 krnl/resolve.32
 .bss           0x00000000c00233a8        0x0 krnl/signal.32
 .bss           0x00000000c00233a8        0x0 krnl/syscalls.32
 .bss           0x00000000c00233a8        0x0 reg/registry.32
 .bss           0x00000000c00233a8        0x0 sys/eject.32
 .bss           0x00000000c00233a8        0x0 sys/exit.32
 .bss           0x00000000c00233a8        0x0 sys/getcwd.32
 .bss           0x00000000c00233a8        0x0 sys/getpid.32
 .bss           0x00000000c00233a8        0x0 sys/getramdata.32
 .bss           0x00000000c00233a8        0x0 sys/getvgaptr.32
 .bss           0x00000000c00233a8        0x0 sys/loaddll.32
 .bss           0x00000000c00233a8        0x0 sys/read.32
 .bss           0x00000000c00233a8        0x0 sys/registersignal.32
 .bss           0x00000000c00233a8        0x0 sys/sbrk.32
 .bss           0x00000000c00233a8        0x0 sys/setcwd.32
 .bss           0x00000000c00233a8        0x0 sys/settime.32
 .bss           0x00000000c00233a8        0x0 sys/timezone.32
 .bss           0x00000000c00233a8        0x0 sys/write.32
 .bss           0x00000000c00233a8        0x0 sys/wsbe.32
 .bss           0x00000000c00233a8        0x0 sys/yield.32
 *fill*         0x00000000c00233a8       0x18 
 .bss           0x00000000c00233c0      0x7a4 thr/elf.32
                0x00000000c00233c0                Thr::driverLookupNext
                0x00000000c00233e0                Thr::driverLookupLen
                0x00000000c00235e0                Thr::driverLookupAddr
                0x00000000c00237e0                Thr::driverNameLookup
                0x00000000c00239e0                Thr::kernelSymbols
                0x00000000c0023a60                Thr::kernelStringTable
                0x00000000c0023ae0                Thr::kernelSymbolTable
                0x00000000c0023b60                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023b64        0x4 
 .bss           0x00000000c0023b68       0x68 thr/prcssthr.32
                0x00000000c0023b68                cleanerThread
                0x00000000c0023b6c                weNeedTheCleanerToNotBlock
                0x00000000c0023b70                retValLockStuff
                0x00000000c0023b74                retValSchedLock
                0x00000000c0023b78                lockStuffLock
                0x00000000c0023b7c                schedulerLock
                0x00000000c0023b80                taskSwitchesPostponedFlag
                0x00000000c0023b84                postponeTaskSwitchesCounter
                0x00000000c0023b88                irqDisableCounter
                0x00000000c0023b8c                terminatedTaskList
                0x00000000c0023b98                sleepingTaskList
                0x00000000c0023ba4                taskList
                0x00000000c0023bb0                kernelProcess
 *fill*         0x00000000c0023bd0       0x10 
 .bss           0x00000000c0023be0       0x40 vm86/vm8086.32
                0x00000000c0023be0                Vm::vmRetV
                0x00000000c0023be4                Vm::vmDone
                0x00000000c0023be5                Vm::vmReady
                0x00000000c0023be8                Vm::vm86Thread
                0x00000000c0023bec                Vm::vmToHostCommsPtr
                0x00000000c0023c00                Vm::vmToHostComms
 .bss           0x00000000c0023c20       0x14 arch/i386/hal.32
                0x00000000c0023c20                apic
                0x00000000c0023c24                fpuOwner
                0x00000000c0023c28                coproLoadFunc
                0x00000000c0023c2c                coproSaveFunc
                0x00000000c0023c30                gpFaultIntercept
 .bss           0x00000000c0023c34        0x0 arch/i386/pic.32
 .bss           0x00000000c0023c34        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023c36        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023c36        0xa 
 .bss           0x00000000c0023c40       0xf0 fs/fat/vfslink.32
                0x00000000c0023c40                FAT::fats
                0x00000000c0023c60                FAT::vfsToFatRemaps
                0x00000000c0023ce0                fatToVFSRemaps
 .bss           0x00000000c0023d30        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0023d30       0x10 
 .bss           0x00000000c0023d40      0x820 fs/iso9660/vfslink.32
                0x00000000c0023d40                iso9660Owner
                0x00000000c0023d44                recentSector
                0x00000000c0023d60                recentBuffer
 .bss           0x00000000c0024560        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0024560        0x0 hal/sound/sndport.32
 .bss           0x00000000c0024560        0x0 hw/bus/isa.32
 .bss           0x00000000c0024560        0xd hw/bus/pci.32
                0x00000000c0024560                thePCI
 .bss           0x00000000c002456d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002456d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002456d        0x3 
 .bss           0x00000000c0024570        0x8 hw/diskphys/ata.32
                0x00000000c0024570                ataSectorsWritten
                0x00000000c0024574                ataSectorsRead
 .bss           0x00000000c0024578        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024578        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0024578        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0024578        0x8 
 .bss           0x00000000c0024580       0x41 hw/intctrl/apic.32
                0x00000000c0024580                noOfIOAPICs
                0x00000000c00245a0                ioapics
                0x00000000c00245c0                IOAPICsSetupYet
 .bss           0x00000000c00245c1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00245c1        0x3 
 .bss           0x00000000c00245c4        0x4 hw/timer/pit.32
                0x00000000c00245c4                pitFreq
 .bss           0x00000000c00245c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00245c8        0x0 crtn.32
 .bss           0x00000000c00245c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00245c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00245c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00245c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00245c8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0029154                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
