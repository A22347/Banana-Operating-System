Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1b9fa
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 .text          0x00000000c0001afb        0x0 libk/string.32
 .text          0x00000000c0001afb       0x51 fs/fat/diskio.32
                0x00000000c0001afb                disk_status
                0x00000000c0001afe                disk_initialize
                0x00000000c0001b01                disk_read
                0x00000000c0001b17                disk_write
                0x00000000c0001b2d                disk_ioctl
 .text          0x00000000c0001b4c     0x3d4b fs/fat/ff.32
                0x00000000c00038e8                f_mount
                0x00000000c000394a                f_open
                0x00000000c0003c15                f_read
                0x00000000c0003e14                f_write
                0x00000000c0004048                f_sync
                0x00000000c00040fd                f_close
                0x00000000c000412c                f_lseek
                0x00000000c00042d3                f_opendir
                0x00000000c000439e                f_closedir
                0x00000000c00043c0                f_readdir
                0x00000000c0004452                f_stat
                0x00000000c00044d1                f_getfree
                0x00000000c00045d3                f_truncate
                0x00000000c00046b7                f_unlink
                0x00000000c00047d9                f_mkdir
                0x00000000c0004974                f_rename
                0x00000000c0004b2a                f_chmod
                0x00000000c0004bd3                f_utime
                0x00000000c0004c81                f_getlabel
                0x00000000c0004dd2                f_setlabel
                0x00000000c0004f62                f_expand
                0x00000000c00050c2                f_mkfs
 *fill*         0x00000000c0005897        0x1 
 .text          0x00000000c0005898       0x2f fs/fat/ffsystem.32
                0x00000000c0005898                ff_memalloc
                0x00000000c00058b0                ff_memfree
 *fill*         0x00000000c00058c7        0x1 
 .text          0x00000000c00058c8      0x2a8 fs/fat/ffunicode.32
                0x00000000c00058c8                ff_uni2oem
                0x00000000c0005968                ff_oem2uni
                0x00000000c00059e0                ff_wtoupper
 .text          0x00000000c0005b70       0xa7 compat/inlines.32
                0x00000000c0005b70                CPU::current()
                0x00000000c0005b7c                operator new(unsigned long)
                0x00000000c0005b81                operator delete(void*)
                0x00000000c0005b86                disableIRQs()
                0x00000000c0005b8e                enableIRQs()
                0x00000000c0005b9d                lockScheduler()
                0x00000000c0005ba5                unlockScheduler()
                0x00000000c0005bb4                lockStuff()
                0x00000000c0005bc2                unlockStuff()
                0x00000000c0005bfc                Virt::getAKernelVAS()
                0x00000000c0005c02                __not_memcpy
 *fill*         0x00000000c0005c17        0x1 
 .text          0x00000000c0005c18      0x118 compat/resolve.32
                0x00000000c0005c18                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0005d30      0x77b core/computer.32
                0x00000000c0005d30                Computer::close(int, int, void*)
                0x00000000c0005d75                Krnl::firstTask()
                0x00000000c0005ebe                Computer::Computer()
                0x00000000c0005ebe                Computer::Computer()
                0x00000000c0006024                Computer::setBootMessage(char const*)
                0x00000000c0006026                Computer::detectFeatures()
                0x00000000c0006230                Computer::displayFeatures()
                0x00000000c0006232                Computer::rdmsr(unsigned int)
                0x00000000c000625e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006296                Computer::shutdown()
                0x00000000c00062ae                Computer::restart()
                0x00000000c00062c6                Computer::sleep()
                0x00000000c00062da                Computer::nmiEnabled()
                0x00000000c00062e6                Computer::readCMOS(unsigned char)
                0x00000000c0006300                Computer::enableNMI(bool)
                0x00000000c0006318                Computer::open(int, int, void*)
                0x00000000c00063ec                Computer::disableNMI()
                0x00000000c00063fc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000641a                Computer::handleNMI()
                0x00000000c0006480                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c00064ab        0x1 
 .text          0x00000000c00064ac      0x211 core/gdt.32
                0x00000000c00064ac                GDTEntry::setBase(unsigned int)
                0x00000000c00064c8                GDTEntry::setLimit(unsigned int)
                0x00000000c00064e6                GDT::GDT()
                0x00000000c00064e6                GDT::GDT()
                0x00000000c00064fc                GDT::addEntry(GDTEntry)
                0x00000000c000651e                GDT::getNumberOfEntries()
                0x00000000c0006526                GDT::flush()
                0x00000000c0006548                GDT::setup()
 .text          0x00000000c00066bd       0x19 core/idle.32
                0x00000000c00066bd                idleFunction(void*)
 *fill*         0x00000000c00066d6        0x2 
 .text          0x00000000c00066d8      0x464 core/idt.32
                0x00000000c00066d8                IDTEntry::IDTEntry(bool)
                0x00000000c00066d8                IDTEntry::IDTEntry(bool)
                0x00000000c000674a                IDTEntry::setOffset(unsigned int)
                0x00000000c0006760                IDT::IDT()
                0x00000000c0006760                IDT::IDT()
                0x00000000c0006762                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000676a                IDT::addEntry(IDTEntry, int)
                0x00000000c0006784                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00067bc                IDT::flush()
                0x00000000c00067d6                IDT::setup()
 .text          0x00000000c0006b3c      0x183 core/kheap.32
                0x00000000c0006b3c                sbrk
                0x00000000c0006bd1                mmap
                0x00000000c0006be7                munmap
                0x00000000c0006bfd                liballoc_lock()
                0x00000000c0006c0a                liballoc_unlock()
                0x00000000c0006c1e                liballoc_alloc(int)
                0x00000000c0006c36                liballoc_free(void*, int)
                0x00000000c0006c51                realloc
                0x00000000c0006c65                malloc
                0x00000000c0006c75                free
                0x00000000c0006c85                rfree
                0x00000000c0006c95                calloc
 .text          0x00000000c0006cbf      0x1b4 core/main.32
                0x00000000c0006cbf                Krnl::setBootMessage(char const*)
                0x00000000c0006d2b                kernel_main
 .text          0x00000000c0006e73      0x5dc core/physmgr.32
                0x00000000c0006e73                Phys::allocateDMA(unsigned long)
                0x00000000c0006f4a                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0006f7d                Phys::setPageState(unsigned long, bool)
                0x00000000c0006faf                Phys::getPageState(unsigned long)
                0x00000000c0006fd0                Phys::freePage(unsigned long)
                0x00000000c0007032                Phys::allocatePage()
                0x00000000c00070f0                Phys::allocateContiguousPages(int)
                0x00000000c000714c                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007184                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000744f        0x1 
 .text          0x00000000c0007450      0x273 core/pipe.32
                0x00000000c0007450                Pipe::isAtty()
                0x00000000c0007454                Pipe::~Pipe()
                0x00000000c0007454                Pipe::~Pipe()
                0x00000000c0007478                Pipe::~Pipe()
                0x00000000c00074a0                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007560                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000765c                Pipe::Pipe(int)
                0x00000000c000765c                Pipe::Pipe(int)
 *fill*         0x00000000c00076c3        0x1 
 .text          0x00000000c00076c4      0xa1e core/terminal.32
                0x00000000c00076c4                VgaText::isAtty()
                0x00000000c00076c8                VgaText::~VgaText()
                0x00000000c00076c8                VgaText::~VgaText()
                0x00000000c00076ec                VgaText::~VgaText()
                0x00000000c0007716                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0007736                setTerminalScrollLock(bool)
                0x00000000c0007737                doTerminalCycle()
                0x00000000c0007738                addToTerminalCycle(VgaText*)
                0x00000000c0007739                scrollTerminalScrollLock(int)
                0x00000000c000773a                VgaText::updateTitle()
                0x00000000c000773c                VgaText::load()
                0x00000000c000773e                VgaText::updateCursor()
                0x00000000c0007754                VgaText::doANSI_SGR(int)
                0x00000000c00077c8                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00077d8                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00077e8                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0007808                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0007814                VgaText::setTitleColour(VgaColour)
                0x00000000c0007820                VgaText::setTitle(char*)
                0x00000000c0007822                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0007834                VgaText::scrollScreen()
                0x00000000c00078cc                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00078de                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000796e                VgaText::getCursorX()
                0x00000000c0007976                VgaText::getCursorY()
                0x00000000c000797e                VgaText::setCursor(int, int)
                0x00000000c0007995                setActiveTerminal(VgaText*)
                0x00000000c00079e0                VgaText::clearScreen()
                0x00000000c0007a2e                VgaText::setCursorX(int)
                0x00000000c0007a46                VgaText::setCursorY(int)
                0x00000000c0007a5e                VgaText::incrementCursor(bool)
                0x00000000c0007ab2                VgaText::decrementCursor(bool)
                0x00000000c0007ad4                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0007ba2                VgaText::putchar(char)
                0x00000000c0007c8e                VgaText::putx(unsigned int)
                0x00000000c0007cd4                VgaText::puts(char const*)
                0x00000000c0007cfa                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0007d46                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0007e98                VgaText::VgaText(char const*)
                0x00000000c0007e98                VgaText::VgaText(char const*)
                0x00000000c0007fe4                VgaText::receiveKey(unsigned char)
                0x00000000c00080bc                VgaText::doUpdate()
                0x00000000c00080bd                newTerminal(char*)
 *fill*         0x00000000c00080e2        0x2 
 .text          0x00000000c00080e4      0x1a1 core/tss.32
                0x00000000c00080e4                TSS::TSS()
                0x00000000c00080e4                TSS::TSS()
                0x00000000c00080f4                TSS::setESP(unsigned long)
                0x00000000c0008108                TSS::flush()
                0x00000000c0008128                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008285        0x1 
 .text          0x00000000c0008286      0x4c2 core/unixfile.32
                0x00000000c0008286                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00082dc                ReservedFilename::isAtty()
                0x00000000c00082f8                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008356                UnixFile::getFileDescriptor()
                0x00000000c000835e                UnixFile::UnixFile(int)
                0x00000000c000835e                UnixFile::UnixFile(int)
                0x00000000c000850e                ReservedFilename::ReservedFilename(int)
                0x00000000c000850e                ReservedFilename::ReservedFilename(int)
                0x00000000c0008540                UnixFile::~UnixFile()
                0x00000000c0008540                UnixFile::~UnixFile()
                0x00000000c00085d8                UnixFile::~UnixFile()
                0x00000000c0008600                ReservedFilename::~ReservedFilename()
                0x00000000c0008600                ReservedFilename::~ReservedFilename()
                0x00000000c0008624                ReservedFilename::~ReservedFilename()
                0x00000000c000864b                getFromFileDescriptor(int)
 .text          0x00000000c0008748     0x119a core/virtmgr.32
                0x00000000c0008748                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000877d                Virt::getPageState(unsigned long)
                0x00000000c00087a1                Virt::allocateKernelVirtualPages(int)
                0x00000000c00088b2                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00088d0                Virt::swapIDToSector(unsigned long)
                0x00000000c00088e2                Virt::allocateSwapfilePage()
                0x00000000c0008960                Virt::virtualMemorySetup()
                0x00000000c00089ab                Virt::setupPageSwapping(int)
                0x00000000c0008a1c                VAS::VAS(VAS*)
                0x00000000c0008a1c                VAS::VAS(VAS*)
                0x00000000c0008a4a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0008a76                VAS::getPageTableEntry(unsigned long)
                0x00000000c0008a95                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0008bba                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0008bde                VAS::virtualToPhysical(unsigned long)
                0x00000000c0008bf8                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0008c38                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0008c6c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0008c96                VAS::~VAS()
                0x00000000c0008c96                VAS::~VAS()
                0x00000000c0008dfa                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0008efe                VAS::allocatePages(int, int)
                0x00000000c00090d6                VAS::setCPUSpecific(unsigned long)
                0x00000000c00090f4                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c00091ba                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c00092a8                VAS::VAS(bool)
                0x00000000c00092a8                VAS::VAS(bool)
                0x00000000c0009528                VAS::VAS()
                0x00000000c0009528                VAS::VAS()
                0x00000000c0009598                VAS::evict(unsigned long)
                0x00000000c000965a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0009748                VAS::scanForEviction()
                0x00000000c0009828                mapVASFirstTime
 .text          0x00000000c00098e2       0x5f coreobjs/c++.32
                0x00000000c00098e2                __cxa_atexit
                0x00000000c00098e5                __cxa_finalize
                0x00000000c00098e6                __stack_chk_fail
                0x00000000c000991c                __cxa_pure_virtual
                0x00000000c000992d                operator new[](unsigned long)
                0x00000000c0009932                operator delete(void*, unsigned long)
                0x00000000c0009937                operator delete[](void*)
                0x00000000c000993c                operator delete[](void*, unsigned long)
 .text          0x00000000c0009941      0x21c dbg/kconsole.32
                0x00000000c0009941                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c00099ac                Dbg::logc(char)
                0x00000000c00099cc                Dbg::logs(char*)
                0x00000000c00099e9                Dbg::logWriteInt(unsigned int)
                0x00000000c0009a07                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0009a28                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c0009b5d        0x1 
 .text          0x00000000c0009b5e      0xc5c fs/vfs.32
                0x00000000c0009b5e                File::read(unsigned long long, void*, int*)
                0x00000000c0009bb6                File::write(unsigned long long, void*, int*)
                0x00000000c0009c0e                Directory::read(unsigned long long, void*, int*)
                0x00000000c0009c66                Directory::write(unsigned long long, void*, int*)
                0x00000000c0009c94                File::isAtty()
                0x00000000c0009c98                Directory::isAtty()
                0x00000000c0009c9c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0009ca2                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0009ca8                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0009cae                File::~File()
                0x00000000c0009cae                File::~File()
                0x00000000c0009cd2                File::~File()
                0x00000000c0009cfc                Directory::~Directory()
                0x00000000c0009cfc                Directory::~Directory()
                0x00000000c0009d20                Directory::~Directory()
                0x00000000c0009d4a                Filesystem::Filesystem()
                0x00000000c0009d4a                Filesystem::Filesystem()
                0x00000000c0009d6e                Filesystem::~Filesystem()
                0x00000000c0009d6e                Filesystem::~Filesystem()
                0x00000000c0009d7c                Filesystem::~Filesystem()
                0x00000000c0009da0                Fs::getcwd(Process*, char*, int)
                0x00000000c0009dca                Fs::initVFS()
                0x00000000c0009df4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c0009f9e                File::File(char const*, Process*)
                0x00000000c0009f9e                File::File(char const*, Process*)
                0x00000000c000a05e                File::open(FileOpenMode)
                0x00000000c000a0bc                File::close()
                0x00000000c000a11c                File::seek(unsigned long long)
                0x00000000c000a172                File::tell(unsigned long long*)
                0x00000000c000a1c2                File::rewind()
                0x00000000c000a1d6                File::unlink()
                0x00000000c000a222                File::rename(char const*)
                0x00000000c000a270                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000a2cc                File::exists()
                0x00000000c000a30a                File::stat(unsigned long long*, bool*)
                0x00000000c000a36b                Fs::setcwd(Process*, char*)
                0x00000000c000a4c8                Directory::Directory(char const*, Process*)
                0x00000000c000a4c8                Directory::Directory(char const*, Process*)
                0x00000000c000a588                Directory::open()
                0x00000000c000a5e4                Directory::close()
                0x00000000c000a644                Directory::unlink()
                0x00000000c000a690                Directory::rename(char const*)
                0x00000000c000a6de                Directory::exists()
                0x00000000c000a71c                Directory::read(dirent*)
                0x00000000c000a768                Directory::create()
                0x00000000c000a7b4                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000a7ba        0x2 
 .text          0x00000000c000a7bc       0x86 hal/bus.32
                0x00000000c000a7bc                Bus::Bus(char const*)
                0x00000000c000a7bc                Bus::Bus(char const*)
                0x00000000c000a7f4                Bus::~Bus()
                0x00000000c000a7f4                Bus::~Bus()
                0x00000000c000a818                Bus::~Bus()
 .text          0x00000000c000a842       0x96 hal/buzzer.32
                0x00000000c000a842                beepThread(void*)
                0x00000000c000a87f                Krnl::beep(int, int, bool)
 .text          0x00000000c000a8d8      0x46d hal/clock.32
                0x00000000c000a8d8                User::loadClockSettings(int)
                0x00000000c000a92a                Clock::Clock(char const*)
                0x00000000c000a92a                Clock::Clock(char const*)
                0x00000000c000a960                Clock::~Clock()
                0x00000000c000a960                Clock::~Clock()
                0x00000000c000a984                Clock::~Clock()
                0x00000000c000a9ae                Clock::timeInSecondsLocal()
                0x00000000c000a9f6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000aa4f                datetimeToSeconds(datetime_t)
                0x00000000c000ab7c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000abdc                secondsToDatetime(unsigned long long)
                0x00000000c000ad20                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000ad45        0x1 
 .text          0x00000000c000ad46      0x464 hal/device.32
                0x00000000c000ad46                Device::hibernate()
                0x00000000c000ad48                Device::wake()
                0x00000000c000ad4a                Device::detect()
                0x00000000c000ad4c                Device::disableLegacy()
                0x00000000c000ad4e                Device::powerSaving(PowerSavingLevel)
                0x00000000c000ad50                DriverlessDevice::close(int, int, void*)
                0x00000000c000ad54                DriverlessDevice::detect()
                0x00000000c000ad56                DriverlessDevice::open(int, int, void*)
                0x00000000c000ad6a                Device::~Device()
                0x00000000c000ad6a                Device::~Device()
                0x00000000c000ad78                Device::~Device()
                0x00000000c000ada0                Device::findAndLoadDriver()
                0x00000000c000adae                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000add4                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000ae14                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ae3e                Device::getParent()
                0x00000000c000ae4a                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ae68                Device::addChild(Device*)
                0x00000000c000aeac                Device::removeAllChildren()
                0x00000000c000aef2                Device::hibernateAll()
                0x00000000c000af22                Device::wakeAll()
                0x00000000c000af52                Device::detectAll()
                0x00000000c000af82                Device::disableLegacyAll()
                0x00000000c000af84                Device::loadDriversForAll()
                0x00000000c000af86                Device::closeAll()
                0x00000000c000afbc                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000aff2                Device::setName(char const*)
                0x00000000c000b000                Device::Device(char const*)
                0x00000000c000b000                Device::Device(char const*)
                0x00000000c000b0fc                Device::getName()
                0x00000000c000b106                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000b106                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000b13c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000b180                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000b1aa        0x2 
 .text          0x00000000c000b1ac       0x86 hal/diskctrl.32
                0x00000000c000b1ac                HardDiskController::HardDiskController(char const*)
                0x00000000c000b1ac                HardDiskController::HardDiskController(char const*)
                0x00000000c000b1e4                HardDiskController::~HardDiskController()
                0x00000000c000b1e4                HardDiskController::~HardDiskController()
                0x00000000c000b208                HardDiskController::~HardDiskController()
 .text          0x00000000c000b232       0xe2 hal/diskphys.32
                0x00000000c000b232                PhysicalDisk::eject()
                0x00000000c000b236                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b236                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b29e                PhysicalDisk::startCache()
                0x00000000c000b2c6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b2c6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b2ea                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000b314        0x0 hal/fpu.32
 .text          0x00000000c000b314      0x35d hal/intctrl.32
                0x00000000c000b314                int_handler
                0x00000000c000b39c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000b3e4                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b51c                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000b550                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b5cf                setupINTS()
                0x00000000c000b62c                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000b671        0x1 
 .text          0x00000000c000b672      0x78c hal/keybrd.32
                0x00000000c000b672                startGUI(void*)
                0x00000000c000b6de                startGUIVESA(void*)
                0x00000000c000b74a                sendKeyToTerminal(unsigned char)
                0x00000000c000b80d                sendKeyboardToken(KeyboardToken)
                0x00000000c000bc4d                clearInternalKeybuffer(VgaText*)
                0x00000000c000bc82                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000bd74                Keyboard::Keyboard(char const*)
                0x00000000c000bd74                Keyboard::Keyboard(char const*)
                0x00000000c000bdb0                Keyboard::~Keyboard()
                0x00000000c000bdb0                Keyboard::~Keyboard()
                0x00000000c000bdd4                Keyboard::~Keyboard()
 .text          0x00000000c000bdfe      0x3ea hal/logidisk.32
                0x00000000c000bdfe                LogicalDisk::close(int, int, void*)
                0x00000000c000be02                LogicalDisk::~LogicalDisk()
                0x00000000c000be02                LogicalDisk::~LogicalDisk()
                0x00000000c000be26                LogicalDisk::~LogicalDisk()
                0x00000000c000be50                LogicalDisk::open(int, int, void*)
                0x00000000c000be64                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000be9c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000bee2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bee2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bf98                LogicalDisk::assignDriveLetter()
                0x00000000c000c04e                LogicalDisk::mount()
                0x00000000c000c096                LogicalDisk::unmount()
                0x00000000c000c0a6                LogicalDisk::eject()
                0x00000000c000c0ba                LogicalDisk::unassignDriveLetter()
                0x00000000c000c110                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000c17c                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000c1e8       0x86 hal/mouse.32
                0x00000000c000c1e8                Mouse::Mouse(char const*)
                0x00000000c000c1e8                Mouse::Mouse(char const*)
                0x00000000c000c220                Mouse::~Mouse()
                0x00000000c000c220                Mouse::~Mouse()
                0x00000000c000c244                Mouse::~Mouse()
 .text          0x00000000c000c26e      0x339 hal/partition.32
                0x00000000c000c26e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c316                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000c5a7        0x1 
 .text          0x00000000c000c5a8       0x86 hal/serial.32
                0x00000000c000c5a8                Serial::Serial(char const*)
                0x00000000c000c5a8                Serial::Serial(char const*)
                0x00000000c000c5e0                Serial::~Serial()
                0x00000000c000c5e0                Serial::~Serial()
                0x00000000c000c604                Serial::~Serial()
 *fill*         0x00000000c000c62e        0x2 
 .text          0x00000000c000c630      0x234 hal/timer.32
                0x00000000c000c630                Timer::Timer(char const*)
                0x00000000c000c630                Timer::Timer(char const*)
                0x00000000c000c668                Timer::~Timer()
                0x00000000c000c668                Timer::~Timer()
                0x00000000c000c68c                Timer::~Timer()
                0x00000000c000c6b6                Timer::read()
                0x00000000c000c6c1                setupTimer(int)
                0x00000000c000c6fc                timerHandler(unsigned int)
 .text          0x00000000c000c864      0x43e hal/vcache.32
                0x00000000c000c864                VCache::VCache(PhysicalDisk*)
                0x00000000c000c864                VCache::VCache(PhysicalDisk*)
                0x00000000c000c9cc                VCache::invalidateReadBuffer()
                0x00000000c000c9dc                VCache::writeWriteBuffer()
                0x00000000c000ca28                VCache::~VCache()
                0x00000000c000ca28                VCache::~VCache()
                0x00000000c000ca7c                VCache::~VCache()
                0x00000000c000caa4                VCache::write(unsigned long long, int, void*)
                0x00000000c000cb9e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000cca2      0x4b3 hal/video.32
                0x00000000c000cca2                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ccee                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000cd5e                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000cddc                Video::clearScreen(unsigned int)
                0x00000000c000ce10                Video::putpixel(int, int, unsigned int)
                0x00000000c000ce1e                Video::Video(char const*)
                0x00000000c000ce1e                Video::Video(char const*)
                0x00000000c000ce54                Video::~Video()
                0x00000000c000ce54                Video::~Video()
                0x00000000c000ce78                Video::~Video()
                0x00000000c000cea2                Video::isMonochrome()
                0x00000000c000ceae                Video::getWidth()
                0x00000000c000ceba                Video::getHeight()
                0x00000000c000cec6                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000cf82                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000d0ea                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000d155        0x3 
 .text          0x00000000c000d158     0x1307 hw/acpi.32
                0x00000000c000d158                ACPI::close(int, int, void*)
                0x00000000c000d210                findRSDP()
                0x00000000c000d2a0                loadACPITables(unsigned char*)
                0x00000000c000d504                findRSDT(unsigned char*)
                0x00000000c000d654                findDataTable(unsigned char*, char*)
                0x00000000c000d6cc                scanMADT()
                0x00000000c000dba0                ACPI::ACPI()
                0x00000000c000dba0                ACPI::ACPI()
                0x00000000c000dbf4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000dcdc                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000dda4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ddac                ACPI::detectPCI()
                0x00000000c000dfb4                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000e008                ACPI::sleep()
                0x00000000c000e024                ACPI::open(int, int, void*)
 *fill*         0x00000000c000e45f        0x1 
 .text          0x00000000c000e460      0xbbb hw/cpu.32
                0x00000000c000e460                CPU::close(int, int, void*)
                0x00000000c000e464                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000e480                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000e498                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000e50c                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000e590                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000e5be                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000e5ec                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000e61a                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000e648                CPU::CPU()
                0x00000000c000e648                CPU::CPU()
                0x00000000c000e6d6                CPU::displayFeatures()
                0x00000000c000e6d8                CPU::detectFeatures()
                0x00000000c000edae                CPU::setupSMEP()
                0x00000000c000edba                CPU::setupUMIP()
                0x00000000c000edc4                CPU::setupTSC()
                0x00000000c000edce                CPU::setupLargePages()
                0x00000000c000edd8                CPU::setupPAT()
                0x00000000c000ee14                CPU::setupMTRR()
                0x00000000c000ee16                CPU::setupGlobalPages()
                0x00000000c000ee20                CPU::allowUsermodeDataAccess()
                0x00000000c000ee32                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ee44                CPU::setupSMAP()
                0x00000000c000ee52                CPU::setupFeatures()
                0x00000000c000ef1e                CPU::open(int, int, void*)
                0x00000000c000f008                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c000f01b        0x4 hw/smp.32
                0x00000000c000f01b                Krnl::smpEntry()
                0x00000000c000f01d                Krnl::startCPU(int)
                0x00000000c000f01e                Krnl::startCPUs()
 *fill*         0x00000000c000f01f        0x1 
 .text          0x00000000c000f020      0x581 krnl/env.32
                0x00000000c000f020                EnvVarContainer::getEnv(char const*)
                0x00000000c000f05e                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000f120                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000f122                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000f308                EnvVarContainer::__loadSystem()
                0x00000000c000f322                EnvVarContainer::__loadUser()
                0x00000000c000f324                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f324                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f346                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f346                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f376                Krnl::getEnv(Process*, char const*)
                0x00000000c000f3db                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000f3f5                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000f414                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000f427                Krnl::deleteEnvSystem(char const*)
                0x00000000c000f428                Krnl::deleteEnvUser(char const*)
                0x00000000c000f429                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000f42a                Krnl::newProcessEnv(Process*)
                0x00000000c000f44c                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000f498                Krnl::loadSystemEnv()
                0x00000000c000f4c6                Krnl::loadUserEnv()
                0x00000000c000f4ec                Krnl::flushEnv()
                0x00000000c000f4ed                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000f50d                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c000f5a1      0x26c krnl/panic.32
                0x00000000c000f5a1                Krnl::panic(char const*)
 .text          0x00000000c000f80d      0x168 krnl/powctrl.32
                0x00000000c000f80d                Krnl::powerThread(void*)
                0x00000000c000f861                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c000f877                Krnl::userIOReceived()
                0x00000000c000f882                Krnl::handlePowerButton()
                0x00000000c000f8b7                Krnl::handleSleepButton()
                0x00000000c000f8ec                Krnl::setupPowerManager()
 .text          0x00000000c000f975      0x50e reg/registry.32
                0x00000000c000f975                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c000facd                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c000fc22                Reg::getLine(char*, char*, char*)
                0x00000000c000fc59                Reg::readInt(char*, char*, int*)
                0x00000000c000fd44                Reg::readString(char*, char*, char*, int)
                0x00000000c000fdc5                Reg::readBool(char*, char*, bool*)
                0x00000000c000fdea                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c000fe16                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c000fe42                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c000fe83       0x36 sys/sc_eject.32
                0x00000000c000fe83                Sys::eject(regs*)
 .text          0x00000000c000feb9       0x18 sys/sc_exit.32
                0x00000000c000feb9                Sys::exit(regs*)
 .text          0x00000000c000fed1       0x1f sys/sc_getcwd.32
                0x00000000c000fed1                Sys::getCwd(regs*)
 .text          0x00000000c000fef0        0xc sys/sc_getpid.32
                0x00000000c000fef0                Sys::getPID(regs*)
 .text          0x00000000c000fefc       0x1a sys/sc_getramdata.32
                0x00000000c000fefc                Sys::getRAMData(regs*)
 .text          0x00000000c000ff16       0x82 sys/sc_getvgaptr.32
                0x00000000c000ff16                Sys::getVGAPtr(regs*)
 .text          0x00000000c000ff98       0xa8 sys/sc_loaddll.32
                0x00000000c000ff98                Sys::loadDLL(regs*)
 .text          0x00000000c0010040       0x68 sys/sc_read.32
                0x00000000c0010040                Sys::read(regs*)
 .text          0x00000000c00100a8       0x55 sys/sc_sbrk.32
                0x00000000c00100a8                Sys::sbrk(regs*)
 .text          0x00000000c00100fd       0x1c sys/sc_setcwd.32
                0x00000000c00100fd                Sys::setCwd(regs*)
 .text          0x00000000c0010119       0x95 sys/sc_settime.32
                0x00000000c0010119                Sys::setTime(regs*)
 .text          0x00000000c00101ae       0x4a sys/sc_timezone.32
                0x00000000c00101ae                Sys::timezone(regs*)
 .text          0x00000000c00101f8       0x68 sys/sc_write.32
                0x00000000c00101f8                Sys::write(regs*)
 .text          0x00000000c0010260       0x62 sys/sc_wsbe.32
                0x00000000c0010260                Sys::wsbe(regs*)
 .text          0x00000000c00102c2       0x25 sys/sc_yield.32
                0x00000000c00102c2                Sys::yield(regs*)
 .text          0x00000000c00102e7      0xe2c sys/syscalls.32
                0x00000000c00102e7                sysCallSeekDir(regs*)
                0x00000000c00102ec                sysCallTellDir(regs*)
                0x00000000c00102f1                sysCallVerify(regs*)
                0x00000000c00102fb                sysCallGetArgc(regs*)
                0x00000000c001030b                sysCallTTYName(regs*)
                0x00000000c0010313                sysFormatDisk(regs*)
                0x00000000c0010380                sysSetDiskVolumeLabel(regs*)
                0x00000000c00103ca                sysGetDiskVolumeLabel(regs*)
                0x00000000c001041f                sysShutdown(regs*)
                0x00000000c001047d                sysCallRealpath(regs*)
                0x00000000c00104c0                sysCallReadDir(regs*)
                0x00000000c0010540                sysCallIsATTY(regs*)
                0x00000000c001059c                sysCallSeek(regs*)
                0x00000000c00105f5                sysCallTell(regs*)
                0x00000000c0010664                sysCallSize(regs*)
                0x00000000c00106d9                sysCallSizeFromFilename(regs*)
                0x00000000c001078c                sysCallClose(regs*)
                0x00000000c00107ec                sysCallOpenDir(regs*)
                0x00000000c0010863                sysCallCloseDir(regs*)
                0x00000000c00108b7                sysCallMakeDir(regs*)
                0x00000000c0010929                sysCallWait(regs*)
                0x00000000c0010946                sysCallNotImpl(regs*)
                0x00000000c0010961                sysPanic(regs*)
                0x00000000c001097c                sysCallRmdir(regs*)
                0x00000000c00109e3                sysCallUnlink(regs*)
                0x00000000c0010a4a                sysCallGetArgv(regs*)
                0x00000000c0010a97                sysCallUSleep(regs*)
                0x00000000c0010ac0                sysCallSpawn(regs*)
                0x00000000c0010b29                sysCallGetEnv(regs*)
                0x00000000c0010bd8                sysSetFatAttrib(regs*)
                0x00000000c0010c4f                sysPipe(regs*)
                0x00000000c0010c94                sysGetUnixTime(regs*)
                0x00000000c0010ca8                string_ends_with(char const*, char const*)
                0x00000000c0010cf2                sysCallOpen(regs*)
                0x00000000c0010ee6                Sys::loadSyscalls()
                0x00000000c00110d1                Sys::systemCall(regs*, void*)
 .text          0x00000000c0011113     0x11e5 thr/elf.32
                0x00000000c0011113                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001139f                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00115b5                Thr::runtimeReferenceHelper()
                0x00000000c00115c8                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0011617                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00118d5                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001200b                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001203d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012074                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001208e                Thr::loadDLL(char const*, bool)
                0x00000000c00122bf                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00122f8     0x12c5 thr/prcssthr.32
                0x00000000c00122f8                userModeEntryPoint(void*)
                0x00000000c0012320                changeTSS
                0x00000000c0012350                switchToThread(ThreadControlBlock*)
                0x00000000c0012404                Process::addArgs(char**)
                0x00000000c0012464                Process::Process(char const*, Process*, char**)
                0x00000000c0012464                Process::Process(char const*, Process*, char**)
                0x00000000c0012654                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0012654                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0012810                taskStartupFunction
                0x00000000c001281c                Semaphore::Semaphore(int)
                0x00000000c001281c                Semaphore::Semaphore(int)
                0x00000000c001284c                Mutex::Mutex()
                0x00000000c001284c                Mutex::Mutex()
                0x00000000c0012860                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0012958                Process::createUserThread()
                0x00000000c0012978                setupMultitasking(void (*)())
                0x00000000c0012a80                schedule()
                0x00000000c0012b10                Semaphore::tryAcquire()
                0x00000000c0012bdc                Semaphore::assertLocked(char const*)
                0x00000000c0012c54                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0012c7c                blockTask(TaskState)
                0x00000000c0012cac                waitTask(int, int*, int)
                0x00000000c0012cf0                milliTenthSleepUntil(unsigned int)
                0x00000000c0012d80                milliTenthSleep(unsigned int)
                0x00000000c0012d90                sleep(unsigned int)
                0x00000000c0012dac                Semaphore::acquire()
                0x00000000c0012e68                taskReturned
                0x00000000c0012ea4                Thr::processFromPID(int)
                0x00000000c0012f44                unblockTask(ThreadControlBlock*)
                0x00000000c0012fe8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00132b4                cleanerTaskFunction(void*)
                0x00000000c00133a4                terminateTask(int)
                0x00000000c0013470                Thr::terminateFromIRQ(int)
                0x00000000c0013480                Semaphore::release()
 .text          0x00000000c00135bd      0xb93 vm86/vm8086.32
                0x00000000c00135bd                Vm::inbv(unsigned short)
                0x00000000c00135d0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0013606                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0013616                Vm::getSegment(unsigned int)
                0x00000000c001361e                Vm::getOffset(unsigned int)
                0x00000000c0013623                Vm::mainloop2()
                0x00000000c001365d                Vm::mainVm8086Loop(void*)
                0x00000000c001366d                Vm::mainloop3(unsigned long)
                0x00000000c0013693                Vm::initialise8086()
                0x00000000c00136d6                Vm::finish8086()
                0x00000000c0013737                Vm::getOutput8086(unsigned char*)
                0x00000000c001375c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0013815                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001397d                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0013a07                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0013a18                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0013a2a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0013a3b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0013a50                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0013a66                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0013a7b                Vm::faultHandler(regs*)
 .text          0x00000000c0014150      0x8d2 arch/i386/hal.32
                0x00000000c0014150                Hal::noCopro(unsigned long)
                0x00000000c0014151                Hal::noTSC()
                0x00000000c0014156                Hal::readTSC()
                0x00000000c0014159                nmiHandler(regs*, void*)
                0x00000000c0014172                doubleFault(regs*, void*)
                0x00000000c001418b                displayDebugInfo(regs*)
                0x00000000c00144ac                displayProgramFault(char const*)
                0x00000000c00144f8                gpFault(regs*, void*)
                0x00000000c001455d                pgFault(regs*, void*)
                0x00000000c00145bf                otherISRHandler(regs*, void*)
                0x00000000c00145f3                opcodeFault(regs*, void*)
                0x00000000c0014673                i386SaveCoprocessor(void*)
                0x00000000c0014687                i386LoadCoprocessor(void*)
                0x00000000c001469b                x87EmulHandler(regs*, void*)
                0x00000000c0014738                Hal::initialiseCoprocessor()
                0x00000000c00147e6                Hal::panic(char const*)
                0x00000000c00147eb                Hal::initialise()
                0x00000000c00149b4                Hal::makeBeep(int)
                0x00000000c00149ee                Hal::getRand()
                0x00000000c00149f1                Hal::endOfInterrupt(int)
 *fill*         0x00000000c0014a22        0x2 
 .text          0x00000000c0014a24      0x2f4 arch/i386/pic.32
                0x00000000c0014a24                picIoWait()
                0x00000000c0014a2c                picDisable()
                0x00000000c0014a60                picGetIRQReg(int)
                0x00000000c0014ae4                picOpen()
                0x00000000c0014c74                picEOI(int)
 .text          0x00000000c0014d18      0x64d arch/i386/rtc.32
                0x00000000c0014d18                RTC::open(int, int, void*)
                0x00000000c0014d1c                RTC::close(int, int, void*)
                0x00000000c0014d20                RTC::timeInSecondsUTC()
                0x00000000c0014d32                RTC::timeInDatetimeUTC()
                0x00000000c0014d58                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0014d96                RTC::~RTC()
                0x00000000c0014d96                RTC::~RTC()
                0x00000000c0014dba                RTC::~RTC()
                0x00000000c0014de4                RTC::get_update_in_progress_flag()
                0x00000000c0014dfc                RTC::completeRTCRefresh()
                0x00000000c00150b4                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0015267                rtcIRQHandler(regs*, void*)
                0x00000000c00152ac                RTC::RTC()
                0x00000000c00152ac                RTC::RTC()
 *fill*         0x00000000c0015365        0x3 
 .text          0x00000000c0015368      0x203 arch/i386/vga.32
                0x00000000c0015368                Hal::consoleScroll(int, int)
                0x00000000c0015470                Hal::consoleWriteCharacter(char, int, int, int, int)
                0x00000000c00154dc                Hal::consoleCursorUpdate(int, int)
 *fill*         0x00000000c001556b        0x1 
 .text          0x00000000c001556c     0x13e7 fs/fat/vfslink.32
                0x00000000c001556c                FAT::getName()
                0x00000000c0015574                FAT::tell(void*, unsigned long long*)
                0x00000000c00155b0                FAT::stat(void*, unsigned long long*)
                0x00000000c00155ec                FAT::~FAT()
                0x00000000c00155ec                FAT::~FAT()
                0x00000000c0015610                FAT::~FAT()
                0x00000000c0015638                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00156dc                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00157a0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0015974                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0015b8c                FAT::allocateSwapfile(char const*, int)
                0x00000000c0015d4c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0015eb8                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0015f18                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0015f78                FAT::close(void*)
                0x00000000c0015fcc                FAT::closeDir(void*)
                0x00000000c0016020                FAT::seek(void*, unsigned long long)
                0x00000000c0016078                fatWrapperReadDisk
                0x00000000c00160bc                fatWrapperWriteDisk
                0x00000000c0016100                fatWrapperIoctl
                0x00000000c001621c                FAT::FAT()
                0x00000000c001621c                FAT::FAT()
                0x00000000c0016270                FAT::fixFilepath(char*)
                0x00000000c00162ac                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00163e4                FAT::openDir(char const*, void**)
                0x00000000c0016494                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001658c                FAT::unlink(char const*)
                0x00000000c001660c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0016798                FAT::rename(char const*, char const*)
                0x00000000c0016864                FAT::mkdir(char const*)
                0x00000000c00168e4                FAT::exists(char const*)
 *fill*         0x00000000c0016953        0x1 
 .text          0x00000000c0016954      0xba5 fs/iso9660/vfslink.32
                0x00000000c0016954                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001695a                ISO9660::seek(void*, unsigned long long)
                0x00000000c001698a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c00169ae                ISO9660::getName()
                0x00000000c00169b4                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00169d8                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00169de                ISO9660::unlink(char const*)
                0x00000000c00169e4                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00169ea                ISO9660::rename(char const*, char const*)
                0x00000000c00169f0                ISO9660::mkdir(char const*)
                0x00000000c00169f6                ISO9660::close(void*)
                0x00000000c0016a18                ISO9660::closeDir(void*)
                0x00000000c0016a3a                ISO9660::~ISO9660()
                0x00000000c0016a3a                ISO9660::~ISO9660()
                0x00000000c0016a5e                ISO9660::~ISO9660()
                0x00000000c0016a85                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0016ac7                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0016b42                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0016ba2                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0016da6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001701e                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0017072                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c0017248                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c00172d6                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017384                ISO9660::exists(char const*)
                0x00000000c00173a8                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001743c                ISO9660::openDir(char const*, void**)
                0x00000000c00174d6                ISO9660::ISO9660()
                0x00000000c00174d6                ISO9660::ISO9660()
 *fill*         0x00000000c00174f9        0x1 
 .text          0x00000000c00174fa      0x26c hal/sound/sndcard.32
                0x00000000c00174fa                SoundCard::beginPlayback()
                0x00000000c0017508                SoundCard::stopPlayback()
                0x00000000c0017516                SoundCard::SoundCard(char const*)
                0x00000000c0017516                SoundCard::SoundCard(char const*)
                0x00000000c00175b4                SoundCard::~SoundCard()
                0x00000000c00175b4                SoundCard::~SoundCard()
                0x00000000c00175d8                SoundCard::~SoundCard()
                0x00000000c0017602                SoundCard::configureRates(int, int, int)
                0x00000000c0017632                SoundCard::getSamples16(int, short*)
                0x00000000c001768e                SoundCard::getSamples32(int, int*)
                0x00000000c0017714                SoundCard::addChannel(SoundPort*)
                0x00000000c0017752                SoundCard::removeChannel(int)
 *fill*         0x00000000c0017766        0x2 
 .text          0x00000000c0017768      0x377 hal/sound/sndport.32
                0x00000000c0017768                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017768                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00177f4                SoundPort::~SoundPort()
                0x00000000c00177f4                SoundPort::~SoundPort()
                0x00000000c0017828                SoundPort::unpause()
                0x00000000c0017834                SoundPort::pause()
                0x00000000c0017840                SoundPort::getBufferUsed()
                0x00000000c0017848                SoundPort::getBufferSize()
                0x00000000c0017850                SoundPort::buffer16(short*, int)
                0x00000000c00178dc                SoundPort::buffer32(int*, int)
                0x00000000c0017964                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0017a28                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0017adf        0x0 hw/bus/isa.32
 *fill*         0x00000000c0017adf        0x1 
 .text          0x00000000c0017ae0      0xb49 hw/bus/pci.32
                0x00000000c0017ae0                PCI::open(int, int, void*)
                0x00000000c0017afe                PCI::close(int, int, void*)
                0x00000000c0017b02                PCI::PCI()
                0x00000000c0017b02                PCI::PCI()
                0x00000000c0017b9c                PCI::readBAR8(unsigned int, int)
                0x00000000c0017bb8                PCI::readBAR16(unsigned int, int)
                0x00000000c0017bd6                PCI::readBAR32(unsigned int, int)
                0x00000000c0017bf2                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0017c12                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0017c34                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0017c54                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017cc2                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017d6a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017d8e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0017db6                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0017e00                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0017e28                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017e4c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0017e70                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0017e98                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017efc                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0017fe4                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001825e                PCI::checkBus(unsigned char)
                0x00000000c0018284                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c00183f6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001856a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c00185d6                PCI::detect()
 *fill*         0x00000000c0018629        0x1 
 .text          0x00000000c001862a      0xb5a hw/diskctrl/ide.32
                0x00000000c001862a                IDE::close(int, int, void*)
                0x00000000c001862e                IDE::IDE()
                0x00000000c001862e                IDE::IDE()
                0x00000000c0018662                IDE::prepareInterrupt(unsigned char)
                0x00000000c0018674                selectDrive(unsigned char, unsigned char)
                0x00000000c0018676                IDE::getBase(unsigned char)
                0x00000000c0018688                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0018748                IDE::read(unsigned char, unsigned char)
                0x00000000c00187f6                IDE::waitInterrupt(unsigned char)
                0x00000000c001885e                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001887a                ideChannel1IRQHandler(regs*, void*)
                0x00000000c0018896                IDE::enableIRQs(unsigned char, bool)
                0x00000000c00188dc                IDE::open(int, int, void*)
                0x00000000c0018cea                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0018db6                IDE::detect()
                0x00000000c0019076                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019126                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019184      0x320 hw/diskctrl/satabus.32
                0x00000000c0019184                SATABus::close(int, int, void*)
                0x00000000c0019188                SATABus::detect()
                0x00000000c001918a                SATABus::SATABus()
                0x00000000c001918a                SATABus::SATABus()
                0x00000000c0019210                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019242                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001928a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c00192aa                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c00192d4                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c00193da                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019484                SATABus::open(int, int, void*)
 .text          0x00000000c00194a4      0x5f4 hw/diskphys/ata.32
                0x00000000c00194a4                ATA::close(int, int, void*)
                0x00000000c00194c8                ATA::powerSaving(PowerSavingLevel)
                0x00000000c00194ca                ATA::ATA()
                0x00000000c00194ca                ATA::ATA()
                0x00000000c00194f8                ATA::flush(bool)
                0x00000000c0019542                ATA::readyForCommand()
                0x00000000c001958e                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001990a                ATA::read(unsigned long long, int, void*)
                0x00000000c0019956                ATA::write(unsigned long long, int, void*)
                0x00000000c00199a2                ATA::detectCHS()
                0x00000000c00199cc                ATA::open(int, int, void*)
 .text          0x00000000c0019a98      0x60e hw/diskphys/atapi.32
                0x00000000c0019a98                ATAPI::write(unsigned long long, int, void*)
                0x00000000c0019a9e                ATAPI::close(int, int, void*)
                0x00000000c0019ac2                ATAPI::ATAPI()
                0x00000000c0019ac2                ATAPI::ATAPI()
                0x00000000c0019af0                ATAPI::readyForCommand()
                0x00000000c0019b42                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0019e02                ATAPI::diskRemoved()
                0x00000000c0019e3c                ATAPI::eject()
                0x00000000c0019e84                ATAPI::diskInserted()
                0x00000000c0019e90                ATAPI::detectMedia()
                0x00000000c0019f4c                ATAPI::open(int, int, void*)
                0x00000000c001a02c                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001a0a6      0x402 hw/diskphys/sata.32
                0x00000000c001a0a6                SATA::close(int, int, void*)
                0x00000000c001a0ca                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001a0cc                SATA::open(int, int, void*)
                0x00000000c001a176                SATA::SATA()
                0x00000000c001a176                SATA::SATA()
                0x00000000c001a1a4                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a3f0                SATA::read(unsigned long long, int, void*)
                0x00000000c001a43c                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001a4a8      0x63d hw/diskphys/satapi.32
                0x00000000c001a4a8                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001a4ae                SATAPI::close(int, int, void*)
                0x00000000c001a4d2                SATAPI::SATAPI()
                0x00000000c001a4d2                SATAPI::SATAPI()
                0x00000000c001a500                SATAPI::diskRemoved()
                0x00000000c001a502                SATAPI::diskInserted()
                0x00000000c001a51e                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001a7ac                SATAPI::eject()
                0x00000000c001a7e8                SATAPI::detectMedia()
                0x00000000c001a912                SATAPI::open(int, int, void*)
                0x00000000c001aa12                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001aae5        0x1 
 .text          0x00000000c001aae6      0x455 hw/intctrl/apic.32
                0x00000000c001aae6                IOAPIC::close(int, int, void*)
                0x00000000c001aaec                apicGetBase()
                0x00000000c001ab2e                IOAPIC::IOAPIC()
                0x00000000c001ab2e                IOAPIC::IOAPIC()
                0x00000000c001ab56                apicOpen()
                0x00000000c001acbc                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001acee                IOAPIC::read(int)
                0x00000000c001ad16                IOAPIC::open(int, int, void*)
                0x00000000c001ae0a                IOAPIC::write(int, int)
                0x00000000c001ae36                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001af3b        0x1 
 .text          0x00000000c001af3c       0xf0 hw/timer/apictimer.32
                0x00000000c001af3c                APICTimer::close(int, int, void*)
                0x00000000c001af44                apicTimerHandler(regs*, void*)
                0x00000000c001af6c                APICTimer::open(int, int, void*)
                0x00000000c001afdc                APICTimer::write(int)
                0x00000000c001b004                APICTimer::APICTimer()
                0x00000000c001b004                APICTimer::APICTimer()
 .text          0x00000000c001b02c      0x1aa hw/timer/pit.32
                0x00000000c001b02c                PIT::write(int)
                0x00000000c001b0b0                pitHandler(regs*, void*)
                0x00000000c001b0d4                PIT::open(int, int, void*)
                0x00000000c001b124                PIT::close(int, int, void*)
                0x00000000c001b154                PIT::PIT()
                0x00000000c001b154                PIT::PIT()
 *fill*         0x00000000c001b1d6        0xa 
 .text          0x00000000c001b1e0       0x83 arch/i386/avx.32
                0x00000000c001b1e0                avxDetect
                0x00000000c001b20a                avxSave
                0x00000000c001b21b                avxLoad
                0x00000000c001b22c                avxInit
                0x00000000c001b24e                avxClose
                0x00000000c001b24f                wouldSheSayYes
 *fill*         0x00000000c001b263        0xd 
 .text          0x00000000c001b270      0x1d6 arch/i386/interrupt.32
                0x00000000c001b270                isr0
                0x00000000c001b280                isr1
                0x00000000c001b28a                isr2
                0x00000000c001b294                isr3
                0x00000000c001b29e                isr4
                0x00000000c001b2a8                isr5
                0x00000000c001b2b2                isr6
                0x00000000c001b2bc                isr7
                0x00000000c001b2c6                isr8
                0x00000000c001b2ce                isr9
                0x00000000c001b2d8                isr10
                0x00000000c001b2e0                isr11
                0x00000000c001b2e8                isr12
                0x00000000c001b2f0                isr13
                0x00000000c001b2f8                isr14
                0x00000000c001b300                isr15
                0x00000000c001b30a                isr16
                0x00000000c001b314                isr17
                0x00000000c001b31e                isr18
                0x00000000c001b328                irq3
                0x00000000c001b332                irq4
                0x00000000c001b33c                irq5
                0x00000000c001b346                irq6
                0x00000000c001b350                irq7
                0x00000000c001b35a                irq8
                0x00000000c001b364                irq9
                0x00000000c001b36e                irq10
                0x00000000c001b378                irq11
                0x00000000c001b382                irq12
                0x00000000c001b38c                irq13
                0x00000000c001b396                irq14
                0x00000000c001b3a0                irq15
                0x00000000c001b3aa                irq1
                0x00000000c001b3b1                irq2
                0x00000000c001b3b8                isr96
                0x00000000c001b3bf                irq0
                0x00000000c001b3c4                int_common_stub
                0x00000000c001b3c4                syscall_common_stub
                0x00000000c001b3f6                irq16
                0x00000000c001b400                irq17
                0x00000000c001b40a                irq18
                0x00000000c001b414                irq19
                0x00000000c001b41e                irq20
                0x00000000c001b428                irq21
                0x00000000c001b432                irq22
                0x00000000c001b43c                irq23
 *fill*         0x00000000c001b446        0xa 
 .text          0x00000000c001b450       0x10 arch/i386/rdrand.32
                0x00000000c001b450                i386GetRDRAND
 .text          0x00000000c001b460       0x39 arch/i386/sse.32
                0x00000000c001b460                absolutelyNoChanceInHell
                0x00000000c001b460                sseDetect
                0x00000000c001b478                sseSave
                0x00000000c001b480                sseLoad
                0x00000000c001b488                sseInit
                0x00000000c001b498                sseClose
 *fill*         0x00000000c001b499        0x7 
 .text          0x00000000c001b4a0       0x49 arch/i386/x87.32
                0x00000000c001b4a6                x87Detect
                0x00000000c001b4c1                x87Save
                0x00000000c001b4c8                x87Load
                0x00000000c001b4cf                x87Init
                0x00000000c001b4e8                x87Close
 *fill*         0x00000000c001b4e9        0x3 
 .text          0x00000000c001b4ec       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001b511        0x0 crtn.32
 *fill*         0x00000000c001b511        0x3 
 .text          0x00000000c001b514      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001b514                __divdi3
 *fill*         0x00000000c001b65f        0x1 
 .text          0x00000000c001b660      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001b660                __moddi3
 *fill*         0x00000000c001b7de        0x2 
 .text          0x00000000c001b7e0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001b7e0                __udivdi3
 *fill*         0x00000000c001b8df        0x1 
 .text          0x00000000c001b8e0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001b8e0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001ba00        0x0
 .iplt          0x00000000c001ba00        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001b9fa        0xf
 .init          0x00000000c001b9fa        0x3 crti.32
                0x00000000c001b9fa                _init
 .init          0x00000000c001b9fd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001ba02        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001ba07        0x2 crtn.32

.fini           0x00000000c001ba09        0xa
 .fini          0x00000000c001ba09        0x3 crti.32
                0x00000000c001ba09                _fini
 .fini          0x00000000c001ba0c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001ba11        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001ba14       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001ba14       0x23 core/computer.32
                0x00000000c001ba14                Computer::~Computer()
                0x00000000c001ba14                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001ba38       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001ba38       0x2a core/computer.32
                0x00000000c001ba38                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001ba62       0x21
 .text._Z10idleCommonv
                0x00000000c001ba62       0x21 core/idle.32
                0x00000000c001ba62                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ba84        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ba84        0x2 core/unixfile.32
                0x00000000c001ba84                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001ba84                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ba86       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ba86       0x42 core/unixfile.32
                0x00000000c001ba86                LinkedList<UnixFile>::LinkedList()
                0x00000000c001ba86                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001bac8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001bac8       0xd3 core/unixfile.32
                0x00000000c001bac8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001bb9c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001bb9c        0x7 core/unixfile.32
                0x00000000c001bb9c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001bba4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001bba4       0xa1 core/unixfile.32
                0x00000000c001bba4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001bc46        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001bc46        0x8 core/unixfile.32
                0x00000000c001bc46                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001bc4e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001bc4e       0x1a hal/device.32
                0x00000000c001bc4e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001bc4e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001bc68       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001bc68       0x2a hal/device.32
                0x00000000c001bc68                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001bc92       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001bc92       0xdc hal/device.32
                0x00000000c001bc92                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001bd6e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001bd6e       0x42 hal/device.32
                0x00000000c001bd6e                LinkedList<Device>::LinkedList()
                0x00000000c001bd6e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001bdb0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001bdb0       0x1c hal/timer.32
                0x00000000c001bdb0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001bdcc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001bdcc        0x7 hal/timer.32
                0x00000000c001bdcc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bdd4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bdd4       0xb8 hal/timer.32
                0x00000000c001bdd4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001be8c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001be8c       0xda hal/timer.32
                0x00000000c001be8c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001bf68       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001bf68       0x23 hw/acpi.32
                0x00000000c001bf68                ACPI::~ACPI()
                0x00000000c001bf68                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001bf8c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001bf8c       0x2a hw/acpi.32
                0x00000000c001bf8c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001bfb8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001bfb8        0x2 hw/acpi.32
                0x00000000c001bfb8                LinkedList<Device>::~LinkedList()
                0x00000000c001bfb8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001bfbc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001bfbc       0x1c hw/acpi.32
                0x00000000c001bfbc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001bfd8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001bfd8        0x7 hw/acpi.32
                0x00000000c001bfd8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001bfe0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001bfe0       0xb8 hw/acpi.32
                0x00000000c001bfe0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001c098       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001c098       0x23 hw/cpu.32
                0x00000000c001c098                CPU::~CPU()
                0x00000000c001c098                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001c0bc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001c0bc       0x2a hw/cpu.32
                0x00000000c001c0bc                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c0e8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c0e8        0x2 thr/prcssthr.32
                0x00000000c001c0e8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001c0e8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c0ec       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c0ec       0x49 thr/prcssthr.32
                0x00000000c001c0ec                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001c0ec                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c138       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c138       0x42 thr/prcssthr.32
                0x00000000c001c138                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001c138                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c17c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c17c        0x8 thr/prcssthr.32
                0x00000000c001c17c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001c184       0x23
 .text._ZN3PCID2Ev
                0x00000000c001c184       0x23 hw/bus/pci.32
                0x00000000c001c184                PCI::~PCI()
                0x00000000c001c184                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001c1a8       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001c1a8       0x2a hw/bus/pci.32
                0x00000000c001c1a8                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001c1d2       0x23
 .text._ZN3IDED2Ev
                0x00000000c001c1d2       0x23 hw/diskctrl/ide.32
                0x00000000c001c1d2                IDE::~IDE()
                0x00000000c001c1d2                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001c1f6       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001c1f6       0x2a hw/diskctrl/ide.32
                0x00000000c001c1f6                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001c220       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001c220       0x23 hw/diskctrl/satabus.32
                0x00000000c001c220                SATABus::~SATABus()
                0x00000000c001c220                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001c244       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001c244       0x2a hw/diskctrl/satabus.32
                0x00000000c001c244                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001c26e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001c26e       0x23 hw/diskphys/ata.32
                0x00000000c001c26e                ATA::~ATA()
                0x00000000c001c26e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001c292       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001c292       0x2a hw/diskphys/ata.32
                0x00000000c001c292                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001c2bc       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001c2bc       0x23 hw/diskphys/atapi.32
                0x00000000c001c2bc                ATAPI::~ATAPI()
                0x00000000c001c2bc                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001c2e0       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001c2e0       0x2a hw/diskphys/atapi.32
                0x00000000c001c2e0                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001c30a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001c30a       0x23 hw/diskphys/sata.32
                0x00000000c001c30a                SATA::~SATA()
                0x00000000c001c30a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001c32e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001c32e       0x2a hw/diskphys/sata.32
                0x00000000c001c32e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001c358       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001c358       0x23 hw/diskphys/satapi.32
                0x00000000c001c358                SATAPI::~SATAPI()
                0x00000000c001c358                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001c37c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001c37c       0x2a hw/diskphys/satapi.32
                0x00000000c001c37c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001c3a6       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001c3a6       0x23 hw/intctrl/apic.32
                0x00000000c001c3a6                IOAPIC::~IOAPIC()
                0x00000000c001c3a6                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001c3ca       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001c3ca       0x2a hw/intctrl/apic.32
                0x00000000c001c3ca                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001c3f4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001c3f4       0x23 hw/timer/apictimer.32
                0x00000000c001c3f4                APICTimer::~APICTimer()
                0x00000000c001c3f4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001c418       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001c418       0x2a hw/timer/apictimer.32
                0x00000000c001c418                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001c444       0x23
 .text._ZN3PITD2Ev
                0x00000000c001c444       0x23 hw/timer/pit.32
                0x00000000c001c444                PIT::~PIT()
                0x00000000c001c444                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001c468       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001c468       0x2a hw/timer/pit.32
                0x00000000c001c468                PIT::~PIT()

.rodata         0x00000000c001c492     0x2932
                0x00000000c001c492                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001c492        0x2 
 .ctors         0x00000000c001c494        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001c498        0x4 core/unixfile.32
 .ctors         0x00000000c001c49c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001c4a0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c4a4                end_ctors = .
                0x00000000c001c4a4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001c4a4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001c4a8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c4a8                __DTOR_END__
                0x00000000c001c4ac                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001c4ac       0x14 
 .rodata        0x00000000c001c4c0      0x101 acpica/utclib.32
                0x00000000c001c4c0                AcpiGbl_Ctypes
 *fill*         0x00000000c001c5c1        0x3 
 .rodata        0x00000000c001c5c4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001c5dc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001c626       0x1a 
 .rodata        0x00000000c001c640       0xed fs/fat/ff.32
 *fill*         0x00000000c001c72d       0x13 
 .rodata        0x00000000c001c740      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001cb40       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001cb89      0x115 core/computer.32
 *fill*         0x00000000c001cc9e        0x2 
 .rodata.str1.4
                0x00000000c001cca0       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001cd08       0x2c core/computer.32
                0x00000000c001cd08                vtable for Computer
 .rodata.str1.4
                0x00000000c001cd34       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001cd64        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001cd70       0x17 core/main.32
 *fill*         0x00000000c001cd87        0x1 
 .rodata.str1.4
                0x00000000c001cd88       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001ce2d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001ce85       0x39 core/pipe.32
 *fill*         0x00000000c001cebe        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001cec0       0x1c core/pipe.32
                0x00000000c001cec0                vtable for Pipe
 .rodata.str1.1
                0x00000000c001cedc       0x69 core/terminal.32
 *fill*         0x00000000c001cf45        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001cf48       0x1c core/terminal.32
                0x00000000c001cf48                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001cf64       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001cf86       0x15 core/unixfile.32
 *fill*         0x00000000c001cf9b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001cf9c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001cfe7        0x8 core/unixfile.32
 *fill*         0x00000000c001cfef        0x1 
 .rodata.str1.4
                0x00000000c001cff0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d010       0x1c core/unixfile.32
                0x00000000c001d010                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001d02c       0x1c core/unixfile.32
                0x00000000c001d02c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001d048      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d1af      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d2b6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001d2e9       0x11 dbg/kconsole.32
 *fill*         0x00000000c001d2e9        0x3 
 .rodata        0x00000000c001d2ec      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001d43c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001d43c       0x68 fs/vfs.32
                0x00000000c001d43c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001d4a4       0x1c fs/vfs.32
                0x00000000c001d4a4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001d4c0       0x1c fs/vfs.32
                0x00000000c001d4c0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001d4dc       0x2c hal/bus.32
                0x00000000c001d4dc                vtable for Bus
 .rodata.str1.1
                0x00000000c001d508       0x1e hal/clock.32
 *fill*         0x00000000c001d526        0x2 
 .rodata._ZTV5Clock
                0x00000000c001d528       0x3c hal/clock.32
                0x00000000c001d528                vtable for Clock
 *fill*         0x00000000c001d564       0x1c 
 .rodata        0x00000000c001d580       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001d5b0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001d608       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001d608       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001d608       0x2c hal/device.32
                0x00000000c001d608                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001d634       0x2c hal/device.32
                0x00000000c001d634                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001d660       0x2c hal/diskctrl.32
                0x00000000c001d660                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001d68c       0x38 hal/diskphys.32
                0x00000000c001d68c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001d6c4       0x3e hal/intctrl.32
 *fill*         0x00000000c001d702        0x2 
 .rodata.str1.4
                0x00000000c001d704       0x5d hal/intctrl.32
 .rodata        0x00000000c001d761       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001d7b4       0x34 hal/keybrd.32
                0x00000000c001d7b4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001d7e8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001d82c       0x2c hal/logidisk.32
                0x00000000c001d82c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001d858       0x2c hal/mouse.32
                0x00000000c001d858                vtable for Mouse
 .rodata.str1.1
                0x00000000c001d884        0xb hal/partition.32
 *fill*         0x00000000c001d88f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001d890       0x44 hal/serial.32
                0x00000000c001d890                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001d8d4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001d8d4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001d8d4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001d8d4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001d8d4       0x30 hal/timer.32
                0x00000000c001d8d4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001d904       0x10 hal/vcache.32
                0x00000000c001d904                vtable for VCache
 .rodata.str1.1
                0x00000000c001d914       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001d97c       0x48 hal/video.32
                0x00000000c001d97c                vtable for Video
 .rodata.str1.4
                0x00000000c001d9c4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001da5f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001db9b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001db9b        0x8 hw/acpi.32
 *fill*         0x00000000c001db9b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001db9c       0x2c hw/acpi.32
                0x00000000c001db9c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001dbc8      0x180 hw/cpu.32
                                        0x184 (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c001dd48       0x2c hw/cpu.32
                0x00000000c001dd48                vtable for CPU
 .rodata.str1.1
                0x00000000c001dd74       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001ddb0       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 .rodata.str1.4
                0x00000000c001de50      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c001df8e       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001dfd3        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001dfdd       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001e031       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001e05d       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e0a5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001e271       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001e2c8      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e3d4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e3d4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e3d4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e3d4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001e3d4       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001e474       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001e4a4      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001e5b2        0x2 
 .rodata.str1.4
                0x00000000c001e5b4       0x4b arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001e5ff       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001e614       0x3c arch/i386/rtc.32
                0x00000000c001e614                vtable for RTC
 .rodata.str1.1
                0x00000000c001e650       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001e691        0x3 
 .rodata._ZTV3FAT
                0x00000000c001e694       0x68 fs/fat/vfslink.32
                0x00000000c001e694                vtable for FAT
 .rodata.str1.1
                0x00000000c001e6fc       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c001e717        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c001e718       0x68 fs/iso9660/vfslink.32
                0x00000000c001e718                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001e780       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001e7c4       0x34 hal/sound/sndcard.32
                0x00000000c001e7c4                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001e7f8       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e837       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e86f       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001e910       0x2c hw/bus/pci.32
                0x00000000c001e910                vtable for PCI
 .rodata.str1.1
                0x00000000c001e93c       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001e9c3        0x1 
 .rodata._ZTV3IDE
                0x00000000c001e9c4       0x2c hw/diskctrl/ide.32
                0x00000000c001e9c4                vtable for IDE
 .rodata.str1.4
                0x00000000c001e9f0       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001ea14       0x2c hw/diskctrl/satabus.32
                0x00000000c001ea14                vtable for SATABus
 .rodata.str1.1
                0x00000000c001ea40       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001ea52        0x2 
 .rodata._ZTV3ATA
                0x00000000c001ea54       0x38 hw/diskphys/ata.32
                0x00000000c001ea54                vtable for ATA
 .rodata.str1.1
                0x00000000c001ea8c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001ea99        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001ea9c       0x38 hw/diskphys/atapi.32
                0x00000000c001ea9c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001ead4       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001eb50       0x38 hw/diskphys/sata.32
                0x00000000c001eb50                vtable for SATA
 .rodata.str1.1
                0x00000000c001eb88      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c001ecba        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c001ecbc       0x38 hw/diskphys/satapi.32
                0x00000000c001ecbc                vtable for SATAPI
 .rodata        0x00000000c001ecf4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001ecfc       0x2c hw/intctrl/apic.32
                0x00000000c001ecfc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001ed28       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001ed43        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001ed44       0x30 hw/timer/apictimer.32
                0x00000000c001ed44                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001ed74       0x1d hw/timer/pit.32
 *fill*         0x00000000c001ed91        0x3 
 .rodata._ZTV3PIT
                0x00000000c001ed94       0x30 hw/timer/pit.32
                0x00000000c001ed94                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001edc4      0x271
 *(.data)
 .data          0x00000000c001edc4        0x0 crti.32
 .data          0x00000000c001edc4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001edc4                __dso_handle
 .data          0x00000000c001edc8        0x0 acpica/utclib.32
 .data          0x00000000c001edc8        0x0 core/malloc.32
 .data          0x00000000c001edc8        0x0 libk/string.32
 .data          0x00000000c001edc8        0x0 fs/fat/diskio.32
 .data          0x00000000c001edc8        0x0 fs/fat/ff.32
 .data          0x00000000c001edc8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001edc8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001edc8        0x0 compat/inlines.32
 .data          0x00000000c001edc8        0x0 compat/resolve.32
 .data          0x00000000c001edc8        0x0 core/computer.32
 .data          0x00000000c001edc8        0x0 core/gdt.32
 .data          0x00000000c001edc8        0x0 core/idle.32
 .data          0x00000000c001edc8        0x0 core/idt.32
 .data          0x00000000c001edc8        0x4 core/kheap.32
 *fill*         0x00000000c001edcc       0x14 
 .data          0x00000000c001ede0      0x142 core/main.32
                0x00000000c001ede0                titleScreen
 *fill*         0x00000000c001ef22        0x2 
 .data          0x00000000c001ef24        0x4 core/physmgr.32
                0x00000000c001ef24                Phys::bitmap
 .data          0x00000000c001ef28        0x0 core/pipe.32
 *fill*         0x00000000c001ef28       0x18 
 .data          0x00000000c001ef40       0x60 core/terminal.32
                0x00000000c001ef40                VgaText::hiddenOut
                0x00000000c001ef60                ansiToVGAMappings
 .data          0x00000000c001efa0        0x0 core/tss.32
 .data          0x00000000c001efa0        0x4 core/unixfile.32
                0x00000000c001efa0                UnixFile::nextFd
 .data          0x00000000c001efa4       0x15 core/virtmgr.32
                0x00000000c001efa4                Virt::pageAllocPtr
                0x00000000c001efa8                Virt::bitmap
                0x00000000c001efac                Virt::swapfileSectorsPerPage
                0x00000000c001efb0                Virt::swapfileLength
                0x00000000c001efb4                Virt::swapfileSector
                0x00000000c001efb8                Virt::swapfileDrive
 *fill*         0x00000000c001efb9        0x3 
 .data          0x00000000c001efbc        0x4 coreobjs/c++.32
                0x00000000c001efbc                __stack_chk_guard
 .data          0x00000000c001efc0        0x0 dbg/kconsole.32
 .data          0x00000000c001efc0        0x0 fs/vfs.32
 .data          0x00000000c001efc0        0x0 hal/bus.32
 .data          0x00000000c001efc0        0x0 hal/buzzer.32
 .data          0x00000000c001efc0        0x0 hal/clock.32
 .data          0x00000000c001efc0        0x0 hal/device.32
 .data          0x00000000c001efc0        0x0 hal/diskctrl.32
 .data          0x00000000c001efc0        0x0 hal/diskphys.32
 .data          0x00000000c001efc0        0x0 hal/fpu.32
 .data          0x00000000c001efc0        0x0 hal/intctrl.32
 .data          0x00000000c001efc0        0x0 hal/keybrd.32
 .data          0x00000000c001efc0        0x0 hal/logidisk.32
 .data          0x00000000c001efc0        0x0 hal/mouse.32
 .data          0x00000000c001efc0        0x0 hal/partition.32
 .data          0x00000000c001efc0        0x0 hal/serial.32
 .data          0x00000000c001efc0        0x0 hal/timer.32
 .data          0x00000000c001efc0        0x0 hal/vcache.32
 .data          0x00000000c001efc0        0x0 hal/video.32
 .data          0x00000000c001efc0       0x10 hw/acpi.32
                0x00000000c001efc0                legacyIRQRemaps
 .data          0x00000000c001efd0        0x4 hw/cpu.32
                0x00000000c001efd0                lastCode
 .data          0x00000000c001efd4        0x0 hw/smp.32
 *fill*         0x00000000c001efd4        0xc 
 .data          0x00000000c001efe0       0x4d krnl/env.32
                0x00000000c001efe0                defaultSysEnv
 .data          0x00000000c001f02d        0x0 krnl/panic.32
 .data          0x00000000c001f02d        0x0 krnl/powctrl.32
 .data          0x00000000c001f02d        0x0 reg/registry.32
 .data          0x00000000c001f02d        0x0 sys/sc_eject.32
 .data          0x00000000c001f02d        0x0 sys/sc_exit.32
 .data          0x00000000c001f02d        0x0 sys/sc_getcwd.32
 .data          0x00000000c001f02d        0x0 sys/sc_getpid.32
 .data          0x00000000c001f02d        0x0 sys/sc_getramdata.32
 .data          0x00000000c001f02d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001f02d        0x0 sys/sc_loaddll.32
 .data          0x00000000c001f02d        0x0 sys/sc_read.32
 .data          0x00000000c001f02d        0x0 sys/sc_sbrk.32
 .data          0x00000000c001f02d        0x0 sys/sc_setcwd.32
 .data          0x00000000c001f02d        0x0 sys/sc_settime.32
 .data          0x00000000c001f02d        0x0 sys/sc_timezone.32
 .data          0x00000000c001f02d        0x0 sys/sc_write.32
 .data          0x00000000c001f02d        0x0 sys/sc_wsbe.32
 .data          0x00000000c001f02d        0x0 sys/sc_yield.32
 .data          0x00000000c001f02d        0x0 sys/syscalls.32
 .data          0x00000000c001f02d        0x0 thr/elf.32
 *fill*         0x00000000c001f02d        0x3 
 .data          0x00000000c001f030        0x4 thr/prcssthr.32
                0x00000000c001f030                Thr::nextPID
 .data          0x00000000c001f034        0x0 vm86/vm8086.32
 .data          0x00000000c001f034        0x0 arch/i386/hal.32
 .data          0x00000000c001f034        0x0 arch/i386/pic.32
 .data          0x00000000c001f034        0x0 arch/i386/rtc.32
 .data          0x00000000c001f034        0x0 arch/i386/vga.32
 .data          0x00000000c001f034        0x0 fs/fat/vfslink.32
 .data          0x00000000c001f034        0x1 fs/iso9660/vfslink.32
                0x00000000c001f034                recentDriveletter
 .data          0x00000000c001f035        0x0 hal/sound/sndcard.32
 .data          0x00000000c001f035        0x0 hal/sound/sndport.32
 .data          0x00000000c001f035        0x0 hw/bus/isa.32
 .data          0x00000000c001f035        0x0 hw/bus/pci.32
 .data          0x00000000c001f035        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001f035        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001f035        0x0 hw/diskphys/ata.32
 .data          0x00000000c001f035        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001f035        0x0 hw/diskphys/sata.32
 .data          0x00000000c001f035        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001f035        0x0 hw/intctrl/apic.32
 .data          0x00000000c001f035        0x0 hw/timer/apictimer.32
 .data          0x00000000c001f035        0x0 hw/timer/pit.32
 .data          0x00000000c001f035        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001f035        0x0 crtn.32
 .data          0x00000000c001f035        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001f035        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001f035        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001f035        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001f038        0x0
 .got           0x00000000c001f038        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001f038        0x0
 .got.plt       0x00000000c001f038        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001f038        0x0
 .igot.plt      0x00000000c001f038        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001f038        0x0
 .tm_clone_table
                0x00000000c001f038        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001f038        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001f035      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001f035        0x3 
 .eh_frame      0x00000000c001f038        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001f038        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001f038       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001f090       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001f0d0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001f13c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001f1c0        0x0
 .rel.got       0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001f1c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001f1c0     0x4368
                0x00000000c001f1c0                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c001f1c0        0x0 crti.32
 .bss           0x00000000c001f1c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001f1e0        0x4 acpica/utclib.32
 *fill*         0x00000000c001f1e4       0x1c 
 .bss           0x00000000c001f200      0x378 core/malloc.32
 .bss           0x00000000c001f578        0x0 libk/string.32
 .bss           0x00000000c001f578        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001f578        0x8 
 .bss           0x00000000c001f580       0x88 fs/fat/ff.32
 .bss           0x00000000c001f608        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001f608        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c001f608        0x0 compat/inlines.32
 .bss           0x00000000c001f608        0x0 compat/resolve.32
 .bss           0x00000000c001f608        0x6 core/computer.32
                0x00000000c001f608                Krnl::computer
                0x00000000c001f60c                Krnl::preemptionOn
                0x00000000c001f60d                Krnl::schedulingOn
 *fill*         0x00000000c001f60e        0x2 
 .bss           0x00000000c001f610        0x6 core/gdt.32
                0x00000000c001f610                gdtDescr
 .bss           0x00000000c001f616        0x0 core/idle.32
 *fill*         0x00000000c001f616        0x2 
 .bss           0x00000000c001f618        0x6 core/idt.32
                0x00000000c001f618                idtDescr
 .bss           0x00000000c001f61e        0x0 core/kheap.32
 *fill*         0x00000000c001f61e        0x2 
 .bss           0x00000000c001f620        0x4 core/main.32
                0x00000000c001f620                sysBootSettings
 .bss           0x00000000c001f624       0x29 core/physmgr.32
                0x00000000c001f624                Phys::forbidEvictions
                0x00000000c001f628                Phys::currentPagePointer
                0x00000000c001f62c                Phys::highestMem
                0x00000000c001f630                Phys::oldPercent
                0x00000000c001f634                Phys::usedPages
                0x00000000c001f638                Phys::usablePages
                0x00000000c001f63c                Phys::dmaUsage
 .bss           0x00000000c001f64d        0x0 core/pipe.32
 *fill*         0x00000000c001f64d        0x3 
 .bss           0x00000000c001f650        0x9 core/terminal.32
                0x00000000c001f650                terminalCycle
                0x00000000c001f654                activeTerminal
                0x00000000c001f658                VgaText::graphicMode
 *fill*         0x00000000c001f659        0x1 
 .bss           0x00000000c001f65a        0x2 core/tss.32
                0x00000000c001f65a                doubleFaultSelector
 *fill*         0x00000000c001f65c        0x4 
 .bss           0x00000000c001f660       0x84 core/unixfile.32
                0x00000000c001f660                sfileLpt
                0x00000000c001f6a0                sfileCom
                0x00000000c001f6c4                sfileNul
                0x00000000c001f6c8                sfilePnt
                0x00000000c001f6cc                sfileAux
                0x00000000c001f6d0                sfileCon
                0x00000000c001f6d4                initialFilesAdded
                0x00000000c001f6d8                unixFileLinkedList
 .bss           0x00000000c001f6e4       0x14 core/virtmgr.32
                0x00000000c001f6e4                twswaps
                0x00000000c001f6e8                swapBalance
                0x00000000c001f6ec                panicVAS
                0x00000000c001f6f0                Virt::swapfileBitmap
                0x00000000c001f6f4                firstVAS
 .bss           0x00000000c001f6f8        0x0 coreobjs/c++.32
 .bss           0x00000000c001f6f8        0x0 dbg/kconsole.32
 .bss           0x00000000c001f6f8        0x4 fs/vfs.32
                0x00000000c001f6f8                installedFilesystems
 .bss           0x00000000c001f6fc        0x0 hal/bus.32
 .bss           0x00000000c001f6fc        0x0 hal/buzzer.32
 .bss           0x00000000c001f6fc        0x8 hal/clock.32
                0x00000000c001f6fc                User::dstOn
                0x00000000c001f6fd                User::timezoneHalfHourOffset
                0x00000000c001f700                User::timezoneHourOffset
 .bss           0x00000000c001f704        0x0 hal/device.32
 .bss           0x00000000c001f704        0x0 hal/diskctrl.32
 .bss           0x00000000c001f704        0x0 hal/diskphys.32
 .bss           0x00000000c001f704        0x0 hal/fpu.32
 *fill*         0x00000000c001f704       0x1c 
 .bss           0x00000000c001f720     0x2000 hal/intctrl.32
                0x00000000c001f720                INT_contexts
                0x00000000c0020720                INT_handlers
 .bss           0x00000000c0021720      0x429 hal/keybrd.32
                0x00000000c0021720                keyboardWaitingTaskList
                0x00000000c0021724                keyboardSetupYet
                0x00000000c0021728                guiKeyboardHandler
                0x00000000c0021740                keystates
 *fill*         0x00000000c0021b49       0x17 
 .bss           0x00000000c0021b60       0x88 hal/logidisk.32
                0x00000000c0021b60                diskAssignments
                0x00000000c0021b80                disks
 .bss           0x00000000c0021be8        0x4 hal/mouse.32
                0x00000000c0021be8                guiMouseHandler
 .bss           0x00000000c0021bec        0x0 hal/partition.32
 .bss           0x00000000c0021bec        0x0 hal/serial.32
 .bss           0x00000000c0021bec        0x4 hal/timer.32
                0x00000000c0021bec                milliTenthsSinceBoot
 .bss           0x00000000c0021bf0        0x0 hal/vcache.32
 .bss           0x00000000c0021bf0        0x4 hal/video.32
                0x00000000c0021bf0                screen
 *fill*         0x00000000c0021bf4        0xc 
 .bss           0x00000000c0021c00      0x480 hw/acpi.32
                0x00000000c0021c00                systemSleepFunction
                0x00000000c0021c04                systemResetFunction
                0x00000000c0021c08                systemShutdownFunction
                0x00000000c0021c0c                nextACPITable
                0x00000000c0021c20                acpiTables
                0x00000000c0021e20                usingXSDT
                0x00000000c0021e24                MADTpointer
                0x00000000c0021e28                RSDTpointer
                0x00000000c0021e2c                RSDPpointer
                0x00000000c0021e30                nextAPICNMI
                0x00000000c0021e40                apicNMIInfo
                0x00000000c0021ec0                legacyIRQFlags
                0x00000000c0021ee0                ioapicDiscoveryNumber
                0x00000000c0021f00                ioapicFoundInMADT
                0x00000000c0021f20                ioapicAddresses
                0x00000000c0021fa0                ioapicGSIBase
                0x00000000c0022020                processorDiscoveryNumber
                0x00000000c0022040                matchingAPICID
                0x00000000c0022060                processorID
 .bss           0x00000000c0022080       0x10 hw/cpu.32
                0x00000000c0022080                lastD
                0x00000000c0022084                lastC
                0x00000000c0022088                lastB
                0x00000000c002208c                lastA
 .bss           0x00000000c0022090        0x1 hw/smp.32
                0x00000000c0022090                Krnl::bspID
 *fill*         0x00000000c0022091        0x3 
 .bss           0x00000000c0022094        0x8 krnl/env.32
                0x00000000c0022094                Krnl::userEnv
                0x00000000c0022098                Krnl::systemEnv
 .bss           0x00000000c002209c        0x9 krnl/panic.32
                0x00000000c002209c                Krnl::guiProgramFaultHandler
                0x00000000c00220a0                Krnl::guiPanicHandler
                0x00000000c00220a4                Krnl::kernelInPanic
 *fill*         0x00000000c00220a5       0x1b 
 .bss           0x00000000c00220c0       0x48 krnl/powctrl.32
                0x00000000c00220c0                Krnl::powCtrlOnBattery
                0x00000000c00220e0                Krnl::currentPowerSettings
                0x00000000c0022104                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0022108        0x0 reg/registry.32
 .bss           0x00000000c0022108        0x0 sys/sc_eject.32
 .bss           0x00000000c0022108        0x0 sys/sc_exit.32
 .bss           0x00000000c0022108        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0022108        0x0 sys/sc_getpid.32
 .bss           0x00000000c0022108        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0022108        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0022108        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0022108        0x0 sys/sc_read.32
 .bss           0x00000000c0022108        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0022108        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0022108        0x0 sys/sc_settime.32
 .bss           0x00000000c0022108        0x0 sys/sc_timezone.32
 .bss           0x00000000c0022108        0x0 sys/sc_write.32
 .bss           0x00000000c0022108        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0022108        0x0 sys/sc_yield.32
 *fill*         0x00000000c0022108       0x18 
 .bss           0x00000000c0022120      0x200 sys/syscalls.32
                0x00000000c0022120                systemCallHandlers
 .bss           0x00000000c0022320      0x7a4 thr/elf.32
                0x00000000c0022320                Thr::driverLookupNext
                0x00000000c0022340                Thr::driverLookupLen
                0x00000000c0022540                Thr::driverLookupAddr
                0x00000000c0022740                Thr::driverNameLookup
                0x00000000c0022940                Thr::kernelSymbols
                0x00000000c00229c0                Thr::kernelStringTable
                0x00000000c0022a40                Thr::kernelSymbolTable
                0x00000000c0022ac0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0022ac4        0x4 
 .bss           0x00000000c0022ac8       0x68 thr/prcssthr.32
                0x00000000c0022ac8                cleanerThread
                0x00000000c0022acc                weNeedTheCleanerToNotBlock
                0x00000000c0022ad0                retValLockStuff
                0x00000000c0022ad4                retValSchedLock
                0x00000000c0022ad8                lockStuffLock
                0x00000000c0022adc                schedulerLock
                0x00000000c0022ae0                taskSwitchesPostponedFlag
                0x00000000c0022ae4                postponeTaskSwitchesCounter
                0x00000000c0022ae8                irqDisableCounter
                0x00000000c0022aec                terminatedTaskList
                0x00000000c0022af8                sleepingTaskList
                0x00000000c0022b04                taskList
                0x00000000c0022b10                kernelProcess
 *fill*         0x00000000c0022b30       0x10 
 .bss           0x00000000c0022b40       0x40 vm86/vm8086.32
                0x00000000c0022b40                Vm::vmRetV
                0x00000000c0022b44                Vm::vmDone
                0x00000000c0022b45                Vm::vmReady
                0x00000000c0022b48                Vm::vm86Thread
                0x00000000c0022b4c                Vm::vmToHostCommsPtr
                0x00000000c0022b60                Vm::vmToHostComms
 .bss           0x00000000c0022b80       0x18 arch/i386/hal.32
                0x00000000c0022b80                Hal::apic
                0x00000000c0022b84                fpuOwner
                0x00000000c0022b88                coproLoadFunc
                0x00000000c0022b8c                coproSaveFunc
                0x00000000c0022b90                _i386_HAL_tscFunction
                0x00000000c0022b94                gpFaultIntercept
 .bss           0x00000000c0022b98        0x0 arch/i386/pic.32
 .bss           0x00000000c0022b98        0x2 arch/i386/rtc.32
 .bss           0x00000000c0022b9a        0x0 arch/i386/vga.32
 *fill*         0x00000000c0022b9a        0x6 
 .bss           0x00000000c0022ba0       0xf0 fs/fat/vfslink.32
                0x00000000c0022ba0                FAT::fats
                0x00000000c0022bc0                FAT::vfsToFatRemaps
                0x00000000c0022c40                fatToVFSRemaps
 *fill*         0x00000000c0022c90       0x10 
 .bss           0x00000000c0022ca0      0x820 fs/iso9660/vfslink.32
                0x00000000c0022ca0                recentSector
                0x00000000c0022cc0                recentBuffer
 .bss           0x00000000c00234c0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00234c0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00234c0        0x0 hw/bus/isa.32
 .bss           0x00000000c00234c0        0xd hw/bus/pci.32
                0x00000000c00234c0                thePCI
 .bss           0x00000000c00234cd        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00234cd        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00234cd        0x3 
 .bss           0x00000000c00234d0        0x8 hw/diskphys/ata.32
                0x00000000c00234d0                ataSectorsWritten
                0x00000000c00234d4                ataSectorsRead
 .bss           0x00000000c00234d8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00234d8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00234d8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c00234d8        0x8 
 .bss           0x00000000c00234e0       0x41 hw/intctrl/apic.32
                0x00000000c00234e0                noOfIOAPICs
                0x00000000c0023500                ioapics
                0x00000000c0023520                IOAPICsSetupYet
 .bss           0x00000000c0023521        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0023521        0x3 
 .bss           0x00000000c0023524        0x4 hw/timer/pit.32
                0x00000000c0023524                pitFreq
 .bss           0x00000000c0023528        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0023528        0x0 crtn.32
 .bss           0x00000000c0023528        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0023528        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0023528        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0023528        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0023528                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0027890                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
