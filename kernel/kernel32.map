Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c7da
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0x2 
 .text          0x00000000c00003a4      0x5dd acpica/utclib.32
                0x00000000c00003a4                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004a8                memset
                0x00000000c00004c4                strlen
                0x00000000c00004dc                strpbrk
                0x00000000c0000518                strtok
                0x00000000c0000564                strcpy
                0x00000000c0000588                strncpy
                0x00000000c00005f0                strcmp
                0x00000000c0000630                strchr
                0x00000000c0000654                strncmp
                0x00000000c00006a4                strcat
                0x00000000c00006d4                strncat
                0x00000000c0000710                strstr
                0x00000000c0000758                toupper
                0x00000000c000076c                tolower
                0x00000000c0000780                simple_strtoul
 .text          0x00000000c0000981      0xfad core/malloc.32
                0x00000000c0000aec                dlfree
                0x00000000c0000e47                dlmalloc
                0x00000000c0001384                dlrealloc
                0x00000000c0001527                dlmemalign
                0x00000000c000164a                dlcalloc
                0x00000000c00016e4                dlcfree
                0x00000000c00016e9                dlindependent_calloc
                0x00000000c000170e                dlindependent_comalloc
                0x00000000c0001725                dlvalloc
                0x00000000c0001750                dlpvalloc
                0x00000000c0001786                dlmalloc_trim
                0x00000000c0001793                dlmalloc_usable_size
                0x00000000c00017c4                dlmallinfo
                0x00000000c0001893                dlmalloc_stats
                0x00000000c00018a4                dlmallopt
 .text          0x00000000c000192e        0x0 libk/string.32
 .text          0x00000000c000192e       0x51 fs/fat/diskio.32
                0x00000000c000192e                disk_status
                0x00000000c0001931                disk_initialize
                0x00000000c0001934                disk_read
                0x00000000c000194a                disk_write
                0x00000000c0001960                disk_ioctl
 .text          0x00000000c000197f     0x3d4c fs/fat/ff.32
                0x00000000c000371c                f_mount
                0x00000000c000377e                f_open
                0x00000000c0003a49                f_read
                0x00000000c0003c48                f_write
                0x00000000c0003e7c                f_sync
                0x00000000c0003f31                f_close
                0x00000000c0003f60                f_lseek
                0x00000000c0004107                f_opendir
                0x00000000c00041d2                f_closedir
                0x00000000c00041f4                f_readdir
                0x00000000c0004286                f_stat
                0x00000000c0004305                f_getfree
                0x00000000c0004407                f_truncate
                0x00000000c00044eb                f_unlink
                0x00000000c000460d                f_mkdir
                0x00000000c00047a8                f_rename
                0x00000000c000495e                f_chmod
                0x00000000c0004a07                f_utime
                0x00000000c0004ab5                f_getlabel
                0x00000000c0004c06                f_setlabel
                0x00000000c0004d96                f_expand
                0x00000000c0004ef6                f_mkfs
 *fill*         0x00000000c00056cb        0x1 
 .text          0x00000000c00056cc       0x2f fs/fat/ffsystem.32
                0x00000000c00056cc                ff_memalloc
                0x00000000c00056e4                ff_memfree
 *fill*         0x00000000c00056fb        0x1 
 .text          0x00000000c00056fc      0x274 fs/fat/ffunicode.32
                0x00000000c00056fc                ff_uni2oem
                0x00000000c0005794                ff_oem2uni
                0x00000000c0005808                ff_wtoupper
 .text          0x00000000c0005970       0xa7 compat/inlines.32
                0x00000000c0005970                CPU::current()
                0x00000000c000597c                operator new(unsigned long)
                0x00000000c0005981                operator delete(void*)
                0x00000000c0005986                disableIRQs()
                0x00000000c000598e                enableIRQs()
                0x00000000c000599d                lockScheduler()
                0x00000000c00059a5                unlockScheduler()
                0x00000000c00059b4                lockStuff()
                0x00000000c00059c2                unlockStuff()
                0x00000000c00059fc                Virt::getAKernelVAS()
                0x00000000c0005a02                __not_memcpy
 *fill*         0x00000000c0005a17        0x1 
 .text          0x00000000c0005a18      0x118 compat/resolve.32
                0x00000000c0005a18                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0005b30      0x76b core/computer.32
                0x00000000c0005b30                Computer::close(int, int, void*)
                0x00000000c0005b74                Krnl::firstTask()
                0x00000000c0005cbc                Computer::Computer()
                0x00000000c0005cbc                Computer::Computer()
                0x00000000c0005e18                Computer::setBootMessage(char const*)
                0x00000000c0005e1a                Computer::detectFeatures()
                0x00000000c0006024                Computer::displayFeatures()
                0x00000000c0006026                Computer::rdmsr(unsigned int)
                0x00000000c0006052                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000608a                Computer::shutdown()
                0x00000000c00060a2                Computer::restart()
                0x00000000c00060ba                Computer::sleep()
                0x00000000c00060ce                Computer::nmiEnabled()
                0x00000000c00060da                Computer::readCMOS(unsigned char)
                0x00000000c00060f4                Computer::enableNMI(bool)
                0x00000000c000610c                Computer::open(int, int, void*)
                0x00000000c00061de                Computer::disableNMI()
                0x00000000c00061ec                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000620a                Computer::handleNMI()
                0x00000000c0006270                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000629b        0x1 
 .text          0x00000000c000629c      0x211 core/gdt.32
                0x00000000c000629c                GDTEntry::setBase(unsigned int)
                0x00000000c00062b8                GDTEntry::setLimit(unsigned int)
                0x00000000c00062d6                GDT::GDT()
                0x00000000c00062d6                GDT::GDT()
                0x00000000c00062ec                GDT::addEntry(GDTEntry)
                0x00000000c000630e                GDT::getNumberOfEntries()
                0x00000000c0006316                GDT::flush()
                0x00000000c0006338                GDT::setup()
 .text          0x00000000c00064ad       0x19 core/idle.32
                0x00000000c00064ad                idleFunction(void*)
 *fill*         0x00000000c00064c6        0x2 
 .text          0x00000000c00064c8      0x464 core/idt.32
                0x00000000c00064c8                IDTEntry::IDTEntry(bool)
                0x00000000c00064c8                IDTEntry::IDTEntry(bool)
                0x00000000c000653a                IDTEntry::setOffset(unsigned int)
                0x00000000c0006550                IDT::IDT()
                0x00000000c0006550                IDT::IDT()
                0x00000000c0006552                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000655a                IDT::addEntry(IDTEntry, int)
                0x00000000c0006574                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00065ac                IDT::flush()
                0x00000000c00065c6                IDT::setup()
 .text          0x00000000c000692c      0x183 core/kheap.32
                0x00000000c000692c                sbrk
                0x00000000c00069c1                mmap
                0x00000000c00069d7                munmap
                0x00000000c00069ed                liballoc_lock()
                0x00000000c00069fa                liballoc_unlock()
                0x00000000c0006a0e                liballoc_alloc(int)
                0x00000000c0006a26                liballoc_free(void*, int)
                0x00000000c0006a41                realloc
                0x00000000c0006a55                malloc
                0x00000000c0006a65                free
                0x00000000c0006a75                rfree
                0x00000000c0006a85                calloc
 .text          0x00000000c0006aaf      0x1b3 core/main.32
                0x00000000c0006aaf                Krnl::setBootMessage(char const*)
                0x00000000c0006b1b                kernel_main
 .text          0x00000000c0006c62      0x5ce core/physmgr.32
                0x00000000c0006c62                Phys::allocateDMA(unsigned long)
                0x00000000c0006d39                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0006d6c                Phys::setPageState(unsigned long, bool)
                0x00000000c0006d9e                Phys::getPageState(unsigned long)
                0x00000000c0006dba                Phys::freePage(unsigned long)
                0x00000000c0006e1c                Phys::allocatePage()
                0x00000000c0006ed9                Phys::allocateContiguousPages(int)
                0x00000000c0006f35                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0006f6d                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007230      0x273 core/pipe.32
                0x00000000c0007230                Pipe::isAtty()
                0x00000000c0007234                Pipe::~Pipe()
                0x00000000c0007234                Pipe::~Pipe()
                0x00000000c0007258                Pipe::~Pipe()
                0x00000000c0007280                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007340                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000743c                Pipe::Pipe(int)
                0x00000000c000743c                Pipe::Pipe(int)
 *fill*         0x00000000c00074a3        0x1 
 .text          0x00000000c00074a4      0xa1a core/terminal.32
                0x00000000c00074a4                VgaText::isAtty()
                0x00000000c00074a8                VgaText::~VgaText()
                0x00000000c00074a8                VgaText::~VgaText()
                0x00000000c00074cc                VgaText::~VgaText()
                0x00000000c00074f6                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0007516                setTerminalScrollLock(bool)
                0x00000000c0007517                doTerminalCycle()
                0x00000000c0007518                addToTerminalCycle(VgaText*)
                0x00000000c0007519                scrollTerminalScrollLock(int)
                0x00000000c000751a                VgaText::updateTitle()
                0x00000000c000751c                VgaText::load()
                0x00000000c000751e                VgaText::updateCursor()
                0x00000000c0007534                VgaText::doANSI_SGR(int)
                0x00000000c00075a8                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00075b8                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00075c8                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00075e8                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00075f4                VgaText::setTitleColour(VgaColour)
                0x00000000c0007600                VgaText::setTitle(char*)
                0x00000000c0007602                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0007614                VgaText::scrollScreen()
                0x00000000c00076ac                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00076be                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000774e                VgaText::getCursorX()
                0x00000000c0007756                VgaText::getCursorY()
                0x00000000c000775e                VgaText::setCursor(int, int)
                0x00000000c0007775                setActiveTerminal(VgaText*)
                0x00000000c00077c0                VgaText::clearScreen()
                0x00000000c000780e                VgaText::setCursorX(int)
                0x00000000c0007826                VgaText::setCursorY(int)
                0x00000000c000783e                VgaText::incrementCursor(bool)
                0x00000000c0007892                VgaText::decrementCursor(bool)
                0x00000000c00078b4                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0007982                VgaText::putchar(char)
                0x00000000c0007a6e                VgaText::putx(unsigned int)
                0x00000000c0007ab4                VgaText::puts(char const*)
                0x00000000c0007ada                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0007b26                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0007c74                VgaText::VgaText(char const*)
                0x00000000c0007c74                VgaText::VgaText(char const*)
                0x00000000c0007dc0                VgaText::receiveKey(unsigned char)
                0x00000000c0007e98                VgaText::doUpdate()
                0x00000000c0007e99                newTerminal(char*)
 *fill*         0x00000000c0007ebe        0x2 
 .text          0x00000000c0007ec0      0x1a1 core/tss.32
                0x00000000c0007ec0                TSS::TSS()
                0x00000000c0007ec0                TSS::TSS()
                0x00000000c0007ed0                TSS::setESP(unsigned long)
                0x00000000c0007ee4                TSS::flush()
                0x00000000c0007f04                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008061        0x1 
 .text          0x00000000c0008062      0x4c2 core/unixfile.32
                0x00000000c0008062                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00080b8                ReservedFilename::isAtty()
                0x00000000c00080d4                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008132                UnixFile::getFileDescriptor()
                0x00000000c000813a                UnixFile::UnixFile(int)
                0x00000000c000813a                UnixFile::UnixFile(int)
                0x00000000c00082ea                ReservedFilename::ReservedFilename(int)
                0x00000000c00082ea                ReservedFilename::ReservedFilename(int)
                0x00000000c000831c                UnixFile::~UnixFile()
                0x00000000c000831c                UnixFile::~UnixFile()
                0x00000000c00083b4                UnixFile::~UnixFile()
                0x00000000c00083dc                ReservedFilename::~ReservedFilename()
                0x00000000c00083dc                ReservedFilename::~ReservedFilename()
                0x00000000c0008400                ReservedFilename::~ReservedFilename()
                0x00000000c0008427                getFromFileDescriptor(int)
 .text          0x00000000c0008524     0x118a core/virtmgr.32
                0x00000000c0008524                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0008559                Virt::getPageState(unsigned long)
                0x00000000c000857d                Virt::allocateKernelVirtualPages(int)
                0x00000000c000868e                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00086ac                Virt::swapIDToSector(unsigned long)
                0x00000000c00086be                Virt::allocateSwapfilePage()
                0x00000000c000873c                Virt::virtualMemorySetup()
                0x00000000c0008787                Virt::setupPageSwapping(int)
                0x00000000c00087f8                VAS::VAS(VAS*)
                0x00000000c00087f8                VAS::VAS(VAS*)
                0x00000000c0008826                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0008852                VAS::getPageTableEntry(unsigned long)
                0x00000000c0008871                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0008994                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00089b8                VAS::virtualToPhysical(unsigned long)
                0x00000000c00089d0                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0008a10                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0008a42                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0008a6c                VAS::~VAS()
                0x00000000c0008a6c                VAS::~VAS()
                0x00000000c0008bd0                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0008cd4                VAS::allocatePages(int, int)
                0x00000000c0008eac                VAS::setCPUSpecific(unsigned long)
                0x00000000c0008ec8                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0008f8e                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000907c                VAS::VAS(bool)
                0x00000000c000907c                VAS::VAS(bool)
                0x00000000c00092fc                VAS::VAS()
                0x00000000c00092fc                VAS::VAS()
                0x00000000c000936c                VAS::evict(unsigned long)
                0x00000000c000942a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0009516                VAS::scanForEviction()
                0x00000000c00095f4                mapVASFirstTime
 .text          0x00000000c00096ae       0x5f coreobjs/c++.32
                0x00000000c00096ae                __cxa_atexit
                0x00000000c00096b1                __cxa_finalize
                0x00000000c00096b2                __stack_chk_fail
                0x00000000c00096e8                __cxa_pure_virtual
                0x00000000c00096f9                operator new[](unsigned long)
                0x00000000c00096fe                operator delete(void*, unsigned long)
                0x00000000c0009703                operator delete[](void*)
                0x00000000c0009708                operator delete[](void*, unsigned long)
 .text          0x00000000c000970d      0x1fc dbg/kconsole.32
                0x00000000c000970d                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0009766                Dbg::logc(char)
                0x00000000c0009786                Dbg::logs(char*)
                0x00000000c00097a3                Dbg::logWriteInt(unsigned int)
                0x00000000c00097c0                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c00097df                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c0009909        0x1 
 .text          0x00000000c000990a      0xc50 fs/vfs.32
                0x00000000c000990a                File::read(unsigned long long, void*, int*)
                0x00000000c0009962                File::write(unsigned long long, void*, int*)
                0x00000000c00099ba                Directory::read(unsigned long long, void*, int*)
                0x00000000c0009a12                Directory::write(unsigned long long, void*, int*)
                0x00000000c0009a40                File::isAtty()
                0x00000000c0009a44                Directory::isAtty()
                0x00000000c0009a48                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0009a4e                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0009a54                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0009a5a                File::~File()
                0x00000000c0009a5a                File::~File()
                0x00000000c0009a7e                File::~File()
                0x00000000c0009aa8                Directory::~Directory()
                0x00000000c0009aa8                Directory::~Directory()
                0x00000000c0009acc                Directory::~Directory()
                0x00000000c0009af6                Filesystem::Filesystem()
                0x00000000c0009af6                Filesystem::Filesystem()
                0x00000000c0009b1a                Filesystem::~Filesystem()
                0x00000000c0009b1a                Filesystem::~Filesystem()
                0x00000000c0009b28                Filesystem::~Filesystem()
                0x00000000c0009b4c                Fs::getcwd(Process*, char*, int)
                0x00000000c0009b76                Fs::initVFS()
                0x00000000c0009ba0                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c0009d4a                File::File(char const*, Process*)
                0x00000000c0009d4a                File::File(char const*, Process*)
                0x00000000c0009e04                File::open(FileOpenMode)
                0x00000000c0009e62                File::close()
                0x00000000c0009ec2                File::seek(unsigned long long)
                0x00000000c0009f18                File::tell(unsigned long long*)
                0x00000000c0009f68                File::rewind()
                0x00000000c0009f7c                File::unlink()
                0x00000000c0009fc8                File::rename(char const*)
                0x00000000c000a016                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000a072                File::exists()
                0x00000000c000a0b0                File::stat(unsigned long long*, bool*)
                0x00000000c000a111                Fs::setcwd(Process*, char*)
                0x00000000c000a26e                Directory::Directory(char const*, Process*)
                0x00000000c000a26e                Directory::Directory(char const*, Process*)
                0x00000000c000a328                Directory::open()
                0x00000000c000a384                Directory::close()
                0x00000000c000a3e4                Directory::unlink()
                0x00000000c000a430                Directory::rename(char const*)
                0x00000000c000a47e                Directory::exists()
                0x00000000c000a4bc                Directory::read(dirent*)
                0x00000000c000a508                Directory::create()
                0x00000000c000a554                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000a55a        0x2 
 .text          0x00000000c000a55c       0x86 hal/bus.32
                0x00000000c000a55c                Bus::Bus(char const*)
                0x00000000c000a55c                Bus::Bus(char const*)
                0x00000000c000a594                Bus::~Bus()
                0x00000000c000a594                Bus::~Bus()
                0x00000000c000a5b8                Bus::~Bus()
 .text          0x00000000c000a5e2       0x96 hal/buzzer.32
                0x00000000c000a5e2                beepThread(void*)
                0x00000000c000a61f                Krnl::beep(int, int, bool)
 .text          0x00000000c000a678      0x467 hal/clock.32
                0x00000000c000a678                User::loadClockSettings(int)
                0x00000000c000a6ca                Clock::Clock(char const*)
                0x00000000c000a6ca                Clock::Clock(char const*)
                0x00000000c000a700                Clock::~Clock()
                0x00000000c000a700                Clock::~Clock()
                0x00000000c000a724                Clock::~Clock()
                0x00000000c000a74e                Clock::timeInSecondsLocal()
                0x00000000c000a796                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000a7ef                datetimeToSeconds(datetime_t)
                0x00000000c000a916                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000a976                secondsToDatetime(unsigned long long)
                0x00000000c000aaba                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000aadf        0x1 
 .text          0x00000000c000aae0      0x464 hal/device.32
                0x00000000c000aae0                Device::hibernate()
                0x00000000c000aae2                Device::wake()
                0x00000000c000aae4                Device::detect()
                0x00000000c000aae6                Device::disableLegacy()
                0x00000000c000aae8                Device::powerSaving(PowerSavingLevel)
                0x00000000c000aaea                DriverlessDevice::close(int, int, void*)
                0x00000000c000aaee                DriverlessDevice::detect()
                0x00000000c000aaf0                DriverlessDevice::open(int, int, void*)
                0x00000000c000ab04                Device::~Device()
                0x00000000c000ab04                Device::~Device()
                0x00000000c000ab12                Device::~Device()
                0x00000000c000ab3a                Device::findAndLoadDriver()
                0x00000000c000ab48                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000ab6e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000abae                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000abd8                Device::getParent()
                0x00000000c000abe4                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ac02                Device::addChild(Device*)
                0x00000000c000ac46                Device::removeAllChildren()
                0x00000000c000ac8c                Device::hibernateAll()
                0x00000000c000acbc                Device::wakeAll()
                0x00000000c000acec                Device::detectAll()
                0x00000000c000ad1c                Device::disableLegacyAll()
                0x00000000c000ad1e                Device::loadDriversForAll()
                0x00000000c000ad20                Device::closeAll()
                0x00000000c000ad56                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000ad8c                Device::setName(char const*)
                0x00000000c000ad9a                Device::Device(char const*)
                0x00000000c000ad9a                Device::Device(char const*)
                0x00000000c000ae96                Device::getName()
                0x00000000c000aea0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000aea0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000aed6                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000af1a                getDevicesOfType(DeviceType)
 .text          0x00000000c000af44       0x86 hal/diskctrl.32
                0x00000000c000af44                HardDiskController::HardDiskController(char const*)
                0x00000000c000af44                HardDiskController::HardDiskController(char const*)
                0x00000000c000af7c                HardDiskController::~HardDiskController()
                0x00000000c000af7c                HardDiskController::~HardDiskController()
                0x00000000c000afa0                HardDiskController::~HardDiskController()
 .text          0x00000000c000afca       0xe2 hal/diskphys.32
                0x00000000c000afca                PhysicalDisk::eject()
                0x00000000c000afce                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000afce                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b036                PhysicalDisk::startCache()
                0x00000000c000b05e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b05e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b082                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000b0ac        0x0 hal/fpu.32
 .text          0x00000000c000b0ac      0x34c hal/intctrl.32
                0x00000000c000b0ac                int_handler
                0x00000000c000b134                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000b17c                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b2a7                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000b2db                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b359                setupINTS()
                0x00000000c000b3b6                convertLegacyIRQNumber(int)
 .text          0x00000000c000b3f8      0x778 hal/keybrd.32
                0x00000000c000b3f8                startGUI(void*)
                0x00000000c000b464                startGUIVESA(void*)
                0x00000000c000b4d0                sendKeyToTerminal(unsigned char)
                0x00000000c000b58e                sendKeyboardToken(KeyboardToken)
                0x00000000c000b9c0                clearInternalKeybuffer(VgaText*)
                0x00000000c000b9f5                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000bae6                Keyboard::Keyboard(char const*)
                0x00000000c000bae6                Keyboard::Keyboard(char const*)
                0x00000000c000bb22                Keyboard::~Keyboard()
                0x00000000c000bb22                Keyboard::~Keyboard()
                0x00000000c000bb46                Keyboard::~Keyboard()
 .text          0x00000000c000bb70      0x3ea hal/logidisk.32
                0x00000000c000bb70                LogicalDisk::close(int, int, void*)
                0x00000000c000bb74                LogicalDisk::~LogicalDisk()
                0x00000000c000bb74                LogicalDisk::~LogicalDisk()
                0x00000000c000bb98                LogicalDisk::~LogicalDisk()
                0x00000000c000bbc2                LogicalDisk::open(int, int, void*)
                0x00000000c000bbd6                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000bc0e                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000bc54                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bc54                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bd0a                LogicalDisk::assignDriveLetter()
                0x00000000c000bdc0                LogicalDisk::mount()
                0x00000000c000be08                LogicalDisk::unmount()
                0x00000000c000be18                LogicalDisk::eject()
                0x00000000c000be2c                LogicalDisk::unassignDriveLetter()
                0x00000000c000be82                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000beee                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000bf5a        0x2 
 .text          0x00000000c000bf5c       0x86 hal/mouse.32
                0x00000000c000bf5c                Mouse::Mouse(char const*)
                0x00000000c000bf5c                Mouse::Mouse(char const*)
                0x00000000c000bf94                Mouse::~Mouse()
                0x00000000c000bf94                Mouse::~Mouse()
                0x00000000c000bfb8                Mouse::~Mouse()
 .text          0x00000000c000bfe2      0x339 hal/partition.32
                0x00000000c000bfe2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c08a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000c31b        0x1 
 .text          0x00000000c000c31c       0x86 hal/serial.32
                0x00000000c000c31c                Serial::Serial(char const*)
                0x00000000c000c31c                Serial::Serial(char const*)
                0x00000000c000c354                Serial::~Serial()
                0x00000000c000c354                Serial::~Serial()
                0x00000000c000c378                Serial::~Serial()
 *fill*         0x00000000c000c3a2        0x2 
 .text          0x00000000c000c3a4      0x234 hal/timer.32
                0x00000000c000c3a4                Timer::Timer(char const*)
                0x00000000c000c3a4                Timer::Timer(char const*)
                0x00000000c000c3dc                Timer::~Timer()
                0x00000000c000c3dc                Timer::~Timer()
                0x00000000c000c400                Timer::~Timer()
                0x00000000c000c42a                Timer::read()
                0x00000000c000c435                setupTimer(int)
                0x00000000c000c470                timerHandler(unsigned int)
 .text          0x00000000c000c5d8      0x43e hal/vcache.32
                0x00000000c000c5d8                VCache::VCache(PhysicalDisk*)
                0x00000000c000c5d8                VCache::VCache(PhysicalDisk*)
                0x00000000c000c740                VCache::invalidateReadBuffer()
                0x00000000c000c750                VCache::writeWriteBuffer()
                0x00000000c000c79c                VCache::~VCache()
                0x00000000c000c79c                VCache::~VCache()
                0x00000000c000c7f0                VCache::~VCache()
                0x00000000c000c818                VCache::write(unsigned long long, int, void*)
                0x00000000c000c912                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ca16      0x4b3 hal/video.32
                0x00000000c000ca16                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ca62                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000cad2                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000cb50                Video::clearScreen(unsigned int)
                0x00000000c000cb84                Video::putpixel(int, int, unsigned int)
                0x00000000c000cb92                Video::Video(char const*)
                0x00000000c000cb92                Video::Video(char const*)
                0x00000000c000cbc8                Video::~Video()
                0x00000000c000cbc8                Video::~Video()
                0x00000000c000cbec                Video::~Video()
                0x00000000c000cc16                Video::isMonochrome()
                0x00000000c000cc22                Video::getWidth()
                0x00000000c000cc2e                Video::getHeight()
                0x00000000c000cc3a                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000ccf6                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ce5e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000cec9        0x3 
 .text          0x00000000c000cecc     0x12bf hw/acpi.32
                0x00000000c000cecc                ACPI::close(int, int, void*)
                0x00000000c000cf80                findRSDP()
                0x00000000c000d010                loadACPITables(unsigned char*)
                0x00000000c000d274                findRSDT(unsigned char*)
                0x00000000c000d3c4                findDataTable(unsigned char*, char*)
                0x00000000c000d43c                scanMADT()
                0x00000000c000d8d8                ACPI::ACPI()
                0x00000000c000d8d8                ACPI::ACPI()
                0x00000000c000d92c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000da14                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000dadc                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000dae4                ACPI::detectPCI()
                0x00000000c000dcec                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000dd34                ACPI::sleep()
                0x00000000c000dd50                ACPI::open(int, int, void*)
 *fill*         0x00000000c000e18b        0x1 
 .text          0x00000000c000e18c      0xda3 hw/cpu.32
                0x00000000c000e18c                CPU::close(int, int, void*)
                0x00000000c000e190                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000e1ac                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000e1c4                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000e238                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000e2bc                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000e2ea                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000e318                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000e346                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000e374                CPU::CPU()
                0x00000000c000e374                CPU::CPU()
                0x00000000c000e402                CPU::displayFeatures()
                0x00000000c000e404                CPU::detectFeatures()
                0x00000000c000eada                CPU::setupSMEP()
                0x00000000c000eae6                CPU::setupUMIP()
                0x00000000c000eaf0                CPU::setupTSC()
                0x00000000c000eafa                CPU::setupLargePages()
                0x00000000c000eb04                CPU::setupPAT()
                0x00000000c000eb40                CPU::setupMTRR()
                0x00000000c000eb42                CPU::setupGlobalPages()
                0x00000000c000eb4c                CPU::allowUsermodeDataAccess()
                0x00000000c000eb5e                CPU::prohibitUsermodeDataAccess()
                0x00000000c000eb70                CPU::setupSMAP()
                0x00000000c000eb7e                CPU::setupFeatures()
                0x00000000c000ec4a                CPU::open(int, int, void*)
                0x00000000c000ed34                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c000ef2f        0x4 hw/smp.32
                0x00000000c000ef2f                Krnl::smpEntry()
                0x00000000c000ef31                Krnl::startCPU(int)
                0x00000000c000ef32                Krnl::startCPUs()
 *fill*         0x00000000c000ef33        0x1 
 .text          0x00000000c000ef34      0x581 krnl/env.32
                0x00000000c000ef34                EnvVarContainer::getEnv(char const*)
                0x00000000c000ef72                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000f034                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000f036                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000f21c                EnvVarContainer::__loadSystem()
                0x00000000c000f236                EnvVarContainer::__loadUser()
                0x00000000c000f238                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f238                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f25a                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f25a                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f28a                Krnl::getEnv(Process*, char const*)
                0x00000000c000f2ef                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000f309                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000f328                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000f33b                Krnl::deleteEnvSystem(char const*)
                0x00000000c000f33c                Krnl::deleteEnvUser(char const*)
                0x00000000c000f33d                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000f33e                Krnl::newProcessEnv(Process*)
                0x00000000c000f360                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000f3ac                Krnl::loadSystemEnv()
                0x00000000c000f3da                Krnl::loadUserEnv()
                0x00000000c000f400                Krnl::flushEnv()
                0x00000000c000f401                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000f421                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c000f4b5      0x25b krnl/panic.32
                0x00000000c000f4b5                Krnl::panic(char const*)
 .text          0x00000000c000f710      0x168 krnl/powctrl.32
                0x00000000c000f710                Krnl::powerThread(void*)
                0x00000000c000f764                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c000f77a                Krnl::userIOReceived()
                0x00000000c000f785                Krnl::handlePowerButton()
                0x00000000c000f7ba                Krnl::handleSleepButton()
                0x00000000c000f7ef                Krnl::setupPowerManager()
 .text          0x00000000c000f878      0x50e reg/registry.32
                0x00000000c000f878                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c000f9d0                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c000fb25                Reg::getLine(char*, char*, char*)
                0x00000000c000fb5c                Reg::readInt(char*, char*, int*)
                0x00000000c000fc47                Reg::readString(char*, char*, char*, int)
                0x00000000c000fcc8                Reg::readBool(char*, char*, bool*)
                0x00000000c000fced                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c000fd19                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c000fd45                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c000fd86       0x36 sys/sc_eject.32
                0x00000000c000fd86                Sys::eject(regs*)
 .text          0x00000000c000fdbc       0x18 sys/sc_exit.32
                0x00000000c000fdbc                Sys::exit(regs*)
 .text          0x00000000c000fdd4       0x1f sys/sc_getcwd.32
                0x00000000c000fdd4                Sys::getCwd(regs*)
 .text          0x00000000c000fdf3        0xc sys/sc_getpid.32
                0x00000000c000fdf3                Sys::getPID(regs*)
 .text          0x00000000c000fdff       0x1a sys/sc_getramdata.32
                0x00000000c000fdff                Sys::getRAMData(regs*)
 .text          0x00000000c000fe19       0x82 sys/sc_getvgaptr.32
                0x00000000c000fe19                Sys::getVGAPtr(regs*)
 .text          0x00000000c000fe9b       0xa8 sys/sc_loaddll.32
                0x00000000c000fe9b                Sys::loadDLL(regs*)
 .text          0x00000000c000ff43       0x68 sys/sc_read.32
                0x00000000c000ff43                Sys::read(regs*)
 .text          0x00000000c000ffab       0x55 sys/sc_sbrk.32
                0x00000000c000ffab                Sys::sbrk(regs*)
 .text          0x00000000c0010000       0x1c sys/sc_setcwd.32
                0x00000000c0010000                Sys::setCwd(regs*)
 .text          0x00000000c001001c       0x95 sys/sc_settime.32
                0x00000000c001001c                Sys::setTime(regs*)
 .text          0x00000000c00100b1       0x4a sys/sc_timezone.32
                0x00000000c00100b1                Sys::timezone(regs*)
 .text          0x00000000c00100fb       0x68 sys/sc_write.32
                0x00000000c00100fb                Sys::write(regs*)
 .text          0x00000000c0010163       0x62 sys/sc_wsbe.32
                0x00000000c0010163                Sys::wsbe(regs*)
 .text          0x00000000c00101c5       0x25 sys/sc_yield.32
                0x00000000c00101c5                Sys::yield(regs*)
 .text          0x00000000c00101ea      0xdf5 sys/syscalls.32
                0x00000000c00101ea                sysCallSeekDir(regs*)
                0x00000000c00101ef                sysCallTellDir(regs*)
                0x00000000c00101f4                sysCallVerify(regs*)
                0x00000000c00101fe                sysCallGetArgc(regs*)
                0x00000000c001020e                sysCallTTYName(regs*)
                0x00000000c0010216                sysFormatDisk(regs*)
                0x00000000c0010280                sysSetDiskVolumeLabel(regs*)
                0x00000000c00102ca                sysGetDiskVolumeLabel(regs*)
                0x00000000c001031f                sysShutdown(regs*)
                0x00000000c001037d                sysCallRealpath(regs*)
                0x00000000c00103c0                sysCallReadDir(regs*)
                0x00000000c001043f                sysCallIsATTY(regs*)
                0x00000000c0010499                sysCallSeek(regs*)
                0x00000000c00104f0                sysCallTell(regs*)
                0x00000000c001055c                sysCallSize(regs*)
                0x00000000c00105ce                sysCallSizeFromFilename(regs*)
                0x00000000c001067d                sysCallClose(regs*)
                0x00000000c00106dd                sysCallOpenDir(regs*)
                0x00000000c0010752                sysCallCloseDir(regs*)
                0x00000000c00107a6                sysCallMakeDir(regs*)
                0x00000000c0010816                sysCallWait(regs*)
                0x00000000c0010830                sysCallNotImpl(regs*)
                0x00000000c001084b                sysPanic(regs*)
                0x00000000c0010865                sysCallRmdir(regs*)
                0x00000000c00108c9                sysCallUnlink(regs*)
                0x00000000c001092d                sysCallGetArgv(regs*)
                0x00000000c0010979                sysCallUSleep(regs*)
                0x00000000c00109a2                sysCallSpawn(regs*)
                0x00000000c0010a0a                sysCallGetEnv(regs*)
                0x00000000c0010ab7                sysSetFatAttrib(regs*)
                0x00000000c0010b29                sysPipe(regs*)
                0x00000000c0010b6e                sysGetUnixTime(regs*)
                0x00000000c0010b82                string_ends_with(char const*, char const*)
                0x00000000c0010bca                sysCallOpen(regs*)
                0x00000000c0010db2                Sys::loadSyscalls()
                0x00000000c0010f9d                Sys::systemCall(regs*, void*)
 .text          0x00000000c0010fdf     0x11e5 thr/elf.32
                0x00000000c0010fdf                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001126b                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0011481                Thr::runtimeReferenceHelper()
                0x00000000c0011494                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00114e3                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00117a1                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0011ed7                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0011f09                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0011f40                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0011f5a                Thr::loadDLL(char const*, bool)
                0x00000000c001218b                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00121c4     0x12a1 thr/prcssthr.32
                0x00000000c00121c4                userModeEntryPoint(void*)
                0x00000000c00121ec                changeTSS
                0x00000000c001221c                switchToThread(ThreadControlBlock*)
                0x00000000c00122c8                Process::addArgs(char**)
                0x00000000c0012328                Process::Process(char const*, Process*, char**)
                0x00000000c0012328                Process::Process(char const*, Process*, char**)
                0x00000000c0012514                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0012514                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00126cc                taskStartupFunction
                0x00000000c00126d8                Semaphore::Semaphore(int)
                0x00000000c00126d8                Semaphore::Semaphore(int)
                0x00000000c0012708                Mutex::Mutex()
                0x00000000c0012708                Mutex::Mutex()
                0x00000000c001271c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0012814                Process::createUserThread()
                0x00000000c0012830                setupMultitasking(void (*)())
                0x00000000c0012938                schedule()
                0x00000000c00129c4                Semaphore::tryAcquire()
                0x00000000c0012a90                Semaphore::assertLocked(char const*)
                0x00000000c0012b08                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0012b30                blockTask(TaskState)
                0x00000000c0012b60                waitTask(int, int*, int)
                0x00000000c0012ba4                milliTenthSleepUntil(unsigned int)
                0x00000000c0012c30                milliTenthSleep(unsigned int)
                0x00000000c0012c40                sleep(unsigned int)
                0x00000000c0012c5c                Semaphore::acquire()
                0x00000000c0012d18                taskReturned
                0x00000000c0012d54                Thr::processFromPID(int)
                0x00000000c0012df4                unblockTask(ThreadControlBlock*)
                0x00000000c0012e98                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0013160                cleanerTaskFunction(void*)
                0x00000000c0013250                terminateTask(int)
                0x00000000c001331c                Thr::terminateFromIRQ(int)
                0x00000000c0013328                Semaphore::release()
 .text          0x00000000c0013465      0xb93 vm86/vm8086.32
                0x00000000c0013465                Vm::inbv(unsigned short)
                0x00000000c0013478                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00134ae                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00134be                Vm::getSegment(unsigned int)
                0x00000000c00134c6                Vm::getOffset(unsigned int)
                0x00000000c00134cb                Vm::mainloop2()
                0x00000000c0013505                Vm::mainVm8086Loop(void*)
                0x00000000c0013515                Vm::mainloop3(unsigned long)
                0x00000000c001353b                Vm::initialise8086()
                0x00000000c001357e                Vm::finish8086()
                0x00000000c00135df                Vm::getOutput8086(unsigned char*)
                0x00000000c0013604                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00136bd                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0013825                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00138af                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00138c0                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00138d2                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00138e3                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00138f8                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001390e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0013923                Vm::faultHandler(regs*)
 .text          0x00000000c0013ff8      0xfcd vm86/x87em.32
                0x00000000c0013ff8                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c0014056                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c001405f                Vm::fpu32ToInternal(unsigned int)
                0x00000000c00140a4                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c00140ad                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c001410c                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c0014148                Vm::fpuLongToFloat(long long)
                0x00000000c00141a7                Vm::fpuGet0()
                0x00000000c00141ac                Vm::fpuGet1()
                0x00000000c00141b4                Vm::fpuGetPi()
                0x00000000c00141bc                Vm::fpuGetLog2E()
                0x00000000c00141d4                Vm::fpuGetLogE2()
                0x00000000c00141ec                Vm::fpuGetLog210()
                0x00000000c0014204                Vm::fpuGetLog102()
                0x00000000c001421c                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c0014230                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c0014246                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c001429c                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c00142ad                Vm::fpuAbs(unsigned long long)
                0x00000000c00142b6                Vm::fpuChs(unsigned long long)
                0x00000000c00142c6                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c00142d5                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c00142f4                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c0014310                Vm::fpuSquare(unsigned long long)
                0x00000000c0014326                Vm::fpuGetReg(int)
                0x00000000c0014369                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c00143b5                Vm::fpuPush(unsigned long long)
                0x00000000c0014413                Vm::fpuPop()
                0x00000000c0014466                Vm::x87Handler(regs*)
 .text          0x00000000c0014fc5      0x8e8 arch/i386/hal.32
                0x00000000c0014fc5                Hal::noCopro(unsigned long)
                0x00000000c0014fc6                Hal::noTSC()
                0x00000000c0014fcb                Hal::readTSC()
                0x00000000c0014fce                nmiHandler(regs*, void*)
                0x00000000c0014fe7                doubleFault(regs*, void*)
                0x00000000c0015000                displayDebugInfo(regs*)
                0x00000000c0015321                displayProgramFault(char const*)
                0x00000000c001536d                gpFault(regs*, void*)
                0x00000000c00153d2                pgFault(regs*, void*)
                0x00000000c0015434                otherISRHandler(regs*, void*)
                0x00000000c0015468                opcodeFault(regs*, void*)
                0x00000000c00154e8                i386SaveCoprocessor(void*)
                0x00000000c00154fc                i386LoadCoprocessor(void*)
                0x00000000c0015510                x87EmulHandler(regs*, void*)
                0x00000000c00155c3                Hal::initialiseCoprocessor()
                0x00000000c0015671                Hal::panic(char const*)
                0x00000000c0015676                Hal::initialise()
                0x00000000c001583f                Hal::makeBeep(int)
                0x00000000c0015879                Hal::getRand()
                0x00000000c001587c                Hal::endOfInterrupt(int)
 *fill*         0x00000000c00158ad        0x3 
 .text          0x00000000c00158b0      0x2dc arch/i386/pic.32
                0x00000000c00158b0                picIoWait()
                0x00000000c00158b8                picDisable()
                0x00000000c00158ec                picGetIRQReg(int)
                0x00000000c0015968                picOpen()
                0x00000000c0015aec                picEOI(int)
 .text          0x00000000c0015b8c      0x64a arch/i386/rtc.32
                0x00000000c0015b8c                RTC::open(int, int, void*)
                0x00000000c0015b90                RTC::close(int, int, void*)
                0x00000000c0015b94                RTC::timeInSecondsUTC()
                0x00000000c0015ba6                RTC::timeInDatetimeUTC()
                0x00000000c0015bcc                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015c0a                RTC::~RTC()
                0x00000000c0015c0a                RTC::~RTC()
                0x00000000c0015c2e                RTC::~RTC()
                0x00000000c0015c58                RTC::get_update_in_progress_flag()
                0x00000000c0015c70                RTC::completeRTCRefresh()
                0x00000000c0015f28                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00160db                rtcIRQHandler(regs*, void*)
                0x00000000c0016120                RTC::RTC()
                0x00000000c0016120                RTC::RTC()
 *fill*         0x00000000c00161d6        0x2 
 .text          0x00000000c00161d8      0x1f7 arch/i386/vga.32
                0x00000000c00161d8                Hal::consoleScroll(int, int)
                0x00000000c00162e0                Hal::consoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016344                Hal::consoleCursorUpdate(int, int)
 *fill*         0x00000000c00163cf        0x1 
 .text          0x00000000c00163d0     0x13a7 fs/fat/vfslink.32
                0x00000000c00163d0                FAT::getName()
                0x00000000c00163d8                FAT::tell(void*, unsigned long long*)
                0x00000000c0016414                FAT::stat(void*, unsigned long long*)
                0x00000000c0016450                FAT::~FAT()
                0x00000000c0016450                FAT::~FAT()
                0x00000000c0016474                FAT::~FAT()
                0x00000000c001649c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016540                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0016604                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00167d8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00169f0                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016bb0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016d1c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016d7c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016ddc                FAT::close(void*)
                0x00000000c0016e30                FAT::closeDir(void*)
                0x00000000c0016e84                FAT::seek(void*, unsigned long long)
                0x00000000c0016edc                fatWrapperReadDisk
                0x00000000c0016f1c                fatWrapperWriteDisk
                0x00000000c0016f5c                fatWrapperIoctl
                0x00000000c0017068                FAT::FAT()
                0x00000000c0017068                FAT::FAT()
                0x00000000c00170bc                FAT::fixFilepath(char*)
                0x00000000c00170f8                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001722c                FAT::openDir(char const*, void**)
                0x00000000c00172dc                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00173d4                FAT::unlink(char const*)
                0x00000000c0017454                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00175bc                FAT::rename(char const*, char const*)
                0x00000000c0017688                FAT::mkdir(char const*)
                0x00000000c0017708                FAT::exists(char const*)
 *fill*         0x00000000c0017777        0x1 
 .text          0x00000000c0017778      0xba7 fs/iso9660/vfslink.32
                0x00000000c0017778                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001777e                ISO9660::seek(void*, unsigned long long)
                0x00000000c00177ae                ISO9660::tell(void*, unsigned long long*)
                0x00000000c00177d2                ISO9660::getName()
                0x00000000c00177d8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00177fc                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017802                ISO9660::unlink(char const*)
                0x00000000c0017808                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001780e                ISO9660::rename(char const*, char const*)
                0x00000000c0017814                ISO9660::mkdir(char const*)
                0x00000000c001781a                ISO9660::close(void*)
                0x00000000c001783c                ISO9660::closeDir(void*)
                0x00000000c001785e                ISO9660::~ISO9660()
                0x00000000c001785e                ISO9660::~ISO9660()
                0x00000000c0017882                ISO9660::~ISO9660()
                0x00000000c00178a9                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c00178eb                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017966                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c00179c6                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017bca                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017e44                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0017e98                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001806e                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c00180fc                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00181aa                ISO9660::exists(char const*)
                0x00000000c00181ce                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018262                ISO9660::openDir(char const*, void**)
                0x00000000c00182fc                ISO9660::ISO9660()
                0x00000000c00182fc                ISO9660::ISO9660()
 *fill*         0x00000000c001831f        0x1 
 .text          0x00000000c0018320      0x26c hal/sound/sndcard.32
                0x00000000c0018320                SoundCard::beginPlayback()
                0x00000000c001832e                SoundCard::stopPlayback()
                0x00000000c001833c                SoundCard::SoundCard(char const*)
                0x00000000c001833c                SoundCard::SoundCard(char const*)
                0x00000000c00183da                SoundCard::~SoundCard()
                0x00000000c00183da                SoundCard::~SoundCard()
                0x00000000c00183fe                SoundCard::~SoundCard()
                0x00000000c0018428                SoundCard::configureRates(int, int, int)
                0x00000000c0018458                SoundCard::getSamples16(int, short*)
                0x00000000c00184b4                SoundCard::getSamples32(int, int*)
                0x00000000c001853a                SoundCard::addChannel(SoundPort*)
                0x00000000c0018578                SoundCard::removeChannel(int)
 .text          0x00000000c001858c      0x377 hal/sound/sndport.32
                0x00000000c001858c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001858c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018618                SoundPort::~SoundPort()
                0x00000000c0018618                SoundPort::~SoundPort()
                0x00000000c001864c                SoundPort::unpause()
                0x00000000c0018658                SoundPort::pause()
                0x00000000c0018664                SoundPort::getBufferUsed()
                0x00000000c001866c                SoundPort::getBufferSize()
                0x00000000c0018674                SoundPort::buffer16(short*, int)
                0x00000000c0018700                SoundPort::buffer32(int*, int)
                0x00000000c0018788                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001884c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0018903        0x0 hw/bus/isa.32
 *fill*         0x00000000c0018903        0x1 
 .text          0x00000000c0018904      0xb43 hw/bus/pci.32
                0x00000000c0018904                PCI::open(int, int, void*)
                0x00000000c0018922                PCI::close(int, int, void*)
                0x00000000c0018926                PCI::PCI()
                0x00000000c0018926                PCI::PCI()
                0x00000000c00189bc                PCI::readBAR8(unsigned int, int)
                0x00000000c00189d8                PCI::readBAR16(unsigned int, int)
                0x00000000c00189f6                PCI::readBAR32(unsigned int, int)
                0x00000000c0018a12                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0018a32                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0018a54                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0018a74                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018ae2                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018b8a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018bae                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0018bd6                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018c20                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0018c48                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018c6c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018c90                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018cb8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018d1c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018e04                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001907e                PCI::checkBus(unsigned char)
                0x00000000c00190a2                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0019214                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0019388                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c00193f4                PCI::detect()
 *fill*         0x00000000c0019447        0x1 
 .text          0x00000000c0019448      0xb4a hw/diskctrl/ide.32
                0x00000000c0019448                IDE::close(int, int, void*)
                0x00000000c001944c                IDE::IDE()
                0x00000000c001944c                IDE::IDE()
                0x00000000c0019480                IDE::prepareInterrupt(unsigned char)
                0x00000000c0019492                selectDrive(unsigned char, unsigned char)
                0x00000000c0019494                IDE::getBase(unsigned char)
                0x00000000c00194a6                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0019566                IDE::read(unsigned char, unsigned char)
                0x00000000c0019614                IDE::waitInterrupt(unsigned char)
                0x00000000c0019676                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0019692                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00196ae                IDE::enableIRQs(unsigned char, bool)
                0x00000000c00196f4                IDE::open(int, int, void*)
                0x00000000c0019b02                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0019bce                IDE::detect()
                0x00000000c0019e8e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019f3e                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019f92      0x320 hw/diskctrl/satabus.32
                0x00000000c0019f92                SATABus::close(int, int, void*)
                0x00000000c0019f96                SATABus::detect()
                0x00000000c0019f98                SATABus::SATABus()
                0x00000000c0019f98                SATABus::SATABus()
                0x00000000c001a01e                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001a050                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001a098                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001a0b8                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001a0e2                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001a1e8                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001a292                SATABus::open(int, int, void*)
 .text          0x00000000c001a2b2      0x5f4 hw/diskphys/ata.32
                0x00000000c001a2b2                ATA::close(int, int, void*)
                0x00000000c001a2d6                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001a2d8                ATA::ATA()
                0x00000000c001a2d8                ATA::ATA()
                0x00000000c001a306                ATA::flush(bool)
                0x00000000c001a350                ATA::readyForCommand()
                0x00000000c001a39c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a718                ATA::read(unsigned long long, int, void*)
                0x00000000c001a764                ATA::write(unsigned long long, int, void*)
                0x00000000c001a7b0                ATA::detectCHS()
                0x00000000c001a7da                ATA::open(int, int, void*)
 .text          0x00000000c001a8a6      0x613 hw/diskphys/atapi.32
                0x00000000c001a8a6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a8ac                ATAPI::close(int, int, void*)
                0x00000000c001a8d0                ATAPI::ATAPI()
                0x00000000c001a8d0                ATAPI::ATAPI()
                0x00000000c001a8fe                ATAPI::readyForCommand()
                0x00000000c001a950                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001ac10                ATAPI::diskRemoved()
                0x00000000c001ac4a                ATAPI::eject()
                0x00000000c001ac92                ATAPI::diskInserted()
                0x00000000c001ac9e                ATAPI::detectMedia()
                0x00000000c001ad5a                ATAPI::open(int, int, void*)
                0x00000000c001ae3a                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001aeb9        0x1 
 .text          0x00000000c001aeba      0x402 hw/diskphys/sata.32
                0x00000000c001aeba                SATA::close(int, int, void*)
                0x00000000c001aede                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001aee0                SATA::open(int, int, void*)
                0x00000000c001af8a                SATA::SATA()
                0x00000000c001af8a                SATA::SATA()
                0x00000000c001afb8                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001b204                SATA::read(unsigned long long, int, void*)
                0x00000000c001b250                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001b2bc      0x642 hw/diskphys/satapi.32
                0x00000000c001b2bc                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001b2c2                SATAPI::close(int, int, void*)
                0x00000000c001b2e6                SATAPI::SATAPI()
                0x00000000c001b2e6                SATAPI::SATAPI()
                0x00000000c001b314                SATAPI::diskRemoved()
                0x00000000c001b316                SATAPI::diskInserted()
                0x00000000c001b332                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b5c0                SATAPI::eject()
                0x00000000c001b5fc                SATAPI::detectMedia()
                0x00000000c001b726                SATAPI::open(int, int, void*)
                0x00000000c001b826                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001b8fe      0x42d hw/intctrl/apic.32
                0x00000000c001b8fe                IOAPIC::close(int, int, void*)
                0x00000000c001b904                apicGetBase()
                0x00000000c001b946                IOAPIC::IOAPIC()
                0x00000000c001b946                IOAPIC::IOAPIC()
                0x00000000c001b96e                apicOpen()
                0x00000000c001bac8                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001bafa                IOAPIC::read(int)
                0x00000000c001bb22                IOAPIC::open(int, int, void*)
                0x00000000c001bc06                IOAPIC::write(int, int)
                0x00000000c001bc32                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001bd2b        0x1 
 .text          0x00000000c001bd2c       0xf0 hw/timer/apictimer.32
                0x00000000c001bd2c                APICTimer::close(int, int, void*)
                0x00000000c001bd34                apicTimerHandler(regs*, void*)
                0x00000000c001bd5c                APICTimer::open(int, int, void*)
                0x00000000c001bdcc                APICTimer::write(int)
                0x00000000c001bdf4                APICTimer::APICTimer()
                0x00000000c001bdf4                APICTimer::APICTimer()
 .text          0x00000000c001be1c      0x1a3 hw/timer/pit.32
                0x00000000c001be1c                PIT::write(int)
                0x00000000c001be9c                pitHandler(regs*, void*)
                0x00000000c001bec0                PIT::open(int, int, void*)
                0x00000000c001bf10                PIT::close(int, int, void*)
                0x00000000c001bf40                PIT::PIT()
                0x00000000c001bf40                PIT::PIT()
 *fill*         0x00000000c001bfbf        0x1 
 .text          0x00000000c001bfc0       0x83 arch/i386/avx.32
                0x00000000c001bfc0                avxDetect
                0x00000000c001bfea                avxSave
                0x00000000c001bffb                avxLoad
                0x00000000c001c00c                avxInit
                0x00000000c001c02e                avxClose
                0x00000000c001c02f                wouldSheSayYes
 *fill*         0x00000000c001c043        0xd 
 .text          0x00000000c001c050      0x1d6 arch/i386/interrupt.32
                0x00000000c001c050                isr0
                0x00000000c001c060                isr1
                0x00000000c001c06a                isr2
                0x00000000c001c074                isr3
                0x00000000c001c07e                isr4
                0x00000000c001c088                isr5
                0x00000000c001c092                isr6
                0x00000000c001c09c                isr7
                0x00000000c001c0a6                isr8
                0x00000000c001c0ae                isr9
                0x00000000c001c0b8                isr10
                0x00000000c001c0c0                isr11
                0x00000000c001c0c8                isr12
                0x00000000c001c0d0                isr13
                0x00000000c001c0d8                isr14
                0x00000000c001c0e0                isr15
                0x00000000c001c0ea                isr16
                0x00000000c001c0f4                isr17
                0x00000000c001c0fe                isr18
                0x00000000c001c108                irq3
                0x00000000c001c112                irq4
                0x00000000c001c11c                irq5
                0x00000000c001c126                irq6
                0x00000000c001c130                irq7
                0x00000000c001c13a                irq8
                0x00000000c001c144                irq9
                0x00000000c001c14e                irq10
                0x00000000c001c158                irq11
                0x00000000c001c162                irq12
                0x00000000c001c16c                irq13
                0x00000000c001c176                irq14
                0x00000000c001c180                irq15
                0x00000000c001c18a                irq1
                0x00000000c001c191                irq2
                0x00000000c001c198                isr96
                0x00000000c001c19f                irq0
                0x00000000c001c1a4                int_common_stub
                0x00000000c001c1a4                syscall_common_stub
                0x00000000c001c1d6                irq16
                0x00000000c001c1e0                irq17
                0x00000000c001c1ea                irq18
                0x00000000c001c1f4                irq19
                0x00000000c001c1fe                irq20
                0x00000000c001c208                irq21
                0x00000000c001c212                irq22
                0x00000000c001c21c                irq23
 *fill*         0x00000000c001c226        0xa 
 .text          0x00000000c001c230       0x10 arch/i386/rdrand.32
                0x00000000c001c230                i386GetRDRAND
 .text          0x00000000c001c240       0x39 arch/i386/sse.32
                0x00000000c001c240                absolutelyNoChanceInHell
                0x00000000c001c240                sseDetect
                0x00000000c001c258                sseSave
                0x00000000c001c260                sseLoad
                0x00000000c001c268                sseInit
                0x00000000c001c278                sseClose
 *fill*         0x00000000c001c279        0x7 
 .text          0x00000000c001c280       0x49 arch/i386/x87.32
                0x00000000c001c286                x87Detect
                0x00000000c001c2a1                x87Save
                0x00000000c001c2a8                x87Load
                0x00000000c001c2af                x87Init
                0x00000000c001c2c8                x87Close
 *fill*         0x00000000c001c2c9        0x3 
 .text          0x00000000c001c2cc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001c2f1        0x0 crtn.32
 *fill*         0x00000000c001c2f1        0x3 
 .text          0x00000000c001c2f4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001c2f4                __divdi3
 *fill*         0x00000000c001c43f        0x1 
 .text          0x00000000c001c440      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c440                __moddi3
 *fill*         0x00000000c001c5be        0x2 
 .text          0x00000000c001c5c0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c5c0                __udivdi3
 *fill*         0x00000000c001c6bf        0x1 
 .text          0x00000000c001c6c0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c6c0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c7e0        0x0
 .iplt          0x00000000c001c7e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c7da        0xf
 .init          0x00000000c001c7da        0x3 crti.32
                0x00000000c001c7da                _init
 .init          0x00000000c001c7dd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c7e2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c7e7        0x2 crtn.32

.fini           0x00000000c001c7e9        0xa
 .fini          0x00000000c001c7e9        0x3 crti.32
                0x00000000c001c7e9                _fini
 .fini          0x00000000c001c7ec        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c7f1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c7f4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c7f4       0x23 core/computer.32
                0x00000000c001c7f4                Computer::~Computer()
                0x00000000c001c7f4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c818       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c818       0x2a core/computer.32
                0x00000000c001c818                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c842       0x21
 .text._Z10idleCommonv
                0x00000000c001c842       0x21 core/idle.32
                0x00000000c001c842                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c864        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c864        0x2 core/unixfile.32
                0x00000000c001c864                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c864                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c866       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c866       0x42 core/unixfile.32
                0x00000000c001c866                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c866                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c8a8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c8a8       0xd3 core/unixfile.32
                0x00000000c001c8a8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c97c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c97c        0x7 core/unixfile.32
                0x00000000c001c97c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c984       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c984       0xa1 core/unixfile.32
                0x00000000c001c984                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ca26        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ca26        0x8 core/unixfile.32
                0x00000000c001ca26                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ca2e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ca2e       0x1a hal/device.32
                0x00000000c001ca2e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ca2e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ca48       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ca48       0x2a hal/device.32
                0x00000000c001ca48                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ca72       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ca72       0xdc hal/device.32
                0x00000000c001ca72                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001cb4e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001cb4e       0x42 hal/device.32
                0x00000000c001cb4e                LinkedList<Device>::LinkedList()
                0x00000000c001cb4e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001cb90       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001cb90       0x1c hal/timer.32
                0x00000000c001cb90                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001cbac        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001cbac        0x7 hal/timer.32
                0x00000000c001cbac                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001cbb4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001cbb4       0xb8 hal/timer.32
                0x00000000c001cbb4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001cc6c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001cc6c       0xda hal/timer.32
                0x00000000c001cc6c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001cd48       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001cd48       0x23 hw/acpi.32
                0x00000000c001cd48                ACPI::~ACPI()
                0x00000000c001cd48                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001cd6c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001cd6c       0x2a hw/acpi.32
                0x00000000c001cd6c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001cd98        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001cd98        0x2 hw/acpi.32
                0x00000000c001cd98                LinkedList<Device>::~LinkedList()
                0x00000000c001cd98                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001cd9c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001cd9c       0x1c hw/acpi.32
                0x00000000c001cd9c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001cdb8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001cdb8        0x7 hw/acpi.32
                0x00000000c001cdb8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001cdc0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001cdc0       0xb8 hw/acpi.32
                0x00000000c001cdc0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ce78       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ce78       0x23 hw/cpu.32
                0x00000000c001ce78                CPU::~CPU()
                0x00000000c001ce78                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ce9c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ce9c       0x2a hw/cpu.32
                0x00000000c001ce9c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cec8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cec8        0x2 thr/prcssthr.32
                0x00000000c001cec8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001cec8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cecc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cecc       0x49 thr/prcssthr.32
                0x00000000c001cecc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001cecc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cf18       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cf18       0x42 thr/prcssthr.32
                0x00000000c001cf18                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001cf18                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cf5c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cf5c        0x8 thr/prcssthr.32
                0x00000000c001cf5c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c001cf64        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c001cf64        0xd vm86/x87em.32
                0x00000000c001cf64                Vm::_FPUState::_FPUState()
                0x00000000c001cf64                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c001cf72       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cf72       0x23 hw/bus/pci.32
                0x00000000c001cf72                PCI::~PCI()
                0x00000000c001cf72                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cf96       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cf96       0x2a hw/bus/pci.32
                0x00000000c001cf96                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cfc0       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cfc0       0x23 hw/diskctrl/ide.32
                0x00000000c001cfc0                IDE::~IDE()
                0x00000000c001cfc0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cfe4       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cfe4       0x2a hw/diskctrl/ide.32
                0x00000000c001cfe4                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001d00e       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001d00e       0x23 hw/diskctrl/satabus.32
                0x00000000c001d00e                SATABus::~SATABus()
                0x00000000c001d00e                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001d032       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001d032       0x2a hw/diskctrl/satabus.32
                0x00000000c001d032                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001d05c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001d05c       0x23 hw/diskphys/ata.32
                0x00000000c001d05c                ATA::~ATA()
                0x00000000c001d05c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001d080       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001d080       0x2a hw/diskphys/ata.32
                0x00000000c001d080                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001d0aa       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001d0aa       0x23 hw/diskphys/atapi.32
                0x00000000c001d0aa                ATAPI::~ATAPI()
                0x00000000c001d0aa                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001d0ce       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001d0ce       0x2a hw/diskphys/atapi.32
                0x00000000c001d0ce                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001d0f8       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001d0f8       0x23 hw/diskphys/sata.32
                0x00000000c001d0f8                SATA::~SATA()
                0x00000000c001d0f8                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001d11c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001d11c       0x2a hw/diskphys/sata.32
                0x00000000c001d11c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001d146       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001d146       0x23 hw/diskphys/satapi.32
                0x00000000c001d146                SATAPI::~SATAPI()
                0x00000000c001d146                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001d16a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001d16a       0x2a hw/diskphys/satapi.32
                0x00000000c001d16a                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001d194       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001d194       0x23 hw/intctrl/apic.32
                0x00000000c001d194                IOAPIC::~IOAPIC()
                0x00000000c001d194                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001d1b8       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001d1b8       0x2a hw/intctrl/apic.32
                0x00000000c001d1b8                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001d1e4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001d1e4       0x23 hw/timer/apictimer.32
                0x00000000c001d1e4                APICTimer::~APICTimer()
                0x00000000c001d1e4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001d208       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001d208       0x2a hw/timer/apictimer.32
                0x00000000c001d208                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001d234       0x23
 .text._ZN3PITD2Ev
                0x00000000c001d234       0x23 hw/timer/pit.32
                0x00000000c001d234                PIT::~PIT()
                0x00000000c001d234                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001d258       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001d258       0x2a hw/timer/pit.32
                0x00000000c001d258                PIT::~PIT()

.rodata         0x00000000c001d282     0x29a6
                0x00000000c001d282                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001d282        0x2 
 .ctors         0x00000000c001d284        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001d288        0x4 core/unixfile.32
 .ctors         0x00000000c001d28c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001d290        0x4 vm86/x87em.32
 .ctors         0x00000000c001d294        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001d298                end_ctors = .
                0x00000000c001d298                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001d298        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001d29c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001d29c                __DTOR_END__
                0x00000000c001d2a0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001d2a0        0x0 
 .rodata        0x00000000c001d2a0      0x101 acpica/utclib.32
                0x00000000c001d2a0                AcpiGbl_Ctypes
 *fill*         0x00000000c001d3a1        0x3 
 .rodata        0x00000000c001d3a4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001d3bc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d406       0x1a 
 .rodata        0x00000000c001d420       0xed fs/fat/ff.32
 *fill*         0x00000000c001d50d       0x13 
 .rodata        0x00000000c001d520      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d920       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001d969      0x115 core/computer.32
 *fill*         0x00000000c001da7e        0x2 
 .rodata.str1.4
                0x00000000c001da80       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001dae8       0x2c core/computer.32
                0x00000000c001dae8                vtable for Computer
 .rodata.str1.4
                0x00000000c001db14       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001db44        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001db50       0x17 core/main.32
 *fill*         0x00000000c001db67        0x1 
 .rodata.str1.4
                0x00000000c001db68       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001dc0d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001dc65       0x39 core/pipe.32
 *fill*         0x00000000c001dc9e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001dca0       0x1c core/pipe.32
                0x00000000c001dca0                vtable for Pipe
 .rodata.str1.1
                0x00000000c001dcbc       0x69 core/terminal.32
 *fill*         0x00000000c001dd25        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001dd28       0x1c core/terminal.32
                0x00000000c001dd28                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001dd44       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001dd66       0x15 core/unixfile.32
 *fill*         0x00000000c001dd7b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001dd7c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001ddc7        0x8 core/unixfile.32
 *fill*         0x00000000c001ddcf        0x1 
 .rodata.str1.4
                0x00000000c001ddd0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001ddf0       0x1c core/unixfile.32
                0x00000000c001ddf0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001de0c       0x1c core/unixfile.32
                0x00000000c001de0c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001de28      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001df8f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001e096       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001e0c9       0x11 dbg/kconsole.32
 *fill*         0x00000000c001e0c9        0x3 
 .rodata        0x00000000c001e0cc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001e21c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001e21c       0x68 fs/vfs.32
                0x00000000c001e21c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001e284       0x1c fs/vfs.32
                0x00000000c001e284                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001e2a0       0x1c fs/vfs.32
                0x00000000c001e2a0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001e2bc       0x2c hal/bus.32
                0x00000000c001e2bc                vtable for Bus
 .rodata.str1.1
                0x00000000c001e2e8       0x1e hal/clock.32
 *fill*         0x00000000c001e306        0x2 
 .rodata._ZTV5Clock
                0x00000000c001e308       0x3c hal/clock.32
                0x00000000c001e308                vtable for Clock
 *fill*         0x00000000c001e344       0x1c 
 .rodata        0x00000000c001e360       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001e390       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001e3e8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001e3e8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001e3e8       0x2c hal/device.32
                0x00000000c001e3e8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001e414       0x2c hal/device.32
                0x00000000c001e414                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e440       0x2c hal/diskctrl.32
                0x00000000c001e440                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e46c       0x38 hal/diskphys.32
                0x00000000c001e46c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e4a4       0x3e hal/intctrl.32
 *fill*         0x00000000c001e4e2        0x2 
 .rodata.str1.4
                0x00000000c001e4e4       0x5d hal/intctrl.32
 .rodata        0x00000000c001e541       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e594       0x34 hal/keybrd.32
                0x00000000c001e594                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e5c8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e60c       0x2c hal/logidisk.32
                0x00000000c001e60c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e638       0x2c hal/mouse.32
                0x00000000c001e638                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e664        0xb hal/partition.32
 *fill*         0x00000000c001e66f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e670       0x44 hal/serial.32
                0x00000000c001e670                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e6b4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e6b4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e6b4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e6b4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e6b4       0x30 hal/timer.32
                0x00000000c001e6b4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e6e4       0x10 hal/vcache.32
                0x00000000c001e6e4                vtable for VCache
 .rodata.str1.1
                0x00000000c001e6f4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e75c       0x48 hal/video.32
                0x00000000c001e75c                vtable for Video
 .rodata.str1.4
                0x00000000c001e7a4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e83f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e97b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e97b        0x8 hw/acpi.32
 *fill*         0x00000000c001e97b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e97c       0x2c hw/acpi.32
                0x00000000c001e97c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e9a8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001eb15        0x3 
 .rodata._ZTV3CPU
                0x00000000c001eb18       0x2c hw/cpu.32
                0x00000000c001eb18                vtable for CPU
 .rodata.str1.1
                0x00000000c001eb44       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001eb80       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 .rodata.str1.4
                0x00000000c001ec20      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c001ed5e       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001eda3        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001edad       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001ee01       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001ee2d       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001ee75      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001f041       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001f098      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001f1a4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001f1a4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001f1a4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001f1a4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001f1a4       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001f244       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001f274       0x58 vm86/x87em.32
 .rodata        0x00000000c001f2cc       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c001f308      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001f416        0x2 
 .rodata.str1.4
                0x00000000c001f418       0x4b arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001f463       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001f478       0x3c arch/i386/rtc.32
                0x00000000c001f478                vtable for RTC
 .rodata.str1.1
                0x00000000c001f4b4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f4f5        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f4f8       0x68 fs/fat/vfslink.32
                0x00000000c001f4f8                vtable for FAT
 .rodata.str1.1
                0x00000000c001f560       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c001f57b        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c001f57c       0x68 fs/iso9660/vfslink.32
                0x00000000c001f57c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f5e4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f628       0x34 hal/sound/sndcard.32
                0x00000000c001f628                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f65c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f69b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f6d3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f774       0x2c hw/bus/pci.32
                0x00000000c001f774                vtable for PCI
 .rodata.str1.1
                0x00000000c001f7a0       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f827        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f828       0x2c hw/diskctrl/ide.32
                0x00000000c001f828                vtable for IDE
 .rodata.str1.4
                0x00000000c001f854       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f878       0x2c hw/diskctrl/satabus.32
                0x00000000c001f878                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f8a4       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f8b6        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f8b8       0x38 hw/diskphys/ata.32
                0x00000000c001f8b8                vtable for ATA
 .rodata.str1.1
                0x00000000c001f8f0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f8fd        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f900       0x38 hw/diskphys/atapi.32
                0x00000000c001f900                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f938       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f9b4       0x38 hw/diskphys/sata.32
                0x00000000c001f9b4                vtable for SATA
 .rodata.str1.1
                0x00000000c001f9ec      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c001fb1e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c001fb20       0x38 hw/diskphys/satapi.32
                0x00000000c001fb20                vtable for SATAPI
 .rodata        0x00000000c001fb58        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001fb60       0x2c hw/intctrl/apic.32
                0x00000000c001fb60                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001fb8c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001fba7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001fba8       0x30 hw/timer/apictimer.32
                0x00000000c001fba8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001fbd8       0x1d hw/timer/pit.32
 *fill*         0x00000000c001fbf5        0x3 
 .rodata._ZTV3PIT
                0x00000000c001fbf8       0x30 hw/timer/pit.32
                0x00000000c001fbf8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001fc28      0x26d
 *(.data)
 .data          0x00000000c001fc28        0x0 crti.32
 .data          0x00000000c001fc28        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001fc28                __dso_handle
 .data          0x00000000c001fc2c        0x0 acpica/utclib.32
 .data          0x00000000c001fc2c        0x0 core/malloc.32
 .data          0x00000000c001fc2c        0x0 libk/string.32
 .data          0x00000000c001fc2c        0x0 fs/fat/diskio.32
 .data          0x00000000c001fc2c        0x0 fs/fat/ff.32
 .data          0x00000000c001fc2c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001fc2c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001fc2c        0x0 compat/inlines.32
 .data          0x00000000c001fc2c        0x0 compat/resolve.32
 .data          0x00000000c001fc2c        0x0 core/computer.32
 .data          0x00000000c001fc2c        0x0 core/gdt.32
 .data          0x00000000c001fc2c        0x0 core/idle.32
 .data          0x00000000c001fc2c        0x0 core/idt.32
 .data          0x00000000c001fc2c        0x4 core/kheap.32
 *fill*         0x00000000c001fc30       0x10 
 .data          0x00000000c001fc40      0x142 core/main.32
                0x00000000c001fc40                titleScreen
 *fill*         0x00000000c001fd82        0x2 
 .data          0x00000000c001fd84        0x4 core/physmgr.32
                0x00000000c001fd84                Phys::bitmap
 .data          0x00000000c001fd88        0x0 core/pipe.32
 *fill*         0x00000000c001fd88       0x18 
 .data          0x00000000c001fda0       0x60 core/terminal.32
                0x00000000c001fda0                VgaText::hiddenOut
                0x00000000c001fdc0                ansiToVGAMappings
 .data          0x00000000c001fe00        0x0 core/tss.32
 .data          0x00000000c001fe00        0x4 core/unixfile.32
                0x00000000c001fe00                UnixFile::nextFd
 .data          0x00000000c001fe04       0x15 core/virtmgr.32
                0x00000000c001fe04                Virt::pageAllocPtr
                0x00000000c001fe08                Virt::bitmap
                0x00000000c001fe0c                Virt::swapfileSectorsPerPage
                0x00000000c001fe10                Virt::swapfileLength
                0x00000000c001fe14                Virt::swapfileSector
                0x00000000c001fe18                Virt::swapfileDrive
 *fill*         0x00000000c001fe19        0x3 
 .data          0x00000000c001fe1c        0x4 coreobjs/c++.32
                0x00000000c001fe1c                __stack_chk_guard
 .data          0x00000000c001fe20        0x0 dbg/kconsole.32
 .data          0x00000000c001fe20        0x0 fs/vfs.32
 .data          0x00000000c001fe20        0x0 hal/bus.32
 .data          0x00000000c001fe20        0x0 hal/buzzer.32
 .data          0x00000000c001fe20        0x0 hal/clock.32
 .data          0x00000000c001fe20        0x0 hal/device.32
 .data          0x00000000c001fe20        0x0 hal/diskctrl.32
 .data          0x00000000c001fe20        0x0 hal/diskphys.32
 .data          0x00000000c001fe20        0x0 hal/fpu.32
 .data          0x00000000c001fe20        0x0 hal/intctrl.32
 .data          0x00000000c001fe20        0x0 hal/keybrd.32
 .data          0x00000000c001fe20        0x0 hal/logidisk.32
 .data          0x00000000c001fe20        0x0 hal/mouse.32
 .data          0x00000000c001fe20        0x0 hal/partition.32
 .data          0x00000000c001fe20        0x0 hal/serial.32
 .data          0x00000000c001fe20        0x0 hal/timer.32
 .data          0x00000000c001fe20        0x0 hal/vcache.32
 .data          0x00000000c001fe20        0x0 hal/video.32
 .data          0x00000000c001fe20       0x10 hw/acpi.32
                0x00000000c001fe20                legacyIRQRemaps
 .data          0x00000000c001fe30        0x4 hw/cpu.32
                0x00000000c001fe30                lastCode
 .data          0x00000000c001fe34        0x0 hw/smp.32
 *fill*         0x00000000c001fe34        0xc 
 .data          0x00000000c001fe40       0x4d krnl/env.32
                0x00000000c001fe40                defaultSysEnv
 .data          0x00000000c001fe8d        0x0 krnl/panic.32
 .data          0x00000000c001fe8d        0x0 krnl/powctrl.32
 .data          0x00000000c001fe8d        0x0 reg/registry.32
 .data          0x00000000c001fe8d        0x0 sys/sc_eject.32
 .data          0x00000000c001fe8d        0x0 sys/sc_exit.32
 .data          0x00000000c001fe8d        0x0 sys/sc_getcwd.32
 .data          0x00000000c001fe8d        0x0 sys/sc_getpid.32
 .data          0x00000000c001fe8d        0x0 sys/sc_getramdata.32
 .data          0x00000000c001fe8d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001fe8d        0x0 sys/sc_loaddll.32
 .data          0x00000000c001fe8d        0x0 sys/sc_read.32
 .data          0x00000000c001fe8d        0x0 sys/sc_sbrk.32
 .data          0x00000000c001fe8d        0x0 sys/sc_setcwd.32
 .data          0x00000000c001fe8d        0x0 sys/sc_settime.32
 .data          0x00000000c001fe8d        0x0 sys/sc_timezone.32
 .data          0x00000000c001fe8d        0x0 sys/sc_write.32
 .data          0x00000000c001fe8d        0x0 sys/sc_wsbe.32
 .data          0x00000000c001fe8d        0x0 sys/sc_yield.32
 .data          0x00000000c001fe8d        0x0 sys/syscalls.32
 .data          0x00000000c001fe8d        0x0 thr/elf.32
 *fill*         0x00000000c001fe8d        0x3 
 .data          0x00000000c001fe90        0x4 thr/prcssthr.32
                0x00000000c001fe90                Thr::nextPID
 .data          0x00000000c001fe94        0x0 vm86/vm8086.32
 .data          0x00000000c001fe94        0x0 vm86/x87em.32
 .data          0x00000000c001fe94        0x0 arch/i386/hal.32
 .data          0x00000000c001fe94        0x0 arch/i386/pic.32
 .data          0x00000000c001fe94        0x0 arch/i386/rtc.32
 .data          0x00000000c001fe94        0x0 arch/i386/vga.32
 .data          0x00000000c001fe94        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fe94        0x1 fs/iso9660/vfslink.32
                0x00000000c001fe94                recentDriveletter
 .data          0x00000000c001fe95        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fe95        0x0 hal/sound/sndport.32
 .data          0x00000000c001fe95        0x0 hw/bus/isa.32
 .data          0x00000000c001fe95        0x0 hw/bus/pci.32
 .data          0x00000000c001fe95        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fe95        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fe95        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fe95        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fe95        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fe95        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fe95        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fe95        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fe95        0x0 hw/timer/pit.32
 .data          0x00000000c001fe95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fe95        0x0 crtn.32
 .data          0x00000000c001fe95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fe95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fe95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fe95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fe98        0x0
 .got           0x00000000c001fe98        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fe98        0x0
 .got.plt       0x00000000c001fe98        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fe98        0x0
 .igot.plt      0x00000000c001fe98        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fe98        0x0
 .tm_clone_table
                0x00000000c001fe98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fe98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fe95      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fe95        0x3 
 .eh_frame      0x00000000c001fe98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fe98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fe98       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fef0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001ff30       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001ff9c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c0020020        0x0
 .rel.got       0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0020020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0020020     0x43c8
                0x00000000c0020020                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0020020        0x0 crti.32
 .bss           0x00000000c0020020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0020040        0x4 acpica/utclib.32
 *fill*         0x00000000c0020044       0x1c 
 .bss           0x00000000c0020060      0x378 core/malloc.32
 .bss           0x00000000c00203d8        0x0 libk/string.32
 .bss           0x00000000c00203d8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c00203d8        0x8 
 .bss           0x00000000c00203e0       0x88 fs/fat/ff.32
 .bss           0x00000000c0020468        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0020468        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0020468        0x0 compat/inlines.32
 .bss           0x00000000c0020468        0x0 compat/resolve.32
 .bss           0x00000000c0020468        0x6 core/computer.32
                0x00000000c0020468                Krnl::computer
                0x00000000c002046c                Krnl::preemptionOn
                0x00000000c002046d                Krnl::schedulingOn
 *fill*         0x00000000c002046e        0x2 
 .bss           0x00000000c0020470        0x6 core/gdt.32
                0x00000000c0020470                gdtDescr
 .bss           0x00000000c0020476        0x0 core/idle.32
 *fill*         0x00000000c0020476        0x2 
 .bss           0x00000000c0020478        0x6 core/idt.32
                0x00000000c0020478                idtDescr
 .bss           0x00000000c002047e        0x0 core/kheap.32
 *fill*         0x00000000c002047e        0x2 
 .bss           0x00000000c0020480        0x4 core/main.32
                0x00000000c0020480                sysBootSettings
 .bss           0x00000000c0020484       0x29 core/physmgr.32
                0x00000000c0020484                Phys::forbidEvictions
                0x00000000c0020488                Phys::currentPagePointer
                0x00000000c002048c                Phys::highestMem
                0x00000000c0020490                Phys::oldPercent
                0x00000000c0020494                Phys::usedPages
                0x00000000c0020498                Phys::usablePages
                0x00000000c002049c                Phys::dmaUsage
 .bss           0x00000000c00204ad        0x0 core/pipe.32
 *fill*         0x00000000c00204ad        0x3 
 .bss           0x00000000c00204b0        0x9 core/terminal.32
                0x00000000c00204b0                terminalCycle
                0x00000000c00204b4                activeTerminal
                0x00000000c00204b8                VgaText::graphicMode
 *fill*         0x00000000c00204b9        0x1 
 .bss           0x00000000c00204ba        0x2 core/tss.32
                0x00000000c00204ba                doubleFaultSelector
 *fill*         0x00000000c00204bc        0x4 
 .bss           0x00000000c00204c0       0x84 core/unixfile.32
                0x00000000c00204c0                sfileLpt
                0x00000000c0020500                sfileCom
                0x00000000c0020524                sfileNul
                0x00000000c0020528                sfilePnt
                0x00000000c002052c                sfileAux
                0x00000000c0020530                sfileCon
                0x00000000c0020534                initialFilesAdded
                0x00000000c0020538                unixFileLinkedList
 .bss           0x00000000c0020544       0x14 core/virtmgr.32
                0x00000000c0020544                twswaps
                0x00000000c0020548                swapBalance
                0x00000000c002054c                panicVAS
                0x00000000c0020550                Virt::swapfileBitmap
                0x00000000c0020554                firstVAS
 .bss           0x00000000c0020558        0x0 coreobjs/c++.32
 .bss           0x00000000c0020558        0x0 dbg/kconsole.32
 .bss           0x00000000c0020558        0x4 fs/vfs.32
                0x00000000c0020558                installedFilesystems
 .bss           0x00000000c002055c        0x0 hal/bus.32
 .bss           0x00000000c002055c        0x0 hal/buzzer.32
 .bss           0x00000000c002055c        0x8 hal/clock.32
                0x00000000c002055c                User::dstOn
                0x00000000c002055d                User::timezoneHalfHourOffset
                0x00000000c0020560                User::timezoneHourOffset
 .bss           0x00000000c0020564        0x0 hal/device.32
 .bss           0x00000000c0020564        0x0 hal/diskctrl.32
 .bss           0x00000000c0020564        0x0 hal/diskphys.32
 .bss           0x00000000c0020564        0x0 hal/fpu.32
 *fill*         0x00000000c0020564       0x1c 
 .bss           0x00000000c0020580     0x2000 hal/intctrl.32
                0x00000000c0020580                INT_contexts
                0x00000000c0021580                INT_handlers
 .bss           0x00000000c0022580      0x429 hal/keybrd.32
                0x00000000c0022580                keyboardWaitingTaskList
                0x00000000c0022584                keyboardSetupYet
                0x00000000c0022588                guiKeyboardHandler
                0x00000000c00225a0                keystates
 *fill*         0x00000000c00229a9       0x17 
 .bss           0x00000000c00229c0       0x88 hal/logidisk.32
                0x00000000c00229c0                diskAssignments
                0x00000000c00229e0                disks
 .bss           0x00000000c0022a48        0x4 hal/mouse.32
                0x00000000c0022a48                guiMouseHandler
 .bss           0x00000000c0022a4c        0x0 hal/partition.32
 .bss           0x00000000c0022a4c        0x0 hal/serial.32
 .bss           0x00000000c0022a4c        0x4 hal/timer.32
                0x00000000c0022a4c                milliTenthsSinceBoot
 .bss           0x00000000c0022a50        0x0 hal/vcache.32
 .bss           0x00000000c0022a50        0x4 hal/video.32
                0x00000000c0022a50                screen
 *fill*         0x00000000c0022a54        0xc 
 .bss           0x00000000c0022a60      0x480 hw/acpi.32
                0x00000000c0022a60                systemSleepFunction
                0x00000000c0022a64                systemResetFunction
                0x00000000c0022a68                systemShutdownFunction
                0x00000000c0022a6c                nextACPITable
                0x00000000c0022a80                acpiTables
                0x00000000c0022c80                usingXSDT
                0x00000000c0022c84                MADTpointer
                0x00000000c0022c88                RSDTpointer
                0x00000000c0022c8c                RSDPpointer
                0x00000000c0022c90                nextAPICNMI
                0x00000000c0022ca0                apicNMIInfo
                0x00000000c0022d20                legacyIRQFlags
                0x00000000c0022d40                ioapicDiscoveryNumber
                0x00000000c0022d60                ioapicFoundInMADT
                0x00000000c0022d80                ioapicAddresses
                0x00000000c0022e00                ioapicGSIBase
                0x00000000c0022e80                processorDiscoveryNumber
                0x00000000c0022ea0                matchingAPICID
                0x00000000c0022ec0                processorID
 .bss           0x00000000c0022ee0       0x10 hw/cpu.32
                0x00000000c0022ee0                lastD
                0x00000000c0022ee4                lastC
                0x00000000c0022ee8                lastB
                0x00000000c0022eec                lastA
 .bss           0x00000000c0022ef0        0x1 hw/smp.32
                0x00000000c0022ef0                Krnl::bspID
 *fill*         0x00000000c0022ef1        0x3 
 .bss           0x00000000c0022ef4        0x8 krnl/env.32
                0x00000000c0022ef4                Krnl::userEnv
                0x00000000c0022ef8                Krnl::systemEnv
 .bss           0x00000000c0022efc        0x9 krnl/panic.32
                0x00000000c0022efc                Krnl::guiProgramFaultHandler
                0x00000000c0022f00                Krnl::guiPanicHandler
                0x00000000c0022f04                Krnl::kernelInPanic
 *fill*         0x00000000c0022f05       0x1b 
 .bss           0x00000000c0022f20       0x48 krnl/powctrl.32
                0x00000000c0022f20                Krnl::powCtrlOnBattery
                0x00000000c0022f40                Krnl::currentPowerSettings
                0x00000000c0022f64                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0022f68        0x0 reg/registry.32
 .bss           0x00000000c0022f68        0x0 sys/sc_eject.32
 .bss           0x00000000c0022f68        0x0 sys/sc_exit.32
 .bss           0x00000000c0022f68        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0022f68        0x0 sys/sc_getpid.32
 .bss           0x00000000c0022f68        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0022f68        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0022f68        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0022f68        0x0 sys/sc_read.32
 .bss           0x00000000c0022f68        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0022f68        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0022f68        0x0 sys/sc_settime.32
 .bss           0x00000000c0022f68        0x0 sys/sc_timezone.32
 .bss           0x00000000c0022f68        0x0 sys/sc_write.32
 .bss           0x00000000c0022f68        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0022f68        0x0 sys/sc_yield.32
 *fill*         0x00000000c0022f68       0x18 
 .bss           0x00000000c0022f80      0x200 sys/syscalls.32
                0x00000000c0022f80                systemCallHandlers
 .bss           0x00000000c0023180      0x7a4 thr/elf.32
                0x00000000c0023180                Thr::driverLookupNext
                0x00000000c00231a0                Thr::driverLookupLen
                0x00000000c00233a0                Thr::driverLookupAddr
                0x00000000c00235a0                Thr::driverNameLookup
                0x00000000c00237a0                Thr::kernelSymbols
                0x00000000c0023820                Thr::kernelStringTable
                0x00000000c00238a0                Thr::kernelSymbolTable
                0x00000000c0023920                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023924        0x4 
 .bss           0x00000000c0023928       0x68 thr/prcssthr.32
                0x00000000c0023928                cleanerThread
                0x00000000c002392c                weNeedTheCleanerToNotBlock
                0x00000000c0023930                retValLockStuff
                0x00000000c0023934                retValSchedLock
                0x00000000c0023938                lockStuffLock
                0x00000000c002393c                schedulerLock
                0x00000000c0023940                taskSwitchesPostponedFlag
                0x00000000c0023944                postponeTaskSwitchesCounter
                0x00000000c0023948                irqDisableCounter
                0x00000000c002394c                terminatedTaskList
                0x00000000c0023958                sleepingTaskList
                0x00000000c0023964                taskList
                0x00000000c0023970                kernelProcess
 *fill*         0x00000000c0023990       0x10 
 .bss           0x00000000c00239a0       0x40 vm86/vm8086.32
                0x00000000c00239a0                Vm::vmRetV
                0x00000000c00239a4                Vm::vmDone
                0x00000000c00239a5                Vm::vmReady
                0x00000000c00239a8                Vm::vm86Thread
                0x00000000c00239ac                Vm::vmToHostCommsPtr
                0x00000000c00239c0                Vm::vmToHostComms
 .bss           0x00000000c00239e0       0x48 vm86/x87em.32
                0x00000000c00239e0                Vm::fpuState
 .bss           0x00000000c0023a28       0x18 arch/i386/hal.32
                0x00000000c0023a28                Hal::apic
                0x00000000c0023a2c                fpuOwner
                0x00000000c0023a30                coproLoadFunc
                0x00000000c0023a34                coproSaveFunc
                0x00000000c0023a38                _i386_HAL_tscFunction
                0x00000000c0023a3c                gpFaultIntercept
 .bss           0x00000000c0023a40        0x0 arch/i386/pic.32
 .bss           0x00000000c0023a40        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023a42        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023a42       0x1e 
 .bss           0x00000000c0023a60       0xf0 fs/fat/vfslink.32
                0x00000000c0023a60                FAT::fats
                0x00000000c0023a80                FAT::vfsToFatRemaps
                0x00000000c0023b00                fatToVFSRemaps
 *fill*         0x00000000c0023b50       0x10 
 .bss           0x00000000c0023b60      0x820 fs/iso9660/vfslink.32
                0x00000000c0023b60                recentSector
                0x00000000c0023b80                recentBuffer
 .bss           0x00000000c0024380        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0024380        0x0 hal/sound/sndport.32
 .bss           0x00000000c0024380        0x0 hw/bus/isa.32
 .bss           0x00000000c0024380        0xd hw/bus/pci.32
                0x00000000c0024380                thePCI
 .bss           0x00000000c002438d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002438d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002438d        0x3 
 .bss           0x00000000c0024390        0x8 hw/diskphys/ata.32
                0x00000000c0024390                ataSectorsWritten
                0x00000000c0024394                ataSectorsRead
 .bss           0x00000000c0024398        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024398        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0024398        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0024398        0x8 
 .bss           0x00000000c00243a0       0x41 hw/intctrl/apic.32
                0x00000000c00243a0                noOfIOAPICs
                0x00000000c00243c0                ioapics
                0x00000000c00243e0                IOAPICsSetupYet
 .bss           0x00000000c00243e1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00243e1        0x3 
 .bss           0x00000000c00243e4        0x4 hw/timer/pit.32
                0x00000000c00243e4                pitFreq
 .bss           0x00000000c00243e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00243e8        0x0 crtn.32
 .bss           0x00000000c00243e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00243e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00243e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00243e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00243e8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00287b0                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
