Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xce thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xac thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e52a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x893 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000590                strlen
                0x00000000c00005c0                strpbrk
                0x00000000c0000610                strtok
                0x00000000c0000690                strcpy
                0x00000000c00006c0                strncpy
                0x00000000c00007b0                strcmp
                0x00000000c0000800                strchr
                0x00000000c0000840                strncmp
                0x00000000c00008a0                strcat
                0x00000000c00008d0                strncat
                0x00000000c0000930                strstr
                0x00000000c0000990                toupper
                0x00000000c00009b0                tolower
                0x00000000c00009d0                simple_strtoul
 .text          0x00000000c0000c13      0xfb1 core/malloc.32
                0x00000000c0000d7e                dlfree
                0x00000000c00010dc                dlmalloc
                0x00000000c0001619                dlrealloc
                0x00000000c00017bd                dlmemalign
                0x00000000c00018e0                dlcalloc
                0x00000000c000197a                dlcfree
                0x00000000c000197f                dlindependent_calloc
                0x00000000c00019a4                dlindependent_comalloc
                0x00000000c00019bb                dlvalloc
                0x00000000c00019e6                dlpvalloc
                0x00000000c0001a1c                dlmalloc_trim
                0x00000000c0001a29                dlmalloc_usable_size
                0x00000000c0001a5a                dlmallinfo
                0x00000000c0001b29                dlmalloc_stats
                0x00000000c0001b3a                dlmallopt
 .text          0x00000000c0001bc4      0x224 libk/ctype.32
                0x00000000c0001bc4                isblank
                0x00000000c0001be4                iscntrl
                0x00000000c0001c04                isdigit
                0x00000000c0001c20                islower
                0x00000000c0001c3c                isspace
                0x00000000c0001c64                isupper
                0x00000000c0001c80                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001cf0                ispunct
                0x00000000c0001d38                isgraph
                0x00000000c0001d70                isprint
                0x00000000c0001da0                isxdigit
 .text          0x00000000c0001de8        0x0 libk/string.32
 .text          0x00000000c0001de8       0x51 fs/fat/diskio.32
                0x00000000c0001de8                disk_status
                0x00000000c0001deb                disk_initialize
                0x00000000c0001dee                disk_read
                0x00000000c0001e04                disk_write
                0x00000000c0001e1a                disk_ioctl
 .text          0x00000000c0001e39     0x3d37 fs/fat/ff.32
                0x00000000c0003bbb                f_mount
                0x00000000c0003c1d                f_open
                0x00000000c0003ee7                f_read
                0x00000000c00040c3                f_write
                0x00000000c00042f6                f_sync
                0x00000000c00043ad                f_close
                0x00000000c00043dc                f_lseek
                0x00000000c0004582                f_opendir
                0x00000000c000464d                f_closedir
                0x00000000c000466f                f_readdir
                0x00000000c0004701                f_stat
                0x00000000c0004780                f_getfree
                0x00000000c0004884                f_truncate
                0x00000000c0004968                f_unlink
                0x00000000c0004a86                f_mkdir
                0x00000000c0004c21                f_rename
                0x00000000c0004dd9                f_chmod
                0x00000000c0004e8b                f_utime
                0x00000000c0004f39                f_getlabel
                0x00000000c000508d                f_setlabel
                0x00000000c000521d                f_expand
                0x00000000c000537b                f_mkfs
 .text          0x00000000c0005b70       0x28 fs/fat/ffsystem.32
                0x00000000c0005b70                ff_memalloc
                0x00000000c0005b84                ff_memfree
 .text          0x00000000c0005b98      0x2dc fs/fat/ffunicode.32
                0x00000000c0005b98                ff_uni2oem
                0x00000000c0005c34                ff_oem2uni
                0x00000000c0005cac                ff_wtoupper
 .text          0x00000000c0005e74      0xd13 fs/iso9660/iso9660.32
                0x00000000c00060a7                isoReadDiscSector
                0x00000000c0006142                strnicmp
                0x00000000c00063e6                stricmp
                0x00000000c0006432                iso_open
                0x00000000c00064ba                iso_close
                0x00000000c00064d8                iso_read
                0x00000000c00065ee                iso_seek
                0x00000000c0006672                iso_tell
                0x00000000c00066a3                iso_total
                0x00000000c00066ce                fn_postprocess
                0x00000000c00066f4                iso_readdir
                0x00000000c0006952                iso_reset
                0x00000000c000696f                init_percd
                0x00000000c0006a69                iso_ioctl
                0x00000000c0006a81                fs_iso9660_init
                0x00000000c0006b17                fs_iso9660_shutdown
 *fill*         0x00000000c0006b87        0x1 
 .text          0x00000000c0006b88      0x741 core/computer.32
                0x00000000c0006b88                Computer::close(int, int, void*)
                0x00000000c0006be2                Krnl::firstTask()
                0x00000000c0006d66                Computer::Computer()
                0x00000000c0006d66                Computer::Computer()
                0x00000000c0006e1a                Computer::setBootMessage(char const*)
                0x00000000c0006e1c                Computer::detectFeatures()
                0x00000000c000702e                Computer::displayFeatures()
                0x00000000c0007030                Computer::rdmsr(unsigned int)
                0x00000000c0007058                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000709c                Computer::shutdown()
                0x00000000c00070c2                Computer::restart()
                0x00000000c00070ea                Computer::sleep()
                0x00000000c00070fe                Computer::nmiEnabled()
                0x00000000c000710a                Computer::readCMOS(unsigned char)
                0x00000000c0007126                Computer::enableNMI(bool)
                0x00000000c0007140                Computer::open(int, int, void*)
                0x00000000c000721e                Computer::disableNMI()
                0x00000000c0007238                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0007258                Computer::handleNMI()
 *fill*         0x00000000c00072c9        0x1 
 .text          0x00000000c00072ca      0x1cd core/gdt.32
                0x00000000c00072ca                GDTEntry::setBase(unsigned int)
                0x00000000c00072e6                GDTEntry::setLimit(unsigned int)
                0x00000000c0007302                GDT::GDT()
                0x00000000c0007302                GDT::GDT()
                0x00000000c0007318                GDT::addEntry(GDTEntry)
                0x00000000c000733a                GDT::getNumberOfEntries()
                0x00000000c0007342                GDT::flush()
                0x00000000c0007364                GDT::setup()
 .text          0x00000000c0007497       0x1d core/idle.32
                0x00000000c0007497                idleFunction(void*)
 .text          0x00000000c00074b4      0x468 core/idt.32
                0x00000000c00074b4                IDTEntry::IDTEntry(bool)
                0x00000000c00074b4                IDTEntry::IDTEntry(bool)
                0x00000000c000752c                IDTEntry::setOffset(unsigned int)
                0x00000000c0007540                IDT::IDT()
                0x00000000c0007540                IDT::IDT()
                0x00000000c0007542                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000754a                IDT::addEntry(IDTEntry, int)
                0x00000000c0007564                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000759c                IDT::flush()
                0x00000000c00075b6                IDT::setup()
 .text          0x00000000c000791c      0x1c3 core/kheap.32
                0x00000000c000791c                sbrk
                0x00000000c00079b5                mmap
                0x00000000c00079cd                munmap
                0x00000000c00079e5                liballoc_lock()
                0x00000000c00079f2                liballoc_unlock()
                0x00000000c0007a06                liballoc_alloc(int)
                0x00000000c0007a2a                liballoc_free(void*, int)
                0x00000000c0007a4b                realloc
                0x00000000c0007a66                malloc
                0x00000000c0007a79                free
                0x00000000c0007a8c                rfree
                0x00000000c0007a9f                calloc
 .text          0x00000000c0007adf       0xd4 core/main.32
                0x00000000c0007adf                KeEntryPoint
 *fill*         0x00000000c0007bb3        0xd 
 .text          0x00000000c0007bc0      0x5f8 core/physmgr.32
                0x00000000c0007bc0                Phys::allocateDMA(unsigned long)
                0x00000000c0007c93                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cc6                Phys::setPageState(unsigned long, bool)
                0x00000000c0007cf9                Phys::getPageState(unsigned long)
                0x00000000c0007d14                Phys::freePage(unsigned long)
                0x00000000c0007d7c                Phys::allocatePage()
                0x00000000c0007e3c                Phys::allocateContiguousPages(int)
                0x00000000c0007e98                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007eda                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c00081b8      0x267 core/pipe.32
                0x00000000c00081b8                Pipe::isAtty()
                0x00000000c00081bc                Pipe::~Pipe()
                0x00000000c00081bc                Pipe::~Pipe()
                0x00000000c00081dc                Pipe::~Pipe()
                0x00000000c0008204                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00082c8                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00083ba                Pipe::Pipe(int)
                0x00000000c00083ba                Pipe::Pipe(int)
 *fill*         0x00000000c000841f        0x1 
 .text          0x00000000c0008420      0xabe core/terminal.32
                0x00000000c0008420                VgaText::isAtty()
                0x00000000c0008424                VgaText::~VgaText()
                0x00000000c0008424                VgaText::~VgaText()
                0x00000000c0008444                VgaText::~VgaText()
                0x00000000c000846c                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000848c                setTerminalScrollLock(bool)
                0x00000000c000848d                doTerminalCycle()
                0x00000000c000848e                addToTerminalCycle(VgaText*)
                0x00000000c000848f                scrollTerminalScrollLock(int)
                0x00000000c0008490                VgaText::updateTitle()
                0x00000000c0008492                VgaText::load()
                0x00000000c0008494                VgaText::updateCursor()
                0x00000000c00084aa                VgaText::doANSI_SGR(int)
                0x00000000c000851e                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000852e                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000853e                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000855e                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000856a                VgaText::setTitleColour(VgaColour)
                0x00000000c0008576                VgaText::setTitle(char*)
                0x00000000c0008578                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000858a                VgaText::scrollScreen()
                0x00000000c000861c                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000862c                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00086bc                VgaText::getCursorX()
                0x00000000c00086c4                VgaText::getCursorY()
                0x00000000c00086cc                VgaText::setCursor(int, int)
                0x00000000c00086e3                setActiveTerminal(VgaText*)
                0x00000000c000872e                VgaText::clearScreen()
                0x00000000c000877c                VgaText::setCursorX(int)
                0x00000000c0008794                VgaText::setCursorY(int)
                0x00000000c00087ac                VgaText::incrementCursor(bool)
                0x00000000c0008808                VgaText::decrementCursor(bool)
                0x00000000c000882a                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00088f6                VgaText::putchar(char)
                0x00000000c00089e2                VgaText::putx(unsigned int)
                0x00000000c0008a28                VgaText::puts(char const*)
                0x00000000c0008a4e                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008a9a                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008be4                VgaText::VgaText(char const*)
                0x00000000c0008be4                VgaText::VgaText(char const*)
                0x00000000c0008d5a                VgaText::receiveKey(unsigned char)
                0x00000000c0008eb8                VgaText::doUpdate()
                0x00000000c0008eb9                newTerminal(char*)
 *fill*         0x00000000c0008ede        0x2 
 .text          0x00000000c0008ee0      0x1ae core/tss.32
                0x00000000c0008ee0                TSS::TSS()
                0x00000000c0008ee0                TSS::TSS()
                0x00000000c0008ef0                TSS::setESP(unsigned long)
                0x00000000c0008f04                TSS::flush()
                0x00000000c0008f28                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c000908e      0x496 core/unixfile.32
                0x00000000c000908e                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00090e4                ReservedFilename::isAtty()
                0x00000000c0009100                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000915e                UnixFile::getFileDescriptor()
                0x00000000c0009166                UnixFile::UnixFile(int)
                0x00000000c0009166                UnixFile::UnixFile(int)
                0x00000000c00092fa                ReservedFilename::ReservedFilename(int)
                0x00000000c00092fa                ReservedFilename::ReservedFilename(int)
                0x00000000c000932c                UnixFile::~UnixFile()
                0x00000000c000932c                UnixFile::~UnixFile()
                0x00000000c00093b8                UnixFile::~UnixFile()
                0x00000000c00093e0                ReservedFilename::~ReservedFilename()
                0x00000000c00093e0                ReservedFilename::~ReservedFilename()
                0x00000000c0009400                ReservedFilename::~ReservedFilename()
                0x00000000c0009427                getFromFileDescriptor(int)
 *fill*         0x00000000c0009524        0xc 
 .text          0x00000000c0009530     0x134c core/virtmgr.32
                0x00000000c0009530                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009569                Virt::getPageState(unsigned long)
                0x00000000c0009590                Virt::allocateKernelVirtualPages(int)
                0x00000000c00096ab                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00096c9                Virt::swapIDToSector(unsigned long)
                0x00000000c00096df                Virt::allocateSwapfilePage()
                0x00000000c0009758                Virt::virtualMemorySetup()
                0x00000000c00097b2                Virt::setupPageSwapping(int)
                0x00000000c0009834                VAS::VAS(VAS*)
                0x00000000c0009834                VAS::VAS(VAS*)
                0x00000000c000985e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000988a                VAS::getPageTableEntry(unsigned long)
                0x00000000c00098a9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00099be                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00099e4                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a06                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009a52                VAS::VAS()
                0x00000000c0009a52                VAS::VAS()
                0x00000000c0009ad4                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b1e                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b48                VAS::~VAS()
                0x00000000c0009b48                VAS::~VAS()
                0x00000000c0009cb2                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009de6                VAS::allocatePages(int, int)
                0x00000000c0009fc4                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009ff2                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a0c0                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a1e6                VAS::VAS(bool)
                0x00000000c000a1e6                VAS::VAS(bool)
                0x00000000c000a46a                VAS::evict(unsigned long)
                0x00000000c000a53a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a664                VAS::scanForEviction()
                0x00000000c000a74c                mapVASFirstTime
 .text          0x00000000c000a87c       0x5f coreobjs/c++.32
                0x00000000c000a87c                __cxa_atexit
                0x00000000c000a87f                __cxa_finalize
                0x00000000c000a880                __stack_chk_fail
                0x00000000c000a8b6                __cxa_pure_virtual
                0x00000000c000a8c7                operator new[](unsigned long)
                0x00000000c000a8cc                operator delete(void*, unsigned long)
                0x00000000c000a8d1                operator delete[](void*)
                0x00000000c000a8d6                operator delete[](void*, unsigned long)
 .text          0x00000000c000a8db      0x259 dbg/kconsole.32
                0x00000000c000a8db                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a94d                Dbg::logc(char)
                0x00000000c000a96d                Dbg::logs(char*)
                0x00000000c000a98f                Dbg::logWriteInt(unsigned int)
                0x00000000c000a9bb                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a9e6                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000ab34      0xc46 fs/vfs.32
                0x00000000c000ab34                File::read(unsigned long long, void*, int*)
                0x00000000c000ab8c                File::write(unsigned long long, void*, int*)
                0x00000000c000abe4                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ac3c                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ac6a                File::isAtty()
                0x00000000c000ac6e                Directory::isAtty()
                0x00000000c000ac72                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ac78                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ac7e                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ac84                File::~File()
                0x00000000c000ac84                File::~File()
                0x00000000c000aca4                File::~File()
                0x00000000c000accc                Directory::~Directory()
                0x00000000c000accc                Directory::~Directory()
                0x00000000c000acec                Directory::~Directory()
                0x00000000c000ad14                Filesystem::Filesystem()
                0x00000000c000ad14                Filesystem::Filesystem()
                0x00000000c000ad38                Filesystem::~Filesystem()
                0x00000000c000ad38                Filesystem::~Filesystem()
                0x00000000c000ad46                Filesystem::~Filesystem()
                0x00000000c000ad6d                Fs::getcwd(Process*, char*, int)
                0x00000000c000ad97                Fs::initVFS()
                0x00000000c000adc1                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000af68                File::File(char const*, Process*)
                0x00000000c000af68                File::File(char const*, Process*)
                0x00000000c000b026                File::open(FileOpenMode)
                0x00000000c000b084                File::close()
                0x00000000c000b0e4                File::seek(unsigned long long)
                0x00000000c000b13a                File::tell(unsigned long long*)
                0x00000000c000b18a                File::rewind()
                0x00000000c000b19e                File::unlink()
                0x00000000c000b1ea                File::rename(char const*)
                0x00000000c000b238                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b28e                File::exists()
                0x00000000c000b2cc                File::stat(unsigned long long*, bool*)
                0x00000000c000b32d                Fs::setcwd(Process*, char*)
                0x00000000c000b48a                Directory::Directory(char const*, Process*)
                0x00000000c000b48a                Directory::Directory(char const*, Process*)
                0x00000000c000b548                Directory::open()
                0x00000000c000b5a4                Directory::close()
                0x00000000c000b604                Directory::unlink()
                0x00000000c000b650                Directory::rename(char const*)
                0x00000000c000b69e                Directory::exists()
                0x00000000c000b6dc                Directory::read(dirent*)
                0x00000000c000b728                Directory::create()
                0x00000000c000b774                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b77a        0x2 
 .text          0x00000000c000b77c       0x7f hal/bus.32
                0x00000000c000b77c                Bus::Bus(char const*)
                0x00000000c000b77c                Bus::Bus(char const*)
                0x00000000c000b7b4                Bus::~Bus()
                0x00000000c000b7b4                Bus::~Bus()
                0x00000000c000b7d4                Bus::~Bus()
 .text          0x00000000c000b7fb       0x99 hal/buzzer.32
                0x00000000c000b7fb                beepThread(void*)
                0x00000000c000b838                Krnl::beep(int, int, bool)
 .text          0x00000000c000b894      0x45d hal/clock.32
                0x00000000c000b894                User::loadClockSettings(int)
                0x00000000c000b8e6                Clock::Clock(char const*)
                0x00000000c000b8e6                Clock::Clock(char const*)
                0x00000000c000b91c                Clock::~Clock()
                0x00000000c000b91c                Clock::~Clock()
                0x00000000c000b93c                Clock::~Clock()
                0x00000000c000b964                Clock::timeInSecondsLocal()
                0x00000000c000b9ac                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000ba05                datetimeToSeconds(datetime_t)
                0x00000000c000bb24                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bb84                secondsToDatetime(unsigned long long)
                0x00000000c000bccc                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bcf1        0x1 
 .text          0x00000000c000bcf2      0x460 hal/device.32
                0x00000000c000bcf2                Device::hibernate()
                0x00000000c000bcf4                Device::wake()
                0x00000000c000bcf6                Device::detect()
                0x00000000c000bcf8                Device::disableLegacy()
                0x00000000c000bcfa                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bcfc                DriverlessDevice::close(int, int, void*)
                0x00000000c000bd00                DriverlessDevice::detect()
                0x00000000c000bd02                DriverlessDevice::open(int, int, void*)
                0x00000000c000bd16                Device::~Device()
                0x00000000c000bd16                Device::~Device()
                0x00000000c000bd24                Device::~Device()
                0x00000000c000bd4c                Device::findAndLoadDriver()
                0x00000000c000bd5a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bd80                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bdc0                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bde8                Device::getParent()
                0x00000000c000bdf4                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000be12                Device::addChild(Device*)
                0x00000000c000be56                Device::removeAllChildren()
                0x00000000c000be9c                Device::hibernateAll()
                0x00000000c000becc                Device::wakeAll()
                0x00000000c000befc                Device::detectAll()
                0x00000000c000bf2c                Device::disableLegacyAll()
                0x00000000c000bf2e                Device::loadDriversForAll()
                0x00000000c000bf30                Device::closeAll()
                0x00000000c000bf66                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bf9c                Device::setName(char const*)
                0x00000000c000bfaa                Device::Device(char const*)
                0x00000000c000bfaa                Device::Device(char const*)
                0x00000000c000c0a4                Device::getName()
                0x00000000c000c0ae                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c0ae                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c0e4                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c128                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c152        0x2 
 .text          0x00000000c000c154       0x7f hal/diskctrl.32
                0x00000000c000c154                HardDiskController::HardDiskController(char const*)
                0x00000000c000c154                HardDiskController::HardDiskController(char const*)
                0x00000000c000c18c                HardDiskController::~HardDiskController()
                0x00000000c000c18c                HardDiskController::~HardDiskController()
                0x00000000c000c1ac                HardDiskController::~HardDiskController()
 *fill*         0x00000000c000c1d3        0x1 
 .text          0x00000000c000c1d4       0xdb hal/diskphys.32
                0x00000000c000c1d4                PhysicalDisk::eject()
                0x00000000c000c1d8                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c1d8                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c240                PhysicalDisk::startCache()
                0x00000000c000c268                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c268                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c288                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c2af        0x0 hal/fpu.32
 *fill*         0x00000000c000c2af        0x1 
 .text          0x00000000c000c2b0      0x331 hal/intctrl.32
                0x00000000c000c2b0                int_handler
                0x00000000c000c32b                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c374                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c4b4                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c4e8                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c556                setupINTS()
                0x00000000c000c5a3                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c5e1        0x1 
 .text          0x00000000c000c5e2      0x81d hal/keybrd.32
                0x00000000c000c5e2                startGUI(void*)
                0x00000000c000c651                startGUIVESA(void*)
                0x00000000c000c6c0                sendKeyToTerminal(unsigned char)
                0x00000000c000c786                sendKeyboardToken(KeyboardToken)
                0x00000000c000cc03                clearInternalKeybuffer(VgaText*)
                0x00000000c000cc39                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000cd7c                Keyboard::Keyboard(char const*)
                0x00000000c000cd7c                Keyboard::Keyboard(char const*)
                0x00000000c000cdb8                Keyboard::~Keyboard()
                0x00000000c000cdb8                Keyboard::~Keyboard()
                0x00000000c000cdd8                Keyboard::~Keyboard()
 *fill*         0x00000000c000cdff        0x1 
 .text          0x00000000c000ce00      0x3f0 hal/logidisk.32
                0x00000000c000ce00                LogicalDisk::close(int, int, void*)
                0x00000000c000ce04                LogicalDisk::~LogicalDisk()
                0x00000000c000ce04                LogicalDisk::~LogicalDisk()
                0x00000000c000ce24                LogicalDisk::~LogicalDisk()
                0x00000000c000ce4c                LogicalDisk::open(int, int, void*)
                0x00000000c000ce60                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000ce98                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cede                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cede                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cfa0                LogicalDisk::assignDriveLetter()
                0x00000000c000d056                LogicalDisk::mount()
                0x00000000c000d09e                LogicalDisk::unmount()
                0x00000000c000d0ae                LogicalDisk::eject()
                0x00000000c000d0c2                LogicalDisk::unassignDriveLetter()
                0x00000000c000d118                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d184                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000d1f0       0x7f hal/mouse.32
                0x00000000c000d1f0                Mouse::Mouse(char const*)
                0x00000000c000d1f0                Mouse::Mouse(char const*)
                0x00000000c000d228                Mouse::~Mouse()
                0x00000000c000d228                Mouse::~Mouse()
                0x00000000c000d248                Mouse::~Mouse()
 *fill*         0x00000000c000d26f        0x1 
 .text          0x00000000c000d270       0x89 hal/nic.32
                0x00000000c000d270                NIC::getMAC()
                0x00000000c000d276                NIC::write(int, unsigned char*, int*)
                0x00000000c000d27c                NIC::NIC(char const*)
                0x00000000c000d27c                NIC::NIC(char const*)
                0x00000000c000d2b2                NIC::~NIC()
                0x00000000c000d2b2                NIC::~NIC()
                0x00000000c000d2d2                NIC::~NIC()
 .text          0x00000000c000d2f9      0x336 hal/partition.32
                0x00000000c000d2f9                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d3a1                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d62f        0x1 
 .text          0x00000000c000d630       0x7f hal/serial.32
                0x00000000c000d630                Serial::Serial(char const*)
                0x00000000c000d630                Serial::Serial(char const*)
                0x00000000c000d668                Serial::~Serial()
                0x00000000c000d668                Serial::~Serial()
                0x00000000c000d688                Serial::~Serial()
 *fill*         0x00000000c000d6af        0x1 
 .text          0x00000000c000d6b0      0x22c hal/timer.32
                0x00000000c000d6b0                Timer::Timer(char const*)
                0x00000000c000d6b0                Timer::Timer(char const*)
                0x00000000c000d6e8                Timer::~Timer()
                0x00000000c000d6e8                Timer::~Timer()
                0x00000000c000d708                Timer::~Timer()
                0x00000000c000d730                Timer::read()
                0x00000000c000d73b                setupTimer(int)
                0x00000000c000d776                timerHandler(unsigned int)
 .text          0x00000000c000d8dc      0x434 hal/vcache.32
                0x00000000c000d8dc                VCache::VCache(PhysicalDisk*)
                0x00000000c000d8dc                VCache::VCache(PhysicalDisk*)
                0x00000000c000da3c                VCache::invalidateReadBuffer()
                0x00000000c000da4c                VCache::writeWriteBuffer()
                0x00000000c000da98                VCache::~VCache()
                0x00000000c000da98                VCache::~VCache()
                0x00000000c000dae4                VCache::~VCache()
                0x00000000c000db0c                VCache::write(unsigned long long, int, void*)
                0x00000000c000dc06                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000dd10      0x4d1 hal/video.32
                0x00000000c000dd10                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000dd5c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ddcc                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000de5c                Video::clearScreen(unsigned int)
                0x00000000c000de90                Video::putpixel(int, int, unsigned int)
                0x00000000c000de9e                Video::readPixelApprox(int, int)
                0x00000000c000deb2                Video::Video(char const*)
                0x00000000c000deb2                Video::Video(char const*)
                0x00000000c000dee8                Video::~Video()
                0x00000000c000dee8                Video::~Video()
                0x00000000c000df08                Video::~Video()
                0x00000000c000df30                Video::isMonochrome()
                0x00000000c000df3c                Video::getWidth()
                0x00000000c000df48                Video::getHeight()
                0x00000000c000df54                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e010                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e176                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e1e1        0x3 
 .text          0x00000000c000e1e4     0x1305 hw/acpi.32
                0x00000000c000e1e4                ACPI::close(int, int, void*)
                0x00000000c000e294                findRSDP()
                0x00000000c000e32c                loadACPITables(unsigned char*)
                0x00000000c000e5b0                findRSDT(unsigned char*)
                0x00000000c000e71c                findDataTable(unsigned char*, char*)
                0x00000000c000e79c                scanMADT()
                0x00000000c000ec64                ACPI::ACPI()
                0x00000000c000ec64                ACPI::ACPI()
                0x00000000c000ecb8                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ed9c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ee64                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ee6c                ACPI::detectPCI()
                0x00000000c000f074                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f0c0                ACPI::sleep()
                0x00000000c000f0dc                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f4e9        0x1 
 .text          0x00000000c000f4ea      0xb69 hw/cpu.32
                0x00000000c000f4ea                CPU::close(int, int, void*)
                0x00000000c000f4ee                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f50a                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f522                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f596                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f61a                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f648                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f676                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f6a4                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f6d2                CPU::CPU()
                0x00000000c000f6d2                CPU::CPU()
                0x00000000c000f754                CPU::displayFeatures()
                0x00000000c000f756                CPU::detectFeatures()
                0x00000000c000fdfa                CPU::setupSMEP()
                0x00000000c000fe06                CPU::setupUMIP()
                0x00000000c000fe10                CPU::setupTSC()
                0x00000000c000fe1a                CPU::setupLargePages()
                0x00000000c000fe24                CPU::setupPAT()
                0x00000000c000fe60                CPU::setupMTRR()
                0x00000000c000fe62                CPU::setupGlobalPages()
                0x00000000c000fe6c                CPU::allowUsermodeDataAccess()
                0x00000000c000fe7e                CPU::prohibitUsermodeDataAccess()
                0x00000000c000fe90                CPU::setupSMAP()
                0x00000000c000fe9e                CPU::setupFeatures()
                0x00000000c000ff6a                CPU::open(int, int, void*)
 .text          0x00000000c0010053       0xd1 krnl/bootmsg.32
                0x00000000c0010053                KeDisplaySplashScreen()
                0x00000000c00100c1                KeSetBootMessage(char const*)
 .text          0x00000000c0010124      0x57d krnl/env.32
                0x00000000c0010124                EnvVarContainer::getEnv(char const*)
                0x00000000c0010162                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010224                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010226                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001040c                EnvVarContainer::__loadSystem()
                0x00000000c0010426                EnvVarContainer::__loadUser()
                0x00000000c0010428                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010428                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001044a                EnvVarContainer::~EnvVarContainer()
                0x00000000c001044a                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010476                Krnl::getEnv(Process*, char const*)
                0x00000000c00104db                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00104f5                Krnl::setEnvUser(char const*, char const*)
                0x00000000c0010514                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0010527                Krnl::deleteEnvSystem(char const*)
                0x00000000c0010528                Krnl::deleteEnvUser(char const*)
                0x00000000c0010529                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c001052a                Krnl::newProcessEnv(Process*)
                0x00000000c001054c                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010598                Krnl::loadSystemEnv()
                0x00000000c00105c6                Krnl::loadUserEnv()
                0x00000000c00105ec                Krnl::flushEnv()
                0x00000000c00105ed                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001060d                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00106a1       0x94 krnl/inlines.32
                0x00000000c00106a1                CPU::current()
                0x00000000c00106ad                operator new(unsigned long)
                0x00000000c00106b2                operator delete(void*)
                0x00000000c00106b7                disableIRQs()
                0x00000000c00106b9                enableIRQs()
                0x00000000c00106bb                lockScheduler()
                0x00000000c00106c3                unlockScheduler()
                0x00000000c00106d2                lockStuff()
                0x00000000c00106e0                unlockStuff()
                0x00000000c001071a                Virt::getAKernelVAS()
                0x00000000c0010720                __not_memcpy
 .text          0x00000000c0010735        0xc krnl/panic.32
                0x00000000c0010735                KePanic(char const*)
 .text          0x00000000c0010741      0x142 krnl/powctrl.32
                0x00000000c0010741                Krnl::powerThread(void*)
                0x00000000c001076f                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010785                Krnl::userIOReceived()
                0x00000000c0010790                Krnl::handlePowerButton()
                0x00000000c00107c5                Krnl::handleSleepButton()
                0x00000000c00107fa                Krnl::setupPowerManager()
 .text          0x00000000c0010883       0x9b krnl/random.32
                0x00000000c0010883                KeRand()
                0x00000000c00108c3                KeSeedRand(unsigned int)
                0x00000000c00108ec                KeInitRand()
 *fill*         0x00000000c001091e        0x2 
 .text          0x00000000c0010920      0x190 krnl/resolve.32
                0x00000000c0010920                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010ab0      0x315 krnl/signal.32
                0x00000000c0010ab0                KiSigKill(int)
                0x00000000c0010ac4                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010ac5                KiDefaultSignalHandlerPause(int)
                0x00000000c0010af1                KiDefaultSignalHandlerResume(int)
                0x00000000c0010b1d                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010b22                KeInitSignals()
                0x00000000c0010b6d                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010ba3                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010c20                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010d11                KiCheckSignalZ
                0x00000000c0010d53                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010d8e                KiFinishSignalZ
 .text          0x00000000c0010dc5      0xda8 krnl/syscalls.32
                0x00000000c0010dc5                SysSeekDir(regs*)
                0x00000000c0010dca                SysTellDir(regs*)
                0x00000000c0010dcf                SysVerify(regs*)
                0x00000000c0010dd9                SysGetArgc(regs*)
                0x00000000c0010de9                SysTTYName(regs*)
                0x00000000c0010df1                SysFormatDisk(regs*)
                0x00000000c0010e60                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010eca                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010f4b                SysShutdown(regs*)
                0x00000000c0011013                SysRealpath(regs*)
                0x00000000c0011064                SysReadDir(regs*)
                0x00000000c00110e8                SysIsATTY(regs*)
                0x00000000c001113a                SysSeek(regs*)
                0x00000000c00111a7                SysTell(regs*)
                0x00000000c0011213                SysSize(regs*)
                0x00000000c0011287                SysSizeFromFilename(regs*)
                0x00000000c0011357                SysClose(regs*)
                0x00000000c00113af                SysOpenDir(regs*)
                0x00000000c0011437                SysMakeDir(regs*)
                0x00000000c00114a5                SysCloseDir(regs*)
                0x00000000c00114ec                SysWait(regs*)
                0x00000000c0011511                SysNotImpl(regs*)
                0x00000000c001152e                SysPanic(regs*)
                0x00000000c001154b                SysRmdir(regs*)
                0x00000000c00115a9                SysUnlink(regs*)
                0x00000000c0011607                SysGetArgv(regs*)
                0x00000000c0011653                SysUSleep(regs*)
                0x00000000c001168d                SysSpawn(regs*)
                0x00000000c001170c                SysGetEnv(regs*)
                0x00000000c00117dd                SysSetFatAttrib(regs*)
                0x00000000c0011860                SysPipe(regs*)
                0x00000000c00118c0                SysGetUnixTime(regs*)
                0x00000000c00118d4                string_ends_with(char const*, char const*)
                0x00000000c001192e                SysOpen(regs*)
                0x00000000c0011b2b                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011b6d        0x3 
 .text          0x00000000c0011b70      0x151 net/ethernet.32
                0x00000000c0011b70                KeSwitchEndian16(unsigned short)
                0x00000000c0011b98                KeSwitchEndian32(unsigned int)
                0x00000000c0011bc8                EthernetCRC32(unsigned char*, int)
                0x00000000c0011c6c                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0011cc1      0xd4e reg/cm.32
                0x00000000c0011cc1                CmOpen(char const*)
                0x00000000c0011ddf                CmClose(Reghive_Tag*)
                0x00000000c0011df5                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011e31                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011ea8                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011ee7                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011f19                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011f55                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0011f7d                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0011f9e                CmExpand(Reghive_Tag*, int)
                0x00000000c0012019                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c001209f                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012196                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c00122d2                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012333                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012361                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012399                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00123c3                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012403                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00124a7                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c00124d5                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0012672                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00126bf                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012739                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001278c                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012850                zStrtok(char*, char const*)
                0x00000000c00128b9                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c001293a                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00129dd                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0012a0f      0x521 reg/registry.32
                0x00000000c0012a0f                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012b7e                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012cd3                Reg::getLine(char*, char*, char*)
                0x00000000c0012d0a                Reg::readInt(char*, char*, int*)
                0x00000000c0012de6                Reg::readString(char*, char*, char*, int)
                0x00000000c0012e6c                Reg::readBool(char*, char*, bool*)
                0x00000000c0012e91                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012ec3                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012eef                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012f30       0x36 sys/eject.32
                0x00000000c0012f30                SysEject(regs*)
 .text          0x00000000c0012f66       0x18 sys/exit.32
                0x00000000c0012f66                SysExit(regs*)
 .text          0x00000000c0012f7e       0x1f sys/getcwd.32
                0x00000000c0012f7e                SysGetCwd(regs*)
 .text          0x00000000c0012f9d        0xc sys/getpid.32
                0x00000000c0012f9d                SysGetPID(regs*)
 .text          0x00000000c0012fa9       0x1a sys/getramdata.32
                0x00000000c0012fa9                SysGetRAMData(regs*)
 .text          0x00000000c0012fc3       0x82 sys/getvgaptr.32
                0x00000000c0012fc3                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013045        0x3 
 .text          0x00000000c0013048       0xb9 sys/kill.32
                0x00000000c0013048                SysKill(regs*)
 .text          0x00000000c0013101       0xa8 sys/loaddll.32
                0x00000000c0013101                SysLoadDLL(regs*)
 .text          0x00000000c00131a9       0x68 sys/read.32
                0x00000000c00131a9                SysRead(regs*)
 .text          0x00000000c0013211       0x29 sys/registersignal.32
                0x00000000c0013211                SysRegisterSignal(regs*)
 .text          0x00000000c001323a      0x19c sys/registry.32
                0x00000000c001323a                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00132b1                SysRegistryReadExtent(regs*)
                0x00000000c00132f9                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013321                SysRegistryEnterDirectory(regs*)
                0x00000000c0013349                SysRegistryGetNext(regs*)
                0x00000000c0013371                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00133ab                SysRegistryOpen(regs*)
                0x00000000c00133bf                SysRegistryClose(regs*)
 .text          0x00000000c00133d6       0x55 sys/sbrk.32
                0x00000000c00133d6                SysSbrk(regs*)
 .text          0x00000000c001342b       0x1c sys/setcwd.32
                0x00000000c001342b                SysSetCwd(regs*)
 .text          0x00000000c0013447       0xb3 sys/settime.32
                0x00000000c0013447                SysSetTime(regs*)
 .text          0x00000000c00134fa       0x4a sys/timezone.32
                0x00000000c00134fa                SysTimezone(regs*)
 .text          0x00000000c0013544       0x68 sys/write.32
                0x00000000c0013544                SysWrite(regs*)
 .text          0x00000000c00135ac       0x62 sys/wsbe.32
                0x00000000c00135ac                SysWsbe(regs*)
 .text          0x00000000c001360e       0x25 sys/yield.32
                0x00000000c001360e                SysYield(regs*)
 .text          0x00000000c0013633     0x120f thr/elf.32
                0x00000000c0013633                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00138ba                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013add                Thr::runtimeReferenceHelper()
                0x00000000c0013af0                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013b3f                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013e00                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001454a                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001457c                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00145b3                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00145cd                Thr::loadDLL(char const*, bool)
                0x00000000c0014809                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0014842        0xe 
 .text          0x00000000c0014850     0x12b7 thr/prcssthr.32
                0x00000000c0014850                userModeEntryPoint(void*)
                0x00000000c0014878                changeTSS
                0x00000000c00148b0                switchToThread(ThreadControlBlock*)
                0x00000000c0014984                Process::addArgs(char**)
                0x00000000c00149e8                Process::Process(char const*, Process*, char**)
                0x00000000c00149e8                Process::Process(char const*, Process*, char**)
                0x00000000c0014be0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014be0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014da0                taskStartupFunction
                0x00000000c0014dac                Semaphore::Semaphore(int)
                0x00000000c0014dac                Semaphore::Semaphore(int)
                0x00000000c0014ddc                Mutex::Mutex()
                0x00000000c0014ddc                Mutex::Mutex()
                0x00000000c0014df8                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014efc                Process::createUserThread()
                0x00000000c0014f28                setupMultitasking(void (*)())
                0x00000000c0015050                schedule()
                0x00000000c00150dc                Semaphore::tryAcquire()
                0x00000000c0015194                Semaphore::assertLocked(char const*)
                0x00000000c0015204                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001522c                blockTask(TaskState)
                0x00000000c001525c                waitTask(int, int*, int)
                0x00000000c00152a4                milliTenthSleepUntil(unsigned int)
                0x00000000c001532c                milliTenthSleep(unsigned int)
                0x00000000c001533c                sleep(unsigned int)
                0x00000000c001534c                Semaphore::acquire()
                0x00000000c0015400                taskReturned
                0x00000000c0015438                Thr::processFromPID(int)
                0x00000000c00154d8                unblockTask(ThreadControlBlock*)
                0x00000000c001556c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015824                cleanerTaskFunction(void*)
                0x00000000c0015908                terminateTask(int)
                0x00000000c00159cc                Thr::terminateFromIRQ(int)
                0x00000000c00159dc                Semaphore::release()
 .text          0x00000000c0015b07      0xb88 vm86/vm8086.32
                0x00000000c0015b07                Vm::inbv(unsigned short)
                0x00000000c0015b1c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015b54                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015b64                Vm::getSegment(unsigned int)
                0x00000000c0015b6c                Vm::getOffset(unsigned int)
                0x00000000c0015b71                Vm::mainloop2()
                0x00000000c0015bab                Vm::mainVm8086Loop(void*)
                0x00000000c0015bbb                Vm::mainloop3(unsigned long)
                0x00000000c0015be1                Vm::initialise8086()
                0x00000000c0015c24                Vm::finish8086()
                0x00000000c0015c85                Vm::getOutput8086(unsigned char*)
                0x00000000c0015caa                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015d61                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015ec4                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0015f52                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0015f63                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0015f75                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0015f86                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0015f9b                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0015fb2                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0015fc7                Vm::faultHandler(regs*)
 .text          0x00000000c001668f      0xa55 arch/i386/hal.32
                0x00000000c001668f                noCopro(unsigned long)
                0x00000000c0016690                nmiHandler(regs*, void*)
                0x00000000c00166a5                doubleFault(regs*, void*)
                0x00000000c00166ba                displayDebugInfo(regs*)
                0x00000000c00169fb                HalSystemIdle()
                0x00000000c0016a76                displayProgramFault(char const*)
                0x00000000c0016ace                gpFault(regs*, void*)
                0x00000000c0016b28                pgFault(regs*, void*)
                0x00000000c0016ba7                otherISRHandler(regs*, void*)
                0x00000000c0016bd3                opcodeFault(regs*, void*)
                0x00000000c0016c47                i386SaveCoprocessor(void*)
                0x00000000c0016c5b                i386LoadCoprocessor(void*)
                0x00000000c0016c6f                x87EmulHandler(regs*, void*)
                0x00000000c0016d0c                HalInitialiseCoprocessor()
                0x00000000c0016dba                HalPanic(char const*)
                0x00000000c0016eb3                HalQueryPerformanceCounter()
                0x00000000c0016ece                HalInitialise()
                0x00000000c0017074                HalMakeBeep(int)
                0x00000000c00170ad                HalGetRand()
                0x00000000c00170b0                HalEndOfInterrupt(int)
                0x00000000c00170e1                HalRestart()
                0x00000000c00170e2                HalShutdown()
                0x00000000c00170e3                HalSleep()
 .text          0x00000000c00170e4      0x300 arch/i386/pic.32
                0x00000000c00170e4                picIoWait()
                0x00000000c00170ec                picDisable()
                0x00000000c0017124                picGetIRQReg(int)
                0x00000000c00171a8                picOpen()
                0x00000000c001733c                picEOI(int)
 .text          0x00000000c00173e4      0x681 arch/i386/rtc.32
                0x00000000c00173e4                RTC::open(int, int, void*)
                0x00000000c00173e8                RTC::close(int, int, void*)
                0x00000000c00173ec                RTC::timeInSecondsUTC()
                0x00000000c00173fe                RTC::timeInDatetimeUTC()
                0x00000000c0017424                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0017462                RTC::~RTC()
                0x00000000c0017462                RTC::~RTC()
                0x00000000c0017482                RTC::~RTC()
                0x00000000c00174aa                RTC::get_update_in_progress_flag()
                0x00000000c00174c2                RTC::completeRTCRefresh()
                0x00000000c00177a6                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001794c                rtcIRQHandler(regs*, void*)
                0x00000000c001799c                RTC::RTC()
                0x00000000c001799c                RTC::RTC()
 *fill*         0x00000000c0017a65        0x3 
 .text          0x00000000c0017a68      0x20a arch/i386/vga.32
                0x00000000c0017a68                HalConsoleScroll(int, int)
                0x00000000c0017b70                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017bdc                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0017c72        0x2 
 .text          0x00000000c0017c74     0x13fb fs/fat/vfslink.32
                0x00000000c0017c74                FAT::getName()
                0x00000000c0017c7c                FAT::tell(void*, unsigned long long*)
                0x00000000c0017cb8                FAT::stat(void*, unsigned long long*)
                0x00000000c0017cf4                FAT::~FAT()
                0x00000000c0017cf4                FAT::~FAT()
                0x00000000c0017d14                FAT::~FAT()
                0x00000000c0017d3c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017de4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0017ec0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001809c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00182b8                FAT::allocateSwapfile(char const*, int)
                0x00000000c0018494                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00185fc                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0018668                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00186d4                FAT::close(void*)
                0x00000000c0018720                FAT::closeDir(void*)
                0x00000000c001876c                FAT::seek(void*, unsigned long long)
                0x00000000c00187c4                fatWrapperReadDisk
                0x00000000c001880c                fatWrapperWriteDisk
                0x00000000c0018854                fatWrapperIoctl
                0x00000000c0018970                FAT::FAT()
                0x00000000c0018970                FAT::FAT()
                0x00000000c00189c0                FAT::fixFilepath(char*)
                0x00000000c00189fc                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0018b2c                FAT::openDir(char const*, void**)
                0x00000000c0018bdc                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018cd0                FAT::unlink(char const*)
                0x00000000c0018d4c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0018eb8                FAT::rename(char const*, char const*)
                0x00000000c0018f84                FAT::mkdir(char const*)
                0x00000000c0019000                FAT::exists(char const*)
 *fill*         0x00000000c001906f        0x1 
 .text          0x00000000c0019070       0xa0 fs/iso9660/helper.32
                0x00000000c0019070                isoReadDiscSectorHelper
                0x00000000c00190d8                iso_kprintf
                0x00000000c00190f4                iso_kprintfd
 .text          0x00000000c0019110      0x6ee fs/iso9660/vfslink.32
                0x00000000c0019110                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019116                ISO9660::getName()
                0x00000000c001911c                ISO9660::closeDir(void*)
                0x00000000c0019126                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001912c                ISO9660::unlink(char const*)
                0x00000000c0019132                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019138                ISO9660::rename(char const*, char const*)
                0x00000000c001913e                ISO9660::mkdir(char const*)
                0x00000000c0019144                ISO9660::~ISO9660()
                0x00000000c0019144                ISO9660::~ISO9660()
                0x00000000c0019164                ISO9660::~ISO9660()
                0x00000000c001918c                ISO9660::exists(char const*)
                0x00000000c00191a0                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001927e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c00192c6                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019308                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019346                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019398                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c00194d0                ISO9660::close(void*)
                0x00000000c0019500                ISO9660::openDir(char const*, void**)
                0x00000000c00195d2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c00196ed                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0019768                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c00197da                ISO9660::ISO9660()
                0x00000000c00197da                ISO9660::ISO9660()
 .text          0x00000000c00197fe      0x264 hal/sound/sndcard.32
                0x00000000c00197fe                SoundCard::beginPlayback()
                0x00000000c001980c                SoundCard::stopPlayback()
                0x00000000c001981a                SoundCard::SoundCard(char const*)
                0x00000000c001981a                SoundCard::SoundCard(char const*)
                0x00000000c00198b8                SoundCard::~SoundCard()
                0x00000000c00198b8                SoundCard::~SoundCard()
                0x00000000c00198d8                SoundCard::~SoundCard()
                0x00000000c0019900                SoundCard::configureRates(int, int, int)
                0x00000000c0019930                SoundCard::getSamples16(int, short*)
                0x00000000c001998c                SoundCard::getSamples32(int, int*)
                0x00000000c0019a10                SoundCard::addChannel(SoundPort*)
                0x00000000c0019a4e                SoundCard::removeChannel(int)
 *fill*         0x00000000c0019a62        0x2 
 .text          0x00000000c0019a64      0x35f hal/sound/sndport.32
                0x00000000c0019a64                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019a64                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019aec                SoundPort::~SoundPort()
                0x00000000c0019aec                SoundPort::~SoundPort()
                0x00000000c0019b1c                SoundPort::unpause()
                0x00000000c0019b28                SoundPort::pause()
                0x00000000c0019b34                SoundPort::getBufferUsed()
                0x00000000c0019b3c                SoundPort::getBufferSize()
                0x00000000c0019b44                SoundPort::buffer16(short*, int)
                0x00000000c0019bd0                SoundPort::buffer32(int*, int)
                0x00000000c0019c58                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019d14                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0019dc3        0x0 hw/bus/isa.32
 *fill*         0x00000000c0019dc3        0x1 
 .text          0x00000000c0019dc4      0xb7d hw/bus/pci.32
                0x00000000c0019dc4                PCI::open(int, int, void*)
                0x00000000c0019de2                PCI::close(int, int, void*)
                0x00000000c0019de6                PCI::PCI()
                0x00000000c0019de6                PCI::PCI()
                0x00000000c0019e80                PCI::readBAR8(unsigned int, int)
                0x00000000c0019e9c                PCI::readBAR16(unsigned int, int)
                0x00000000c0019ebc                PCI::readBAR32(unsigned int, int)
                0x00000000c0019ed8                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0019ef8                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0019f1a                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0019f3a                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019fb8                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a062                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a086                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a0ae                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a0f8                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a120                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a148                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a170                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a198                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a1fa                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001a2c4                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a56e                PCI::checkBus(unsigned char)
                0x00000000c001a592                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a70a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001a876                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001a8e8                PCI::detect()
 *fill*         0x00000000c001a941        0x1 
 .text          0x00000000c001a942      0xb44 hw/diskctrl/ide.32
                0x00000000c001a942                IDE::close(int, int, void*)
                0x00000000c001a946                IDE::IDE()
                0x00000000c001a946                IDE::IDE()
                0x00000000c001a978                IDE::prepareInterrupt(unsigned char)
                0x00000000c001a98a                selectDrive(unsigned char, unsigned char)
                0x00000000c001a98c                IDE::getBase(unsigned char)
                0x00000000c001a99e                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001aa4c                IDE::read(unsigned char, unsigned char)
                0x00000000c001aae8                IDE::waitInterrupt(unsigned char)
                0x00000000c001ab4d                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ab69                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ab86                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001abcc                IDE::open(int, int, void*)
                0x00000000c001afe4                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b09e                IDE::detect()
                0x00000000c001b358                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b42a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b486      0x334 hw/diskctrl/satabus.32
                0x00000000c001b486                SATABus::close(int, int, void*)
                0x00000000c001b48a                SATABus::detect()
                0x00000000c001b48c                SATABus::SATABus()
                0x00000000c001b48c                SATABus::SATABus()
                0x00000000c001b51c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b54e                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b594                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b5b4                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b5de                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b6f0                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001b79a                SATABus::open(int, int, void*)
 .text          0x00000000c001b7ba      0x958 hw/diskphys/ata.32
                0x00000000c001b7ba                ATA::close(int, int, void*)
                0x00000000c001b7de                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001b7e0                ATA::ATA()
                0x00000000c001b7e0                ATA::ATA()
                0x00000000c001b810                ATA::flush(bool)
                0x00000000c001b85a                ATA::readyForCommand()
                0x00000000c001b8a6                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001bc46                ATA::detectCHS()
                0x00000000c001bc70                ATA::open(int, int, void*)
                0x00000000c001bd3c                combineCharAndColour(char, unsigned char)
                0x00000000c001bd4d                combineColours(unsigned char, unsigned char)
                0x00000000c001bd5a                ATA::read(unsigned long long, int, void*)
                0x00000000c001bf38                ATA::write(unsigned long long, int, void*)
 .text          0x00000000c001c112      0x60c hw/diskphys/atapi.32
                0x00000000c001c112                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c118                ATAPI::close(int, int, void*)
                0x00000000c001c13c                ATAPI::ATAPI()
                0x00000000c001c13c                ATAPI::ATAPI()
                0x00000000c001c16c                ATAPI::readyForCommand()
                0x00000000c001c1be                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c47e                ATAPI::diskRemoved()
                0x00000000c001c4b8                ATAPI::eject()
                0x00000000c001c500                ATAPI::diskInserted()
                0x00000000c001c50c                ATAPI::detectMedia()
                0x00000000c001c5c6                ATAPI::open(int, int, void*)
                0x00000000c001c6a6                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001c71e      0x7fb hw/diskphys/sata.32
                0x00000000c001c71e                SATA::close(int, int, void*)
                0x00000000c001c742                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001c744                SATA::open(int, int, void*)
                0x00000000c001c7ee                SATA::SATA()
                0x00000000c001c7ee                SATA::SATA()
                0x00000000c001c81e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ca64                SATA::read(unsigned long long, int, void*)
                0x00000000c001ccb6                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001cf19        0x1 
 .text          0x00000000c001cf1a      0x5ce hw/diskphys/satapi.32
                0x00000000c001cf1a                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001cf20                SATAPI::close(int, int, void*)
                0x00000000c001cf44                SATAPI::SATAPI()
                0x00000000c001cf44                SATAPI::SATAPI()
                0x00000000c001cf74                SATAPI::diskRemoved()
                0x00000000c001cf76                SATAPI::diskInserted()
                0x00000000c001cf92                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001d26e                SATAPI::eject()
                0x00000000c001d2aa                SATAPI::detectMedia()
                0x00000000c001d300                SATAPI::open(int, int, void*)
                0x00000000c001d400                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d4e8      0x45c hw/intctrl/apic.32
                0x00000000c001d4e8                IOAPIC::close(int, int, void*)
                0x00000000c001d4ee                apicGetBase()
                0x00000000c001d532                IOAPIC::IOAPIC()
                0x00000000c001d532                IOAPIC::IOAPIC()
                0x00000000c001d559                apicOpen()
                0x00000000c001d6c6                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d6f8                IOAPIC::read(int)
                0x00000000c001d720                IOAPIC::open(int, int, void*)
                0x00000000c001d80c                IOAPIC::write(int, int)
                0x00000000c001d838                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 .text          0x00000000c001d944       0xf3 hw/timer/apictimer.32
                0x00000000c001d944                APICTimer::close(int, int, void*)
                0x00000000c001d94c                apicTimerHandler(regs*, void*)
                0x00000000c001d970                APICTimer::open(int, int, void*)
                0x00000000c001d9ec                APICTimer::write(int)
                0x00000000c001da10                APICTimer::APICTimer()
                0x00000000c001da10                APICTimer::APICTimer()
 *fill*         0x00000000c001da37        0x1 
 .text          0x00000000c001da38      0x1c7 hw/timer/pit.32
                0x00000000c001da38                PIT::write(int)
                0x00000000c001dabc                pitHandler(regs*, void*)
                0x00000000c001dadc                PIT::open(int, int, void*)
                0x00000000c001db3c                PIT::close(int, int, void*)
                0x00000000c001db7c                PIT::PIT()
                0x00000000c001db7c                PIT::PIT()
 *fill*         0x00000000c001dbff        0x1 
 .text          0x00000000c001dc00       0x83 arch/i386/avx.32
                0x00000000c001dc00                avxDetect
                0x00000000c001dc2a                avxSave
                0x00000000c001dc3b                avxLoad
                0x00000000c001dc4c                avxInit
                0x00000000c001dc6e                avxClose
                0x00000000c001dc6f                wouldSheSayYes
 *fill*         0x00000000c001dc83        0xd 
 .text          0x00000000c001dc90      0x2ec arch/i386/interrupt.32
                0x00000000c001dc90                isr0
                0x00000000c001dca0                isr1
                0x00000000c001dcaa                isr2
                0x00000000c001dcb4                isr3
                0x00000000c001dcbe                isr4
                0x00000000c001dcc8                isr5
                0x00000000c001dcd2                isr6
                0x00000000c001dcdc                isr7
                0x00000000c001dce6                isr8
                0x00000000c001dcee                isr9
                0x00000000c001dcf8                isr10
                0x00000000c001dd00                isr11
                0x00000000c001dd08                isr12
                0x00000000c001dd10                isr13
                0x00000000c001dd2a                isr14
                0x00000000c001dd32                isr15
                0x00000000c001dd3c                isr16
                0x00000000c001dd46                isr17
                0x00000000c001dd50                isr18
                0x00000000c001dd5a                irq3
                0x00000000c001dd64                irq4
                0x00000000c001dd6e                irq5
                0x00000000c001dd78                irq6
                0x00000000c001dd82                irq7
                0x00000000c001dd8c                irq8
                0x00000000c001dd96                irq9
                0x00000000c001dda0                irq10
                0x00000000c001ddaa                irq11
                0x00000000c001ddb4                irq12
                0x00000000c001ddbe                irq13
                0x00000000c001ddc8                irq14
                0x00000000c001ddd2                irq15
                0x00000000c001dddc                irq1
                0x00000000c001dde3                irq2
                0x00000000c001ddea                isr96
                0x00000000c001ddf1                irq0
                0x00000000c001ddf6                int_common_stub
                0x00000000c001de28                syscall_common_stub
                0x00000000c001df2c                irq16
                0x00000000c001df36                irq17
                0x00000000c001df40                irq18
                0x00000000c001df4a                irq19
                0x00000000c001df54                irq20
                0x00000000c001df5e                irq21
                0x00000000c001df68                irq22
                0x00000000c001df72                irq23
 *fill*         0x00000000c001df7c        0x4 
 .text          0x00000000c001df80       0x10 arch/i386/rdrand.32
                0x00000000c001df80                i386GetRDRAND
 .text          0x00000000c001df90       0x39 arch/i386/sse.32
                0x00000000c001df90                absolutelyNoChanceInHell
                0x00000000c001df90                sseDetect
                0x00000000c001dfa8                sseSave
                0x00000000c001dfb0                sseLoad
                0x00000000c001dfb8                sseInit
                0x00000000c001dfc8                sseClose
 *fill*         0x00000000c001dfc9        0x7 
 .text          0x00000000c001dfd0       0x49 arch/i386/x87.32
                0x00000000c001dfd6                x87Detect
                0x00000000c001dff1                x87Save
                0x00000000c001dff8                x87Load
                0x00000000c001dfff                x87Init
                0x00000000c001e018                x87Close
 *fill*         0x00000000c001e019        0x3 
 .text          0x00000000c001e01c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e041        0x0 crtn.32
 *fill*         0x00000000c001e041        0x3 
 .text          0x00000000c001e044      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e044                __divdi3
 *fill*         0x00000000c001e18f        0x1 
 .text          0x00000000c001e190      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e190                __moddi3
 *fill*         0x00000000c001e30e        0x2 
 .text          0x00000000c001e310       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001e310                __udivdi3
 *fill*         0x00000000c001e40f        0x1 
 .text          0x00000000c001e410      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001e410                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e530        0x0
 .iplt          0x00000000c001e530        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e52a        0xf
 .init          0x00000000c001e52a        0x3 crti.32
                0x00000000c001e52a                _init
 .init          0x00000000c001e52d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e532        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e537        0x2 crtn.32

.fini           0x00000000c001e539        0xa
 .fini          0x00000000c001e539        0x3 crti.32
                0x00000000c001e539                _fini
 .fini          0x00000000c001e53c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e541        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e544       0x1f
 .text._ZN8ComputerD2Ev
                0x00000000c001e544       0x1f core/computer.32
                0x00000000c001e544                Computer::~Computer()
                0x00000000c001e544                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e564       0x27
 .text._ZN8ComputerD0Ev
                0x00000000c001e564       0x27 core/computer.32
                0x00000000c001e564                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e58b       0x21
 .text._Z10idleCommonv
                0x00000000c001e58b       0x21 core/idle.32
                0x00000000c001e58b                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e5ac        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e5ac        0x2 core/unixfile.32
                0x00000000c001e5ac                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e5ac                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e5ae       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e5ae       0x42 core/unixfile.32
                0x00000000c001e5ae                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e5ae                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e5f0       0xc7
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e5f0       0xc7 core/unixfile.32
                0x00000000c001e5f0                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e6b8        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e6b8        0x7 core/unixfile.32
                0x00000000c001e6b8                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e6c0       0x95
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e6c0       0x95 core/unixfile.32
                0x00000000c001e6c0                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e756        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e756        0x8 core/unixfile.32
                0x00000000c001e756                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e75e       0x1f
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e75e       0x1f hal/device.32
                0x00000000c001e75e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e75e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e77e       0x27
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e77e       0x27 hal/device.32
                0x00000000c001e77e                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e7a6       0xd0
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e7a6       0xd0 hal/device.32
                0x00000000c001e7a6                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e876       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e876       0x42 hal/device.32
                0x00000000c001e876                LinkedList<Device>::LinkedList()
                0x00000000c001e876                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e8b8       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e8b8       0x1c hal/timer.32
                0x00000000c001e8b8                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e8d4        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e8d4        0x7 hal/timer.32
                0x00000000c001e8d4                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e8dc       0xac
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e8dc       0xac hal/timer.32
                0x00000000c001e8dc                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e988       0xce
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e988       0xce hal/timer.32
                0x00000000c001e988                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ea58       0x1f
 .text._ZN4ACPID2Ev
                0x00000000c001ea58       0x1f hw/acpi.32
                0x00000000c001ea58                ACPI::~ACPI()
                0x00000000c001ea58                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ea78       0x27
 .text._ZN4ACPID0Ev
                0x00000000c001ea78       0x27 hw/acpi.32
                0x00000000c001ea78                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001eaa0        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001eaa0        0x2 hw/acpi.32
                0x00000000c001eaa0                LinkedList<Device>::~LinkedList()
                0x00000000c001eaa0                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001eaa4       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001eaa4       0x1c hw/acpi.32
                0x00000000c001eaa4                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001eac0        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001eac0        0x7 hw/acpi.32
                0x00000000c001eac0                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001eac8       0xac
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001eac8       0xac hw/acpi.32
                0x00000000c001eac8                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001eb74       0x1f
 .text._ZN3CPUD2Ev
                0x00000000c001eb74       0x1f hw/cpu.32
                0x00000000c001eb74                CPU::~CPU()
                0x00000000c001eb74                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001eb94       0x27
 .text._ZN3CPUD0Ev
                0x00000000c001eb94       0x27 hw/cpu.32
                0x00000000c001eb94                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ebbc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ebbc        0x8 sys/kill.32
                0x00000000c001ebbc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ebc4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ebc4        0x2 thr/prcssthr.32
                0x00000000c001ebc4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ebc4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ebc8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ebc8       0x49 thr/prcssthr.32
                0x00000000c001ebc8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ebc8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ec14       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ec14       0x42 thr/prcssthr.32
                0x00000000c001ec14                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ec14                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001ec56       0x1f
 .text._ZN3PCID2Ev
                0x00000000c001ec56       0x1f hw/bus/pci.32
                0x00000000c001ec56                PCI::~PCI()
                0x00000000c001ec56                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ec76       0x27
 .text._ZN3PCID0Ev
                0x00000000c001ec76       0x27 hw/bus/pci.32
                0x00000000c001ec76                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001ec9e       0x1f
 .text._ZN3IDED2Ev
                0x00000000c001ec9e       0x1f hw/diskctrl/ide.32
                0x00000000c001ec9e                IDE::~IDE()
                0x00000000c001ec9e                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001ecbe       0x27
 .text._ZN3IDED0Ev
                0x00000000c001ecbe       0x27 hw/diskctrl/ide.32
                0x00000000c001ecbe                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001ece6       0x1f
 .text._ZN7SATABusD2Ev
                0x00000000c001ece6       0x1f hw/diskctrl/satabus.32
                0x00000000c001ece6                SATABus::~SATABus()
                0x00000000c001ece6                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001ed06       0x27
 .text._ZN7SATABusD0Ev
                0x00000000c001ed06       0x27 hw/diskctrl/satabus.32
                0x00000000c001ed06                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001ed2e       0x1f
 .text._ZN3ATAD2Ev
                0x00000000c001ed2e       0x1f hw/diskphys/ata.32
                0x00000000c001ed2e                ATA::~ATA()
                0x00000000c001ed2e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001ed4e       0x27
 .text._ZN3ATAD0Ev
                0x00000000c001ed4e       0x27 hw/diskphys/ata.32
                0x00000000c001ed4e                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001ed76       0x1f
 .text._ZN5ATAPID2Ev
                0x00000000c001ed76       0x1f hw/diskphys/atapi.32
                0x00000000c001ed76                ATAPI::~ATAPI()
                0x00000000c001ed76                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001ed96       0x27
 .text._ZN5ATAPID0Ev
                0x00000000c001ed96       0x27 hw/diskphys/atapi.32
                0x00000000c001ed96                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001edbe       0x1f
 .text._ZN4SATAD2Ev
                0x00000000c001edbe       0x1f hw/diskphys/sata.32
                0x00000000c001edbe                SATA::~SATA()
                0x00000000c001edbe                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001edde       0x27
 .text._ZN4SATAD0Ev
                0x00000000c001edde       0x27 hw/diskphys/sata.32
                0x00000000c001edde                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001ee06       0x1f
 .text._ZN6SATAPID2Ev
                0x00000000c001ee06       0x1f hw/diskphys/satapi.32
                0x00000000c001ee06                SATAPI::~SATAPI()
                0x00000000c001ee06                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001ee26       0x27
 .text._ZN6SATAPID0Ev
                0x00000000c001ee26       0x27 hw/diskphys/satapi.32
                0x00000000c001ee26                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001ee4e       0x1f
 .text._ZN6IOAPICD2Ev
                0x00000000c001ee4e       0x1f hw/intctrl/apic.32
                0x00000000c001ee4e                IOAPIC::~IOAPIC()
                0x00000000c001ee4e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001ee6e       0x27
 .text._ZN6IOAPICD0Ev
                0x00000000c001ee6e       0x27 hw/intctrl/apic.32
                0x00000000c001ee6e                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ee98       0x1f
 .text._ZN9APICTimerD2Ev
                0x00000000c001ee98       0x1f hw/timer/apictimer.32
                0x00000000c001ee98                APICTimer::~APICTimer()
                0x00000000c001ee98                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001eeb8       0x27
 .text._ZN9APICTimerD0Ev
                0x00000000c001eeb8       0x27 hw/timer/apictimer.32
                0x00000000c001eeb8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001eee0       0x1f
 .text._ZN3PITD2Ev
                0x00000000c001eee0       0x1f hw/timer/pit.32
                0x00000000c001eee0                PIT::~PIT()
                0x00000000c001eee0                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ef00       0x27
 .text._ZN3PITD0Ev
                0x00000000c001ef00       0x27 hw/timer/pit.32
                0x00000000c001ef00                PIT::~PIT()

.rodata         0x00000000c001ef27     0x2b81
                0x00000000c001ef27                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001ef27        0x1 
 .ctors         0x00000000c001ef28        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001ef2c        0x4 core/unixfile.32
 .ctors         0x00000000c001ef30        0x4 thr/prcssthr.32
 .ctors         0x00000000c001ef34        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ef38                end_ctors = .
                0x00000000c001ef38                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ef38        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ef3c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ef3c                __DTOR_END__
                0x00000000c001ef40                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001ef40        0x0 
 .rodata        0x00000000c001ef40      0x101 acpica/utclib.32
                0x00000000c001ef40                AcpiGbl_Ctypes
 *fill*         0x00000000c001f041        0x3 
 .rodata        0x00000000c001f044       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f05c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f0a6       0x1a 
 .rodata        0x00000000c001f0c0       0xed fs/fat/ff.32
 *fill*         0x00000000c001f1ad       0x13 
 .rodata        0x00000000c001f1c0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f5c0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f62f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001f744       0x43 core/computer.32
 *fill*         0x00000000c001f787        0x1 
 .rodata._ZTV8Computer
                0x00000000c001f788       0x2c core/computer.32
                0x00000000c001f788                vtable for Computer
 .rodata.str1.4
                0x00000000c001f7b4       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001f7e4        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001f7f0       0x17 core/main.32
 *fill*         0x00000000c001f807        0x1 
 .rodata.str1.4
                0x00000000c001f808       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001f8ad       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001f905       0x39 core/pipe.32
 *fill*         0x00000000c001f93e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001f940       0x1c core/pipe.32
                0x00000000c001f940                vtable for Pipe
 .rodata.str1.1
                0x00000000c001f95c       0x2b core/terminal.32
 *fill*         0x00000000c001f987        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001f988       0x1c core/terminal.32
                0x00000000c001f988                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001f9a4       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001f9c6       0x15 core/unixfile.32
 *fill*         0x00000000c001f9db        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001f9dc       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001fa27        0x8 core/unixfile.32
 *fill*         0x00000000c001fa2f        0x1 
 .rodata.str1.4
                0x00000000c001fa30       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001fa50       0x1c core/unixfile.32
                0x00000000c001fa50                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001fa6c       0x1c core/unixfile.32
                0x00000000c001fa6c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001fa88      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001fbef      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001fcf6       0x33 coreobjs/c++.32
 *fill*         0x00000000c001fd29        0x3 
 .rodata        0x00000000c001fd2c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001fe7c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001fe7c       0x68 fs/vfs.32
                0x00000000c001fe7c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001fee4       0x1c fs/vfs.32
                0x00000000c001fee4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001ff00       0x1c fs/vfs.32
                0x00000000c001ff00                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001ff1c       0x2c hal/bus.32
                0x00000000c001ff1c                vtable for Bus
 .rodata.str1.1
                0x00000000c001ff48       0x1e hal/clock.32
 *fill*         0x00000000c001ff66        0x2 
 .rodata._ZTV5Clock
                0x00000000c001ff68       0x3c hal/clock.32
                0x00000000c001ff68                vtable for Clock
 *fill*         0x00000000c001ffa4       0x1c 
 .rodata        0x00000000c001ffc0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001fff0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020048       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020048       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020048       0x2c hal/device.32
                0x00000000c0020048                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020074       0x2c hal/device.32
                0x00000000c0020074                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00200a0       0x2c hal/diskctrl.32
                0x00000000c00200a0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00200cc       0x38 hal/diskphys.32
                0x00000000c00200cc                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020104       0x3e hal/intctrl.32
 *fill*         0x00000000c0020142        0x2 
 .rodata.str1.4
                0x00000000c0020144       0x5d hal/intctrl.32
 .rodata        0x00000000c00201a1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c00201f4       0x34 hal/keybrd.32
                0x00000000c00201f4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020228       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002026c       0x2c hal/logidisk.32
                0x00000000c002026c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0020298       0x2c hal/mouse.32
                0x00000000c0020298                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00202c4       0x34 hal/nic.32
                0x00000000c00202c4                vtable for NIC
 .rodata.str1.1
                0x00000000c00202f8        0xb hal/partition.32
 *fill*         0x00000000c0020303        0x1 
 .rodata._ZTV6Serial
                0x00000000c0020304       0x44 hal/serial.32
                0x00000000c0020304                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020348       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020348        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020348       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020348       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0020348       0x30 hal/timer.32
                0x00000000c0020348                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020378       0x10 hal/vcache.32
                0x00000000c0020378                vtable for VCache
 .rodata.str1.1
                0x00000000c0020388       0x93 hal/video.32
 *fill*         0x00000000c002041b        0x1 
 .rodata._ZTV5Video
                0x00000000c002041c       0x4c hal/video.32
                0x00000000c002041c                vtable for Video
 .rodata.str1.4
                0x00000000c0020468       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0020503      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c002063f       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c002063f        0x8 hw/acpi.32
 *fill*         0x00000000c002063f        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020640       0x2c hw/acpi.32
                0x00000000c0020640                vtable for ACPI
 .rodata.str1.1
                0x00000000c002066c      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c00207d9        0x3 
 .rodata._ZTV3CPU
                0x00000000c00207dc       0x2c hw/cpu.32
                0x00000000c00207dc                vtable for CPU
 .rodata.str1.1
                0x00000000c0020808       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020844       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c00208d5       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c002099e       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00209e6       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0020a11       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020a87       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020acc        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020ad6       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0020af7       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0020b8d       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0020be1       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0020c0d      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0020dd9       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0020e30      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020f3c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020f3c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020f3c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020f3c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0020f3c       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0020fdc       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002100c      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c002119c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002120f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0021224       0x3c arch/i386/rtc.32
                0x00000000c0021224                vtable for RTC
 .rodata.str1.1
                0x00000000c0021260       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00212a1        0x3 
 .rodata._ZTV3FAT
                0x00000000c00212a4       0x68 fs/fat/vfslink.32
                0x00000000c00212a4                vtable for FAT
 .rodata.str1.1
                0x00000000c002130c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c002130c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0021444       0x68 fs/iso9660/vfslink.32
                0x00000000c0021444                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00214ac       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00214f0       0x34 hal/sound/sndcard.32
                0x00000000c00214f0                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0021524       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0021563       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002159b       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c002163c       0x2c hw/bus/pci.32
                0x00000000c002163c                vtable for PCI
 .rodata.str1.1
                0x00000000c0021668       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c00216ef        0x1 
 .rodata._ZTV3IDE
                0x00000000c00216f0       0x2c hw/diskctrl/ide.32
                0x00000000c00216f0                vtable for IDE
 .rodata.str1.4
                0x00000000c002171c       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0021740       0x2c hw/diskctrl/satabus.32
                0x00000000c0021740                vtable for SATABus
 .rodata.str1.1
                0x00000000c002176c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c002177e        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021780       0x38 hw/diskphys/ata.32
                0x00000000c0021780                vtable for ATA
 .rodata.str1.1
                0x00000000c00217b8        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00217c5        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00217c8       0x38 hw/diskphys/atapi.32
                0x00000000c00217c8                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021800       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c002187c       0x38 hw/diskphys/sata.32
                0x00000000c002187c                vtable for SATA
 .rodata.str1.1
                0x00000000c00218b4       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c002199e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00219a0       0x38 hw/diskphys/satapi.32
                0x00000000c00219a0                vtable for SATAPI
 .rodata        0x00000000c00219d8        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00219e0       0x2c hw/intctrl/apic.32
                0x00000000c00219e0                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0021a0c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0021a27        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021a28       0x30 hw/timer/apictimer.32
                0x00000000c0021a28                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021a58       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021a75        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021a78       0x30 hw/timer/pit.32
                0x00000000c0021a78                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021aa8      0x4dd
 *(.data)
 .data          0x00000000c0021aa8        0x0 crti.32
 .data          0x00000000c0021aa8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021aa8                __dso_handle
 .data          0x00000000c0021aac        0x0 acpica/utclib.32
 .data          0x00000000c0021aac        0x0 core/malloc.32
 .data          0x00000000c0021aac        0x0 libk/ctype.32
 .data          0x00000000c0021aac        0x0 libk/string.32
 .data          0x00000000c0021aac        0x0 fs/fat/diskio.32
 .data          0x00000000c0021aac        0x0 fs/fat/ff.32
 .data          0x00000000c0021aac        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021aac        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021aac        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0021aac        0x0 core/computer.32
 .data          0x00000000c0021aac        0x0 core/gdt.32
 .data          0x00000000c0021aac        0x0 core/idle.32
 .data          0x00000000c0021aac        0x0 core/idt.32
 .data          0x00000000c0021aac        0x4 core/kheap.32
 .data          0x00000000c0021ab0        0x0 core/main.32
 .data          0x00000000c0021ab0        0x4 core/physmgr.32
                0x00000000c0021ab0                Phys::bitmap
 .data          0x00000000c0021ab4        0x0 core/pipe.32
 *fill*         0x00000000c0021ab4        0xc 
 .data          0x00000000c0021ac0       0x60 core/terminal.32
                0x00000000c0021ac0                VgaText::hiddenOut
                0x00000000c0021ae0                ansiToVGAMappings
 .data          0x00000000c0021b20        0x0 core/tss.32
 .data          0x00000000c0021b20        0x4 core/unixfile.32
                0x00000000c0021b20                UnixFile::nextFd
 .data          0x00000000c0021b24       0x15 core/virtmgr.32
                0x00000000c0021b24                Virt::pageAllocPtr
                0x00000000c0021b28                Virt::bitmap
                0x00000000c0021b2c                Virt::swapfileSectorsPerPage
                0x00000000c0021b30                Virt::swapfileLength
                0x00000000c0021b34                Virt::swapfileSector
                0x00000000c0021b38                Virt::swapfileDrive
 *fill*         0x00000000c0021b39        0x3 
 .data          0x00000000c0021b3c        0x4 coreobjs/c++.32
                0x00000000c0021b3c                __stack_chk_guard
 .data          0x00000000c0021b40        0x0 dbg/kconsole.32
 .data          0x00000000c0021b40        0x0 fs/vfs.32
 .data          0x00000000c0021b40        0x0 hal/bus.32
 .data          0x00000000c0021b40        0x0 hal/buzzer.32
 .data          0x00000000c0021b40        0x0 hal/clock.32
 .data          0x00000000c0021b40        0x0 hal/device.32
 .data          0x00000000c0021b40        0x0 hal/diskctrl.32
 .data          0x00000000c0021b40        0x0 hal/diskphys.32
 .data          0x00000000c0021b40        0x0 hal/fpu.32
 .data          0x00000000c0021b40        0x0 hal/intctrl.32
 .data          0x00000000c0021b40        0x0 hal/keybrd.32
 .data          0x00000000c0021b40        0x0 hal/logidisk.32
 .data          0x00000000c0021b40        0x0 hal/mouse.32
 .data          0x00000000c0021b40        0x0 hal/nic.32
 .data          0x00000000c0021b40        0x0 hal/partition.32
 .data          0x00000000c0021b40        0x0 hal/serial.32
 .data          0x00000000c0021b40        0x0 hal/timer.32
 .data          0x00000000c0021b40        0x0 hal/vcache.32
 .data          0x00000000c0021b40        0x0 hal/video.32
 .data          0x00000000c0021b40       0x10 hw/acpi.32
                0x00000000c0021b40                legacyIRQRemaps
 .data          0x00000000c0021b50        0x4 hw/cpu.32
                0x00000000c0021b50                lastCode
 *fill*         0x00000000c0021b54        0xc 
 .data          0x00000000c0021b60      0x142 krnl/bootmsg.32
                0x00000000c0021b60                KiSplashScreen
 *fill*         0x00000000c0021ca2       0x1e 
 .data          0x00000000c0021cc0       0x4d krnl/env.32
                0x00000000c0021cc0                defaultSysEnv
 .data          0x00000000c0021d0d        0x0 krnl/inlines.32
 .data          0x00000000c0021d0d        0x0 krnl/panic.32
 .data          0x00000000c0021d0d        0x0 krnl/powctrl.32
 .data          0x00000000c0021d0d        0x0 krnl/random.32
 .data          0x00000000c0021d0d        0x0 krnl/resolve.32
 *fill*         0x00000000c0021d0d       0x13 
 .data          0x00000000c0021d20       0x4c krnl/signal.32
                0x00000000c0021d20                KiDefaultSignalHandlers
 *fill*         0x00000000c0021d6c       0x14 
 .data          0x00000000c0021d80       0xf0 krnl/syscalls.32
                0x00000000c0021d80                systemCallHandlers
 .data          0x00000000c0021e70        0x0 net/ethernet.32
 *fill*         0x00000000c0021e70       0x10 
 .data          0x00000000c0021e80      0x100 reg/cm.32
                0x00000000c0021e80                CmComponents
 .data          0x00000000c0021f80        0x0 reg/registry.32
 .data          0x00000000c0021f80        0x0 sys/eject.32
 .data          0x00000000c0021f80        0x0 sys/exit.32
 .data          0x00000000c0021f80        0x0 sys/getcwd.32
 .data          0x00000000c0021f80        0x0 sys/getpid.32
 .data          0x00000000c0021f80        0x0 sys/getramdata.32
 .data          0x00000000c0021f80        0x0 sys/getvgaptr.32
 .data          0x00000000c0021f80        0x0 sys/kill.32
 .data          0x00000000c0021f80        0x0 sys/loaddll.32
 .data          0x00000000c0021f80        0x0 sys/read.32
 .data          0x00000000c0021f80        0x0 sys/registersignal.32
 .data          0x00000000c0021f80        0x0 sys/registry.32
 .data          0x00000000c0021f80        0x0 sys/sbrk.32
 .data          0x00000000c0021f80        0x0 sys/setcwd.32
 .data          0x00000000c0021f80        0x0 sys/settime.32
 .data          0x00000000c0021f80        0x0 sys/timezone.32
 .data          0x00000000c0021f80        0x0 sys/write.32
 .data          0x00000000c0021f80        0x0 sys/wsbe.32
 .data          0x00000000c0021f80        0x0 sys/yield.32
 .data          0x00000000c0021f80        0x0 thr/elf.32
 .data          0x00000000c0021f80        0x4 thr/prcssthr.32
                0x00000000c0021f80                Thr::nextPID
 .data          0x00000000c0021f84        0x0 vm86/vm8086.32
 .data          0x00000000c0021f84        0x0 arch/i386/hal.32
 .data          0x00000000c0021f84        0x0 arch/i386/pic.32
 .data          0x00000000c0021f84        0x0 arch/i386/rtc.32
 .data          0x00000000c0021f84        0x0 arch/i386/vga.32
 .data          0x00000000c0021f84        0x0 fs/fat/vfslink.32
 .data          0x00000000c0021f84        0x0 fs/iso9660/helper.32
 .data          0x00000000c0021f84        0x1 fs/iso9660/vfslink.32
                0x00000000c0021f84                recentDriveletter
 .data          0x00000000c0021f85        0x0 hal/sound/sndcard.32
 .data          0x00000000c0021f85        0x0 hal/sound/sndport.32
 .data          0x00000000c0021f85        0x0 hw/bus/isa.32
 .data          0x00000000c0021f85        0x0 hw/bus/pci.32
 .data          0x00000000c0021f85        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0021f85        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0021f85        0x0 hw/diskphys/ata.32
 .data          0x00000000c0021f85        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0021f85        0x0 hw/diskphys/sata.32
 .data          0x00000000c0021f85        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0021f85        0x0 hw/intctrl/apic.32
 .data          0x00000000c0021f85        0x0 hw/timer/apictimer.32
 .data          0x00000000c0021f85        0x0 hw/timer/pit.32
 .data          0x00000000c0021f85        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0021f85        0x0 crtn.32
 .data          0x00000000c0021f85        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0021f85        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0021f85        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0021f85        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0021f88        0x0
 .got           0x00000000c0021f88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0021f88        0x0
 .got.plt       0x00000000c0021f88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0021f88        0x0
 .igot.plt      0x00000000c0021f88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0021f88        0x0
 .tm_clone_table
                0x00000000c0021f88        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0021f88        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0021f85      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0021f85        0x3 
 .eh_frame      0x00000000c0021f88        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0021f88        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0021f88       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0021fe0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022020       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002208c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0023000       0x7d
 *(userkernel)
 userkernel     0x00000000c0023000       0x52 krnl/signal.32
                0x00000000c0023000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002302c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0023052       0x2b krnl/syscalls.32
                0x00000000c0023052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0024000        0x1
 *(align_previous)
 align_previous
                0x00000000c0024000        0x1 krnl/signal.32
                0x00000000c0024000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0024004        0x0
 .rel.got       0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0024001     0x4ba7
                0x00000000c0024001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0024001       0x1f 
 COMMON         0x00000000c0024020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0024020                dcache
                0x00000000c0024060                cdDriveLetter
                0x00000000c0024080                icache
 *(.bss)
 .bss           0x00000000c00240c0        0x0 crti.32
 .bss           0x00000000c00240c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00240e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00240e4       0x1c 
 .bss           0x00000000c0024100      0x378 core/malloc.32
 .bss           0x00000000c0024478        0x0 libk/ctype.32
 .bss           0x00000000c0024478        0x0 libk/string.32
 .bss           0x00000000c0024478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480       0x88 fs/fat/ff.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0024508       0x18 
 .bss           0x00000000c0024520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0024eb8        0x6 core/computer.32
                0x00000000c0024eb8                Krnl::computer
                0x00000000c0024ebc                KeIsPreemptionOn
                0x00000000c0024ebd                KeIsSchedulingOn
 *fill*         0x00000000c0024ebe        0x2 
 .bss           0x00000000c0024ec0        0x6 core/gdt.32
                0x00000000c0024ec0                gdtDescr
 .bss           0x00000000c0024ec6        0x0 core/idle.32
 *fill*         0x00000000c0024ec6        0x2 
 .bss           0x00000000c0024ec8        0x6 core/idt.32
                0x00000000c0024ec8                idtDescr
 .bss           0x00000000c0024ece        0x0 core/kheap.32
 *fill*         0x00000000c0024ece        0x2 
 .bss           0x00000000c0024ed0        0x4 core/main.32
                0x00000000c0024ed0                sysBootSettings
 .bss           0x00000000c0024ed4       0x29 core/physmgr.32
                0x00000000c0024ed4                Phys::forbidEvictions
                0x00000000c0024ed8                Phys::currentPagePointer
                0x00000000c0024edc                Phys::highestMem
                0x00000000c0024ee0                Phys::oldPercent
                0x00000000c0024ee4                Phys::usedPages
                0x00000000c0024ee8                Phys::usablePages
                0x00000000c0024eec                Phys::dmaUsage
 .bss           0x00000000c0024efd        0x0 core/pipe.32
 *fill*         0x00000000c0024efd        0x3 
 .bss           0x00000000c0024f00        0x9 core/terminal.32
                0x00000000c0024f00                terminalCycle
                0x00000000c0024f04                activeTerminal
                0x00000000c0024f08                VgaText::graphicMode
 *fill*         0x00000000c0024f09        0x1 
 .bss           0x00000000c0024f0a        0x2 core/tss.32
                0x00000000c0024f0a                doubleFaultSelector
 *fill*         0x00000000c0024f0c       0x14 
 .bss           0x00000000c0024f20       0x84 core/unixfile.32
                0x00000000c0024f20                sfileLpt
                0x00000000c0024f60                sfileCom
                0x00000000c0024f84                sfileNul
                0x00000000c0024f88                sfilePnt
                0x00000000c0024f8c                sfileAux
                0x00000000c0024f90                sfileCon
                0x00000000c0024f94                initialFilesAdded
                0x00000000c0024f98                unixFileLinkedList
 .bss           0x00000000c0024fa4       0x10 core/virtmgr.32
                0x00000000c0024fa4                twswaps
                0x00000000c0024fa8                swapBalance
                0x00000000c0024fac                Virt::swapfileBitmap
                0x00000000c0024fb0                firstVAS
 .bss           0x00000000c0024fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0024fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0024fb4        0x4 fs/vfs.32
                0x00000000c0024fb4                installedFilesystems
 .bss           0x00000000c0024fb8        0x0 hal/bus.32
 .bss           0x00000000c0024fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0024fb8        0x8 hal/clock.32
                0x00000000c0024fb8                User::dstOn
                0x00000000c0024fb9                User::timezoneHalfHourOffset
                0x00000000c0024fbc                User::timezoneHourOffset
 .bss           0x00000000c0024fc0        0x0 hal/device.32
 .bss           0x00000000c0024fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0024fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0024fc0        0x0 hal/fpu.32
 .bss           0x00000000c0024fc0     0x2000 hal/intctrl.32
                0x00000000c0024fc0                INT_contexts
                0x00000000c0025fc0                INT_handlers
 .bss           0x00000000c0026fc0      0x429 hal/keybrd.32
                0x00000000c0026fc0                keyboardWaitingTaskList
                0x00000000c0026fc4                keyboardSetupYet
                0x00000000c0026fc8                guiKeyboardHandler
                0x00000000c0026fe0                keystates
 *fill*         0x00000000c00273e9       0x17 
 .bss           0x00000000c0027400       0x88 hal/logidisk.32
                0x00000000c0027400                diskAssignments
                0x00000000c0027420                disks
 .bss           0x00000000c0027488        0x4 hal/mouse.32
                0x00000000c0027488                guiMouseHandler
 .bss           0x00000000c002748c        0x0 hal/nic.32
 .bss           0x00000000c002748c        0x0 hal/partition.32
 .bss           0x00000000c002748c        0x0 hal/serial.32
 .bss           0x00000000c002748c        0x4 hal/timer.32
                0x00000000c002748c                milliTenthsSinceBoot
 .bss           0x00000000c0027490        0x0 hal/vcache.32
 .bss           0x00000000c0027490        0x4 hal/video.32
                0x00000000c0027490                screen
 *fill*         0x00000000c0027494        0xc 
 .bss           0x00000000c00274a0      0x480 hw/acpi.32
                0x00000000c00274a0                systemSleepFunction
                0x00000000c00274a4                systemResetFunction
                0x00000000c00274a8                systemShutdownFunction
                0x00000000c00274ac                nextACPITable
                0x00000000c00274c0                acpiTables
                0x00000000c00276c0                usingXSDT
                0x00000000c00276c4                MADTpointer
                0x00000000c00276c8                RSDTpointer
                0x00000000c00276cc                RSDPpointer
                0x00000000c00276d0                nextAPICNMI
                0x00000000c00276e0                apicNMIInfo
                0x00000000c0027760                legacyIRQFlags
                0x00000000c0027780                ioapicDiscoveryNumber
                0x00000000c00277a0                ioapicFoundInMADT
                0x00000000c00277c0                ioapicAddresses
                0x00000000c0027840                ioapicGSIBase
                0x00000000c00278c0                processorDiscoveryNumber
                0x00000000c00278e0                matchingAPICID
                0x00000000c0027900                processorID
 .bss           0x00000000c0027920       0x10 hw/cpu.32
                0x00000000c0027920                lastD
                0x00000000c0027924                lastC
                0x00000000c0027928                lastB
                0x00000000c002792c                lastA
 .bss           0x00000000c0027930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0027930        0x8 krnl/env.32
                0x00000000c0027930                Krnl::userEnv
                0x00000000c0027934                Krnl::systemEnv
 .bss           0x00000000c0027938        0x0 krnl/inlines.32
 .bss           0x00000000c0027938        0x1 krnl/panic.32
                0x00000000c0027938                KeIsKernelInPanic
 *fill*         0x00000000c0027939        0x7 
 .bss           0x00000000c0027940       0x48 krnl/powctrl.32
                0x00000000c0027940                Krnl::powCtrlOnBattery
                0x00000000c0027960                Krnl::currentPowerSettings
                0x00000000c0027984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0027988        0x8 krnl/random.32
                0x00000000c0027988                kiRandSeed
 .bss           0x00000000c0027990        0x0 krnl/resolve.32
 .bss           0x00000000c0027990        0x0 krnl/signal.32
 .bss           0x00000000c0027990        0x0 krnl/syscalls.32
 .bss           0x00000000c0027990        0x0 net/ethernet.32
 .bss           0x00000000c0027990        0x4 reg/cm.32
 .bss           0x00000000c0027994        0x0 reg/registry.32
 .bss           0x00000000c0027994        0x0 sys/eject.32
 .bss           0x00000000c0027994        0x0 sys/exit.32
 .bss           0x00000000c0027994        0x0 sys/getcwd.32
 .bss           0x00000000c0027994        0x0 sys/getpid.32
 .bss           0x00000000c0027994        0x0 sys/getramdata.32
 .bss           0x00000000c0027994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0027994        0x0 sys/kill.32
 .bss           0x00000000c0027994        0x0 sys/loaddll.32
 .bss           0x00000000c0027994        0x0 sys/read.32
 .bss           0x00000000c0027994        0x0 sys/registersignal.32
 .bss           0x00000000c0027994        0x0 sys/registry.32
 .bss           0x00000000c0027994        0x0 sys/sbrk.32
 .bss           0x00000000c0027994        0x0 sys/setcwd.32
 .bss           0x00000000c0027994        0x0 sys/settime.32
 .bss           0x00000000c0027994        0x0 sys/timezone.32
 .bss           0x00000000c0027994        0x0 sys/write.32
 .bss           0x00000000c0027994        0x0 sys/wsbe.32
 .bss           0x00000000c0027994        0x0 sys/yield.32
 *fill*         0x00000000c0027994        0xc 
 .bss           0x00000000c00279a0      0x7a4 thr/elf.32
                0x00000000c00279a0                Thr::driverLookupNext
                0x00000000c00279c0                Thr::driverLookupLen
                0x00000000c0027bc0                Thr::driverLookupAddr
                0x00000000c0027dc0                Thr::driverNameLookup
                0x00000000c0027fc0                Thr::kernelSymbols
                0x00000000c0028040                Thr::kernelStringTable
                0x00000000c00280c0                Thr::kernelSymbolTable
                0x00000000c0028140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028144        0x4 
 .bss           0x00000000c0028148       0x68 thr/prcssthr.32
                0x00000000c0028148                cleanerThread
                0x00000000c002814c                weNeedTheCleanerToNotBlock
                0x00000000c0028150                retValLockStuff
                0x00000000c0028154                retValSchedLock
                0x00000000c0028158                lockStuffLock
                0x00000000c002815c                schedulerLock
                0x00000000c0028160                taskSwitchesPostponedFlag
                0x00000000c0028164                postponeTaskSwitchesCounter
                0x00000000c0028168                irqDisableCounter
                0x00000000c002816c                terminatedTaskList
                0x00000000c0028178                sleepingTaskList
                0x00000000c0028184                taskList
                0x00000000c0028190                kernelProcess
 *fill*         0x00000000c00281b0       0x10 
 .bss           0x00000000c00281c0       0x40 vm86/vm8086.32
                0x00000000c00281c0                Vm::vmRetV
                0x00000000c00281c4                Vm::vmDone
                0x00000000c00281c5                Vm::vmReady
                0x00000000c00281c8                Vm::vm86Thread
                0x00000000c00281cc                Vm::vmToHostCommsPtr
                0x00000000c00281e0                Vm::vmToHostComms
 .bss           0x00000000c0028200       0x14 arch/i386/hal.32
                0x00000000c0028200                apic
                0x00000000c0028204                fpuOwner
                0x00000000c0028208                coproLoadFunc
                0x00000000c002820c                coproSaveFunc
                0x00000000c0028210                gpFaultIntercept
 .bss           0x00000000c0028214        0x0 arch/i386/pic.32
 .bss           0x00000000c0028214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0028216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0028216        0xa 
 .bss           0x00000000c0028220       0xf0 fs/fat/vfslink.32
                0x00000000c0028220                FAT::fats
                0x00000000c0028240                FAT::vfsToFatRemaps
                0x00000000c00282c0                fatToVFSRemaps
 .bss           0x00000000c0028310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0028310       0x10 
 .bss           0x00000000c0028320      0x820 fs/iso9660/vfslink.32
                0x00000000c0028320                iso9660Owner
                0x00000000c0028324                recentSector
                0x00000000c0028340                recentBuffer
 .bss           0x00000000c0028b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0028b40        0xd hw/bus/pci.32
                0x00000000c0028b40                thePCI
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0028b4d        0x3 
 .bss           0x00000000c0028b50        0x8 hw/diskphys/ata.32
                0x00000000c0028b50                ataSectorsWritten
                0x00000000c0028b54                ataSectorsRead
 .bss           0x00000000c0028b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0028b58        0x8 
 .bss           0x00000000c0028b60       0x41 hw/intctrl/apic.32
                0x00000000c0028b60                noOfIOAPICs
                0x00000000c0028b80                ioapics
                0x00000000c0028ba0                IOAPICsSetupYet
 .bss           0x00000000c0028ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0028ba1        0x3 
 .bss           0x00000000c0028ba4        0x4 hw/timer/pit.32
                0x00000000c0028ba4                pitFreq
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0028ba8        0x0 crtn.32
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0028ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
