Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x20fce
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x254 dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f06                Dbg::logs(char*)
                0x00000000c0006f25                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f43                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f64                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000709a        0x2 
 .text          0x00000000c000709c      0x2d4 dbg/usban.32
                0x00000000c000709c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007108                __ubsan_handle_type_mismatch_v1
                0x00000000c00071e4                __ubsan_handle_pointer_overflow
                0x00000000c0007210                __ubsan_handle_out_of_bounds
                0x00000000c000723c                __ubsan_handle_add_overflow
                0x00000000c0007268                __ubsan_handle_load_invalid_value
                0x00000000c0007294                __ubsan_handle_divrem_overflow
                0x00000000c00072c0                __ubsan_handle_mul_overflow
                0x00000000c00072ec                __ubsan_handle_sub_overflow
                0x00000000c0007318                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007344                __ubsan_handle_negate_overflow
 .text          0x00000000c0007370      0x814 fs/symlink.32
                0x00000000c00074bf                KiDeinitialiseSymlinks(void*)
                0x00000000c0007552                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075d5                KeInitialiseSymlinks()
                0x00000000c0007737                KiIsSymlinkRegistered(char const*)
                0x00000000c00078a1                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a48                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b84      0xd88 fs/vfs.32
                0x00000000c0007b84                File::read(unsigned long long, void*, int*)
                0x00000000c0007bdc                File::write(unsigned long long, void*, int*)
                0x00000000c0007c34                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cba                File::isAtty()
                0x00000000c0007cbe                Directory::isAtty()
                0x00000000c0007cc2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cc8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cce                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cf8                File::~File()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d46                Directory::~Directory()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007da2                Filesystem::~Filesystem()
                0x00000000c0007dc6                Fs::getcwd(Process*, char*, int)
                0x00000000c0007df0                Fs::initVFS()
                0x00000000c0007e1a                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008150                File::open(FileOpenMode)
                0x00000000c00081ae                File::close()
                0x00000000c000820e                File::seek(unsigned long long)
                0x00000000c0008264                File::truncate(unsigned long long)
                0x00000000c00082ba                File::tell(unsigned long long*)
                0x00000000c000830a                File::rewind()
                0x00000000c000831e                File::unlink()
                0x00000000c000836a                File::rename(char const*)
                0x00000000c00083b8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0008414                File::exists()
                0x00000000c0008452                File::stat(unsigned long long*, bool*)
                0x00000000c00084b3                Fs::setcwd(Process*, char*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c00086da                Directory::open()
                0x00000000c0008736                Directory::close()
                0x00000000c0008796                Directory::unlink()
                0x00000000c00087e2                Directory::rename(char const*)
                0x00000000c0008830                Directory::exists()
                0x00000000c000886e                Directory::read(dirent*)
                0x00000000c00088ba                Directory::create()
                0x00000000c0008906                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000890c       0x86 hal/bus.32
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008968                Bus::~Bus()
 .text          0x00000000c0008992       0x99 hal/buzzer.32
                0x00000000c0008992                KeBeepThread(void*)
                0x00000000c00089d2                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a2b        0x1 
 .text          0x00000000c0008a2c      0x761 hal/clock.32
                0x00000000c0008a2c                KeLoadTimezoneStrings()
                0x00000000c0008be0                KeGetTimezoneStringFromID(int)
                0x00000000c0008c0b                KeUpdateTimezone(char const*)
                0x00000000c0008c8d                KeSetTimezone(char const*)
                0x00000000c0008cd0                KeSetTimezone(int)
                0x00000000c0008cf9                KeLoadTimezone()
                0x00000000c0008d50                Clock::Clock(char const*)
                0x00000000c0008d50                Clock::Clock(char const*)
                0x00000000c0008d86                Clock::~Clock()
                0x00000000c0008d86                Clock::~Clock()
                0x00000000c0008daa                Clock::~Clock()
                0x00000000c0008dd4                Clock::timeInSecondsLocal()
                0x00000000c0008e1c                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0008e75                KeDatetimeToSeconds(datetime_t)
                0x00000000c0008f94                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0009021                KeSecondsToDatetime(unsigned long long)
                0x00000000c0009168                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000918d        0x1 
 .text          0x00000000c000918e      0x47a hal/device.32
                0x00000000c000918e                Device::hibernate()
                0x00000000c0009190                Device::wake()
                0x00000000c0009192                Device::detect()
                0x00000000c0009194                Device::disableLegacy()
                0x00000000c0009196                Device::powerSaving(PowerSavingLevel)
                0x00000000c0009198                DriverlessDevice::close(int, int, void*)
                0x00000000c000919c                DriverlessDevice::detect()
                0x00000000c000919e                DriverlessDevice::open(int, int, void*)
                0x00000000c00091b2                Device::~Device()
                0x00000000c00091b2                Device::~Device()
                0x00000000c00091c0                Device::~Device()
                0x00000000c00091e8                Device::findAndLoadDriver()
                0x00000000c00091f6                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000921c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000925c                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009286                Device::getParent()
                0x00000000c0009292                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00092b0                Device::addChild(Device*)
                0x00000000c00092f4                Device::removeAllChildren()
                0x00000000c000933a                Device::hibernateAll()
                0x00000000c000936a                Device::wakeAll()
                0x00000000c000939a                Device::detectAll()
                0x00000000c00093ca                Device::disableLegacyAll()
                0x00000000c00093cc                Device::loadDriversForAll()
                0x00000000c00093ce                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009404                Device::setName(char const*)
                0x00000000c0009412                Device::Device(char const*)
                0x00000000c0009412                Device::Device(char const*)
                0x00000000c000950e                Device::getName()
                0x00000000c0009518                Device::closeAll()
                0x00000000c0009564                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009564                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000959a                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00095de                getDevicesOfType(DeviceType)
 .text          0x00000000c0009608       0x86 hal/diskctrl.32
                0x00000000c0009608                HardDiskController::HardDiskController(char const*)
                0x00000000c0009608                HardDiskController::HardDiskController(char const*)
                0x00000000c0009640                HardDiskController::~HardDiskController()
                0x00000000c0009640                HardDiskController::~HardDiskController()
                0x00000000c0009664                HardDiskController::~HardDiskController()
 .text          0x00000000c000968e       0xe2 hal/diskphys.32
                0x00000000c000968e                PhysicalDisk::eject()
                0x00000000c0009692                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009692                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00096fa                PhysicalDisk::startCache()
                0x00000000c0009722                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009722                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009746                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009770        0x0 hal/fpu.32
 .text          0x00000000c0009770        0x0 hal/intctrl.32
 .text          0x00000000c0009770      0x874 hal/keybrd.32
                0x00000000c0009770                startGUI(void*)
                0x00000000c00097d5                startGUIVESA(void*)
                0x00000000c000983a                sendKeyToTerminal(unsigned char)
                0x00000000c0009910                sendKeyboardToken(KeyboardToken)
                0x00000000c0009dcc                clearInternalKeybuffer(VgaText*)
                0x00000000c0009e01                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0009f5a                Keyboard::Keyboard(char const*)
                0x00000000c0009f5a                Keyboard::Keyboard(char const*)
                0x00000000c0009f96                Keyboard::~Keyboard()
                0x00000000c0009f96                Keyboard::~Keyboard()
                0x00000000c0009fba                Keyboard::~Keyboard()
 .text          0x00000000c0009fe4      0x3f8 hal/logidisk.32
                0x00000000c0009fe4                LogicalDisk::close(int, int, void*)
                0x00000000c0009fe8                LogicalDisk::~LogicalDisk()
                0x00000000c0009fe8                LogicalDisk::~LogicalDisk()
                0x00000000c000a00c                LogicalDisk::~LogicalDisk()
                0x00000000c000a036                LogicalDisk::open(int, int, void*)
                0x00000000c000a04a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a082                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a0c8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a0c8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a188                LogicalDisk::assignDriveLetter()
                0x00000000c000a242                LogicalDisk::mount()
                0x00000000c000a28a                LogicalDisk::unmount()
                0x00000000c000a29a                LogicalDisk::eject()
                0x00000000c000a2ae                LogicalDisk::unassignDriveLetter()
                0x00000000c000a304                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000a370                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000a3dc       0x86 hal/mouse.32
                0x00000000c000a3dc                Mouse::Mouse(char const*)
                0x00000000c000a3dc                Mouse::Mouse(char const*)
                0x00000000c000a414                Mouse::~Mouse()
                0x00000000c000a414                Mouse::~Mouse()
                0x00000000c000a438                Mouse::~Mouse()
 .text          0x00000000c000a462       0x90 hal/nic.32
                0x00000000c000a462                NIC::getMAC()
                0x00000000c000a468                NIC::write(int, unsigned char*, int*)
                0x00000000c000a46e                NIC::NIC(char const*)
                0x00000000c000a46e                NIC::NIC(char const*)
                0x00000000c000a4a4                NIC::~NIC()
                0x00000000c000a4a4                NIC::~NIC()
                0x00000000c000a4c8                NIC::~NIC()
 .text          0x00000000c000a4f2      0x33b hal/partition.32
                0x00000000c000a4f2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a59a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000a82d        0x3 
 .text          0x00000000c000a830       0x86 hal/serial.32
                0x00000000c000a830                Serial::Serial(char const*)
                0x00000000c000a830                Serial::Serial(char const*)
                0x00000000c000a868                Serial::~Serial()
                0x00000000c000a868                Serial::~Serial()
                0x00000000c000a88c                Serial::~Serial()
 *fill*         0x00000000c000a8b6        0x2 
 .text          0x00000000c000a8b8      0x204 hal/timer.32
                0x00000000c000a8b8                Timer::Timer(char const*)
                0x00000000c000a8b8                Timer::Timer(char const*)
                0x00000000c000a8f0                Timer::~Timer()
                0x00000000c000a8f0                Timer::~Timer()
                0x00000000c000a914                Timer::~Timer()
                0x00000000c000a93e                Timer::read()
                0x00000000c000a949                setupTimer(int)
                0x00000000c000a984                timerHandler(unsigned int)
 .text          0x00000000c000aabc      0x5fe hal/vcache.32
                0x00000000c000aabc                VCache::VCache(PhysicalDisk*)
                0x00000000c000aabc                VCache::VCache(PhysicalDisk*)
                0x00000000c000ac2c                VCache::invalidateReadBuffer()
                0x00000000c000ac3c                VCache::writeWriteBuffer()
                0x00000000c000ac88                VCache::~VCache()
                0x00000000c000ac88                VCache::~VCache()
                0x00000000c000ace0                VCache::~VCache()
                0x00000000c000ad08                VCache::write(unsigned long long, int, void*)
                0x00000000c000aed6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b0ba      0x70e hal/video.32
                0x00000000c000b0ba                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b106                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b176                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b1f4                Video::clearScreen(unsigned int)
                0x00000000c000b228                Video::putpixel(int, int, unsigned int)
                0x00000000c000b236                Video::readPixelApprox(int, int)
                0x00000000c000b24a                Video::Video(char const*)
                0x00000000c000b24a                Video::Video(char const*)
                0x00000000c000b280                Video::~Video()
                0x00000000c000b280                Video::~Video()
                0x00000000c000b2a4                Video::~Video()
                0x00000000c000b2ce                Video::isMonochrome()
                0x00000000c000b2da                Video::getWidth()
                0x00000000c000b2e6                Video::getHeight()
                0x00000000c000b2f2                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000b3ae                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000b758                Video::putTGA(int, int, unsigned char*, int)
 .text          0x00000000c000b7c8     0x114f hw/acpi.32
                0x00000000c000b7c8                ACPI::close(int, int, void*)
                0x00000000c000b7d0                loadACPITables(unsigned char*)
                0x00000000c000ba30                findRSDT(unsigned char*)
                0x00000000c000bb7c                findDataTable(unsigned char*, char*)
                0x00000000c000bbf0                scanMADT()
                0x00000000c000c048                ACPI::ACPI()
                0x00000000c000c048                ACPI::ACPI()
                0x00000000c000c09c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c198                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000c264                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000c26c                ACPI::detectPCI()
                0x00000000c000c478                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000c490                ACPI::open(int, int, void*)
 *fill*         0x00000000c000c917        0x1 
 .text          0x00000000c000c918       0xea krnl/assert.32
                0x00000000c000c918                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000ca02       0xb6 krnl/atexit.32
                0x00000000c000ca02                KeInitialiseAtexit()
                0x00000000c000ca21                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000ca55                KeExecuteAtexit()
 .text          0x00000000c000cab8       0x9f krnl/bootmsg.32
                0x00000000c000cab8                KeDisplaySplashScreen()
                0x00000000c000cae7                KeSetBootMessage(char const*)
 .text          0x00000000c000cb57       0x5f krnl/c++.32
                0x00000000c000cb57                __cxa_atexit
                0x00000000c000cb5a                __cxa_finalize
                0x00000000c000cb5b                __stack_chk_fail
                0x00000000c000cb91                __cxa_pure_virtual
                0x00000000c000cba2                operator new[](unsigned long)
                0x00000000c000cba7                operator delete(void*, unsigned long)
                0x00000000c000cbac                operator delete[](void*)
                0x00000000c000cbb1                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000cbb6        0x2 
 .text          0x00000000c000cbb8       0x44 krnl/cdefs.32
                0x00000000c000cbb8                CUnlockScheduler
                0x00000000c000cbd0                CLockScheduler
                0x00000000c000cbe0                CPrintf
 .text          0x00000000c000cbfc      0xd56 krnl/cm.32
                0x00000000c000cbfc                CmOpen(char const*)
                0x00000000c000cd1a                CmClose(Reghive_Tag*)
                0x00000000c000cd30                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000cd6c                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000cde3                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000ce22                CmGetNext(Reghive_Tag*, int)
                0x00000000c000ce54                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000ce90                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000ceb8                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000ced9                CmExpand(Reghive_Tag*, int)
                0x00000000c000cf54                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000cfda                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d0ce                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d20a                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d26b                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d29b                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000d2d2                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000d2fc                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000d33c                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000d3e0                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000d40e                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000d5ac                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000d5f9                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d673                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000d6c6                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d78a                zStrtok(char*, char const*)
                0x00000000c000d7fc                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000d87d                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000d920                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000d952        0x2 
 .text          0x00000000c000d954       0x1d krnl/compat.32
                0x00000000c000d954                Krnl::handlePowerButton()
                0x00000000c000d964                Krnl::handleSleepButton()
 *fill*         0x00000000c000d971        0x1 
 .text          0x00000000c000d972      0x2c3 krnl/computer.32
                0x00000000c000d972                Computer::close(int, int, void*)
                0x00000000c000d978                Computer::open(int, int, void*)
                0x00000000c000da5e                KeFirstTask()
                0x00000000c000db80                Computer::Computer()
                0x00000000c000db80                Computer::Computer()
                0x00000000c000dbc4                KePrepareShutdown()
                0x00000000c000dbe4                KeShutdown()
                0x00000000c000dc08                KeSleep()
                0x00000000c000dc14                KeRestart()
 .text          0x00000000c000dc35       0x2b krnl/crc32.32
                0x00000000c000dc35                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000dc60      0x5bf krnl/env.32
                0x00000000c000dc60                EnvVarContainer::getEnv(char const*)
                0x00000000c000dc9e                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000dd60                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000dd62                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000df86                EnvVarContainer::__loadSystem()
                0x00000000c000dfa0                EnvVarContainer::__loadUser()
                0x00000000c000dfa2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000dfa2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000dfc4                EnvVarContainer::~EnvVarContainer()
                0x00000000c000dfc4                EnvVarContainer::~EnvVarContainer()
                0x00000000c000dff4                KeGetEnv(Process*, char const*)
                0x00000000c000e059                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e073                KeSetEnvUser(char const*, char const*)
                0x00000000c000e092                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e0a5                KeDeleteEnvSystem(char const*)
                0x00000000c000e0a6                KeDeleteEnvUser(char const*)
                0x00000000c000e0a7                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e0a8                KeNewProcessEnv(Process*)
                0x00000000c000e0ca                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e116                KeLoadSystemEnv()
                0x00000000c000e144                KeLoadUserEnv()
                0x00000000c000e16a                KeFlushEnv()
                0x00000000c000e16b                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e18b                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e21f        0x1 
 .text          0x00000000c000e220      0x361 krnl/fault.32
                0x00000000c000e220                KeSetupInterrupts()
                0x00000000c000e298                int_handler
                0x00000000c000e3c8                KeDisplayProgramFault(char const*)
                0x00000000c000e418                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e46c                KePageFault(void*, void*)
                0x00000000c000e4d0                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e4e0                KeOtherFault(void*, void*)
                0x00000000c000e514                KeOpcodeFault(void*, void*)
                0x00000000c000e568                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000e581        0x1 
 .text          0x00000000c000e582      0x1db krnl/gdt.32
                0x00000000c000e582                GDTEntry::setBase(unsigned int)
                0x00000000c000e59e                GDTEntry::setLimit(unsigned int)
                0x00000000c000e5bc                GDT::GDT()
                0x00000000c000e5bc                GDT::GDT()
                0x00000000c000e5d2                GDT::addEntry(GDTEntry)
                0x00000000c000e5f4                GDT::getNumberOfEntries()
                0x00000000c000e5fc                GDT::flush()
                0x00000000c000e61e                GDT::setup()
 .text          0x00000000c000e75d       0x20 krnl/idle.32
                0x00000000c000e75d                idleFunction(void*)
 *fill*         0x00000000c000e77d        0x3 
 .text          0x00000000c000e780      0x46c krnl/idt.32
                0x00000000c000e780                IDTEntry::IDTEntry(bool)
                0x00000000c000e780                IDTEntry::IDTEntry(bool)
                0x00000000c000e7fa                IDTEntry::setOffset(unsigned int)
                0x00000000c000e810                IDT::IDT()
                0x00000000c000e810                IDT::IDT()
                0x00000000c000e812                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000e81a                IDT::addEntry(IDTEntry, int)
                0x00000000c000e834                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000e86c                IDT::flush()
                0x00000000c000e886                IDT::setup()
 .text          0x00000000c000ebec       0x9a krnl/inlines.32
                0x00000000c000ebec                CPU::current()
                0x00000000c000ebf8                operator new(unsigned long)
                0x00000000c000ebfd                operator delete(void*)
                0x00000000c000ec02                disableIRQs()
                0x00000000c000ec04                enableIRQs()
                0x00000000c000ec06                lockScheduler()
                0x00000000c000ec0e                unlockScheduler()
                0x00000000c000ec20                lockStuff()
                0x00000000c000ec2e                unlockStuff()
                0x00000000c000ec6b                Virt::getAKernelVAS()
                0x00000000c000ec71                __not_memcpy
 .text          0x00000000c000ec86      0x2bc krnl/intlformat.32
                0x00000000c000ec86                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000ee76                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000ee98                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000eeba                KeSetLocale(klocale_t)
                0x00000000c000eed0                KeInitialiseLocale()
                0x00000000c000ef3e                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000ef3f                KeFormatCurrency(char*, int, double)
                0x00000000c000ef40                KeFormatNumber(char*, long long, long long)
                0x00000000c000ef41                KeFormatNumber(char*, double)
 *fill*         0x00000000c000ef42        0x2 
 .text          0x00000000c000ef44      0x42e krnl/intops.32
                0x00000000c000ef44                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f0cc                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f278                KeGetDigitsInNumber(long long)
                0x00000000c000f2e4                KeItoa(unsigned long long, char*)
                0x00000000c000f314                KeItoa(long long, char*)
                0x00000000c000f344                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f372      0x207 krnl/kheap.32
                0x00000000c000f372                sbrk
                0x00000000c000f409                sbrk_thunk
                0x00000000c000f43f                mmap
                0x00000000c000f49d                munmap
                0x00000000c000f4b2                liballoc_lock()
                0x00000000c000f4c0                liballoc_unlock()
                0x00000000c000f4d8                liballoc_alloc(int)
                0x00000000c000f4f0                liballoc_free(void*, int)
                0x00000000c000f50b                realloc
                0x00000000c000f51f                malloc
                0x00000000c000f52f                free
                0x00000000c000f53f                rfree
                0x00000000c000f54f                calloc
 *fill*         0x00000000c000f579        0x3 
 .text          0x00000000c000f57c      0x1d3 krnl/mailbox.32
                0x00000000c000f57c                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000f5dc                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000f63c                KeMailboxCreate()
                0x00000000c000f670                KeMailboxPost(Mailbox*, void*)
                0x00000000c000f6d4                KeMailboxGet(Mailbox*, void**)
                0x00000000c000f738                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000f74f       0xfd krnl/main.32
                0x00000000c000f74f                KeEntryPoint
 .text          0x00000000c000f84c       0x1a krnl/mutex.32
                0x00000000c000f84c                Mutex::Mutex()
                0x00000000c000f84c                Mutex::Mutex()
 .text          0x00000000c000f866        0xc krnl/panic.32
                0x00000000c000f866                KePanic(char const*)
 .text          0x00000000c000f872      0x667 krnl/physmgr.32
                0x00000000c000f872                Phys::allocateDMA(unsigned long)
                0x00000000c000f95a                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000f995                Phys::setPageState(unsigned long, bool)
                0x00000000c000f9d5                Phys::getPageState(unsigned long)
                0x00000000c000f9f1                Phys::freePage(unsigned long)
                0x00000000c000fa5a                Phys::allocatePage()
                0x00000000c000fb38                Phys::allocateContiguousPages(int)
                0x00000000c000fbb3                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000fbeb                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000fed9        0x1 
 .text          0x00000000c000feda      0x275 krnl/pipe.32
                0x00000000c000feda                Pipe::isAtty()
                0x00000000c000fede                Pipe::~Pipe()
                0x00000000c000fede                Pipe::~Pipe()
                0x00000000c000ff02                Pipe::~Pipe()
                0x00000000c000ff2a                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000ffea                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00100e8                Pipe::Pipe(int)
                0x00000000c00100e8                Pipe::Pipe(int)
 .text          0x00000000c001014f      0x10b krnl/powctrl.32
                0x00000000c001014f                KePowerThread(void*)
                0x00000000c0010180                KeChangePowerSettings(PowerSettings)
                0x00000000c0010196                KeUserIOReceived()
                0x00000000c00101a1                KeHandlePowerButton()
                0x00000000c00101b9                KeHandleSleepButton()
                0x00000000c00101d1                KeSetupPowerManager()
 .text          0x00000000c001025a       0x9d krnl/random.32
                0x00000000c001025a                KeRand()
                0x00000000c001029c                KeSeedRand(unsigned int)
                0x00000000c00102c5                KeInitRand()
 *fill*         0x00000000c00102f7        0x1 
 .text          0x00000000c00102f8      0x1bc krnl/resolve.32
                0x00000000c00102f8                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00104b4      0x401 krnl/semaphore.32
                0x00000000c00104b4                Semaphore::Semaphore(int)
                0x00000000c00104b4                Semaphore::Semaphore(int)
                0x00000000c00104e4                Semaphore::tryAcquire()
                0x00000000c00105b8                Semaphore::assertLocked(char const*)
                0x00000000c0010644                Semaphore::acquire(int)
                0x00000000c00107e8                Semaphore::acquire()
                0x00000000c0010804                Semaphore::release()
 .text          0x00000000c00108b5      0x322 krnl/signal.32
                0x00000000c00108b5                KiSigKill(int)
                0x00000000c00108c9                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00108ca                KiDefaultSignalHandlerPause(int)
                0x00000000c00108f6                KiDefaultSignalHandlerResume(int)
                0x00000000c0010922                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010927                KeInitSignals()
                0x00000000c0010979                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00109af                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010a2c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010b23                KiCheckSignalZ
                0x00000000c0010b65                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010ba0                KiFinishSignalZ
 .text          0x00000000c0010bd7      0xe17 krnl/syscalls.32
                0x00000000c0010bd7                SysSeekDir(regs*)
                0x00000000c0010bdc                SysTellDir(regs*)
                0x00000000c0010be1                SysVerify(regs*)
                0x00000000c0010beb                SysGetArgc(regs*)
                0x00000000c0010bff                SysTTYName(regs*)
                0x00000000c0010c07                SysFormatDisk(regs*)
                0x00000000c0010c7e                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010cd2                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010d2b                SysRealpath(regs*)
                0x00000000c0010d6f                SysReadDir(regs*)
                0x00000000c0010def                SysIsATTY(regs*)
                0x00000000c0010e49                SysSeek(regs*)
                0x00000000c0010ea7                SysTell(regs*)
                0x00000000c0010f1c                SysSize(regs*)
                0x00000000c0010f96                SysSizeFromFilename(regs*)
                0x00000000c00110c0                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00111ea                SysClose(regs*)
                0x00000000c001124a                SysOpenDir(regs*)
                0x00000000c00112c7                SysMakeDir(regs*)
                0x00000000c0011335                SysCloseDir(regs*)
                0x00000000c0011389                SysWait(regs*)
                0x00000000c00113aa                SysNotImpl(regs*)
                0x00000000c00113c5                SysPanic(regs*)
                0x00000000c00113e0                SysRmdir(regs*)
                0x00000000c0011445                SysUnlink(regs*)
                0x00000000c00114aa                SysGetArgv(regs*)
                0x00000000c00114f7                SysUSleep(regs*)
                0x00000000c0011520                SysSpawn(regs*)
                0x00000000c0011593                SysGetEnv(regs*)
                0x00000000c0011644                SysSetFatAttrib(regs*)
                0x00000000c00116b7                SysShutdown(regs*)
                0x00000000c0011714                SysPipe(regs*)
                0x00000000c0011759                SysGetUnixTime(regs*)
                0x00000000c001176d                string_ends_with(char const*, char const*)
                0x00000000c00117b5                SysOpen(regs*)
                0x00000000c00119ac                KeSystemCall(regs*, void*)
 .text          0x00000000c00119ee      0xb0b krnl/terminal.32
                0x00000000c00119ee                VgaText::isAtty()
                0x00000000c00119f2                VgaText::~VgaText()
                0x00000000c00119f2                VgaText::~VgaText()
                0x00000000c0011a16                VgaText::~VgaText()
                0x00000000c0011a40                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0011a60                setTerminalScrollLock(bool)
                0x00000000c0011a61                doTerminalCycle()
                0x00000000c0011a62                addToTerminalCycle(VgaText*)
                0x00000000c0011a63                scrollTerminalScrollLock(int)
                0x00000000c0011a64                VgaText::updateTitle()
                0x00000000c0011a66                VgaText::load()
                0x00000000c0011a68                VgaText::updateCursor()
                0x00000000c0011a7e                VgaText::doANSI_SGR(int)
                0x00000000c0011af2                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0011b02                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0011b12                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0011b32                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0011b3e                VgaText::setTitleColour(VgaColour)
                0x00000000c0011b4a                VgaText::setTitle(char*)
                0x00000000c0011b4c                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0011b5e                VgaText::scrollScreen()
                0x00000000c0011bf0                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0011c00                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0011cac                VgaText::getCursorX()
                0x00000000c0011cb4                VgaText::getCursorY()
                0x00000000c0011cbc                VgaText::setCursor(int, int)
                0x00000000c0011cd3                setActiveTerminal(VgaText*)
                0x00000000c0011d1e                VgaText::clearScreen()
                0x00000000c0011d6c                VgaText::setCursorX(int)
                0x00000000c0011d84                VgaText::setCursorY(int)
                0x00000000c0011d9c                VgaText::incrementCursor(bool)
                0x00000000c0011df0                VgaText::decrementCursor(bool)
                0x00000000c0011e12                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0011ee2                VgaText::putchar(char)
                0x00000000c0011fda                VgaText::putx(unsigned int)
                0x00000000c0012020                VgaText::puts(char const*)
                0x00000000c0012046                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0012092                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c001220c                VgaText::VgaText(char const*)
                0x00000000c001220c                VgaText::VgaText(char const*)
                0x00000000c001236c                VgaText::receiveKey(unsigned char)
                0x00000000c00124f8                VgaText::doUpdate()
 *fill*         0x00000000c00124f9        0x3 
 .text          0x00000000c00124fc      0x224 krnl/tss.32
                0x00000000c00124fc                TSS::TSS()
                0x00000000c00124fc                TSS::TSS()
                0x00000000c001250c                TSS::setESP(unsigned long)
                0x00000000c0012520                TSS::flush()
                0x00000000c0012540                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012720      0x4dc krnl/unixfile.32
                0x00000000c0012720                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012776                ReservedFilename::isAtty()
                0x00000000c0012792                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00127f0                UnixFile::getFileDescriptor()
                0x00000000c00127f8                UnixFile::UnixFile(int)
                0x00000000c00127f8                UnixFile::UnixFile(int)
                0x00000000c00129ac                ReservedFilename::ReservedFilename(int)
                0x00000000c00129ac                ReservedFilename::ReservedFilename(int)
                0x00000000c00129de                UnixFile::~UnixFile()
                0x00000000c00129de                UnixFile::~UnixFile()
                0x00000000c0012a7a                UnixFile::~UnixFile()
                0x00000000c0012aa2                ReservedFilename::~ReservedFilename()
                0x00000000c0012aa2                ReservedFilename::~ReservedFilename()
                0x00000000c0012ac6                ReservedFilename::~ReservedFilename()
                0x00000000c0012aed                KeGetFileFromDescriptor(int)
 .text          0x00000000c0012bfc     0x14bc krnl/virtmgr.32
                0x00000000c0012bfc                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0012c36                Virt::getPageState(unsigned long)
                0x00000000c0012c59                Virt::allocateKernelVirtualPages(int)
                0x00000000c0012d7e                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0012da1                Virt::swapIDToSector(unsigned long)
                0x00000000c0012db7                Virt::allocateSwapfilePage()
                0x00000000c0012e37                Virt::virtualMemorySetup()
                0x00000000c0012e88                Virt::setupPageSwapping(int)
                0x00000000c0012efa                VAS::setCPUSpecific(unsigned long)
                0x00000000c0012efc                VAS::VAS(VAS*)
                0x00000000c0012efc                VAS::VAS(VAS*)
                0x00000000c0012f14                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0012f42                VAS::getPageTableEntry(unsigned long)
                0x00000000c0012f61                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001309e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00130c2                VAS::virtualToPhysical(unsigned long)
                0x00000000c00130dc                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c001311e                VAS::VAS()
                0x00000000c001311e                VAS::VAS()
                0x00000000c0013188                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00131a8                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00131d4                VAS::~VAS()
                0x00000000c00131d4                VAS::~VAS()
                0x00000000c001333c                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013440                VAS::allocatePages(int, int)
                0x00000000c0013526                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c001357e                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013674                VAS::VAS(bool)
                0x00000000c0013674                VAS::VAS(bool)
                0x00000000c001385c                VAS::evict(unsigned long)
                0x00000000c0013960                VAS::canLockPage(unsigned long)
                0x00000000c001397a                VAS::unlockPage(unsigned long)
                0x00000000c00139ae                VAS::canLockPages(unsigned long, int)
                0x00000000c00139ea                VAS::unlockPages(unsigned long, int)
                0x00000000c0013a26                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0013d36                VAS::lockPage(unsigned long)
                0x00000000c0013da8                VAS::lockPages(unsigned long, int)
                0x00000000c0013de4                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0013e58                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0013e84                VAS::scanForEviction()
                0x00000000c0013fbd                mapVASFirstTime
 .text          0x00000000c00140b8       0x36 sys/eject.32
                0x00000000c00140b8                SysEject(regs*)
 .text          0x00000000c00140ee       0x18 sys/exit.32
                0x00000000c00140ee                SysExit(regs*)
 .text          0x00000000c0014106       0x1f sys/getcwd.32
                0x00000000c0014106                SysGetCwd(regs*)
 .text          0x00000000c0014125       0x26 sys/getpid.32
                0x00000000c0014125                SysGetPID(regs*)
 .text          0x00000000c001414b       0x21 sys/getramdata.32
                0x00000000c001414b                SysGetRAMData(regs*)
 .text          0x00000000c001416c       0x97 sys/getvgaptr.32
                0x00000000c001416c                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014203        0x1 
 .text          0x00000000c0014204       0xb9 sys/kill.32
                0x00000000c0014204                SysKill(regs*)
 .text          0x00000000c00142bd       0xa8 sys/loaddll.32
                0x00000000c00142bd                SysLoadDLL(regs*)
 .text          0x00000000c0014365       0x68 sys/read.32
                0x00000000c0014365                SysRead(regs*)
 .text          0x00000000c00143cd       0x29 sys/registersignal.32
                0x00000000c00143cd                SysRegisterSignal(regs*)
 .text          0x00000000c00143f6      0x1cc sys/registry.32
                0x00000000c00143f6                SysRegistryGetTypeFromPath(regs*)
                0x00000000c001443a                SysRegistryReadExtent(regs*)
                0x00000000c0014482                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014499                SysRegistryEnterDirectory(regs*)
                0x00000000c00144b0                SysRegistryGetNext(regs*)
                0x00000000c00144c7                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014501                SysRegistryOpen(regs*)
                0x00000000c0014515                SysRegistryClose(regs*)
                0x00000000c001452c                SysRegistryEasyReadString(regs*)
                0x00000000c0014578                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c00145c2       0x55 sys/sbrk.32
                0x00000000c00145c2                SysSbrk(regs*)
 .text          0x00000000c0014617       0x1c sys/setcwd.32
                0x00000000c0014617                SysSetCwd(regs*)
 .text          0x00000000c0014633       0xd7 sys/settime.32
                0x00000000c0014633                SysSetTime(regs*)
 .text          0x00000000c001470a       0x73 sys/symlink.32
                0x00000000c001470a                SysSymlink(regs*)
 .text          0x00000000c001477d       0x3e sys/timezone.32
                0x00000000c001477d                SysTimezone(regs*)
 .text          0x00000000c00147bb       0xfc sys/truncate.32
                0x00000000c00147bb                SysTruncate(regs*)
 .text          0x00000000c00148b7       0x68 sys/write.32
                0x00000000c00148b7                SysWrite(regs*)
 .text          0x00000000c001491f       0x9d sys/wsbe.32
                0x00000000c001491f                SysWsbe(regs*)
 .text          0x00000000c00149bc       0x28 sys/yield.32
                0x00000000c00149bc                SysYield(regs*)
 .text          0x00000000c00149e4     0x120b thr/elf.32
                0x00000000c00149e4                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014c76                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014e88                Thr::runtimeReferenceHelper()
                0x00000000c0014e9b                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014eea                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00151a8                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00158e1                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015913                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001594a                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015964                Thr::loadDLL(char const*, bool)
                0x00000000c0015bb6                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0015bef       0x5a thr/exec.32
                0x00000000c0015bef                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0015c49        0x3 
 .text          0x00000000c0015c4c     0x11c5 thr/prcssthr.32
                0x00000000c0015c4c                userModeEntryPoint(void*)
                0x00000000c0015c78                changeTSS
                0x00000000c0015ca8                switchToThread(ThreadControlBlock*)
                0x00000000c0015d58                Process::addArgs(char**)
                0x00000000c0015dc4                Process::Process(char const*, Process*, char**)
                0x00000000c0015dc4                Process::Process(char const*, Process*, char**)
                0x00000000c0015fec                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015fec                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00161d8                taskStartupFunction
                0x00000000c00161e4                KeDisablePreemption()
                0x00000000c001620c                KeRestorePreemption()
                0x00000000c001622c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016340                Process::createUserThread()
                0x00000000c0016360                setupMultitasking(void (*)())
                0x00000000c0016484                schedule()
                0x00000000c0016518                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016544                blockTask(TaskState)
                0x00000000c0016580                waitTask(int, int*, int)
                0x00000000c00165c4                milliTenthSleepUntil(unsigned int)
                0x00000000c001666c                milliTenthSleep(unsigned int)
                0x00000000c0016680                sleep(unsigned int)
                0x00000000c001669c                taskReturned
                0x00000000c00166e4                Thr::processFromPID(int)
                0x00000000c0016794                unblockTask(ThreadControlBlock*)
                0x00000000c0016848                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016b1c                cleanerTaskFunction(void*)
                0x00000000c0016c34                terminateTask(int)
                0x00000000c0016d44                Thr::terminateFromIRQ(int)
 .text          0x00000000c0016e11      0xd10 vm86/vm8086.32
                0x00000000c0016e11                Vm::inbv(unsigned short)
                0x00000000c0016e24                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016e5a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016e6a                Vm::getSegment(unsigned int)
                0x00000000c0016e72                Vm::getOffset(unsigned int)
                0x00000000c0016e77                Vm::mainloop2()
                0x00000000c0016eb1                Vm::mainVm8086Loop(void*)
                0x00000000c0016ec4                Vm::mainloop3(unsigned long)
                0x00000000c0016eea                Vm::initialise8086()
                0x00000000c0016f2d                Vm::resetConventionalMemory8086()
                0x00000000c0016f2e                Vm::finish8086()
                0x00000000c0016f90                Vm::getOutput8086(unsigned char*)
                0x00000000c0016fb5                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00170e2                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00172f0                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017389                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001739a                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00173ac                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00173bd                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00173d2                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00173e8                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00173fd                Vm::faultHandler(regs*)
 *fill*         0x00000000c0017b21        0x1 
 .text          0x00000000c0017b22     0x1ee7 arch/i386/hal.32
                0x00000000c0017b22                noCopro(unsigned long)
                0x00000000c0017b24                CPU::close(int, int, void*)
                0x00000000c0017b27                x86ReadCMOS(unsigned char)
                0x00000000c0017b7b                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0017bdb                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0017bfa                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0017c17                AMD_K6_writeback(int, int, int)
                0x00000000c0017cd7                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0017d75                cpuidCheckEDX(unsigned int)
                0x00000000c0017da2                cpuidCheckECX(unsigned int)
                0x00000000c0017dd0                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0017dfe                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0017e2c                HalDetectFeatures()
                0x00000000c0018bf7                HalEnableNMI()
                0x00000000c0018c0a                HalDisableNMI()
                0x00000000c0018c1d                HalGetNMIState()
                0x00000000c0018c23                x86rdmsr(unsigned int)
                0x00000000c0018c61                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0018ca6                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0018cbc                HalFindRSDP()
                0x00000000c0018d51                HalHandlePageFault(void*, void*)
                0x00000000c0018dfe                HalHandleOpcodeFault(void*, void*)
                0x00000000c0018e40                HalDisplayDebugInfo(void*)
                0x00000000c00191ce                HalReceivedNMI()
                0x00000000c0019269                HalSystemIdle()
                0x00000000c00192c8                i386SaveCoprocessor(void*)
                0x00000000c00192dc                i386LoadCoprocessor(void*)
                0x00000000c00192f0                x87EmulHandler(regs*, void*)
                0x00000000c001938d                HalInitialiseCoprocessor()
                0x00000000c0019411                HalPanic(char const*)
                0x00000000c0019525                HalQueryPerformanceCounter()
                0x00000000c0019535                HalInitialise()
                0x00000000c00196c7                HalMakeBeep(int)
                0x00000000c0019701                HalGetRand()
                0x00000000c0019704                HalEndOfInterrupt(int)
                0x00000000c001972f                HalRestart()
                0x00000000c0019730                HalShutdown()
                0x00000000c0019731                HalSleep()
                0x00000000c0019732                CPU::CPU()
                0x00000000c0019732                CPU::CPU()
                0x00000000c00197b6                CPU::setupSMEP()
                0x00000000c00197c2                CPU::setupUMIP()
                0x00000000c00197cc                CPU::setupTSC()
                0x00000000c00197d6                CPU::setupLargePages()
                0x00000000c00197e0                CPU::setupPAT()
                0x00000000c0019812                CPU::setupMTRR()
                0x00000000c0019814                CPU::setupGlobalPages()
                0x00000000c001981e                CPU::allowUsermodeDataAccess()
                0x00000000c001982c                CPU::prohibitUsermodeDataAccess()
                0x00000000c001983a                CPU::setupSMAP()
                0x00000000c0019848                CPU::setupFeatures()
                0x00000000c0019914                CPU::open(int, int, void*)
 .text          0x00000000c0019a09      0x261 arch/i386/intctrl.32
                0x00000000c0019a09                convertLegacyIRQNumber(int)
                0x00000000c0019a45                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0019a8f                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0019bbd                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0019bf1                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c0019c6a        0x2 
 .text          0x00000000c0019c6c      0x2dc arch/i386/pic.32
                0x00000000c0019c6c                picIoWait()
                0x00000000c0019c74                picDisable()
                0x00000000c0019ca8                picGetIRQReg(int)
                0x00000000c0019d24                picOpen()
                0x00000000c0019ea8                picEOI(int)
 .text          0x00000000c0019f48      0x5f3 arch/i386/rtc.32
                0x00000000c0019f48                RTC::open(int, int, void*)
                0x00000000c0019f4c                RTC::close(int, int, void*)
                0x00000000c0019f50                RTC::timeInSecondsUTC()
                0x00000000c0019f62                RTC::timeInDatetimeUTC()
                0x00000000c0019f88                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0019fc6                RTC::~RTC()
                0x00000000c0019fc6                RTC::~RTC()
                0x00000000c0019fea                RTC::~RTC()
                0x00000000c001a014                RTC::get_update_in_progress_flag()
                0x00000000c001a028                RTC::completeRTCRefresh()
                0x00000000c001a2dc                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001a452                rtcIRQHandler(regs*, void*)
                0x00000000c001a492                RTC::RTC()
                0x00000000c001a492                RTC::RTC()
 *fill*         0x00000000c001a53b        0x1 
 .text          0x00000000c001a53c      0x1f4 arch/i386/vga.32
                0x00000000c001a53c                HalConsoleScroll(int, int)
                0x00000000c001a644                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001a6a8                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001a730     0x14cf fs/fat/vfslink.32
                0x00000000c001a730                FAT::getName()
                0x00000000c001a738                FAT::tell(void*, unsigned long long*)
                0x00000000c001a774                FAT::stat(void*, unsigned long long*)
                0x00000000c001a7b0                FAT::~FAT()
                0x00000000c001a7b0                FAT::~FAT()
                0x00000000c001a7d4                FAT::~FAT()
                0x00000000c001a7fc                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001a8a0                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001a964                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001ab48                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001ad64                FAT::allocateSwapfile(char const*, int)
                0x00000000c001af24                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b094                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001b0f4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001b154                FAT::close(void*)
                0x00000000c001b1a8                FAT::closeDir(void*)
                0x00000000c001b1fc                FAT::truncate(void*, unsigned long long)
                0x00000000c001b268                FAT::seek(void*, unsigned long long)
                0x00000000c001b2c0                fatWrapperReadDisk
                0x00000000c001b300                fatWrapperWriteDisk
                0x00000000c001b340                fatWrapperIoctl
                0x00000000c001b45c                FAT::FAT()
                0x00000000c001b45c                FAT::FAT()
                0x00000000c001b4b4                FAT::fixFilepath(char*)
                0x00000000c001b4f4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001b668                FAT::openDir(char const*, void**)
                0x00000000c001b718                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b810                FAT::unlink(char const*)
                0x00000000c001b890                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ba44                FAT::rename(char const*, char const*)
                0x00000000c001bb10                FAT::mkdir(char const*)
                0x00000000c001bb90                FAT::exists(char const*)
 *fill*         0x00000000c001bbff        0x1 
 .text          0x00000000c001bc00       0x94 fs/iso9660/helper.32
                0x00000000c001bc00                isoReadDiscSectorHelper
                0x00000000c001bc5c                iso_kprintf
                0x00000000c001bc78                iso_kprintfd
 .text          0x00000000c001bc94      0x71c fs/iso9660/vfslink.32
                0x00000000c001bc94                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001bc9a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001bca0                ISO9660::getName()
                0x00000000c001bca6                ISO9660::closeDir(void*)
                0x00000000c001bcb0                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001bcb6                ISO9660::unlink(char const*)
                0x00000000c001bcbc                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001bcc2                ISO9660::rename(char const*, char const*)
                0x00000000c001bcc8                ISO9660::mkdir(char const*)
                0x00000000c001bcce                ISO9660::~ISO9660()
                0x00000000c001bcce                ISO9660::~ISO9660()
                0x00000000c001bcf2                ISO9660::~ISO9660()
                0x00000000c001bd1a                ISO9660::exists(char const*)
                0x00000000c001bd2e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001be14                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001be5c                ISO9660::seek(void*, unsigned long long)
                0x00000000c001be9e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001bedc                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001bf2e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c070                ISO9660::close(void*)
                0x00000000c001c0a0                ISO9660::openDir(char const*, void**)
                0x00000000c001c17a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c297                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001c316                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001c388                ISO9660::ISO9660()
                0x00000000c001c388                ISO9660::ISO9660()
 .text          0x00000000c001c3b0      0x26c hal/sound/sndcard.32
                0x00000000c001c3b0                SoundCard::beginPlayback()
                0x00000000c001c3be                SoundCard::stopPlayback()
                0x00000000c001c3cc                SoundCard::SoundCard(char const*)
                0x00000000c001c3cc                SoundCard::SoundCard(char const*)
                0x00000000c001c46a                SoundCard::~SoundCard()
                0x00000000c001c46a                SoundCard::~SoundCard()
                0x00000000c001c48e                SoundCard::~SoundCard()
                0x00000000c001c4b8                SoundCard::configureRates(int, int, int)
                0x00000000c001c4e8                SoundCard::getSamples16(int, short*)
                0x00000000c001c544                SoundCard::getSamples32(int, int*)
                0x00000000c001c5ca                SoundCard::addChannel(SoundPort*)
                0x00000000c001c608                SoundCard::removeChannel(int)
 .text          0x00000000c001c61c      0x426 hal/sound/sndport.32
                0x00000000c001c61c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c61c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c6a8                SoundPort::~SoundPort()
                0x00000000c001c6a8                SoundPort::~SoundPort()
                0x00000000c001c6dc                SoundPort::unpause()
                0x00000000c001c6e8                SoundPort::pause()
                0x00000000c001c6f4                SoundPort::getBufferUsed()
                0x00000000c001c6fc                SoundPort::getBufferSize()
                0x00000000c001c704                SoundPort::buffer8(signed char*, int)
                0x00000000c001c798                SoundPort::buffer16(short*, int)
                0x00000000c001c82c                SoundPort::buffer32(int*, int)
                0x00000000c001c8b8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001c984                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001ca42        0x0 hw/bus/isa.32
 .text          0x00000000c001ca42      0xc23 hw/bus/pci.32
                0x00000000c001ca42                PCI::open(int, int, void*)
                0x00000000c001ca60                PCI::close(int, int, void*)
                0x00000000c001ca64                PCI::PCI()
                0x00000000c001ca64                PCI::PCI()
                0x00000000c001cafc                PCI::readBAR8(unsigned int, int)
                0x00000000c001cb18                PCI::readBAR16(unsigned int, int)
                0x00000000c001cb36                PCI::readBAR32(unsigned int, int)
                0x00000000c001cb52                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001cb72                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001cb94                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001cbb4                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cc2a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ccd4                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ccf8                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd20                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd6a                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd92                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001cdb6                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001cdda                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001ce02                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ce66                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001cf4e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001d214                PCI::checkBus(unsigned char)
                0x00000000c001d238                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001d41e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001d59a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001d60c                PCI::detect()
 *fill*         0x00000000c001d665        0x1 
 .text          0x00000000c001d666      0xe56 hw/diskctrl/ide.32
                0x00000000c001d666                IDE::close(int, int, void*)
                0x00000000c001d66a                IDE::IDE()
                0x00000000c001d66a                IDE::IDE()
                0x00000000c001d69e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001d6b0                selectDrive(unsigned char, unsigned char)
                0x00000000c001d6b2                IDE::getBase(unsigned char)
                0x00000000c001d6c4                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001d784                IDE::read(unsigned char, unsigned char)
                0x00000000c001d832                IDE::waitInterrupt(unsigned char)
                0x00000000c001d894                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001d8b0                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001d8cc                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001d916                IDE::open(int, int, void*)
                0x00000000c001de70                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001df40                IDE::detect()
                0x00000000c001e3ae                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001e468                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001e4bc      0x33d hw/diskctrl/satabus.32
                0x00000000c001e4bc                SATABus::close(int, int, void*)
                0x00000000c001e4c0                SATABus::detect()
                0x00000000c001e4c2                SATABus::SATABus()
                0x00000000c001e4c2                SATABus::SATABus()
                0x00000000c001e548                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e57a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e5c2                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e5e2                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e60c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001e71c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001e7c6                SATABus::open(int, int, void*)
 *fill*         0x00000000c001e7f9        0x1 
 .text          0x00000000c001e7fa      0x7a9 hw/diskphys/ata.32
                0x00000000c001e7fa                ATA::close(int, int, void*)
                0x00000000c001e81e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001e820                ATA::ATA()
                0x00000000c001e820                ATA::ATA()
                0x00000000c001e84e                ATA::flush(bool)
                0x00000000c001e89c                ATA::readyForCommand()
                0x00000000c001e8e8                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ecd8                ATA::read(unsigned long long, int, void*)
                0x00000000c001ed24                ATA::write(unsigned long long, int, void*)
                0x00000000c001ed70                ATA::detectCHS()
                0x00000000c001ed9a                ATA::open(int, int, void*)
                0x00000000c001ef85                combineCharAndColour(char, unsigned char)
                0x00000000c001ef96                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001efa3        0x1 
 .text          0x00000000c001efa4      0x618 hw/diskphys/atapi.32
                0x00000000c001efa4                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001efaa                ATAPI::close(int, int, void*)
                0x00000000c001efce                ATAPI::ATAPI()
                0x00000000c001efce                ATAPI::ATAPI()
                0x00000000c001effc                ATAPI::readyForCommand()
                0x00000000c001f04e                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001f316                ATAPI::diskRemoved()
                0x00000000c001f350                ATAPI::eject()
                0x00000000c001f398                ATAPI::diskInserted()
                0x00000000c001f3a4                ATAPI::detectMedia()
                0x00000000c001f462                ATAPI::open(int, int, void*)
                0x00000000c001f542                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f5bc      0x44c hw/diskphys/sata.32
                0x00000000c001f5bc                SATA::close(int, int, void*)
                0x00000000c001f5e0                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001f5e2                SATA::open(int, int, void*)
                0x00000000c001f69a                SATA::SATA()
                0x00000000c001f69a                SATA::SATA()
                0x00000000c001f6c8                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f950                SATA::read(unsigned long long, int, void*)
                0x00000000c001f99c                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001fa08      0x5d0 hw/diskphys/satapi.32
                0x00000000c001fa08                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001fa0e                SATAPI::close(int, int, void*)
                0x00000000c001fa32                SATAPI::SATAPI()
                0x00000000c001fa32                SATAPI::SATAPI()
                0x00000000c001fa60                SATAPI::diskRemoved()
                0x00000000c001fa62                SATAPI::diskInserted()
                0x00000000c001fa7e                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001fd5c                SATAPI::eject()
                0x00000000c001fd98                SATAPI::detectMedia()
                0x00000000c001fdee                SATAPI::open(int, int, void*)
                0x00000000c001feee                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ffd8      0x443 hw/intctrl/apic.32
                0x00000000c001ffd8                IOAPIC::close(int, int, void*)
                0x00000000c001ffde                apicGetBase()
                0x00000000c001fffc                IOAPIC::IOAPIC()
                0x00000000c001fffc                IOAPIC::IOAPIC()
                0x00000000c0020024                apicOpen()
                0x00000000c00201b0                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c00201e2                IOAPIC::read(int)
                0x00000000c002020a                IOAPIC::open(int, int, void*)
                0x00000000c00202f0                IOAPIC::write(int, int)
                0x00000000c002031c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c002041b        0x1 
 .text          0x00000000c002041c       0xf0 hw/timer/apictimer.32
                0x00000000c002041c                APICTimer::close(int, int, void*)
                0x00000000c0020424                apicTimerHandler(regs*, void*)
                0x00000000c002044c                APICTimer::open(int, int, void*)
                0x00000000c00204bc                APICTimer::write(int)
                0x00000000c00204e4                APICTimer::APICTimer()
                0x00000000c00204e4                APICTimer::APICTimer()
 .text          0x00000000c002050c      0x1ad hw/timer/pit.32
                0x00000000c002050c                PIT::write(int)
                0x00000000c0020590                pitHandler(regs*, void*)
                0x00000000c00205b8                PIT::open(int, int, void*)
                0x00000000c0020608                PIT::close(int, int, void*)
                0x00000000c0020638                PIT::PIT()
                0x00000000c0020638                PIT::PIT()
 *fill*         0x00000000c00206b9        0x7 
 .text          0x00000000c00206c0       0x6f arch/i386/avx.32
                0x00000000c00206c0                avxDetect
                0x00000000c00206ea                avxSave
                0x00000000c00206fb                avxLoad
                0x00000000c002070c                avxInit
                0x00000000c002072e                avxClose
 *fill*         0x00000000c002072f        0x1 
 .text          0x00000000c0020730      0x2ec arch/i386/interrupt.32
                0x00000000c0020730                isr0
                0x00000000c0020740                isr1
                0x00000000c002074a                isr2
                0x00000000c0020754                isr3
                0x00000000c002075e                isr4
                0x00000000c0020768                isr5
                0x00000000c0020772                isr6
                0x00000000c002077c                isr7
                0x00000000c0020786                isr8
                0x00000000c002078e                isr9
                0x00000000c0020798                isr10
                0x00000000c00207a0                isr11
                0x00000000c00207a8                isr12
                0x00000000c00207b0                isr13
                0x00000000c00207ca                isr14
                0x00000000c00207d2                isr15
                0x00000000c00207dc                isr16
                0x00000000c00207e6                isr17
                0x00000000c00207f0                isr18
                0x00000000c00207fa                irq3
                0x00000000c0020804                irq4
                0x00000000c002080e                irq5
                0x00000000c0020818                irq6
                0x00000000c0020822                irq7
                0x00000000c002082c                irq8
                0x00000000c0020836                irq9
                0x00000000c0020840                irq10
                0x00000000c002084a                irq11
                0x00000000c0020854                irq12
                0x00000000c002085e                irq13
                0x00000000c0020868                irq14
                0x00000000c0020872                irq15
                0x00000000c002087c                irq1
                0x00000000c0020883                irq2
                0x00000000c002088a                isr96
                0x00000000c0020891                irq0
                0x00000000c0020896                int_common_stub
                0x00000000c00208c8                syscall_common_stub
                0x00000000c00209cc                irq16
                0x00000000c00209d6                irq17
                0x00000000c00209e0                irq18
                0x00000000c00209ea                irq19
                0x00000000c00209f4                irq20
                0x00000000c00209fe                irq21
                0x00000000c0020a08                irq22
                0x00000000c0020a12                irq23
 *fill*         0x00000000c0020a1c        0x4 
 .text          0x00000000c0020a20       0x10 arch/i386/rdrand.32
                0x00000000c0020a20                i386GetRDRAND
 .text          0x00000000c0020a30       0x39 arch/i386/sse.32
                0x00000000c0020a30                sseDetect
                0x00000000c0020a48                sseSave
                0x00000000c0020a50                sseLoad
                0x00000000c0020a58                sseInit
                0x00000000c0020a68                sseClose
 *fill*         0x00000000c0020a69        0x7 
 .text          0x00000000c0020a70       0x4f arch/i386/x87.32
                0x00000000c0020a76                x87Detect
                0x00000000c0020a97                x87Save
                0x00000000c0020a9e                x87Load
                0x00000000c0020aa5                x87Init
                0x00000000c0020abe                x87Close
 *fill*         0x00000000c0020abf        0x1 
 .text          0x00000000c0020ac0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0020ae5        0x0 crtn.32
 *fill*         0x00000000c0020ae5        0x3 
 .text          0x00000000c0020ae8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0020ae8                __divdi3
 *fill*         0x00000000c0020c33        0x1 
 .text          0x00000000c0020c34      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0020c34                __moddi3
 *fill*         0x00000000c0020db2        0x2 
 .text          0x00000000c0020db4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0020db4                __udivdi3
 *fill*         0x00000000c0020eb3        0x1 
 .text          0x00000000c0020eb4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0020eb4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0020fd0        0x0
 .iplt          0x00000000c0020fd0        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0020fce        0xf
 .init          0x00000000c0020fce        0x3 crti.32
                0x00000000c0020fce                _init
 .init          0x00000000c0020fd1        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0020fd6        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0020fdb        0x2 crtn.32

.fini           0x00000000c0020fdd        0xa
 .fini          0x00000000c0020fdd        0x3 crti.32
                0x00000000c0020fdd                _fini
 .fini          0x00000000c0020fe0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0020fe5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020fe8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020fe8       0x1a hal/device.32
                0x00000000c0020fe8                DriverlessDevice::~DriverlessDevice()
                0x00000000c0020fe8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021002       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021002       0x2a hal/device.32
                0x00000000c0021002                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002102c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002102c       0xdc hal/device.32
                0x00000000c002102c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021108       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021108       0x42 hal/device.32
                0x00000000c0021108                LinkedList<Device>::LinkedList()
                0x00000000c0021108                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002114c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002114c       0x1c hal/timer.32
                0x00000000c002114c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021168        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021168        0x7 hal/timer.32
                0x00000000c0021168                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021170       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021170       0xbc hal/timer.32
                0x00000000c0021170                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002122c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002122c       0xda hal/timer.32
                0x00000000c002122c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021308       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021308       0x23 hw/acpi.32
                0x00000000c0021308                ACPI::~ACPI()
                0x00000000c0021308                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002132c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002132c       0x2a hw/acpi.32
                0x00000000c002132c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021358        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021358        0x2 hw/acpi.32
                0x00000000c0021358                LinkedList<Device>::~LinkedList()
                0x00000000c0021358                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002135c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002135c       0x1c hw/acpi.32
                0x00000000c002135c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021378        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021378        0x7 hw/acpi.32
                0x00000000c0021378                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021380       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021380       0xb8 hw/acpi.32
                0x00000000c0021380                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0021438       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0021438       0x23 krnl/computer.32
                0x00000000c0021438                Computer::~Computer()
                0x00000000c0021438                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002145c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002145c       0x2a krnl/computer.32
                0x00000000c002145c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021486       0x24
 .text._Z10idleCommonv
                0x00000000c0021486       0x24 krnl/idle.32
                0x00000000c0021486                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00214aa        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00214aa        0x2 krnl/unixfile.32
                0x00000000c00214aa                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00214aa                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00214ac       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00214ac       0x42 krnl/unixfile.32
                0x00000000c00214ac                LinkedList<UnixFile>::LinkedList()
                0x00000000c00214ac                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00214ee       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00214ee       0xd3 krnl/unixfile.32
                0x00000000c00214ee                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00215c2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00215c2        0x7 krnl/unixfile.32
                0x00000000c00215c2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00215ca       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00215ca       0xa1 krnl/unixfile.32
                0x00000000c00215ca                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002166c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002166c        0x8 krnl/unixfile.32
                0x00000000c002166c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021674        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021674        0x8 sys/kill.32
                0x00000000c0021674                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002167c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002167c        0x2 thr/prcssthr.32
                0x00000000c002167c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002167c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021680       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021680       0x49 thr/prcssthr.32
                0x00000000c0021680                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0021680                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00216cc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00216cc       0x42 thr/prcssthr.32
                0x00000000c00216cc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00216cc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c002170e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002170e       0x23 arch/i386/hal.32
                0x00000000c002170e                CPU::~CPU()
                0x00000000c002170e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0021732       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0021732       0x2a arch/i386/hal.32
                0x00000000c0021732                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002175c       0x23
 .text._ZN3PCID2Ev
                0x00000000c002175c       0x23 hw/bus/pci.32
                0x00000000c002175c                PCI::~PCI()
                0x00000000c002175c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0021780       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0021780       0x2a hw/bus/pci.32
                0x00000000c0021780                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00217aa       0x23
 .text._ZN3IDED2Ev
                0x00000000c00217aa       0x23 hw/diskctrl/ide.32
                0x00000000c00217aa                IDE::~IDE()
                0x00000000c00217aa                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00217ce       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00217ce       0x2a hw/diskctrl/ide.32
                0x00000000c00217ce                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00217f8       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00217f8       0x23 hw/diskctrl/satabus.32
                0x00000000c00217f8                SATABus::~SATABus()
                0x00000000c00217f8                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002181c       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002181c       0x2a hw/diskctrl/satabus.32
                0x00000000c002181c                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0021846       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0021846       0x23 hw/diskphys/ata.32
                0x00000000c0021846                ATA::~ATA()
                0x00000000c0021846                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c002186a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c002186a       0x2a hw/diskphys/ata.32
                0x00000000c002186a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0021894       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0021894       0x23 hw/diskphys/atapi.32
                0x00000000c0021894                ATAPI::~ATAPI()
                0x00000000c0021894                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00218b8       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00218b8       0x2a hw/diskphys/atapi.32
                0x00000000c00218b8                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00218e2       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00218e2       0x23 hw/diskphys/sata.32
                0x00000000c00218e2                SATA::~SATA()
                0x00000000c00218e2                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0021906       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0021906       0x2a hw/diskphys/sata.32
                0x00000000c0021906                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0021930       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0021930       0x23 hw/diskphys/satapi.32
                0x00000000c0021930                SATAPI::~SATAPI()
                0x00000000c0021930                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0021954       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0021954       0x2a hw/diskphys/satapi.32
                0x00000000c0021954                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c002197e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002197e       0x23 hw/intctrl/apic.32
                0x00000000c002197e                IOAPIC::~IOAPIC()
                0x00000000c002197e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00219a2       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00219a2       0x2a hw/intctrl/apic.32
                0x00000000c00219a2                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00219cc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00219cc       0x23 hw/timer/apictimer.32
                0x00000000c00219cc                APICTimer::~APICTimer()
                0x00000000c00219cc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00219f0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00219f0       0x2a hw/timer/apictimer.32
                0x00000000c00219f0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0021a1c       0x23
 .text._ZN3PITD2Ev
                0x00000000c0021a1c       0x23 hw/timer/pit.32
                0x00000000c0021a1c                PIT::~PIT()
                0x00000000c0021a1c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0021a40       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0021a40       0x2a hw/timer/pit.32
                0x00000000c0021a40                PIT::~PIT()

.rodata         0x00000000c0021a6a     0x391a
                0x00000000c0021a6a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0021a6a        0x2 
 .ctors         0x00000000c0021a6c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0021a70        0x4 krnl/unixfile.32
 .ctors         0x00000000c0021a74        0x4 thr/prcssthr.32
 .ctors         0x00000000c0021a78        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0021a7c                end_ctors = .
                0x00000000c0021a7c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0021a7c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0021a80        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0021a80                __DTOR_END__
                0x00000000c0021a84                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0021a84       0x1c 
 .rodata        0x00000000c0021aa0      0x101 acpica/utclib.32
                0x00000000c0021aa0                AcpiGbl_Ctypes
 *fill*         0x00000000c0021ba1        0x3 
 .rodata        0x00000000c0021ba4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0021bbc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0021c06       0x1a 
 .rodata        0x00000000c0021c20       0xed fs/fat/ff.32
 *fill*         0x00000000c0021d0d       0x13 
 .rodata        0x00000000c0021d20      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022120       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002218f       0x11 dbg/kconsole.32
 .rodata        0x00000000c00221a0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00222f0      0x169 dbg/usban.32
 *fill*         0x00000000c0022459        0x3 
 .rodata.str1.4
                0x00000000c002245c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0022593      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c00226b6       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c002270f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0022710       0x6c fs/vfs.32
                0x00000000c0022710                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002277c       0x1c fs/vfs.32
                0x00000000c002277c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0022798       0x1c fs/vfs.32
                0x00000000c0022798                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00227b4       0x2c hal/bus.32
                0x00000000c00227b4                vtable for Bus
 .rodata.str1.1
                0x00000000c00227e0       0x6e hal/clock.32
                                         0x70 (size before relaxing)
 *fill*         0x00000000c002284e        0x2 
 .rodata._ZTV5Clock
                0x00000000c0022850       0x3c hal/clock.32
                0x00000000c0022850                vtable for Clock
 *fill*         0x00000000c002288c       0x14 
 .rodata        0x00000000c00228a0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00228d0       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0022934       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0022956       0x15 hal/device.32
 *fill*         0x00000000c002296b        0x1 
 .rodata._ZTV6Device
                0x00000000c002296c       0x2c hal/device.32
                0x00000000c002296c                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0022998       0x2c hal/device.32
                0x00000000c0022998                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00229c4       0x2c hal/diskctrl.32
                0x00000000c00229c4                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00229f0       0x38 hal/diskphys.32
                0x00000000c00229f0                vtable for PhysicalDisk
 .rodata        0x00000000c0022a28       0x53 hal/keybrd.32
 *fill*         0x00000000c0022a7b        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0022a7c       0x34 hal/keybrd.32
                0x00000000c0022a7c                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0022ab0       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0022af4       0x2c hal/logidisk.32
                0x00000000c0022af4                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0022b20       0x2c hal/mouse.32
                0x00000000c0022b20                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0022b4c       0x34 hal/nic.32
                0x00000000c0022b4c                vtable for NIC
 .rodata.str1.1
                0x00000000c0022b80        0xb hal/partition.32
 *fill*         0x00000000c0022b8b        0x1 
 .rodata._ZTV6Serial
                0x00000000c0022b8c       0x44 hal/serial.32
                0x00000000c0022b8c                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022bd0       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022c1b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022c23       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022c23       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0022c23       0x1e hal/timer.32
 *fill*         0x00000000c0022c41        0x3 
 .rodata._ZTV5Timer
                0x00000000c0022c44       0x30 hal/timer.32
                0x00000000c0022c44                vtable for Timer
 .rodata.str1.1
                0x00000000c0022c74       0x3e hal/vcache.32
 *fill*         0x00000000c0022cb2        0x2 
 .rodata._ZTV6VCache
                0x00000000c0022cb4       0x10 hal/vcache.32
                0x00000000c0022cb4                vtable for VCache
 .rodata.str1.1
                0x00000000c0022cc4       0xba hal/video.32
 *fill*         0x00000000c0022d7e        0x2 
 .rodata._ZTV5Video
                0x00000000c0022d80       0x4c hal/video.32
                0x00000000c0022d80                vtable for Video
 .rodata.str1.1
                0x00000000c0022dcc      0x17e hw/acpi.32
 *fill*         0x00000000c0022f4a        0x2 
 .rodata.str1.4
                0x00000000c0022f4c       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0022fc3       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0022fc3        0x8 hw/acpi.32
 *fill*         0x00000000c0022fc3        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0022fc4       0x2c hw/acpi.32
                0x00000000c0022fc4                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022ff0       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023003       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023043       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023064       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0023097        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c002309a       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.4
                0x00000000c0023110       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c00231c8       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0023271        0x3 
 .rodata._ZTV8Computer
                0x00000000c0023274       0x2c krnl/computer.32
                0x00000000c0023274                vtable for Computer
 .rodata.str1.1
                0x00000000c00232a0       0x3c krnl/env.32
 .rodata        0x00000000c00232dc       0x76 krnl/fault.32
 .rodata.str1.1
                0x00000000c0023352        0x4 krnl/intlformat.32
 .rodata.str1.1
                0x00000000c0023356       0x11 krnl/intops.32
 *fill*         0x00000000c0023356        0x2 
 .rodata.str1.4
                0x00000000c0023358       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023388        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023397       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c00233f8      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00234fd       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0023555       0x39 krnl/pipe.32
 *fill*         0x00000000c002358e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0023590       0x1c krnl/pipe.32
                0x00000000c0023590                vtable for Pipe
 .rodata.str1.1
                0x00000000c00235ac       0x91 krnl/resolve.32
 *fill*         0x00000000c002363d        0x3 
 .rodata.str1.4
                0x00000000c0023640       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c002365f       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0023728       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023770       0x4d krnl/terminal.32
                                         0x5e (size before relaxing)
 *fill*         0x00000000c00237bd        0x3 
 .rodata._ZTV7VgaText
                0x00000000c00237c0       0x1c krnl/terminal.32
                0x00000000c00237c0                vtable for VgaText
 .rodata        0x00000000c00237dc       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0023817       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0023817       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0023817       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0023817        0x8 krnl/unixfile.32
 *fill*         0x00000000c0023817        0x1 
 .rodata.str1.4
                0x00000000c0023818       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0023838       0x22 krnl/unixfile.32
 *fill*         0x00000000c002385a        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c002385c       0x1c krnl/unixfile.32
                0x00000000c002385c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0023878       0x1c krnl/unixfile.32
                0x00000000c0023878                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0023894      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0023e17      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0023f78        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0023f87        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0023f91       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0023fb2       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0023ff6       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c002400b       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024037      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024241       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0024298       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024390       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024390       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024390       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024390        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024390       0xdd vm86/vm8086.32
 *fill*         0x00000000c002446d        0x3 
 .rodata        0x00000000c0024470       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00244a0      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c00247eb        0x1 
 .rodata.str1.4
                0x00000000c00247ec       0x57 arch/i386/hal.32
 *fill*         0x00000000c0024843        0x1 
 .rodata._ZTV3CPU
                0x00000000c0024844       0x2c arch/i386/hal.32
                0x00000000c0024844                vtable for CPU
 .rodata.str1.4
                0x00000000c0024870       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c00248d1       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c002490f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0024924       0x3c arch/i386/rtc.32
                0x00000000c0024924                vtable for RTC
 .rodata.str1.1
                0x00000000c0024960       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00249a1        0x3 
 .rodata._ZTV3FAT
                0x00000000c00249a4       0x6c fs/fat/vfslink.32
                0x00000000c00249a4                vtable for FAT
 .rodata.str1.1
                0x00000000c0024a10       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0024a10      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0024b48       0x6c fs/iso9660/vfslink.32
                0x00000000c0024b48                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0024bb4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0024bf8       0x34 hal/sound/sndcard.32
                0x00000000c0024bf8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0024c2c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0024c6b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0024ca3       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0024d44       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0024da8       0x2c hw/bus/pci.32
                0x00000000c0024da8                vtable for PCI
 .rodata.str1.1
                0x00000000c0024dd4      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0024ef8       0x2c hw/diskctrl/ide.32
                0x00000000c0024ef8                vtable for IDE
 .rodata.str1.4
                0x00000000c0024f24       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0024f48       0x2c hw/diskctrl/satabus.32
                0x00000000c0024f48                vtable for SATABus
 .rodata.str1.1
                0x00000000c0024f74       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c002502f        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025030       0x38 hw/diskphys/ata.32
                0x00000000c0025030                vtable for ATA
 .rodata.str1.1
                0x00000000c0025068        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0025075        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0025078       0x38 hw/diskphys/atapi.32
                0x00000000c0025078                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00250b0       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0025138       0x38 hw/diskphys/sata.32
                0x00000000c0025138                vtable for SATA
 .rodata.str1.1
                0x00000000c0025170       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c002525a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c002525c       0x38 hw/diskphys/satapi.32
                0x00000000c002525c                vtable for SATAPI
 .rodata        0x00000000c0025294       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c00252ba        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c00252bc       0x2c hw/intctrl/apic.32
                0x00000000c00252bc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00252e8       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0025303        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0025304       0x30 hw/timer/apictimer.32
                0x00000000c0025304                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0025334       0x1d hw/timer/pit.32
 *fill*         0x00000000c0025351        0x3 
 .rodata._ZTV3PIT
                0x00000000c0025354       0x30 hw/timer/pit.32
                0x00000000c0025354                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0025384      0xa61
 *(.data)
 .data          0x00000000c0025384        0x0 crti.32
 .data          0x00000000c0025384        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0025384                __dso_handle
 .data          0x00000000c0025388        0x0 acpica/utclib.32
 .data          0x00000000c0025388        0x0 krnl/malloc.32
 .data          0x00000000c0025388        0x0 libk/ctype.32
 .data          0x00000000c0025388        0x0 libk/string.32
 .data          0x00000000c0025388        0x0 arch/i386/cc.32
 .data          0x00000000c0025388        0x0 fs/fat/diskio.32
 .data          0x00000000c0025388        0x0 fs/fat/ff.32
 .data          0x00000000c0025388        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0025388        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0025388        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0025388        0x0 dbg/kconsole.32
 *fill*         0x00000000c0025388       0x18 
 .data          0x00000000c00253a0       0x28 dbg/usban.32
                0x00000000c00253a0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00253c8        0x0 fs/symlink.32
 .data          0x00000000c00253c8        0x0 fs/vfs.32
 .data          0x00000000c00253c8        0x0 hal/bus.32
 .data          0x00000000c00253c8        0x0 hal/buzzer.32
 .data          0x00000000c00253c8        0x0 hal/clock.32
 .data          0x00000000c00253c8        0x0 hal/device.32
 .data          0x00000000c00253c8        0x0 hal/diskctrl.32
 .data          0x00000000c00253c8        0x0 hal/diskphys.32
 .data          0x00000000c00253c8        0x0 hal/fpu.32
 .data          0x00000000c00253c8        0x0 hal/intctrl.32
 .data          0x00000000c00253c8        0x0 hal/keybrd.32
 .data          0x00000000c00253c8        0x0 hal/logidisk.32
 .data          0x00000000c00253c8        0x0 hal/mouse.32
 .data          0x00000000c00253c8        0x0 hal/nic.32
 .data          0x00000000c00253c8        0x0 hal/partition.32
 .data          0x00000000c00253c8        0x0 hal/serial.32
 .data          0x00000000c00253c8        0x0 hal/timer.32
 .data          0x00000000c00253c8        0x0 hal/vcache.32
 .data          0x00000000c00253c8        0x0 hal/video.32
 .data          0x00000000c00253c8       0x10 hw/acpi.32
                0x00000000c00253c8                legacyIRQRemaps
 .data          0x00000000c00253d8        0x0 krnl/assert.32
 .data          0x00000000c00253d8        0x0 krnl/atexit.32
 .data          0x00000000c00253d8        0x0 krnl/bootmsg.32
 .data          0x00000000c00253d8        0x4 krnl/c++.32
                0x00000000c00253d8                __stack_chk_guard
 .data          0x00000000c00253dc        0x0 krnl/cdefs.32
 *fill*         0x00000000c00253dc        0x4 
 .data          0x00000000c00253e0      0x100 krnl/cm.32
                0x00000000c00253e0                CmComponents
 .data          0x00000000c00254e0        0x0 krnl/compat.32
 .data          0x00000000c00254e0        0x0 krnl/computer.32
 .data          0x00000000c00254e0      0x400 krnl/crc32.32
                0x00000000c00254e0                KiPolyLookupCRC32
 .data          0x00000000c00258e0       0x4d krnl/env.32
                0x00000000c00258e0                defaultSysEnv
 .data          0x00000000c002592d        0x0 krnl/fault.32
 .data          0x00000000c002592d        0x0 krnl/gdt.32
 .data          0x00000000c002592d        0x0 krnl/idle.32
 .data          0x00000000c002592d        0x0 krnl/idt.32
 .data          0x00000000c002592d        0x0 krnl/inlines.32
 .data          0x00000000c002592d        0x0 krnl/intlformat.32
 .data          0x00000000c002592d        0x0 krnl/intops.32
 *fill*         0x00000000c002592d        0x3 
 .data          0x00000000c0025930        0x4 krnl/kheap.32
 .data          0x00000000c0025934        0x0 krnl/mailbox.32
 .data          0x00000000c0025934        0x0 krnl/main.32
 .data          0x00000000c0025934        0x0 krnl/mutex.32
 .data          0x00000000c0025934        0x0 krnl/panic.32
 .data          0x00000000c0025934        0x4 krnl/physmgr.32
                0x00000000c0025934                Phys::bitmap
 .data          0x00000000c0025938        0x0 krnl/pipe.32
 .data          0x00000000c0025938        0x0 krnl/powctrl.32
 .data          0x00000000c0025938        0x0 krnl/random.32
 .data          0x00000000c0025938        0x0 krnl/resolve.32
 .data          0x00000000c0025938        0x0 krnl/semaphore.32
 *fill*         0x00000000c0025938        0x8 
 .data          0x00000000c0025940       0x4c krnl/signal.32
                0x00000000c0025940                KiDefaultSignalHandlers
 *fill*         0x00000000c002598c       0x14 
 .data          0x00000000c00259a0      0x104 krnl/syscalls.32
                0x00000000c00259a0                systemCallHandlers
 *fill*         0x00000000c0025aa4       0x1c 
 .data          0x00000000c0025ac0       0x60 krnl/terminal.32
                0x00000000c0025ac0                VgaText::hiddenOut
                0x00000000c0025ae0                ansiToVGAMappings
 .data          0x00000000c0025b20        0x0 krnl/tss.32
 .data          0x00000000c0025b20        0x4 krnl/unixfile.32
                0x00000000c0025b20                UnixFile::nextFd
 .data          0x00000000c0025b24       0x15 krnl/virtmgr.32
                0x00000000c0025b24                Virt::pageAllocPtr
                0x00000000c0025b28                Virt::bitmap
                0x00000000c0025b2c                Virt::swapfileSectorsPerPage
                0x00000000c0025b30                Virt::swapfileLength
                0x00000000c0025b34                Virt::swapfileSector
                0x00000000c0025b38                Virt::swapfileDrive
 .data          0x00000000c0025b39        0x0 sys/eject.32
 .data          0x00000000c0025b39        0x0 sys/exit.32
 .data          0x00000000c0025b39        0x0 sys/getcwd.32
 .data          0x00000000c0025b39        0x0 sys/getpid.32
 .data          0x00000000c0025b39        0x0 sys/getramdata.32
 .data          0x00000000c0025b39        0x0 sys/getvgaptr.32
 .data          0x00000000c0025b39        0x0 sys/kill.32
 .data          0x00000000c0025b39        0x0 sys/loaddll.32
 .data          0x00000000c0025b39        0x0 sys/read.32
 .data          0x00000000c0025b39        0x0 sys/registersignal.32
 .data          0x00000000c0025b39        0x0 sys/registry.32
 .data          0x00000000c0025b39        0x0 sys/sbrk.32
 .data          0x00000000c0025b39        0x0 sys/setcwd.32
 .data          0x00000000c0025b39        0x0 sys/settime.32
 .data          0x00000000c0025b39        0x0 sys/symlink.32
 .data          0x00000000c0025b39        0x0 sys/timezone.32
 .data          0x00000000c0025b39        0x0 sys/truncate.32
 .data          0x00000000c0025b39        0x0 sys/write.32
 .data          0x00000000c0025b39        0x0 sys/wsbe.32
 .data          0x00000000c0025b39        0x0 sys/yield.32
 .data          0x00000000c0025b39        0x0 thr/elf.32
 .data          0x00000000c0025b39        0x0 thr/exec.32
 *fill*         0x00000000c0025b39        0x3 
 .data          0x00000000c0025b3c        0x4 thr/prcssthr.32
                0x00000000c0025b3c                Thr::nextPID
 .data          0x00000000c0025b40        0x0 vm86/vm8086.32
 .data          0x00000000c0025b40      0x2a4 arch/i386/hal.32
                0x00000000c0025b40                exceptionNames
                0x00000000c0025de0                lastCode
 .data          0x00000000c0025de4        0x0 arch/i386/intctrl.32
 .data          0x00000000c0025de4        0x0 arch/i386/pic.32
 .data          0x00000000c0025de4        0x0 arch/i386/rtc.32
 .data          0x00000000c0025de4        0x0 arch/i386/vga.32
 .data          0x00000000c0025de4        0x0 fs/fat/vfslink.32
 .data          0x00000000c0025de4        0x0 fs/iso9660/helper.32
 .data          0x00000000c0025de4        0x1 fs/iso9660/vfslink.32
                0x00000000c0025de4                recentDriveletter
 .data          0x00000000c0025de5        0x0 hal/sound/sndcard.32
 .data          0x00000000c0025de5        0x0 hal/sound/sndport.32
 .data          0x00000000c0025de5        0x0 hw/bus/isa.32
 .data          0x00000000c0025de5        0x0 hw/bus/pci.32
 .data          0x00000000c0025de5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0025de5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0025de5        0x0 hw/diskphys/ata.32
 .data          0x00000000c0025de5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0025de5        0x0 hw/diskphys/sata.32
 .data          0x00000000c0025de5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0025de5        0x0 hw/intctrl/apic.32
 .data          0x00000000c0025de5        0x0 hw/timer/apictimer.32
 .data          0x00000000c0025de5        0x0 hw/timer/pit.32
 .data          0x00000000c0025de5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0025de5        0x0 crtn.32
 .data          0x00000000c0025de5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0025de5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0025de5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0025de5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0025de8        0x0
 .got           0x00000000c0025de8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0025de8        0x0
 .got.plt       0x00000000c0025de8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0025de8        0x0
 .igot.plt      0x00000000c0025de8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0025de8        0x0
 .tm_clone_table
                0x00000000c0025de8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0025de8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0025de5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0025de5        0x3 
 .eh_frame      0x00000000c0025de8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0025de8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0025de8       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0025e40       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0025e80       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0025eec       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0026000       0x7d
 *(userkernel)
 userkernel     0x00000000c0026000       0x52 krnl/signal.32
                0x00000000c0026000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002602c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0026052       0x2b krnl/syscalls.32
                0x00000000c0026052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0027000        0x1
 *(align_previous)
 align_previous
                0x00000000c0027000        0x1 krnl/signal.32
                0x00000000c0027000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0027004        0x0
 .rel.got       0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0027001     0x74a7
                0x00000000c0027001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0027001       0x1f 
 COMMON         0x00000000c0027020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0027020                dcache
                0x00000000c0027060                cdDriveLetter
                0x00000000c0027080                icache
 *(.bss)
 .bss           0x00000000c00270c0        0x0 crti.32
 .bss           0x00000000c00270c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00270e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00270e4       0x1c 
 .bss           0x00000000c0027100      0x378 krnl/malloc.32
 .bss           0x00000000c0027478        0x0 libk/ctype.32
 .bss           0x00000000c0027478        0x0 libk/string.32
 .bss           0x00000000c0027478        0x0 arch/i386/cc.32
 .bss           0x00000000c0027478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0027478        0x8 
 .bss           0x00000000c0027480       0x88 fs/fat/ff.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0027508       0x18 
 .bss           0x00000000c0027520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0027eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0027eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0027eb8        0x8 
 .bss           0x00000000c0027ec0     0x2444 fs/symlink.32
                0x00000000c0027ec0                kiNumWaitingRoomSymlinks
                0x00000000c0027ee0                kiNewlyCreatedIDs
                0x00000000c0027f00                kiNewlyCreatedSymlinks
                0x00000000c0028300                kiSymlinkHashTable
                0x00000000c002a300                kiBaseSymlinkID
 .bss           0x00000000c002a304        0x4 fs/vfs.32
                0x00000000c002a304                installedFilesystems
 .bss           0x00000000c002a308        0x0 hal/bus.32
 .bss           0x00000000c002a308        0x0 hal/buzzer.32
 *fill*         0x00000000c002a308       0x18 
 .bss           0x00000000c002a320      0x348 hal/clock.32
                0x00000000c002a320                keLoadedTimezones
                0x00000000c002a324                keNumberOfTimezones
                0x00000000c002a340                keTimezoneStrings
                0x00000000c002a660                keDstOn
                0x00000000c002a661                keTimezoneHalfHourOffset
                0x00000000c002a664                keTimezoneHourOffset
 .bss           0x00000000c002a668        0x0 hal/device.32
 .bss           0x00000000c002a668        0x0 hal/diskctrl.32
 .bss           0x00000000c002a668        0x0 hal/diskphys.32
 .bss           0x00000000c002a668        0x0 hal/fpu.32
 .bss           0x00000000c002a668        0x0 hal/intctrl.32
 *fill*         0x00000000c002a668       0x18 
 .bss           0x00000000c002a680      0x428 hal/keybrd.32
                0x00000000c002a680                keyboardWaitingTaskList
                0x00000000c002a684                keyboardSetupYet
                0x00000000c002a688                guiKeyboardHandler
                0x00000000c002a6a0                keystates
 *fill*         0x00000000c002aaa8       0x18 
 .bss           0x00000000c002aac0       0x88 hal/logidisk.32
                0x00000000c002aac0                diskAssignments
                0x00000000c002aae0                disks
 .bss           0x00000000c002ab48        0x4 hal/mouse.32
                0x00000000c002ab48                guiMouseHandler
 .bss           0x00000000c002ab4c        0x0 hal/nic.32
 .bss           0x00000000c002ab4c        0x0 hal/partition.32
 .bss           0x00000000c002ab4c        0x0 hal/serial.32
 .bss           0x00000000c002ab4c        0x4 hal/timer.32
                0x00000000c002ab4c                milliTenthsSinceBoot
 .bss           0x00000000c002ab50        0x0 hal/vcache.32
 .bss           0x00000000c002ab50        0x4 hal/video.32
                0x00000000c002ab50                screen
 *fill*         0x00000000c002ab54        0xc 
 .bss           0x00000000c002ab60      0x480 hw/acpi.32
                0x00000000c002ab60                nextACPITable
                0x00000000c002ab80                acpiTables
                0x00000000c002ad80                usingXSDT
                0x00000000c002ad84                RSDTpointer
                0x00000000c002ad88                RSDPpointer
                0x00000000c002ad8c                nextAPICNMI
                0x00000000c002ada0                apicNMIInfo
                0x00000000c002ae20                legacyIRQFlags
                0x00000000c002ae40                ioapicDiscoveryNumber
                0x00000000c002ae60                ioapicFoundInMADT
                0x00000000c002ae80                ioapicAddresses
                0x00000000c002af00                ioapicGSIBase
                0x00000000c002af80                processorDiscoveryNumber
                0x00000000c002afa0                matchingAPICID
                0x00000000c002afc0                processorID
 .bss           0x00000000c002afe0        0x0 krnl/assert.32
 .bss           0x00000000c002afe0       0xe0 krnl/atexit.32
                0x00000000c002afe0                KiNextAtexitHandler
                0x00000000c002b000                KiAtexitContexts
                0x00000000c002b060                KiAtexitHandlers
 .bss           0x00000000c002b0c0        0x0 krnl/bootmsg.32
 .bss           0x00000000c002b0c0        0x0 krnl/c++.32
 .bss           0x00000000c002b0c0        0x0 krnl/cdefs.32
 .bss           0x00000000c002b0c0        0x4 krnl/cm.32
 .bss           0x00000000c002b0c4        0x0 krnl/compat.32
 .bss           0x00000000c002b0c4       0x12 krnl/computer.32
                0x00000000c002b0c4                systemSleepFunction
                0x00000000c002b0c8                systemResetFunction
                0x00000000c002b0cc                systemShutdownFunction
                0x00000000c002b0d0                Krnl::computer
                0x00000000c002b0d4                KeIsPreemptionOn
                0x00000000c002b0d5                KeIsSchedulingOn
 .bss           0x00000000c002b0d6        0x0 krnl/crc32.32
 *fill*         0x00000000c002b0d6        0x2 
 .bss           0x00000000c002b0d8        0x8 krnl/env.32
                0x00000000c002b0d8                KeUserEnv
                0x00000000c002b0dc                KeSystemEnv
 .bss           0x00000000c002b0e0     0x2000 krnl/fault.32
                0x00000000c002b0e0                keInterruptContexts
                0x00000000c002c0e0                keInterruptHandlers
 .bss           0x00000000c002d0e0        0x6 krnl/gdt.32
                0x00000000c002d0e0                gdtDescr
 .bss           0x00000000c002d0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002d0e6        0x2 
 .bss           0x00000000c002d0e8        0x6 krnl/idt.32
                0x00000000c002d0e8                idtDescr
 .bss           0x00000000c002d0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002d0ee       0x12 
 .bss           0x00000000c002d100       0x24 krnl/intlformat.32
                0x00000000c002d100                keLocale
 .bss           0x00000000c002d124        0x0 krnl/intops.32
 .bss           0x00000000c002d124        0x0 krnl/kheap.32
 .bss           0x00000000c002d124        0x0 krnl/mailbox.32
 .bss           0x00000000c002d124        0x4 krnl/main.32
                0x00000000c002d124                keBootSettings
 .bss           0x00000000c002d128        0x0 krnl/mutex.32
 .bss           0x00000000c002d128        0x1 krnl/panic.32
                0x00000000c002d128                KeIsKernelInPanic
 *fill*         0x00000000c002d129        0x3 
 .bss           0x00000000c002d12c       0x29 krnl/physmgr.32
                0x00000000c002d12c                Phys::forbidEvictions
                0x00000000c002d130                Phys::currentPagePointer
                0x00000000c002d134                Phys::highestMem
                0x00000000c002d138                Phys::oldPercent
                0x00000000c002d13c                Phys::usedPages
                0x00000000c002d140                Phys::usablePages
                0x00000000c002d144                Phys::dmaUsage
 .bss           0x00000000c002d155        0x0 krnl/pipe.32
 *fill*         0x00000000c002d155        0xb 
 .bss           0x00000000c002d160       0x48 krnl/powctrl.32
                0x00000000c002d160                powCtrlOnBattery
                0x00000000c002d180                currentPowerSettings
                0x00000000c002d1a4                secondsSinceLastUserIO
 .bss           0x00000000c002d1a8        0x8 krnl/random.32
                0x00000000c002d1a8                kiRandSeed
 .bss           0x00000000c002d1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002d1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002d1b0        0x0 krnl/signal.32
 .bss           0x00000000c002d1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002d1b0        0x9 krnl/terminal.32
                0x00000000c002d1b0                terminalCycle
                0x00000000c002d1b4                activeTerminal
                0x00000000c002d1b8                VgaText::graphicMode
 *fill*         0x00000000c002d1b9        0x1 
 .bss           0x00000000c002d1ba        0x2 krnl/tss.32
                0x00000000c002d1ba                doubleFaultSelector
 *fill*         0x00000000c002d1bc        0x4 
 .bss           0x00000000c002d1c0       0x84 krnl/unixfile.32
                0x00000000c002d1c0                sfileLpt
                0x00000000c002d200                sfileCom
                0x00000000c002d224                sfileNul
                0x00000000c002d228                sfilePnt
                0x00000000c002d22c                sfileAux
                0x00000000c002d230                sfileCon
                0x00000000c002d234                initialFilesAdded
                0x00000000c002d238                unixFileLinkedList
 .bss           0x00000000c002d244       0x10 krnl/virtmgr.32
                0x00000000c002d244                twswaps
                0x00000000c002d248                swapBalance
                0x00000000c002d24c                Virt::swapfileBitmap
                0x00000000c002d250                keFirstVAS
 .bss           0x00000000c002d254        0x0 sys/eject.32
 .bss           0x00000000c002d254        0x0 sys/exit.32
 .bss           0x00000000c002d254        0x0 sys/getcwd.32
 .bss           0x00000000c002d254        0x0 sys/getpid.32
 .bss           0x00000000c002d254        0x0 sys/getramdata.32
 .bss           0x00000000c002d254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002d254        0x0 sys/kill.32
 .bss           0x00000000c002d254        0x0 sys/loaddll.32
 .bss           0x00000000c002d254        0x0 sys/read.32
 .bss           0x00000000c002d254        0x0 sys/registersignal.32
 .bss           0x00000000c002d254        0x0 sys/registry.32
 .bss           0x00000000c002d254        0x0 sys/sbrk.32
 .bss           0x00000000c002d254        0x0 sys/setcwd.32
 .bss           0x00000000c002d254        0x0 sys/settime.32
 .bss           0x00000000c002d254        0x0 sys/symlink.32
 .bss           0x00000000c002d254        0x0 sys/timezone.32
 .bss           0x00000000c002d254        0x0 sys/truncate.32
 .bss           0x00000000c002d254        0x0 sys/write.32
 .bss           0x00000000c002d254        0x0 sys/wsbe.32
 .bss           0x00000000c002d254        0x0 sys/yield.32
 *fill*         0x00000000c002d254        0xc 
 .bss           0x00000000c002d260      0x7a4 thr/elf.32
                0x00000000c002d260                Thr::driverLookupNext
                0x00000000c002d280                Thr::driverLookupLen
                0x00000000c002d480                Thr::driverLookupAddr
                0x00000000c002d680                Thr::driverNameLookup
                0x00000000c002d880                Thr::kernelSymbols
                0x00000000c002d900                Thr::kernelStringTable
                0x00000000c002d980                Thr::kernelSymbolTable
                0x00000000c002da00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002da04        0x0 thr/exec.32
 *fill*         0x00000000c002da04        0x4 
 .bss           0x00000000c002da08       0x70 thr/prcssthr.32
                0x00000000c002da08                KiRestorePreemptionValue
                0x00000000c002da0c                KiPreemptionDisableCounter
                0x00000000c002da10                cleanerThread
                0x00000000c002da14                weNeedTheCleanerToNotBlock
                0x00000000c002da18                retValLockStuff
                0x00000000c002da1c                retValSchedLock
                0x00000000c002da20                lockStuffLock
                0x00000000c002da24                schedulerLock
                0x00000000c002da28                taskSwitchesPostponedFlag
                0x00000000c002da2c                postponeTaskSwitchesCounter
                0x00000000c002da30                irqDisableCounter
                0x00000000c002da34                terminatedTaskList
                0x00000000c002da40                sleepingTaskList
                0x00000000c002da4c                taskList
                0x00000000c002da58                kernelProcess
 *fill*         0x00000000c002da78        0x8 
 .bss           0x00000000c002da80       0x40 vm86/vm8086.32
                0x00000000c002da80                Vm::started8086Yet
                0x00000000c002da84                Vm::vmRetV
                0x00000000c002da88                Vm::vmDone
                0x00000000c002da89                Vm::vmReady
                0x00000000c002da8c                Vm::vm86Thread
                0x00000000c002da90                Vm::vmToHostCommsPtr
                0x00000000c002daa0                Vm::vmToHostComms
 .bss           0x00000000c002dac0       0x54 arch/i386/hal.32
                0x00000000c002dac0                apic
                0x00000000c002dac4                guiPanicHandler
                0x00000000c002dac8                fpuOwner
                0x00000000c002dacc                coproLoadFunc
                0x00000000c002dad0                coproSaveFunc
                0x00000000c002dad4                lastD
                0x00000000c002dad8                lastC
                0x00000000c002dadc                lastB
                0x00000000c002dae0                lastA
                0x00000000c002dae4                HalPageWriteCombiningFlag
                0x00000000c002dae8                HalPageGlobalFlag
                0x00000000c002daec                nmi
                0x00000000c002daf0                vendorIDString
                0x00000000c002dafd                familyID
                0x00000000c002dafe                model
                0x00000000c002daff                processorType
                0x00000000c002db00                steppingID
                0x00000000c002db04                vendor
                0x00000000c002db08                opcodeDetectionMode
                0x00000000c002db0c                features
 .bss           0x00000000c002db14        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002db14        0x0 arch/i386/pic.32
 .bss           0x00000000c002db14        0x2 arch/i386/rtc.32
 .bss           0x00000000c002db16        0x0 arch/i386/vga.32
 *fill*         0x00000000c002db16        0xa 
 .bss           0x00000000c002db20       0xf0 fs/fat/vfslink.32
                0x00000000c002db20                FAT::fats
                0x00000000c002db40                FAT::vfsToFatRemaps
                0x00000000c002dbc0                fatToVFSRemaps
 .bss           0x00000000c002dc10        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002dc10       0x10 
 .bss           0x00000000c002dc20      0x820 fs/iso9660/vfslink.32
                0x00000000c002dc20                iso9660Owner
                0x00000000c002dc24                recentSector
                0x00000000c002dc40                recentBuffer
 .bss           0x00000000c002e440        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002e440        0x0 hal/sound/sndport.32
 .bss           0x00000000c002e440        0x0 hw/bus/isa.32
 .bss           0x00000000c002e440        0xd hw/bus/pci.32
                0x00000000c002e440                thePCI
 .bss           0x00000000c002e44d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002e44d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002e44d        0x3 
 .bss           0x00000000c002e450        0x8 hw/diskphys/ata.32
                0x00000000c002e450                ataSectorsWritten
                0x00000000c002e454                ataSectorsRead
 .bss           0x00000000c002e458        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002e458        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002e458        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002e458        0x8 
 .bss           0x00000000c002e460       0x41 hw/intctrl/apic.32
                0x00000000c002e460                noOfIOAPICs
                0x00000000c002e480                ioapics
                0x00000000c002e4a0                IOAPICsSetupYet
 .bss           0x00000000c002e4a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002e4a1        0x3 
 .bss           0x00000000c002e4a4        0x4 hw/timer/pit.32
                0x00000000c002e4a4                pitFreq
 .bss           0x00000000c002e4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002e4a8        0x0 crtn.32
 .bss           0x00000000c002e4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002e4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002e4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002e4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002e4a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003594f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
