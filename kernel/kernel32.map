Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c36a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002ff                asmQuickAcquireLock
                0x00000000c000031d                asmQuickReleaseLock
                0x00000000c0000329                asmAcquireLock
                0x00000000c000034a                asmReleaseLock
                0x00000000c000035d                loadGDT
                0x00000000c000037d                memcpy
 *fill*         0x00000000c0000382        0xe 
 .text          0x00000000c0000390      0x79e acpica/utclib.32
                0x00000000c0000390                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004d0                memset
                0x00000000c0000540                strlen
                0x00000000c0000570                strpbrk
                0x00000000c00005b0                strtok
                0x00000000c0000600                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b2e      0xfad core/malloc.32
                0x00000000c0000c99                dlfree
                0x00000000c0000ff4                dlmalloc
                0x00000000c0001531                dlrealloc
                0x00000000c00016d4                dlmemalign
                0x00000000c00017f7                dlcalloc
                0x00000000c0001891                dlcfree
                0x00000000c0001896                dlindependent_calloc
                0x00000000c00018bb                dlindependent_comalloc
                0x00000000c00018d2                dlvalloc
                0x00000000c00018fd                dlpvalloc
                0x00000000c0001933                dlmalloc_trim
                0x00000000c0001940                dlmalloc_usable_size
                0x00000000c0001971                dlmallinfo
                0x00000000c0001a40                dlmalloc_stats
                0x00000000c0001a51                dlmallopt
 *fill*         0x00000000c0001adb        0x1 
 .text          0x00000000c0001adc      0x1f2 libk/ctype.32
                0x00000000c0001adc                isblank
                0x00000000c0001afc                iscntrl
                0x00000000c0001b1c                isdigit
                0x00000000c0001b38                islower
                0x00000000c0001b54                isspace
                0x00000000c0001b7c                isupper
                0x00000000c0001b98                isalpha
                0x00000000c0001bc8                isalnum
                0x00000000c0001bf8                ispunct
                0x00000000c0001c38                isgraph
                0x00000000c0001c68                isprint
                0x00000000c0001c90                isxdigit
 .text          0x00000000c0001cce        0x0 libk/string.32
 .text          0x00000000c0001cce       0x51 fs/fat/diskio.32
                0x00000000c0001cce                disk_status
                0x00000000c0001cd1                disk_initialize
                0x00000000c0001cd4                disk_read
                0x00000000c0001cea                disk_write
                0x00000000c0001d00                disk_ioctl
 .text          0x00000000c0001d1f     0x3d4b fs/fat/ff.32
                0x00000000c0003abb                f_mount
                0x00000000c0003b1d                f_open
                0x00000000c0003de8                f_read
                0x00000000c0003fe7                f_write
                0x00000000c000421b                f_sync
                0x00000000c00042d0                f_close
                0x00000000c00042ff                f_lseek
                0x00000000c00044a6                f_opendir
                0x00000000c0004571                f_closedir
                0x00000000c0004593                f_readdir
                0x00000000c0004625                f_stat
                0x00000000c00046a4                f_getfree
                0x00000000c00047a6                f_truncate
                0x00000000c000488a                f_unlink
                0x00000000c00049ac                f_mkdir
                0x00000000c0004b47                f_rename
                0x00000000c0004cfd                f_chmod
                0x00000000c0004da6                f_utime
                0x00000000c0004e54                f_getlabel
                0x00000000c0004fa5                f_setlabel
                0x00000000c0005135                f_expand
                0x00000000c0005295                f_mkfs
 *fill*         0x00000000c0005a6a        0x2 
 .text          0x00000000c0005a6c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a6c                ff_memalloc
                0x00000000c0005a84                ff_memfree
 *fill*         0x00000000c0005a9b        0x1 
 .text          0x00000000c0005a9c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a9c                ff_uni2oem
                0x00000000c0005b3c                ff_oem2uni
                0x00000000c0005bb4                ff_wtoupper
 .text          0x00000000c0005d44      0xc76 fs/iso9660/iso9660.32
                0x00000000c0005f63                isoReadDiscSector
                0x00000000c0005ffe                strnicmp
                0x00000000c00062b1                stricmp
                0x00000000c00062fd                iso_open
                0x00000000c0006387                iso_close
                0x00000000c00063a5                iso_read
                0x00000000c00064bb                iso_seek
                0x00000000c000653f                iso_tell
                0x00000000c0006570                iso_total
                0x00000000c000659b                fn_postprocess
                0x00000000c00065c1                iso_readdir
                0x00000000c00067b2                iso_reset
                0x00000000c00067bf                init_percd
                0x00000000c00068b9                iso_ioctl
                0x00000000c00068c1                fs_iso9660_init
                0x00000000c000694a                fs_iso9660_shutdown
 .text          0x00000000c00069ba      0x685 core/computer.32
                0x00000000c00069ba                Computer::close(int, int, void*)
                0x00000000c00069ff                Krnl::firstTask()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006be4                Computer::setBootMessage(char const*)
                0x00000000c0006be6                Computer::detectFeatures()
                0x00000000c0006df0                Computer::displayFeatures()
                0x00000000c0006df2                Computer::rdmsr(unsigned int)
                0x00000000c0006e1e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006e56                Computer::shutdown()
                0x00000000c0006e6e                Computer::restart()
                0x00000000c0006e86                Computer::sleep()
                0x00000000c0006e9a                Computer::nmiEnabled()
                0x00000000c0006ea6                Computer::readCMOS(unsigned char)
                0x00000000c0006ec0                Computer::enableNMI(bool)
                0x00000000c0006ed8                Computer::open(int, int, void*)
                0x00000000c0006fac                Computer::disableNMI()
                0x00000000c0006fbc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006fda                Computer::handleNMI()
 *fill*         0x00000000c000703f        0x1 
 .text          0x00000000c0007040      0x1cf core/gdt.32
                0x00000000c0007040                GDTEntry::setBase(unsigned int)
                0x00000000c000705c                GDTEntry::setLimit(unsigned int)
                0x00000000c000707a                GDT::GDT()
                0x00000000c000707a                GDT::GDT()
                0x00000000c0007090                GDT::addEntry(GDTEntry)
                0x00000000c00070b2                GDT::getNumberOfEntries()
                0x00000000c00070ba                GDT::flush()
                0x00000000c00070dc                GDT::setup()
 .text          0x00000000c000720f       0x1d core/idle.32
                0x00000000c000720f                idleFunction(void*)
 .text          0x00000000c000722c      0x464 core/idt.32
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000729e                IDTEntry::setOffset(unsigned int)
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00072be                IDT::addEntry(IDTEntry, int)
                0x00000000c00072d8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007310                IDT::flush()
                0x00000000c000732a                IDT::setup()
 .text          0x00000000c0007690      0x183 core/kheap.32
                0x00000000c0007690                sbrk
                0x00000000c0007725                mmap
                0x00000000c000773b                munmap
                0x00000000c0007751                liballoc_lock()
                0x00000000c000775e                liballoc_unlock()
                0x00000000c0007772                liballoc_alloc(int)
                0x00000000c000778a                liballoc_free(void*, int)
                0x00000000c00077a5                realloc
                0x00000000c00077b9                malloc
                0x00000000c00077c9                free
                0x00000000c00077d9                rfree
                0x00000000c00077e9                calloc
 .text          0x00000000c0007813       0xc3 core/main.32
                0x00000000c0007813                KeEntryPoint
 .text          0x00000000c00078d6      0x5dc core/physmgr.32
                0x00000000c00078d6                Phys::allocateDMA(unsigned long)
                0x00000000c00079ad                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c00079e0                Phys::setPageState(unsigned long, bool)
                0x00000000c0007a12                Phys::getPageState(unsigned long)
                0x00000000c0007a33                Phys::freePage(unsigned long)
                0x00000000c0007a95                Phys::allocatePage()
                0x00000000c0007b53                Phys::allocateContiguousPages(int)
                0x00000000c0007baf                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007be7                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007eb2      0x273 core/pipe.32
                0x00000000c0007eb2                Pipe::isAtty()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eda                Pipe::~Pipe()
                0x00000000c0007f02                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007fc2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00080be                Pipe::Pipe(int)
                0x00000000c00080be                Pipe::Pipe(int)
 *fill*         0x00000000c0008125        0x1 
 .text          0x00000000c0008126      0xaa0 core/terminal.32
                0x00000000c0008126                VgaText::isAtty()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000814e                VgaText::~VgaText()
                0x00000000c0008178                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008198                setTerminalScrollLock(bool)
                0x00000000c0008199                doTerminalCycle()
                0x00000000c000819a                addToTerminalCycle(VgaText*)
                0x00000000c000819b                scrollTerminalScrollLock(int)
                0x00000000c000819c                VgaText::updateTitle()
                0x00000000c000819e                VgaText::load()
                0x00000000c00081a0                VgaText::updateCursor()
                0x00000000c00081b6                VgaText::doANSI_SGR(int)
                0x00000000c000822a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000823a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000824a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000826a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008276                VgaText::setTitleColour(VgaColour)
                0x00000000c0008282                VgaText::setTitle(char*)
                0x00000000c0008284                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008296                VgaText::scrollScreen()
                0x00000000c000832e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008340                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00083d0                VgaText::getCursorX()
                0x00000000c00083d8                VgaText::getCursorY()
                0x00000000c00083e0                VgaText::setCursor(int, int)
                0x00000000c00083f7                setActiveTerminal(VgaText*)
                0x00000000c0008442                VgaText::clearScreen()
                0x00000000c0008490                VgaText::setCursorX(int)
                0x00000000c00084a8                VgaText::setCursorY(int)
                0x00000000c00084c0                VgaText::incrementCursor(bool)
                0x00000000c0008514                VgaText::decrementCursor(bool)
                0x00000000c0008536                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008604                VgaText::putchar(char)
                0x00000000c00086f0                VgaText::putx(unsigned int)
                0x00000000c0008736                VgaText::puts(char const*)
                0x00000000c000875c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00087a8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c0008a46                VgaText::receiveKey(unsigned char)
                0x00000000c0008ba0                VgaText::doUpdate()
                0x00000000c0008ba1                newTerminal(char*)
 *fill*         0x00000000c0008bc6        0x2 
 .text          0x00000000c0008bc8      0x1a1 core/tss.32
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bd8                TSS::setESP(unsigned long)
                0x00000000c0008bec                TSS::flush()
                0x00000000c0008c0c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008d69        0x1 
 .text          0x00000000c0008d6a      0x4c2 core/unixfile.32
                0x00000000c0008d6a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008dc0                ReservedFilename::isAtty()
                0x00000000c0008ddc                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008e3a                UnixFile::getFileDescriptor()
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c00090bc                UnixFile::~UnixFile()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c0009108                ReservedFilename::~ReservedFilename()
                0x00000000c000912f                getFromFileDescriptor(int)
 .text          0x00000000c000922c     0x120b core/virtmgr.32
                0x00000000c000922c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009261                Virt::getPageState(unsigned long)
                0x00000000c0009285                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009396                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00093b4                Virt::swapIDToSector(unsigned long)
                0x00000000c00093c6                Virt::allocateSwapfilePage()
                0x00000000c0009444                Virt::virtualMemorySetup()
                0x00000000c000948f                Virt::setupPageSwapping(int)
                0x00000000c0009500                VAS::VAS(VAS*)
                0x00000000c0009500                VAS::VAS(VAS*)
                0x00000000c000952e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000955a                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009579                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000969e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00096c2                VAS::virtualToPhysical(unsigned long)
                0x00000000c00096dc                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009732                VAS::VAS()
                0x00000000c0009732                VAS::VAS()
                0x00000000c00097a6                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00097de                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009808                VAS::~VAS()
                0x00000000c0009808                VAS::~VAS()
                0x00000000c000996c                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009a70                VAS::allocatePages(int, int)
                0x00000000c0009c48                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009c66                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009d2c                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009e1a                VAS::VAS(bool)
                0x00000000c0009e1a                VAS::VAS(bool)
                0x00000000c000a09a                VAS::evict(unsigned long)
                0x00000000c000a15c                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a24a                VAS::scanForEviction()
                0x00000000c000a32a                mapVASFirstTime
 .text          0x00000000c000a437       0x5f coreobjs/c++.32
                0x00000000c000a437                __cxa_atexit
                0x00000000c000a43a                __cxa_finalize
                0x00000000c000a43b                __stack_chk_fail
                0x00000000c000a471                __cxa_pure_virtual
                0x00000000c000a482                operator new[](unsigned long)
                0x00000000c000a487                operator delete(void*, unsigned long)
                0x00000000c000a48c                operator delete[](void*)
                0x00000000c000a491                operator delete[](void*, unsigned long)
 .text          0x00000000c000a496      0x21c dbg/kconsole.32
                0x00000000c000a496                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a501                Dbg::logc(char)
                0x00000000c000a521                Dbg::logs(char*)
                0x00000000c000a53e                Dbg::logWriteInt(unsigned int)
                0x00000000c000a55c                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a57d                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000a6b2      0xc5c fs/vfs.32
                0x00000000c000a6b2                File::read(unsigned long long, void*, int*)
                0x00000000c000a70a                File::write(unsigned long long, void*, int*)
                0x00000000c000a762                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a7ba                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a7e8                File::isAtty()
                0x00000000c000a7ec                Directory::isAtty()
                0x00000000c000a7f0                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a7f6                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a7fc                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a802                File::~File()
                0x00000000c000a802                File::~File()
                0x00000000c000a826                File::~File()
                0x00000000c000a850                Directory::~Directory()
                0x00000000c000a850                Directory::~Directory()
                0x00000000c000a874                Directory::~Directory()
                0x00000000c000a89e                Filesystem::Filesystem()
                0x00000000c000a89e                Filesystem::Filesystem()
                0x00000000c000a8c2                Filesystem::~Filesystem()
                0x00000000c000a8c2                Filesystem::~Filesystem()
                0x00000000c000a8d0                Filesystem::~Filesystem()
                0x00000000c000a8f4                Fs::getcwd(Process*, char*, int)
                0x00000000c000a91e                Fs::initVFS()
                0x00000000c000a948                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aaf2                File::File(char const*, Process*)
                0x00000000c000aaf2                File::File(char const*, Process*)
                0x00000000c000abb2                File::open(FileOpenMode)
                0x00000000c000ac10                File::close()
                0x00000000c000ac70                File::seek(unsigned long long)
                0x00000000c000acc6                File::tell(unsigned long long*)
                0x00000000c000ad16                File::rewind()
                0x00000000c000ad2a                File::unlink()
                0x00000000c000ad76                File::rename(char const*)
                0x00000000c000adc4                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ae20                File::exists()
                0x00000000c000ae5e                File::stat(unsigned long long*, bool*)
                0x00000000c000aebf                Fs::setcwd(Process*, char*)
                0x00000000c000b01c                Directory::Directory(char const*, Process*)
                0x00000000c000b01c                Directory::Directory(char const*, Process*)
                0x00000000c000b0dc                Directory::open()
                0x00000000c000b138                Directory::close()
                0x00000000c000b198                Directory::unlink()
                0x00000000c000b1e4                Directory::rename(char const*)
                0x00000000c000b232                Directory::exists()
                0x00000000c000b270                Directory::read(dirent*)
                0x00000000c000b2bc                Directory::create()
                0x00000000c000b308                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b30e        0x2 
 .text          0x00000000c000b310       0x86 hal/bus.32
                0x00000000c000b310                Bus::Bus(char const*)
                0x00000000c000b310                Bus::Bus(char const*)
                0x00000000c000b348                Bus::~Bus()
                0x00000000c000b348                Bus::~Bus()
                0x00000000c000b36c                Bus::~Bus()
 .text          0x00000000c000b396       0x96 hal/buzzer.32
                0x00000000c000b396                beepThread(void*)
                0x00000000c000b3d3                Krnl::beep(int, int, bool)
 .text          0x00000000c000b42c      0x46d hal/clock.32
                0x00000000c000b42c                User::loadClockSettings(int)
                0x00000000c000b47e                Clock::Clock(char const*)
                0x00000000c000b47e                Clock::Clock(char const*)
                0x00000000c000b4b4                Clock::~Clock()
                0x00000000c000b4b4                Clock::~Clock()
                0x00000000c000b4d8                Clock::~Clock()
                0x00000000c000b502                Clock::timeInSecondsLocal()
                0x00000000c000b54a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b5a3                datetimeToSeconds(datetime_t)
                0x00000000c000b6d0                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b730                secondsToDatetime(unsigned long long)
                0x00000000c000b874                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b899        0x1 
 .text          0x00000000c000b89a      0x464 hal/device.32
                0x00000000c000b89a                Device::hibernate()
                0x00000000c000b89c                Device::wake()
                0x00000000c000b89e                Device::detect()
                0x00000000c000b8a0                Device::disableLegacy()
                0x00000000c000b8a2                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b8a4                DriverlessDevice::close(int, int, void*)
                0x00000000c000b8a8                DriverlessDevice::detect()
                0x00000000c000b8aa                DriverlessDevice::open(int, int, void*)
                0x00000000c000b8be                Device::~Device()
                0x00000000c000b8be                Device::~Device()
                0x00000000c000b8cc                Device::~Device()
                0x00000000c000b8f4                Device::findAndLoadDriver()
                0x00000000c000b902                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b928                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000b968                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b992                Device::getParent()
                0x00000000c000b99e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b9bc                Device::addChild(Device*)
                0x00000000c000ba00                Device::removeAllChildren()
                0x00000000c000ba46                Device::hibernateAll()
                0x00000000c000ba76                Device::wakeAll()
                0x00000000c000baa6                Device::detectAll()
                0x00000000c000bad6                Device::disableLegacyAll()
                0x00000000c000bad8                Device::loadDriversForAll()
                0x00000000c000bada                Device::closeAll()
                0x00000000c000bb10                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bb46                Device::setName(char const*)
                0x00000000c000bb54                Device::Device(char const*)
                0x00000000c000bb54                Device::Device(char const*)
                0x00000000c000bc50                Device::getName()
                0x00000000c000bc5a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bc5a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bc90                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bcd4                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bcfe        0x2 
 .text          0x00000000c000bd00       0x86 hal/diskctrl.32
                0x00000000c000bd00                HardDiskController::HardDiskController(char const*)
                0x00000000c000bd00                HardDiskController::HardDiskController(char const*)
                0x00000000c000bd38                HardDiskController::~HardDiskController()
                0x00000000c000bd38                HardDiskController::~HardDiskController()
                0x00000000c000bd5c                HardDiskController::~HardDiskController()
 .text          0x00000000c000bd86       0xe2 hal/diskphys.32
                0x00000000c000bd86                PhysicalDisk::eject()
                0x00000000c000bd8a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bd8a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bdf2                PhysicalDisk::startCache()
                0x00000000c000be1a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000be1a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000be3e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000be68        0x0 hal/fpu.32
 .text          0x00000000c000be68      0x35d hal/intctrl.32
                0x00000000c000be68                int_handler
                0x00000000c000bef0                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000bf38                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c070                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c0a4                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c123                setupINTS()
                0x00000000c000c180                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c1c5        0x1 
 .text          0x00000000c000c1c6      0x7cc hal/keybrd.32
                0x00000000c000c1c6                startGUI(void*)
                0x00000000c000c232                startGUIVESA(void*)
                0x00000000c000c29e                sendKeyToTerminal(unsigned char)
                0x00000000c000c367                sendKeyboardToken(KeyboardToken)
                0x00000000c000c7a7                clearInternalKeybuffer(VgaText*)
                0x00000000c000c7dc                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c908                Keyboard::Keyboard(char const*)
                0x00000000c000c908                Keyboard::Keyboard(char const*)
                0x00000000c000c944                Keyboard::~Keyboard()
                0x00000000c000c944                Keyboard::~Keyboard()
                0x00000000c000c968                Keyboard::~Keyboard()
 .text          0x00000000c000c992      0x3ea hal/logidisk.32
                0x00000000c000c992                LogicalDisk::close(int, int, void*)
                0x00000000c000c996                LogicalDisk::~LogicalDisk()
                0x00000000c000c996                LogicalDisk::~LogicalDisk()
                0x00000000c000c9ba                LogicalDisk::~LogicalDisk()
                0x00000000c000c9e4                LogicalDisk::open(int, int, void*)
                0x00000000c000c9f8                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000ca30                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000ca76                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ca76                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cb2c                LogicalDisk::assignDriveLetter()
                0x00000000c000cbe2                LogicalDisk::mount()
                0x00000000c000cc2a                LogicalDisk::unmount()
                0x00000000c000cc3a                LogicalDisk::eject()
                0x00000000c000cc4e                LogicalDisk::unassignDriveLetter()
                0x00000000c000cca4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000cd10                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000cd7c       0x86 hal/mouse.32
                0x00000000c000cd7c                Mouse::Mouse(char const*)
                0x00000000c000cd7c                Mouse::Mouse(char const*)
                0x00000000c000cdb4                Mouse::~Mouse()
                0x00000000c000cdb4                Mouse::~Mouse()
                0x00000000c000cdd8                Mouse::~Mouse()
 .text          0x00000000c000ce02      0x339 hal/partition.32
                0x00000000c000ce02                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ceaa                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d13b        0x1 
 .text          0x00000000c000d13c       0x86 hal/serial.32
                0x00000000c000d13c                Serial::Serial(char const*)
                0x00000000c000d13c                Serial::Serial(char const*)
                0x00000000c000d174                Serial::~Serial()
                0x00000000c000d174                Serial::~Serial()
                0x00000000c000d198                Serial::~Serial()
 *fill*         0x00000000c000d1c2        0x2 
 .text          0x00000000c000d1c4      0x234 hal/timer.32
                0x00000000c000d1c4                Timer::Timer(char const*)
                0x00000000c000d1c4                Timer::Timer(char const*)
                0x00000000c000d1fc                Timer::~Timer()
                0x00000000c000d1fc                Timer::~Timer()
                0x00000000c000d220                Timer::~Timer()
                0x00000000c000d24a                Timer::read()
                0x00000000c000d255                setupTimer(int)
                0x00000000c000d290                timerHandler(unsigned int)
 .text          0x00000000c000d3f8      0x3ce hal/vcache.32
                0x00000000c000d3f8                VCache::VCache(PhysicalDisk*)
                0x00000000c000d3f8                VCache::VCache(PhysicalDisk*)
                0x00000000c000d560                VCache::invalidateReadBuffer()
                0x00000000c000d570                VCache::writeWriteBuffer()
                0x00000000c000d5bc                VCache::~VCache()
                0x00000000c000d5bc                VCache::~VCache()
                0x00000000c000d610                VCache::~VCache()
                0x00000000c000d638                VCache::write(unsigned long long, int, void*)
                0x00000000c000d74e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d7c6      0x4b3 hal/video.32
                0x00000000c000d7c6                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d812                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000d882                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000d900                Video::clearScreen(unsigned int)
                0x00000000c000d934                Video::putpixel(int, int, unsigned int)
                0x00000000c000d942                Video::Video(char const*)
                0x00000000c000d942                Video::Video(char const*)
                0x00000000c000d978                Video::~Video()
                0x00000000c000d978                Video::~Video()
                0x00000000c000d99c                Video::~Video()
                0x00000000c000d9c6                Video::isMonochrome()
                0x00000000c000d9d2                Video::getWidth()
                0x00000000c000d9de                Video::getHeight()
                0x00000000c000d9ea                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000daa6                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000dc0e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000dc79        0x3 
 .text          0x00000000c000dc7c     0x1307 hw/acpi.32
                0x00000000c000dc7c                ACPI::close(int, int, void*)
                0x00000000c000dd34                findRSDP()
                0x00000000c000ddc4                loadACPITables(unsigned char*)
                0x00000000c000e028                findRSDT(unsigned char*)
                0x00000000c000e178                findDataTable(unsigned char*, char*)
                0x00000000c000e1f0                scanMADT()
                0x00000000c000e6c4                ACPI::ACPI()
                0x00000000c000e6c4                ACPI::ACPI()
                0x00000000c000e718                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e800                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000e8c8                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000e8d0                ACPI::detectPCI()
                0x00000000c000ead8                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000eb2c                ACPI::sleep()
                0x00000000c000eb48                ACPI::open(int, int, void*)
 *fill*         0x00000000c000ef83        0x1 
 .text          0x00000000c000ef84      0xb95 hw/cpu.32
                0x00000000c000ef84                CPU::close(int, int, void*)
                0x00000000c000ef88                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000efa4                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000efbc                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f030                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f0b4                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f0e2                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f110                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f13e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f16c                CPU::CPU()
                0x00000000c000f16c                CPU::CPU()
                0x00000000c000f1fa                CPU::displayFeatures()
                0x00000000c000f1fc                CPU::detectFeatures()
                0x00000000c000f8c0                CPU::setupSMEP()
                0x00000000c000f8cc                CPU::setupUMIP()
                0x00000000c000f8d6                CPU::setupTSC()
                0x00000000c000f8e0                CPU::setupLargePages()
                0x00000000c000f8ea                CPU::setupPAT()
                0x00000000c000f926                CPU::setupMTRR()
                0x00000000c000f928                CPU::setupGlobalPages()
                0x00000000c000f932                CPU::allowUsermodeDataAccess()
                0x00000000c000f944                CPU::prohibitUsermodeDataAccess()
                0x00000000c000f956                CPU::setupSMAP()
                0x00000000c000f964                CPU::setupFeatures()
                0x00000000c000fa30                CPU::open(int, int, void*)
 .text          0x00000000c000fb19       0xd1 krnl/bootmsg.32
                0x00000000c000fb19                KeDisplaySplashScreen()
                0x00000000c000fb87                KeSetBootMessage(char const*)
 .text          0x00000000c000fbea      0x581 krnl/env.32
                0x00000000c000fbea                EnvVarContainer::getEnv(char const*)
                0x00000000c000fc28                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fcea                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fcec                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000fed2                EnvVarContainer::__loadSystem()
                0x00000000c000feec                EnvVarContainer::__loadUser()
                0x00000000c000feee                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000feee                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000ff10                EnvVarContainer::~EnvVarContainer()
                0x00000000c000ff10                EnvVarContainer::~EnvVarContainer()
                0x00000000c000ff40                Krnl::getEnv(Process*, char const*)
                0x00000000c000ffa5                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000ffbf                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000ffde                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000fff1                Krnl::deleteEnvSystem(char const*)
                0x00000000c000fff2                Krnl::deleteEnvUser(char const*)
                0x00000000c000fff3                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000fff4                Krnl::newProcessEnv(Process*)
                0x00000000c0010016                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010062                Krnl::loadSystemEnv()
                0x00000000c0010090                Krnl::loadUserEnv()
                0x00000000c00100b6                Krnl::flushEnv()
                0x00000000c00100b7                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00100d7                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001016b       0x94 krnl/inlines.32
                0x00000000c001016b                CPU::current()
                0x00000000c0010177                operator new(unsigned long)
                0x00000000c001017c                operator delete(void*)
                0x00000000c0010181                disableIRQs()
                0x00000000c0010183                enableIRQs()
                0x00000000c0010185                lockScheduler()
                0x00000000c001018d                unlockScheduler()
                0x00000000c001019c                lockStuff()
                0x00000000c00101aa                unlockStuff()
                0x00000000c00101e4                Virt::getAKernelVAS()
                0x00000000c00101ea                __not_memcpy
 .text          0x00000000c00101ff        0xc krnl/panic.32
                0x00000000c00101ff                KePanic(char const*)
 .text          0x00000000c001020b      0x142 krnl/powctrl.32
                0x00000000c001020b                Krnl::powerThread(void*)
                0x00000000c0010239                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c001024f                Krnl::userIOReceived()
                0x00000000c001025a                Krnl::handlePowerButton()
                0x00000000c001028f                Krnl::handleSleepButton()
                0x00000000c00102c4                Krnl::setupPowerManager()
 *fill*         0x00000000c001034d        0x3 
 .text          0x00000000c0010350      0x190 krnl/resolve.32
                0x00000000c0010350                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00104e0      0x2c3 krnl/signal.32
                0x00000000c00104e0                KiSigKill(int)
                0x00000000c001050c                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001050d                KiDefaultSignalHandlerPause(int)
                0x00000000c0010539                KiDefaultSignalHandlerResume(int)
                0x00000000c0010565                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001056a                KeInitSignals()
                0x00000000c00105b5                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00105eb                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010668                KeCheckSignal(SigHandlerBlock*)
                0x00000000c0010753                KiCheckSignalZ
                0x00000000c0010768                KeCompleteSignal(SigHandlerBlock*, int)
 .text          0x00000000c00107a3      0xcfe krnl/syscalls.32
                0x00000000c00107a3                SysSeekDir(regs*)
                0x00000000c00107a8                SysTellDir(regs*)
                0x00000000c00107ad                SysVerify(regs*)
                0x00000000c00107b7                SysGetArgc(regs*)
                0x00000000c00107c7                SysTTYName(regs*)
                0x00000000c00107cf                SysFormatDisk(regs*)
                0x00000000c001083c                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010886                SysGetDiskVolumeLabel(regs*)
                0x00000000c00108db                SysShutdown(regs*)
                0x00000000c0010939                SysRealpath(regs*)
                0x00000000c001097c                SysReadDir(regs*)
                0x00000000c00109fc                SysIsATTY(regs*)
                0x00000000c0010a58                SysSeek(regs*)
                0x00000000c0010ab1                SysTell(regs*)
                0x00000000c0010b20                SysSize(regs*)
                0x00000000c0010b95                SysSizeFromFilename(regs*)
                0x00000000c0010c48                SysClose(regs*)
                0x00000000c0010ca8                SysOpenDir(regs*)
                0x00000000c0010db9                SysCloseDir(regs*)
                0x00000000c0010e0d                SysMakeDir(regs*)
                0x00000000c0010e7f                SysWait(regs*)
                0x00000000c0010e9c                SysNotImpl(regs*)
                0x00000000c0010eb7                SysPanic(regs*)
                0x00000000c0010ed2                SysRmdir(regs*)
                0x00000000c0010f39                SysUnlink(regs*)
                0x00000000c0010fa0                SysGetArgv(regs*)
                0x00000000c0010fed                SysUSleep(regs*)
                0x00000000c0011016                SysSpawn(regs*)
                0x00000000c001107f                SysGetEnv(regs*)
                0x00000000c001112e                SysSetFatAttrib(regs*)
                0x00000000c00111a5                SysPipe(regs*)
                0x00000000c00111ea                SysGetUnixTime(regs*)
                0x00000000c00111fe                string_ends_with(char const*, char const*)
                0x00000000c0011248                SysOpen(regs*)
                0x00000000c001144f                KeSystemCall(regs*, void*)
 .text          0x00000000c00114a1      0x50e reg/registry.32
                0x00000000c00114a1                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00115f9                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001174e                Reg::getLine(char*, char*, char*)
                0x00000000c0011785                Reg::readInt(char*, char*, int*)
                0x00000000c0011870                Reg::readString(char*, char*, char*, int)
                0x00000000c00118f1                Reg::readBool(char*, char*, bool*)
                0x00000000c0011916                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0011942                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001196e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00119af       0x36 sys/eject.32
                0x00000000c00119af                SysEject(regs*)
 .text          0x00000000c00119e5       0x18 sys/exit.32
                0x00000000c00119e5                SysExit(regs*)
 .text          0x00000000c00119fd       0x1f sys/getcwd.32
                0x00000000c00119fd                SysGetCwd(regs*)
 .text          0x00000000c0011a1c        0xc sys/getpid.32
                0x00000000c0011a1c                SysGetPID(regs*)
 .text          0x00000000c0011a28       0x1a sys/getramdata.32
                0x00000000c0011a28                SysGetRAMData(regs*)
 .text          0x00000000c0011a42       0x82 sys/getvgaptr.32
                0x00000000c0011a42                SysGetVGAPtr(regs*)
 .text          0x00000000c0011ac4       0xa8 sys/loaddll.32
                0x00000000c0011ac4                SysLoadDLL(regs*)
 .text          0x00000000c0011b6c       0x68 sys/read.32
                0x00000000c0011b6c                SysRead(regs*)
 .text          0x00000000c0011bd4       0x29 sys/registersignal.32
                0x00000000c0011bd4                SysRegisterSignal(regs*)
 .text          0x00000000c0011bfd       0x67 sys/sbrk.32
                0x00000000c0011bfd                SysSbrk(regs*)
 .text          0x00000000c0011c64       0x1c sys/setcwd.32
                0x00000000c0011c64                SysSetCwd(regs*)
 .text          0x00000000c0011c80       0x95 sys/settime.32
                0x00000000c0011c80                SysSetTime(regs*)
 .text          0x00000000c0011d15       0x4a sys/timezone.32
                0x00000000c0011d15                SysTimezone(regs*)
 .text          0x00000000c0011d5f       0x68 sys/write.32
                0x00000000c0011d5f                SysWrite(regs*)
 .text          0x00000000c0011dc7       0x62 sys/wsbe.32
                0x00000000c0011dc7                SysWsbe(regs*)
 .text          0x00000000c0011e29       0x25 sys/yield.32
                0x00000000c0011e29                SysYield(regs*)
 .text          0x00000000c0011e4e     0x11e5 thr/elf.32
                0x00000000c0011e4e                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00120da                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00122f0                Thr::runtimeReferenceHelper()
                0x00000000c0012303                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0012352                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0012610                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012d46                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012d78                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012daf                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012dc9                Thr::loadDLL(char const*, bool)
                0x00000000c0012ffa                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0013033        0x1 
 .text          0x00000000c0013034     0x12fd thr/prcssthr.32
                0x00000000c0013034                userModeEntryPoint(void*)
                0x00000000c001305c                changeTSS
                0x00000000c001308c                switchToThread(ThreadControlBlock*)
                0x00000000c0013140                Process::addArgs(char**)
                0x00000000c00131a0                Process::Process(char const*, Process*, char**)
                0x00000000c00131a0                Process::Process(char const*, Process*, char**)
                0x00000000c00133ac                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00133ac                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013584                taskStartupFunction
                0x00000000c0013590                Semaphore::Semaphore(int)
                0x00000000c0013590                Semaphore::Semaphore(int)
                0x00000000c00135c0                Mutex::Mutex()
                0x00000000c00135c0                Mutex::Mutex()
                0x00000000c00135d4                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00136cc                Process::createUserThread()
                0x00000000c00136ec                setupMultitasking(void (*)())
                0x00000000c00137f4                schedule()
                0x00000000c0013884                Semaphore::tryAcquire()
                0x00000000c0013950                Semaphore::assertLocked(char const*)
                0x00000000c00139c8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00139f0                blockTask(TaskState)
                0x00000000c0013a20                waitTask(int, int*, int)
                0x00000000c0013a64                milliTenthSleepUntil(unsigned int)
                0x00000000c0013af4                milliTenthSleep(unsigned int)
                0x00000000c0013b04                sleep(unsigned int)
                0x00000000c0013b20                Semaphore::acquire()
                0x00000000c0013bdc                taskReturned
                0x00000000c0013c18                Thr::processFromPID(int)
                0x00000000c0013cb8                unblockTask(ThreadControlBlock*)
                0x00000000c0013d5c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0014028                cleanerTaskFunction(void*)
                0x00000000c0014118                terminateTask(int)
                0x00000000c00141e4                Thr::terminateFromIRQ(int)
                0x00000000c00141f4                Semaphore::release()
 .text          0x00000000c0014331      0xb93 vm86/vm8086.32
                0x00000000c0014331                Vm::inbv(unsigned short)
                0x00000000c0014344                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001437a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001438a                Vm::getSegment(unsigned int)
                0x00000000c0014392                Vm::getOffset(unsigned int)
                0x00000000c0014397                Vm::mainloop2()
                0x00000000c00143d1                Vm::mainVm8086Loop(void*)
                0x00000000c00143e1                Vm::mainloop3(unsigned long)
                0x00000000c0014407                Vm::initialise8086()
                0x00000000c001444a                Vm::finish8086()
                0x00000000c00144ab                Vm::getOutput8086(unsigned char*)
                0x00000000c00144d0                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014589                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00146f1                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001477b                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001478c                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001479e                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00147af                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00147c4                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00147da                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00147ef                Vm::faultHandler(regs*)
 .text          0x00000000c0014ec4      0xa53 arch/i386/hal.32
                0x00000000c0014ec4                noCopro(unsigned long)
                0x00000000c0014ec5                nmiHandler(regs*, void*)
                0x00000000c0014ede                doubleFault(regs*, void*)
                0x00000000c0014ef7                displayDebugInfo(regs*)
                0x00000000c0015218                HalSystemIdle()
                0x00000000c001528e                displayProgramFault(char const*)
                0x00000000c00152da                gpFault(regs*, void*)
                0x00000000c001533f                pgFault(regs*, void*)
                0x00000000c00153c5                otherISRHandler(regs*, void*)
                0x00000000c00153f9                opcodeFault(regs*, void*)
                0x00000000c0015479                i386SaveCoprocessor(void*)
                0x00000000c001548d                i386LoadCoprocessor(void*)
                0x00000000c00154a1                x87EmulHandler(regs*, void*)
                0x00000000c001553e                HalInitialiseCoprocessor()
                0x00000000c00155ec                HalPanic(char const*)
                0x00000000c00156e5                HalQueryPerformanceCounter()
                0x00000000c0015700                HalInitialise()
                0x00000000c00158a6                HalMakeBeep(int)
                0x00000000c00158e0                HalGetRand()
                0x00000000c00158e3                HalEndOfInterrupt(int)
                0x00000000c0015914                HalRestart()
                0x00000000c0015915                HalShutdown()
                0x00000000c0015916                HalSleep()
 *fill*         0x00000000c0015917        0x1 
 .text          0x00000000c0015918      0x2f4 arch/i386/pic.32
                0x00000000c0015918                picIoWait()
                0x00000000c0015920                picDisable()
                0x00000000c0015954                picGetIRQReg(int)
                0x00000000c00159d8                picOpen()
                0x00000000c0015b68                picEOI(int)
 .text          0x00000000c0015c0c      0x64d arch/i386/rtc.32
                0x00000000c0015c0c                RTC::open(int, int, void*)
                0x00000000c0015c10                RTC::close(int, int, void*)
                0x00000000c0015c14                RTC::timeInSecondsUTC()
                0x00000000c0015c26                RTC::timeInDatetimeUTC()
                0x00000000c0015c4c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015c8a                RTC::~RTC()
                0x00000000c0015c8a                RTC::~RTC()
                0x00000000c0015cae                RTC::~RTC()
                0x00000000c0015cd8                RTC::get_update_in_progress_flag()
                0x00000000c0015cf0                RTC::completeRTCRefresh()
                0x00000000c0015fa8                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001615b                rtcIRQHandler(regs*, void*)
                0x00000000c00161a0                RTC::RTC()
                0x00000000c00161a0                RTC::RTC()
 *fill*         0x00000000c0016259        0x3 
 .text          0x00000000c001625c      0x203 arch/i386/vga.32
                0x00000000c001625c                HalConsoleScroll(int, int)
                0x00000000c0016364                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00163d0                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c001645f        0x1 
 .text          0x00000000c0016460     0x13e7 fs/fat/vfslink.32
                0x00000000c0016460                FAT::getName()
                0x00000000c0016468                FAT::tell(void*, unsigned long long*)
                0x00000000c00164a4                FAT::stat(void*, unsigned long long*)
                0x00000000c00164e0                FAT::~FAT()
                0x00000000c00164e0                FAT::~FAT()
                0x00000000c0016504                FAT::~FAT()
                0x00000000c001652c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00165d0                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0016694                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016868                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016a80                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016c40                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016dac                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016e0c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016e6c                FAT::close(void*)
                0x00000000c0016ec0                FAT::closeDir(void*)
                0x00000000c0016f14                FAT::seek(void*, unsigned long long)
                0x00000000c0016f6c                fatWrapperReadDisk
                0x00000000c0016fb0                fatWrapperWriteDisk
                0x00000000c0016ff4                fatWrapperIoctl
                0x00000000c0017110                FAT::FAT()
                0x00000000c0017110                FAT::FAT()
                0x00000000c0017164                FAT::fixFilepath(char*)
                0x00000000c00171a0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00172d8                FAT::openDir(char const*, void**)
                0x00000000c0017388                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017480                FAT::unlink(char const*)
                0x00000000c0017500                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001768c                FAT::rename(char const*, char const*)
                0x00000000c0017758                FAT::mkdir(char const*)
                0x00000000c00177d8                FAT::exists(char const*)
 *fill*         0x00000000c0017847        0x1 
 .text          0x00000000c0017848       0xc6 fs/iso9660/helper.32
                0x00000000c0017848                isoReadDiscSectorHelper
                0x00000000c00178a4                iso_kprintf
                0x00000000c00178c4                iso_kprintfd
 .text          0x00000000c001790e      0x586 fs/iso9660/vfslink.32
                0x00000000c001790e                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017914                ISO9660::getName()
                0x00000000c001791a                ISO9660::closeDir(void*)
                0x00000000c0017924                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001792a                ISO9660::unlink(char const*)
                0x00000000c0017930                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017936                ISO9660::rename(char const*, char const*)
                0x00000000c001793c                ISO9660::mkdir(char const*)
                0x00000000c0017942                ISO9660::~ISO9660()
                0x00000000c0017942                ISO9660::~ISO9660()
                0x00000000c0017966                ISO9660::~ISO9660()
                0x00000000c001798e                ISO9660::exists(char const*)
                0x00000000c00179a2                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017a42                ISO9660::openDir(char const*, void**)
                0x00000000c0017ad2                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017b12                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017b4a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017b80                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017bba                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017c8c                ISO9660::close(void*)
                0x00000000c0017cb2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017d7f                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017dfa                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017e6c                ISO9660::ISO9660()
                0x00000000c0017e6c                ISO9660::ISO9660()
 .text          0x00000000c0017e94      0x26c hal/sound/sndcard.32
                0x00000000c0017e94                SoundCard::beginPlayback()
                0x00000000c0017ea2                SoundCard::stopPlayback()
                0x00000000c0017eb0                SoundCard::SoundCard(char const*)
                0x00000000c0017eb0                SoundCard::SoundCard(char const*)
                0x00000000c0017f4e                SoundCard::~SoundCard()
                0x00000000c0017f4e                SoundCard::~SoundCard()
                0x00000000c0017f72                SoundCard::~SoundCard()
                0x00000000c0017f9c                SoundCard::configureRates(int, int, int)
                0x00000000c0017fcc                SoundCard::getSamples16(int, short*)
                0x00000000c0018028                SoundCard::getSamples32(int, int*)
                0x00000000c00180ae                SoundCard::addChannel(SoundPort*)
                0x00000000c00180ec                SoundCard::removeChannel(int)
 .text          0x00000000c0018100      0x377 hal/sound/sndport.32
                0x00000000c0018100                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018100                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001818c                SoundPort::~SoundPort()
                0x00000000c001818c                SoundPort::~SoundPort()
                0x00000000c00181c0                SoundPort::unpause()
                0x00000000c00181cc                SoundPort::pause()
                0x00000000c00181d8                SoundPort::getBufferUsed()
                0x00000000c00181e0                SoundPort::getBufferSize()
                0x00000000c00181e8                SoundPort::buffer16(short*, int)
                0x00000000c0018274                SoundPort::buffer32(int*, int)
                0x00000000c00182fc                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00183c0                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0018477        0x0 hw/bus/isa.32
 *fill*         0x00000000c0018477        0x1 
 .text          0x00000000c0018478      0xb49 hw/bus/pci.32
                0x00000000c0018478                PCI::open(int, int, void*)
                0x00000000c0018496                PCI::close(int, int, void*)
                0x00000000c001849a                PCI::PCI()
                0x00000000c001849a                PCI::PCI()
                0x00000000c0018534                PCI::readBAR8(unsigned int, int)
                0x00000000c0018550                PCI::readBAR16(unsigned int, int)
                0x00000000c001856e                PCI::readBAR32(unsigned int, int)
                0x00000000c001858a                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c00185aa                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c00185cc                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c00185ec                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001865a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018702                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018726                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001874e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018798                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c00187c0                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c00187e4                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018808                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018830                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018894                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001897c                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018bf6                PCI::checkBus(unsigned char)
                0x00000000c0018c1c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018d8e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018f02                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018f6e                PCI::detect()
 *fill*         0x00000000c0018fc1        0x1 
 .text          0x00000000c0018fc2      0xb5a hw/diskctrl/ide.32
                0x00000000c0018fc2                IDE::close(int, int, void*)
                0x00000000c0018fc6                IDE::IDE()
                0x00000000c0018fc6                IDE::IDE()
                0x00000000c0018ffa                IDE::prepareInterrupt(unsigned char)
                0x00000000c001900c                selectDrive(unsigned char, unsigned char)
                0x00000000c001900e                IDE::getBase(unsigned char)
                0x00000000c0019020                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c00190e0                IDE::read(unsigned char, unsigned char)
                0x00000000c001918e                IDE::waitInterrupt(unsigned char)
                0x00000000c00191f6                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0019212                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001922e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019274                IDE::open(int, int, void*)
                0x00000000c0019682                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001974e                IDE::detect()
                0x00000000c0019a0e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019abe                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019b1c      0x32a hw/diskctrl/satabus.32
                0x00000000c0019b1c                SATABus::close(int, int, void*)
                0x00000000c0019b20                SATABus::detect()
                0x00000000c0019b22                SATABus::SATABus()
                0x00000000c0019b22                SATABus::SATABus()
                0x00000000c0019ba8                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019bda                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c22                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c42                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c6c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019d7c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019e26                SATABus::open(int, int, void*)
 .text          0x00000000c0019e46      0x5f4 hw/diskphys/ata.32
                0x00000000c0019e46                ATA::close(int, int, void*)
                0x00000000c0019e6a                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019e6c                ATA::ATA()
                0x00000000c0019e6c                ATA::ATA()
                0x00000000c0019e9a                ATA::flush(bool)
                0x00000000c0019ee4                ATA::readyForCommand()
                0x00000000c0019f30                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a2ac                ATA::read(unsigned long long, int, void*)
                0x00000000c001a2f8                ATA::write(unsigned long long, int, void*)
                0x00000000c001a344                ATA::detectCHS()
                0x00000000c001a36e                ATA::open(int, int, void*)
 .text          0x00000000c001a43a      0x60e hw/diskphys/atapi.32
                0x00000000c001a43a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a440                ATAPI::close(int, int, void*)
                0x00000000c001a464                ATAPI::ATAPI()
                0x00000000c001a464                ATAPI::ATAPI()
                0x00000000c001a492                ATAPI::readyForCommand()
                0x00000000c001a4e4                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a7a4                ATAPI::diskRemoved()
                0x00000000c001a7de                ATAPI::eject()
                0x00000000c001a826                ATAPI::diskInserted()
                0x00000000c001a832                ATAPI::detectMedia()
                0x00000000c001a8ee                ATAPI::open(int, int, void*)
                0x00000000c001a9ce                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001aa48      0x402 hw/diskphys/sata.32
                0x00000000c001aa48                SATA::close(int, int, void*)
                0x00000000c001aa6c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001aa6e                SATA::open(int, int, void*)
                0x00000000c001ab18                SATA::SATA()
                0x00000000c001ab18                SATA::SATA()
                0x00000000c001ab46                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ad92                SATA::read(unsigned long long, int, void*)
                0x00000000c001adde                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001ae4a      0x5af hw/diskphys/satapi.32
                0x00000000c001ae4a                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ae50                SATAPI::close(int, int, void*)
                0x00000000c001ae74                SATAPI::SATAPI()
                0x00000000c001ae74                SATAPI::SATAPI()
                0x00000000c001aea2                SATAPI::diskRemoved()
                0x00000000c001aea4                SATAPI::diskInserted()
                0x00000000c001aec0                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b1a0                SATAPI::eject()
                0x00000000c001b1dc                SATAPI::detectMedia()
                0x00000000c001b202                SATAPI::open(int, int, void*)
                0x00000000c001b302                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b3f9        0x1 
 .text          0x00000000c001b3fa      0x455 hw/intctrl/apic.32
                0x00000000c001b3fa                IOAPIC::close(int, int, void*)
                0x00000000c001b400                apicGetBase()
                0x00000000c001b442                IOAPIC::IOAPIC()
                0x00000000c001b442                IOAPIC::IOAPIC()
                0x00000000c001b46a                apicOpen()
                0x00000000c001b5d0                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b602                IOAPIC::read(int)
                0x00000000c001b62a                IOAPIC::open(int, int, void*)
                0x00000000c001b71e                IOAPIC::write(int, int)
                0x00000000c001b74a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b84f        0x1 
 .text          0x00000000c001b850       0xf0 hw/timer/apictimer.32
                0x00000000c001b850                APICTimer::close(int, int, void*)
                0x00000000c001b858                apicTimerHandler(regs*, void*)
                0x00000000c001b880                APICTimer::open(int, int, void*)
                0x00000000c001b8f0                APICTimer::write(int)
                0x00000000c001b918                APICTimer::APICTimer()
                0x00000000c001b918                APICTimer::APICTimer()
 .text          0x00000000c001b940      0x1aa hw/timer/pit.32
                0x00000000c001b940                PIT::write(int)
                0x00000000c001b9c4                pitHandler(regs*, void*)
                0x00000000c001b9e8                PIT::open(int, int, void*)
                0x00000000c001ba38                PIT::close(int, int, void*)
                0x00000000c001ba68                PIT::PIT()
                0x00000000c001ba68                PIT::PIT()
 *fill*         0x00000000c001baea        0x6 
 .text          0x00000000c001baf0       0x83 arch/i386/avx.32
                0x00000000c001baf0                avxDetect
                0x00000000c001bb1a                avxSave
                0x00000000c001bb2b                avxLoad
                0x00000000c001bb3c                avxInit
                0x00000000c001bb5e                avxClose
                0x00000000c001bb5f                wouldSheSayYes
 *fill*         0x00000000c001bb73        0xd 
 .text          0x00000000c001bb80      0x231 arch/i386/interrupt.32
                0x00000000c001bb80                isr0
                0x00000000c001bb90                isr1
                0x00000000c001bb9a                isr2
                0x00000000c001bba4                isr3
                0x00000000c001bbae                isr4
                0x00000000c001bbb8                isr5
                0x00000000c001bbc2                isr6
                0x00000000c001bbcc                isr7
                0x00000000c001bbd6                isr8
                0x00000000c001bbde                isr9
                0x00000000c001bbe8                isr10
                0x00000000c001bbf0                isr11
                0x00000000c001bbf8                isr12
                0x00000000c001bc00                isr13
                0x00000000c001bc08                isr14
                0x00000000c001bc10                isr15
                0x00000000c001bc1a                isr16
                0x00000000c001bc24                isr17
                0x00000000c001bc2e                isr18
                0x00000000c001bc38                irq3
                0x00000000c001bc42                irq4
                0x00000000c001bc4c                irq5
                0x00000000c001bc56                irq6
                0x00000000c001bc60                irq7
                0x00000000c001bc6a                irq8
                0x00000000c001bc74                irq9
                0x00000000c001bc7e                irq10
                0x00000000c001bc88                irq11
                0x00000000c001bc92                irq12
                0x00000000c001bc9c                irq13
                0x00000000c001bca6                irq14
                0x00000000c001bcb0                irq15
                0x00000000c001bcba                irq1
                0x00000000c001bcc1                irq2
                0x00000000c001bcc8                isr96
                0x00000000c001bccf                irq0
                0x00000000c001bcd4                int_common_stub
                0x00000000c001bd06                syscall_common_stub
                0x00000000c001bd61                irq16
                0x00000000c001bd6b                irq17
                0x00000000c001bd75                irq18
                0x00000000c001bd7f                irq19
                0x00000000c001bd89                irq20
                0x00000000c001bd93                irq21
                0x00000000c001bd9d                irq22
                0x00000000c001bda7                irq23
 *fill*         0x00000000c001bdb1        0xf 
 .text          0x00000000c001bdc0       0x10 arch/i386/rdrand.32
                0x00000000c001bdc0                i386GetRDRAND
 .text          0x00000000c001bdd0       0x39 arch/i386/sse.32
                0x00000000c001bdd0                absolutelyNoChanceInHell
                0x00000000c001bdd0                sseDetect
                0x00000000c001bde8                sseSave
                0x00000000c001bdf0                sseLoad
                0x00000000c001bdf8                sseInit
                0x00000000c001be08                sseClose
 *fill*         0x00000000c001be09        0x7 
 .text          0x00000000c001be10       0x49 arch/i386/x87.32
                0x00000000c001be16                x87Detect
                0x00000000c001be31                x87Save
                0x00000000c001be38                x87Load
                0x00000000c001be3f                x87Init
                0x00000000c001be58                x87Close
 *fill*         0x00000000c001be59        0x3 
 .text          0x00000000c001be5c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001be81        0x0 crtn.32
 *fill*         0x00000000c001be81        0x3 
 .text          0x00000000c001be84      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001be84                __divdi3
 *fill*         0x00000000c001bfcf        0x1 
 .text          0x00000000c001bfd0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001bfd0                __moddi3
 *fill*         0x00000000c001c14e        0x2 
 .text          0x00000000c001c150       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c150                __udivdi3
 *fill*         0x00000000c001c24f        0x1 
 .text          0x00000000c001c250      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c250                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c370        0x0
 .iplt          0x00000000c001c370        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c36a        0xf
 .init          0x00000000c001c36a        0x3 crti.32
                0x00000000c001c36a                _init
 .init          0x00000000c001c36d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c372        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c377        0x2 crtn.32

.fini           0x00000000c001c379        0xa
 .fini          0x00000000c001c379        0x3 crti.32
                0x00000000c001c379                _fini
 .fini          0x00000000c001c37c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c381        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c384       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c384       0x23 core/computer.32
                0x00000000c001c384                Computer::~Computer()
                0x00000000c001c384                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c3a8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c3a8       0x2a core/computer.32
                0x00000000c001c3a8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c3d2       0x21
 .text._Z10idleCommonv
                0x00000000c001c3d2       0x21 core/idle.32
                0x00000000c001c3d2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c3f4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c3f4        0x2 core/unixfile.32
                0x00000000c001c3f4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c3f4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c3f6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c3f6       0x42 core/unixfile.32
                0x00000000c001c3f6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c3f6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c438       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c438       0xd3 core/unixfile.32
                0x00000000c001c438                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c50c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c50c        0x7 core/unixfile.32
                0x00000000c001c50c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c514       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c514       0xa1 core/unixfile.32
                0x00000000c001c514                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c5b6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c5b6        0x8 core/unixfile.32
                0x00000000c001c5b6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c5be       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c5be       0x1a hal/device.32
                0x00000000c001c5be                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c5be                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c5d8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c5d8       0x2a hal/device.32
                0x00000000c001c5d8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c602       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c602       0xdc hal/device.32
                0x00000000c001c602                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c6de       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c6de       0x42 hal/device.32
                0x00000000c001c6de                LinkedList<Device>::LinkedList()
                0x00000000c001c6de                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c720       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c720       0x1c hal/timer.32
                0x00000000c001c720                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c73c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c73c        0x7 hal/timer.32
                0x00000000c001c73c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c744       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c744       0xb8 hal/timer.32
                0x00000000c001c744                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c7fc       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c7fc       0xda hal/timer.32
                0x00000000c001c7fc                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c8d8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c8d8       0x23 hw/acpi.32
                0x00000000c001c8d8                ACPI::~ACPI()
                0x00000000c001c8d8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c8fc       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c8fc       0x2a hw/acpi.32
                0x00000000c001c8fc                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c928        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c928        0x2 hw/acpi.32
                0x00000000c001c928                LinkedList<Device>::~LinkedList()
                0x00000000c001c928                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c92c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c92c       0x1c hw/acpi.32
                0x00000000c001c92c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c948        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c948        0x7 hw/acpi.32
                0x00000000c001c948                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c950       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c950       0xb8 hw/acpi.32
                0x00000000c001c950                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ca08       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ca08       0x23 hw/cpu.32
                0x00000000c001ca08                CPU::~CPU()
                0x00000000c001ca08                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ca2c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ca2c       0x2a hw/cpu.32
                0x00000000c001ca2c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ca58        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ca58        0x2 thr/prcssthr.32
                0x00000000c001ca58                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ca58                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ca5c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ca5c       0x49 thr/prcssthr.32
                0x00000000c001ca5c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ca5c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001caa8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001caa8       0x42 thr/prcssthr.32
                0x00000000c001caa8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001caa8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001caec        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001caec        0x8 thr/prcssthr.32
                0x00000000c001caec                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001caf4       0x23
 .text._ZN3PCID2Ev
                0x00000000c001caf4       0x23 hw/bus/pci.32
                0x00000000c001caf4                PCI::~PCI()
                0x00000000c001caf4                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cb18       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cb18       0x2a hw/bus/pci.32
                0x00000000c001cb18                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cb42       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cb42       0x23 hw/diskctrl/ide.32
                0x00000000c001cb42                IDE::~IDE()
                0x00000000c001cb42                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cb66       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cb66       0x2a hw/diskctrl/ide.32
                0x00000000c001cb66                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cb90       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cb90       0x23 hw/diskctrl/satabus.32
                0x00000000c001cb90                SATABus::~SATABus()
                0x00000000c001cb90                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cbb4       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cbb4       0x2a hw/diskctrl/satabus.32
                0x00000000c001cbb4                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cbde       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cbde       0x23 hw/diskphys/ata.32
                0x00000000c001cbde                ATA::~ATA()
                0x00000000c001cbde                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cc02       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cc02       0x2a hw/diskphys/ata.32
                0x00000000c001cc02                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cc2c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cc2c       0x23 hw/diskphys/atapi.32
                0x00000000c001cc2c                ATAPI::~ATAPI()
                0x00000000c001cc2c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cc50       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cc50       0x2a hw/diskphys/atapi.32
                0x00000000c001cc50                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cc7a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cc7a       0x23 hw/diskphys/sata.32
                0x00000000c001cc7a                SATA::~SATA()
                0x00000000c001cc7a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cc9e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cc9e       0x2a hw/diskphys/sata.32
                0x00000000c001cc9e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001ccc8       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001ccc8       0x23 hw/diskphys/satapi.32
                0x00000000c001ccc8                SATAPI::~SATAPI()
                0x00000000c001ccc8                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001ccec       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001ccec       0x2a hw/diskphys/satapi.32
                0x00000000c001ccec                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cd16       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cd16       0x23 hw/intctrl/apic.32
                0x00000000c001cd16                IOAPIC::~IOAPIC()
                0x00000000c001cd16                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cd3a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cd3a       0x2a hw/intctrl/apic.32
                0x00000000c001cd3a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001cd64       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001cd64       0x23 hw/timer/apictimer.32
                0x00000000c001cd64                APICTimer::~APICTimer()
                0x00000000c001cd64                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001cd88       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001cd88       0x2a hw/timer/apictimer.32
                0x00000000c001cd88                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001cdb4       0x23
 .text._ZN3PITD2Ev
                0x00000000c001cdb4       0x23 hw/timer/pit.32
                0x00000000c001cdb4                PIT::~PIT()
                0x00000000c001cdb4                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001cdd8       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001cdd8       0x2a hw/timer/pit.32
                0x00000000c001cdd8                PIT::~PIT()

.rodata         0x00000000c001ce02     0x29c2
                0x00000000c001ce02                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001ce02        0x2 
 .ctors         0x00000000c001ce04        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001ce08        0x4 core/unixfile.32
 .ctors         0x00000000c001ce0c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001ce10        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ce14                end_ctors = .
                0x00000000c001ce14                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ce14        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ce18        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ce18                __DTOR_END__
                0x00000000c001ce1c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001ce1c        0x4 
 .rodata        0x00000000c001ce20      0x101 acpica/utclib.32
                0x00000000c001ce20                AcpiGbl_Ctypes
 *fill*         0x00000000c001cf21        0x3 
 .rodata        0x00000000c001cf24       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001cf3c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001cf86       0x1a 
 .rodata        0x00000000c001cfa0       0xed fs/fat/ff.32
 *fill*         0x00000000c001d08d       0x13 
 .rodata        0x00000000c001d0a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d4a0       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d4b1      0x115 core/computer.32
 *fill*         0x00000000c001d5c6        0x2 
 .rodata.str1.4
                0x00000000c001d5c8       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d630       0x2c core/computer.32
                0x00000000c001d630                vtable for Computer
 .rodata.str1.4
                0x00000000c001d65c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d68c        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d698       0x17 core/main.32
 *fill*         0x00000000c001d6af        0x1 
 .rodata.str1.4
                0x00000000c001d6b0       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d755       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d7ad       0x39 core/pipe.32
 *fill*         0x00000000c001d7e6        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d7e8       0x1c core/pipe.32
                0x00000000c001d7e8                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d804       0x75 core/terminal.32
 *fill*         0x00000000c001d879        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d87c       0x1c core/terminal.32
                0x00000000c001d87c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d898       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d8ba       0x15 core/unixfile.32
 *fill*         0x00000000c001d8cf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d8d0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d91b        0x8 core/unixfile.32
 *fill*         0x00000000c001d923        0x1 
 .rodata.str1.4
                0x00000000c001d924       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d944       0x1c core/unixfile.32
                0x00000000c001d944                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001d960       0x1c core/unixfile.32
                0x00000000c001d960                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001d97c      0x191 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001db0d      0x121 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dc2e       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dc61       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dc61        0x3 
 .rodata        0x00000000c001dc64      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001ddb4       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001ddb4       0x68 fs/vfs.32
                0x00000000c001ddb4                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001de1c       0x1c fs/vfs.32
                0x00000000c001de1c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001de38       0x1c fs/vfs.32
                0x00000000c001de38                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001de54       0x2c hal/bus.32
                0x00000000c001de54                vtable for Bus
 .rodata.str1.1
                0x00000000c001de80       0x1e hal/clock.32
 *fill*         0x00000000c001de9e        0x2 
 .rodata._ZTV5Clock
                0x00000000c001dea0       0x3c hal/clock.32
                0x00000000c001dea0                vtable for Clock
 *fill*         0x00000000c001dedc        0x4 
 .rodata        0x00000000c001dee0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001df10       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001df68       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001df68       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001df68       0x2c hal/device.32
                0x00000000c001df68                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001df94       0x2c hal/device.32
                0x00000000c001df94                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001dfc0       0x2c hal/diskctrl.32
                0x00000000c001dfc0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001dfec       0x38 hal/diskphys.32
                0x00000000c001dfec                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e024       0x3e hal/intctrl.32
 *fill*         0x00000000c001e062        0x2 
 .rodata.str1.4
                0x00000000c001e064       0x5d hal/intctrl.32
 .rodata        0x00000000c001e0c1       0x63 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e124       0x34 hal/keybrd.32
                0x00000000c001e124                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e158       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e19c       0x2c hal/logidisk.32
                0x00000000c001e19c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e1c8       0x2c hal/mouse.32
                0x00000000c001e1c8                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e1f4        0xb hal/partition.32
 *fill*         0x00000000c001e1ff        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e200       0x44 hal/serial.32
                0x00000000c001e200                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e244       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e244        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e244       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e244       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e244       0x30 hal/timer.32
                0x00000000c001e244                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e274       0x10 hal/vcache.32
                0x00000000c001e274                vtable for VCache
 .rodata.str1.1
                0x00000000c001e284       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e2ec       0x48 hal/video.32
                0x00000000c001e2ec                vtable for Video
 .rodata.str1.4
                0x00000000c001e334       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e3cf      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e50b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e50b        0x8 hw/acpi.32
 *fill*         0x00000000c001e50b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e50c       0x2c hw/acpi.32
                0x00000000c001e50c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e538      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e6a5        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e6a8       0x2c hw/cpu.32
                0x00000000c001e6a8                vtable for CPU
 .rodata.str1.1
                0x00000000c001e6d4       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e710       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c001e7a1       0xd3 krnl/signal.32
 .rodata.str1.4
                0x00000000c001e874       0x26 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c001e89a       0x97 krnl/syscalls.32
                                         0xa7 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e931       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e976        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001e980        0xc sys/sbrk.32
 .rodata.str1.1
                0x00000000c001e98c       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001e9e0       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001ea0c      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001ebd8       0x57 thr/prcssthr.32
 *fill*         0x00000000c001ec2f        0x1 
 .rodata.str1.4
                0x00000000c001ec30      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ed3c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ed3c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ed3c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ed3c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001ed3c       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001eddc       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ee0c      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001ef8e        0x2 
 .rodata.str1.4
                0x00000000c001ef90       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001f003       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001f018       0x3c arch/i386/rtc.32
                0x00000000c001f018                vtable for RTC
 .rodata.str1.1
                0x00000000c001f054       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f095        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f098       0x68 fs/fat/vfslink.32
                0x00000000c001f098                vtable for FAT
 .rodata.str1.1
                0x00000000c001f100        0x3 fs/iso9660/helper.32
                                          0x5 (size before relaxing)
 .rodata.str1.1
                0x00000000c001f103       0x49 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001f14c       0x68 fs/iso9660/vfslink.32
                0x00000000c001f14c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f1b4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f1f8       0x34 hal/sound/sndcard.32
                0x00000000c001f1f8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f22c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f26b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f2a3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f344       0x2c hw/bus/pci.32
                0x00000000c001f344                vtable for PCI
 .rodata.str1.1
                0x00000000c001f370       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f3f7        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f3f8       0x2c hw/diskctrl/ide.32
                0x00000000c001f3f8                vtable for IDE
 .rodata.str1.4
                0x00000000c001f424       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f448       0x2c hw/diskctrl/satabus.32
                0x00000000c001f448                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f474       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f486        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f488       0x38 hw/diskphys/ata.32
                0x00000000c001f488                vtable for ATA
 .rodata.str1.1
                0x00000000c001f4c0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f4cd        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f4d0       0x38 hw/diskphys/atapi.32
                0x00000000c001f4d0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f508       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f584       0x38 hw/diskphys/sata.32
                0x00000000c001f584                vtable for SATA
 .rodata.str1.1
                0x00000000c001f5bc      0x100 hw/diskphys/satapi.32
                                        0x10d (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f6bc       0x38 hw/diskphys/satapi.32
                0x00000000c001f6bc                vtable for SATAPI
 .rodata        0x00000000c001f6f4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f6fc       0x2c hw/intctrl/apic.32
                0x00000000c001f6fc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f728       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f743        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f744       0x30 hw/timer/apictimer.32
                0x00000000c001f744                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f774       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f791        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f794       0x30 hw/timer/pit.32
                0x00000000c001f794                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f7c4      0x3ad
 *(.data)
 .data          0x00000000c001f7c4        0x0 crti.32
 .data          0x00000000c001f7c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f7c4                __dso_handle
 .data          0x00000000c001f7c8        0x0 acpica/utclib.32
 .data          0x00000000c001f7c8        0x0 core/malloc.32
 .data          0x00000000c001f7c8        0x0 libk/ctype.32
 .data          0x00000000c001f7c8        0x0 libk/string.32
 .data          0x00000000c001f7c8        0x0 fs/fat/diskio.32
 .data          0x00000000c001f7c8        0x0 fs/fat/ff.32
 .data          0x00000000c001f7c8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f7c8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f7c8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f7c8        0x0 core/computer.32
 .data          0x00000000c001f7c8        0x0 core/gdt.32
 .data          0x00000000c001f7c8        0x0 core/idle.32
 .data          0x00000000c001f7c8        0x0 core/idt.32
 .data          0x00000000c001f7c8        0x4 core/kheap.32
 .data          0x00000000c001f7cc        0x0 core/main.32
 .data          0x00000000c001f7cc        0x4 core/physmgr.32
                0x00000000c001f7cc                Phys::bitmap
 .data          0x00000000c001f7d0        0x0 core/pipe.32
 *fill*         0x00000000c001f7d0       0x10 
 .data          0x00000000c001f7e0       0x60 core/terminal.32
                0x00000000c001f7e0                VgaText::hiddenOut
                0x00000000c001f800                ansiToVGAMappings
 .data          0x00000000c001f840        0x0 core/tss.32
 .data          0x00000000c001f840        0x4 core/unixfile.32
                0x00000000c001f840                UnixFile::nextFd
 .data          0x00000000c001f844       0x15 core/virtmgr.32
                0x00000000c001f844                Virt::pageAllocPtr
                0x00000000c001f848                Virt::bitmap
                0x00000000c001f84c                Virt::swapfileSectorsPerPage
                0x00000000c001f850                Virt::swapfileLength
                0x00000000c001f854                Virt::swapfileSector
                0x00000000c001f858                Virt::swapfileDrive
 *fill*         0x00000000c001f859        0x3 
 .data          0x00000000c001f85c        0x4 coreobjs/c++.32
                0x00000000c001f85c                __stack_chk_guard
 .data          0x00000000c001f860        0x0 dbg/kconsole.32
 .data          0x00000000c001f860        0x0 fs/vfs.32
 .data          0x00000000c001f860        0x0 hal/bus.32
 .data          0x00000000c001f860        0x0 hal/buzzer.32
 .data          0x00000000c001f860        0x0 hal/clock.32
 .data          0x00000000c001f860        0x0 hal/device.32
 .data          0x00000000c001f860        0x0 hal/diskctrl.32
 .data          0x00000000c001f860        0x0 hal/diskphys.32
 .data          0x00000000c001f860        0x0 hal/fpu.32
 .data          0x00000000c001f860        0x0 hal/intctrl.32
 .data          0x00000000c001f860        0x0 hal/keybrd.32
 .data          0x00000000c001f860        0x0 hal/logidisk.32
 .data          0x00000000c001f860        0x0 hal/mouse.32
 .data          0x00000000c001f860        0x0 hal/partition.32
 .data          0x00000000c001f860        0x0 hal/serial.32
 .data          0x00000000c001f860        0x0 hal/timer.32
 .data          0x00000000c001f860        0x0 hal/vcache.32
 .data          0x00000000c001f860        0x0 hal/video.32
 .data          0x00000000c001f860       0x10 hw/acpi.32
                0x00000000c001f860                legacyIRQRemaps
 .data          0x00000000c001f870        0x4 hw/cpu.32
                0x00000000c001f870                lastCode
 *fill*         0x00000000c001f874        0xc 
 .data          0x00000000c001f880      0x142 krnl/bootmsg.32
                0x00000000c001f880                KiSplashScreen
 *fill*         0x00000000c001f9c2       0x1e 
 .data          0x00000000c001f9e0       0x4d krnl/env.32
                0x00000000c001f9e0                defaultSysEnv
 .data          0x00000000c001fa2d        0x0 krnl/inlines.32
 .data          0x00000000c001fa2d        0x0 krnl/panic.32
 .data          0x00000000c001fa2d        0x0 krnl/powctrl.32
 .data          0x00000000c001fa2d        0x0 krnl/resolve.32
 *fill*         0x00000000c001fa2d       0x13 
 .data          0x00000000c001fa40       0x4c krnl/signal.32
                0x00000000c001fa40                KiDefaultSignalHandlers
 *fill*         0x00000000c001fa8c       0x14 
 .data          0x00000000c001faa0       0xcc krnl/syscalls.32
                0x00000000c001faa0                systemCallHandlers
 .data          0x00000000c001fb6c        0x0 reg/registry.32
 .data          0x00000000c001fb6c        0x0 sys/eject.32
 .data          0x00000000c001fb6c        0x0 sys/exit.32
 .data          0x00000000c001fb6c        0x0 sys/getcwd.32
 .data          0x00000000c001fb6c        0x0 sys/getpid.32
 .data          0x00000000c001fb6c        0x0 sys/getramdata.32
 .data          0x00000000c001fb6c        0x0 sys/getvgaptr.32
 .data          0x00000000c001fb6c        0x0 sys/loaddll.32
 .data          0x00000000c001fb6c        0x0 sys/read.32
 .data          0x00000000c001fb6c        0x0 sys/registersignal.32
 .data          0x00000000c001fb6c        0x0 sys/sbrk.32
 .data          0x00000000c001fb6c        0x0 sys/setcwd.32
 .data          0x00000000c001fb6c        0x0 sys/settime.32
 .data          0x00000000c001fb6c        0x0 sys/timezone.32
 .data          0x00000000c001fb6c        0x0 sys/write.32
 .data          0x00000000c001fb6c        0x0 sys/wsbe.32
 .data          0x00000000c001fb6c        0x0 sys/yield.32
 .data          0x00000000c001fb6c        0x0 thr/elf.32
 .data          0x00000000c001fb6c        0x4 thr/prcssthr.32
                0x00000000c001fb6c                Thr::nextPID
 .data          0x00000000c001fb70        0x0 vm86/vm8086.32
 .data          0x00000000c001fb70        0x0 arch/i386/hal.32
 .data          0x00000000c001fb70        0x0 arch/i386/pic.32
 .data          0x00000000c001fb70        0x0 arch/i386/rtc.32
 .data          0x00000000c001fb70        0x0 arch/i386/vga.32
 .data          0x00000000c001fb70        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fb70        0x0 fs/iso9660/helper.32
 .data          0x00000000c001fb70        0x1 fs/iso9660/vfslink.32
                0x00000000c001fb70                recentDriveletter
 .data          0x00000000c001fb71        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fb71        0x0 hal/sound/sndport.32
 .data          0x00000000c001fb71        0x0 hw/bus/isa.32
 .data          0x00000000c001fb71        0x0 hw/bus/pci.32
 .data          0x00000000c001fb71        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fb71        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fb71        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fb71        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fb71        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fb71        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fb71        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fb71        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fb71        0x0 hw/timer/pit.32
 .data          0x00000000c001fb71        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fb71        0x0 crtn.32
 .data          0x00000000c001fb71        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fb71        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fb71        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fb71        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fb74        0x0
 .got           0x00000000c001fb74        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fb74        0x0
 .got.plt       0x00000000c001fb74        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fb74        0x0
 .igot.plt      0x00000000c001fb74        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fb74        0x0
 .tm_clone_table
                0x00000000c001fb74        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fb74        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fb71      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fb71        0x3 
 .eh_frame      0x00000000c001fb74        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fb74        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fb74       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fbcc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fc0c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fc78       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0020000       0x7d
 *(userkernel)
 userkernel     0x00000000c0020000       0x52 krnl/signal.32
                0x00000000c0020000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002002c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0020052       0x2b krnl/syscalls.32
                0x00000000c0020052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0021000        0x1
 *(align_previous)
 align_previous
                0x00000000c0021000        0x1 krnl/signal.32
                0x00000000c0021000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0021004        0x0
 .rel.got       0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0021001     0x4ba7
                0x00000000c0021001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0021001       0x1f 
 COMMON         0x00000000c0021020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0021020                dcache
                0x00000000c0021060                cdDriveLetter
                0x00000000c0021080                icache
 *(.bss)
 .bss           0x00000000c00210c0        0x0 crti.32
 .bss           0x00000000c00210c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00210e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00210e4       0x1c 
 .bss           0x00000000c0021100      0x378 core/malloc.32
 .bss           0x00000000c0021478        0x0 libk/ctype.32
 .bss           0x00000000c0021478        0x0 libk/string.32
 .bss           0x00000000c0021478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0021478        0x8 
 .bss           0x00000000c0021480       0x88 fs/fat/ff.32
 .bss           0x00000000c0021508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0021508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0021508       0x18 
 .bss           0x00000000c0021520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0021eb8        0x6 core/computer.32
                0x00000000c0021eb8                Krnl::computer
                0x00000000c0021ebc                KeIsPreemptionOn
                0x00000000c0021ebd                KeIsSchedulingOn
 *fill*         0x00000000c0021ebe        0x2 
 .bss           0x00000000c0021ec0        0x6 core/gdt.32
                0x00000000c0021ec0                gdtDescr
 .bss           0x00000000c0021ec6        0x0 core/idle.32
 *fill*         0x00000000c0021ec6        0x2 
 .bss           0x00000000c0021ec8        0x6 core/idt.32
                0x00000000c0021ec8                idtDescr
 .bss           0x00000000c0021ece        0x0 core/kheap.32
 *fill*         0x00000000c0021ece        0x2 
 .bss           0x00000000c0021ed0        0x4 core/main.32
                0x00000000c0021ed0                sysBootSettings
 .bss           0x00000000c0021ed4       0x29 core/physmgr.32
                0x00000000c0021ed4                Phys::forbidEvictions
                0x00000000c0021ed8                Phys::currentPagePointer
                0x00000000c0021edc                Phys::highestMem
                0x00000000c0021ee0                Phys::oldPercent
                0x00000000c0021ee4                Phys::usedPages
                0x00000000c0021ee8                Phys::usablePages
                0x00000000c0021eec                Phys::dmaUsage
 .bss           0x00000000c0021efd        0x0 core/pipe.32
 *fill*         0x00000000c0021efd        0x3 
 .bss           0x00000000c0021f00        0x9 core/terminal.32
                0x00000000c0021f00                terminalCycle
                0x00000000c0021f04                activeTerminal
                0x00000000c0021f08                VgaText::graphicMode
 *fill*         0x00000000c0021f09        0x1 
 .bss           0x00000000c0021f0a        0x2 core/tss.32
                0x00000000c0021f0a                doubleFaultSelector
 *fill*         0x00000000c0021f0c       0x14 
 .bss           0x00000000c0021f20       0x84 core/unixfile.32
                0x00000000c0021f20                sfileLpt
                0x00000000c0021f60                sfileCom
                0x00000000c0021f84                sfileNul
                0x00000000c0021f88                sfilePnt
                0x00000000c0021f8c                sfileAux
                0x00000000c0021f90                sfileCon
                0x00000000c0021f94                initialFilesAdded
                0x00000000c0021f98                unixFileLinkedList
 .bss           0x00000000c0021fa4       0x10 core/virtmgr.32
                0x00000000c0021fa4                twswaps
                0x00000000c0021fa8                swapBalance
                0x00000000c0021fac                Virt::swapfileBitmap
                0x00000000c0021fb0                firstVAS
 .bss           0x00000000c0021fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0021fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0021fb4        0x4 fs/vfs.32
                0x00000000c0021fb4                installedFilesystems
 .bss           0x00000000c0021fb8        0x0 hal/bus.32
 .bss           0x00000000c0021fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0021fb8        0x8 hal/clock.32
                0x00000000c0021fb8                User::dstOn
                0x00000000c0021fb9                User::timezoneHalfHourOffset
                0x00000000c0021fbc                User::timezoneHourOffset
 .bss           0x00000000c0021fc0        0x0 hal/device.32
 .bss           0x00000000c0021fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0021fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0021fc0        0x0 hal/fpu.32
 .bss           0x00000000c0021fc0     0x2000 hal/intctrl.32
                0x00000000c0021fc0                INT_contexts
                0x00000000c0022fc0                INT_handlers
 .bss           0x00000000c0023fc0      0x429 hal/keybrd.32
                0x00000000c0023fc0                keyboardWaitingTaskList
                0x00000000c0023fc4                keyboardSetupYet
                0x00000000c0023fc8                guiKeyboardHandler
                0x00000000c0023fe0                keystates
 *fill*         0x00000000c00243e9       0x17 
 .bss           0x00000000c0024400       0x88 hal/logidisk.32
                0x00000000c0024400                diskAssignments
                0x00000000c0024420                disks
 .bss           0x00000000c0024488        0x4 hal/mouse.32
                0x00000000c0024488                guiMouseHandler
 .bss           0x00000000c002448c        0x0 hal/partition.32
 .bss           0x00000000c002448c        0x0 hal/serial.32
 .bss           0x00000000c002448c        0x4 hal/timer.32
                0x00000000c002448c                milliTenthsSinceBoot
 .bss           0x00000000c0024490        0x0 hal/vcache.32
 .bss           0x00000000c0024490        0x4 hal/video.32
                0x00000000c0024490                screen
 *fill*         0x00000000c0024494        0xc 
 .bss           0x00000000c00244a0      0x480 hw/acpi.32
                0x00000000c00244a0                systemSleepFunction
                0x00000000c00244a4                systemResetFunction
                0x00000000c00244a8                systemShutdownFunction
                0x00000000c00244ac                nextACPITable
                0x00000000c00244c0                acpiTables
                0x00000000c00246c0                usingXSDT
                0x00000000c00246c4                MADTpointer
                0x00000000c00246c8                RSDTpointer
                0x00000000c00246cc                RSDPpointer
                0x00000000c00246d0                nextAPICNMI
                0x00000000c00246e0                apicNMIInfo
                0x00000000c0024760                legacyIRQFlags
                0x00000000c0024780                ioapicDiscoveryNumber
                0x00000000c00247a0                ioapicFoundInMADT
                0x00000000c00247c0                ioapicAddresses
                0x00000000c0024840                ioapicGSIBase
                0x00000000c00248c0                processorDiscoveryNumber
                0x00000000c00248e0                matchingAPICID
                0x00000000c0024900                processorID
 .bss           0x00000000c0024920       0x10 hw/cpu.32
                0x00000000c0024920                lastD
                0x00000000c0024924                lastC
                0x00000000c0024928                lastB
                0x00000000c002492c                lastA
 .bss           0x00000000c0024930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0024930        0x8 krnl/env.32
                0x00000000c0024930                Krnl::userEnv
                0x00000000c0024934                Krnl::systemEnv
 .bss           0x00000000c0024938        0x0 krnl/inlines.32
 .bss           0x00000000c0024938        0x1 krnl/panic.32
                0x00000000c0024938                KeIsKernelInPanic
 *fill*         0x00000000c0024939        0x7 
 .bss           0x00000000c0024940       0x48 krnl/powctrl.32
                0x00000000c0024940                Krnl::powCtrlOnBattery
                0x00000000c0024960                Krnl::currentPowerSettings
                0x00000000c0024984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0024988        0x0 krnl/resolve.32
 .bss           0x00000000c0024988        0x0 krnl/signal.32
 .bss           0x00000000c0024988        0x0 krnl/syscalls.32
 .bss           0x00000000c0024988        0x0 reg/registry.32
 .bss           0x00000000c0024988        0x0 sys/eject.32
 .bss           0x00000000c0024988        0x0 sys/exit.32
 .bss           0x00000000c0024988        0x0 sys/getcwd.32
 .bss           0x00000000c0024988        0x0 sys/getpid.32
 .bss           0x00000000c0024988        0x0 sys/getramdata.32
 .bss           0x00000000c0024988        0x0 sys/getvgaptr.32
 .bss           0x00000000c0024988        0x0 sys/loaddll.32
 .bss           0x00000000c0024988        0x0 sys/read.32
 .bss           0x00000000c0024988        0x0 sys/registersignal.32
 .bss           0x00000000c0024988        0x0 sys/sbrk.32
 .bss           0x00000000c0024988        0x0 sys/setcwd.32
 .bss           0x00000000c0024988        0x0 sys/settime.32
 .bss           0x00000000c0024988        0x0 sys/timezone.32
 .bss           0x00000000c0024988        0x0 sys/write.32
 .bss           0x00000000c0024988        0x0 sys/wsbe.32
 .bss           0x00000000c0024988        0x0 sys/yield.32
 *fill*         0x00000000c0024988       0x18 
 .bss           0x00000000c00249a0      0x7a4 thr/elf.32
                0x00000000c00249a0                Thr::driverLookupNext
                0x00000000c00249c0                Thr::driverLookupLen
                0x00000000c0024bc0                Thr::driverLookupAddr
                0x00000000c0024dc0                Thr::driverNameLookup
                0x00000000c0024fc0                Thr::kernelSymbols
                0x00000000c0025040                Thr::kernelStringTable
                0x00000000c00250c0                Thr::kernelSymbolTable
                0x00000000c0025140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0025144        0x4 
 .bss           0x00000000c0025148       0x68 thr/prcssthr.32
                0x00000000c0025148                cleanerThread
                0x00000000c002514c                weNeedTheCleanerToNotBlock
                0x00000000c0025150                retValLockStuff
                0x00000000c0025154                retValSchedLock
                0x00000000c0025158                lockStuffLock
                0x00000000c002515c                schedulerLock
                0x00000000c0025160                taskSwitchesPostponedFlag
                0x00000000c0025164                postponeTaskSwitchesCounter
                0x00000000c0025168                irqDisableCounter
                0x00000000c002516c                terminatedTaskList
                0x00000000c0025178                sleepingTaskList
                0x00000000c0025184                taskList
                0x00000000c0025190                kernelProcess
 *fill*         0x00000000c00251b0       0x10 
 .bss           0x00000000c00251c0       0x40 vm86/vm8086.32
                0x00000000c00251c0                Vm::vmRetV
                0x00000000c00251c4                Vm::vmDone
                0x00000000c00251c5                Vm::vmReady
                0x00000000c00251c8                Vm::vm86Thread
                0x00000000c00251cc                Vm::vmToHostCommsPtr
                0x00000000c00251e0                Vm::vmToHostComms
 .bss           0x00000000c0025200       0x14 arch/i386/hal.32
                0x00000000c0025200                apic
                0x00000000c0025204                fpuOwner
                0x00000000c0025208                coproLoadFunc
                0x00000000c002520c                coproSaveFunc
                0x00000000c0025210                gpFaultIntercept
 .bss           0x00000000c0025214        0x0 arch/i386/pic.32
 .bss           0x00000000c0025214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0025216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0025216        0xa 
 .bss           0x00000000c0025220       0xf0 fs/fat/vfslink.32
                0x00000000c0025220                FAT::fats
                0x00000000c0025240                FAT::vfsToFatRemaps
                0x00000000c00252c0                fatToVFSRemaps
 .bss           0x00000000c0025310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0025310       0x10 
 .bss           0x00000000c0025320      0x820 fs/iso9660/vfslink.32
                0x00000000c0025320                iso9660Owner
                0x00000000c0025324                recentSector
                0x00000000c0025340                recentBuffer
 .bss           0x00000000c0025b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0025b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0025b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0025b40        0xd hw/bus/pci.32
                0x00000000c0025b40                thePCI
 .bss           0x00000000c0025b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0025b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0025b4d        0x3 
 .bss           0x00000000c0025b50        0x8 hw/diskphys/ata.32
                0x00000000c0025b50                ataSectorsWritten
                0x00000000c0025b54                ataSectorsRead
 .bss           0x00000000c0025b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0025b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0025b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0025b58        0x8 
 .bss           0x00000000c0025b60       0x41 hw/intctrl/apic.32
                0x00000000c0025b60                noOfIOAPICs
                0x00000000c0025b80                ioapics
                0x00000000c0025ba0                IOAPICsSetupYet
 .bss           0x00000000c0025ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0025ba1        0x3 
 .bss           0x00000000c0025ba4        0x4 hw/timer/pit.32
                0x00000000c0025ba4                pitFreq
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0025ba8        0x0 crtn.32
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0025ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002a74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
