Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c40a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002ff                asmQuickAcquireLock
                0x00000000c000031d                asmQuickReleaseLock
                0x00000000c0000329                asmAcquireLock
                0x00000000c000034a                asmReleaseLock
                0x00000000c000035d                loadGDT
                0x00000000c000037d                memcpy
 *fill*         0x00000000c0000382        0xe 
 .text          0x00000000c0000390      0x79e acpica/utclib.32
                0x00000000c0000390                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004d0                memset
                0x00000000c0000540                strlen
                0x00000000c0000570                strpbrk
                0x00000000c00005b0                strtok
                0x00000000c0000600                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b2e      0xfad core/malloc.32
                0x00000000c0000c99                dlfree
                0x00000000c0000ff4                dlmalloc
                0x00000000c0001531                dlrealloc
                0x00000000c00016d4                dlmemalign
                0x00000000c00017f7                dlcalloc
                0x00000000c0001891                dlcfree
                0x00000000c0001896                dlindependent_calloc
                0x00000000c00018bb                dlindependent_comalloc
                0x00000000c00018d2                dlvalloc
                0x00000000c00018fd                dlpvalloc
                0x00000000c0001933                dlmalloc_trim
                0x00000000c0001940                dlmalloc_usable_size
                0x00000000c0001971                dlmallinfo
                0x00000000c0001a40                dlmalloc_stats
                0x00000000c0001a51                dlmallopt
 *fill*         0x00000000c0001adb        0x1 
 .text          0x00000000c0001adc      0x1f2 libk/ctype.32
                0x00000000c0001adc                isblank
                0x00000000c0001afc                iscntrl
                0x00000000c0001b1c                isdigit
                0x00000000c0001b38                islower
                0x00000000c0001b54                isspace
                0x00000000c0001b7c                isupper
                0x00000000c0001b98                isalpha
                0x00000000c0001bc8                isalnum
                0x00000000c0001bf8                ispunct
                0x00000000c0001c38                isgraph
                0x00000000c0001c68                isprint
                0x00000000c0001c90                isxdigit
 .text          0x00000000c0001cce        0x0 libk/string.32
 .text          0x00000000c0001cce       0x51 fs/fat/diskio.32
                0x00000000c0001cce                disk_status
                0x00000000c0001cd1                disk_initialize
                0x00000000c0001cd4                disk_read
                0x00000000c0001cea                disk_write
                0x00000000c0001d00                disk_ioctl
 .text          0x00000000c0001d1f     0x3d4b fs/fat/ff.32
                0x00000000c0003abb                f_mount
                0x00000000c0003b1d                f_open
                0x00000000c0003de8                f_read
                0x00000000c0003fe7                f_write
                0x00000000c000421b                f_sync
                0x00000000c00042d0                f_close
                0x00000000c00042ff                f_lseek
                0x00000000c00044a6                f_opendir
                0x00000000c0004571                f_closedir
                0x00000000c0004593                f_readdir
                0x00000000c0004625                f_stat
                0x00000000c00046a4                f_getfree
                0x00000000c00047a6                f_truncate
                0x00000000c000488a                f_unlink
                0x00000000c00049ac                f_mkdir
                0x00000000c0004b47                f_rename
                0x00000000c0004cfd                f_chmod
                0x00000000c0004da6                f_utime
                0x00000000c0004e54                f_getlabel
                0x00000000c0004fa5                f_setlabel
                0x00000000c0005135                f_expand
                0x00000000c0005295                f_mkfs
 *fill*         0x00000000c0005a6a        0x2 
 .text          0x00000000c0005a6c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a6c                ff_memalloc
                0x00000000c0005a84                ff_memfree
 *fill*         0x00000000c0005a9b        0x1 
 .text          0x00000000c0005a9c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a9c                ff_uni2oem
                0x00000000c0005b3c                ff_oem2uni
                0x00000000c0005bb4                ff_wtoupper
 .text          0x00000000c0005d44      0xc76 fs/iso9660/iso9660.32
                0x00000000c0005f63                isoReadDiscSector
                0x00000000c0005ffe                strnicmp
                0x00000000c00062b1                stricmp
                0x00000000c00062fd                iso_open
                0x00000000c0006387                iso_close
                0x00000000c00063a5                iso_read
                0x00000000c00064bb                iso_seek
                0x00000000c000653f                iso_tell
                0x00000000c0006570                iso_total
                0x00000000c000659b                fn_postprocess
                0x00000000c00065c1                iso_readdir
                0x00000000c00067b2                iso_reset
                0x00000000c00067bf                init_percd
                0x00000000c00068b9                iso_ioctl
                0x00000000c00068c1                fs_iso9660_init
                0x00000000c000694a                fs_iso9660_shutdown
 .text          0x00000000c00069ba      0x685 core/computer.32
                0x00000000c00069ba                Computer::close(int, int, void*)
                0x00000000c00069ff                Krnl::firstTask()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006be4                Computer::setBootMessage(char const*)
                0x00000000c0006be6                Computer::detectFeatures()
                0x00000000c0006df0                Computer::displayFeatures()
                0x00000000c0006df2                Computer::rdmsr(unsigned int)
                0x00000000c0006e1e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006e56                Computer::shutdown()
                0x00000000c0006e6e                Computer::restart()
                0x00000000c0006e86                Computer::sleep()
                0x00000000c0006e9a                Computer::nmiEnabled()
                0x00000000c0006ea6                Computer::readCMOS(unsigned char)
                0x00000000c0006ec0                Computer::enableNMI(bool)
                0x00000000c0006ed8                Computer::open(int, int, void*)
                0x00000000c0006fac                Computer::disableNMI()
                0x00000000c0006fbc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006fda                Computer::handleNMI()
 *fill*         0x00000000c000703f        0x1 
 .text          0x00000000c0007040      0x1cf core/gdt.32
                0x00000000c0007040                GDTEntry::setBase(unsigned int)
                0x00000000c000705c                GDTEntry::setLimit(unsigned int)
                0x00000000c000707a                GDT::GDT()
                0x00000000c000707a                GDT::GDT()
                0x00000000c0007090                GDT::addEntry(GDTEntry)
                0x00000000c00070b2                GDT::getNumberOfEntries()
                0x00000000c00070ba                GDT::flush()
                0x00000000c00070dc                GDT::setup()
 .text          0x00000000c000720f       0x1d core/idle.32
                0x00000000c000720f                idleFunction(void*)
 .text          0x00000000c000722c      0x464 core/idt.32
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000729e                IDTEntry::setOffset(unsigned int)
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00072be                IDT::addEntry(IDTEntry, int)
                0x00000000c00072d8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007310                IDT::flush()
                0x00000000c000732a                IDT::setup()
 .text          0x00000000c0007690      0x183 core/kheap.32
                0x00000000c0007690                sbrk
                0x00000000c0007725                mmap
                0x00000000c000773b                munmap
                0x00000000c0007751                liballoc_lock()
                0x00000000c000775e                liballoc_unlock()
                0x00000000c0007772                liballoc_alloc(int)
                0x00000000c000778a                liballoc_free(void*, int)
                0x00000000c00077a5                realloc
                0x00000000c00077b9                malloc
                0x00000000c00077c9                free
                0x00000000c00077d9                rfree
                0x00000000c00077e9                calloc
 .text          0x00000000c0007813       0xc3 core/main.32
                0x00000000c0007813                KeEntryPoint
 .text          0x00000000c00078d6      0x5dc core/physmgr.32
                0x00000000c00078d6                Phys::allocateDMA(unsigned long)
                0x00000000c00079ad                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c00079e0                Phys::setPageState(unsigned long, bool)
                0x00000000c0007a12                Phys::getPageState(unsigned long)
                0x00000000c0007a33                Phys::freePage(unsigned long)
                0x00000000c0007a95                Phys::allocatePage()
                0x00000000c0007b53                Phys::allocateContiguousPages(int)
                0x00000000c0007baf                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007be7                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007eb2      0x273 core/pipe.32
                0x00000000c0007eb2                Pipe::isAtty()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eda                Pipe::~Pipe()
                0x00000000c0007f02                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007fc2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00080be                Pipe::Pipe(int)
                0x00000000c00080be                Pipe::Pipe(int)
 *fill*         0x00000000c0008125        0x1 
 .text          0x00000000c0008126      0xaa0 core/terminal.32
                0x00000000c0008126                VgaText::isAtty()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000814e                VgaText::~VgaText()
                0x00000000c0008178                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008198                setTerminalScrollLock(bool)
                0x00000000c0008199                doTerminalCycle()
                0x00000000c000819a                addToTerminalCycle(VgaText*)
                0x00000000c000819b                scrollTerminalScrollLock(int)
                0x00000000c000819c                VgaText::updateTitle()
                0x00000000c000819e                VgaText::load()
                0x00000000c00081a0                VgaText::updateCursor()
                0x00000000c00081b6                VgaText::doANSI_SGR(int)
                0x00000000c000822a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000823a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000824a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000826a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008276                VgaText::setTitleColour(VgaColour)
                0x00000000c0008282                VgaText::setTitle(char*)
                0x00000000c0008284                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008296                VgaText::scrollScreen()
                0x00000000c000832e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008340                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00083d0                VgaText::getCursorX()
                0x00000000c00083d8                VgaText::getCursorY()
                0x00000000c00083e0                VgaText::setCursor(int, int)
                0x00000000c00083f7                setActiveTerminal(VgaText*)
                0x00000000c0008442                VgaText::clearScreen()
                0x00000000c0008490                VgaText::setCursorX(int)
                0x00000000c00084a8                VgaText::setCursorY(int)
                0x00000000c00084c0                VgaText::incrementCursor(bool)
                0x00000000c0008514                VgaText::decrementCursor(bool)
                0x00000000c0008536                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008604                VgaText::putchar(char)
                0x00000000c00086f0                VgaText::putx(unsigned int)
                0x00000000c0008736                VgaText::puts(char const*)
                0x00000000c000875c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00087a8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c0008a46                VgaText::receiveKey(unsigned char)
                0x00000000c0008ba0                VgaText::doUpdate()
                0x00000000c0008ba1                newTerminal(char*)
 *fill*         0x00000000c0008bc6        0x2 
 .text          0x00000000c0008bc8      0x1a1 core/tss.32
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bd8                TSS::setESP(unsigned long)
                0x00000000c0008bec                TSS::flush()
                0x00000000c0008c0c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008d69        0x1 
 .text          0x00000000c0008d6a      0x4c2 core/unixfile.32
                0x00000000c0008d6a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008dc0                ReservedFilename::isAtty()
                0x00000000c0008ddc                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008e3a                UnixFile::getFileDescriptor()
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c00090bc                UnixFile::~UnixFile()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c0009108                ReservedFilename::~ReservedFilename()
                0x00000000c000912f                getFromFileDescriptor(int)
 .text          0x00000000c000922c     0x12a7 core/virtmgr.32
                0x00000000c000922c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009261                Virt::getPageState(unsigned long)
                0x00000000c0009285                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009396                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00093b4                Virt::swapIDToSector(unsigned long)
                0x00000000c00093c6                Virt::allocateSwapfilePage()
                0x00000000c0009444                Virt::virtualMemorySetup()
                0x00000000c000948f                Virt::setupPageSwapping(int)
                0x00000000c0009500                VAS::VAS(VAS*)
                0x00000000c0009500                VAS::VAS(VAS*)
                0x00000000c000952e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000955a                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009579                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000969e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00096c2                VAS::virtualToPhysical(unsigned long)
                0x00000000c00096dc                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009732                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000976a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009794                VAS::~VAS()
                0x00000000c0009794                VAS::~VAS()
                0x00000000c00098f8                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00099fc                VAS::allocatePages(int, int)
                0x00000000c0009bd4                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009bf2                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009cb8                VAS::VAS()
                0x00000000c0009cb8                VAS::VAS()
                0x00000000c0009d30                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009e1e                VAS::VAS(bool)
                0x00000000c0009e1e                VAS::VAS(bool)
                0x00000000c000a164                VAS::evict(unsigned long)
                0x00000000c000a226                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a314                VAS::scanForEviction()
                0x00000000c000a3f4                mapVASFirstTime
 .text          0x00000000c000a4d3       0x5f coreobjs/c++.32
                0x00000000c000a4d3                __cxa_atexit
                0x00000000c000a4d6                __cxa_finalize
                0x00000000c000a4d7                __stack_chk_fail
                0x00000000c000a50d                __cxa_pure_virtual
                0x00000000c000a51e                operator new[](unsigned long)
                0x00000000c000a523                operator delete(void*, unsigned long)
                0x00000000c000a528                operator delete[](void*)
                0x00000000c000a52d                operator delete[](void*, unsigned long)
 .text          0x00000000c000a532      0x21c dbg/kconsole.32
                0x00000000c000a532                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a59d                Dbg::logc(char)
                0x00000000c000a5bd                Dbg::logs(char*)
                0x00000000c000a5da                Dbg::logWriteInt(unsigned int)
                0x00000000c000a5f8                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a619                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000a74e      0xc5c fs/vfs.32
                0x00000000c000a74e                File::read(unsigned long long, void*, int*)
                0x00000000c000a7a6                File::write(unsigned long long, void*, int*)
                0x00000000c000a7fe                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a856                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a884                File::isAtty()
                0x00000000c000a888                Directory::isAtty()
                0x00000000c000a88c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a892                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a898                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a89e                File::~File()
                0x00000000c000a89e                File::~File()
                0x00000000c000a8c2                File::~File()
                0x00000000c000a8ec                Directory::~Directory()
                0x00000000c000a8ec                Directory::~Directory()
                0x00000000c000a910                Directory::~Directory()
                0x00000000c000a93a                Filesystem::Filesystem()
                0x00000000c000a93a                Filesystem::Filesystem()
                0x00000000c000a95e                Filesystem::~Filesystem()
                0x00000000c000a95e                Filesystem::~Filesystem()
                0x00000000c000a96c                Filesystem::~Filesystem()
                0x00000000c000a990                Fs::getcwd(Process*, char*, int)
                0x00000000c000a9ba                Fs::initVFS()
                0x00000000c000a9e4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000ab8e                File::File(char const*, Process*)
                0x00000000c000ab8e                File::File(char const*, Process*)
                0x00000000c000ac4e                File::open(FileOpenMode)
                0x00000000c000acac                File::close()
                0x00000000c000ad0c                File::seek(unsigned long long)
                0x00000000c000ad62                File::tell(unsigned long long*)
                0x00000000c000adb2                File::rewind()
                0x00000000c000adc6                File::unlink()
                0x00000000c000ae12                File::rename(char const*)
                0x00000000c000ae60                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000aebc                File::exists()
                0x00000000c000aefa                File::stat(unsigned long long*, bool*)
                0x00000000c000af5b                Fs::setcwd(Process*, char*)
                0x00000000c000b0b8                Directory::Directory(char const*, Process*)
                0x00000000c000b0b8                Directory::Directory(char const*, Process*)
                0x00000000c000b178                Directory::open()
                0x00000000c000b1d4                Directory::close()
                0x00000000c000b234                Directory::unlink()
                0x00000000c000b280                Directory::rename(char const*)
                0x00000000c000b2ce                Directory::exists()
                0x00000000c000b30c                Directory::read(dirent*)
                0x00000000c000b358                Directory::create()
                0x00000000c000b3a4                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b3aa        0x2 
 .text          0x00000000c000b3ac       0x86 hal/bus.32
                0x00000000c000b3ac                Bus::Bus(char const*)
                0x00000000c000b3ac                Bus::Bus(char const*)
                0x00000000c000b3e4                Bus::~Bus()
                0x00000000c000b3e4                Bus::~Bus()
                0x00000000c000b408                Bus::~Bus()
 .text          0x00000000c000b432       0x96 hal/buzzer.32
                0x00000000c000b432                beepThread(void*)
                0x00000000c000b46f                Krnl::beep(int, int, bool)
 .text          0x00000000c000b4c8      0x46d hal/clock.32
                0x00000000c000b4c8                User::loadClockSettings(int)
                0x00000000c000b51a                Clock::Clock(char const*)
                0x00000000c000b51a                Clock::Clock(char const*)
                0x00000000c000b550                Clock::~Clock()
                0x00000000c000b550                Clock::~Clock()
                0x00000000c000b574                Clock::~Clock()
                0x00000000c000b59e                Clock::timeInSecondsLocal()
                0x00000000c000b5e6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b63f                datetimeToSeconds(datetime_t)
                0x00000000c000b76c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b7cc                secondsToDatetime(unsigned long long)
                0x00000000c000b910                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b935        0x1 
 .text          0x00000000c000b936      0x464 hal/device.32
                0x00000000c000b936                Device::hibernate()
                0x00000000c000b938                Device::wake()
                0x00000000c000b93a                Device::detect()
                0x00000000c000b93c                Device::disableLegacy()
                0x00000000c000b93e                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b940                DriverlessDevice::close(int, int, void*)
                0x00000000c000b944                DriverlessDevice::detect()
                0x00000000c000b946                DriverlessDevice::open(int, int, void*)
                0x00000000c000b95a                Device::~Device()
                0x00000000c000b95a                Device::~Device()
                0x00000000c000b968                Device::~Device()
                0x00000000c000b990                Device::findAndLoadDriver()
                0x00000000c000b99e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b9c4                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000ba04                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ba2e                Device::getParent()
                0x00000000c000ba3a                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ba58                Device::addChild(Device*)
                0x00000000c000ba9c                Device::removeAllChildren()
                0x00000000c000bae2                Device::hibernateAll()
                0x00000000c000bb12                Device::wakeAll()
                0x00000000c000bb42                Device::detectAll()
                0x00000000c000bb72                Device::disableLegacyAll()
                0x00000000c000bb74                Device::loadDriversForAll()
                0x00000000c000bb76                Device::closeAll()
                0x00000000c000bbac                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bbe2                Device::setName(char const*)
                0x00000000c000bbf0                Device::Device(char const*)
                0x00000000c000bbf0                Device::Device(char const*)
                0x00000000c000bcec                Device::getName()
                0x00000000c000bcf6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bcf6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bd2c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bd70                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bd9a        0x2 
 .text          0x00000000c000bd9c       0x86 hal/diskctrl.32
                0x00000000c000bd9c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bd9c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bdd4                HardDiskController::~HardDiskController()
                0x00000000c000bdd4                HardDiskController::~HardDiskController()
                0x00000000c000bdf8                HardDiskController::~HardDiskController()
 .text          0x00000000c000be22       0xe2 hal/diskphys.32
                0x00000000c000be22                PhysicalDisk::eject()
                0x00000000c000be26                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000be26                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000be8e                PhysicalDisk::startCache()
                0x00000000c000beb6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000beb6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000beda                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000bf04        0x0 hal/fpu.32
 .text          0x00000000c000bf04      0x35d hal/intctrl.32
                0x00000000c000bf04                int_handler
                0x00000000c000bf8c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000bfd4                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c10c                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c140                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c1bf                setupINTS()
                0x00000000c000c21c                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c261        0x1 
 .text          0x00000000c000c262      0x7cc hal/keybrd.32
                0x00000000c000c262                startGUI(void*)
                0x00000000c000c2ce                startGUIVESA(void*)
                0x00000000c000c33a                sendKeyToTerminal(unsigned char)
                0x00000000c000c403                sendKeyboardToken(KeyboardToken)
                0x00000000c000c843                clearInternalKeybuffer(VgaText*)
                0x00000000c000c878                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c9a4                Keyboard::Keyboard(char const*)
                0x00000000c000c9a4                Keyboard::Keyboard(char const*)
                0x00000000c000c9e0                Keyboard::~Keyboard()
                0x00000000c000c9e0                Keyboard::~Keyboard()
                0x00000000c000ca04                Keyboard::~Keyboard()
 .text          0x00000000c000ca2e      0x3ea hal/logidisk.32
                0x00000000c000ca2e                LogicalDisk::close(int, int, void*)
                0x00000000c000ca32                LogicalDisk::~LogicalDisk()
                0x00000000c000ca32                LogicalDisk::~LogicalDisk()
                0x00000000c000ca56                LogicalDisk::~LogicalDisk()
                0x00000000c000ca80                LogicalDisk::open(int, int, void*)
                0x00000000c000ca94                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cacc                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cb12                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cb12                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cbc8                LogicalDisk::assignDriveLetter()
                0x00000000c000cc7e                LogicalDisk::mount()
                0x00000000c000ccc6                LogicalDisk::unmount()
                0x00000000c000ccd6                LogicalDisk::eject()
                0x00000000c000ccea                LogicalDisk::unassignDriveLetter()
                0x00000000c000cd40                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000cdac                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ce18       0x86 hal/mouse.32
                0x00000000c000ce18                Mouse::Mouse(char const*)
                0x00000000c000ce18                Mouse::Mouse(char const*)
                0x00000000c000ce50                Mouse::~Mouse()
                0x00000000c000ce50                Mouse::~Mouse()
                0x00000000c000ce74                Mouse::~Mouse()
 .text          0x00000000c000ce9e      0x339 hal/partition.32
                0x00000000c000ce9e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cf46                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d1d7        0x1 
 .text          0x00000000c000d1d8       0x86 hal/serial.32
                0x00000000c000d1d8                Serial::Serial(char const*)
                0x00000000c000d1d8                Serial::Serial(char const*)
                0x00000000c000d210                Serial::~Serial()
                0x00000000c000d210                Serial::~Serial()
                0x00000000c000d234                Serial::~Serial()
 *fill*         0x00000000c000d25e        0x2 
 .text          0x00000000c000d260      0x234 hal/timer.32
                0x00000000c000d260                Timer::Timer(char const*)
                0x00000000c000d260                Timer::Timer(char const*)
                0x00000000c000d298                Timer::~Timer()
                0x00000000c000d298                Timer::~Timer()
                0x00000000c000d2bc                Timer::~Timer()
                0x00000000c000d2e6                Timer::read()
                0x00000000c000d2f1                setupTimer(int)
                0x00000000c000d32c                timerHandler(unsigned int)
 .text          0x00000000c000d494      0x3ce hal/vcache.32
                0x00000000c000d494                VCache::VCache(PhysicalDisk*)
                0x00000000c000d494                VCache::VCache(PhysicalDisk*)
                0x00000000c000d5fc                VCache::invalidateReadBuffer()
                0x00000000c000d60c                VCache::writeWriteBuffer()
                0x00000000c000d658                VCache::~VCache()
                0x00000000c000d658                VCache::~VCache()
                0x00000000c000d6ac                VCache::~VCache()
                0x00000000c000d6d4                VCache::write(unsigned long long, int, void*)
                0x00000000c000d7ea                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d862      0x4b3 hal/video.32
                0x00000000c000d862                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d8ae                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000d91e                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000d99c                Video::clearScreen(unsigned int)
                0x00000000c000d9d0                Video::putpixel(int, int, unsigned int)
                0x00000000c000d9de                Video::Video(char const*)
                0x00000000c000d9de                Video::Video(char const*)
                0x00000000c000da14                Video::~Video()
                0x00000000c000da14                Video::~Video()
                0x00000000c000da38                Video::~Video()
                0x00000000c000da62                Video::isMonochrome()
                0x00000000c000da6e                Video::getWidth()
                0x00000000c000da7a                Video::getHeight()
                0x00000000c000da86                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000db42                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000dcaa                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000dd15        0x3 
 .text          0x00000000c000dd18     0x1307 hw/acpi.32
                0x00000000c000dd18                ACPI::close(int, int, void*)
                0x00000000c000ddd0                findRSDP()
                0x00000000c000de60                loadACPITables(unsigned char*)
                0x00000000c000e0c4                findRSDT(unsigned char*)
                0x00000000c000e214                findDataTable(unsigned char*, char*)
                0x00000000c000e28c                scanMADT()
                0x00000000c000e760                ACPI::ACPI()
                0x00000000c000e760                ACPI::ACPI()
                0x00000000c000e7b4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e89c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000e964                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000e96c                ACPI::detectPCI()
                0x00000000c000eb74                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ebc8                ACPI::sleep()
                0x00000000c000ebe4                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f01f        0x1 
 .text          0x00000000c000f020      0xb95 hw/cpu.32
                0x00000000c000f020                CPU::close(int, int, void*)
                0x00000000c000f024                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f040                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f058                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f0cc                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f150                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f17e                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f1ac                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f1da                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f208                CPU::CPU()
                0x00000000c000f208                CPU::CPU()
                0x00000000c000f296                CPU::displayFeatures()
                0x00000000c000f298                CPU::detectFeatures()
                0x00000000c000f95c                CPU::setupSMEP()
                0x00000000c000f968                CPU::setupUMIP()
                0x00000000c000f972                CPU::setupTSC()
                0x00000000c000f97c                CPU::setupLargePages()
                0x00000000c000f986                CPU::setupPAT()
                0x00000000c000f9c2                CPU::setupMTRR()
                0x00000000c000f9c4                CPU::setupGlobalPages()
                0x00000000c000f9ce                CPU::allowUsermodeDataAccess()
                0x00000000c000f9e0                CPU::prohibitUsermodeDataAccess()
                0x00000000c000f9f2                CPU::setupSMAP()
                0x00000000c000fa00                CPU::setupFeatures()
                0x00000000c000facc                CPU::open(int, int, void*)
 .text          0x00000000c000fbb5       0xd1 krnl/bootmsg.32
                0x00000000c000fbb5                KeDisplaySplashScreen()
                0x00000000c000fc23                KeSetBootMessage(char const*)
 .text          0x00000000c000fc86      0x581 krnl/env.32
                0x00000000c000fc86                EnvVarContainer::getEnv(char const*)
                0x00000000c000fcc4                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fd86                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fd88                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000ff6e                EnvVarContainer::__loadSystem()
                0x00000000c000ff88                EnvVarContainer::__loadUser()
                0x00000000c000ff8a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000ff8a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000ffac                EnvVarContainer::~EnvVarContainer()
                0x00000000c000ffac                EnvVarContainer::~EnvVarContainer()
                0x00000000c000ffdc                Krnl::getEnv(Process*, char const*)
                0x00000000c0010041                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001005b                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001007a                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c001008d                Krnl::deleteEnvSystem(char const*)
                0x00000000c001008e                Krnl::deleteEnvUser(char const*)
                0x00000000c001008f                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0010090                Krnl::newProcessEnv(Process*)
                0x00000000c00100b2                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c00100fe                Krnl::loadSystemEnv()
                0x00000000c001012c                Krnl::loadUserEnv()
                0x00000000c0010152                Krnl::flushEnv()
                0x00000000c0010153                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0010173                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0010207       0x94 krnl/inlines.32
                0x00000000c0010207                CPU::current()
                0x00000000c0010213                operator new(unsigned long)
                0x00000000c0010218                operator delete(void*)
                0x00000000c001021d                disableIRQs()
                0x00000000c001021f                enableIRQs()
                0x00000000c0010221                lockScheduler()
                0x00000000c0010229                unlockScheduler()
                0x00000000c0010238                lockStuff()
                0x00000000c0010246                unlockStuff()
                0x00000000c0010280                Virt::getAKernelVAS()
                0x00000000c0010286                __not_memcpy
 .text          0x00000000c001029b        0xc krnl/panic.32
                0x00000000c001029b                KePanic(char const*)
 .text          0x00000000c00102a7      0x142 krnl/powctrl.32
                0x00000000c00102a7                Krnl::powerThread(void*)
                0x00000000c00102d5                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c00102eb                Krnl::userIOReceived()
                0x00000000c00102f6                Krnl::handlePowerButton()
                0x00000000c001032b                Krnl::handleSleepButton()
                0x00000000c0010360                Krnl::setupPowerManager()
 *fill*         0x00000000c00103e9        0x3 
 .text          0x00000000c00103ec      0x190 krnl/resolve.32
                0x00000000c00103ec                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c001057c      0x2c3 krnl/signal.32
                0x00000000c001057c                KiSigKill(int)
                0x00000000c00105a8                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00105a9                KiDefaultSignalHandlerPause(int)
                0x00000000c00105d5                KiDefaultSignalHandlerResume(int)
                0x00000000c0010601                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010606                KeInitSignals()
                0x00000000c0010651                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010687                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010704                KeCheckSignal(SigHandlerBlock*)
                0x00000000c00107ef                KiCheckSignalZ
                0x00000000c0010804                KeCompleteSignal(SigHandlerBlock*, int)
 .text          0x00000000c001083f      0xcfe krnl/syscalls.32
                0x00000000c001083f                SysSeekDir(regs*)
                0x00000000c0010844                SysTellDir(regs*)
                0x00000000c0010849                SysVerify(regs*)
                0x00000000c0010853                SysGetArgc(regs*)
                0x00000000c0010863                SysTTYName(regs*)
                0x00000000c001086b                SysFormatDisk(regs*)
                0x00000000c00108d8                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010922                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010977                SysShutdown(regs*)
                0x00000000c00109d5                SysRealpath(regs*)
                0x00000000c0010a18                SysReadDir(regs*)
                0x00000000c0010a98                SysIsATTY(regs*)
                0x00000000c0010af4                SysSeek(regs*)
                0x00000000c0010b4d                SysTell(regs*)
                0x00000000c0010bbc                SysSize(regs*)
                0x00000000c0010c31                SysSizeFromFilename(regs*)
                0x00000000c0010ce4                SysClose(regs*)
                0x00000000c0010d44                SysOpenDir(regs*)
                0x00000000c0010e55                SysCloseDir(regs*)
                0x00000000c0010ea9                SysMakeDir(regs*)
                0x00000000c0010f1b                SysWait(regs*)
                0x00000000c0010f38                SysNotImpl(regs*)
                0x00000000c0010f53                SysPanic(regs*)
                0x00000000c0010f6e                SysRmdir(regs*)
                0x00000000c0010fd5                SysUnlink(regs*)
                0x00000000c001103c                SysGetArgv(regs*)
                0x00000000c0011089                SysUSleep(regs*)
                0x00000000c00110b2                SysSpawn(regs*)
                0x00000000c001111b                SysGetEnv(regs*)
                0x00000000c00111ca                SysSetFatAttrib(regs*)
                0x00000000c0011241                SysPipe(regs*)
                0x00000000c0011286                SysGetUnixTime(regs*)
                0x00000000c001129a                string_ends_with(char const*, char const*)
                0x00000000c00112e4                SysOpen(regs*)
                0x00000000c00114eb                KeSystemCall(regs*, void*)
 .text          0x00000000c001153d      0x50e reg/registry.32
                0x00000000c001153d                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0011695                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00117ea                Reg::getLine(char*, char*, char*)
                0x00000000c0011821                Reg::readInt(char*, char*, int*)
                0x00000000c001190c                Reg::readString(char*, char*, char*, int)
                0x00000000c001198d                Reg::readBool(char*, char*, bool*)
                0x00000000c00119b2                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00119de                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0011a0a                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0011a4b       0x36 sys/eject.32
                0x00000000c0011a4b                SysEject(regs*)
 .text          0x00000000c0011a81       0x18 sys/exit.32
                0x00000000c0011a81                SysExit(regs*)
 .text          0x00000000c0011a99       0x1f sys/getcwd.32
                0x00000000c0011a99                SysGetCwd(regs*)
 .text          0x00000000c0011ab8        0xc sys/getpid.32
                0x00000000c0011ab8                SysGetPID(regs*)
 .text          0x00000000c0011ac4       0x1a sys/getramdata.32
                0x00000000c0011ac4                SysGetRAMData(regs*)
 .text          0x00000000c0011ade       0x82 sys/getvgaptr.32
                0x00000000c0011ade                SysGetVGAPtr(regs*)
 .text          0x00000000c0011b60       0xa8 sys/loaddll.32
                0x00000000c0011b60                SysLoadDLL(regs*)
 .text          0x00000000c0011c08       0x68 sys/read.32
                0x00000000c0011c08                SysRead(regs*)
 .text          0x00000000c0011c70       0x29 sys/registersignal.32
                0x00000000c0011c70                SysRegisterSignal(regs*)
 .text          0x00000000c0011c99       0x67 sys/sbrk.32
                0x00000000c0011c99                SysSbrk(regs*)
 .text          0x00000000c0011d00       0x1c sys/setcwd.32
                0x00000000c0011d00                SysSetCwd(regs*)
 .text          0x00000000c0011d1c       0x95 sys/settime.32
                0x00000000c0011d1c                SysSetTime(regs*)
 .text          0x00000000c0011db1       0x4a sys/timezone.32
                0x00000000c0011db1                SysTimezone(regs*)
 .text          0x00000000c0011dfb       0x68 sys/write.32
                0x00000000c0011dfb                SysWrite(regs*)
 .text          0x00000000c0011e63       0x62 sys/wsbe.32
                0x00000000c0011e63                SysWsbe(regs*)
 .text          0x00000000c0011ec5       0x25 sys/yield.32
                0x00000000c0011ec5                SysYield(regs*)
 .text          0x00000000c0011eea     0x11e5 thr/elf.32
                0x00000000c0011eea                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0012176                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001238c                Thr::runtimeReferenceHelper()
                0x00000000c001239f                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00123ee                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00126ac                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012de2                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012e14                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012e4b                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012e65                Thr::loadDLL(char const*, bool)
                0x00000000c0013096                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00130cf        0x1 
 .text          0x00000000c00130d0     0x12fd thr/prcssthr.32
                0x00000000c00130d0                userModeEntryPoint(void*)
                0x00000000c00130f8                changeTSS
                0x00000000c0013128                switchToThread(ThreadControlBlock*)
                0x00000000c00131dc                Process::addArgs(char**)
                0x00000000c001323c                Process::Process(char const*, Process*, char**)
                0x00000000c001323c                Process::Process(char const*, Process*, char**)
                0x00000000c0013448                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013448                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013620                taskStartupFunction
                0x00000000c001362c                Semaphore::Semaphore(int)
                0x00000000c001362c                Semaphore::Semaphore(int)
                0x00000000c001365c                Mutex::Mutex()
                0x00000000c001365c                Mutex::Mutex()
                0x00000000c0013670                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0013768                Process::createUserThread()
                0x00000000c0013788                setupMultitasking(void (*)())
                0x00000000c0013890                schedule()
                0x00000000c0013920                Semaphore::tryAcquire()
                0x00000000c00139ec                Semaphore::assertLocked(char const*)
                0x00000000c0013a64                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013a8c                blockTask(TaskState)
                0x00000000c0013abc                waitTask(int, int*, int)
                0x00000000c0013b00                milliTenthSleepUntil(unsigned int)
                0x00000000c0013b90                milliTenthSleep(unsigned int)
                0x00000000c0013ba0                sleep(unsigned int)
                0x00000000c0013bbc                Semaphore::acquire()
                0x00000000c0013c78                taskReturned
                0x00000000c0013cb4                Thr::processFromPID(int)
                0x00000000c0013d54                unblockTask(ThreadControlBlock*)
                0x00000000c0013df8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00140c4                cleanerTaskFunction(void*)
                0x00000000c00141b4                terminateTask(int)
                0x00000000c0014280                Thr::terminateFromIRQ(int)
                0x00000000c0014290                Semaphore::release()
 .text          0x00000000c00143cd      0xb93 vm86/vm8086.32
                0x00000000c00143cd                Vm::inbv(unsigned short)
                0x00000000c00143e0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0014416                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0014426                Vm::getSegment(unsigned int)
                0x00000000c001442e                Vm::getOffset(unsigned int)
                0x00000000c0014433                Vm::mainloop2()
                0x00000000c001446d                Vm::mainVm8086Loop(void*)
                0x00000000c001447d                Vm::mainloop3(unsigned long)
                0x00000000c00144a3                Vm::initialise8086()
                0x00000000c00144e6                Vm::finish8086()
                0x00000000c0014547                Vm::getOutput8086(unsigned char*)
                0x00000000c001456c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014625                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001478d                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0014817                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0014828                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001483a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001484b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0014860                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0014876                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001488b                Vm::faultHandler(regs*)
 .text          0x00000000c0014f60      0xa53 arch/i386/hal.32
                0x00000000c0014f60                noCopro(unsigned long)
                0x00000000c0014f61                nmiHandler(regs*, void*)
                0x00000000c0014f7a                doubleFault(regs*, void*)
                0x00000000c0014f93                displayDebugInfo(regs*)
                0x00000000c00152b4                HalSystemIdle()
                0x00000000c001532a                displayProgramFault(char const*)
                0x00000000c0015376                gpFault(regs*, void*)
                0x00000000c00153db                pgFault(regs*, void*)
                0x00000000c0015461                otherISRHandler(regs*, void*)
                0x00000000c0015495                opcodeFault(regs*, void*)
                0x00000000c0015515                i386SaveCoprocessor(void*)
                0x00000000c0015529                i386LoadCoprocessor(void*)
                0x00000000c001553d                x87EmulHandler(regs*, void*)
                0x00000000c00155da                HalInitialiseCoprocessor()
                0x00000000c0015688                HalPanic(char const*)
                0x00000000c0015781                HalQueryPerformanceCounter()
                0x00000000c001579c                HalInitialise()
                0x00000000c0015942                HalMakeBeep(int)
                0x00000000c001597c                HalGetRand()
                0x00000000c001597f                HalEndOfInterrupt(int)
                0x00000000c00159b0                HalRestart()
                0x00000000c00159b1                HalShutdown()
                0x00000000c00159b2                HalSleep()
 *fill*         0x00000000c00159b3        0x1 
 .text          0x00000000c00159b4      0x2f4 arch/i386/pic.32
                0x00000000c00159b4                picIoWait()
                0x00000000c00159bc                picDisable()
                0x00000000c00159f0                picGetIRQReg(int)
                0x00000000c0015a74                picOpen()
                0x00000000c0015c04                picEOI(int)
 .text          0x00000000c0015ca8      0x64d arch/i386/rtc.32
                0x00000000c0015ca8                RTC::open(int, int, void*)
                0x00000000c0015cac                RTC::close(int, int, void*)
                0x00000000c0015cb0                RTC::timeInSecondsUTC()
                0x00000000c0015cc2                RTC::timeInDatetimeUTC()
                0x00000000c0015ce8                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015d26                RTC::~RTC()
                0x00000000c0015d26                RTC::~RTC()
                0x00000000c0015d4a                RTC::~RTC()
                0x00000000c0015d74                RTC::get_update_in_progress_flag()
                0x00000000c0015d8c                RTC::completeRTCRefresh()
                0x00000000c0016044                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00161f7                rtcIRQHandler(regs*, void*)
                0x00000000c001623c                RTC::RTC()
                0x00000000c001623c                RTC::RTC()
 *fill*         0x00000000c00162f5        0x3 
 .text          0x00000000c00162f8      0x203 arch/i386/vga.32
                0x00000000c00162f8                HalConsoleScroll(int, int)
                0x00000000c0016400                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001646c                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00164fb        0x1 
 .text          0x00000000c00164fc     0x13e7 fs/fat/vfslink.32
                0x00000000c00164fc                FAT::getName()
                0x00000000c0016504                FAT::tell(void*, unsigned long long*)
                0x00000000c0016540                FAT::stat(void*, unsigned long long*)
                0x00000000c001657c                FAT::~FAT()
                0x00000000c001657c                FAT::~FAT()
                0x00000000c00165a0                FAT::~FAT()
                0x00000000c00165c8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001666c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0016730                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016904                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016b1c                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016cdc                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016e48                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016ea8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016f08                FAT::close(void*)
                0x00000000c0016f5c                FAT::closeDir(void*)
                0x00000000c0016fb0                FAT::seek(void*, unsigned long long)
                0x00000000c0017008                fatWrapperReadDisk
                0x00000000c001704c                fatWrapperWriteDisk
                0x00000000c0017090                fatWrapperIoctl
                0x00000000c00171ac                FAT::FAT()
                0x00000000c00171ac                FAT::FAT()
                0x00000000c0017200                FAT::fixFilepath(char*)
                0x00000000c001723c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0017374                FAT::openDir(char const*, void**)
                0x00000000c0017424                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001751c                FAT::unlink(char const*)
                0x00000000c001759c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017728                FAT::rename(char const*, char const*)
                0x00000000c00177f4                FAT::mkdir(char const*)
                0x00000000c0017874                FAT::exists(char const*)
 *fill*         0x00000000c00178e3        0x1 
 .text          0x00000000c00178e4       0xc6 fs/iso9660/helper.32
                0x00000000c00178e4                isoReadDiscSectorHelper
                0x00000000c0017940                iso_kprintf
                0x00000000c0017960                iso_kprintfd
 .text          0x00000000c00179aa      0x586 fs/iso9660/vfslink.32
                0x00000000c00179aa                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00179b0                ISO9660::getName()
                0x00000000c00179b6                ISO9660::closeDir(void*)
                0x00000000c00179c0                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00179c6                ISO9660::unlink(char const*)
                0x00000000c00179cc                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00179d2                ISO9660::rename(char const*, char const*)
                0x00000000c00179d8                ISO9660::mkdir(char const*)
                0x00000000c00179de                ISO9660::~ISO9660()
                0x00000000c00179de                ISO9660::~ISO9660()
                0x00000000c0017a02                ISO9660::~ISO9660()
                0x00000000c0017a2a                ISO9660::exists(char const*)
                0x00000000c0017a3e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017ade                ISO9660::openDir(char const*, void**)
                0x00000000c0017b6e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017bae                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017be6                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017c1c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017c56                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017d28                ISO9660::close(void*)
                0x00000000c0017d4e                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017e1b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017e96                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017f08                ISO9660::ISO9660()
                0x00000000c0017f08                ISO9660::ISO9660()
 .text          0x00000000c0017f30      0x26c hal/sound/sndcard.32
                0x00000000c0017f30                SoundCard::beginPlayback()
                0x00000000c0017f3e                SoundCard::stopPlayback()
                0x00000000c0017f4c                SoundCard::SoundCard(char const*)
                0x00000000c0017f4c                SoundCard::SoundCard(char const*)
                0x00000000c0017fea                SoundCard::~SoundCard()
                0x00000000c0017fea                SoundCard::~SoundCard()
                0x00000000c001800e                SoundCard::~SoundCard()
                0x00000000c0018038                SoundCard::configureRates(int, int, int)
                0x00000000c0018068                SoundCard::getSamples16(int, short*)
                0x00000000c00180c4                SoundCard::getSamples32(int, int*)
                0x00000000c001814a                SoundCard::addChannel(SoundPort*)
                0x00000000c0018188                SoundCard::removeChannel(int)
 .text          0x00000000c001819c      0x377 hal/sound/sndport.32
                0x00000000c001819c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001819c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018228                SoundPort::~SoundPort()
                0x00000000c0018228                SoundPort::~SoundPort()
                0x00000000c001825c                SoundPort::unpause()
                0x00000000c0018268                SoundPort::pause()
                0x00000000c0018274                SoundPort::getBufferUsed()
                0x00000000c001827c                SoundPort::getBufferSize()
                0x00000000c0018284                SoundPort::buffer16(short*, int)
                0x00000000c0018310                SoundPort::buffer32(int*, int)
                0x00000000c0018398                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001845c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0018513        0x0 hw/bus/isa.32
 *fill*         0x00000000c0018513        0x1 
 .text          0x00000000c0018514      0xb49 hw/bus/pci.32
                0x00000000c0018514                PCI::open(int, int, void*)
                0x00000000c0018532                PCI::close(int, int, void*)
                0x00000000c0018536                PCI::PCI()
                0x00000000c0018536                PCI::PCI()
                0x00000000c00185d0                PCI::readBAR8(unsigned int, int)
                0x00000000c00185ec                PCI::readBAR16(unsigned int, int)
                0x00000000c001860a                PCI::readBAR32(unsigned int, int)
                0x00000000c0018626                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0018646                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0018668                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0018688                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00186f6                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001879e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c00187c2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c00187ea                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018834                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001885c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018880                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c00188a4                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c00188cc                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018930                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018a18                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018c92                PCI::checkBus(unsigned char)
                0x00000000c0018cb8                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018e2a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018f9e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001900a                PCI::detect()
 *fill*         0x00000000c001905d        0x1 
 .text          0x00000000c001905e      0xb5a hw/diskctrl/ide.32
                0x00000000c001905e                IDE::close(int, int, void*)
                0x00000000c0019062                IDE::IDE()
                0x00000000c0019062                IDE::IDE()
                0x00000000c0019096                IDE::prepareInterrupt(unsigned char)
                0x00000000c00190a8                selectDrive(unsigned char, unsigned char)
                0x00000000c00190aa                IDE::getBase(unsigned char)
                0x00000000c00190bc                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001917c                IDE::read(unsigned char, unsigned char)
                0x00000000c001922a                IDE::waitInterrupt(unsigned char)
                0x00000000c0019292                ideChannel0IRQHandler(regs*, void*)
                0x00000000c00192ae                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00192ca                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019310                IDE::open(int, int, void*)
                0x00000000c001971e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c00197ea                IDE::detect()
                0x00000000c0019aaa                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019b5a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019bb8      0x32a hw/diskctrl/satabus.32
                0x00000000c0019bb8                SATABus::close(int, int, void*)
                0x00000000c0019bbc                SATABus::detect()
                0x00000000c0019bbe                SATABus::SATABus()
                0x00000000c0019bbe                SATABus::SATABus()
                0x00000000c0019c44                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c76                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019cbe                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019cde                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d08                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019e18                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019ec2                SATABus::open(int, int, void*)
 .text          0x00000000c0019ee2      0x5f4 hw/diskphys/ata.32
                0x00000000c0019ee2                ATA::close(int, int, void*)
                0x00000000c0019f06                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019f08                ATA::ATA()
                0x00000000c0019f08                ATA::ATA()
                0x00000000c0019f36                ATA::flush(bool)
                0x00000000c0019f80                ATA::readyForCommand()
                0x00000000c0019fcc                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a348                ATA::read(unsigned long long, int, void*)
                0x00000000c001a394                ATA::write(unsigned long long, int, void*)
                0x00000000c001a3e0                ATA::detectCHS()
                0x00000000c001a40a                ATA::open(int, int, void*)
 .text          0x00000000c001a4d6      0x60e hw/diskphys/atapi.32
                0x00000000c001a4d6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a4dc                ATAPI::close(int, int, void*)
                0x00000000c001a500                ATAPI::ATAPI()
                0x00000000c001a500                ATAPI::ATAPI()
                0x00000000c001a52e                ATAPI::readyForCommand()
                0x00000000c001a580                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a840                ATAPI::diskRemoved()
                0x00000000c001a87a                ATAPI::eject()
                0x00000000c001a8c2                ATAPI::diskInserted()
                0x00000000c001a8ce                ATAPI::detectMedia()
                0x00000000c001a98a                ATAPI::open(int, int, void*)
                0x00000000c001aa6a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001aae4      0x402 hw/diskphys/sata.32
                0x00000000c001aae4                SATA::close(int, int, void*)
                0x00000000c001ab08                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ab0a                SATA::open(int, int, void*)
                0x00000000c001abb4                SATA::SATA()
                0x00000000c001abb4                SATA::SATA()
                0x00000000c001abe2                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ae2e                SATA::read(unsigned long long, int, void*)
                0x00000000c001ae7a                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001aee6      0x5af hw/diskphys/satapi.32
                0x00000000c001aee6                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001aeec                SATAPI::close(int, int, void*)
                0x00000000c001af10                SATAPI::SATAPI()
                0x00000000c001af10                SATAPI::SATAPI()
                0x00000000c001af3e                SATAPI::diskRemoved()
                0x00000000c001af40                SATAPI::diskInserted()
                0x00000000c001af5c                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b23c                SATAPI::eject()
                0x00000000c001b278                SATAPI::detectMedia()
                0x00000000c001b29e                SATAPI::open(int, int, void*)
                0x00000000c001b39e                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b495        0x1 
 .text          0x00000000c001b496      0x455 hw/intctrl/apic.32
                0x00000000c001b496                IOAPIC::close(int, int, void*)
                0x00000000c001b49c                apicGetBase()
                0x00000000c001b4de                IOAPIC::IOAPIC()
                0x00000000c001b4de                IOAPIC::IOAPIC()
                0x00000000c001b506                apicOpen()
                0x00000000c001b66c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b69e                IOAPIC::read(int)
                0x00000000c001b6c6                IOAPIC::open(int, int, void*)
                0x00000000c001b7ba                IOAPIC::write(int, int)
                0x00000000c001b7e6                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b8eb        0x1 
 .text          0x00000000c001b8ec       0xf0 hw/timer/apictimer.32
                0x00000000c001b8ec                APICTimer::close(int, int, void*)
                0x00000000c001b8f4                apicTimerHandler(regs*, void*)
                0x00000000c001b91c                APICTimer::open(int, int, void*)
                0x00000000c001b98c                APICTimer::write(int)
                0x00000000c001b9b4                APICTimer::APICTimer()
                0x00000000c001b9b4                APICTimer::APICTimer()
 .text          0x00000000c001b9dc      0x1aa hw/timer/pit.32
                0x00000000c001b9dc                PIT::write(int)
                0x00000000c001ba60                pitHandler(regs*, void*)
                0x00000000c001ba84                PIT::open(int, int, void*)
                0x00000000c001bad4                PIT::close(int, int, void*)
                0x00000000c001bb04                PIT::PIT()
                0x00000000c001bb04                PIT::PIT()
 *fill*         0x00000000c001bb86        0xa 
 .text          0x00000000c001bb90       0x83 arch/i386/avx.32
                0x00000000c001bb90                avxDetect
                0x00000000c001bbba                avxSave
                0x00000000c001bbcb                avxLoad
                0x00000000c001bbdc                avxInit
                0x00000000c001bbfe                avxClose
                0x00000000c001bbff                wouldSheSayYes
 *fill*         0x00000000c001bc13        0xd 
 .text          0x00000000c001bc20      0x231 arch/i386/interrupt.32
                0x00000000c001bc20                isr0
                0x00000000c001bc30                isr1
                0x00000000c001bc3a                isr2
                0x00000000c001bc44                isr3
                0x00000000c001bc4e                isr4
                0x00000000c001bc58                isr5
                0x00000000c001bc62                isr6
                0x00000000c001bc6c                isr7
                0x00000000c001bc76                isr8
                0x00000000c001bc7e                isr9
                0x00000000c001bc88                isr10
                0x00000000c001bc90                isr11
                0x00000000c001bc98                isr12
                0x00000000c001bca0                isr13
                0x00000000c001bca8                isr14
                0x00000000c001bcb0                isr15
                0x00000000c001bcba                isr16
                0x00000000c001bcc4                isr17
                0x00000000c001bcce                isr18
                0x00000000c001bcd8                irq3
                0x00000000c001bce2                irq4
                0x00000000c001bcec                irq5
                0x00000000c001bcf6                irq6
                0x00000000c001bd00                irq7
                0x00000000c001bd0a                irq8
                0x00000000c001bd14                irq9
                0x00000000c001bd1e                irq10
                0x00000000c001bd28                irq11
                0x00000000c001bd32                irq12
                0x00000000c001bd3c                irq13
                0x00000000c001bd46                irq14
                0x00000000c001bd50                irq15
                0x00000000c001bd5a                irq1
                0x00000000c001bd61                irq2
                0x00000000c001bd68                isr96
                0x00000000c001bd6f                irq0
                0x00000000c001bd74                int_common_stub
                0x00000000c001bda6                syscall_common_stub
                0x00000000c001be01                irq16
                0x00000000c001be0b                irq17
                0x00000000c001be15                irq18
                0x00000000c001be1f                irq19
                0x00000000c001be29                irq20
                0x00000000c001be33                irq21
                0x00000000c001be3d                irq22
                0x00000000c001be47                irq23
 *fill*         0x00000000c001be51        0xf 
 .text          0x00000000c001be60       0x10 arch/i386/rdrand.32
                0x00000000c001be60                i386GetRDRAND
 .text          0x00000000c001be70       0x39 arch/i386/sse.32
                0x00000000c001be70                absolutelyNoChanceInHell
                0x00000000c001be70                sseDetect
                0x00000000c001be88                sseSave
                0x00000000c001be90                sseLoad
                0x00000000c001be98                sseInit
                0x00000000c001bea8                sseClose
 *fill*         0x00000000c001bea9        0x7 
 .text          0x00000000c001beb0       0x49 arch/i386/x87.32
                0x00000000c001beb6                x87Detect
                0x00000000c001bed1                x87Save
                0x00000000c001bed8                x87Load
                0x00000000c001bedf                x87Init
                0x00000000c001bef8                x87Close
 *fill*         0x00000000c001bef9        0x3 
 .text          0x00000000c001befc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bf21        0x0 crtn.32
 *fill*         0x00000000c001bf21        0x3 
 .text          0x00000000c001bf24      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bf24                __divdi3
 *fill*         0x00000000c001c06f        0x1 
 .text          0x00000000c001c070      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c070                __moddi3
 *fill*         0x00000000c001c1ee        0x2 
 .text          0x00000000c001c1f0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c1f0                __udivdi3
 *fill*         0x00000000c001c2ef        0x1 
 .text          0x00000000c001c2f0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c2f0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c410        0x0
 .iplt          0x00000000c001c410        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c40a        0xf
 .init          0x00000000c001c40a        0x3 crti.32
                0x00000000c001c40a                _init
 .init          0x00000000c001c40d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c412        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c417        0x2 crtn.32

.fini           0x00000000c001c419        0xa
 .fini          0x00000000c001c419        0x3 crti.32
                0x00000000c001c419                _fini
 .fini          0x00000000c001c41c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c421        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c424       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c424       0x23 core/computer.32
                0x00000000c001c424                Computer::~Computer()
                0x00000000c001c424                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c448       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c448       0x2a core/computer.32
                0x00000000c001c448                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c472       0x21
 .text._Z10idleCommonv
                0x00000000c001c472       0x21 core/idle.32
                0x00000000c001c472                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c494        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c494        0x2 core/unixfile.32
                0x00000000c001c494                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c494                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c496       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c496       0x42 core/unixfile.32
                0x00000000c001c496                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c496                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c4d8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c4d8       0xd3 core/unixfile.32
                0x00000000c001c4d8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c5ac        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c5ac        0x7 core/unixfile.32
                0x00000000c001c5ac                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c5b4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c5b4       0xa1 core/unixfile.32
                0x00000000c001c5b4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c656        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c656        0x8 core/unixfile.32
                0x00000000c001c656                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c65e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c65e       0x1a hal/device.32
                0x00000000c001c65e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c65e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c678       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c678       0x2a hal/device.32
                0x00000000c001c678                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c6a2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c6a2       0xdc hal/device.32
                0x00000000c001c6a2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c77e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c77e       0x42 hal/device.32
                0x00000000c001c77e                LinkedList<Device>::LinkedList()
                0x00000000c001c77e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c7c0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c7c0       0x1c hal/timer.32
                0x00000000c001c7c0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c7dc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c7dc        0x7 hal/timer.32
                0x00000000c001c7dc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c7e4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c7e4       0xb8 hal/timer.32
                0x00000000c001c7e4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c89c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c89c       0xda hal/timer.32
                0x00000000c001c89c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c978       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c978       0x23 hw/acpi.32
                0x00000000c001c978                ACPI::~ACPI()
                0x00000000c001c978                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c99c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c99c       0x2a hw/acpi.32
                0x00000000c001c99c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c9c8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c9c8        0x2 hw/acpi.32
                0x00000000c001c9c8                LinkedList<Device>::~LinkedList()
                0x00000000c001c9c8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c9cc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c9cc       0x1c hw/acpi.32
                0x00000000c001c9cc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c9e8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c9e8        0x7 hw/acpi.32
                0x00000000c001c9e8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c9f0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c9f0       0xb8 hw/acpi.32
                0x00000000c001c9f0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001caa8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001caa8       0x23 hw/cpu.32
                0x00000000c001caa8                CPU::~CPU()
                0x00000000c001caa8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001cacc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001cacc       0x2a hw/cpu.32
                0x00000000c001cacc                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001caf8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001caf8        0x2 thr/prcssthr.32
                0x00000000c001caf8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001caf8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cafc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cafc       0x49 thr/prcssthr.32
                0x00000000c001cafc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001cafc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb48       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb48       0x42 thr/prcssthr.32
                0x00000000c001cb48                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001cb48                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cb8c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cb8c        0x8 thr/prcssthr.32
                0x00000000c001cb8c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cb94       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cb94       0x23 hw/bus/pci.32
                0x00000000c001cb94                PCI::~PCI()
                0x00000000c001cb94                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cbb8       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cbb8       0x2a hw/bus/pci.32
                0x00000000c001cbb8                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cbe2       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cbe2       0x23 hw/diskctrl/ide.32
                0x00000000c001cbe2                IDE::~IDE()
                0x00000000c001cbe2                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cc06       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cc06       0x2a hw/diskctrl/ide.32
                0x00000000c001cc06                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cc30       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cc30       0x23 hw/diskctrl/satabus.32
                0x00000000c001cc30                SATABus::~SATABus()
                0x00000000c001cc30                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cc54       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cc54       0x2a hw/diskctrl/satabus.32
                0x00000000c001cc54                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cc7e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cc7e       0x23 hw/diskphys/ata.32
                0x00000000c001cc7e                ATA::~ATA()
                0x00000000c001cc7e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cca2       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cca2       0x2a hw/diskphys/ata.32
                0x00000000c001cca2                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cccc       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cccc       0x23 hw/diskphys/atapi.32
                0x00000000c001cccc                ATAPI::~ATAPI()
                0x00000000c001cccc                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001ccf0       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001ccf0       0x2a hw/diskphys/atapi.32
                0x00000000c001ccf0                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cd1a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cd1a       0x23 hw/diskphys/sata.32
                0x00000000c001cd1a                SATA::~SATA()
                0x00000000c001cd1a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cd3e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cd3e       0x2a hw/diskphys/sata.32
                0x00000000c001cd3e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cd68       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cd68       0x23 hw/diskphys/satapi.32
                0x00000000c001cd68                SATAPI::~SATAPI()
                0x00000000c001cd68                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cd8c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cd8c       0x2a hw/diskphys/satapi.32
                0x00000000c001cd8c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cdb6       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cdb6       0x23 hw/intctrl/apic.32
                0x00000000c001cdb6                IOAPIC::~IOAPIC()
                0x00000000c001cdb6                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cdda       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cdda       0x2a hw/intctrl/apic.32
                0x00000000c001cdda                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ce04       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ce04       0x23 hw/timer/apictimer.32
                0x00000000c001ce04                APICTimer::~APICTimer()
                0x00000000c001ce04                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ce28       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ce28       0x2a hw/timer/apictimer.32
                0x00000000c001ce28                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ce54       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ce54       0x23 hw/timer/pit.32
                0x00000000c001ce54                PIT::~PIT()
                0x00000000c001ce54                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ce78       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ce78       0x2a hw/timer/pit.32
                0x00000000c001ce78                PIT::~PIT()

.rodata         0x00000000c001cea2     0x29c2
                0x00000000c001cea2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cea2        0x2 
 .ctors         0x00000000c001cea4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cea8        0x4 core/unixfile.32
 .ctors         0x00000000c001ceac        0x4 thr/prcssthr.32
 .ctors         0x00000000c001ceb0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ceb4                end_ctors = .
                0x00000000c001ceb4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ceb4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ceb8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ceb8                __DTOR_END__
                0x00000000c001cebc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cebc        0x4 
 .rodata        0x00000000c001cec0      0x101 acpica/utclib.32
                0x00000000c001cec0                AcpiGbl_Ctypes
 *fill*         0x00000000c001cfc1        0x3 
 .rodata        0x00000000c001cfc4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001cfdc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d026       0x1a 
 .rodata        0x00000000c001d040       0xed fs/fat/ff.32
 *fill*         0x00000000c001d12d       0x13 
 .rodata        0x00000000c001d140      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d540       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d551      0x115 core/computer.32
 *fill*         0x00000000c001d666        0x2 
 .rodata.str1.4
                0x00000000c001d668       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d6d0       0x2c core/computer.32
                0x00000000c001d6d0                vtable for Computer
 .rodata.str1.4
                0x00000000c001d6fc       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d72c        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d738       0x17 core/main.32
 *fill*         0x00000000c001d74f        0x1 
 .rodata.str1.4
                0x00000000c001d750       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d7f5       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d84d       0x39 core/pipe.32
 *fill*         0x00000000c001d886        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d888       0x1c core/pipe.32
                0x00000000c001d888                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d8a4       0x75 core/terminal.32
 *fill*         0x00000000c001d919        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d91c       0x1c core/terminal.32
                0x00000000c001d91c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d938       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d95a       0x15 core/unixfile.32
 *fill*         0x00000000c001d96f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d970       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d9bb        0x8 core/unixfile.32
 *fill*         0x00000000c001d9c3        0x1 
 .rodata.str1.4
                0x00000000c001d9c4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d9e4       0x1c core/unixfile.32
                0x00000000c001d9e4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001da00       0x1c core/unixfile.32
                0x00000000c001da00                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001da1c      0x191 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dbad      0x121 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dcce       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dd01       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dd01        0x3 
 .rodata        0x00000000c001dd04      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001de54       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001de54       0x68 fs/vfs.32
                0x00000000c001de54                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001debc       0x1c fs/vfs.32
                0x00000000c001debc                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001ded8       0x1c fs/vfs.32
                0x00000000c001ded8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001def4       0x2c hal/bus.32
                0x00000000c001def4                vtable for Bus
 .rodata.str1.1
                0x00000000c001df20       0x1e hal/clock.32
 *fill*         0x00000000c001df3e        0x2 
 .rodata._ZTV5Clock
                0x00000000c001df40       0x3c hal/clock.32
                0x00000000c001df40                vtable for Clock
 *fill*         0x00000000c001df7c        0x4 
 .rodata        0x00000000c001df80       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001dfb0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001e008       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001e008       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001e008       0x2c hal/device.32
                0x00000000c001e008                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001e034       0x2c hal/device.32
                0x00000000c001e034                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e060       0x2c hal/diskctrl.32
                0x00000000c001e060                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e08c       0x38 hal/diskphys.32
                0x00000000c001e08c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e0c4       0x3e hal/intctrl.32
 *fill*         0x00000000c001e102        0x2 
 .rodata.str1.4
                0x00000000c001e104       0x5d hal/intctrl.32
 .rodata        0x00000000c001e161       0x63 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e1c4       0x34 hal/keybrd.32
                0x00000000c001e1c4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e1f8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e23c       0x2c hal/logidisk.32
                0x00000000c001e23c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e268       0x2c hal/mouse.32
                0x00000000c001e268                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e294        0xb hal/partition.32
 *fill*         0x00000000c001e29f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e2a0       0x44 hal/serial.32
                0x00000000c001e2a0                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e2e4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e2e4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e2e4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e2e4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e2e4       0x30 hal/timer.32
                0x00000000c001e2e4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e314       0x10 hal/vcache.32
                0x00000000c001e314                vtable for VCache
 .rodata.str1.1
                0x00000000c001e324       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e38c       0x48 hal/video.32
                0x00000000c001e38c                vtable for Video
 .rodata.str1.4
                0x00000000c001e3d4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e46f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e5ab       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e5ab        0x8 hw/acpi.32
 *fill*         0x00000000c001e5ab        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e5ac       0x2c hw/acpi.32
                0x00000000c001e5ac                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e5d8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e745        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e748       0x2c hw/cpu.32
                0x00000000c001e748                vtable for CPU
 .rodata.str1.1
                0x00000000c001e774       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e7b0       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c001e841       0xd3 krnl/signal.32
 .rodata.str1.4
                0x00000000c001e914       0x26 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c001e93a       0x97 krnl/syscalls.32
                                         0xa7 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e9d1       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001ea16        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001ea20        0xc sys/sbrk.32
 .rodata.str1.1
                0x00000000c001ea2c       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001ea80       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001eaac      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001ec78       0x57 thr/prcssthr.32
 *fill*         0x00000000c001eccf        0x1 
 .rodata.str1.4
                0x00000000c001ecd0      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001eddc       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001eddc       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001eddc       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001eddc        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001eddc       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001ee7c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001eeac      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001f02e        0x2 
 .rodata.str1.4
                0x00000000c001f030       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001f0a3       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001f0b8       0x3c arch/i386/rtc.32
                0x00000000c001f0b8                vtable for RTC
 .rodata.str1.1
                0x00000000c001f0f4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f135        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f138       0x68 fs/fat/vfslink.32
                0x00000000c001f138                vtable for FAT
 .rodata.str1.1
                0x00000000c001f1a0        0x3 fs/iso9660/helper.32
                                          0x5 (size before relaxing)
 .rodata.str1.1
                0x00000000c001f1a3       0x49 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001f1ec       0x68 fs/iso9660/vfslink.32
                0x00000000c001f1ec                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f254       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f298       0x34 hal/sound/sndcard.32
                0x00000000c001f298                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f2cc       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f30b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f343       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f3e4       0x2c hw/bus/pci.32
                0x00000000c001f3e4                vtable for PCI
 .rodata.str1.1
                0x00000000c001f410       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f497        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f498       0x2c hw/diskctrl/ide.32
                0x00000000c001f498                vtable for IDE
 .rodata.str1.4
                0x00000000c001f4c4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f4e8       0x2c hw/diskctrl/satabus.32
                0x00000000c001f4e8                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f514       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f526        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f528       0x38 hw/diskphys/ata.32
                0x00000000c001f528                vtable for ATA
 .rodata.str1.1
                0x00000000c001f560        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f56d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f570       0x38 hw/diskphys/atapi.32
                0x00000000c001f570                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f5a8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f624       0x38 hw/diskphys/sata.32
                0x00000000c001f624                vtable for SATA
 .rodata.str1.1
                0x00000000c001f65c      0x100 hw/diskphys/satapi.32
                                        0x10d (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f75c       0x38 hw/diskphys/satapi.32
                0x00000000c001f75c                vtable for SATAPI
 .rodata        0x00000000c001f794        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f79c       0x2c hw/intctrl/apic.32
                0x00000000c001f79c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f7c8       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f7e3        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f7e4       0x30 hw/timer/apictimer.32
                0x00000000c001f7e4                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f814       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f831        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f834       0x30 hw/timer/pit.32
                0x00000000c001f834                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f864      0x3ad
 *(.data)
 .data          0x00000000c001f864        0x0 crti.32
 .data          0x00000000c001f864        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f864                __dso_handle
 .data          0x00000000c001f868        0x0 acpica/utclib.32
 .data          0x00000000c001f868        0x0 core/malloc.32
 .data          0x00000000c001f868        0x0 libk/ctype.32
 .data          0x00000000c001f868        0x0 libk/string.32
 .data          0x00000000c001f868        0x0 fs/fat/diskio.32
 .data          0x00000000c001f868        0x0 fs/fat/ff.32
 .data          0x00000000c001f868        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f868        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f868        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f868        0x0 core/computer.32
 .data          0x00000000c001f868        0x0 core/gdt.32
 .data          0x00000000c001f868        0x0 core/idle.32
 .data          0x00000000c001f868        0x0 core/idt.32
 .data          0x00000000c001f868        0x4 core/kheap.32
 .data          0x00000000c001f86c        0x0 core/main.32
 .data          0x00000000c001f86c        0x4 core/physmgr.32
                0x00000000c001f86c                Phys::bitmap
 .data          0x00000000c001f870        0x0 core/pipe.32
 *fill*         0x00000000c001f870       0x10 
 .data          0x00000000c001f880       0x60 core/terminal.32
                0x00000000c001f880                VgaText::hiddenOut
                0x00000000c001f8a0                ansiToVGAMappings
 .data          0x00000000c001f8e0        0x0 core/tss.32
 .data          0x00000000c001f8e0        0x4 core/unixfile.32
                0x00000000c001f8e0                UnixFile::nextFd
 .data          0x00000000c001f8e4       0x15 core/virtmgr.32
                0x00000000c001f8e4                Virt::pageAllocPtr
                0x00000000c001f8e8                Virt::bitmap
                0x00000000c001f8ec                Virt::swapfileSectorsPerPage
                0x00000000c001f8f0                Virt::swapfileLength
                0x00000000c001f8f4                Virt::swapfileSector
                0x00000000c001f8f8                Virt::swapfileDrive
 *fill*         0x00000000c001f8f9        0x3 
 .data          0x00000000c001f8fc        0x4 coreobjs/c++.32
                0x00000000c001f8fc                __stack_chk_guard
 .data          0x00000000c001f900        0x0 dbg/kconsole.32
 .data          0x00000000c001f900        0x0 fs/vfs.32
 .data          0x00000000c001f900        0x0 hal/bus.32
 .data          0x00000000c001f900        0x0 hal/buzzer.32
 .data          0x00000000c001f900        0x0 hal/clock.32
 .data          0x00000000c001f900        0x0 hal/device.32
 .data          0x00000000c001f900        0x0 hal/diskctrl.32
 .data          0x00000000c001f900        0x0 hal/diskphys.32
 .data          0x00000000c001f900        0x0 hal/fpu.32
 .data          0x00000000c001f900        0x0 hal/intctrl.32
 .data          0x00000000c001f900        0x0 hal/keybrd.32
 .data          0x00000000c001f900        0x0 hal/logidisk.32
 .data          0x00000000c001f900        0x0 hal/mouse.32
 .data          0x00000000c001f900        0x0 hal/partition.32
 .data          0x00000000c001f900        0x0 hal/serial.32
 .data          0x00000000c001f900        0x0 hal/timer.32
 .data          0x00000000c001f900        0x0 hal/vcache.32
 .data          0x00000000c001f900        0x0 hal/video.32
 .data          0x00000000c001f900       0x10 hw/acpi.32
                0x00000000c001f900                legacyIRQRemaps
 .data          0x00000000c001f910        0x4 hw/cpu.32
                0x00000000c001f910                lastCode
 *fill*         0x00000000c001f914        0xc 
 .data          0x00000000c001f920      0x142 krnl/bootmsg.32
                0x00000000c001f920                KiSplashScreen
 *fill*         0x00000000c001fa62       0x1e 
 .data          0x00000000c001fa80       0x4d krnl/env.32
                0x00000000c001fa80                defaultSysEnv
 .data          0x00000000c001facd        0x0 krnl/inlines.32
 .data          0x00000000c001facd        0x0 krnl/panic.32
 .data          0x00000000c001facd        0x0 krnl/powctrl.32
 .data          0x00000000c001facd        0x0 krnl/resolve.32
 *fill*         0x00000000c001facd       0x13 
 .data          0x00000000c001fae0       0x4c krnl/signal.32
                0x00000000c001fae0                KiDefaultSignalHandlers
 *fill*         0x00000000c001fb2c       0x14 
 .data          0x00000000c001fb40       0xcc krnl/syscalls.32
                0x00000000c001fb40                systemCallHandlers
 .data          0x00000000c001fc0c        0x0 reg/registry.32
 .data          0x00000000c001fc0c        0x0 sys/eject.32
 .data          0x00000000c001fc0c        0x0 sys/exit.32
 .data          0x00000000c001fc0c        0x0 sys/getcwd.32
 .data          0x00000000c001fc0c        0x0 sys/getpid.32
 .data          0x00000000c001fc0c        0x0 sys/getramdata.32
 .data          0x00000000c001fc0c        0x0 sys/getvgaptr.32
 .data          0x00000000c001fc0c        0x0 sys/loaddll.32
 .data          0x00000000c001fc0c        0x0 sys/read.32
 .data          0x00000000c001fc0c        0x0 sys/registersignal.32
 .data          0x00000000c001fc0c        0x0 sys/sbrk.32
 .data          0x00000000c001fc0c        0x0 sys/setcwd.32
 .data          0x00000000c001fc0c        0x0 sys/settime.32
 .data          0x00000000c001fc0c        0x0 sys/timezone.32
 .data          0x00000000c001fc0c        0x0 sys/write.32
 .data          0x00000000c001fc0c        0x0 sys/wsbe.32
 .data          0x00000000c001fc0c        0x0 sys/yield.32
 .data          0x00000000c001fc0c        0x0 thr/elf.32
 .data          0x00000000c001fc0c        0x4 thr/prcssthr.32
                0x00000000c001fc0c                Thr::nextPID
 .data          0x00000000c001fc10        0x0 vm86/vm8086.32
 .data          0x00000000c001fc10        0x0 arch/i386/hal.32
 .data          0x00000000c001fc10        0x0 arch/i386/pic.32
 .data          0x00000000c001fc10        0x0 arch/i386/rtc.32
 .data          0x00000000c001fc10        0x0 arch/i386/vga.32
 .data          0x00000000c001fc10        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fc10        0x0 fs/iso9660/helper.32
 .data          0x00000000c001fc10        0x1 fs/iso9660/vfslink.32
                0x00000000c001fc10                recentDriveletter
 .data          0x00000000c001fc11        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fc11        0x0 hal/sound/sndport.32
 .data          0x00000000c001fc11        0x0 hw/bus/isa.32
 .data          0x00000000c001fc11        0x0 hw/bus/pci.32
 .data          0x00000000c001fc11        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fc11        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fc11        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fc11        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fc11        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fc11        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fc11        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fc11        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fc11        0x0 hw/timer/pit.32
 .data          0x00000000c001fc11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fc11        0x0 crtn.32
 .data          0x00000000c001fc11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fc11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fc11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fc11        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fc14        0x0
 .got           0x00000000c001fc14        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fc14        0x0
 .got.plt       0x00000000c001fc14        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fc14        0x0
 .igot.plt      0x00000000c001fc14        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fc14        0x0
 .tm_clone_table
                0x00000000c001fc14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fc14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fc11      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fc11        0x3 
 .eh_frame      0x00000000c001fc14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fc14        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fc14       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fc6c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fcac       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fd18       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0020000       0x7d
 *(userkernel)
 userkernel     0x00000000c0020000       0x52 krnl/signal.32
                0x00000000c0020000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002002c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0020052       0x2b krnl/syscalls.32
                0x00000000c0020052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0021000        0x1
 *(align_previous)
 align_previous
                0x00000000c0021000        0x1 krnl/signal.32
                0x00000000c0021000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0021004        0x0
 .rel.got       0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0021001     0x4ba7
                0x00000000c0021001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0021001       0x1f 
 COMMON         0x00000000c0021020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0021020                dcache
                0x00000000c0021060                cdDriveLetter
                0x00000000c0021080                icache
 *(.bss)
 .bss           0x00000000c00210c0        0x0 crti.32
 .bss           0x00000000c00210c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00210e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00210e4       0x1c 
 .bss           0x00000000c0021100      0x378 core/malloc.32
 .bss           0x00000000c0021478        0x0 libk/ctype.32
 .bss           0x00000000c0021478        0x0 libk/string.32
 .bss           0x00000000c0021478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0021478        0x8 
 .bss           0x00000000c0021480       0x88 fs/fat/ff.32
 .bss           0x00000000c0021508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0021508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0021508       0x18 
 .bss           0x00000000c0021520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0021eb8        0x6 core/computer.32
                0x00000000c0021eb8                Krnl::computer
                0x00000000c0021ebc                KeIsPreemptionOn
                0x00000000c0021ebd                KeIsSchedulingOn
 *fill*         0x00000000c0021ebe        0x2 
 .bss           0x00000000c0021ec0        0x6 core/gdt.32
                0x00000000c0021ec0                gdtDescr
 .bss           0x00000000c0021ec6        0x0 core/idle.32
 *fill*         0x00000000c0021ec6        0x2 
 .bss           0x00000000c0021ec8        0x6 core/idt.32
                0x00000000c0021ec8                idtDescr
 .bss           0x00000000c0021ece        0x0 core/kheap.32
 *fill*         0x00000000c0021ece        0x2 
 .bss           0x00000000c0021ed0        0x4 core/main.32
                0x00000000c0021ed0                sysBootSettings
 .bss           0x00000000c0021ed4       0x29 core/physmgr.32
                0x00000000c0021ed4                Phys::forbidEvictions
                0x00000000c0021ed8                Phys::currentPagePointer
                0x00000000c0021edc                Phys::highestMem
                0x00000000c0021ee0                Phys::oldPercent
                0x00000000c0021ee4                Phys::usedPages
                0x00000000c0021ee8                Phys::usablePages
                0x00000000c0021eec                Phys::dmaUsage
 .bss           0x00000000c0021efd        0x0 core/pipe.32
 *fill*         0x00000000c0021efd        0x3 
 .bss           0x00000000c0021f00        0x9 core/terminal.32
                0x00000000c0021f00                terminalCycle
                0x00000000c0021f04                activeTerminal
                0x00000000c0021f08                VgaText::graphicMode
 *fill*         0x00000000c0021f09        0x1 
 .bss           0x00000000c0021f0a        0x2 core/tss.32
                0x00000000c0021f0a                doubleFaultSelector
 *fill*         0x00000000c0021f0c       0x14 
 .bss           0x00000000c0021f20       0x84 core/unixfile.32
                0x00000000c0021f20                sfileLpt
                0x00000000c0021f60                sfileCom
                0x00000000c0021f84                sfileNul
                0x00000000c0021f88                sfilePnt
                0x00000000c0021f8c                sfileAux
                0x00000000c0021f90                sfileCon
                0x00000000c0021f94                initialFilesAdded
                0x00000000c0021f98                unixFileLinkedList
 .bss           0x00000000c0021fa4       0x10 core/virtmgr.32
                0x00000000c0021fa4                twswaps
                0x00000000c0021fa8                swapBalance
                0x00000000c0021fac                Virt::swapfileBitmap
                0x00000000c0021fb0                firstVAS
 .bss           0x00000000c0021fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0021fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0021fb4        0x4 fs/vfs.32
                0x00000000c0021fb4                installedFilesystems
 .bss           0x00000000c0021fb8        0x0 hal/bus.32
 .bss           0x00000000c0021fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0021fb8        0x8 hal/clock.32
                0x00000000c0021fb8                User::dstOn
                0x00000000c0021fb9                User::timezoneHalfHourOffset
                0x00000000c0021fbc                User::timezoneHourOffset
 .bss           0x00000000c0021fc0        0x0 hal/device.32
 .bss           0x00000000c0021fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0021fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0021fc0        0x0 hal/fpu.32
 .bss           0x00000000c0021fc0     0x2000 hal/intctrl.32
                0x00000000c0021fc0                INT_contexts
                0x00000000c0022fc0                INT_handlers
 .bss           0x00000000c0023fc0      0x429 hal/keybrd.32
                0x00000000c0023fc0                keyboardWaitingTaskList
                0x00000000c0023fc4                keyboardSetupYet
                0x00000000c0023fc8                guiKeyboardHandler
                0x00000000c0023fe0                keystates
 *fill*         0x00000000c00243e9       0x17 
 .bss           0x00000000c0024400       0x88 hal/logidisk.32
                0x00000000c0024400                diskAssignments
                0x00000000c0024420                disks
 .bss           0x00000000c0024488        0x4 hal/mouse.32
                0x00000000c0024488                guiMouseHandler
 .bss           0x00000000c002448c        0x0 hal/partition.32
 .bss           0x00000000c002448c        0x0 hal/serial.32
 .bss           0x00000000c002448c        0x4 hal/timer.32
                0x00000000c002448c                milliTenthsSinceBoot
 .bss           0x00000000c0024490        0x0 hal/vcache.32
 .bss           0x00000000c0024490        0x4 hal/video.32
                0x00000000c0024490                screen
 *fill*         0x00000000c0024494        0xc 
 .bss           0x00000000c00244a0      0x480 hw/acpi.32
                0x00000000c00244a0                systemSleepFunction
                0x00000000c00244a4                systemResetFunction
                0x00000000c00244a8                systemShutdownFunction
                0x00000000c00244ac                nextACPITable
                0x00000000c00244c0                acpiTables
                0x00000000c00246c0                usingXSDT
                0x00000000c00246c4                MADTpointer
                0x00000000c00246c8                RSDTpointer
                0x00000000c00246cc                RSDPpointer
                0x00000000c00246d0                nextAPICNMI
                0x00000000c00246e0                apicNMIInfo
                0x00000000c0024760                legacyIRQFlags
                0x00000000c0024780                ioapicDiscoveryNumber
                0x00000000c00247a0                ioapicFoundInMADT
                0x00000000c00247c0                ioapicAddresses
                0x00000000c0024840                ioapicGSIBase
                0x00000000c00248c0                processorDiscoveryNumber
                0x00000000c00248e0                matchingAPICID
                0x00000000c0024900                processorID
 .bss           0x00000000c0024920       0x10 hw/cpu.32
                0x00000000c0024920                lastD
                0x00000000c0024924                lastC
                0x00000000c0024928                lastB
                0x00000000c002492c                lastA
 .bss           0x00000000c0024930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0024930        0x8 krnl/env.32
                0x00000000c0024930                Krnl::userEnv
                0x00000000c0024934                Krnl::systemEnv
 .bss           0x00000000c0024938        0x0 krnl/inlines.32
 .bss           0x00000000c0024938        0x1 krnl/panic.32
                0x00000000c0024938                KeIsKernelInPanic
 *fill*         0x00000000c0024939        0x7 
 .bss           0x00000000c0024940       0x48 krnl/powctrl.32
                0x00000000c0024940                Krnl::powCtrlOnBattery
                0x00000000c0024960                Krnl::currentPowerSettings
                0x00000000c0024984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0024988        0x0 krnl/resolve.32
 .bss           0x00000000c0024988        0x0 krnl/signal.32
 .bss           0x00000000c0024988        0x0 krnl/syscalls.32
 .bss           0x00000000c0024988        0x0 reg/registry.32
 .bss           0x00000000c0024988        0x0 sys/eject.32
 .bss           0x00000000c0024988        0x0 sys/exit.32
 .bss           0x00000000c0024988        0x0 sys/getcwd.32
 .bss           0x00000000c0024988        0x0 sys/getpid.32
 .bss           0x00000000c0024988        0x0 sys/getramdata.32
 .bss           0x00000000c0024988        0x0 sys/getvgaptr.32
 .bss           0x00000000c0024988        0x0 sys/loaddll.32
 .bss           0x00000000c0024988        0x0 sys/read.32
 .bss           0x00000000c0024988        0x0 sys/registersignal.32
 .bss           0x00000000c0024988        0x0 sys/sbrk.32
 .bss           0x00000000c0024988        0x0 sys/setcwd.32
 .bss           0x00000000c0024988        0x0 sys/settime.32
 .bss           0x00000000c0024988        0x0 sys/timezone.32
 .bss           0x00000000c0024988        0x0 sys/write.32
 .bss           0x00000000c0024988        0x0 sys/wsbe.32
 .bss           0x00000000c0024988        0x0 sys/yield.32
 *fill*         0x00000000c0024988       0x18 
 .bss           0x00000000c00249a0      0x7a4 thr/elf.32
                0x00000000c00249a0                Thr::driverLookupNext
                0x00000000c00249c0                Thr::driverLookupLen
                0x00000000c0024bc0                Thr::driverLookupAddr
                0x00000000c0024dc0                Thr::driverNameLookup
                0x00000000c0024fc0                Thr::kernelSymbols
                0x00000000c0025040                Thr::kernelStringTable
                0x00000000c00250c0                Thr::kernelSymbolTable
                0x00000000c0025140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0025144        0x4 
 .bss           0x00000000c0025148       0x68 thr/prcssthr.32
                0x00000000c0025148                cleanerThread
                0x00000000c002514c                weNeedTheCleanerToNotBlock
                0x00000000c0025150                retValLockStuff
                0x00000000c0025154                retValSchedLock
                0x00000000c0025158                lockStuffLock
                0x00000000c002515c                schedulerLock
                0x00000000c0025160                taskSwitchesPostponedFlag
                0x00000000c0025164                postponeTaskSwitchesCounter
                0x00000000c0025168                irqDisableCounter
                0x00000000c002516c                terminatedTaskList
                0x00000000c0025178                sleepingTaskList
                0x00000000c0025184                taskList
                0x00000000c0025190                kernelProcess
 *fill*         0x00000000c00251b0       0x10 
 .bss           0x00000000c00251c0       0x40 vm86/vm8086.32
                0x00000000c00251c0                Vm::vmRetV
                0x00000000c00251c4                Vm::vmDone
                0x00000000c00251c5                Vm::vmReady
                0x00000000c00251c8                Vm::vm86Thread
                0x00000000c00251cc                Vm::vmToHostCommsPtr
                0x00000000c00251e0                Vm::vmToHostComms
 .bss           0x00000000c0025200       0x14 arch/i386/hal.32
                0x00000000c0025200                apic
                0x00000000c0025204                fpuOwner
                0x00000000c0025208                coproLoadFunc
                0x00000000c002520c                coproSaveFunc
                0x00000000c0025210                gpFaultIntercept
 .bss           0x00000000c0025214        0x0 arch/i386/pic.32
 .bss           0x00000000c0025214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0025216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0025216        0xa 
 .bss           0x00000000c0025220       0xf0 fs/fat/vfslink.32
                0x00000000c0025220                FAT::fats
                0x00000000c0025240                FAT::vfsToFatRemaps
                0x00000000c00252c0                fatToVFSRemaps
 .bss           0x00000000c0025310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0025310       0x10 
 .bss           0x00000000c0025320      0x820 fs/iso9660/vfslink.32
                0x00000000c0025320                iso9660Owner
                0x00000000c0025324                recentSector
                0x00000000c0025340                recentBuffer
 .bss           0x00000000c0025b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0025b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0025b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0025b40        0xd hw/bus/pci.32
                0x00000000c0025b40                thePCI
 .bss           0x00000000c0025b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0025b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0025b4d        0x3 
 .bss           0x00000000c0025b50        0x8 hw/diskphys/ata.32
                0x00000000c0025b50                ataSectorsWritten
                0x00000000c0025b54                ataSectorsRead
 .bss           0x00000000c0025b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0025b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0025b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0025b58        0x8 
 .bss           0x00000000c0025b60       0x41 hw/intctrl/apic.32
                0x00000000c0025b60                noOfIOAPICs
                0x00000000c0025b80                ioapics
                0x00000000c0025ba0                IOAPICsSetupYet
 .bss           0x00000000c0025ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0025ba1        0x3 
 .bss           0x00000000c0025ba4        0x4 hw/timer/pit.32
                0x00000000c0025ba4                pitFreq
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0025ba8        0x0 crtn.32
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0025ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002a74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
