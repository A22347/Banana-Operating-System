Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c3da
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 *fill*         0x00000000c0001afb        0x1 
 .text          0x00000000c0001afc      0x1f2 libk/ctype.32
                0x00000000c0001afc                isblank
                0x00000000c0001b1c                iscntrl
                0x00000000c0001b3c                isdigit
                0x00000000c0001b58                islower
                0x00000000c0001b74                isspace
                0x00000000c0001b9c                isupper
                0x00000000c0001bb8                isalpha
                0x00000000c0001be8                isalnum
                0x00000000c0001c18                ispunct
                0x00000000c0001c58                isgraph
                0x00000000c0001c88                isprint
                0x00000000c0001cb0                isxdigit
 .text          0x00000000c0001cee        0x0 libk/string.32
 .text          0x00000000c0001cee       0x51 fs/fat/diskio.32
                0x00000000c0001cee                disk_status
                0x00000000c0001cf1                disk_initialize
                0x00000000c0001cf4                disk_read
                0x00000000c0001d0a                disk_write
                0x00000000c0001d20                disk_ioctl
 .text          0x00000000c0001d3f     0x3d4b fs/fat/ff.32
                0x00000000c0003adb                f_mount
                0x00000000c0003b3d                f_open
                0x00000000c0003e08                f_read
                0x00000000c0004007                f_write
                0x00000000c000423b                f_sync
                0x00000000c00042f0                f_close
                0x00000000c000431f                f_lseek
                0x00000000c00044c6                f_opendir
                0x00000000c0004591                f_closedir
                0x00000000c00045b3                f_readdir
                0x00000000c0004645                f_stat
                0x00000000c00046c4                f_getfree
                0x00000000c00047c6                f_truncate
                0x00000000c00048aa                f_unlink
                0x00000000c00049cc                f_mkdir
                0x00000000c0004b67                f_rename
                0x00000000c0004d1d                f_chmod
                0x00000000c0004dc6                f_utime
                0x00000000c0004e74                f_getlabel
                0x00000000c0004fc5                f_setlabel
                0x00000000c0005155                f_expand
                0x00000000c00052b5                f_mkfs
 *fill*         0x00000000c0005a8a        0x2 
 .text          0x00000000c0005a8c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a8c                ff_memalloc
                0x00000000c0005aa4                ff_memfree
 *fill*         0x00000000c0005abb        0x1 
 .text          0x00000000c0005abc      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005abc                ff_uni2oem
                0x00000000c0005b5c                ff_oem2uni
                0x00000000c0005bd4                ff_wtoupper
 .text          0x00000000c0005d64     0x115b fs/iso9660/iso9660.32
                0x00000000c0006064                isoReadDiscSector
                0x00000000c0006145                strnicmp
                0x00000000c00064a8                stricmp
                0x00000000c0006502                iso_open
                0x00000000c00065e2                iso_close
                0x00000000c00065fd                iso_read
                0x00000000c00067fb                iso_seek
                0x00000000c00068d9                iso_tell
                0x00000000c0006936                iso_total
                0x00000000c000697f                fn_postprocess
                0x00000000c00069ce                iso_readdir
                0x00000000c0006c98                iso_reset
                0x00000000c0006ca8                init_percd
                0x00000000c0006dad                iso_ioctl
                0x00000000c0006db8                fs_iso9660_init
                0x00000000c0006e47                fs_iso9660_shutdown
 .text          0x00000000c0006ebf       0x94 compat/inlines.32
                0x00000000c0006ebf                CPU::current()
                0x00000000c0006ecb                operator new(unsigned long)
                0x00000000c0006ed0                operator delete(void*)
                0x00000000c0006ed5                disableIRQs()
                0x00000000c0006ed7                enableIRQs()
                0x00000000c0006ed9                lockScheduler()
                0x00000000c0006ee1                unlockScheduler()
                0x00000000c0006ef0                lockStuff()
                0x00000000c0006efe                unlockStuff()
                0x00000000c0006f38                Virt::getAKernelVAS()
                0x00000000c0006f3e                __not_memcpy
 *fill*         0x00000000c0006f53        0x1 
 .text          0x00000000c0006f54      0x118 compat/resolve.32
                0x00000000c0006f54                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c000706c      0x68b core/computer.32
                0x00000000c000706c                Computer::close(int, int, void*)
                0x00000000c00070b1                Krnl::firstTask()
                0x00000000c00071ea                Computer::Computer()
                0x00000000c00071ea                Computer::Computer()
                0x00000000c000729c                Computer::setBootMessage(char const*)
                0x00000000c000729e                Computer::detectFeatures()
                0x00000000c00074a8                Computer::displayFeatures()
                0x00000000c00074aa                Computer::rdmsr(unsigned int)
                0x00000000c00074d6                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000750e                Computer::shutdown()
                0x00000000c0007526                Computer::restart()
                0x00000000c000753e                Computer::sleep()
                0x00000000c0007552                Computer::nmiEnabled()
                0x00000000c000755e                Computer::readCMOS(unsigned char)
                0x00000000c0007578                Computer::enableNMI(bool)
                0x00000000c0007590                Computer::open(int, int, void*)
                0x00000000c0007664                Computer::disableNMI()
                0x00000000c0007674                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0007692                Computer::handleNMI()
 *fill*         0x00000000c00076f7        0x1 
 .text          0x00000000c00076f8      0x1cf core/gdt.32
                0x00000000c00076f8                GDTEntry::setBase(unsigned int)
                0x00000000c0007714                GDTEntry::setLimit(unsigned int)
                0x00000000c0007732                GDT::GDT()
                0x00000000c0007732                GDT::GDT()
                0x00000000c0007748                GDT::addEntry(GDTEntry)
                0x00000000c000776a                GDT::getNumberOfEntries()
                0x00000000c0007772                GDT::flush()
                0x00000000c0007794                GDT::setup()
 .text          0x00000000c00078c7       0x19 core/idle.32
                0x00000000c00078c7                idleFunction(void*)
 .text          0x00000000c00078e0      0x464 core/idt.32
                0x00000000c00078e0                IDTEntry::IDTEntry(bool)
                0x00000000c00078e0                IDTEntry::IDTEntry(bool)
                0x00000000c0007952                IDTEntry::setOffset(unsigned int)
                0x00000000c0007968                IDT::IDT()
                0x00000000c0007968                IDT::IDT()
                0x00000000c000796a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0007972                IDT::addEntry(IDTEntry, int)
                0x00000000c000798c                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00079c4                IDT::flush()
                0x00000000c00079de                IDT::setup()
 .text          0x00000000c0007d44      0x183 core/kheap.32
                0x00000000c0007d44                sbrk
                0x00000000c0007dd9                mmap
                0x00000000c0007def                munmap
                0x00000000c0007e05                liballoc_lock()
                0x00000000c0007e12                liballoc_unlock()
                0x00000000c0007e26                liballoc_alloc(int)
                0x00000000c0007e3e                liballoc_free(void*, int)
                0x00000000c0007e59                realloc
                0x00000000c0007e6d                malloc
                0x00000000c0007e7d                free
                0x00000000c0007e8d                rfree
                0x00000000c0007e9d                calloc
 .text          0x00000000c0007ec7      0x1b4 core/main.32
                0x00000000c0007ec7                Krnl::setBootMessage(char const*)
                0x00000000c0007f33                kernel_main
 .text          0x00000000c000807b      0x5dc core/physmgr.32
                0x00000000c000807b                Phys::allocateDMA(unsigned long)
                0x00000000c0008152                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0008185                Phys::setPageState(unsigned long, bool)
                0x00000000c00081b7                Phys::getPageState(unsigned long)
                0x00000000c00081d8                Phys::freePage(unsigned long)
                0x00000000c000823a                Phys::allocatePage()
                0x00000000c00082f8                Phys::allocateContiguousPages(int)
                0x00000000c0008354                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000838c                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008657        0x1 
 .text          0x00000000c0008658      0x273 core/pipe.32
                0x00000000c0008658                Pipe::isAtty()
                0x00000000c000865c                Pipe::~Pipe()
                0x00000000c000865c                Pipe::~Pipe()
                0x00000000c0008680                Pipe::~Pipe()
                0x00000000c00086a8                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008768                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008864                Pipe::Pipe(int)
                0x00000000c0008864                Pipe::Pipe(int)
 *fill*         0x00000000c00088cb        0x1 
 .text          0x00000000c00088cc      0xa1e core/terminal.32
                0x00000000c00088cc                VgaText::isAtty()
                0x00000000c00088d0                VgaText::~VgaText()
                0x00000000c00088d0                VgaText::~VgaText()
                0x00000000c00088f4                VgaText::~VgaText()
                0x00000000c000891e                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000893e                setTerminalScrollLock(bool)
                0x00000000c000893f                doTerminalCycle()
                0x00000000c0008940                addToTerminalCycle(VgaText*)
                0x00000000c0008941                scrollTerminalScrollLock(int)
                0x00000000c0008942                VgaText::updateTitle()
                0x00000000c0008944                VgaText::load()
                0x00000000c0008946                VgaText::updateCursor()
                0x00000000c000895c                VgaText::doANSI_SGR(int)
                0x00000000c00089d0                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00089e0                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00089f0                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0008a10                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008a1c                VgaText::setTitleColour(VgaColour)
                0x00000000c0008a28                VgaText::setTitle(char*)
                0x00000000c0008a2a                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008a3c                VgaText::scrollScreen()
                0x00000000c0008ad4                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008ae6                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008b76                VgaText::getCursorX()
                0x00000000c0008b7e                VgaText::getCursorY()
                0x00000000c0008b86                VgaText::setCursor(int, int)
                0x00000000c0008b9d                setActiveTerminal(VgaText*)
                0x00000000c0008be8                VgaText::clearScreen()
                0x00000000c0008c36                VgaText::setCursorX(int)
                0x00000000c0008c4e                VgaText::setCursorY(int)
                0x00000000c0008c66                VgaText::incrementCursor(bool)
                0x00000000c0008cba                VgaText::decrementCursor(bool)
                0x00000000c0008cdc                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008daa                VgaText::putchar(char)
                0x00000000c0008e96                VgaText::putx(unsigned int)
                0x00000000c0008edc                VgaText::puts(char const*)
                0x00000000c0008f02                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008f4e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00090a0                VgaText::VgaText(char const*)
                0x00000000c00090a0                VgaText::VgaText(char const*)
                0x00000000c00091ec                VgaText::receiveKey(unsigned char)
                0x00000000c00092c4                VgaText::doUpdate()
                0x00000000c00092c5                newTerminal(char*)
 *fill*         0x00000000c00092ea        0x2 
 .text          0x00000000c00092ec      0x1a1 core/tss.32
                0x00000000c00092ec                TSS::TSS()
                0x00000000c00092ec                TSS::TSS()
                0x00000000c00092fc                TSS::setESP(unsigned long)
                0x00000000c0009310                TSS::flush()
                0x00000000c0009330                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000948d        0x1 
 .text          0x00000000c000948e      0x4c2 core/unixfile.32
                0x00000000c000948e                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00094e4                ReservedFilename::isAtty()
                0x00000000c0009500                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000955e                UnixFile::getFileDescriptor()
                0x00000000c0009566                UnixFile::UnixFile(int)
                0x00000000c0009566                UnixFile::UnixFile(int)
                0x00000000c0009716                ReservedFilename::ReservedFilename(int)
                0x00000000c0009716                ReservedFilename::ReservedFilename(int)
                0x00000000c0009748                UnixFile::~UnixFile()
                0x00000000c0009748                UnixFile::~UnixFile()
                0x00000000c00097e0                UnixFile::~UnixFile()
                0x00000000c0009808                ReservedFilename::~ReservedFilename()
                0x00000000c0009808                ReservedFilename::~ReservedFilename()
                0x00000000c000982c                ReservedFilename::~ReservedFilename()
                0x00000000c0009853                getFromFileDescriptor(int)
 .text          0x00000000c0009950     0x1166 core/virtmgr.32
                0x00000000c0009950                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009985                Virt::getPageState(unsigned long)
                0x00000000c00099a9                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009aba                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009ad8                Virt::swapIDToSector(unsigned long)
                0x00000000c0009aea                Virt::allocateSwapfilePage()
                0x00000000c0009b68                Virt::virtualMemorySetup()
                0x00000000c0009bb3                Virt::setupPageSwapping(int)
                0x00000000c0009c24                VAS::VAS()
                0x00000000c0009c24                VAS::VAS()
                0x00000000c0009c60                VAS::VAS(VAS*)
                0x00000000c0009c60                VAS::VAS(VAS*)
                0x00000000c0009c8e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009cba                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009cd9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009dfe                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009e22                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009e3c                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009e7c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009eb0                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009eda                VAS::~VAS()
                0x00000000c0009eda                VAS::~VAS()
                0x00000000c000a03e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000a142                VAS::allocatePages(int, int)
                0x00000000c000a31a                VAS::setCPUSpecific(unsigned long)
                0x00000000c000a338                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a3fe                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a4ec                VAS::VAS(bool)
                0x00000000c000a4ec                VAS::VAS(bool)
                0x00000000c000a76c                VAS::evict(unsigned long)
                0x00000000c000a82e                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a91c                VAS::scanForEviction()
                0x00000000c000a9fc                mapVASFirstTime
 .text          0x00000000c000aab6       0x5f coreobjs/c++.32
                0x00000000c000aab6                __cxa_atexit
                0x00000000c000aab9                __cxa_finalize
                0x00000000c000aaba                __stack_chk_fail
                0x00000000c000aaf0                __cxa_pure_virtual
                0x00000000c000ab01                operator new[](unsigned long)
                0x00000000c000ab06                operator delete(void*, unsigned long)
                0x00000000c000ab0b                operator delete[](void*)
                0x00000000c000ab10                operator delete[](void*, unsigned long)
 .text          0x00000000c000ab15      0x21c dbg/kconsole.32
                0x00000000c000ab15                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ab80                Dbg::logc(char)
                0x00000000c000aba0                Dbg::logs(char*)
                0x00000000c000abbd                Dbg::logWriteInt(unsigned int)
                0x00000000c000abdb                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000abfc                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000ad31        0x1 
 .text          0x00000000c000ad32      0xc5c fs/vfs.32
                0x00000000c000ad32                File::read(unsigned long long, void*, int*)
                0x00000000c000ad8a                File::write(unsigned long long, void*, int*)
                0x00000000c000ade2                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ae3a                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ae68                File::isAtty()
                0x00000000c000ae6c                Directory::isAtty()
                0x00000000c000ae70                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ae76                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ae7c                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ae82                File::~File()
                0x00000000c000ae82                File::~File()
                0x00000000c000aea6                File::~File()
                0x00000000c000aed0                Directory::~Directory()
                0x00000000c000aed0                Directory::~Directory()
                0x00000000c000aef4                Directory::~Directory()
                0x00000000c000af1e                Filesystem::Filesystem()
                0x00000000c000af1e                Filesystem::Filesystem()
                0x00000000c000af42                Filesystem::~Filesystem()
                0x00000000c000af42                Filesystem::~Filesystem()
                0x00000000c000af50                Filesystem::~Filesystem()
                0x00000000c000af74                Fs::getcwd(Process*, char*, int)
                0x00000000c000af9e                Fs::initVFS()
                0x00000000c000afc8                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b172                File::File(char const*, Process*)
                0x00000000c000b172                File::File(char const*, Process*)
                0x00000000c000b232                File::open(FileOpenMode)
                0x00000000c000b290                File::close()
                0x00000000c000b2f0                File::seek(unsigned long long)
                0x00000000c000b346                File::tell(unsigned long long*)
                0x00000000c000b396                File::rewind()
                0x00000000c000b3aa                File::unlink()
                0x00000000c000b3f6                File::rename(char const*)
                0x00000000c000b444                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b4a0                File::exists()
                0x00000000c000b4de                File::stat(unsigned long long*, bool*)
                0x00000000c000b53f                Fs::setcwd(Process*, char*)
                0x00000000c000b69c                Directory::Directory(char const*, Process*)
                0x00000000c000b69c                Directory::Directory(char const*, Process*)
                0x00000000c000b75c                Directory::open()
                0x00000000c000b7b8                Directory::close()
                0x00000000c000b818                Directory::unlink()
                0x00000000c000b864                Directory::rename(char const*)
                0x00000000c000b8b2                Directory::exists()
                0x00000000c000b8f0                Directory::read(dirent*)
                0x00000000c000b93c                Directory::create()
                0x00000000c000b988                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b98e        0x2 
 .text          0x00000000c000b990       0x86 hal/bus.32
                0x00000000c000b990                Bus::Bus(char const*)
                0x00000000c000b990                Bus::Bus(char const*)
                0x00000000c000b9c8                Bus::~Bus()
                0x00000000c000b9c8                Bus::~Bus()
                0x00000000c000b9ec                Bus::~Bus()
 .text          0x00000000c000ba16       0x96 hal/buzzer.32
                0x00000000c000ba16                beepThread(void*)
                0x00000000c000ba53                Krnl::beep(int, int, bool)
 .text          0x00000000c000baac      0x46d hal/clock.32
                0x00000000c000baac                User::loadClockSettings(int)
                0x00000000c000bafe                Clock::Clock(char const*)
                0x00000000c000bafe                Clock::Clock(char const*)
                0x00000000c000bb34                Clock::~Clock()
                0x00000000c000bb34                Clock::~Clock()
                0x00000000c000bb58                Clock::~Clock()
                0x00000000c000bb82                Clock::timeInSecondsLocal()
                0x00000000c000bbca                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000bc23                datetimeToSeconds(datetime_t)
                0x00000000c000bd50                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bdb0                secondsToDatetime(unsigned long long)
                0x00000000c000bef4                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bf19        0x1 
 .text          0x00000000c000bf1a      0x464 hal/device.32
                0x00000000c000bf1a                Device::hibernate()
                0x00000000c000bf1c                Device::wake()
                0x00000000c000bf1e                Device::detect()
                0x00000000c000bf20                Device::disableLegacy()
                0x00000000c000bf22                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bf24                DriverlessDevice::close(int, int, void*)
                0x00000000c000bf28                DriverlessDevice::detect()
                0x00000000c000bf2a                DriverlessDevice::open(int, int, void*)
                0x00000000c000bf3e                Device::~Device()
                0x00000000c000bf3e                Device::~Device()
                0x00000000c000bf4c                Device::~Device()
                0x00000000c000bf74                Device::findAndLoadDriver()
                0x00000000c000bf82                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bfa8                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bfe8                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c012                Device::getParent()
                0x00000000c000c01e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c03c                Device::addChild(Device*)
                0x00000000c000c080                Device::removeAllChildren()
                0x00000000c000c0c6                Device::hibernateAll()
                0x00000000c000c0f6                Device::wakeAll()
                0x00000000c000c126                Device::detectAll()
                0x00000000c000c156                Device::disableLegacyAll()
                0x00000000c000c158                Device::loadDriversForAll()
                0x00000000c000c15a                Device::closeAll()
                0x00000000c000c190                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c1c6                Device::setName(char const*)
                0x00000000c000c1d4                Device::Device(char const*)
                0x00000000c000c1d4                Device::Device(char const*)
                0x00000000c000c2d0                Device::getName()
                0x00000000c000c2da                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c2da                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c310                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c354                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c37e        0x2 
 .text          0x00000000c000c380       0x86 hal/diskctrl.32
                0x00000000c000c380                HardDiskController::HardDiskController(char const*)
                0x00000000c000c380                HardDiskController::HardDiskController(char const*)
                0x00000000c000c3b8                HardDiskController::~HardDiskController()
                0x00000000c000c3b8                HardDiskController::~HardDiskController()
                0x00000000c000c3dc                HardDiskController::~HardDiskController()
 .text          0x00000000c000c406       0xe2 hal/diskphys.32
                0x00000000c000c406                PhysicalDisk::eject()
                0x00000000c000c40a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c40a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c472                PhysicalDisk::startCache()
                0x00000000c000c49a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c49a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c4be                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c4e8        0x0 hal/fpu.32
 .text          0x00000000c000c4e8      0x35d hal/intctrl.32
                0x00000000c000c4e8                int_handler
                0x00000000c000c570                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c5b8                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c6f0                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c724                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c7a3                setupINTS()
                0x00000000c000c800                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c845        0x1 
 .text          0x00000000c000c846      0x78c hal/keybrd.32
                0x00000000c000c846                startGUI(void*)
                0x00000000c000c8b2                startGUIVESA(void*)
                0x00000000c000c91e                sendKeyToTerminal(unsigned char)
                0x00000000c000c9e1                sendKeyboardToken(KeyboardToken)
                0x00000000c000ce21                clearInternalKeybuffer(VgaText*)
                0x00000000c000ce56                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000cf48                Keyboard::Keyboard(char const*)
                0x00000000c000cf48                Keyboard::Keyboard(char const*)
                0x00000000c000cf84                Keyboard::~Keyboard()
                0x00000000c000cf84                Keyboard::~Keyboard()
                0x00000000c000cfa8                Keyboard::~Keyboard()
 .text          0x00000000c000cfd2      0x3ea hal/logidisk.32
                0x00000000c000cfd2                LogicalDisk::close(int, int, void*)
                0x00000000c000cfd6                LogicalDisk::~LogicalDisk()
                0x00000000c000cfd6                LogicalDisk::~LogicalDisk()
                0x00000000c000cffa                LogicalDisk::~LogicalDisk()
                0x00000000c000d024                LogicalDisk::open(int, int, void*)
                0x00000000c000d038                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d070                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d0b6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d0b6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d16c                LogicalDisk::assignDriveLetter()
                0x00000000c000d222                LogicalDisk::mount()
                0x00000000c000d26a                LogicalDisk::unmount()
                0x00000000c000d27a                LogicalDisk::eject()
                0x00000000c000d28e                LogicalDisk::unassignDriveLetter()
                0x00000000c000d2e4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d350                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000d3bc       0x86 hal/mouse.32
                0x00000000c000d3bc                Mouse::Mouse(char const*)
                0x00000000c000d3bc                Mouse::Mouse(char const*)
                0x00000000c000d3f4                Mouse::~Mouse()
                0x00000000c000d3f4                Mouse::~Mouse()
                0x00000000c000d418                Mouse::~Mouse()
 .text          0x00000000c000d442      0x339 hal/partition.32
                0x00000000c000d442                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d4ea                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d77b        0x1 
 .text          0x00000000c000d77c       0x86 hal/serial.32
                0x00000000c000d77c                Serial::Serial(char const*)
                0x00000000c000d77c                Serial::Serial(char const*)
                0x00000000c000d7b4                Serial::~Serial()
                0x00000000c000d7b4                Serial::~Serial()
                0x00000000c000d7d8                Serial::~Serial()
 *fill*         0x00000000c000d802        0x2 
 .text          0x00000000c000d804      0x234 hal/timer.32
                0x00000000c000d804                Timer::Timer(char const*)
                0x00000000c000d804                Timer::Timer(char const*)
                0x00000000c000d83c                Timer::~Timer()
                0x00000000c000d83c                Timer::~Timer()
                0x00000000c000d860                Timer::~Timer()
                0x00000000c000d88a                Timer::read()
                0x00000000c000d895                setupTimer(int)
                0x00000000c000d8d0                timerHandler(unsigned int)
 .text          0x00000000c000da38      0x43e hal/vcache.32
                0x00000000c000da38                VCache::VCache(PhysicalDisk*)
                0x00000000c000da38                VCache::VCache(PhysicalDisk*)
                0x00000000c000dba0                VCache::invalidateReadBuffer()
                0x00000000c000dbb0                VCache::writeWriteBuffer()
                0x00000000c000dbfc                VCache::~VCache()
                0x00000000c000dbfc                VCache::~VCache()
                0x00000000c000dc50                VCache::~VCache()
                0x00000000c000dc78                VCache::write(unsigned long long, int, void*)
                0x00000000c000dd72                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000de76      0x4b3 hal/video.32
                0x00000000c000de76                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000dec2                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000df32                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000dfb0                Video::clearScreen(unsigned int)
                0x00000000c000dfe4                Video::putpixel(int, int, unsigned int)
                0x00000000c000dff2                Video::Video(char const*)
                0x00000000c000dff2                Video::Video(char const*)
                0x00000000c000e028                Video::~Video()
                0x00000000c000e028                Video::~Video()
                0x00000000c000e04c                Video::~Video()
                0x00000000c000e076                Video::isMonochrome()
                0x00000000c000e082                Video::getWidth()
                0x00000000c000e08e                Video::getHeight()
                0x00000000c000e09a                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000e156                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e2be                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e329        0x3 
 .text          0x00000000c000e32c     0x1307 hw/acpi.32
                0x00000000c000e32c                ACPI::close(int, int, void*)
                0x00000000c000e3e4                findRSDP()
                0x00000000c000e474                loadACPITables(unsigned char*)
                0x00000000c000e6d8                findRSDT(unsigned char*)
                0x00000000c000e828                findDataTable(unsigned char*, char*)
                0x00000000c000e8a0                scanMADT()
                0x00000000c000ed74                ACPI::ACPI()
                0x00000000c000ed74                ACPI::ACPI()
                0x00000000c000edc8                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000eeb0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef78                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef80                ACPI::detectPCI()
                0x00000000c000f188                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f1dc                ACPI::sleep()
                0x00000000c000f1f8                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f633        0x1 
 .text          0x00000000c000f634      0xb95 hw/cpu.32
                0x00000000c000f634                CPU::close(int, int, void*)
                0x00000000c000f638                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f654                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f66c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f6e0                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f764                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f792                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f7c0                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f7ee                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f81c                CPU::CPU()
                0x00000000c000f81c                CPU::CPU()
                0x00000000c000f8aa                CPU::displayFeatures()
                0x00000000c000f8ac                CPU::detectFeatures()
                0x00000000c000ff70                CPU::setupSMEP()
                0x00000000c000ff7c                CPU::setupUMIP()
                0x00000000c000ff86                CPU::setupTSC()
                0x00000000c000ff90                CPU::setupLargePages()
                0x00000000c000ff9a                CPU::setupPAT()
                0x00000000c000ffd6                CPU::setupMTRR()
                0x00000000c000ffd8                CPU::setupGlobalPages()
                0x00000000c000ffe2                CPU::allowUsermodeDataAccess()
                0x00000000c000fff4                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010006                CPU::setupSMAP()
                0x00000000c0010014                CPU::setupFeatures()
                0x00000000c00100e0                CPU::open(int, int, void*)
 *fill*         0x00000000c00101c9        0x1 
 .text          0x00000000c00101ca      0x581 krnl/env.32
                0x00000000c00101ca                EnvVarContainer::getEnv(char const*)
                0x00000000c0010208                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00102ca                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00102cc                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00104b2                EnvVarContainer::__loadSystem()
                0x00000000c00104cc                EnvVarContainer::__loadUser()
                0x00000000c00104ce                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104ce                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104f0                EnvVarContainer::~EnvVarContainer()
                0x00000000c00104f0                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010520                Krnl::getEnv(Process*, char const*)
                0x00000000c0010585                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001059f                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00105be                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00105d1                Krnl::deleteEnvSystem(char const*)
                0x00000000c00105d2                Krnl::deleteEnvUser(char const*)
                0x00000000c00105d3                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00105d4                Krnl::newProcessEnv(Process*)
                0x00000000c00105f6                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010642                Krnl::loadSystemEnv()
                0x00000000c0010670                Krnl::loadUserEnv()
                0x00000000c0010696                Krnl::flushEnv()
                0x00000000c0010697                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00106b7                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001074b      0x108 krnl/panic.32
                0x00000000c001074b                Krnl::panic(char const*)
 .text          0x00000000c0010853      0x142 krnl/powctrl.32
                0x00000000c0010853                Krnl::powerThread(void*)
                0x00000000c0010881                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010897                Krnl::userIOReceived()
                0x00000000c00108a2                Krnl::handlePowerButton()
                0x00000000c00108d7                Krnl::handleSleepButton()
                0x00000000c001090c                Krnl::setupPowerManager()
 .text          0x00000000c0010995      0x50e reg/registry.32
                0x00000000c0010995                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0010aed                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0010c42                Reg::getLine(char*, char*, char*)
                0x00000000c0010c79                Reg::readInt(char*, char*, int*)
                0x00000000c0010d64                Reg::readString(char*, char*, char*, int)
                0x00000000c0010de5                Reg::readBool(char*, char*, bool*)
                0x00000000c0010e0a                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0010e36                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0010e62                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0010ea3       0x36 sys/sc_eject.32
                0x00000000c0010ea3                Sys::eject(regs*)
 .text          0x00000000c0010ed9       0x18 sys/sc_exit.32
                0x00000000c0010ed9                Sys::exit(regs*)
 .text          0x00000000c0010ef1       0x1f sys/sc_getcwd.32
                0x00000000c0010ef1                Sys::getCwd(regs*)
 .text          0x00000000c0010f10        0xc sys/sc_getpid.32
                0x00000000c0010f10                Sys::getPID(regs*)
 .text          0x00000000c0010f1c       0x1a sys/sc_getramdata.32
                0x00000000c0010f1c                Sys::getRAMData(regs*)
 .text          0x00000000c0010f36       0x82 sys/sc_getvgaptr.32
                0x00000000c0010f36                Sys::getVGAPtr(regs*)
 .text          0x00000000c0010fb8       0xa8 sys/sc_loaddll.32
                0x00000000c0010fb8                Sys::loadDLL(regs*)
 .text          0x00000000c0011060       0x68 sys/sc_read.32
                0x00000000c0011060                Sys::read(regs*)
 .text          0x00000000c00110c8       0x55 sys/sc_sbrk.32
                0x00000000c00110c8                Sys::sbrk(regs*)
 .text          0x00000000c001111d       0x1c sys/sc_setcwd.32
                0x00000000c001111d                Sys::setCwd(regs*)
 .text          0x00000000c0011139       0x95 sys/sc_settime.32
                0x00000000c0011139                Sys::setTime(regs*)
 .text          0x00000000c00111ce       0x4a sys/sc_timezone.32
                0x00000000c00111ce                Sys::timezone(regs*)
 .text          0x00000000c0011218       0x68 sys/sc_write.32
                0x00000000c0011218                Sys::write(regs*)
 .text          0x00000000c0011280       0x62 sys/sc_wsbe.32
                0x00000000c0011280                Sys::wsbe(regs*)
 .text          0x00000000c00112e2       0x25 sys/sc_yield.32
                0x00000000c00112e2                Sys::yield(regs*)
 .text          0x00000000c0011307      0xe2c sys/syscalls.32
                0x00000000c0011307                sysCallSeekDir(regs*)
                0x00000000c001130c                sysCallTellDir(regs*)
                0x00000000c0011311                sysCallVerify(regs*)
                0x00000000c001131b                sysCallGetArgc(regs*)
                0x00000000c001132b                sysCallTTYName(regs*)
                0x00000000c0011333                sysFormatDisk(regs*)
                0x00000000c00113a0                sysSetDiskVolumeLabel(regs*)
                0x00000000c00113ea                sysGetDiskVolumeLabel(regs*)
                0x00000000c001143f                sysShutdown(regs*)
                0x00000000c001149d                sysCallRealpath(regs*)
                0x00000000c00114e0                sysCallReadDir(regs*)
                0x00000000c0011560                sysCallIsATTY(regs*)
                0x00000000c00115bc                sysCallSeek(regs*)
                0x00000000c0011615                sysCallTell(regs*)
                0x00000000c0011684                sysCallSize(regs*)
                0x00000000c00116f9                sysCallSizeFromFilename(regs*)
                0x00000000c00117ac                sysCallClose(regs*)
                0x00000000c001180c                sysCallOpenDir(regs*)
                0x00000000c0011883                sysCallCloseDir(regs*)
                0x00000000c00118d7                sysCallMakeDir(regs*)
                0x00000000c0011949                sysCallWait(regs*)
                0x00000000c0011966                sysCallNotImpl(regs*)
                0x00000000c0011981                sysPanic(regs*)
                0x00000000c001199c                sysCallRmdir(regs*)
                0x00000000c0011a03                sysCallUnlink(regs*)
                0x00000000c0011a6a                sysCallGetArgv(regs*)
                0x00000000c0011ab7                sysCallUSleep(regs*)
                0x00000000c0011ae0                sysCallSpawn(regs*)
                0x00000000c0011b49                sysCallGetEnv(regs*)
                0x00000000c0011bf8                sysSetFatAttrib(regs*)
                0x00000000c0011c6f                sysPipe(regs*)
                0x00000000c0011cb4                sysGetUnixTime(regs*)
                0x00000000c0011cc8                string_ends_with(char const*, char const*)
                0x00000000c0011d12                sysCallOpen(regs*)
                0x00000000c0011f06                Sys::loadSyscalls()
                0x00000000c00120f1                Sys::systemCall(regs*, void*)
 .text          0x00000000c0012133     0x11e5 thr/elf.32
                0x00000000c0012133                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00123bf                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00125d5                Thr::runtimeReferenceHelper()
                0x00000000c00125e8                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0012637                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00128f5                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001302b                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001305d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0013094                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00130ae                Thr::loadDLL(char const*, bool)
                0x00000000c00132df                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0013318     0x12c5 thr/prcssthr.32
                0x00000000c0013318                userModeEntryPoint(void*)
                0x00000000c0013340                changeTSS
                0x00000000c0013370                switchToThread(ThreadControlBlock*)
                0x00000000c0013424                Process::addArgs(char**)
                0x00000000c0013484                Process::Process(char const*, Process*, char**)
                0x00000000c0013484                Process::Process(char const*, Process*, char**)
                0x00000000c0013674                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013674                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013830                taskStartupFunction
                0x00000000c001383c                Semaphore::Semaphore(int)
                0x00000000c001383c                Semaphore::Semaphore(int)
                0x00000000c001386c                Mutex::Mutex()
                0x00000000c001386c                Mutex::Mutex()
                0x00000000c0013880                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0013978                Process::createUserThread()
                0x00000000c0013998                setupMultitasking(void (*)())
                0x00000000c0013aa0                schedule()
                0x00000000c0013b30                Semaphore::tryAcquire()
                0x00000000c0013bfc                Semaphore::assertLocked(char const*)
                0x00000000c0013c74                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013c9c                blockTask(TaskState)
                0x00000000c0013ccc                waitTask(int, int*, int)
                0x00000000c0013d10                milliTenthSleepUntil(unsigned int)
                0x00000000c0013da0                milliTenthSleep(unsigned int)
                0x00000000c0013db0                sleep(unsigned int)
                0x00000000c0013dcc                Semaphore::acquire()
                0x00000000c0013e88                taskReturned
                0x00000000c0013ec4                Thr::processFromPID(int)
                0x00000000c0013f64                unblockTask(ThreadControlBlock*)
                0x00000000c0014008                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00142d4                cleanerTaskFunction(void*)
                0x00000000c00143c4                terminateTask(int)
                0x00000000c0014490                Thr::terminateFromIRQ(int)
                0x00000000c00144a0                Semaphore::release()
 .text          0x00000000c00145dd      0xb93 vm86/vm8086.32
                0x00000000c00145dd                Vm::inbv(unsigned short)
                0x00000000c00145f0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0014626                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0014636                Vm::getSegment(unsigned int)
                0x00000000c001463e                Vm::getOffset(unsigned int)
                0x00000000c0014643                Vm::mainloop2()
                0x00000000c001467d                Vm::mainVm8086Loop(void*)
                0x00000000c001468d                Vm::mainloop3(unsigned long)
                0x00000000c00146b3                Vm::initialise8086()
                0x00000000c00146f6                Vm::finish8086()
                0x00000000c0014757                Vm::getOutput8086(unsigned char*)
                0x00000000c001477c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014835                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001499d                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0014a27                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0014a38                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0014a4a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0014a5b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0014a70                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0014a86                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0014a9b                Vm::faultHandler(regs*)
 .text          0x00000000c0015170      0x8e9 arch/i386/hal.32
                0x00000000c0015170                noCopro(unsigned long)
                0x00000000c0015171                nmiHandler(regs*, void*)
                0x00000000c001518a                doubleFault(regs*, void*)
                0x00000000c00151a3                displayDebugInfo(regs*)
                0x00000000c00154c4                displayProgramFault(char const*)
                0x00000000c0015510                gpFault(regs*, void*)
                0x00000000c0015575                pgFault(regs*, void*)
                0x00000000c00155fb                otherISRHandler(regs*, void*)
                0x00000000c001562f                opcodeFault(regs*, void*)
                0x00000000c00156af                i386SaveCoprocessor(void*)
                0x00000000c00156c3                i386LoadCoprocessor(void*)
                0x00000000c00156d7                x87EmulHandler(regs*, void*)
                0x00000000c0015774                HalInitialiseCoprocessor()
                0x00000000c0015822                HalPanic(char const*)
                0x00000000c0015827                HalQueryPerformanceCounter()
                0x00000000c0015842                HalInitialise()
                0x00000000c00159e8                HalMakeBeep(int)
                0x00000000c0015a22                HalGetRand()
                0x00000000c0015a25                HalEndOfInterrupt(int)
                0x00000000c0015a56                HalRestart()
                0x00000000c0015a57                HalShutdown()
                0x00000000c0015a58                HalSleep()
 *fill*         0x00000000c0015a59        0x3 
 .text          0x00000000c0015a5c      0x2f4 arch/i386/pic.32
                0x00000000c0015a5c                picIoWait()
                0x00000000c0015a64                picDisable()
                0x00000000c0015a98                picGetIRQReg(int)
                0x00000000c0015b1c                picOpen()
                0x00000000c0015cac                picEOI(int)
 .text          0x00000000c0015d50      0x64d arch/i386/rtc.32
                0x00000000c0015d50                RTC::open(int, int, void*)
                0x00000000c0015d54                RTC::close(int, int, void*)
                0x00000000c0015d58                RTC::timeInSecondsUTC()
                0x00000000c0015d6a                RTC::timeInDatetimeUTC()
                0x00000000c0015d90                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015dce                RTC::~RTC()
                0x00000000c0015dce                RTC::~RTC()
                0x00000000c0015df2                RTC::~RTC()
                0x00000000c0015e1c                RTC::get_update_in_progress_flag()
                0x00000000c0015e34                RTC::completeRTCRefresh()
                0x00000000c00160ec                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001629f                rtcIRQHandler(regs*, void*)
                0x00000000c00162e4                RTC::RTC()
                0x00000000c00162e4                RTC::RTC()
 *fill*         0x00000000c001639d        0x3 
 .text          0x00000000c00163a0      0x203 arch/i386/vga.32
                0x00000000c00163a0                HalConsoleScroll(int, int)
                0x00000000c00164a8                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016514                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00165a3        0x1 
 .text          0x00000000c00165a4     0x13e7 fs/fat/vfslink.32
                0x00000000c00165a4                FAT::getName()
                0x00000000c00165ac                FAT::tell(void*, unsigned long long*)
                0x00000000c00165e8                FAT::stat(void*, unsigned long long*)
                0x00000000c0016624                FAT::~FAT()
                0x00000000c0016624                FAT::~FAT()
                0x00000000c0016648                FAT::~FAT()
                0x00000000c0016670                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016714                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00167d8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00169ac                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016bc4                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016d84                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016ef0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016f50                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016fb0                FAT::close(void*)
                0x00000000c0017004                FAT::closeDir(void*)
                0x00000000c0017058                FAT::seek(void*, unsigned long long)
                0x00000000c00170b0                fatWrapperReadDisk
                0x00000000c00170f4                fatWrapperWriteDisk
                0x00000000c0017138                fatWrapperIoctl
                0x00000000c0017254                FAT::FAT()
                0x00000000c0017254                FAT::FAT()
                0x00000000c00172a8                FAT::fixFilepath(char*)
                0x00000000c00172e4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001741c                FAT::openDir(char const*, void**)
                0x00000000c00174cc                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00175c4                FAT::unlink(char const*)
                0x00000000c0017644                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00177d0                FAT::rename(char const*, char const*)
                0x00000000c001789c                FAT::mkdir(char const*)
                0x00000000c001791c                FAT::exists(char const*)
 *fill*         0x00000000c001798b        0x1 
 .text          0x00000000c001798c       0x5c fs/iso9660/helper.32
                0x00000000c001798c                isoReadDiscSectorHelper
 .text          0x00000000c00179e8      0x56a fs/iso9660/vfslink.32
                0x00000000c00179e8                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00179ee                ISO9660::getName()
                0x00000000c00179f4                ISO9660::closeDir(void*)
                0x00000000c00179fe                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017a04                ISO9660::unlink(char const*)
                0x00000000c0017a0a                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017a10                ISO9660::rename(char const*, char const*)
                0x00000000c0017a16                ISO9660::mkdir(char const*)
                0x00000000c0017a1c                ISO9660::~ISO9660()
                0x00000000c0017a1c                ISO9660::~ISO9660()
                0x00000000c0017a40                ISO9660::~ISO9660()
                0x00000000c0017a68                ISO9660::exists(char const*)
                0x00000000c0017a7c                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017b08                ISO9660::openDir(char const*, void**)
                0x00000000c0017b88                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017bc8                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017c00                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017c36                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017c70                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017d50                ISO9660::close(void*)
                0x00000000c0017d76                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017e2e                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017eb8                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017f2a                ISO9660::ISO9660()
                0x00000000c0017f2a                ISO9660::ISO9660()
 .text          0x00000000c0017f52      0x26c hal/sound/sndcard.32
                0x00000000c0017f52                SoundCard::beginPlayback()
                0x00000000c0017f60                SoundCard::stopPlayback()
                0x00000000c0017f6e                SoundCard::SoundCard(char const*)
                0x00000000c0017f6e                SoundCard::SoundCard(char const*)
                0x00000000c001800c                SoundCard::~SoundCard()
                0x00000000c001800c                SoundCard::~SoundCard()
                0x00000000c0018030                SoundCard::~SoundCard()
                0x00000000c001805a                SoundCard::configureRates(int, int, int)
                0x00000000c001808a                SoundCard::getSamples16(int, short*)
                0x00000000c00180e6                SoundCard::getSamples32(int, int*)
                0x00000000c001816c                SoundCard::addChannel(SoundPort*)
                0x00000000c00181aa                SoundCard::removeChannel(int)
 *fill*         0x00000000c00181be        0x2 
 .text          0x00000000c00181c0      0x377 hal/sound/sndport.32
                0x00000000c00181c0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00181c0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001824c                SoundPort::~SoundPort()
                0x00000000c001824c                SoundPort::~SoundPort()
                0x00000000c0018280                SoundPort::unpause()
                0x00000000c001828c                SoundPort::pause()
                0x00000000c0018298                SoundPort::getBufferUsed()
                0x00000000c00182a0                SoundPort::getBufferSize()
                0x00000000c00182a8                SoundPort::buffer16(short*, int)
                0x00000000c0018334                SoundPort::buffer32(int*, int)
                0x00000000c00183bc                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0018480                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0018537        0x0 hw/bus/isa.32
 *fill*         0x00000000c0018537        0x1 
 .text          0x00000000c0018538      0xb49 hw/bus/pci.32
                0x00000000c0018538                PCI::open(int, int, void*)
                0x00000000c0018556                PCI::close(int, int, void*)
                0x00000000c001855a                PCI::PCI()
                0x00000000c001855a                PCI::PCI()
                0x00000000c00185f4                PCI::readBAR8(unsigned int, int)
                0x00000000c0018610                PCI::readBAR16(unsigned int, int)
                0x00000000c001862e                PCI::readBAR32(unsigned int, int)
                0x00000000c001864a                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001866a                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001868c                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c00186ac                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001871a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00187c2                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c00187e6                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001880e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018858                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0018880                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c00188a4                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c00188c8                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c00188f0                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018954                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018a3c                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018cb6                PCI::checkBus(unsigned char)
                0x00000000c0018cdc                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018e4e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018fc2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001902e                PCI::detect()
 *fill*         0x00000000c0019081        0x1 
 .text          0x00000000c0019082      0xb5a hw/diskctrl/ide.32
                0x00000000c0019082                IDE::close(int, int, void*)
                0x00000000c0019086                IDE::IDE()
                0x00000000c0019086                IDE::IDE()
                0x00000000c00190ba                IDE::prepareInterrupt(unsigned char)
                0x00000000c00190cc                selectDrive(unsigned char, unsigned char)
                0x00000000c00190ce                IDE::getBase(unsigned char)
                0x00000000c00190e0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c00191a0                IDE::read(unsigned char, unsigned char)
                0x00000000c001924e                IDE::waitInterrupt(unsigned char)
                0x00000000c00192b6                ideChannel0IRQHandler(regs*, void*)
                0x00000000c00192d2                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00192ee                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019334                IDE::open(int, int, void*)
                0x00000000c0019742                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001980e                IDE::detect()
                0x00000000c0019ace                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019b7e                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019bdc      0x32a hw/diskctrl/satabus.32
                0x00000000c0019bdc                SATABus::close(int, int, void*)
                0x00000000c0019be0                SATABus::detect()
                0x00000000c0019be2                SATABus::SATABus()
                0x00000000c0019be2                SATABus::SATABus()
                0x00000000c0019c68                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c9a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019ce2                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d02                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d2c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019e3c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019ee6                SATABus::open(int, int, void*)
 .text          0x00000000c0019f06      0x5f4 hw/diskphys/ata.32
                0x00000000c0019f06                ATA::close(int, int, void*)
                0x00000000c0019f2a                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019f2c                ATA::ATA()
                0x00000000c0019f2c                ATA::ATA()
                0x00000000c0019f5a                ATA::flush(bool)
                0x00000000c0019fa4                ATA::readyForCommand()
                0x00000000c0019ff0                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a36c                ATA::read(unsigned long long, int, void*)
                0x00000000c001a3b8                ATA::write(unsigned long long, int, void*)
                0x00000000c001a404                ATA::detectCHS()
                0x00000000c001a42e                ATA::open(int, int, void*)
 .text          0x00000000c001a4fa      0x60e hw/diskphys/atapi.32
                0x00000000c001a4fa                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a500                ATAPI::close(int, int, void*)
                0x00000000c001a524                ATAPI::ATAPI()
                0x00000000c001a524                ATAPI::ATAPI()
                0x00000000c001a552                ATAPI::readyForCommand()
                0x00000000c001a5a4                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a864                ATAPI::diskRemoved()
                0x00000000c001a89e                ATAPI::eject()
                0x00000000c001a8e6                ATAPI::diskInserted()
                0x00000000c001a8f2                ATAPI::detectMedia()
                0x00000000c001a9ae                ATAPI::open(int, int, void*)
                0x00000000c001aa8e                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ab08      0x402 hw/diskphys/sata.32
                0x00000000c001ab08                SATA::close(int, int, void*)
                0x00000000c001ab2c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ab2e                SATA::open(int, int, void*)
                0x00000000c001abd8                SATA::SATA()
                0x00000000c001abd8                SATA::SATA()
                0x00000000c001ac06                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ae52                SATA::read(unsigned long long, int, void*)
                0x00000000c001ae9e                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001af0a      0x5b9 hw/diskphys/satapi.32
                0x00000000c001af0a                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001af10                SATAPI::close(int, int, void*)
                0x00000000c001af34                SATAPI::open(int, int, void*)
                0x00000000c001b02c                SATAPI::SATAPI()
                0x00000000c001b02c                SATAPI::SATAPI()
                0x00000000c001b05a                SATAPI::diskRemoved()
                0x00000000c001b05c                SATAPI::diskInserted()
                0x00000000c001b078                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b354                SATAPI::eject()
                0x00000000c001b390                SATAPI::read(unsigned long long, int, void*)
                0x00000000c001b4c2                SATAPI::detectMedia()
 *fill*         0x00000000c001b4c3        0x1 
 .text          0x00000000c001b4c4      0x455 hw/intctrl/apic.32
                0x00000000c001b4c4                IOAPIC::close(int, int, void*)
                0x00000000c001b4ca                apicGetBase()
                0x00000000c001b50c                IOAPIC::IOAPIC()
                0x00000000c001b50c                IOAPIC::IOAPIC()
                0x00000000c001b534                apicOpen()
                0x00000000c001b69a                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b6cc                IOAPIC::read(int)
                0x00000000c001b6f4                IOAPIC::open(int, int, void*)
                0x00000000c001b7e8                IOAPIC::write(int, int)
                0x00000000c001b814                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b919        0x3 
 .text          0x00000000c001b91c       0xf0 hw/timer/apictimer.32
                0x00000000c001b91c                APICTimer::close(int, int, void*)
                0x00000000c001b924                apicTimerHandler(regs*, void*)
                0x00000000c001b94c                APICTimer::open(int, int, void*)
                0x00000000c001b9bc                APICTimer::write(int)
                0x00000000c001b9e4                APICTimer::APICTimer()
                0x00000000c001b9e4                APICTimer::APICTimer()
 .text          0x00000000c001ba0c      0x1aa hw/timer/pit.32
                0x00000000c001ba0c                PIT::write(int)
                0x00000000c001ba90                pitHandler(regs*, void*)
                0x00000000c001bab4                PIT::open(int, int, void*)
                0x00000000c001bb04                PIT::close(int, int, void*)
                0x00000000c001bb34                PIT::PIT()
                0x00000000c001bb34                PIT::PIT()
 *fill*         0x00000000c001bbb6        0xa 
 .text          0x00000000c001bbc0       0x83 arch/i386/avx.32
                0x00000000c001bbc0                avxDetect
                0x00000000c001bbea                avxSave
                0x00000000c001bbfb                avxLoad
                0x00000000c001bc0c                avxInit
                0x00000000c001bc2e                avxClose
                0x00000000c001bc2f                wouldSheSayYes
 *fill*         0x00000000c001bc43        0xd 
 .text          0x00000000c001bc50      0x1d6 arch/i386/interrupt.32
                0x00000000c001bc50                isr0
                0x00000000c001bc60                isr1
                0x00000000c001bc6a                isr2
                0x00000000c001bc74                isr3
                0x00000000c001bc7e                isr4
                0x00000000c001bc88                isr5
                0x00000000c001bc92                isr6
                0x00000000c001bc9c                isr7
                0x00000000c001bca6                isr8
                0x00000000c001bcae                isr9
                0x00000000c001bcb8                isr10
                0x00000000c001bcc0                isr11
                0x00000000c001bcc8                isr12
                0x00000000c001bcd0                isr13
                0x00000000c001bcd8                isr14
                0x00000000c001bce0                isr15
                0x00000000c001bcea                isr16
                0x00000000c001bcf4                isr17
                0x00000000c001bcfe                isr18
                0x00000000c001bd08                irq3
                0x00000000c001bd12                irq4
                0x00000000c001bd1c                irq5
                0x00000000c001bd26                irq6
                0x00000000c001bd30                irq7
                0x00000000c001bd3a                irq8
                0x00000000c001bd44                irq9
                0x00000000c001bd4e                irq10
                0x00000000c001bd58                irq11
                0x00000000c001bd62                irq12
                0x00000000c001bd6c                irq13
                0x00000000c001bd76                irq14
                0x00000000c001bd80                irq15
                0x00000000c001bd8a                irq1
                0x00000000c001bd91                irq2
                0x00000000c001bd98                isr96
                0x00000000c001bd9f                irq0
                0x00000000c001bda4                int_common_stub
                0x00000000c001bda4                syscall_common_stub
                0x00000000c001bdd6                irq16
                0x00000000c001bde0                irq17
                0x00000000c001bdea                irq18
                0x00000000c001bdf4                irq19
                0x00000000c001bdfe                irq20
                0x00000000c001be08                irq21
                0x00000000c001be12                irq22
                0x00000000c001be1c                irq23
 *fill*         0x00000000c001be26        0xa 
 .text          0x00000000c001be30       0x10 arch/i386/rdrand.32
                0x00000000c001be30                i386GetRDRAND
 .text          0x00000000c001be40       0x39 arch/i386/sse.32
                0x00000000c001be40                absolutelyNoChanceInHell
                0x00000000c001be40                sseDetect
                0x00000000c001be58                sseSave
                0x00000000c001be60                sseLoad
                0x00000000c001be68                sseInit
                0x00000000c001be78                sseClose
 *fill*         0x00000000c001be79        0x7 
 .text          0x00000000c001be80       0x49 arch/i386/x87.32
                0x00000000c001be86                x87Detect
                0x00000000c001bea1                x87Save
                0x00000000c001bea8                x87Load
                0x00000000c001beaf                x87Init
                0x00000000c001bec8                x87Close
 *fill*         0x00000000c001bec9        0x3 
 .text          0x00000000c001becc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bef1        0x0 crtn.32
 *fill*         0x00000000c001bef1        0x3 
 .text          0x00000000c001bef4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bef4                __divdi3
 *fill*         0x00000000c001c03f        0x1 
 .text          0x00000000c001c040      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c040                __moddi3
 *fill*         0x00000000c001c1be        0x2 
 .text          0x00000000c001c1c0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c1c0                __udivdi3
 *fill*         0x00000000c001c2bf        0x1 
 .text          0x00000000c001c2c0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c2c0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c3e0        0x0
 .iplt          0x00000000c001c3e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c3da        0xf
 .init          0x00000000c001c3da        0x3 crti.32
                0x00000000c001c3da                _init
 .init          0x00000000c001c3dd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c3e2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c3e7        0x2 crtn.32

.fini           0x00000000c001c3e9        0xa
 .fini          0x00000000c001c3e9        0x3 crti.32
                0x00000000c001c3e9                _fini
 .fini          0x00000000c001c3ec        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c3f1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c3f4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c3f4       0x23 core/computer.32
                0x00000000c001c3f4                Computer::~Computer()
                0x00000000c001c3f4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c418       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c418       0x2a core/computer.32
                0x00000000c001c418                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c442       0x21
 .text._Z10idleCommonv
                0x00000000c001c442       0x21 core/idle.32
                0x00000000c001c442                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c464        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c464        0x2 core/unixfile.32
                0x00000000c001c464                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c464                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c466       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c466       0x42 core/unixfile.32
                0x00000000c001c466                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c466                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c4a8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c4a8       0xd3 core/unixfile.32
                0x00000000c001c4a8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c57c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c57c        0x7 core/unixfile.32
                0x00000000c001c57c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c584       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c584       0xa1 core/unixfile.32
                0x00000000c001c584                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c626        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c626        0x8 core/unixfile.32
                0x00000000c001c626                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c62e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c62e       0x1a hal/device.32
                0x00000000c001c62e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c62e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c648       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c648       0x2a hal/device.32
                0x00000000c001c648                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c672       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c672       0xdc hal/device.32
                0x00000000c001c672                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c74e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c74e       0x42 hal/device.32
                0x00000000c001c74e                LinkedList<Device>::LinkedList()
                0x00000000c001c74e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c790       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c790       0x1c hal/timer.32
                0x00000000c001c790                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c7ac        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c7ac        0x7 hal/timer.32
                0x00000000c001c7ac                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c7b4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c7b4       0xb8 hal/timer.32
                0x00000000c001c7b4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c86c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c86c       0xda hal/timer.32
                0x00000000c001c86c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c948       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c948       0x23 hw/acpi.32
                0x00000000c001c948                ACPI::~ACPI()
                0x00000000c001c948                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c96c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c96c       0x2a hw/acpi.32
                0x00000000c001c96c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c998        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c998        0x2 hw/acpi.32
                0x00000000c001c998                LinkedList<Device>::~LinkedList()
                0x00000000c001c998                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c99c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c99c       0x1c hw/acpi.32
                0x00000000c001c99c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c9b8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c9b8        0x7 hw/acpi.32
                0x00000000c001c9b8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c9c0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c9c0       0xb8 hw/acpi.32
                0x00000000c001c9c0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ca78       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ca78       0x23 hw/cpu.32
                0x00000000c001ca78                CPU::~CPU()
                0x00000000c001ca78                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ca9c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ca9c       0x2a hw/cpu.32
                0x00000000c001ca9c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cac8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cac8        0x2 thr/prcssthr.32
                0x00000000c001cac8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001cac8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cacc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cacc       0x49 thr/prcssthr.32
                0x00000000c001cacc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001cacc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb18       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb18       0x42 thr/prcssthr.32
                0x00000000c001cb18                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001cb18                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cb5c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cb5c        0x8 thr/prcssthr.32
                0x00000000c001cb5c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cb64       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cb64       0x23 hw/bus/pci.32
                0x00000000c001cb64                PCI::~PCI()
                0x00000000c001cb64                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cb88       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cb88       0x2a hw/bus/pci.32
                0x00000000c001cb88                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cbb2       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cbb2       0x23 hw/diskctrl/ide.32
                0x00000000c001cbb2                IDE::~IDE()
                0x00000000c001cbb2                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cbd6       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cbd6       0x2a hw/diskctrl/ide.32
                0x00000000c001cbd6                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cc00       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cc00       0x23 hw/diskctrl/satabus.32
                0x00000000c001cc00                SATABus::~SATABus()
                0x00000000c001cc00                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cc24       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cc24       0x2a hw/diskctrl/satabus.32
                0x00000000c001cc24                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cc4e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cc4e       0x23 hw/diskphys/ata.32
                0x00000000c001cc4e                ATA::~ATA()
                0x00000000c001cc4e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cc72       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cc72       0x2a hw/diskphys/ata.32
                0x00000000c001cc72                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cc9c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cc9c       0x23 hw/diskphys/atapi.32
                0x00000000c001cc9c                ATAPI::~ATAPI()
                0x00000000c001cc9c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001ccc0       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001ccc0       0x2a hw/diskphys/atapi.32
                0x00000000c001ccc0                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001ccea       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001ccea       0x23 hw/diskphys/sata.32
                0x00000000c001ccea                SATA::~SATA()
                0x00000000c001ccea                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cd0e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cd0e       0x2a hw/diskphys/sata.32
                0x00000000c001cd0e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cd38       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cd38       0x23 hw/diskphys/satapi.32
                0x00000000c001cd38                SATAPI::~SATAPI()
                0x00000000c001cd38                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cd5c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cd5c       0x2a hw/diskphys/satapi.32
                0x00000000c001cd5c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cd86       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cd86       0x23 hw/intctrl/apic.32
                0x00000000c001cd86                IOAPIC::~IOAPIC()
                0x00000000c001cd86                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cdaa       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cdaa       0x2a hw/intctrl/apic.32
                0x00000000c001cdaa                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001cdd4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001cdd4       0x23 hw/timer/apictimer.32
                0x00000000c001cdd4                APICTimer::~APICTimer()
                0x00000000c001cdd4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001cdf8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001cdf8       0x2a hw/timer/apictimer.32
                0x00000000c001cdf8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ce24       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ce24       0x23 hw/timer/pit.32
                0x00000000c001ce24                PIT::~PIT()
                0x00000000c001ce24                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ce48       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ce48       0x2a hw/timer/pit.32
                0x00000000c001ce48                PIT::~PIT()

.rodata         0x00000000c001ce72     0x2852
                0x00000000c001ce72                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001ce72        0x2 
 .ctors         0x00000000c001ce74        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001ce78        0x4 core/unixfile.32
 .ctors         0x00000000c001ce7c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001ce80        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ce84                end_ctors = .
                0x00000000c001ce84                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ce84        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ce88        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ce88                __DTOR_END__
                0x00000000c001ce8c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001ce8c       0x14 
 .rodata        0x00000000c001cea0      0x101 acpica/utclib.32
                0x00000000c001cea0                AcpiGbl_Ctypes
 *fill*         0x00000000c001cfa1        0x3 
 .rodata        0x00000000c001cfa4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001cfbc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d006       0x1a 
 .rodata        0x00000000c001d020       0xed fs/fat/ff.32
 *fill*         0x00000000c001d10d       0x13 
 .rodata        0x00000000c001d120      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d520       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d531       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001d57a      0x115 core/computer.32
 *fill*         0x00000000c001d68f        0x1 
 .rodata.str1.4
                0x00000000c001d690       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d6f8       0x2c core/computer.32
                0x00000000c001d6f8                vtable for Computer
 .rodata.str1.4
                0x00000000c001d724       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d754        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d760       0x17 core/main.32
 *fill*         0x00000000c001d777        0x1 
 .rodata.str1.4
                0x00000000c001d778       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d81d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d875       0x39 core/pipe.32
 *fill*         0x00000000c001d8ae        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d8b0       0x1c core/pipe.32
                0x00000000c001d8b0                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d8cc       0x69 core/terminal.32
 *fill*         0x00000000c001d935        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d938       0x1c core/terminal.32
                0x00000000c001d938                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d954       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d976       0x15 core/unixfile.32
 *fill*         0x00000000c001d98b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d98c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d9d7        0x8 core/unixfile.32
 *fill*         0x00000000c001d9df        0x1 
 .rodata.str1.4
                0x00000000c001d9e0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001da00       0x1c core/unixfile.32
                0x00000000c001da00                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001da1c       0x1c core/unixfile.32
                0x00000000c001da1c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001da38      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001db9f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dca6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dcd9       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dcd9        0x3 
 .rodata        0x00000000c001dcdc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001de2c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001de2c       0x68 fs/vfs.32
                0x00000000c001de2c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001de94       0x1c fs/vfs.32
                0x00000000c001de94                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001deb0       0x1c fs/vfs.32
                0x00000000c001deb0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001decc       0x2c hal/bus.32
                0x00000000c001decc                vtable for Bus
 .rodata.str1.1
                0x00000000c001def8       0x1e hal/clock.32
 *fill*         0x00000000c001df16        0x2 
 .rodata._ZTV5Clock
                0x00000000c001df18       0x3c hal/clock.32
                0x00000000c001df18                vtable for Clock
 *fill*         0x00000000c001df54        0xc 
 .rodata        0x00000000c001df60       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001df90       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001dfe8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001dfe8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001dfe8       0x2c hal/device.32
                0x00000000c001dfe8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001e014       0x2c hal/device.32
                0x00000000c001e014                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e040       0x2c hal/diskctrl.32
                0x00000000c001e040                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e06c       0x38 hal/diskphys.32
                0x00000000c001e06c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e0a4       0x3e hal/intctrl.32
 *fill*         0x00000000c001e0e2        0x2 
 .rodata.str1.4
                0x00000000c001e0e4       0x5d hal/intctrl.32
 .rodata        0x00000000c001e141       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e194       0x34 hal/keybrd.32
                0x00000000c001e194                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e1c8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e20c       0x2c hal/logidisk.32
                0x00000000c001e20c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e238       0x2c hal/mouse.32
                0x00000000c001e238                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e264        0xb hal/partition.32
 *fill*         0x00000000c001e26f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e270       0x44 hal/serial.32
                0x00000000c001e270                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e2b4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e2b4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e2b4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e2b4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e2b4       0x30 hal/timer.32
                0x00000000c001e2b4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e2e4       0x10 hal/vcache.32
                0x00000000c001e2e4                vtable for VCache
 .rodata.str1.1
                0x00000000c001e2f4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e35c       0x48 hal/video.32
                0x00000000c001e35c                vtable for Video
 .rodata.str1.4
                0x00000000c001e3a4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e43f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e57b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e57b        0x8 hw/acpi.32
 *fill*         0x00000000c001e57b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e57c       0x2c hw/acpi.32
                0x00000000c001e57c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e5a8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e715        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e718       0x2c hw/cpu.32
                0x00000000c001e718                vtable for CPU
 .rodata.str1.1
                0x00000000c001e744       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e780       0x3d krnl/panic.32
                                         0x3e (size before relaxing)
 *fill*         0x00000000c001e7bd        0x3 
 .rodata.str1.4
                0x00000000c001e7c0       0x3a krnl/panic.32
 .rodata.str1.1
                0x00000000c001e7fa       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e83f        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001e849       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001e89d       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001e8c9       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e911      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001eadd       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001eb34      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ec40       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ec40       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ec40       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ec40        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001ec40       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001ece0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ed10      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001ee1e        0x2 
 .rodata.str1.4
                0x00000000c001ee20       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001ee93       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001eea8       0x3c arch/i386/rtc.32
                0x00000000c001eea8                vtable for RTC
 .rodata.str1.1
                0x00000000c001eee4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001ef25        0x3 
 .rodata._ZTV3FAT
                0x00000000c001ef28       0x68 fs/fat/vfslink.32
                0x00000000c001ef28                vtable for FAT
 .rodata.str1.1
                0x00000000c001ef90       0x64 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001eff4       0x68 fs/iso9660/vfslink.32
                0x00000000c001eff4                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f05c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f0a0       0x34 hal/sound/sndcard.32
                0x00000000c001f0a0                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f0d4       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f113       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f14b       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f1ec       0x2c hw/bus/pci.32
                0x00000000c001f1ec                vtable for PCI
 .rodata.str1.1
                0x00000000c001f218       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f29f        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f2a0       0x2c hw/diskctrl/ide.32
                0x00000000c001f2a0                vtable for IDE
 .rodata.str1.4
                0x00000000c001f2cc       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f2f0       0x2c hw/diskctrl/satabus.32
                0x00000000c001f2f0                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f31c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f32e        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f330       0x38 hw/diskphys/ata.32
                0x00000000c001f330                vtable for ATA
 .rodata.str1.1
                0x00000000c001f368        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f375        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f378       0x38 hw/diskphys/atapi.32
                0x00000000c001f378                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f3b0       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f42c       0x38 hw/diskphys/sata.32
                0x00000000c001f42c                vtable for SATA
 .rodata.str1.1
                0x00000000c001f464      0x158 hw/diskphys/satapi.32
                                        0x165 (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f5bc       0x38 hw/diskphys/satapi.32
                0x00000000c001f5bc                vtable for SATAPI
 .rodata        0x00000000c001f5f4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f5fc       0x2c hw/intctrl/apic.32
                0x00000000c001f5fc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f628       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f643        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f644       0x30 hw/timer/apictimer.32
                0x00000000c001f644                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f674       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f691        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f694       0x30 hw/timer/pit.32
                0x00000000c001f694                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f6c4      0x271
 *(.data)
 .data          0x00000000c001f6c4        0x0 crti.32
 .data          0x00000000c001f6c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f6c4                __dso_handle
 .data          0x00000000c001f6c8        0x0 acpica/utclib.32
 .data          0x00000000c001f6c8        0x0 core/malloc.32
 .data          0x00000000c001f6c8        0x0 libk/ctype.32
 .data          0x00000000c001f6c8        0x0 libk/string.32
 .data          0x00000000c001f6c8        0x0 fs/fat/diskio.32
 .data          0x00000000c001f6c8        0x0 fs/fat/ff.32
 .data          0x00000000c001f6c8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f6c8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f6c8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f6c8        0x0 compat/inlines.32
 .data          0x00000000c001f6c8        0x0 compat/resolve.32
 .data          0x00000000c001f6c8        0x0 core/computer.32
 .data          0x00000000c001f6c8        0x0 core/gdt.32
 .data          0x00000000c001f6c8        0x0 core/idle.32
 .data          0x00000000c001f6c8        0x0 core/idt.32
 .data          0x00000000c001f6c8        0x4 core/kheap.32
 *fill*         0x00000000c001f6cc       0x14 
 .data          0x00000000c001f6e0      0x142 core/main.32
                0x00000000c001f6e0                titleScreen
 *fill*         0x00000000c001f822        0x2 
 .data          0x00000000c001f824        0x4 core/physmgr.32
                0x00000000c001f824                Phys::bitmap
 .data          0x00000000c001f828        0x0 core/pipe.32
 *fill*         0x00000000c001f828       0x18 
 .data          0x00000000c001f840       0x60 core/terminal.32
                0x00000000c001f840                VgaText::hiddenOut
                0x00000000c001f860                ansiToVGAMappings
 .data          0x00000000c001f8a0        0x0 core/tss.32
 .data          0x00000000c001f8a0        0x4 core/unixfile.32
                0x00000000c001f8a0                UnixFile::nextFd
 .data          0x00000000c001f8a4       0x15 core/virtmgr.32
                0x00000000c001f8a4                Virt::pageAllocPtr
                0x00000000c001f8a8                Virt::bitmap
                0x00000000c001f8ac                Virt::swapfileSectorsPerPage
                0x00000000c001f8b0                Virt::swapfileLength
                0x00000000c001f8b4                Virt::swapfileSector
                0x00000000c001f8b8                Virt::swapfileDrive
 *fill*         0x00000000c001f8b9        0x3 
 .data          0x00000000c001f8bc        0x4 coreobjs/c++.32
                0x00000000c001f8bc                __stack_chk_guard
 .data          0x00000000c001f8c0        0x0 dbg/kconsole.32
 .data          0x00000000c001f8c0        0x0 fs/vfs.32
 .data          0x00000000c001f8c0        0x0 hal/bus.32
 .data          0x00000000c001f8c0        0x0 hal/buzzer.32
 .data          0x00000000c001f8c0        0x0 hal/clock.32
 .data          0x00000000c001f8c0        0x0 hal/device.32
 .data          0x00000000c001f8c0        0x0 hal/diskctrl.32
 .data          0x00000000c001f8c0        0x0 hal/diskphys.32
 .data          0x00000000c001f8c0        0x0 hal/fpu.32
 .data          0x00000000c001f8c0        0x0 hal/intctrl.32
 .data          0x00000000c001f8c0        0x0 hal/keybrd.32
 .data          0x00000000c001f8c0        0x0 hal/logidisk.32
 .data          0x00000000c001f8c0        0x0 hal/mouse.32
 .data          0x00000000c001f8c0        0x0 hal/partition.32
 .data          0x00000000c001f8c0        0x0 hal/serial.32
 .data          0x00000000c001f8c0        0x0 hal/timer.32
 .data          0x00000000c001f8c0        0x0 hal/vcache.32
 .data          0x00000000c001f8c0        0x0 hal/video.32
 .data          0x00000000c001f8c0       0x10 hw/acpi.32
                0x00000000c001f8c0                legacyIRQRemaps
 .data          0x00000000c001f8d0        0x4 hw/cpu.32
                0x00000000c001f8d0                lastCode
 *fill*         0x00000000c001f8d4        0xc 
 .data          0x00000000c001f8e0       0x4d krnl/env.32
                0x00000000c001f8e0                defaultSysEnv
 .data          0x00000000c001f92d        0x0 krnl/panic.32
 .data          0x00000000c001f92d        0x0 krnl/powctrl.32
 .data          0x00000000c001f92d        0x0 reg/registry.32
 .data          0x00000000c001f92d        0x0 sys/sc_eject.32
 .data          0x00000000c001f92d        0x0 sys/sc_exit.32
 .data          0x00000000c001f92d        0x0 sys/sc_getcwd.32
 .data          0x00000000c001f92d        0x0 sys/sc_getpid.32
 .data          0x00000000c001f92d        0x0 sys/sc_getramdata.32
 .data          0x00000000c001f92d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001f92d        0x0 sys/sc_loaddll.32
 .data          0x00000000c001f92d        0x0 sys/sc_read.32
 .data          0x00000000c001f92d        0x0 sys/sc_sbrk.32
 .data          0x00000000c001f92d        0x0 sys/sc_setcwd.32
 .data          0x00000000c001f92d        0x0 sys/sc_settime.32
 .data          0x00000000c001f92d        0x0 sys/sc_timezone.32
 .data          0x00000000c001f92d        0x0 sys/sc_write.32
 .data          0x00000000c001f92d        0x0 sys/sc_wsbe.32
 .data          0x00000000c001f92d        0x0 sys/sc_yield.32
 .data          0x00000000c001f92d        0x0 sys/syscalls.32
 .data          0x00000000c001f92d        0x0 thr/elf.32
 *fill*         0x00000000c001f92d        0x3 
 .data          0x00000000c001f930        0x4 thr/prcssthr.32
                0x00000000c001f930                Thr::nextPID
 .data          0x00000000c001f934        0x0 vm86/vm8086.32
 .data          0x00000000c001f934        0x0 arch/i386/hal.32
 .data          0x00000000c001f934        0x0 arch/i386/pic.32
 .data          0x00000000c001f934        0x0 arch/i386/rtc.32
 .data          0x00000000c001f934        0x0 arch/i386/vga.32
 .data          0x00000000c001f934        0x0 fs/fat/vfslink.32
 .data          0x00000000c001f934        0x0 fs/iso9660/helper.32
 .data          0x00000000c001f934        0x1 fs/iso9660/vfslink.32
                0x00000000c001f934                recentDriveletter
 .data          0x00000000c001f935        0x0 hal/sound/sndcard.32
 .data          0x00000000c001f935        0x0 hal/sound/sndport.32
 .data          0x00000000c001f935        0x0 hw/bus/isa.32
 .data          0x00000000c001f935        0x0 hw/bus/pci.32
 .data          0x00000000c001f935        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001f935        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001f935        0x0 hw/diskphys/ata.32
 .data          0x00000000c001f935        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001f935        0x0 hw/diskphys/sata.32
 .data          0x00000000c001f935        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001f935        0x0 hw/intctrl/apic.32
 .data          0x00000000c001f935        0x0 hw/timer/apictimer.32
 .data          0x00000000c001f935        0x0 hw/timer/pit.32
 .data          0x00000000c001f935        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001f935        0x0 crtn.32
 .data          0x00000000c001f935        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001f935        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001f935        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001f935        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001f938        0x0
 .got           0x00000000c001f938        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001f938        0x0
 .got.plt       0x00000000c001f938        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001f938        0x0
 .igot.plt      0x00000000c001f938        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001f938        0x0
 .tm_clone_table
                0x00000000c001f938        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001f938        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001f935      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001f935        0x3 
 .eh_frame      0x00000000c001f938        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001f938        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001f938       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001f990       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001f9d0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fa3c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001fac0        0x0
 .rel.got       0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001fac0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001fac0     0x4da8
                0x00000000c001fac0                sbss = .
 *(COMMON)
 *fill*         0x00000000c001fac0        0x0 
 COMMON         0x00000000c001fac0       0xa0 fs/iso9660/iso9660.32
                0x00000000c001fac0                dcache
                0x00000000c001fb00                cdDriveLetter
                0x00000000c001fb20                icache
 *(.bss)
 .bss           0x00000000c001fb60        0x0 crti.32
 .bss           0x00000000c001fb60       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001fb80        0x4 acpica/utclib.32
 *fill*         0x00000000c001fb84       0x1c 
 .bss           0x00000000c001fba0      0x378 core/malloc.32
 .bss           0x00000000c001ff18        0x0 libk/ctype.32
 .bss           0x00000000c001ff18        0x0 libk/string.32
 .bss           0x00000000c001ff18        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001ff18        0x8 
 .bss           0x00000000c001ff20       0x88 fs/fat/ff.32
 .bss           0x00000000c001ffa8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001ffa8        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c001ffa8       0x18 
 .bss           0x00000000c001ffc0      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0020958        0x0 compat/inlines.32
 .bss           0x00000000c0020958        0x0 compat/resolve.32
 .bss           0x00000000c0020958        0x6 core/computer.32
                0x00000000c0020958                Krnl::computer
                0x00000000c002095c                Krnl::preemptionOn
                0x00000000c002095d                Krnl::schedulingOn
 *fill*         0x00000000c002095e        0x2 
 .bss           0x00000000c0020960        0x6 core/gdt.32
                0x00000000c0020960                gdtDescr
 .bss           0x00000000c0020966        0x0 core/idle.32
 *fill*         0x00000000c0020966        0x2 
 .bss           0x00000000c0020968        0x6 core/idt.32
                0x00000000c0020968                idtDescr
 .bss           0x00000000c002096e        0x0 core/kheap.32
 *fill*         0x00000000c002096e        0x2 
 .bss           0x00000000c0020970        0x4 core/main.32
                0x00000000c0020970                sysBootSettings
 .bss           0x00000000c0020974       0x29 core/physmgr.32
                0x00000000c0020974                Phys::forbidEvictions
                0x00000000c0020978                Phys::currentPagePointer
                0x00000000c002097c                Phys::highestMem
                0x00000000c0020980                Phys::oldPercent
                0x00000000c0020984                Phys::usedPages
                0x00000000c0020988                Phys::usablePages
                0x00000000c002098c                Phys::dmaUsage
 .bss           0x00000000c002099d        0x0 core/pipe.32
 *fill*         0x00000000c002099d        0x3 
 .bss           0x00000000c00209a0        0x9 core/terminal.32
                0x00000000c00209a0                terminalCycle
                0x00000000c00209a4                activeTerminal
                0x00000000c00209a8                VgaText::graphicMode
 *fill*         0x00000000c00209a9        0x1 
 .bss           0x00000000c00209aa        0x2 core/tss.32
                0x00000000c00209aa                doubleFaultSelector
 *fill*         0x00000000c00209ac       0x14 
 .bss           0x00000000c00209c0       0x84 core/unixfile.32
                0x00000000c00209c0                sfileLpt
                0x00000000c0020a00                sfileCom
                0x00000000c0020a24                sfileNul
                0x00000000c0020a28                sfilePnt
                0x00000000c0020a2c                sfileAux
                0x00000000c0020a30                sfileCon
                0x00000000c0020a34                initialFilesAdded
                0x00000000c0020a38                unixFileLinkedList
 .bss           0x00000000c0020a44       0x10 core/virtmgr.32
                0x00000000c0020a44                twswaps
                0x00000000c0020a48                swapBalance
                0x00000000c0020a4c                Virt::swapfileBitmap
                0x00000000c0020a50                firstVAS
 .bss           0x00000000c0020a54        0x0 coreobjs/c++.32
 .bss           0x00000000c0020a54        0x0 dbg/kconsole.32
 .bss           0x00000000c0020a54        0x4 fs/vfs.32
                0x00000000c0020a54                installedFilesystems
 .bss           0x00000000c0020a58        0x0 hal/bus.32
 .bss           0x00000000c0020a58        0x0 hal/buzzer.32
 .bss           0x00000000c0020a58        0x8 hal/clock.32
                0x00000000c0020a58                User::dstOn
                0x00000000c0020a59                User::timezoneHalfHourOffset
                0x00000000c0020a5c                User::timezoneHourOffset
 .bss           0x00000000c0020a60        0x0 hal/device.32
 .bss           0x00000000c0020a60        0x0 hal/diskctrl.32
 .bss           0x00000000c0020a60        0x0 hal/diskphys.32
 .bss           0x00000000c0020a60        0x0 hal/fpu.32
 .bss           0x00000000c0020a60     0x2000 hal/intctrl.32
                0x00000000c0020a60                INT_contexts
                0x00000000c0021a60                INT_handlers
 .bss           0x00000000c0022a60      0x429 hal/keybrd.32
                0x00000000c0022a60                keyboardWaitingTaskList
                0x00000000c0022a64                keyboardSetupYet
                0x00000000c0022a68                guiKeyboardHandler
                0x00000000c0022a80                keystates
 *fill*         0x00000000c0022e89       0x17 
 .bss           0x00000000c0022ea0       0x88 hal/logidisk.32
                0x00000000c0022ea0                diskAssignments
                0x00000000c0022ec0                disks
 .bss           0x00000000c0022f28        0x4 hal/mouse.32
                0x00000000c0022f28                guiMouseHandler
 .bss           0x00000000c0022f2c        0x0 hal/partition.32
 .bss           0x00000000c0022f2c        0x0 hal/serial.32
 .bss           0x00000000c0022f2c        0x4 hal/timer.32
                0x00000000c0022f2c                milliTenthsSinceBoot
 .bss           0x00000000c0022f30        0x0 hal/vcache.32
 .bss           0x00000000c0022f30        0x4 hal/video.32
                0x00000000c0022f30                screen
 *fill*         0x00000000c0022f34        0xc 
 .bss           0x00000000c0022f40      0x480 hw/acpi.32
                0x00000000c0022f40                systemSleepFunction
                0x00000000c0022f44                systemResetFunction
                0x00000000c0022f48                systemShutdownFunction
                0x00000000c0022f4c                nextACPITable
                0x00000000c0022f60                acpiTables
                0x00000000c0023160                usingXSDT
                0x00000000c0023164                MADTpointer
                0x00000000c0023168                RSDTpointer
                0x00000000c002316c                RSDPpointer
                0x00000000c0023170                nextAPICNMI
                0x00000000c0023180                apicNMIInfo
                0x00000000c0023200                legacyIRQFlags
                0x00000000c0023220                ioapicDiscoveryNumber
                0x00000000c0023240                ioapicFoundInMADT
                0x00000000c0023260                ioapicAddresses
                0x00000000c00232e0                ioapicGSIBase
                0x00000000c0023360                processorDiscoveryNumber
                0x00000000c0023380                matchingAPICID
                0x00000000c00233a0                processorID
 .bss           0x00000000c00233c0       0x10 hw/cpu.32
                0x00000000c00233c0                lastD
                0x00000000c00233c4                lastC
                0x00000000c00233c8                lastB
                0x00000000c00233cc                lastA
 .bss           0x00000000c00233d0        0x8 krnl/env.32
                0x00000000c00233d0                Krnl::userEnv
                0x00000000c00233d4                Krnl::systemEnv
 .bss           0x00000000c00233d8        0x9 krnl/panic.32
                0x00000000c00233d8                Krnl::guiProgramFaultHandler
                0x00000000c00233dc                Krnl::guiPanicHandler
                0x00000000c00233e0                Krnl::kernelInPanic
 *fill*         0x00000000c00233e1       0x1f 
 .bss           0x00000000c0023400       0x48 krnl/powctrl.32
                0x00000000c0023400                Krnl::powCtrlOnBattery
                0x00000000c0023420                Krnl::currentPowerSettings
                0x00000000c0023444                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0023448        0x0 reg/registry.32
 .bss           0x00000000c0023448        0x0 sys/sc_eject.32
 .bss           0x00000000c0023448        0x0 sys/sc_exit.32
 .bss           0x00000000c0023448        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0023448        0x0 sys/sc_getpid.32
 .bss           0x00000000c0023448        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0023448        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0023448        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0023448        0x0 sys/sc_read.32
 .bss           0x00000000c0023448        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0023448        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0023448        0x0 sys/sc_settime.32
 .bss           0x00000000c0023448        0x0 sys/sc_timezone.32
 .bss           0x00000000c0023448        0x0 sys/sc_write.32
 .bss           0x00000000c0023448        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0023448        0x0 sys/sc_yield.32
 *fill*         0x00000000c0023448       0x18 
 .bss           0x00000000c0023460      0x200 sys/syscalls.32
                0x00000000c0023460                systemCallHandlers
 .bss           0x00000000c0023660      0x7a4 thr/elf.32
                0x00000000c0023660                Thr::driverLookupNext
                0x00000000c0023680                Thr::driverLookupLen
                0x00000000c0023880                Thr::driverLookupAddr
                0x00000000c0023a80                Thr::driverNameLookup
                0x00000000c0023c80                Thr::kernelSymbols
                0x00000000c0023d00                Thr::kernelStringTable
                0x00000000c0023d80                Thr::kernelSymbolTable
                0x00000000c0023e00                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023e04        0x4 
 .bss           0x00000000c0023e08       0x68 thr/prcssthr.32
                0x00000000c0023e08                cleanerThread
                0x00000000c0023e0c                weNeedTheCleanerToNotBlock
                0x00000000c0023e10                retValLockStuff
                0x00000000c0023e14                retValSchedLock
                0x00000000c0023e18                lockStuffLock
                0x00000000c0023e1c                schedulerLock
                0x00000000c0023e20                taskSwitchesPostponedFlag
                0x00000000c0023e24                postponeTaskSwitchesCounter
                0x00000000c0023e28                irqDisableCounter
                0x00000000c0023e2c                terminatedTaskList
                0x00000000c0023e38                sleepingTaskList
                0x00000000c0023e44                taskList
                0x00000000c0023e50                kernelProcess
 *fill*         0x00000000c0023e70       0x10 
 .bss           0x00000000c0023e80       0x40 vm86/vm8086.32
                0x00000000c0023e80                Vm::vmRetV
                0x00000000c0023e84                Vm::vmDone
                0x00000000c0023e85                Vm::vmReady
                0x00000000c0023e88                Vm::vm86Thread
                0x00000000c0023e8c                Vm::vmToHostCommsPtr
                0x00000000c0023ea0                Vm::vmToHostComms
 .bss           0x00000000c0023ec0       0x14 arch/i386/hal.32
                0x00000000c0023ec0                apic
                0x00000000c0023ec4                fpuOwner
                0x00000000c0023ec8                coproLoadFunc
                0x00000000c0023ecc                coproSaveFunc
                0x00000000c0023ed0                gpFaultIntercept
 .bss           0x00000000c0023ed4        0x0 arch/i386/pic.32
 .bss           0x00000000c0023ed4        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023ed6        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023ed6        0xa 
 .bss           0x00000000c0023ee0       0xf0 fs/fat/vfslink.32
                0x00000000c0023ee0                FAT::fats
                0x00000000c0023f00                FAT::vfsToFatRemaps
                0x00000000c0023f80                fatToVFSRemaps
 .bss           0x00000000c0023fd0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0023fd0       0x10 
 .bss           0x00000000c0023fe0      0x820 fs/iso9660/vfslink.32
                0x00000000c0023fe0                iso9660Owner
                0x00000000c0023fe4                recentSector
                0x00000000c0024000                recentBuffer
 .bss           0x00000000c0024800        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0024800        0x0 hal/sound/sndport.32
 .bss           0x00000000c0024800        0x0 hw/bus/isa.32
 .bss           0x00000000c0024800        0xd hw/bus/pci.32
                0x00000000c0024800                thePCI
 .bss           0x00000000c002480d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002480d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002480d        0x3 
 .bss           0x00000000c0024810        0x8 hw/diskphys/ata.32
                0x00000000c0024810                ataSectorsWritten
                0x00000000c0024814                ataSectorsRead
 .bss           0x00000000c0024818        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024818        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0024818        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0024818        0x8 
 .bss           0x00000000c0024820       0x41 hw/intctrl/apic.32
                0x00000000c0024820                noOfIOAPICs
                0x00000000c0024840                ioapics
                0x00000000c0024860                IOAPICsSetupYet
 .bss           0x00000000c0024861        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024861        0x3 
 .bss           0x00000000c0024864        0x4 hw/timer/pit.32
                0x00000000c0024864                pitFreq
 .bss           0x00000000c0024868        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024868        0x0 crtn.32
 .bss           0x00000000c0024868        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024868        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024868        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024868        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024868                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0029610                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
