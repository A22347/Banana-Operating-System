Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c35a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002ff                asmQuickAcquireLock
                0x00000000c000031d                asmQuickReleaseLock
                0x00000000c0000329                asmAcquireLock
                0x00000000c000034a                asmReleaseLock
                0x00000000c000035d                loadGDT
                0x00000000c000037d                memcpy
 *fill*         0x00000000c0000382        0xe 
 .text          0x00000000c0000390      0x79e acpica/utclib.32
                0x00000000c0000390                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004d0                memset
                0x00000000c0000540                strlen
                0x00000000c0000570                strpbrk
                0x00000000c00005b0                strtok
                0x00000000c0000600                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b2e      0xfad core/malloc.32
                0x00000000c0000c99                dlfree
                0x00000000c0000ff4                dlmalloc
                0x00000000c0001531                dlrealloc
                0x00000000c00016d4                dlmemalign
                0x00000000c00017f7                dlcalloc
                0x00000000c0001891                dlcfree
                0x00000000c0001896                dlindependent_calloc
                0x00000000c00018bb                dlindependent_comalloc
                0x00000000c00018d2                dlvalloc
                0x00000000c00018fd                dlpvalloc
                0x00000000c0001933                dlmalloc_trim
                0x00000000c0001940                dlmalloc_usable_size
                0x00000000c0001971                dlmallinfo
                0x00000000c0001a40                dlmalloc_stats
                0x00000000c0001a51                dlmallopt
 *fill*         0x00000000c0001adb        0x1 
 .text          0x00000000c0001adc      0x1f2 libk/ctype.32
                0x00000000c0001adc                isblank
                0x00000000c0001afc                iscntrl
                0x00000000c0001b1c                isdigit
                0x00000000c0001b38                islower
                0x00000000c0001b54                isspace
                0x00000000c0001b7c                isupper
                0x00000000c0001b98                isalpha
                0x00000000c0001bc8                isalnum
                0x00000000c0001bf8                ispunct
                0x00000000c0001c38                isgraph
                0x00000000c0001c68                isprint
                0x00000000c0001c90                isxdigit
 .text          0x00000000c0001cce        0x0 libk/string.32
 .text          0x00000000c0001cce       0x51 fs/fat/diskio.32
                0x00000000c0001cce                disk_status
                0x00000000c0001cd1                disk_initialize
                0x00000000c0001cd4                disk_read
                0x00000000c0001cea                disk_write
                0x00000000c0001d00                disk_ioctl
 .text          0x00000000c0001d1f     0x3d4b fs/fat/ff.32
                0x00000000c0003abb                f_mount
                0x00000000c0003b1d                f_open
                0x00000000c0003de8                f_read
                0x00000000c0003fe7                f_write
                0x00000000c000421b                f_sync
                0x00000000c00042d0                f_close
                0x00000000c00042ff                f_lseek
                0x00000000c00044a6                f_opendir
                0x00000000c0004571                f_closedir
                0x00000000c0004593                f_readdir
                0x00000000c0004625                f_stat
                0x00000000c00046a4                f_getfree
                0x00000000c00047a6                f_truncate
                0x00000000c000488a                f_unlink
                0x00000000c00049ac                f_mkdir
                0x00000000c0004b47                f_rename
                0x00000000c0004cfd                f_chmod
                0x00000000c0004da6                f_utime
                0x00000000c0004e54                f_getlabel
                0x00000000c0004fa5                f_setlabel
                0x00000000c0005135                f_expand
                0x00000000c0005295                f_mkfs
 *fill*         0x00000000c0005a6a        0x2 
 .text          0x00000000c0005a6c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a6c                ff_memalloc
                0x00000000c0005a84                ff_memfree
 *fill*         0x00000000c0005a9b        0x1 
 .text          0x00000000c0005a9c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a9c                ff_uni2oem
                0x00000000c0005b3c                ff_oem2uni
                0x00000000c0005bb4                ff_wtoupper
 .text          0x00000000c0005d44      0xc76 fs/iso9660/iso9660.32
                0x00000000c0005f63                isoReadDiscSector
                0x00000000c0005ffe                strnicmp
                0x00000000c00062b1                stricmp
                0x00000000c00062fd                iso_open
                0x00000000c0006387                iso_close
                0x00000000c00063a5                iso_read
                0x00000000c00064bb                iso_seek
                0x00000000c000653f                iso_tell
                0x00000000c0006570                iso_total
                0x00000000c000659b                fn_postprocess
                0x00000000c00065c1                iso_readdir
                0x00000000c00067b2                iso_reset
                0x00000000c00067bf                init_percd
                0x00000000c00068b9                iso_ioctl
                0x00000000c00068c1                fs_iso9660_init
                0x00000000c000694a                fs_iso9660_shutdown
 .text          0x00000000c00069ba      0x685 core/computer.32
                0x00000000c00069ba                Computer::close(int, int, void*)
                0x00000000c00069ff                Krnl::firstTask()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006be4                Computer::setBootMessage(char const*)
                0x00000000c0006be6                Computer::detectFeatures()
                0x00000000c0006df0                Computer::displayFeatures()
                0x00000000c0006df2                Computer::rdmsr(unsigned int)
                0x00000000c0006e1e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006e56                Computer::shutdown()
                0x00000000c0006e6e                Computer::restart()
                0x00000000c0006e86                Computer::sleep()
                0x00000000c0006e9a                Computer::nmiEnabled()
                0x00000000c0006ea6                Computer::readCMOS(unsigned char)
                0x00000000c0006ec0                Computer::enableNMI(bool)
                0x00000000c0006ed8                Computer::open(int, int, void*)
                0x00000000c0006fac                Computer::disableNMI()
                0x00000000c0006fbc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006fda                Computer::handleNMI()
 *fill*         0x00000000c000703f        0x1 
 .text          0x00000000c0007040      0x1cf core/gdt.32
                0x00000000c0007040                GDTEntry::setBase(unsigned int)
                0x00000000c000705c                GDTEntry::setLimit(unsigned int)
                0x00000000c000707a                GDT::GDT()
                0x00000000c000707a                GDT::GDT()
                0x00000000c0007090                GDT::addEntry(GDTEntry)
                0x00000000c00070b2                GDT::getNumberOfEntries()
                0x00000000c00070ba                GDT::flush()
                0x00000000c00070dc                GDT::setup()
 .text          0x00000000c000720f       0x1d core/idle.32
                0x00000000c000720f                idleFunction(void*)
 .text          0x00000000c000722c      0x464 core/idt.32
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000729e                IDTEntry::setOffset(unsigned int)
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00072be                IDT::addEntry(IDTEntry, int)
                0x00000000c00072d8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007310                IDT::flush()
                0x00000000c000732a                IDT::setup()
 .text          0x00000000c0007690      0x183 core/kheap.32
                0x00000000c0007690                sbrk
                0x00000000c0007725                mmap
                0x00000000c000773b                munmap
                0x00000000c0007751                liballoc_lock()
                0x00000000c000775e                liballoc_unlock()
                0x00000000c0007772                liballoc_alloc(int)
                0x00000000c000778a                liballoc_free(void*, int)
                0x00000000c00077a5                realloc
                0x00000000c00077b9                malloc
                0x00000000c00077c9                free
                0x00000000c00077d9                rfree
                0x00000000c00077e9                calloc
 .text          0x00000000c0007813       0xc3 core/main.32
                0x00000000c0007813                KeEntryPoint
 .text          0x00000000c00078d6      0x5dc core/physmgr.32
                0x00000000c00078d6                Phys::allocateDMA(unsigned long)
                0x00000000c00079ad                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c00079e0                Phys::setPageState(unsigned long, bool)
                0x00000000c0007a12                Phys::getPageState(unsigned long)
                0x00000000c0007a33                Phys::freePage(unsigned long)
                0x00000000c0007a95                Phys::allocatePage()
                0x00000000c0007b53                Phys::allocateContiguousPages(int)
                0x00000000c0007baf                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007be7                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007eb2      0x273 core/pipe.32
                0x00000000c0007eb2                Pipe::isAtty()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eda                Pipe::~Pipe()
                0x00000000c0007f02                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007fc2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00080be                Pipe::Pipe(int)
                0x00000000c00080be                Pipe::Pipe(int)
 *fill*         0x00000000c0008125        0x1 
 .text          0x00000000c0008126      0xaa0 core/terminal.32
                0x00000000c0008126                VgaText::isAtty()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000814e                VgaText::~VgaText()
                0x00000000c0008178                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008198                setTerminalScrollLock(bool)
                0x00000000c0008199                doTerminalCycle()
                0x00000000c000819a                addToTerminalCycle(VgaText*)
                0x00000000c000819b                scrollTerminalScrollLock(int)
                0x00000000c000819c                VgaText::updateTitle()
                0x00000000c000819e                VgaText::load()
                0x00000000c00081a0                VgaText::updateCursor()
                0x00000000c00081b6                VgaText::doANSI_SGR(int)
                0x00000000c000822a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000823a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000824a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000826a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008276                VgaText::setTitleColour(VgaColour)
                0x00000000c0008282                VgaText::setTitle(char*)
                0x00000000c0008284                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008296                VgaText::scrollScreen()
                0x00000000c000832e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008340                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00083d0                VgaText::getCursorX()
                0x00000000c00083d8                VgaText::getCursorY()
                0x00000000c00083e0                VgaText::setCursor(int, int)
                0x00000000c00083f7                setActiveTerminal(VgaText*)
                0x00000000c0008442                VgaText::clearScreen()
                0x00000000c0008490                VgaText::setCursorX(int)
                0x00000000c00084a8                VgaText::setCursorY(int)
                0x00000000c00084c0                VgaText::incrementCursor(bool)
                0x00000000c0008514                VgaText::decrementCursor(bool)
                0x00000000c0008536                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008604                VgaText::putchar(char)
                0x00000000c00086f0                VgaText::putx(unsigned int)
                0x00000000c0008736                VgaText::puts(char const*)
                0x00000000c000875c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00087a8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c0008a46                VgaText::receiveKey(unsigned char)
                0x00000000c0008ba0                VgaText::doUpdate()
                0x00000000c0008ba1                newTerminal(char*)
 *fill*         0x00000000c0008bc6        0x2 
 .text          0x00000000c0008bc8      0x1a1 core/tss.32
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bd8                TSS::setESP(unsigned long)
                0x00000000c0008bec                TSS::flush()
                0x00000000c0008c0c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008d69        0x1 
 .text          0x00000000c0008d6a      0x4c2 core/unixfile.32
                0x00000000c0008d6a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008dc0                ReservedFilename::isAtty()
                0x00000000c0008ddc                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008e3a                UnixFile::getFileDescriptor()
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c00090bc                UnixFile::~UnixFile()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c0009108                ReservedFilename::~ReservedFilename()
                0x00000000c000912f                getFromFileDescriptor(int)
 .text          0x00000000c000922c     0x11fa core/virtmgr.32
                0x00000000c000922c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009261                Virt::getPageState(unsigned long)
                0x00000000c0009285                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009396                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00093b4                Virt::swapIDToSector(unsigned long)
                0x00000000c00093c6                Virt::allocateSwapfilePage()
                0x00000000c0009444                Virt::virtualMemorySetup()
                0x00000000c000948f                Virt::setupPageSwapping(int)
                0x00000000c0009500                VAS::VAS(VAS*)
                0x00000000c0009500                VAS::VAS(VAS*)
                0x00000000c000952e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000955a                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009579                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000969e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00096c2                VAS::virtualToPhysical(unsigned long)
                0x00000000c00096dc                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009732                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000976a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009794                VAS::~VAS()
                0x00000000c0009794                VAS::~VAS()
                0x00000000c00098f8                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00099fc                VAS::allocatePages(int, int)
                0x00000000c0009bd4                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009bf2                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009cb8                VAS::VAS()
                0x00000000c0009cb8                VAS::VAS()
                0x00000000c0009d30                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009e1e                VAS::VAS(bool)
                0x00000000c0009e1e                VAS::VAS(bool)
                0x00000000c000a09e                VAS::evict(unsigned long)
                0x00000000c000a160                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a24e                VAS::scanForEviction()
                0x00000000c000a32e                mapVASFirstTime
 .text          0x00000000c000a426       0x5f coreobjs/c++.32
                0x00000000c000a426                __cxa_atexit
                0x00000000c000a429                __cxa_finalize
                0x00000000c000a42a                __stack_chk_fail
                0x00000000c000a460                __cxa_pure_virtual
                0x00000000c000a471                operator new[](unsigned long)
                0x00000000c000a476                operator delete(void*, unsigned long)
                0x00000000c000a47b                operator delete[](void*)
                0x00000000c000a480                operator delete[](void*, unsigned long)
 .text          0x00000000c000a485      0x21c dbg/kconsole.32
                0x00000000c000a485                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a4f0                Dbg::logc(char)
                0x00000000c000a510                Dbg::logs(char*)
                0x00000000c000a52d                Dbg::logWriteInt(unsigned int)
                0x00000000c000a54b                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a56c                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a6a1        0x1 
 .text          0x00000000c000a6a2      0xc5c fs/vfs.32
                0x00000000c000a6a2                File::read(unsigned long long, void*, int*)
                0x00000000c000a6fa                File::write(unsigned long long, void*, int*)
                0x00000000c000a752                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a7aa                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a7d8                File::isAtty()
                0x00000000c000a7dc                Directory::isAtty()
                0x00000000c000a7e0                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a7e6                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a7ec                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a7f2                File::~File()
                0x00000000c000a7f2                File::~File()
                0x00000000c000a816                File::~File()
                0x00000000c000a840                Directory::~Directory()
                0x00000000c000a840                Directory::~Directory()
                0x00000000c000a864                Directory::~Directory()
                0x00000000c000a88e                Filesystem::Filesystem()
                0x00000000c000a88e                Filesystem::Filesystem()
                0x00000000c000a8b2                Filesystem::~Filesystem()
                0x00000000c000a8b2                Filesystem::~Filesystem()
                0x00000000c000a8c0                Filesystem::~Filesystem()
                0x00000000c000a8e4                Fs::getcwd(Process*, char*, int)
                0x00000000c000a90e                Fs::initVFS()
                0x00000000c000a938                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aae2                File::File(char const*, Process*)
                0x00000000c000aae2                File::File(char const*, Process*)
                0x00000000c000aba2                File::open(FileOpenMode)
                0x00000000c000ac00                File::close()
                0x00000000c000ac60                File::seek(unsigned long long)
                0x00000000c000acb6                File::tell(unsigned long long*)
                0x00000000c000ad06                File::rewind()
                0x00000000c000ad1a                File::unlink()
                0x00000000c000ad66                File::rename(char const*)
                0x00000000c000adb4                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ae10                File::exists()
                0x00000000c000ae4e                File::stat(unsigned long long*, bool*)
                0x00000000c000aeaf                Fs::setcwd(Process*, char*)
                0x00000000c000b00c                Directory::Directory(char const*, Process*)
                0x00000000c000b00c                Directory::Directory(char const*, Process*)
                0x00000000c000b0cc                Directory::open()
                0x00000000c000b128                Directory::close()
                0x00000000c000b188                Directory::unlink()
                0x00000000c000b1d4                Directory::rename(char const*)
                0x00000000c000b222                Directory::exists()
                0x00000000c000b260                Directory::read(dirent*)
                0x00000000c000b2ac                Directory::create()
                0x00000000c000b2f8                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b2fe        0x2 
 .text          0x00000000c000b300       0x86 hal/bus.32
                0x00000000c000b300                Bus::Bus(char const*)
                0x00000000c000b300                Bus::Bus(char const*)
                0x00000000c000b338                Bus::~Bus()
                0x00000000c000b338                Bus::~Bus()
                0x00000000c000b35c                Bus::~Bus()
 .text          0x00000000c000b386       0x96 hal/buzzer.32
                0x00000000c000b386                beepThread(void*)
                0x00000000c000b3c3                Krnl::beep(int, int, bool)
 .text          0x00000000c000b41c      0x46d hal/clock.32
                0x00000000c000b41c                User::loadClockSettings(int)
                0x00000000c000b46e                Clock::Clock(char const*)
                0x00000000c000b46e                Clock::Clock(char const*)
                0x00000000c000b4a4                Clock::~Clock()
                0x00000000c000b4a4                Clock::~Clock()
                0x00000000c000b4c8                Clock::~Clock()
                0x00000000c000b4f2                Clock::timeInSecondsLocal()
                0x00000000c000b53a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b593                datetimeToSeconds(datetime_t)
                0x00000000c000b6c0                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b720                secondsToDatetime(unsigned long long)
                0x00000000c000b864                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b889        0x1 
 .text          0x00000000c000b88a      0x464 hal/device.32
                0x00000000c000b88a                Device::hibernate()
                0x00000000c000b88c                Device::wake()
                0x00000000c000b88e                Device::detect()
                0x00000000c000b890                Device::disableLegacy()
                0x00000000c000b892                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b894                DriverlessDevice::close(int, int, void*)
                0x00000000c000b898                DriverlessDevice::detect()
                0x00000000c000b89a                DriverlessDevice::open(int, int, void*)
                0x00000000c000b8ae                Device::~Device()
                0x00000000c000b8ae                Device::~Device()
                0x00000000c000b8bc                Device::~Device()
                0x00000000c000b8e4                Device::findAndLoadDriver()
                0x00000000c000b8f2                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b918                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000b958                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b982                Device::getParent()
                0x00000000c000b98e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b9ac                Device::addChild(Device*)
                0x00000000c000b9f0                Device::removeAllChildren()
                0x00000000c000ba36                Device::hibernateAll()
                0x00000000c000ba66                Device::wakeAll()
                0x00000000c000ba96                Device::detectAll()
                0x00000000c000bac6                Device::disableLegacyAll()
                0x00000000c000bac8                Device::loadDriversForAll()
                0x00000000c000baca                Device::closeAll()
                0x00000000c000bb00                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bb36                Device::setName(char const*)
                0x00000000c000bb44                Device::Device(char const*)
                0x00000000c000bb44                Device::Device(char const*)
                0x00000000c000bc40                Device::getName()
                0x00000000c000bc4a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bc4a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bc80                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bcc4                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bcee        0x2 
 .text          0x00000000c000bcf0       0x86 hal/diskctrl.32
                0x00000000c000bcf0                HardDiskController::HardDiskController(char const*)
                0x00000000c000bcf0                HardDiskController::HardDiskController(char const*)
                0x00000000c000bd28                HardDiskController::~HardDiskController()
                0x00000000c000bd28                HardDiskController::~HardDiskController()
                0x00000000c000bd4c                HardDiskController::~HardDiskController()
 .text          0x00000000c000bd76       0xe2 hal/diskphys.32
                0x00000000c000bd76                PhysicalDisk::eject()
                0x00000000c000bd7a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bd7a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bde2                PhysicalDisk::startCache()
                0x00000000c000be0a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000be0a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000be2e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000be58        0x0 hal/fpu.32
 .text          0x00000000c000be58      0x35d hal/intctrl.32
                0x00000000c000be58                int_handler
                0x00000000c000bee0                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000bf28                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c060                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c094                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c113                setupINTS()
                0x00000000c000c170                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c1b5        0x1 
 .text          0x00000000c000c1b6      0x7cc hal/keybrd.32
                0x00000000c000c1b6                startGUI(void*)
                0x00000000c000c222                startGUIVESA(void*)
                0x00000000c000c28e                sendKeyToTerminal(unsigned char)
                0x00000000c000c357                sendKeyboardToken(KeyboardToken)
                0x00000000c000c797                clearInternalKeybuffer(VgaText*)
                0x00000000c000c7cc                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c8f8                Keyboard::Keyboard(char const*)
                0x00000000c000c8f8                Keyboard::Keyboard(char const*)
                0x00000000c000c934                Keyboard::~Keyboard()
                0x00000000c000c934                Keyboard::~Keyboard()
                0x00000000c000c958                Keyboard::~Keyboard()
 .text          0x00000000c000c982      0x3ea hal/logidisk.32
                0x00000000c000c982                LogicalDisk::close(int, int, void*)
                0x00000000c000c986                LogicalDisk::~LogicalDisk()
                0x00000000c000c986                LogicalDisk::~LogicalDisk()
                0x00000000c000c9aa                LogicalDisk::~LogicalDisk()
                0x00000000c000c9d4                LogicalDisk::open(int, int, void*)
                0x00000000c000c9e8                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000ca20                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000ca66                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ca66                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cb1c                LogicalDisk::assignDriveLetter()
                0x00000000c000cbd2                LogicalDisk::mount()
                0x00000000c000cc1a                LogicalDisk::unmount()
                0x00000000c000cc2a                LogicalDisk::eject()
                0x00000000c000cc3e                LogicalDisk::unassignDriveLetter()
                0x00000000c000cc94                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000cd00                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000cd6c       0x86 hal/mouse.32
                0x00000000c000cd6c                Mouse::Mouse(char const*)
                0x00000000c000cd6c                Mouse::Mouse(char const*)
                0x00000000c000cda4                Mouse::~Mouse()
                0x00000000c000cda4                Mouse::~Mouse()
                0x00000000c000cdc8                Mouse::~Mouse()
 .text          0x00000000c000cdf2      0x339 hal/partition.32
                0x00000000c000cdf2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ce9a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d12b        0x1 
 .text          0x00000000c000d12c       0x86 hal/serial.32
                0x00000000c000d12c                Serial::Serial(char const*)
                0x00000000c000d12c                Serial::Serial(char const*)
                0x00000000c000d164                Serial::~Serial()
                0x00000000c000d164                Serial::~Serial()
                0x00000000c000d188                Serial::~Serial()
 *fill*         0x00000000c000d1b2        0x2 
 .text          0x00000000c000d1b4      0x234 hal/timer.32
                0x00000000c000d1b4                Timer::Timer(char const*)
                0x00000000c000d1b4                Timer::Timer(char const*)
                0x00000000c000d1ec                Timer::~Timer()
                0x00000000c000d1ec                Timer::~Timer()
                0x00000000c000d210                Timer::~Timer()
                0x00000000c000d23a                Timer::read()
                0x00000000c000d245                setupTimer(int)
                0x00000000c000d280                timerHandler(unsigned int)
 .text          0x00000000c000d3e8      0x3ce hal/vcache.32
                0x00000000c000d3e8                VCache::VCache(PhysicalDisk*)
                0x00000000c000d3e8                VCache::VCache(PhysicalDisk*)
                0x00000000c000d550                VCache::invalidateReadBuffer()
                0x00000000c000d560                VCache::writeWriteBuffer()
                0x00000000c000d5ac                VCache::~VCache()
                0x00000000c000d5ac                VCache::~VCache()
                0x00000000c000d600                VCache::~VCache()
                0x00000000c000d628                VCache::write(unsigned long long, int, void*)
                0x00000000c000d73e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d7b6      0x4b3 hal/video.32
                0x00000000c000d7b6                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d802                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000d872                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000d8f0                Video::clearScreen(unsigned int)
                0x00000000c000d924                Video::putpixel(int, int, unsigned int)
                0x00000000c000d932                Video::Video(char const*)
                0x00000000c000d932                Video::Video(char const*)
                0x00000000c000d968                Video::~Video()
                0x00000000c000d968                Video::~Video()
                0x00000000c000d98c                Video::~Video()
                0x00000000c000d9b6                Video::isMonochrome()
                0x00000000c000d9c2                Video::getWidth()
                0x00000000c000d9ce                Video::getHeight()
                0x00000000c000d9da                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000da96                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000dbfe                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000dc69        0x3 
 .text          0x00000000c000dc6c     0x1307 hw/acpi.32
                0x00000000c000dc6c                ACPI::close(int, int, void*)
                0x00000000c000dd24                findRSDP()
                0x00000000c000ddb4                loadACPITables(unsigned char*)
                0x00000000c000e018                findRSDT(unsigned char*)
                0x00000000c000e168                findDataTable(unsigned char*, char*)
                0x00000000c000e1e0                scanMADT()
                0x00000000c000e6b4                ACPI::ACPI()
                0x00000000c000e6b4                ACPI::ACPI()
                0x00000000c000e708                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e7f0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000e8b8                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000e8c0                ACPI::detectPCI()
                0x00000000c000eac8                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000eb1c                ACPI::sleep()
                0x00000000c000eb38                ACPI::open(int, int, void*)
 *fill*         0x00000000c000ef73        0x1 
 .text          0x00000000c000ef74      0xb95 hw/cpu.32
                0x00000000c000ef74                CPU::close(int, int, void*)
                0x00000000c000ef78                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000ef94                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000efac                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f020                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f0a4                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f0d2                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f100                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f12e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f15c                CPU::CPU()
                0x00000000c000f15c                CPU::CPU()
                0x00000000c000f1ea                CPU::displayFeatures()
                0x00000000c000f1ec                CPU::detectFeatures()
                0x00000000c000f8b0                CPU::setupSMEP()
                0x00000000c000f8bc                CPU::setupUMIP()
                0x00000000c000f8c6                CPU::setupTSC()
                0x00000000c000f8d0                CPU::setupLargePages()
                0x00000000c000f8da                CPU::setupPAT()
                0x00000000c000f916                CPU::setupMTRR()
                0x00000000c000f918                CPU::setupGlobalPages()
                0x00000000c000f922                CPU::allowUsermodeDataAccess()
                0x00000000c000f934                CPU::prohibitUsermodeDataAccess()
                0x00000000c000f946                CPU::setupSMAP()
                0x00000000c000f954                CPU::setupFeatures()
                0x00000000c000fa20                CPU::open(int, int, void*)
 .text          0x00000000c000fb09       0xd1 krnl/bootmsg.32
                0x00000000c000fb09                KeDisplaySplashScreen()
                0x00000000c000fb77                KeSetBootMessage(char const*)
 .text          0x00000000c000fbda      0x581 krnl/env.32
                0x00000000c000fbda                EnvVarContainer::getEnv(char const*)
                0x00000000c000fc18                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fcda                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fcdc                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000fec2                EnvVarContainer::__loadSystem()
                0x00000000c000fedc                EnvVarContainer::__loadUser()
                0x00000000c000fede                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fede                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000ff00                EnvVarContainer::~EnvVarContainer()
                0x00000000c000ff00                EnvVarContainer::~EnvVarContainer()
                0x00000000c000ff30                Krnl::getEnv(Process*, char const*)
                0x00000000c000ff95                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000ffaf                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000ffce                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000ffe1                Krnl::deleteEnvSystem(char const*)
                0x00000000c000ffe2                Krnl::deleteEnvUser(char const*)
                0x00000000c000ffe3                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000ffe4                Krnl::newProcessEnv(Process*)
                0x00000000c0010006                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010052                Krnl::loadSystemEnv()
                0x00000000c0010080                Krnl::loadUserEnv()
                0x00000000c00100a6                Krnl::flushEnv()
                0x00000000c00100a7                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00100c7                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001015b       0x94 krnl/inlines.32
                0x00000000c001015b                CPU::current()
                0x00000000c0010167                operator new(unsigned long)
                0x00000000c001016c                operator delete(void*)
                0x00000000c0010171                disableIRQs()
                0x00000000c0010173                enableIRQs()
                0x00000000c0010175                lockScheduler()
                0x00000000c001017d                unlockScheduler()
                0x00000000c001018c                lockStuff()
                0x00000000c001019a                unlockStuff()
                0x00000000c00101d4                Virt::getAKernelVAS()
                0x00000000c00101da                __not_memcpy
 .text          0x00000000c00101ef        0xc krnl/panic.32
                0x00000000c00101ef                KePanic(char const*)
 .text          0x00000000c00101fb      0x142 krnl/powctrl.32
                0x00000000c00101fb                Krnl::powerThread(void*)
                0x00000000c0010229                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c001023f                Krnl::userIOReceived()
                0x00000000c001024a                Krnl::handlePowerButton()
                0x00000000c001027f                Krnl::handleSleepButton()
                0x00000000c00102b4                Krnl::setupPowerManager()
 *fill*         0x00000000c001033d        0x3 
 .text          0x00000000c0010340      0x190 krnl/resolve.32
                0x00000000c0010340                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00104d0      0x2c3 krnl/signal.32
                0x00000000c00104d0                KiSigKill(int)
                0x00000000c00104fc                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00104fd                KiDefaultSignalHandlerPause(int)
                0x00000000c0010529                KiDefaultSignalHandlerResume(int)
                0x00000000c0010555                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001055a                KeInitSignals()
                0x00000000c00105a5                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00105db                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010658                KeCheckSignal(SigHandlerBlock*)
                0x00000000c0010743                KiCheckSignalZ
                0x00000000c0010758                KeCompleteSignal(SigHandlerBlock*, int)
 .text          0x00000000c0010793      0xcfe krnl/syscalls.32
                0x00000000c0010793                SysSeekDir(regs*)
                0x00000000c0010798                SysTellDir(regs*)
                0x00000000c001079d                SysVerify(regs*)
                0x00000000c00107a7                SysGetArgc(regs*)
                0x00000000c00107b7                SysTTYName(regs*)
                0x00000000c00107bf                SysFormatDisk(regs*)
                0x00000000c001082c                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010876                SysGetDiskVolumeLabel(regs*)
                0x00000000c00108cb                SysShutdown(regs*)
                0x00000000c0010929                SysRealpath(regs*)
                0x00000000c001096c                SysReadDir(regs*)
                0x00000000c00109ec                SysIsATTY(regs*)
                0x00000000c0010a48                SysSeek(regs*)
                0x00000000c0010aa1                SysTell(regs*)
                0x00000000c0010b10                SysSize(regs*)
                0x00000000c0010b85                SysSizeFromFilename(regs*)
                0x00000000c0010c38                SysClose(regs*)
                0x00000000c0010c98                SysOpenDir(regs*)
                0x00000000c0010da9                SysCloseDir(regs*)
                0x00000000c0010dfd                SysMakeDir(regs*)
                0x00000000c0010e6f                SysWait(regs*)
                0x00000000c0010e8c                SysNotImpl(regs*)
                0x00000000c0010ea7                SysPanic(regs*)
                0x00000000c0010ec2                SysRmdir(regs*)
                0x00000000c0010f29                SysUnlink(regs*)
                0x00000000c0010f90                SysGetArgv(regs*)
                0x00000000c0010fdd                SysUSleep(regs*)
                0x00000000c0011006                SysSpawn(regs*)
                0x00000000c001106f                SysGetEnv(regs*)
                0x00000000c001111e                SysSetFatAttrib(regs*)
                0x00000000c0011195                SysPipe(regs*)
                0x00000000c00111da                SysGetUnixTime(regs*)
                0x00000000c00111ee                string_ends_with(char const*, char const*)
                0x00000000c0011238                SysOpen(regs*)
                0x00000000c001143f                KeSystemCall(regs*, void*)
 .text          0x00000000c0011491      0x50e reg/registry.32
                0x00000000c0011491                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00115e9                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001173e                Reg::getLine(char*, char*, char*)
                0x00000000c0011775                Reg::readInt(char*, char*, int*)
                0x00000000c0011860                Reg::readString(char*, char*, char*, int)
                0x00000000c00118e1                Reg::readBool(char*, char*, bool*)
                0x00000000c0011906                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0011932                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001195e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001199f       0x36 sys/eject.32
                0x00000000c001199f                SysEject(regs*)
 .text          0x00000000c00119d5       0x18 sys/exit.32
                0x00000000c00119d5                SysExit(regs*)
 .text          0x00000000c00119ed       0x1f sys/getcwd.32
                0x00000000c00119ed                SysGetCwd(regs*)
 .text          0x00000000c0011a0c        0xc sys/getpid.32
                0x00000000c0011a0c                SysGetPID(regs*)
 .text          0x00000000c0011a18       0x1a sys/getramdata.32
                0x00000000c0011a18                SysGetRAMData(regs*)
 .text          0x00000000c0011a32       0x82 sys/getvgaptr.32
                0x00000000c0011a32                SysGetVGAPtr(regs*)
 .text          0x00000000c0011ab4       0xa8 sys/loaddll.32
                0x00000000c0011ab4                SysLoadDLL(regs*)
 .text          0x00000000c0011b5c       0x68 sys/read.32
                0x00000000c0011b5c                SysRead(regs*)
 .text          0x00000000c0011bc4       0x29 sys/registersignal.32
                0x00000000c0011bc4                SysRegisterSignal(regs*)
 .text          0x00000000c0011bed       0x67 sys/sbrk.32
                0x00000000c0011bed                SysSbrk(regs*)
 .text          0x00000000c0011c54       0x1c sys/setcwd.32
                0x00000000c0011c54                SysSetCwd(regs*)
 .text          0x00000000c0011c70       0x95 sys/settime.32
                0x00000000c0011c70                SysSetTime(regs*)
 .text          0x00000000c0011d05       0x4a sys/timezone.32
                0x00000000c0011d05                SysTimezone(regs*)
 .text          0x00000000c0011d4f       0x68 sys/write.32
                0x00000000c0011d4f                SysWrite(regs*)
 .text          0x00000000c0011db7       0x62 sys/wsbe.32
                0x00000000c0011db7                SysWsbe(regs*)
 .text          0x00000000c0011e19       0x25 sys/yield.32
                0x00000000c0011e19                SysYield(regs*)
 .text          0x00000000c0011e3e     0x11e5 thr/elf.32
                0x00000000c0011e3e                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00120ca                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00122e0                Thr::runtimeReferenceHelper()
                0x00000000c00122f3                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0012342                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0012600                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012d36                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012d68                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012d9f                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012db9                Thr::loadDLL(char const*, bool)
                0x00000000c0012fea                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0013023        0x1 
 .text          0x00000000c0013024     0x12fd thr/prcssthr.32
                0x00000000c0013024                userModeEntryPoint(void*)
                0x00000000c001304c                changeTSS
                0x00000000c001307c                switchToThread(ThreadControlBlock*)
                0x00000000c0013130                Process::addArgs(char**)
                0x00000000c0013190                Process::Process(char const*, Process*, char**)
                0x00000000c0013190                Process::Process(char const*, Process*, char**)
                0x00000000c001339c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001339c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013574                taskStartupFunction
                0x00000000c0013580                Semaphore::Semaphore(int)
                0x00000000c0013580                Semaphore::Semaphore(int)
                0x00000000c00135b0                Mutex::Mutex()
                0x00000000c00135b0                Mutex::Mutex()
                0x00000000c00135c4                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00136bc                Process::createUserThread()
                0x00000000c00136dc                setupMultitasking(void (*)())
                0x00000000c00137e4                schedule()
                0x00000000c0013874                Semaphore::tryAcquire()
                0x00000000c0013940                Semaphore::assertLocked(char const*)
                0x00000000c00139b8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00139e0                blockTask(TaskState)
                0x00000000c0013a10                waitTask(int, int*, int)
                0x00000000c0013a54                milliTenthSleepUntil(unsigned int)
                0x00000000c0013ae4                milliTenthSleep(unsigned int)
                0x00000000c0013af4                sleep(unsigned int)
                0x00000000c0013b10                Semaphore::acquire()
                0x00000000c0013bcc                taskReturned
                0x00000000c0013c08                Thr::processFromPID(int)
                0x00000000c0013ca8                unblockTask(ThreadControlBlock*)
                0x00000000c0013d4c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0014018                cleanerTaskFunction(void*)
                0x00000000c0014108                terminateTask(int)
                0x00000000c00141d4                Thr::terminateFromIRQ(int)
                0x00000000c00141e4                Semaphore::release()
 .text          0x00000000c0014321      0xb93 vm86/vm8086.32
                0x00000000c0014321                Vm::inbv(unsigned short)
                0x00000000c0014334                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001436a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001437a                Vm::getSegment(unsigned int)
                0x00000000c0014382                Vm::getOffset(unsigned int)
                0x00000000c0014387                Vm::mainloop2()
                0x00000000c00143c1                Vm::mainVm8086Loop(void*)
                0x00000000c00143d1                Vm::mainloop3(unsigned long)
                0x00000000c00143f7                Vm::initialise8086()
                0x00000000c001443a                Vm::finish8086()
                0x00000000c001449b                Vm::getOutput8086(unsigned char*)
                0x00000000c00144c0                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014579                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00146e1                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001476b                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001477c                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001478e                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001479f                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00147b4                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00147ca                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00147df                Vm::faultHandler(regs*)
 .text          0x00000000c0014eb4      0xa53 arch/i386/hal.32
                0x00000000c0014eb4                noCopro(unsigned long)
                0x00000000c0014eb5                nmiHandler(regs*, void*)
                0x00000000c0014ece                doubleFault(regs*, void*)
                0x00000000c0014ee7                displayDebugInfo(regs*)
                0x00000000c0015208                HalSystemIdle()
                0x00000000c001527e                displayProgramFault(char const*)
                0x00000000c00152ca                gpFault(regs*, void*)
                0x00000000c001532f                pgFault(regs*, void*)
                0x00000000c00153b5                otherISRHandler(regs*, void*)
                0x00000000c00153e9                opcodeFault(regs*, void*)
                0x00000000c0015469                i386SaveCoprocessor(void*)
                0x00000000c001547d                i386LoadCoprocessor(void*)
                0x00000000c0015491                x87EmulHandler(regs*, void*)
                0x00000000c001552e                HalInitialiseCoprocessor()
                0x00000000c00155dc                HalPanic(char const*)
                0x00000000c00156d5                HalQueryPerformanceCounter()
                0x00000000c00156f0                HalInitialise()
                0x00000000c0015896                HalMakeBeep(int)
                0x00000000c00158d0                HalGetRand()
                0x00000000c00158d3                HalEndOfInterrupt(int)
                0x00000000c0015904                HalRestart()
                0x00000000c0015905                HalShutdown()
                0x00000000c0015906                HalSleep()
 *fill*         0x00000000c0015907        0x1 
 .text          0x00000000c0015908      0x2f4 arch/i386/pic.32
                0x00000000c0015908                picIoWait()
                0x00000000c0015910                picDisable()
                0x00000000c0015944                picGetIRQReg(int)
                0x00000000c00159c8                picOpen()
                0x00000000c0015b58                picEOI(int)
 .text          0x00000000c0015bfc      0x64d arch/i386/rtc.32
                0x00000000c0015bfc                RTC::open(int, int, void*)
                0x00000000c0015c00                RTC::close(int, int, void*)
                0x00000000c0015c04                RTC::timeInSecondsUTC()
                0x00000000c0015c16                RTC::timeInDatetimeUTC()
                0x00000000c0015c3c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015c7a                RTC::~RTC()
                0x00000000c0015c7a                RTC::~RTC()
                0x00000000c0015c9e                RTC::~RTC()
                0x00000000c0015cc8                RTC::get_update_in_progress_flag()
                0x00000000c0015ce0                RTC::completeRTCRefresh()
                0x00000000c0015f98                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001614b                rtcIRQHandler(regs*, void*)
                0x00000000c0016190                RTC::RTC()
                0x00000000c0016190                RTC::RTC()
 *fill*         0x00000000c0016249        0x3 
 .text          0x00000000c001624c      0x203 arch/i386/vga.32
                0x00000000c001624c                HalConsoleScroll(int, int)
                0x00000000c0016354                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00163c0                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c001644f        0x1 
 .text          0x00000000c0016450     0x13e7 fs/fat/vfslink.32
                0x00000000c0016450                FAT::getName()
                0x00000000c0016458                FAT::tell(void*, unsigned long long*)
                0x00000000c0016494                FAT::stat(void*, unsigned long long*)
                0x00000000c00164d0                FAT::~FAT()
                0x00000000c00164d0                FAT::~FAT()
                0x00000000c00164f4                FAT::~FAT()
                0x00000000c001651c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00165c0                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0016684                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016858                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016a70                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016c30                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016d9c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016dfc                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016e5c                FAT::close(void*)
                0x00000000c0016eb0                FAT::closeDir(void*)
                0x00000000c0016f04                FAT::seek(void*, unsigned long long)
                0x00000000c0016f5c                fatWrapperReadDisk
                0x00000000c0016fa0                fatWrapperWriteDisk
                0x00000000c0016fe4                fatWrapperIoctl
                0x00000000c0017100                FAT::FAT()
                0x00000000c0017100                FAT::FAT()
                0x00000000c0017154                FAT::fixFilepath(char*)
                0x00000000c0017190                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00172c8                FAT::openDir(char const*, void**)
                0x00000000c0017378                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017470                FAT::unlink(char const*)
                0x00000000c00174f0                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001767c                FAT::rename(char const*, char const*)
                0x00000000c0017748                FAT::mkdir(char const*)
                0x00000000c00177c8                FAT::exists(char const*)
 *fill*         0x00000000c0017837        0x1 
 .text          0x00000000c0017838       0xc6 fs/iso9660/helper.32
                0x00000000c0017838                isoReadDiscSectorHelper
                0x00000000c0017894                iso_kprintf
                0x00000000c00178b4                iso_kprintfd
 .text          0x00000000c00178fe      0x586 fs/iso9660/vfslink.32
                0x00000000c00178fe                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017904                ISO9660::getName()
                0x00000000c001790a                ISO9660::closeDir(void*)
                0x00000000c0017914                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001791a                ISO9660::unlink(char const*)
                0x00000000c0017920                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017926                ISO9660::rename(char const*, char const*)
                0x00000000c001792c                ISO9660::mkdir(char const*)
                0x00000000c0017932                ISO9660::~ISO9660()
                0x00000000c0017932                ISO9660::~ISO9660()
                0x00000000c0017956                ISO9660::~ISO9660()
                0x00000000c001797e                ISO9660::exists(char const*)
                0x00000000c0017992                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017a32                ISO9660::openDir(char const*, void**)
                0x00000000c0017ac2                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017b02                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017b3a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017b70                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017baa                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017c7c                ISO9660::close(void*)
                0x00000000c0017ca2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017d6f                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017dea                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017e5c                ISO9660::ISO9660()
                0x00000000c0017e5c                ISO9660::ISO9660()
 .text          0x00000000c0017e84      0x26c hal/sound/sndcard.32
                0x00000000c0017e84                SoundCard::beginPlayback()
                0x00000000c0017e92                SoundCard::stopPlayback()
                0x00000000c0017ea0                SoundCard::SoundCard(char const*)
                0x00000000c0017ea0                SoundCard::SoundCard(char const*)
                0x00000000c0017f3e                SoundCard::~SoundCard()
                0x00000000c0017f3e                SoundCard::~SoundCard()
                0x00000000c0017f62                SoundCard::~SoundCard()
                0x00000000c0017f8c                SoundCard::configureRates(int, int, int)
                0x00000000c0017fbc                SoundCard::getSamples16(int, short*)
                0x00000000c0018018                SoundCard::getSamples32(int, int*)
                0x00000000c001809e                SoundCard::addChannel(SoundPort*)
                0x00000000c00180dc                SoundCard::removeChannel(int)
 .text          0x00000000c00180f0      0x377 hal/sound/sndport.32
                0x00000000c00180f0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00180f0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001817c                SoundPort::~SoundPort()
                0x00000000c001817c                SoundPort::~SoundPort()
                0x00000000c00181b0                SoundPort::unpause()
                0x00000000c00181bc                SoundPort::pause()
                0x00000000c00181c8                SoundPort::getBufferUsed()
                0x00000000c00181d0                SoundPort::getBufferSize()
                0x00000000c00181d8                SoundPort::buffer16(short*, int)
                0x00000000c0018264                SoundPort::buffer32(int*, int)
                0x00000000c00182ec                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00183b0                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0018467        0x0 hw/bus/isa.32
 *fill*         0x00000000c0018467        0x1 
 .text          0x00000000c0018468      0xb49 hw/bus/pci.32
                0x00000000c0018468                PCI::open(int, int, void*)
                0x00000000c0018486                PCI::close(int, int, void*)
                0x00000000c001848a                PCI::PCI()
                0x00000000c001848a                PCI::PCI()
                0x00000000c0018524                PCI::readBAR8(unsigned int, int)
                0x00000000c0018540                PCI::readBAR16(unsigned int, int)
                0x00000000c001855e                PCI::readBAR32(unsigned int, int)
                0x00000000c001857a                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001859a                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c00185bc                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c00185dc                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001864a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00186f2                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018716                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001873e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018788                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c00187b0                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c00187d4                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c00187f8                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018820                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018884                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001896c                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018be6                PCI::checkBus(unsigned char)
                0x00000000c0018c0c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018d7e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018ef2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018f5e                PCI::detect()
 *fill*         0x00000000c0018fb1        0x1 
 .text          0x00000000c0018fb2      0xb5a hw/diskctrl/ide.32
                0x00000000c0018fb2                IDE::close(int, int, void*)
                0x00000000c0018fb6                IDE::IDE()
                0x00000000c0018fb6                IDE::IDE()
                0x00000000c0018fea                IDE::prepareInterrupt(unsigned char)
                0x00000000c0018ffc                selectDrive(unsigned char, unsigned char)
                0x00000000c0018ffe                IDE::getBase(unsigned char)
                0x00000000c0019010                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c00190d0                IDE::read(unsigned char, unsigned char)
                0x00000000c001917e                IDE::waitInterrupt(unsigned char)
                0x00000000c00191e6                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0019202                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001921e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019264                IDE::open(int, int, void*)
                0x00000000c0019672                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001973e                IDE::detect()
                0x00000000c00199fe                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019aae                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019b0c      0x32a hw/diskctrl/satabus.32
                0x00000000c0019b0c                SATABus::close(int, int, void*)
                0x00000000c0019b10                SATABus::detect()
                0x00000000c0019b12                SATABus::SATABus()
                0x00000000c0019b12                SATABus::SATABus()
                0x00000000c0019b98                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019bca                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c12                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c32                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c5c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019d6c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019e16                SATABus::open(int, int, void*)
 .text          0x00000000c0019e36      0x5f4 hw/diskphys/ata.32
                0x00000000c0019e36                ATA::close(int, int, void*)
                0x00000000c0019e5a                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019e5c                ATA::ATA()
                0x00000000c0019e5c                ATA::ATA()
                0x00000000c0019e8a                ATA::flush(bool)
                0x00000000c0019ed4                ATA::readyForCommand()
                0x00000000c0019f20                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a29c                ATA::read(unsigned long long, int, void*)
                0x00000000c001a2e8                ATA::write(unsigned long long, int, void*)
                0x00000000c001a334                ATA::detectCHS()
                0x00000000c001a35e                ATA::open(int, int, void*)
 .text          0x00000000c001a42a      0x60e hw/diskphys/atapi.32
                0x00000000c001a42a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a430                ATAPI::close(int, int, void*)
                0x00000000c001a454                ATAPI::ATAPI()
                0x00000000c001a454                ATAPI::ATAPI()
                0x00000000c001a482                ATAPI::readyForCommand()
                0x00000000c001a4d4                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a794                ATAPI::diskRemoved()
                0x00000000c001a7ce                ATAPI::eject()
                0x00000000c001a816                ATAPI::diskInserted()
                0x00000000c001a822                ATAPI::detectMedia()
                0x00000000c001a8de                ATAPI::open(int, int, void*)
                0x00000000c001a9be                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001aa38      0x402 hw/diskphys/sata.32
                0x00000000c001aa38                SATA::close(int, int, void*)
                0x00000000c001aa5c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001aa5e                SATA::open(int, int, void*)
                0x00000000c001ab08                SATA::SATA()
                0x00000000c001ab08                SATA::SATA()
                0x00000000c001ab36                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ad82                SATA::read(unsigned long long, int, void*)
                0x00000000c001adce                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001ae3a      0x5af hw/diskphys/satapi.32
                0x00000000c001ae3a                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ae40                SATAPI::close(int, int, void*)
                0x00000000c001ae64                SATAPI::SATAPI()
                0x00000000c001ae64                SATAPI::SATAPI()
                0x00000000c001ae92                SATAPI::diskRemoved()
                0x00000000c001ae94                SATAPI::diskInserted()
                0x00000000c001aeb0                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b190                SATAPI::eject()
                0x00000000c001b1cc                SATAPI::detectMedia()
                0x00000000c001b1f2                SATAPI::open(int, int, void*)
                0x00000000c001b2f2                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b3e9        0x1 
 .text          0x00000000c001b3ea      0x455 hw/intctrl/apic.32
                0x00000000c001b3ea                IOAPIC::close(int, int, void*)
                0x00000000c001b3f0                apicGetBase()
                0x00000000c001b432                IOAPIC::IOAPIC()
                0x00000000c001b432                IOAPIC::IOAPIC()
                0x00000000c001b45a                apicOpen()
                0x00000000c001b5c0                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b5f2                IOAPIC::read(int)
                0x00000000c001b61a                IOAPIC::open(int, int, void*)
                0x00000000c001b70e                IOAPIC::write(int, int)
                0x00000000c001b73a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b83f        0x1 
 .text          0x00000000c001b840       0xf0 hw/timer/apictimer.32
                0x00000000c001b840                APICTimer::close(int, int, void*)
                0x00000000c001b848                apicTimerHandler(regs*, void*)
                0x00000000c001b870                APICTimer::open(int, int, void*)
                0x00000000c001b8e0                APICTimer::write(int)
                0x00000000c001b908                APICTimer::APICTimer()
                0x00000000c001b908                APICTimer::APICTimer()
 .text          0x00000000c001b930      0x1aa hw/timer/pit.32
                0x00000000c001b930                PIT::write(int)
                0x00000000c001b9b4                pitHandler(regs*, void*)
                0x00000000c001b9d8                PIT::open(int, int, void*)
                0x00000000c001ba28                PIT::close(int, int, void*)
                0x00000000c001ba58                PIT::PIT()
                0x00000000c001ba58                PIT::PIT()
 *fill*         0x00000000c001bada        0x6 
 .text          0x00000000c001bae0       0x83 arch/i386/avx.32
                0x00000000c001bae0                avxDetect
                0x00000000c001bb0a                avxSave
                0x00000000c001bb1b                avxLoad
                0x00000000c001bb2c                avxInit
                0x00000000c001bb4e                avxClose
                0x00000000c001bb4f                wouldSheSayYes
 *fill*         0x00000000c001bb63        0xd 
 .text          0x00000000c001bb70      0x231 arch/i386/interrupt.32
                0x00000000c001bb70                isr0
                0x00000000c001bb80                isr1
                0x00000000c001bb8a                isr2
                0x00000000c001bb94                isr3
                0x00000000c001bb9e                isr4
                0x00000000c001bba8                isr5
                0x00000000c001bbb2                isr6
                0x00000000c001bbbc                isr7
                0x00000000c001bbc6                isr8
                0x00000000c001bbce                isr9
                0x00000000c001bbd8                isr10
                0x00000000c001bbe0                isr11
                0x00000000c001bbe8                isr12
                0x00000000c001bbf0                isr13
                0x00000000c001bbf8                isr14
                0x00000000c001bc00                isr15
                0x00000000c001bc0a                isr16
                0x00000000c001bc14                isr17
                0x00000000c001bc1e                isr18
                0x00000000c001bc28                irq3
                0x00000000c001bc32                irq4
                0x00000000c001bc3c                irq5
                0x00000000c001bc46                irq6
                0x00000000c001bc50                irq7
                0x00000000c001bc5a                irq8
                0x00000000c001bc64                irq9
                0x00000000c001bc6e                irq10
                0x00000000c001bc78                irq11
                0x00000000c001bc82                irq12
                0x00000000c001bc8c                irq13
                0x00000000c001bc96                irq14
                0x00000000c001bca0                irq15
                0x00000000c001bcaa                irq1
                0x00000000c001bcb1                irq2
                0x00000000c001bcb8                isr96
                0x00000000c001bcbf                irq0
                0x00000000c001bcc4                int_common_stub
                0x00000000c001bcf6                syscall_common_stub
                0x00000000c001bd51                irq16
                0x00000000c001bd5b                irq17
                0x00000000c001bd65                irq18
                0x00000000c001bd6f                irq19
                0x00000000c001bd79                irq20
                0x00000000c001bd83                irq21
                0x00000000c001bd8d                irq22
                0x00000000c001bd97                irq23
 *fill*         0x00000000c001bda1        0xf 
 .text          0x00000000c001bdb0       0x10 arch/i386/rdrand.32
                0x00000000c001bdb0                i386GetRDRAND
 .text          0x00000000c001bdc0       0x39 arch/i386/sse.32
                0x00000000c001bdc0                absolutelyNoChanceInHell
                0x00000000c001bdc0                sseDetect
                0x00000000c001bdd8                sseSave
                0x00000000c001bde0                sseLoad
                0x00000000c001bde8                sseInit
                0x00000000c001bdf8                sseClose
 *fill*         0x00000000c001bdf9        0x7 
 .text          0x00000000c001be00       0x49 arch/i386/x87.32
                0x00000000c001be06                x87Detect
                0x00000000c001be21                x87Save
                0x00000000c001be28                x87Load
                0x00000000c001be2f                x87Init
                0x00000000c001be48                x87Close
 *fill*         0x00000000c001be49        0x3 
 .text          0x00000000c001be4c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001be71        0x0 crtn.32
 *fill*         0x00000000c001be71        0x3 
 .text          0x00000000c001be74      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001be74                __divdi3
 *fill*         0x00000000c001bfbf        0x1 
 .text          0x00000000c001bfc0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001bfc0                __moddi3
 *fill*         0x00000000c001c13e        0x2 
 .text          0x00000000c001c140       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c140                __udivdi3
 *fill*         0x00000000c001c23f        0x1 
 .text          0x00000000c001c240      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c240                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c360        0x0
 .iplt          0x00000000c001c360        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c35a        0xf
 .init          0x00000000c001c35a        0x3 crti.32
                0x00000000c001c35a                _init
 .init          0x00000000c001c35d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c362        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c367        0x2 crtn.32

.fini           0x00000000c001c369        0xa
 .fini          0x00000000c001c369        0x3 crti.32
                0x00000000c001c369                _fini
 .fini          0x00000000c001c36c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c371        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c374       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c374       0x23 core/computer.32
                0x00000000c001c374                Computer::~Computer()
                0x00000000c001c374                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c398       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c398       0x2a core/computer.32
                0x00000000c001c398                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c3c2       0x21
 .text._Z10idleCommonv
                0x00000000c001c3c2       0x21 core/idle.32
                0x00000000c001c3c2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c3e4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c3e4        0x2 core/unixfile.32
                0x00000000c001c3e4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c3e4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c3e6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c3e6       0x42 core/unixfile.32
                0x00000000c001c3e6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c3e6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c428       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c428       0xd3 core/unixfile.32
                0x00000000c001c428                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c4fc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c4fc        0x7 core/unixfile.32
                0x00000000c001c4fc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c504       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c504       0xa1 core/unixfile.32
                0x00000000c001c504                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c5a6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c5a6        0x8 core/unixfile.32
                0x00000000c001c5a6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c5ae       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c5ae       0x1a hal/device.32
                0x00000000c001c5ae                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c5ae                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c5c8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c5c8       0x2a hal/device.32
                0x00000000c001c5c8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c5f2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c5f2       0xdc hal/device.32
                0x00000000c001c5f2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c6ce       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c6ce       0x42 hal/device.32
                0x00000000c001c6ce                LinkedList<Device>::LinkedList()
                0x00000000c001c6ce                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c710       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c710       0x1c hal/timer.32
                0x00000000c001c710                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c72c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c72c        0x7 hal/timer.32
                0x00000000c001c72c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c734       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c734       0xb8 hal/timer.32
                0x00000000c001c734                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c7ec       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c7ec       0xda hal/timer.32
                0x00000000c001c7ec                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c8c8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c8c8       0x23 hw/acpi.32
                0x00000000c001c8c8                ACPI::~ACPI()
                0x00000000c001c8c8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c8ec       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c8ec       0x2a hw/acpi.32
                0x00000000c001c8ec                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c918        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c918        0x2 hw/acpi.32
                0x00000000c001c918                LinkedList<Device>::~LinkedList()
                0x00000000c001c918                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c91c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c91c       0x1c hw/acpi.32
                0x00000000c001c91c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c938        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c938        0x7 hw/acpi.32
                0x00000000c001c938                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c940       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c940       0xb8 hw/acpi.32
                0x00000000c001c940                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001c9f8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001c9f8       0x23 hw/cpu.32
                0x00000000c001c9f8                CPU::~CPU()
                0x00000000c001c9f8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ca1c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ca1c       0x2a hw/cpu.32
                0x00000000c001ca1c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ca48        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ca48        0x2 thr/prcssthr.32
                0x00000000c001ca48                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ca48                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ca4c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ca4c       0x49 thr/prcssthr.32
                0x00000000c001ca4c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ca4c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ca98       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ca98       0x42 thr/prcssthr.32
                0x00000000c001ca98                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ca98                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cadc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cadc        0x8 thr/prcssthr.32
                0x00000000c001cadc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cae4       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cae4       0x23 hw/bus/pci.32
                0x00000000c001cae4                PCI::~PCI()
                0x00000000c001cae4                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cb08       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cb08       0x2a hw/bus/pci.32
                0x00000000c001cb08                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cb32       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cb32       0x23 hw/diskctrl/ide.32
                0x00000000c001cb32                IDE::~IDE()
                0x00000000c001cb32                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cb56       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cb56       0x2a hw/diskctrl/ide.32
                0x00000000c001cb56                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cb80       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cb80       0x23 hw/diskctrl/satabus.32
                0x00000000c001cb80                SATABus::~SATABus()
                0x00000000c001cb80                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cba4       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cba4       0x2a hw/diskctrl/satabus.32
                0x00000000c001cba4                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cbce       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cbce       0x23 hw/diskphys/ata.32
                0x00000000c001cbce                ATA::~ATA()
                0x00000000c001cbce                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cbf2       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cbf2       0x2a hw/diskphys/ata.32
                0x00000000c001cbf2                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cc1c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cc1c       0x23 hw/diskphys/atapi.32
                0x00000000c001cc1c                ATAPI::~ATAPI()
                0x00000000c001cc1c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cc40       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cc40       0x2a hw/diskphys/atapi.32
                0x00000000c001cc40                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cc6a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cc6a       0x23 hw/diskphys/sata.32
                0x00000000c001cc6a                SATA::~SATA()
                0x00000000c001cc6a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cc8e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cc8e       0x2a hw/diskphys/sata.32
                0x00000000c001cc8e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001ccb8       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001ccb8       0x23 hw/diskphys/satapi.32
                0x00000000c001ccb8                SATAPI::~SATAPI()
                0x00000000c001ccb8                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001ccdc       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001ccdc       0x2a hw/diskphys/satapi.32
                0x00000000c001ccdc                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cd06       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cd06       0x23 hw/intctrl/apic.32
                0x00000000c001cd06                IOAPIC::~IOAPIC()
                0x00000000c001cd06                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cd2a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cd2a       0x2a hw/intctrl/apic.32
                0x00000000c001cd2a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001cd54       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001cd54       0x23 hw/timer/apictimer.32
                0x00000000c001cd54                APICTimer::~APICTimer()
                0x00000000c001cd54                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001cd78       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001cd78       0x2a hw/timer/apictimer.32
                0x00000000c001cd78                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001cda4       0x23
 .text._ZN3PITD2Ev
                0x00000000c001cda4       0x23 hw/timer/pit.32
                0x00000000c001cda4                PIT::~PIT()
                0x00000000c001cda4                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001cdc8       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001cdc8       0x2a hw/timer/pit.32
                0x00000000c001cdc8                PIT::~PIT()

.rodata         0x00000000c001cdf2     0x29d2
                0x00000000c001cdf2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cdf2        0x2 
 .ctors         0x00000000c001cdf4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cdf8        0x4 core/unixfile.32
 .ctors         0x00000000c001cdfc        0x4 thr/prcssthr.32
 .ctors         0x00000000c001ce00        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ce04                end_ctors = .
                0x00000000c001ce04                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ce04        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ce08        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ce08                __DTOR_END__
                0x00000000c001ce0c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001ce0c       0x14 
 .rodata        0x00000000c001ce20      0x101 acpica/utclib.32
                0x00000000c001ce20                AcpiGbl_Ctypes
 *fill*         0x00000000c001cf21        0x3 
 .rodata        0x00000000c001cf24       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001cf3c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001cf86       0x1a 
 .rodata        0x00000000c001cfa0       0xed fs/fat/ff.32
 *fill*         0x00000000c001d08d       0x13 
 .rodata        0x00000000c001d0a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d4a0       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d4b1      0x115 core/computer.32
 *fill*         0x00000000c001d5c6        0x2 
 .rodata.str1.4
                0x00000000c001d5c8       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d630       0x2c core/computer.32
                0x00000000c001d630                vtable for Computer
 .rodata.str1.4
                0x00000000c001d65c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d68c        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d698       0x17 core/main.32
 *fill*         0x00000000c001d6af        0x1 
 .rodata.str1.4
                0x00000000c001d6b0       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d755       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d7ad       0x39 core/pipe.32
 *fill*         0x00000000c001d7e6        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d7e8       0x1c core/pipe.32
                0x00000000c001d7e8                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d804       0x75 core/terminal.32
 *fill*         0x00000000c001d879        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d87c       0x1c core/terminal.32
                0x00000000c001d87c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d898       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d8ba       0x15 core/unixfile.32
 *fill*         0x00000000c001d8cf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d8d0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d91b        0x8 core/unixfile.32
 *fill*         0x00000000c001d923        0x1 
 .rodata.str1.4
                0x00000000c001d924       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d944       0x1c core/unixfile.32
                0x00000000c001d944                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001d960       0x1c core/unixfile.32
                0x00000000c001d960                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001d97c      0x191 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001db0d      0x121 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dc2e       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dc61       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dc61        0x3 
 .rodata        0x00000000c001dc64      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001ddb4       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001ddb4       0x68 fs/vfs.32
                0x00000000c001ddb4                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001de1c       0x1c fs/vfs.32
                0x00000000c001de1c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001de38       0x1c fs/vfs.32
                0x00000000c001de38                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001de54       0x2c hal/bus.32
                0x00000000c001de54                vtable for Bus
 .rodata.str1.1
                0x00000000c001de80       0x1e hal/clock.32
 *fill*         0x00000000c001de9e        0x2 
 .rodata._ZTV5Clock
                0x00000000c001dea0       0x3c hal/clock.32
                0x00000000c001dea0                vtable for Clock
 *fill*         0x00000000c001dedc        0x4 
 .rodata        0x00000000c001dee0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001df10       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001df68       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001df68       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001df68       0x2c hal/device.32
                0x00000000c001df68                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001df94       0x2c hal/device.32
                0x00000000c001df94                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001dfc0       0x2c hal/diskctrl.32
                0x00000000c001dfc0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001dfec       0x38 hal/diskphys.32
                0x00000000c001dfec                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e024       0x3e hal/intctrl.32
 *fill*         0x00000000c001e062        0x2 
 .rodata.str1.4
                0x00000000c001e064       0x5d hal/intctrl.32
 .rodata        0x00000000c001e0c1       0x63 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e124       0x34 hal/keybrd.32
                0x00000000c001e124                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e158       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e19c       0x2c hal/logidisk.32
                0x00000000c001e19c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e1c8       0x2c hal/mouse.32
                0x00000000c001e1c8                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e1f4        0xb hal/partition.32
 *fill*         0x00000000c001e1ff        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e200       0x44 hal/serial.32
                0x00000000c001e200                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e244       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e244        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e244       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e244       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e244       0x30 hal/timer.32
                0x00000000c001e244                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e274       0x10 hal/vcache.32
                0x00000000c001e274                vtable for VCache
 .rodata.str1.1
                0x00000000c001e284       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e2ec       0x48 hal/video.32
                0x00000000c001e2ec                vtable for Video
 .rodata.str1.4
                0x00000000c001e334       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e3cf      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e50b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e50b        0x8 hw/acpi.32
 *fill*         0x00000000c001e50b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e50c       0x2c hw/acpi.32
                0x00000000c001e50c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e538      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e6a5        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e6a8       0x2c hw/cpu.32
                0x00000000c001e6a8                vtable for CPU
 .rodata.str1.1
                0x00000000c001e6d4       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e710       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c001e7a1       0xd3 krnl/signal.32
 .rodata.str1.4
                0x00000000c001e874       0x26 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c001e89a       0x97 krnl/syscalls.32
                                         0xa7 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e931       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e976        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001e980        0xc sys/sbrk.32
 .rodata.str1.1
                0x00000000c001e98c       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001e9e0       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001ea0c      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001ebd8       0x57 thr/prcssthr.32
 *fill*         0x00000000c001ec2f        0x1 
 .rodata.str1.4
                0x00000000c001ec30      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ed3c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ed3c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ed3c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ed3c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001ed3c       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001eddc       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ee0c      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001ef8e        0x2 
 .rodata.str1.4
                0x00000000c001ef90       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001f003       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001f018       0x3c arch/i386/rtc.32
                0x00000000c001f018                vtable for RTC
 .rodata.str1.1
                0x00000000c001f054       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f095        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f098       0x68 fs/fat/vfslink.32
                0x00000000c001f098                vtable for FAT
 .rodata.str1.1
                0x00000000c001f100        0x3 fs/iso9660/helper.32
                                          0x5 (size before relaxing)
 .rodata.str1.1
                0x00000000c001f103       0x49 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001f14c       0x68 fs/iso9660/vfslink.32
                0x00000000c001f14c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f1b4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f1f8       0x34 hal/sound/sndcard.32
                0x00000000c001f1f8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f22c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f26b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f2a3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f344       0x2c hw/bus/pci.32
                0x00000000c001f344                vtable for PCI
 .rodata.str1.1
                0x00000000c001f370       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f3f7        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f3f8       0x2c hw/diskctrl/ide.32
                0x00000000c001f3f8                vtable for IDE
 .rodata.str1.4
                0x00000000c001f424       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f448       0x2c hw/diskctrl/satabus.32
                0x00000000c001f448                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f474       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f486        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f488       0x38 hw/diskphys/ata.32
                0x00000000c001f488                vtable for ATA
 .rodata.str1.1
                0x00000000c001f4c0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f4cd        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f4d0       0x38 hw/diskphys/atapi.32
                0x00000000c001f4d0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f508       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f584       0x38 hw/diskphys/sata.32
                0x00000000c001f584                vtable for SATA
 .rodata.str1.1
                0x00000000c001f5bc      0x100 hw/diskphys/satapi.32
                                        0x10d (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f6bc       0x38 hw/diskphys/satapi.32
                0x00000000c001f6bc                vtable for SATAPI
 .rodata        0x00000000c001f6f4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f6fc       0x2c hw/intctrl/apic.32
                0x00000000c001f6fc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f728       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f743        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f744       0x30 hw/timer/apictimer.32
                0x00000000c001f744                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f774       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f791        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f794       0x30 hw/timer/pit.32
                0x00000000c001f794                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f7c4      0x3ad
 *(.data)
 .data          0x00000000c001f7c4        0x0 crti.32
 .data          0x00000000c001f7c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f7c4                __dso_handle
 .data          0x00000000c001f7c8        0x0 acpica/utclib.32
 .data          0x00000000c001f7c8        0x0 core/malloc.32
 .data          0x00000000c001f7c8        0x0 libk/ctype.32
 .data          0x00000000c001f7c8        0x0 libk/string.32
 .data          0x00000000c001f7c8        0x0 fs/fat/diskio.32
 .data          0x00000000c001f7c8        0x0 fs/fat/ff.32
 .data          0x00000000c001f7c8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f7c8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f7c8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f7c8        0x0 core/computer.32
 .data          0x00000000c001f7c8        0x0 core/gdt.32
 .data          0x00000000c001f7c8        0x0 core/idle.32
 .data          0x00000000c001f7c8        0x0 core/idt.32
 .data          0x00000000c001f7c8        0x4 core/kheap.32
 .data          0x00000000c001f7cc        0x0 core/main.32
 .data          0x00000000c001f7cc        0x4 core/physmgr.32
                0x00000000c001f7cc                Phys::bitmap
 .data          0x00000000c001f7d0        0x0 core/pipe.32
 *fill*         0x00000000c001f7d0       0x10 
 .data          0x00000000c001f7e0       0x60 core/terminal.32
                0x00000000c001f7e0                VgaText::hiddenOut
                0x00000000c001f800                ansiToVGAMappings
 .data          0x00000000c001f840        0x0 core/tss.32
 .data          0x00000000c001f840        0x4 core/unixfile.32
                0x00000000c001f840                UnixFile::nextFd
 .data          0x00000000c001f844       0x15 core/virtmgr.32
                0x00000000c001f844                Virt::pageAllocPtr
                0x00000000c001f848                Virt::bitmap
                0x00000000c001f84c                Virt::swapfileSectorsPerPage
                0x00000000c001f850                Virt::swapfileLength
                0x00000000c001f854                Virt::swapfileSector
                0x00000000c001f858                Virt::swapfileDrive
 *fill*         0x00000000c001f859        0x3 
 .data          0x00000000c001f85c        0x4 coreobjs/c++.32
                0x00000000c001f85c                __stack_chk_guard
 .data          0x00000000c001f860        0x0 dbg/kconsole.32
 .data          0x00000000c001f860        0x0 fs/vfs.32
 .data          0x00000000c001f860        0x0 hal/bus.32
 .data          0x00000000c001f860        0x0 hal/buzzer.32
 .data          0x00000000c001f860        0x0 hal/clock.32
 .data          0x00000000c001f860        0x0 hal/device.32
 .data          0x00000000c001f860        0x0 hal/diskctrl.32
 .data          0x00000000c001f860        0x0 hal/diskphys.32
 .data          0x00000000c001f860        0x0 hal/fpu.32
 .data          0x00000000c001f860        0x0 hal/intctrl.32
 .data          0x00000000c001f860        0x0 hal/keybrd.32
 .data          0x00000000c001f860        0x0 hal/logidisk.32
 .data          0x00000000c001f860        0x0 hal/mouse.32
 .data          0x00000000c001f860        0x0 hal/partition.32
 .data          0x00000000c001f860        0x0 hal/serial.32
 .data          0x00000000c001f860        0x0 hal/timer.32
 .data          0x00000000c001f860        0x0 hal/vcache.32
 .data          0x00000000c001f860        0x0 hal/video.32
 .data          0x00000000c001f860       0x10 hw/acpi.32
                0x00000000c001f860                legacyIRQRemaps
 .data          0x00000000c001f870        0x4 hw/cpu.32
                0x00000000c001f870                lastCode
 *fill*         0x00000000c001f874        0xc 
 .data          0x00000000c001f880      0x142 krnl/bootmsg.32
                0x00000000c001f880                KiSplashScreen
 *fill*         0x00000000c001f9c2       0x1e 
 .data          0x00000000c001f9e0       0x4d krnl/env.32
                0x00000000c001f9e0                defaultSysEnv
 .data          0x00000000c001fa2d        0x0 krnl/inlines.32
 .data          0x00000000c001fa2d        0x0 krnl/panic.32
 .data          0x00000000c001fa2d        0x0 krnl/powctrl.32
 .data          0x00000000c001fa2d        0x0 krnl/resolve.32
 *fill*         0x00000000c001fa2d       0x13 
 .data          0x00000000c001fa40       0x4c krnl/signal.32
                0x00000000c001fa40                KiDefaultSignalHandlers
 *fill*         0x00000000c001fa8c       0x14 
 .data          0x00000000c001faa0       0xcc krnl/syscalls.32
                0x00000000c001faa0                systemCallHandlers
 .data          0x00000000c001fb6c        0x0 reg/registry.32
 .data          0x00000000c001fb6c        0x0 sys/eject.32
 .data          0x00000000c001fb6c        0x0 sys/exit.32
 .data          0x00000000c001fb6c        0x0 sys/getcwd.32
 .data          0x00000000c001fb6c        0x0 sys/getpid.32
 .data          0x00000000c001fb6c        0x0 sys/getramdata.32
 .data          0x00000000c001fb6c        0x0 sys/getvgaptr.32
 .data          0x00000000c001fb6c        0x0 sys/loaddll.32
 .data          0x00000000c001fb6c        0x0 sys/read.32
 .data          0x00000000c001fb6c        0x0 sys/registersignal.32
 .data          0x00000000c001fb6c        0x0 sys/sbrk.32
 .data          0x00000000c001fb6c        0x0 sys/setcwd.32
 .data          0x00000000c001fb6c        0x0 sys/settime.32
 .data          0x00000000c001fb6c        0x0 sys/timezone.32
 .data          0x00000000c001fb6c        0x0 sys/write.32
 .data          0x00000000c001fb6c        0x0 sys/wsbe.32
 .data          0x00000000c001fb6c        0x0 sys/yield.32
 .data          0x00000000c001fb6c        0x0 thr/elf.32
 .data          0x00000000c001fb6c        0x4 thr/prcssthr.32
                0x00000000c001fb6c                Thr::nextPID
 .data          0x00000000c001fb70        0x0 vm86/vm8086.32
 .data          0x00000000c001fb70        0x0 arch/i386/hal.32
 .data          0x00000000c001fb70        0x0 arch/i386/pic.32
 .data          0x00000000c001fb70        0x0 arch/i386/rtc.32
 .data          0x00000000c001fb70        0x0 arch/i386/vga.32
 .data          0x00000000c001fb70        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fb70        0x0 fs/iso9660/helper.32
 .data          0x00000000c001fb70        0x1 fs/iso9660/vfslink.32
                0x00000000c001fb70                recentDriveletter
 .data          0x00000000c001fb71        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fb71        0x0 hal/sound/sndport.32
 .data          0x00000000c001fb71        0x0 hw/bus/isa.32
 .data          0x00000000c001fb71        0x0 hw/bus/pci.32
 .data          0x00000000c001fb71        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fb71        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fb71        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fb71        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fb71        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fb71        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fb71        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fb71        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fb71        0x0 hw/timer/pit.32
 .data          0x00000000c001fb71        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fb71        0x0 crtn.32
 .data          0x00000000c001fb71        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fb71        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fb71        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fb71        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fb74        0x0
 .got           0x00000000c001fb74        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fb74        0x0
 .got.plt       0x00000000c001fb74        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fb74        0x0
 .igot.plt      0x00000000c001fb74        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fb74        0x0
 .tm_clone_table
                0x00000000c001fb74        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fb74        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fb71      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fb71        0x3 
 .eh_frame      0x00000000c001fb74        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fb74        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fb74       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fbcc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fc0c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fc78       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0020000       0x7d
 *(userkernel)
 userkernel     0x00000000c0020000       0x52 krnl/signal.32
                0x00000000c0020000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002002c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0020052       0x2b krnl/syscalls.32
                0x00000000c0020052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0021000        0x1
 *(align_previous)
 align_previous
                0x00000000c0021000        0x1 krnl/signal.32
                0x00000000c0021000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0021004        0x0
 .rel.got       0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0021001     0x4ba7
                0x00000000c0021001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0021001       0x1f 
 COMMON         0x00000000c0021020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0021020                dcache
                0x00000000c0021060                cdDriveLetter
                0x00000000c0021080                icache
 *(.bss)
 .bss           0x00000000c00210c0        0x0 crti.32
 .bss           0x00000000c00210c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00210e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00210e4       0x1c 
 .bss           0x00000000c0021100      0x378 core/malloc.32
 .bss           0x00000000c0021478        0x0 libk/ctype.32
 .bss           0x00000000c0021478        0x0 libk/string.32
 .bss           0x00000000c0021478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0021478        0x8 
 .bss           0x00000000c0021480       0x88 fs/fat/ff.32
 .bss           0x00000000c0021508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0021508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0021508       0x18 
 .bss           0x00000000c0021520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0021eb8        0x6 core/computer.32
                0x00000000c0021eb8                Krnl::computer
                0x00000000c0021ebc                KeIsPreemptionOn
                0x00000000c0021ebd                KeIsSchedulingOn
 *fill*         0x00000000c0021ebe        0x2 
 .bss           0x00000000c0021ec0        0x6 core/gdt.32
                0x00000000c0021ec0                gdtDescr
 .bss           0x00000000c0021ec6        0x0 core/idle.32
 *fill*         0x00000000c0021ec6        0x2 
 .bss           0x00000000c0021ec8        0x6 core/idt.32
                0x00000000c0021ec8                idtDescr
 .bss           0x00000000c0021ece        0x0 core/kheap.32
 *fill*         0x00000000c0021ece        0x2 
 .bss           0x00000000c0021ed0        0x4 core/main.32
                0x00000000c0021ed0                sysBootSettings
 .bss           0x00000000c0021ed4       0x29 core/physmgr.32
                0x00000000c0021ed4                Phys::forbidEvictions
                0x00000000c0021ed8                Phys::currentPagePointer
                0x00000000c0021edc                Phys::highestMem
                0x00000000c0021ee0                Phys::oldPercent
                0x00000000c0021ee4                Phys::usedPages
                0x00000000c0021ee8                Phys::usablePages
                0x00000000c0021eec                Phys::dmaUsage
 .bss           0x00000000c0021efd        0x0 core/pipe.32
 *fill*         0x00000000c0021efd        0x3 
 .bss           0x00000000c0021f00        0x9 core/terminal.32
                0x00000000c0021f00                terminalCycle
                0x00000000c0021f04                activeTerminal
                0x00000000c0021f08                VgaText::graphicMode
 *fill*         0x00000000c0021f09        0x1 
 .bss           0x00000000c0021f0a        0x2 core/tss.32
                0x00000000c0021f0a                doubleFaultSelector
 *fill*         0x00000000c0021f0c       0x14 
 .bss           0x00000000c0021f20       0x84 core/unixfile.32
                0x00000000c0021f20                sfileLpt
                0x00000000c0021f60                sfileCom
                0x00000000c0021f84                sfileNul
                0x00000000c0021f88                sfilePnt
                0x00000000c0021f8c                sfileAux
                0x00000000c0021f90                sfileCon
                0x00000000c0021f94                initialFilesAdded
                0x00000000c0021f98                unixFileLinkedList
 .bss           0x00000000c0021fa4       0x10 core/virtmgr.32
                0x00000000c0021fa4                twswaps
                0x00000000c0021fa8                swapBalance
                0x00000000c0021fac                Virt::swapfileBitmap
                0x00000000c0021fb0                firstVAS
 .bss           0x00000000c0021fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0021fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0021fb4        0x4 fs/vfs.32
                0x00000000c0021fb4                installedFilesystems
 .bss           0x00000000c0021fb8        0x0 hal/bus.32
 .bss           0x00000000c0021fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0021fb8        0x8 hal/clock.32
                0x00000000c0021fb8                User::dstOn
                0x00000000c0021fb9                User::timezoneHalfHourOffset
                0x00000000c0021fbc                User::timezoneHourOffset
 .bss           0x00000000c0021fc0        0x0 hal/device.32
 .bss           0x00000000c0021fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0021fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0021fc0        0x0 hal/fpu.32
 .bss           0x00000000c0021fc0     0x2000 hal/intctrl.32
                0x00000000c0021fc0                INT_contexts
                0x00000000c0022fc0                INT_handlers
 .bss           0x00000000c0023fc0      0x429 hal/keybrd.32
                0x00000000c0023fc0                keyboardWaitingTaskList
                0x00000000c0023fc4                keyboardSetupYet
                0x00000000c0023fc8                guiKeyboardHandler
                0x00000000c0023fe0                keystates
 *fill*         0x00000000c00243e9       0x17 
 .bss           0x00000000c0024400       0x88 hal/logidisk.32
                0x00000000c0024400                diskAssignments
                0x00000000c0024420                disks
 .bss           0x00000000c0024488        0x4 hal/mouse.32
                0x00000000c0024488                guiMouseHandler
 .bss           0x00000000c002448c        0x0 hal/partition.32
 .bss           0x00000000c002448c        0x0 hal/serial.32
 .bss           0x00000000c002448c        0x4 hal/timer.32
                0x00000000c002448c                milliTenthsSinceBoot
 .bss           0x00000000c0024490        0x0 hal/vcache.32
 .bss           0x00000000c0024490        0x4 hal/video.32
                0x00000000c0024490                screen
 *fill*         0x00000000c0024494        0xc 
 .bss           0x00000000c00244a0      0x480 hw/acpi.32
                0x00000000c00244a0                systemSleepFunction
                0x00000000c00244a4                systemResetFunction
                0x00000000c00244a8                systemShutdownFunction
                0x00000000c00244ac                nextACPITable
                0x00000000c00244c0                acpiTables
                0x00000000c00246c0                usingXSDT
                0x00000000c00246c4                MADTpointer
                0x00000000c00246c8                RSDTpointer
                0x00000000c00246cc                RSDPpointer
                0x00000000c00246d0                nextAPICNMI
                0x00000000c00246e0                apicNMIInfo
                0x00000000c0024760                legacyIRQFlags
                0x00000000c0024780                ioapicDiscoveryNumber
                0x00000000c00247a0                ioapicFoundInMADT
                0x00000000c00247c0                ioapicAddresses
                0x00000000c0024840                ioapicGSIBase
                0x00000000c00248c0                processorDiscoveryNumber
                0x00000000c00248e0                matchingAPICID
                0x00000000c0024900                processorID
 .bss           0x00000000c0024920       0x10 hw/cpu.32
                0x00000000c0024920                lastD
                0x00000000c0024924                lastC
                0x00000000c0024928                lastB
                0x00000000c002492c                lastA
 .bss           0x00000000c0024930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0024930        0x8 krnl/env.32
                0x00000000c0024930                Krnl::userEnv
                0x00000000c0024934                Krnl::systemEnv
 .bss           0x00000000c0024938        0x0 krnl/inlines.32
 .bss           0x00000000c0024938        0x1 krnl/panic.32
                0x00000000c0024938                KeIsKernelInPanic
 *fill*         0x00000000c0024939        0x7 
 .bss           0x00000000c0024940       0x48 krnl/powctrl.32
                0x00000000c0024940                Krnl::powCtrlOnBattery
                0x00000000c0024960                Krnl::currentPowerSettings
                0x00000000c0024984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0024988        0x0 krnl/resolve.32
 .bss           0x00000000c0024988        0x0 krnl/signal.32
 .bss           0x00000000c0024988        0x0 krnl/syscalls.32
 .bss           0x00000000c0024988        0x0 reg/registry.32
 .bss           0x00000000c0024988        0x0 sys/eject.32
 .bss           0x00000000c0024988        0x0 sys/exit.32
 .bss           0x00000000c0024988        0x0 sys/getcwd.32
 .bss           0x00000000c0024988        0x0 sys/getpid.32
 .bss           0x00000000c0024988        0x0 sys/getramdata.32
 .bss           0x00000000c0024988        0x0 sys/getvgaptr.32
 .bss           0x00000000c0024988        0x0 sys/loaddll.32
 .bss           0x00000000c0024988        0x0 sys/read.32
 .bss           0x00000000c0024988        0x0 sys/registersignal.32
 .bss           0x00000000c0024988        0x0 sys/sbrk.32
 .bss           0x00000000c0024988        0x0 sys/setcwd.32
 .bss           0x00000000c0024988        0x0 sys/settime.32
 .bss           0x00000000c0024988        0x0 sys/timezone.32
 .bss           0x00000000c0024988        0x0 sys/write.32
 .bss           0x00000000c0024988        0x0 sys/wsbe.32
 .bss           0x00000000c0024988        0x0 sys/yield.32
 *fill*         0x00000000c0024988       0x18 
 .bss           0x00000000c00249a0      0x7a4 thr/elf.32
                0x00000000c00249a0                Thr::driverLookupNext
                0x00000000c00249c0                Thr::driverLookupLen
                0x00000000c0024bc0                Thr::driverLookupAddr
                0x00000000c0024dc0                Thr::driverNameLookup
                0x00000000c0024fc0                Thr::kernelSymbols
                0x00000000c0025040                Thr::kernelStringTable
                0x00000000c00250c0                Thr::kernelSymbolTable
                0x00000000c0025140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0025144        0x4 
 .bss           0x00000000c0025148       0x68 thr/prcssthr.32
                0x00000000c0025148                cleanerThread
                0x00000000c002514c                weNeedTheCleanerToNotBlock
                0x00000000c0025150                retValLockStuff
                0x00000000c0025154                retValSchedLock
                0x00000000c0025158                lockStuffLock
                0x00000000c002515c                schedulerLock
                0x00000000c0025160                taskSwitchesPostponedFlag
                0x00000000c0025164                postponeTaskSwitchesCounter
                0x00000000c0025168                irqDisableCounter
                0x00000000c002516c                terminatedTaskList
                0x00000000c0025178                sleepingTaskList
                0x00000000c0025184                taskList
                0x00000000c0025190                kernelProcess
 *fill*         0x00000000c00251b0       0x10 
 .bss           0x00000000c00251c0       0x40 vm86/vm8086.32
                0x00000000c00251c0                Vm::vmRetV
                0x00000000c00251c4                Vm::vmDone
                0x00000000c00251c5                Vm::vmReady
                0x00000000c00251c8                Vm::vm86Thread
                0x00000000c00251cc                Vm::vmToHostCommsPtr
                0x00000000c00251e0                Vm::vmToHostComms
 .bss           0x00000000c0025200       0x14 arch/i386/hal.32
                0x00000000c0025200                apic
                0x00000000c0025204                fpuOwner
                0x00000000c0025208                coproLoadFunc
                0x00000000c002520c                coproSaveFunc
                0x00000000c0025210                gpFaultIntercept
 .bss           0x00000000c0025214        0x0 arch/i386/pic.32
 .bss           0x00000000c0025214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0025216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0025216        0xa 
 .bss           0x00000000c0025220       0xf0 fs/fat/vfslink.32
                0x00000000c0025220                FAT::fats
                0x00000000c0025240                FAT::vfsToFatRemaps
                0x00000000c00252c0                fatToVFSRemaps
 .bss           0x00000000c0025310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0025310       0x10 
 .bss           0x00000000c0025320      0x820 fs/iso9660/vfslink.32
                0x00000000c0025320                iso9660Owner
                0x00000000c0025324                recentSector
                0x00000000c0025340                recentBuffer
 .bss           0x00000000c0025b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0025b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0025b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0025b40        0xd hw/bus/pci.32
                0x00000000c0025b40                thePCI
 .bss           0x00000000c0025b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0025b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0025b4d        0x3 
 .bss           0x00000000c0025b50        0x8 hw/diskphys/ata.32
                0x00000000c0025b50                ataSectorsWritten
                0x00000000c0025b54                ataSectorsRead
 .bss           0x00000000c0025b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0025b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0025b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0025b58        0x8 
 .bss           0x00000000c0025b60       0x41 hw/intctrl/apic.32
                0x00000000c0025b60                noOfIOAPICs
                0x00000000c0025b80                ioapics
                0x00000000c0025ba0                IOAPICsSetupYet
 .bss           0x00000000c0025ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0025ba1        0x3 
 .bss           0x00000000c0025ba4        0x4 hw/timer/pit.32
                0x00000000c0025ba4                pitFreq
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0025ba8        0x0 crtn.32
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0025ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002a74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
