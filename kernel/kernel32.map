Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x217da
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0x2 
 .text          0x00000000c00003a4      0x5dd acpica/utclib.32
                0x00000000c00003a4                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004a8                memset
                0x00000000c00004c4                strlen
                0x00000000c00004dc                strpbrk
                0x00000000c0000518                strtok
                0x00000000c0000564                strcpy
                0x00000000c0000588                strncpy
                0x00000000c00005f0                strcmp
                0x00000000c0000630                strchr
                0x00000000c0000654                strncmp
                0x00000000c00006a4                strcat
                0x00000000c00006d4                strncat
                0x00000000c0000710                strstr
                0x00000000c0000758                toupper
                0x00000000c000076c                tolower
                0x00000000c0000780                simple_strtoul
 .text          0x00000000c0000981      0xfad core/malloc.32
                0x00000000c0000aec                dlfree
                0x00000000c0000e47                dlmalloc
                0x00000000c0001384                dlrealloc
                0x00000000c0001527                dlmemalign
                0x00000000c000164a                dlcalloc
                0x00000000c00016e4                dlcfree
                0x00000000c00016e9                dlindependent_calloc
                0x00000000c000170e                dlindependent_comalloc
                0x00000000c0001725                dlvalloc
                0x00000000c0001750                dlpvalloc
                0x00000000c0001786                dlmalloc_trim
                0x00000000c0001793                dlmalloc_usable_size
                0x00000000c00017c4                dlmallinfo
                0x00000000c0001893                dlmalloc_stats
                0x00000000c00018a4                dlmallopt
 .text          0x00000000c000192e        0x0 libk/string.32
 .text          0x00000000c000192e       0x51 fs/fat/diskio.32
                0x00000000c000192e                disk_status
                0x00000000c0001931                disk_initialize
                0x00000000c0001934                disk_read
                0x00000000c000194a                disk_write
                0x00000000c0001960                disk_ioctl
 .text          0x00000000c000197f     0x6a69 fs/fat/ff.32
                0x00000000c0004c4d                f_mount
                0x00000000c0004caf                f_open
                0x00000000c00050eb                f_read
                0x00000000c000536b                f_write
                0x00000000c0005625                f_sync
                0x00000000c0005801                f_close
                0x00000000c0005830                f_lseek
                0x00000000c0005ce7                f_opendir
                0x00000000c0005de9                f_closedir
                0x00000000c0005e0b                f_readdir
                0x00000000c0005ea6                f_stat
                0x00000000c0005f35                f_getfree
                0x00000000c0006100                f_truncate
                0x00000000c00061f8                f_unlink
                0x00000000c000637b                f_mkdir
                0x00000000c00065a7                f_rename
                0x00000000c000689a                f_chmod
                0x00000000c0006978                f_utime
                0x00000000c0006a56                f_getlabel
                0x00000000c0006c44                f_setlabel
                0x00000000c0006eb1                f_expand
                0x00000000c00070e7                f_forward
                0x00000000c00072c5                f_mkfs
 .text          0x00000000c00083e8       0x2f fs/fat/ffsystem.32
                0x00000000c00083e8                ff_memalloc
                0x00000000c0008400                ff_memfree
 *fill*         0x00000000c0008417        0x1 
 .text          0x00000000c0008418      0x274 fs/fat/ffunicode.32
                0x00000000c0008418                ff_uni2oem
                0x00000000c00084b0                ff_oem2uni
                0x00000000c0008524                ff_wtoupper
 .text          0x00000000c000868c       0xa7 compat/inlines.32
                0x00000000c000868c                CPU::current()
                0x00000000c0008698                operator new(unsigned long)
                0x00000000c000869d                operator delete(void*)
                0x00000000c00086a2                disableIRQs()
                0x00000000c00086aa                enableIRQs()
                0x00000000c00086b9                lockScheduler()
                0x00000000c00086c1                unlockScheduler()
                0x00000000c00086d0                lockStuff()
                0x00000000c00086de                unlockStuff()
                0x00000000c0008718                Virt::getAKernelVAS()
                0x00000000c000871e                __not_memcpy
 *fill*         0x00000000c0008733        0x1 
 .text          0x00000000c0008734      0x118 compat/resolve.32
                0x00000000c0008734                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c000884c      0x783 core/computer.32
                0x00000000c000884c                Computer::close(int, int, void*)
                0x00000000c0008890                Krnl::firstTask()
                0x00000000c00089e4                Computer::Computer()
                0x00000000c00089e4                Computer::Computer()
                0x00000000c0008b40                Computer::setBootMessage(char const*)
                0x00000000c0008b42                Computer::detectFeatures()
                0x00000000c0008d4c                Computer::displayFeatures()
                0x00000000c0008d4e                Computer::rdmsr(unsigned int)
                0x00000000c0008d7a                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0008db2                Computer::shutdown()
                0x00000000c0008dca                Computer::restart()
                0x00000000c0008de2                Computer::sleep()
                0x00000000c0008df6                Computer::nmiEnabled()
                0x00000000c0008e02                Computer::readCMOS(unsigned char)
                0x00000000c0008e1c                Computer::enableNMI(bool)
                0x00000000c0008e34                Computer::open(int, int, void*)
                0x00000000c0008f12                Computer::disableNMI()
                0x00000000c0008f20                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0008f3e                Computer::handleNMI()
                0x00000000c0008fa4                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c0008fcf        0x1 
 .text          0x00000000c0008fd0      0x211 core/gdt.32
                0x00000000c0008fd0                GDTEntry::setBase(unsigned int)
                0x00000000c0008fec                GDTEntry::setLimit(unsigned int)
                0x00000000c000900a                GDT::GDT()
                0x00000000c000900a                GDT::GDT()
                0x00000000c0009020                GDT::addEntry(GDTEntry)
                0x00000000c0009042                GDT::getNumberOfEntries()
                0x00000000c000904a                GDT::flush()
                0x00000000c000906c                GDT::setup()
 .text          0x00000000c00091e1       0x19 core/idle.32
                0x00000000c00091e1                idleFunction(void*)
 *fill*         0x00000000c00091fa        0x2 
 .text          0x00000000c00091fc      0x464 core/idt.32
                0x00000000c00091fc                IDTEntry::IDTEntry(bool)
                0x00000000c00091fc                IDTEntry::IDTEntry(bool)
                0x00000000c000926e                IDTEntry::setOffset(unsigned int)
                0x00000000c0009284                IDT::IDT()
                0x00000000c0009284                IDT::IDT()
                0x00000000c0009286                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000928e                IDT::addEntry(IDTEntry, int)
                0x00000000c00092a8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00092e0                IDT::flush()
                0x00000000c00092fa                IDT::setup()
 .text          0x00000000c0009660      0x191 core/kheap.32
                0x00000000c0009660                sbrk
                0x00000000c0009703                mmap
                0x00000000c0009719                munmap
                0x00000000c000972f                liballoc_lock()
                0x00000000c000973c                liballoc_unlock()
                0x00000000c0009750                liballoc_alloc(int)
                0x00000000c0009768                liballoc_free(void*, int)
                0x00000000c0009783                realloc
                0x00000000c0009797                malloc
                0x00000000c00097a7                free
                0x00000000c00097b7                rfree
                0x00000000c00097c7                calloc
 .text          0x00000000c00097f1      0x1bf core/main.32
                0x00000000c00097f1                Krnl::setBootMessage(char const*)
                0x00000000c000985d                kernel_main
 .text          0x00000000c00099b0      0x668 core/physmgr.32
                0x00000000c00099b0                Phys::allocateDMA(unsigned long)
                0x00000000c0009abf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0009b05                Phys::setPageState(unsigned long, bool)
                0x00000000c0009b37                Phys::getPageState(unsigned long)
                0x00000000c0009b53                Phys::freePage(unsigned long)
                0x00000000c0009bd6                Phys::allocatePage()
                0x00000000c0009cc1                Phys::allocateContiguousPages(int)
                0x00000000c0009d1d                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0009d55                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000a018      0x273 core/pipe.32
                0x00000000c000a018                Pipe::isAtty()
                0x00000000c000a01c                Pipe::~Pipe()
                0x00000000c000a01c                Pipe::~Pipe()
                0x00000000c000a040                Pipe::~Pipe()
                0x00000000c000a068                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000a128                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000a224                Pipe::Pipe(int)
                0x00000000c000a224                Pipe::Pipe(int)
 *fill*         0x00000000c000a28b        0x1 
 .text          0x00000000c000a28c      0xa8a core/terminal.32
                0x00000000c000a28c                VgaText::isAtty()
                0x00000000c000a290                VgaText::~VgaText()
                0x00000000c000a290                VgaText::~VgaText()
                0x00000000c000a2b4                VgaText::~VgaText()
                0x00000000c000a2de                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000a2fe                setTerminalScrollLock(bool)
                0x00000000c000a2ff                addToTerminalCycle(VgaText*)
                0x00000000c000a320                scrollTerminalScrollLock(int)
                0x00000000c000a322                VgaText::updateTitle()
                0x00000000c000a324                VgaText::load()
                0x00000000c000a326                VgaText::updateCursor()
                0x00000000c000a33c                VgaText::doANSI_SGR(int)
                0x00000000c000a3b0                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000a3c0                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000a3d0                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000a3f0                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000a3fc                VgaText::setTitleColour(VgaColour)
                0x00000000c000a408                VgaText::setTitle(char*)
                0x00000000c000a416                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000a428                VgaText::scrollScreen()
                0x00000000c000a4c0                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000a4d2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000a562                VgaText::getCursorX()
                0x00000000c000a56a                VgaText::getCursorY()
                0x00000000c000a572                VgaText::setCursor(int, int)
                0x00000000c000a589                setActiveTerminal(VgaText*)
                0x00000000c000a5e3                doTerminalCycle()
                0x00000000c000a5fe                VgaText::clearScreen()
                0x00000000c000a64c                VgaText::setCursorX(int)
                0x00000000c000a664                VgaText::setCursorY(int)
                0x00000000c000a67c                VgaText::incrementCursor(bool)
                0x00000000c000a6d0                VgaText::decrementCursor(bool)
                0x00000000c000a6f2                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000a7c0                VgaText::putchar(char)
                0x00000000c000a8ac                VgaText::putx(unsigned int)
                0x00000000c000a8f2                VgaText::puts(char const*)
                0x00000000c000a918                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000a964                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000aab2                VgaText::VgaText(char const*)
                0x00000000c000aab2                VgaText::VgaText(char const*)
                0x00000000c000ac18                VgaText::receiveKey(unsigned char)
                0x00000000c000acf0                VgaText::doUpdate()
                0x00000000c000acf1                newTerminal(char*)
 *fill*         0x00000000c000ad16        0x2 
 .text          0x00000000c000ad18      0x1a1 core/tss.32
                0x00000000c000ad18                TSS::TSS()
                0x00000000c000ad18                TSS::TSS()
                0x00000000c000ad28                TSS::setESP(unsigned long)
                0x00000000c000ad3c                TSS::flush()
                0x00000000c000ad5c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000aeb9        0x1 
 .text          0x00000000c000aeba      0x4c2 core/unixfile.32
                0x00000000c000aeba                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000af10                ReservedFilename::isAtty()
                0x00000000c000af2c                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000af8a                UnixFile::getFileDescriptor()
                0x00000000c000af92                UnixFile::UnixFile(int)
                0x00000000c000af92                UnixFile::UnixFile(int)
                0x00000000c000b142                ReservedFilename::ReservedFilename(int)
                0x00000000c000b142                ReservedFilename::ReservedFilename(int)
                0x00000000c000b174                UnixFile::~UnixFile()
                0x00000000c000b174                UnixFile::~UnixFile()
                0x00000000c000b20c                UnixFile::~UnixFile()
                0x00000000c000b234                ReservedFilename::~ReservedFilename()
                0x00000000c000b234                ReservedFilename::~ReservedFilename()
                0x00000000c000b258                ReservedFilename::~ReservedFilename()
                0x00000000c000b27f                getFromFileDescriptor(int)
 .text          0x00000000c000b37c     0x124e core/virtmgr.32
                0x00000000c000b37c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000b3b1                Virt::getPageState(unsigned long)
                0x00000000c000b3d5                Virt::allocateKernelVirtualPages(int)
                0x00000000c000b4e6                Virt::freeSwapfilePage(unsigned long)
                0x00000000c000b504                Virt::swapIDToSector(unsigned long)
                0x00000000c000b516                Virt::allocateSwapfilePage()
                0x00000000c000b594                Virt::virtualMemorySetup()
                0x00000000c000b5df                Virt::setupPageSwapping(int)
                0x00000000c000b650                VAS::VAS(VAS*)
                0x00000000c000b650                VAS::VAS(VAS*)
                0x00000000c000b67e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000b6aa                VAS::getPageTableEntry(unsigned long)
                0x00000000c000b6c9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000b7ec                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000b810                VAS::virtualToPhysical(unsigned long)
                0x00000000c000b828                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000b868                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000b89a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000b8c4                VAS::~VAS()
                0x00000000c000b8c4                VAS::~VAS()
                0x00000000c000ba40                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000bb44                VAS::allocatePages(int, int)
                0x00000000c000bd1c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000bd38                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000bdfe                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000beec                VAS::VAS(bool)
                0x00000000c000beec                VAS::VAS(bool)
                0x00000000c000c16c                VAS::VAS()
                0x00000000c000c16c                VAS::VAS()
                0x00000000c000c1dc                VAS::evict(unsigned long)
                0x00000000c000c2ac                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000c3c0                VAS::scanForEviction()
                0x00000000c000c49e                mapVASFirstTime
 .text          0x00000000c000c5ca       0x95 coreobjs/c++.32
                0x00000000c000c5ca                __cxa_atexit
                0x00000000c000c5cd                __cxa_finalize
                0x00000000c000c5ce                __stack_chk_fail
                0x00000000c000c63a                __cxa_pure_virtual
                0x00000000c000c64b                operator new[](unsigned long)
                0x00000000c000c650                operator delete(void*, unsigned long)
                0x00000000c000c655                operator delete[](void*)
                0x00000000c000c65a                operator delete[](void*, unsigned long)
 .text          0x00000000c000c65f      0x1fc dbg/kconsole.32
                0x00000000c000c65f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000c6b8                Dbg::logc(char)
                0x00000000c000c6d8                Dbg::logs(char*)
                0x00000000c000c6f5                Dbg::logWriteInt(unsigned int)
                0x00000000c000c712                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000c731                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000c85b        0x1 
 .text          0x00000000c000c85c      0xcac fs/vfs.32
                0x00000000c000c85c                File::read(unsigned long long, void*, int*)
                0x00000000c000c8b4                File::write(unsigned long long, void*, int*)
                0x00000000c000c90c                Directory::read(unsigned long long, void*, int*)
                0x00000000c000c964                Directory::write(unsigned long long, void*, int*)
                0x00000000c000c992                File::isAtty()
                0x00000000c000c996                Directory::isAtty()
                0x00000000c000c99a                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000c9a0                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000c9a6                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000c9ac                File::~File()
                0x00000000c000c9ac                File::~File()
                0x00000000c000c9d0                File::~File()
                0x00000000c000c9fa                Directory::~Directory()
                0x00000000c000c9fa                Directory::~Directory()
                0x00000000c000ca1e                Directory::~Directory()
                0x00000000c000ca48                Filesystem::Filesystem()
                0x00000000c000ca48                Filesystem::Filesystem()
                0x00000000c000ca6c                Filesystem::~Filesystem()
                0x00000000c000ca6c                Filesystem::~Filesystem()
                0x00000000c000ca7a                Filesystem::~Filesystem()
                0x00000000c000ca9e                Fs::getcwd(Process*, char*, int)
                0x00000000c000cac8                Fs::initVFS()
                0x00000000c000caf2                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000cc9c                File::File(char const*, Process*)
                0x00000000c000cc9c                File::File(char const*, Process*)
                0x00000000c000cd76                File::open(FileOpenMode)
                0x00000000c000cdd4                File::close()
                0x00000000c000ce34                File::seek(unsigned long long)
                0x00000000c000ce8a                File::tell(unsigned long long*)
                0x00000000c000ceda                File::rewind()
                0x00000000c000ceee                File::unlink()
                0x00000000c000cf3a                File::rename(char const*)
                0x00000000c000cf88                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000cfe4                File::exists()
                0x00000000c000d022                File::stat(unsigned long long*, bool*)
                0x00000000c000d083                Fs::setcwd(Process*, char*)
                0x00000000c000d1fc                Directory::Directory(char const*, Process*)
                0x00000000c000d1fc                Directory::Directory(char const*, Process*)
                0x00000000c000d2d6                Directory::open()
                0x00000000c000d332                Directory::close()
                0x00000000c000d392                Directory::unlink()
                0x00000000c000d3de                Directory::rename(char const*)
                0x00000000c000d42c                Directory::exists()
                0x00000000c000d46a                Directory::read(dirent*)
                0x00000000c000d4b6                Directory::create()
                0x00000000c000d502                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000d508       0x86 hal/bus.32
                0x00000000c000d508                Bus::Bus(char const*)
                0x00000000c000d508                Bus::Bus(char const*)
                0x00000000c000d540                Bus::~Bus()
                0x00000000c000d540                Bus::~Bus()
                0x00000000c000d564                Bus::~Bus()
 .text          0x00000000c000d58e       0x96 hal/buzzer.32
                0x00000000c000d58e                beepThread(void*)
                0x00000000c000d5cb                Krnl::beep(int, int, bool)
 .text          0x00000000c000d624      0x467 hal/clock.32
                0x00000000c000d624                User::loadClockSettings(int)
                0x00000000c000d676                Clock::Clock(char const*)
                0x00000000c000d676                Clock::Clock(char const*)
                0x00000000c000d6ac                Clock::~Clock()
                0x00000000c000d6ac                Clock::~Clock()
                0x00000000c000d6d0                Clock::~Clock()
                0x00000000c000d6fa                Clock::timeInSecondsLocal()
                0x00000000c000d742                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000d79b                datetimeToSeconds(datetime_t)
                0x00000000c000d8c2                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000d922                secondsToDatetime(unsigned long long)
                0x00000000c000da66                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000da8b        0x1 
 .text          0x00000000c000da8c      0x4d0 hal/device.32
                0x00000000c000da8c                Device::hibernate()
                0x00000000c000da8e                Device::wake()
                0x00000000c000da90                Device::detect()
                0x00000000c000da92                Device::disableLegacy()
                0x00000000c000da94                Device::powerSaving(PowerSavingLevel)
                0x00000000c000da96                DriverlessDevice::close(int, int, void*)
                0x00000000c000da9a                DriverlessDevice::detect()
                0x00000000c000da9c                DriverlessDevice::open(int, int, void*)
                0x00000000c000dab0                Device::~Device()
                0x00000000c000dab0                Device::~Device()
                0x00000000c000dabe                Device::~Device()
                0x00000000c000dae6                Device::findAndLoadDriver()
                0x00000000c000daf4                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000db1a                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000db5a                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000db84                Device::getParent()
                0x00000000c000db90                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000dbae                Device::addChild(Device*)
                0x00000000c000dbf2                Device::removeAllChildren()
                0x00000000c000dc38                Device::hibernateAll()
                0x00000000c000dc68                Device::wakeAll()
                0x00000000c000dc98                Device::detectAll()
                0x00000000c000dcc8                Device::disableLegacyAll()
                0x00000000c000dcf8                Device::loadDriversForAll()
                0x00000000c000dd38                Device::closeAll()
                0x00000000c000dd6e                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000dda4                Device::setName(char const*)
                0x00000000c000ddb2                Device::Device(char const*)
                0x00000000c000ddb2                Device::Device(char const*)
                0x00000000c000deae                Device::getName()
                0x00000000c000deb8                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000deb8                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000deee                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000df32                getDevicesOfType(DeviceType)
 .text          0x00000000c000df5c       0x86 hal/diskctrl.32
                0x00000000c000df5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000df5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000df94                HardDiskController::~HardDiskController()
                0x00000000c000df94                HardDiskController::~HardDiskController()
                0x00000000c000dfb8                HardDiskController::~HardDiskController()
 .text          0x00000000c000dfe2       0xe2 hal/diskphys.32
                0x00000000c000dfe2                PhysicalDisk::eject()
                0x00000000c000dfe6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000dfe6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000e04e                PhysicalDisk::startCache()
                0x00000000c000e076                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e076                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e09a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000e0c4        0x0 hal/fpu.32
 .text          0x00000000c000e0c4      0x34c hal/intctrl.32
                0x00000000c000e0c4                int_handler
                0x00000000c000e14c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000e194                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000e2bf                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000e2f3                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000e371                setupINTS()
                0x00000000c000e3ce                convertLegacyIRQNumber(int)
 .text          0x00000000c000e410      0x778 hal/keybrd.32
                0x00000000c000e410                startGUI(void*)
                0x00000000c000e47c                startGUIVESA(void*)
                0x00000000c000e4e8                sendKeyToTerminal(unsigned char)
                0x00000000c000e5a6                sendKeyboardToken(KeyboardToken)
                0x00000000c000e9d8                clearInternalKeybuffer(VgaText*)
                0x00000000c000ea0d                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000eafe                Keyboard::Keyboard(char const*)
                0x00000000c000eafe                Keyboard::Keyboard(char const*)
                0x00000000c000eb3a                Keyboard::~Keyboard()
                0x00000000c000eb3a                Keyboard::~Keyboard()
                0x00000000c000eb5e                Keyboard::~Keyboard()
 .text          0x00000000c000eb88      0x42a hal/logidisk.32
                0x00000000c000eb88                LogicalDisk::close(int, int, void*)
                0x00000000c000eb8c                LogicalDisk::~LogicalDisk()
                0x00000000c000eb8c                LogicalDisk::~LogicalDisk()
                0x00000000c000ebb0                LogicalDisk::~LogicalDisk()
                0x00000000c000ebda                LogicalDisk::open(int, int, void*)
                0x00000000c000ebee                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000ec26                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000ec6c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ec6c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ed22                LogicalDisk::assignDriveLetter()
                0x00000000c000edd8                LogicalDisk::mount()
                0x00000000c000ee60                LogicalDisk::unmount()
                0x00000000c000ee70                LogicalDisk::eject()
                0x00000000c000ee84                LogicalDisk::unassignDriveLetter()
                0x00000000c000eeda                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ef46                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000efb2        0x2 
 .text          0x00000000c000efb4       0x86 hal/mouse.32
                0x00000000c000efb4                Mouse::Mouse(char const*)
                0x00000000c000efb4                Mouse::Mouse(char const*)
                0x00000000c000efec                Mouse::~Mouse()
                0x00000000c000efec                Mouse::~Mouse()
                0x00000000c000f010                Mouse::~Mouse()
 .text          0x00000000c000f03a      0x339 hal/partition.32
                0x00000000c000f03a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000f0e2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000f373        0x1 
 .text          0x00000000c000f374       0x86 hal/serial.32
                0x00000000c000f374                Serial::Serial(char const*)
                0x00000000c000f374                Serial::Serial(char const*)
                0x00000000c000f3ac                Serial::~Serial()
                0x00000000c000f3ac                Serial::~Serial()
                0x00000000c000f3d0                Serial::~Serial()
 *fill*         0x00000000c000f3fa        0x2 
 .text          0x00000000c000f3fc      0x234 hal/timer.32
                0x00000000c000f3fc                Timer::Timer(char const*)
                0x00000000c000f3fc                Timer::Timer(char const*)
                0x00000000c000f434                Timer::~Timer()
                0x00000000c000f434                Timer::~Timer()
                0x00000000c000f458                Timer::~Timer()
                0x00000000c000f482                Timer::read()
                0x00000000c000f48d                setupTimer(int)
                0x00000000c000f4c8                timerHandler(unsigned int)
 .text          0x00000000c000f630      0x43e hal/vcache.32
                0x00000000c000f630                VCache::VCache(PhysicalDisk*)
                0x00000000c000f630                VCache::VCache(PhysicalDisk*)
                0x00000000c000f798                VCache::invalidateReadBuffer()
                0x00000000c000f7a8                VCache::writeWriteBuffer()
                0x00000000c000f7f4                VCache::~VCache()
                0x00000000c000f7f4                VCache::~VCache()
                0x00000000c000f848                VCache::~VCache()
                0x00000000c000f870                VCache::write(unsigned long long, int, void*)
                0x00000000c000f96a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000fa6e      0x4b3 hal/video.32
                0x00000000c000fa6e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000faba                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000fb2a                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000fba8                Video::clearScreen(unsigned int)
                0x00000000c000fbdc                Video::putpixel(int, int, unsigned int)
                0x00000000c000fbea                Video::Video(char const*)
                0x00000000c000fbea                Video::Video(char const*)
                0x00000000c000fc20                Video::~Video()
                0x00000000c000fc20                Video::~Video()
                0x00000000c000fc44                Video::~Video()
                0x00000000c000fc6e                Video::isMonochrome()
                0x00000000c000fc7a                Video::getWidth()
                0x00000000c000fc86                Video::getHeight()
                0x00000000c000fc92                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000fd4e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000feb6                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ff21        0x3 
 .text          0x00000000c000ff24     0x16bf hw/acpi.32
                0x00000000c000ff24                ACPI::close(int, int, void*)
                0x00000000c000ffd8                findRSDP()
                0x00000000c00100ac                loadACPITables(unsigned char*)
                0x00000000c0010310                findRSDT(unsigned char*)
                0x00000000c00104d0                findDataTable(unsigned char*, char*)
                0x00000000c0010548                scanMADT()
                0x00000000c0010a24                ACPI::ACPI()
                0x00000000c0010a24                ACPI::ACPI()
                0x00000000c0010a88                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0010b70                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0010c38                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0010c40                ACPI::detectPCI()
                0x00000000c0011124                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c001116c                ACPI::sleep()
                0x00000000c00111a8                ACPI::open(int, int, void*)
 *fill*         0x00000000c00115e3        0x1 
 .text          0x00000000c00115e4      0xdcb hw/cpu.32
                0x00000000c00115e4                CPU::close(int, int, void*)
                0x00000000c00115e8                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0011604                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001161c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0011690                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0011714                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0011742                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0011770                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001179e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00117cc                CPU::CPU()
                0x00000000c00117cc                CPU::CPU()
                0x00000000c001185a                CPU::displayFeatures()
                0x00000000c001185c                CPU::detectFeatures()
                0x00000000c0011f32                CPU::setupSMEP()
                0x00000000c0011f3e                CPU::setupUMIP()
                0x00000000c0011f48                CPU::setupTSC()
                0x00000000c0011f52                CPU::setupLargePages()
                0x00000000c0011f5c                CPU::setupPAT()
                0x00000000c0011f98                CPU::setupMTRR()
                0x00000000c0011f9a                CPU::setupGlobalPages()
                0x00000000c0011fa4                CPU::allowUsermodeDataAccess()
                0x00000000c0011fb6                CPU::prohibitUsermodeDataAccess()
                0x00000000c0011fc8                CPU::setupSMAP()
                0x00000000c0011fd6                CPU::setupFeatures()
                0x00000000c00120a2                CPU::open(int, int, void*)
                0x00000000c00121b4                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c00123af      0x16a hw/smp.32
                0x00000000c00123af                Krnl::smpEntry()
                0x00000000c00123b1                Krnl::startCPU(int)
                0x00000000c00124fa                Krnl::startCPUs()
 *fill*         0x00000000c0012519        0x1 
 .text          0x00000000c001251a      0x581 krnl/env.32
                0x00000000c001251a                EnvVarContainer::getEnv(char const*)
                0x00000000c0012558                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001261a                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001261c                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0012802                EnvVarContainer::__loadSystem()
                0x00000000c001281c                EnvVarContainer::__loadUser()
                0x00000000c001281e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001281e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0012840                EnvVarContainer::~EnvVarContainer()
                0x00000000c0012840                EnvVarContainer::~EnvVarContainer()
                0x00000000c0012870                Krnl::getEnv(Process*, char const*)
                0x00000000c00128d5                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00128ef                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001290e                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0012921                Krnl::deleteEnvSystem(char const*)
                0x00000000c0012922                Krnl::deleteEnvUser(char const*)
                0x00000000c0012923                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0012924                Krnl::newProcessEnv(Process*)
                0x00000000c0012946                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0012992                Krnl::loadSystemEnv()
                0x00000000c00129c0                Krnl::loadUserEnv()
                0x00000000c00129e6                Krnl::flushEnv()
                0x00000000c00129e7                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0012a07                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0012a9b      0x243 krnl/panic.32
                0x00000000c0012a9b                Krnl::panic(char const*)
 .text          0x00000000c0012cde      0x194 krnl/powctrl.32
                0x00000000c0012cde                Krnl::powerThread(void*)
                0x00000000c0012d5e                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0012d74                Krnl::userIOReceived()
                0x00000000c0012d7f                Krnl::handlePowerButton()
                0x00000000c0012db4                Krnl::handleSleepButton()
                0x00000000c0012de9                Krnl::setupPowerManager()
 .text          0x00000000c0012e72      0x50e reg/registry.32
                0x00000000c0012e72                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012fca                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001311f                Reg::getLine(char*, char*, char*)
                0x00000000c0013156                Reg::readInt(char*, char*, int*)
                0x00000000c0013241                Reg::readString(char*, char*, char*, int)
                0x00000000c00132c2                Reg::readBool(char*, char*, bool*)
                0x00000000c00132e7                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013313                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001333f                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013380       0x36 sys/sc_eject.32
                0x00000000c0013380                Sys::eject(regs*)
 .text          0x00000000c00133b6       0x18 sys/sc_exit.32
                0x00000000c00133b6                Sys::exit(regs*)
 .text          0x00000000c00133ce       0x1f sys/sc_getcwd.32
                0x00000000c00133ce                Sys::getCwd(regs*)
 .text          0x00000000c00133ed        0xc sys/sc_getpid.32
                0x00000000c00133ed                Sys::getPID(regs*)
 .text          0x00000000c00133f9       0x1a sys/sc_getramdata.32
                0x00000000c00133f9                Sys::getRAMData(regs*)
 .text          0x00000000c0013413       0x84 sys/sc_getvgaptr.32
                0x00000000c0013413                Sys::getVGAPtr(regs*)
 .text          0x00000000c0013497       0xa8 sys/sc_loaddll.32
                0x00000000c0013497                Sys::loadDLL(regs*)
 .text          0x00000000c001353f       0x68 sys/sc_read.32
                0x00000000c001353f                Sys::read(regs*)
 .text          0x00000000c00135a7       0x55 sys/sc_sbrk.32
                0x00000000c00135a7                Sys::sbrk(regs*)
 .text          0x00000000c00135fc       0x1c sys/sc_setcwd.32
                0x00000000c00135fc                Sys::setCwd(regs*)
 .text          0x00000000c0013618       0x95 sys/sc_settime.32
                0x00000000c0013618                Sys::setTime(regs*)
 .text          0x00000000c00136ad       0x4a sys/sc_timezone.32
                0x00000000c00136ad                Sys::timezone(regs*)
 .text          0x00000000c00136f7       0x68 sys/sc_write.32
                0x00000000c00136f7                Sys::write(regs*)
 .text          0x00000000c001375f       0x62 sys/sc_wsbe.32
                0x00000000c001375f                Sys::wsbe(regs*)
 .text          0x00000000c00137c1       0x38 sys/sc_yield.32
                0x00000000c00137c1                Sys::yield(regs*)
 .text          0x00000000c00137f9      0xf8e sys/syscalls.32
                0x00000000c00137f9                sysCallSeekDir(regs*)
                0x00000000c00137fe                sysCallTellDir(regs*)
                0x00000000c0013803                sysCallVerify(regs*)
                0x00000000c001380d                sysCallGetArgc(regs*)
                0x00000000c001381d                sysFormatDisk(regs*)
                0x00000000c0013887                sysSetDiskVolumeLabel(regs*)
                0x00000000c00138d1                sysGetDiskVolumeLabel(regs*)
                0x00000000c0013926                sysShutdown(regs*)
                0x00000000c0013984                sysCallRealpath(regs*)
                0x00000000c00139c7                sysCallReadDir(regs*)
                0x00000000c0013a46                sysCallIsATTY(regs*)
                0x00000000c0013aa0                sysCallSeek(regs*)
                0x00000000c0013af7                sysCallTell(regs*)
                0x00000000c0013b63                sysCallSize(regs*)
                0x00000000c0013bd5                sysCallSizeFromFilename(regs*)
                0x00000000c0013c84                sysCallClose(regs*)
                0x00000000c0013ce4                sysCallOpenDir(regs*)
                0x00000000c0013d59                sysCallCloseDir(regs*)
                0x00000000c0013dad                sysCallMakeDir(regs*)
                0x00000000c0013e1d                sysCallWait(regs*)
                0x00000000c0013e37                sysCallNotImpl(regs*)
                0x00000000c0013e52                sysPanic(regs*)
                0x00000000c0013e6c                sysCallRmdir(regs*)
                0x00000000c0013ed0                sysCallUnlink(regs*)
                0x00000000c0013f34                sysCallGetArgv(regs*)
                0x00000000c0013f80                sysCallTTYName(regs*)
                0x00000000c0014003                sysCallUSleep(regs*)
                0x00000000c001402c                sysCallSpawn(regs*)
                0x00000000c0014094                sysCallGetEnv(regs*)
                0x00000000c0014141                sysAppSettings(regs*)
                0x00000000c0014255                sysSetFatAttrib(regs*)
                0x00000000c00142c7                sysPipe(regs*)
                0x00000000c001430c                sysGetUnixTime(regs*)
                0x00000000c0014320                string_ends_with(char const*, char const*)
                0x00000000c0014368                sysCallOpen(regs*)
                0x00000000c0014550                Sys::loadSyscalls()
                0x00000000c0014745                Sys::systemCall(regs*, void*)
 .text          0x00000000c0014787     0x1203 thr/elf.32
                0x00000000c0014787                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014a31                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014c47                Thr::runtimeReferenceHelper()
                0x00000000c0014c5a                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014ca9                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014f67                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001569d                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00156cf                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015706                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015720                Thr::loadDLL(char const*, bool)
                0x00000000c0015951                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001598a        0x2 
 .text          0x00000000c001598c     0x12a1 thr/prcssthr.32
                0x00000000c001598c                userModeEntryPoint(void*)
                0x00000000c00159b4                changeTSS
                0x00000000c00159e4                switchToThread(ThreadControlBlock*)
                0x00000000c0015a90                Process::addArgs(char**)
                0x00000000c0015af0                Process::Process(char const*, Process*, char**)
                0x00000000c0015af0                Process::Process(char const*, Process*, char**)
                0x00000000c0015cdc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015cdc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015e94                taskStartupFunction
                0x00000000c0015ea0                Semaphore::Semaphore(int)
                0x00000000c0015ea0                Semaphore::Semaphore(int)
                0x00000000c0015ed0                Mutex::Mutex()
                0x00000000c0015ed0                Mutex::Mutex()
                0x00000000c0015ee4                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015fdc                Process::createUserThread()
                0x00000000c0015ff8                setupMultitasking(void (*)())
                0x00000000c0016100                schedule()
                0x00000000c001618c                Semaphore::tryAcquire()
                0x00000000c0016258                Semaphore::assertLocked(char const*)
                0x00000000c00162d0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00162f8                blockTask(TaskState)
                0x00000000c0016328                waitTask(int, int*, int)
                0x00000000c001636c                milliTenthSleepUntil(unsigned int)
                0x00000000c00163f8                milliTenthSleep(unsigned int)
                0x00000000c0016408                sleep(unsigned int)
                0x00000000c0016424                Semaphore::acquire()
                0x00000000c00164e0                taskReturned
                0x00000000c001651c                Thr::processFromPID(int)
                0x00000000c00165bc                unblockTask(ThreadControlBlock*)
                0x00000000c0016660                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016928                cleanerTaskFunction(void*)
                0x00000000c0016a18                terminateTask(int)
                0x00000000c0016ae4                Thr::terminateFromIRQ(int)
                0x00000000c0016af0                Semaphore::release()
 .text          0x00000000c0016c2d      0xb93 vm86/vm8086.32
                0x00000000c0016c2d                Vm::inbv(unsigned short)
                0x00000000c0016c40                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016c76                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016c86                Vm::getSegment(unsigned int)
                0x00000000c0016c8e                Vm::getOffset(unsigned int)
                0x00000000c0016c93                Vm::mainloop2()
                0x00000000c0016ccd                Vm::mainVm8086Loop(void*)
                0x00000000c0016cdd                Vm::mainloop3(unsigned long)
                0x00000000c0016d03                Vm::initialise8086()
                0x00000000c0016d46                Vm::finish8086()
                0x00000000c0016da7                Vm::getOutput8086(unsigned char*)
                0x00000000c0016dcc                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016e85                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016fed                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017077                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017088                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001709a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00170ab                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00170c0                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00170d6                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00170eb                Vm::faultHandler(regs*)
 .text          0x00000000c00177c0      0xfcd vm86/x87em.32
                0x00000000c00177c0                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c001781e                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c0017827                Vm::fpu32ToInternal(unsigned int)
                0x00000000c001786c                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c0017875                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c00178d4                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c0017910                Vm::fpuLongToFloat(long long)
                0x00000000c001796f                Vm::fpuGet0()
                0x00000000c0017974                Vm::fpuGet1()
                0x00000000c001797c                Vm::fpuGetPi()
                0x00000000c0017984                Vm::fpuGetLog2E()
                0x00000000c001799c                Vm::fpuGetLogE2()
                0x00000000c00179b4                Vm::fpuGetLog210()
                0x00000000c00179cc                Vm::fpuGetLog102()
                0x00000000c00179e4                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c00179f8                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c0017a0e                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c0017a64                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c0017a75                Vm::fpuAbs(unsigned long long)
                0x00000000c0017a7e                Vm::fpuChs(unsigned long long)
                0x00000000c0017a8e                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c0017a9d                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c0017abc                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c0017ad8                Vm::fpuSquare(unsigned long long)
                0x00000000c0017aee                Vm::fpuGetReg(int)
                0x00000000c0017b31                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c0017b7d                Vm::fpuPush(unsigned long long)
                0x00000000c0017bdb                Vm::fpuPop()
                0x00000000c0017c2e                Vm::x87Handler(regs*)
 .text          0x00000000c001878d     0x1096 arch/i386/hal.32
                0x00000000c001878d                Hal::noCopro(unsigned long)
                0x00000000c001878e                Hal::noTSC()
                0x00000000c0018793                Hal::readTSC()
                0x00000000c0018796                nmiHandler(regs*, void*)
                0x00000000c00187af                doubleFault(regs*, void*)
                0x00000000c00187c8                displayDebugInfo(regs*)
                0x00000000c0018e1c                displayProgramFault(char const*)
                0x00000000c0018e59                gpFault(regs*, void*)
                0x00000000c0018ece                pgFault(regs*, void*)
                0x00000000c0018f58                otherISRHandler(regs*, void*)
                0x00000000c0018fac                opcodeFault(regs*, void*)
                0x00000000c00193a6                i386SaveCoprocessor(void*)
                0x00000000c00193ba                i386LoadCoprocessor(void*)
                0x00000000c00193ce                x87EmulHandler(regs*, void*)
                0x00000000c001948e                Hal::initialiseCoprocessor()
                0x00000000c0019570                Hal::panic(char const*)
                0x00000000c0019575                Hal::initialise()
                0x00000000c00197b5                Hal::makeBeep(int)
                0x00000000c00197ef                Hal::getRand()
                0x00000000c00197f2                Hal::endOfInterrupt(int)
 *fill*         0x00000000c0019823        0x1 
 .text          0x00000000c0019824      0x2dc arch/i386/pic.32
                0x00000000c0019824                picIoWait()
                0x00000000c001982c                picDisable()
                0x00000000c0019860                picGetIRQReg(int)
                0x00000000c00198dc                picOpen()
                0x00000000c0019a60                picEOI(int)
 .text          0x00000000c0019b00      0x724 arch/i386/rtc.32
                0x00000000c0019b00                RTC::open(int, int, void*)
                0x00000000c0019b04                RTC::close(int, int, void*)
                0x00000000c0019b08                RTC::timeInSecondsUTC()
                0x00000000c0019b1a                RTC::timeInDatetimeUTC()
                0x00000000c0019b40                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0019b7e                RTC::~RTC()
                0x00000000c0019b7e                RTC::~RTC()
                0x00000000c0019ba2                RTC::~RTC()
                0x00000000c0019bcc                RTC::get_update_in_progress_flag()
                0x00000000c0019be4                RTC::completeRTCRefresh()
                0x00000000c0019eae                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001a128                rtcIRQHandler(regs*, void*)
                0x00000000c001a16e                RTC::RTC()
                0x00000000c001a16e                RTC::RTC()
 .text          0x00000000c001a224      0x1f7 arch/i386/vga.32
                0x00000000c001a224                Hal::consoleScroll(int, int)
                0x00000000c001a32c                Hal::consoleWriteCharacter(char, int, int, int, int)
                0x00000000c001a390                Hal::consoleCursorUpdate(int, int)
 *fill*         0x00000000c001a41b        0x1 
 .text          0x00000000c001a41c     0x13b7 fs/fat/vfslink.32
                0x00000000c001a41c                FAT::getName()
                0x00000000c001a424                FAT::tell(void*, unsigned long long*)
                0x00000000c001a460                FAT::stat(void*, unsigned long long*)
                0x00000000c001a49c                FAT::~FAT()
                0x00000000c001a49c                FAT::~FAT()
                0x00000000c001a4c0                FAT::~FAT()
                0x00000000c001a4e8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001a58c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001a650                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a824                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001aa3c                FAT::allocateSwapfile(char const*, int)
                0x00000000c001abf8                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001ad64                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001adc4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001ae24                FAT::close(void*)
                0x00000000c001ae78                FAT::closeDir(void*)
                0x00000000c001aecc                FAT::seek(void*, unsigned long long)
                0x00000000c001af28                fatWrapperReadDisk
                0x00000000c001af70                fatWrapperWriteDisk
                0x00000000c001afb8                fatWrapperIoctl
                0x00000000c001b0c8                FAT::FAT()
                0x00000000c001b0c8                FAT::FAT()
                0x00000000c001b11c                FAT::fixFilepath(char*)
                0x00000000c001b158                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001b28c                FAT::openDir(char const*, void**)
                0x00000000c001b33c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b430                FAT::unlink(char const*)
                0x00000000c001b4b0                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b618                FAT::rename(char const*, char const*)
                0x00000000c001b6e4                FAT::mkdir(char const*)
                0x00000000c001b764                FAT::exists(char const*)
 *fill*         0x00000000c001b7d3        0x1 
 .text          0x00000000c001b7d4      0xba7 fs/iso9660/vfslink.32
                0x00000000c001b7d4                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b7da                ISO9660::seek(void*, unsigned long long)
                0x00000000c001b80a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001b82e                ISO9660::getName()
                0x00000000c001b834                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001b858                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b85e                ISO9660::unlink(char const*)
                0x00000000c001b864                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001b86a                ISO9660::rename(char const*, char const*)
                0x00000000c001b870                ISO9660::mkdir(char const*)
                0x00000000c001b876                ISO9660::close(void*)
                0x00000000c001b898                ISO9660::closeDir(void*)
                0x00000000c001b8ba                ISO9660::~ISO9660()
                0x00000000c001b8ba                ISO9660::~ISO9660()
                0x00000000c001b8de                ISO9660::~ISO9660()
                0x00000000c001b905                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001b947                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b9c2                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ba22                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001bc26                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bea0                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001bef4                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001c0ca                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001c158                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001c206                ISO9660::exists(char const*)
                0x00000000c001c22a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c2be                ISO9660::openDir(char const*, void**)
                0x00000000c001c358                ISO9660::ISO9660()
                0x00000000c001c358                ISO9660::ISO9660()
 *fill*         0x00000000c001c37b        0x1 
 .text          0x00000000c001c37c      0x298 hal/sound/sndcard.32
                0x00000000c001c37c                SoundCard::beginPlayback()
                0x00000000c001c38a                SoundCard::stopPlayback()
                0x00000000c001c398                SoundCard::SoundCard(char const*)
                0x00000000c001c398                SoundCard::SoundCard(char const*)
                0x00000000c001c436                SoundCard::~SoundCard()
                0x00000000c001c436                SoundCard::~SoundCard()
                0x00000000c001c45a                SoundCard::~SoundCard()
                0x00000000c001c484                SoundCard::configureRates(int, int, int)
                0x00000000c001c4b4                SoundCard::getSamples16(int, short*)
                0x00000000c001c51e                SoundCard::getSamples32(int, int*)
                0x00000000c001c5a4                SoundCard::addChannel(SoundPort*)
                0x00000000c001c600                SoundCard::removeChannel(int)
 .text          0x00000000c001c614      0x3fb hal/sound/sndport.32
                0x00000000c001c614                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c614                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c6a0                SoundPort::~SoundPort()
                0x00000000c001c6a0                SoundPort::~SoundPort()
                0x00000000c001c6d4                SoundPort::unpause()
                0x00000000c001c6e0                SoundPort::pause()
                0x00000000c001c6ec                SoundPort::getBufferUsed()
                0x00000000c001c6f4                SoundPort::getBufferSize()
                0x00000000c001c6fc                SoundPort::buffer16(short*, int)
                0x00000000c001c7b0                SoundPort::buffer32(int*, int)
                0x00000000c001c85c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001c958                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001ca0f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001ca0f        0x1 
 .text          0x00000000c001ca10     0x1187 hw/bus/pci.32
                0x00000000c001ca10                PCI::open(int, int, void*)
                0x00000000c001ca2e                PCI::close(int, int, void*)
                0x00000000c001ca32                PCI::PCI()
                0x00000000c001ca32                PCI::PCI()
                0x00000000c001cac8                PCI::readBAR8(unsigned int, int)
                0x00000000c001cae4                PCI::readBAR16(unsigned int, int)
                0x00000000c001cb02                PCI::readBAR32(unsigned int, int)
                0x00000000c001cb1e                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001cb3e                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001cb60                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001cb80                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cbee                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cc96                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ccba                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001cce2                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd2c                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd54                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd78                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd9c                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001cdc4                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ce28                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001cf10                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001d302                PCI::checkBus(unsigned char)
                0x00000000c001d326                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001d766                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001dad8                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001db44                PCI::detect()
 *fill*         0x00000000c001db97        0x1 
 .text          0x00000000c001db98      0xb66 hw/diskctrl/ide.32
                0x00000000c001db98                IDE::close(int, int, void*)
                0x00000000c001db9c                IDE::IDE()
                0x00000000c001db9c                IDE::IDE()
                0x00000000c001dbd0                IDE::prepareInterrupt(unsigned char)
                0x00000000c001dbe2                selectDrive(unsigned char, unsigned char)
                0x00000000c001dbe4                IDE::getBase(unsigned char)
                0x00000000c001dbf6                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001dcb6                IDE::read(unsigned char, unsigned char)
                0x00000000c001dd64                IDE::waitInterrupt(unsigned char)
                0x00000000c001ddc6                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001dde2                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ddfe                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001de44                IDE::open(int, int, void*)
                0x00000000c001e26e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001e33a                IDE::detect()
                0x00000000c001e5fa                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001e6aa                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001e6fe      0x46c hw/diskctrl/satabus.32
                0x00000000c001e6fe                SATABus::close(int, int, void*)
                0x00000000c001e702                SATABus::detect()
                0x00000000c001e704                SATABus::SATABus()
                0x00000000c001e704                SATABus::SATABus()
                0x00000000c001e78a                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e7bc                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e804                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e824                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e84e                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001e954                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001eb36                SATABus::open(int, int, void*)
 .text          0x00000000c001eb6a      0x684 hw/diskphys/ata.32
                0x00000000c001eb6a                ATA::close(int, int, void*)
                0x00000000c001eb8e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001eb90                ATA::ATA()
                0x00000000c001eb90                ATA::ATA()
                0x00000000c001ebbe                ATA::flush(bool)
                0x00000000c001ec08                ATA::readyForCommand()
                0x00000000c001ec54                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f04a                ATA::read(unsigned long long, int, void*)
                0x00000000c001f096                ATA::write(unsigned long long, int, void*)
                0x00000000c001f0f8                ATA::detectCHS()
                0x00000000c001f122                ATA::open(int, int, void*)
 .text          0x00000000c001f1ee      0x645 hw/diskphys/atapi.32
                0x00000000c001f1ee                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001f1f4                ATAPI::close(int, int, void*)
                0x00000000c001f218                ATAPI::ATAPI()
                0x00000000c001f218                ATAPI::ATAPI()
                0x00000000c001f246                ATAPI::readyForCommand()
                0x00000000c001f298                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001f558                ATAPI::diskRemoved()
                0x00000000c001f5b4                ATAPI::eject()
                0x00000000c001f5fc                ATAPI::diskInserted()
                0x00000000c001f618                ATAPI::detectMedia()
                0x00000000c001f6d4                ATAPI::open(int, int, void*)
                0x00000000c001f7b4                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001f833        0x1 
 .text          0x00000000c001f834      0xa68 hw/diskphys/sata.32
                0x00000000c001f834                SATA::close(int, int, void*)
                0x00000000c001f858                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001f85a                SATA::open(int, int, void*)
                0x00000000c001fa50                SATA::SATA()
                0x00000000c001fa50                SATA::SATA()
                0x00000000c001fa7e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020076                SATA::read(unsigned long long, int, void*)
                0x00000000c0020176                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c002029c      0x642 hw/diskphys/satapi.32
                0x00000000c002029c                SATAPI::write(unsigned long long, int, void*)
                0x00000000c00202a2                SATAPI::close(int, int, void*)
                0x00000000c00202c6                SATAPI::SATAPI()
                0x00000000c00202c6                SATAPI::SATAPI()
                0x00000000c00202f4                SATAPI::diskRemoved()
                0x00000000c00202f6                SATAPI::diskInserted()
                0x00000000c0020312                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c00205a0                SATAPI::eject()
                0x00000000c00205dc                SATAPI::detectMedia()
                0x00000000c0020706                SATAPI::open(int, int, void*)
                0x00000000c0020806                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c00208de      0x43f hw/intctrl/apic.32
                0x00000000c00208de                IOAPIC::close(int, int, void*)
                0x00000000c00208e4                apicGetBase()
                0x00000000c0020926                IOAPIC::IOAPIC()
                0x00000000c0020926                IOAPIC::IOAPIC()
                0x00000000c002094e                apicOpen()
                0x00000000c0020aa8                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0020ada                IOAPIC::read(int)
                0x00000000c0020b02                IOAPIC::open(int, int, void*)
                0x00000000c0020bf8                IOAPIC::write(int, int)
                0x00000000c0020c24                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0020d1d        0x3 
 .text          0x00000000c0020d20       0xf0 hw/timer/apictimer.32
                0x00000000c0020d20                APICTimer::close(int, int, void*)
                0x00000000c0020d28                apicTimerHandler(regs*, void*)
                0x00000000c0020d50                APICTimer::open(int, int, void*)
                0x00000000c0020dc0                APICTimer::write(int)
                0x00000000c0020de8                APICTimer::APICTimer()
                0x00000000c0020de8                APICTimer::APICTimer()
 .text          0x00000000c0020e10      0x1a3 hw/timer/pit.32
                0x00000000c0020e10                PIT::write(int)
                0x00000000c0020e90                pitHandler(regs*, void*)
                0x00000000c0020eb4                PIT::open(int, int, void*)
                0x00000000c0020f04                PIT::close(int, int, void*)
                0x00000000c0020f34                PIT::PIT()
                0x00000000c0020f34                PIT::PIT()
 *fill*         0x00000000c0020fb3        0xd 
 .text          0x00000000c0020fc0       0x83 arch/i386/avx.32
                0x00000000c0020fc0                avxDetect
                0x00000000c0020fea                avxSave
                0x00000000c0020ffb                avxLoad
                0x00000000c002100c                avxInit
                0x00000000c002102e                avxClose
                0x00000000c002102f                wouldSheSayYes
 *fill*         0x00000000c0021043        0xd 
 .text          0x00000000c0021050      0x1d6 arch/i386/interrupt.32
                0x00000000c0021050                isr0
                0x00000000c0021060                isr1
                0x00000000c002106a                isr2
                0x00000000c0021074                isr3
                0x00000000c002107e                isr4
                0x00000000c0021088                isr5
                0x00000000c0021092                isr6
                0x00000000c002109c                isr7
                0x00000000c00210a6                isr8
                0x00000000c00210ae                isr9
                0x00000000c00210b8                isr10
                0x00000000c00210c0                isr11
                0x00000000c00210c8                isr12
                0x00000000c00210d0                isr13
                0x00000000c00210d8                isr14
                0x00000000c00210e0                isr15
                0x00000000c00210ea                isr16
                0x00000000c00210f4                isr17
                0x00000000c00210fe                isr18
                0x00000000c0021108                irq3
                0x00000000c0021112                irq4
                0x00000000c002111c                irq5
                0x00000000c0021126                irq6
                0x00000000c0021130                irq7
                0x00000000c002113a                irq8
                0x00000000c0021144                irq9
                0x00000000c002114e                irq10
                0x00000000c0021158                irq11
                0x00000000c0021162                irq12
                0x00000000c002116c                irq13
                0x00000000c0021176                irq14
                0x00000000c0021180                irq15
                0x00000000c002118a                irq1
                0x00000000c0021191                irq2
                0x00000000c0021198                isr96
                0x00000000c002119f                irq0
                0x00000000c00211a4                int_common_stub
                0x00000000c00211a4                syscall_common_stub
                0x00000000c00211d6                irq16
                0x00000000c00211e0                irq17
                0x00000000c00211ea                irq18
                0x00000000c00211f4                irq19
                0x00000000c00211fe                irq20
                0x00000000c0021208                irq21
                0x00000000c0021212                irq22
                0x00000000c002121c                irq23
 *fill*         0x00000000c0021226        0xa 
 .text          0x00000000c0021230       0x10 arch/i386/rdrand.32
                0x00000000c0021230                i386GetRDRAND
 .text          0x00000000c0021240       0x39 arch/i386/sse.32
                0x00000000c0021240                absolutelyNoChanceInHell
                0x00000000c0021240                sseDetect
                0x00000000c0021258                sseSave
                0x00000000c0021260                sseLoad
                0x00000000c0021268                sseInit
                0x00000000c0021278                sseClose
 *fill*         0x00000000c0021279        0x7 
 .text          0x00000000c0021280       0x49 arch/i386/x87.32
                0x00000000c0021286                x87Detect
                0x00000000c00212a1                x87Save
                0x00000000c00212a8                x87Load
                0x00000000c00212af                x87Init
                0x00000000c00212c8                x87Close
 *fill*         0x00000000c00212c9        0x3 
 .text          0x00000000c00212cc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00212f1        0x0 crtn.32
 *fill*         0x00000000c00212f1        0x3 
 .text          0x00000000c00212f4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00212f4                __divdi3
 *fill*         0x00000000c002143f        0x1 
 .text          0x00000000c0021440      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021440                __moddi3
 *fill*         0x00000000c00215be        0x2 
 .text          0x00000000c00215c0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00215c0                __udivdi3
 *fill*         0x00000000c00216bf        0x1 
 .text          0x00000000c00216c0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c00216c0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c00217e0        0x0
 .iplt          0x00000000c00217e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c00217da        0xf
 .init          0x00000000c00217da        0x3 crti.32
                0x00000000c00217da                _init
 .init          0x00000000c00217dd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c00217e2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c00217e7        0x2 crtn.32

.fini           0x00000000c00217e9        0xa
 .fini          0x00000000c00217e9        0x3 crti.32
                0x00000000c00217e9                _fini
 .fini          0x00000000c00217ec        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c00217f1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c00217f4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c00217f4       0x23 core/computer.32
                0x00000000c00217f4                Computer::~Computer()
                0x00000000c00217f4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0021818       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0021818       0x2a core/computer.32
                0x00000000c0021818                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021842       0x21
 .text._Z10idleCommonv
                0x00000000c0021842       0x21 core/idle.32
                0x00000000c0021842                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021864        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021864        0x2 core/unixfile.32
                0x00000000c0021864                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0021864                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021866       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021866       0x42 core/unixfile.32
                0x00000000c0021866                LinkedList<UnixFile>::LinkedList()
                0x00000000c0021866                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00218a8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00218a8       0xd3 core/unixfile.32
                0x00000000c00218a8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002197c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002197c        0x7 core/unixfile.32
                0x00000000c002197c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021984       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021984       0xa1 core/unixfile.32
                0x00000000c0021984                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021a26        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021a26        0x8 core/unixfile.32
                0x00000000c0021a26                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021a2e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021a2e       0x1a hal/device.32
                0x00000000c0021a2e                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021a2e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021a48       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021a48       0x2a hal/device.32
                0x00000000c0021a48                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021a72       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021a72       0xdc hal/device.32
                0x00000000c0021a72                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021b4e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021b4e       0x42 hal/device.32
                0x00000000c0021b4e                LinkedList<Device>::LinkedList()
                0x00000000c0021b4e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021b90       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021b90       0x1c hal/timer.32
                0x00000000c0021b90                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021bac        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021bac        0x7 hal/timer.32
                0x00000000c0021bac                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021bb4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021bb4       0xb8 hal/timer.32
                0x00000000c0021bb4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021c6c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021c6c       0xda hal/timer.32
                0x00000000c0021c6c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021d48       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021d48       0x23 hw/acpi.32
                0x00000000c0021d48                ACPI::~ACPI()
                0x00000000c0021d48                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0021d6c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0021d6c       0x2a hw/acpi.32
                0x00000000c0021d6c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021d98        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021d98        0x2 hw/acpi.32
                0x00000000c0021d98                LinkedList<Device>::~LinkedList()
                0x00000000c0021d98                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021d9c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021d9c       0x1c hw/acpi.32
                0x00000000c0021d9c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021db8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021db8        0x7 hw/acpi.32
                0x00000000c0021db8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021dc0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021dc0       0xb8 hw/acpi.32
                0x00000000c0021dc0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c0021e78       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0021e78       0x23 hw/cpu.32
                0x00000000c0021e78                CPU::~CPU()
                0x00000000c0021e78                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0021e9c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0021e9c       0x2a hw/cpu.32
                0x00000000c0021e9c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021ec8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021ec8        0x2 thr/prcssthr.32
                0x00000000c0021ec8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0021ec8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021ecc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021ecc       0x49 thr/prcssthr.32
                0x00000000c0021ecc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0021ecc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021f18       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021f18       0x42 thr/prcssthr.32
                0x00000000c0021f18                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0021f18                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021f5c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021f5c        0x8 thr/prcssthr.32
                0x00000000c0021f5c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0021f64        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0021f64        0xd vm86/x87em.32
                0x00000000c0021f64                Vm::_FPUState::_FPUState()
                0x00000000c0021f64                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c0021f72       0x23
 .text._ZN3PCID2Ev
                0x00000000c0021f72       0x23 hw/bus/pci.32
                0x00000000c0021f72                PCI::~PCI()
                0x00000000c0021f72                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0021f96       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0021f96       0x2a hw/bus/pci.32
                0x00000000c0021f96                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0021fc0       0x23
 .text._ZN3IDED2Ev
                0x00000000c0021fc0       0x23 hw/diskctrl/ide.32
                0x00000000c0021fc0                IDE::~IDE()
                0x00000000c0021fc0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0021fe4       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0021fe4       0x2a hw/diskctrl/ide.32
                0x00000000c0021fe4                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c002200e       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c002200e       0x23 hw/diskctrl/satabus.32
                0x00000000c002200e                SATABus::~SATABus()
                0x00000000c002200e                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0022032       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0022032       0x2a hw/diskctrl/satabus.32
                0x00000000c0022032                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c002205c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c002205c       0x23 hw/diskphys/ata.32
                0x00000000c002205c                ATA::~ATA()
                0x00000000c002205c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0022080       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0022080       0x2a hw/diskphys/ata.32
                0x00000000c0022080                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00220aa       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00220aa       0x23 hw/diskphys/atapi.32
                0x00000000c00220aa                ATAPI::~ATAPI()
                0x00000000c00220aa                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00220ce       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00220ce       0x2a hw/diskphys/atapi.32
                0x00000000c00220ce                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00220f8       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00220f8       0x23 hw/diskphys/sata.32
                0x00000000c00220f8                SATA::~SATA()
                0x00000000c00220f8                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c002211c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c002211c       0x2a hw/diskphys/sata.32
                0x00000000c002211c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0022146       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0022146       0x23 hw/diskphys/satapi.32
                0x00000000c0022146                SATAPI::~SATAPI()
                0x00000000c0022146                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002216a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002216a       0x2a hw/diskphys/satapi.32
                0x00000000c002216a                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0022194       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0022194       0x23 hw/intctrl/apic.32
                0x00000000c0022194                IOAPIC::~IOAPIC()
                0x00000000c0022194                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00221b8       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00221b8       0x2a hw/intctrl/apic.32
                0x00000000c00221b8                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00221e4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00221e4       0x23 hw/timer/apictimer.32
                0x00000000c00221e4                APICTimer::~APICTimer()
                0x00000000c00221e4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022208       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022208       0x2a hw/timer/apictimer.32
                0x00000000c0022208                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0022234       0x23
 .text._ZN3PITD2Ev
                0x00000000c0022234       0x23 hw/timer/pit.32
                0x00000000c0022234                PIT::~PIT()
                0x00000000c0022234                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022258       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022258       0x2a hw/timer/pit.32
                0x00000000c0022258                PIT::~PIT()

.rodata         0x00000000c0022282     0x36da
                0x00000000c0022282                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0022282        0x2 
 .ctors         0x00000000c0022284        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022288        0x4 core/unixfile.32
 .ctors         0x00000000c002228c        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022290        0x4 vm86/x87em.32
 .ctors         0x00000000c0022294        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022298                end_ctors = .
                0x00000000c0022298                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0022298        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002229c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002229c                __DTOR_END__
                0x00000000c00222a0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00222a0        0x0 
 .rodata        0x00000000c00222a0      0x101 acpica/utclib.32
                0x00000000c00222a0                AcpiGbl_Ctypes
 *fill*         0x00000000c00223a1        0x3 
 .rodata        0x00000000c00223a4       0x18 core/malloc.32
 *fill*         0x00000000c00223bc        0x4 
 .rodata        0x00000000c00223c0      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c00224e0       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0022536        0xa 
 .rodata        0x00000000c0022540      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022940       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0022989      0x12c core/computer.32
 *fill*         0x00000000c0022ab5        0x3 
 .rodata.str1.4
                0x00000000c0022ab8       0x8c core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0022b44       0x2c core/computer.32
                0x00000000c0022b44                vtable for Computer
 .rodata.str1.1
                0x00000000c0022b70       0x2a core/kheap.32
 *fill*         0x00000000c0022b9a        0x2 
 .rodata.str1.4
                0x00000000c0022b9c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0022bcc       0x17 core/main.32
 *fill*         0x00000000c0022be3        0x1 
 .rodata.str1.4
                0x00000000c0022be4       0x1f core/main.32
 .rodata.str1.1
                0x00000000c0022c03       0xea core/physmgr.32
                                         0xee (size before relaxing)
 *fill*         0x00000000c0022ced        0x3 
 .rodata.str1.4
                0x00000000c0022cf0       0xc9 core/physmgr.32
 .rodata.str1.1
                0x00000000c0022db9       0x39 core/pipe.32
 *fill*         0x00000000c0022df2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0022df4       0x1c core/pipe.32
                0x00000000c0022df4                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022e10       0x69 core/terminal.32
 *fill*         0x00000000c0022e79        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0022e7c       0x1c core/terminal.32
                0x00000000c0022e7c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0022e98       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0022eba       0x15 core/unixfile.32
 *fill*         0x00000000c0022ecf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0022ed0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0022f1b        0x8 core/unixfile.32
 *fill*         0x00000000c0022f23        0x1 
 .rodata.str1.4
                0x00000000c0022f24       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0022f44       0x1c core/unixfile.32
                0x00000000c0022f44                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0022f60       0x1c core/unixfile.32
                0x00000000c0022f60                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0022f7c      0x1b8 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0023134      0x194 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00232c8       0x83 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c002334b       0x11 dbg/kconsole.32
 *fill*         0x00000000c002334b        0x1 
 .rodata        0x00000000c002334c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002349c       0x25 fs/vfs.32
                                         0x33 (size before relaxing)
 *fill*         0x00000000c00234c1        0x3 
 .rodata.str1.4
                0x00000000c00234c4       0x54 fs/vfs.32
 .rodata._ZTV10Filesystem
                0x00000000c0023518       0x68 fs/vfs.32
                0x00000000c0023518                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0023580       0x1c fs/vfs.32
                0x00000000c0023580                vtable for File
 .rodata._ZTV9Directory
                0x00000000c002359c       0x1c fs/vfs.32
                0x00000000c002359c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00235b8       0x2c hal/bus.32
                0x00000000c00235b8                vtable for Bus
 .rodata.str1.1
                0x00000000c00235e4       0x1e hal/clock.32
 *fill*         0x00000000c0023602        0x2 
 .rodata._ZTV5Clock
                0x00000000c0023604       0x3c hal/clock.32
                0x00000000c0023604                vtable for Clock
 .rodata        0x00000000c0023640       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0023670       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00236c8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00236c8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c00236c8       0x2c hal/device.32
                0x00000000c00236c8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00236f4       0x2c hal/device.32
                0x00000000c00236f4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023720       0x2c hal/diskctrl.32
                0x00000000c0023720                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002374c       0x38 hal/diskphys.32
                0x00000000c002374c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0023784       0x3e hal/intctrl.32
 *fill*         0x00000000c00237c2        0x2 
 .rodata.str1.4
                0x00000000c00237c4       0x5d hal/intctrl.32
 .rodata        0x00000000c0023821       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0023874       0x34 hal/keybrd.32
                0x00000000c0023874                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00238a8       0x9a hal/logidisk.32
 *fill*         0x00000000c0023942        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0023944       0x2c hal/logidisk.32
                0x00000000c0023944                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0023970       0x2c hal/mouse.32
                0x00000000c0023970                vtable for Mouse
 .rodata.str1.1
                0x00000000c002399c        0xb hal/partition.32
 *fill*         0x00000000c00239a7        0x1 
 .rodata._ZTV6Serial
                0x00000000c00239a8       0x44 hal/serial.32
                0x00000000c00239a8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00239ec       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00239ec        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00239ec       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00239ec       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00239ec       0x30 hal/timer.32
                0x00000000c00239ec                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0023a1c       0x10 hal/vcache.32
                0x00000000c0023a1c                vtable for VCache
 .rodata.str1.1
                0x00000000c0023a2c       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c0023a94       0x48 hal/video.32
                0x00000000c0023a94                vtable for Video
 .rodata.str1.4
                0x00000000c0023adc      0x123 hw/acpi.32
 .rodata.str1.1
                0x00000000c0023bff      0x268 hw/acpi.32
                                        0x282 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023e67       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023e67        0x8 hw/acpi.32
 *fill*         0x00000000c0023e67        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023e68       0x2c hw/acpi.32
                0x00000000c0023e68                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023e94      0x1be hw/cpu.32
                                        0x1c2 (size before relaxing)
 *fill*         0x00000000c0024052        0x2 
 .rodata._ZTV3CPU
                0x00000000c0024054       0x2c hw/cpu.32
                0x00000000c0024054                vtable for CPU
 .rodata.str1.1
                0x00000000c0024080       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c0024091       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00240cd       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 *fill*         0x00000000c002416d        0x3 
 .rodata.str1.4
                0x00000000c0024170      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c00242ae       0x2f krnl/powctrl.32
 .rodata.str1.1
                0x00000000c00242dd       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024322       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c0024376       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c00243a2       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00243ea      0x247 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024631       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0024688      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024794       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024794       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024794       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024794        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024794       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0024834       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0024864       0x58 vm86/x87em.32
 .rodata        0x00000000c00248bc       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c00248f8      0x27f arch/i386/hal.32
                                        0x28a (size before relaxing)
 *fill*         0x00000000c0024b77        0x1 
 .rodata.str1.4
                0x00000000c0024b78       0x99 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0024c11       0xc5 arch/i386/rtc.32
 *fill*         0x00000000c0024cd6        0x2 
 .rodata._ZTV3RTC
                0x00000000c0024cd8       0x3c arch/i386/rtc.32
                0x00000000c0024cd8                vtable for RTC
 .rodata.str1.1
                0x00000000c0024d14       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0024d55        0x3 
 .rodata._ZTV3FAT
                0x00000000c0024d58       0x68 fs/fat/vfslink.32
                0x00000000c0024d58                vtable for FAT
 .rodata.str1.1
                0x00000000c0024dc0       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c0024ddb        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c0024ddc       0x68 fs/iso9660/vfslink.32
                0x00000000c0024ddc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0024e44       0xc3 hal/sound/sndcard.32
                                         0xdb (size before relaxing)
 *fill*         0x00000000c0024f07        0x1 
 .rodata._ZTV9SoundCard
                0x00000000c0024f08       0x34 hal/sound/sndcard.32
                0x00000000c0024f08                vtable for SoundCard
 .rodata.str1.1
                0x00000000c0024f3c       0x6e hal/sound/sndport.32
 *fill*         0x00000000c0024faa        0x2 
 .rodata.str1.4
                0x00000000c0024fac       0x93 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002503f      0x1cd hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c002520c       0x2c hw/bus/pci.32
                0x00000000c002520c                vtable for PCI
 .rodata.str1.1
                0x00000000c0025238       0xa3 hw/diskctrl/ide.32
 *fill*         0x00000000c00252db        0x1 
 .rodata._ZTV3IDE
                0x00000000c00252dc       0x2c hw/diskctrl/ide.32
                0x00000000c00252dc                vtable for IDE
 .rodata.str1.4
                0x00000000c0025308       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata.str1.1
                0x00000000c002532c       0x7b hw/diskctrl/satabus.32
 *fill*         0x00000000c00253a7        0x1 
 .rodata._ZTV7SATABus
                0x00000000c00253a8       0x2c hw/diskctrl/satabus.32
                0x00000000c00253a8                vtable for SATABus
 .rodata.str1.1
                0x00000000c00253d4       0x4b hw/diskphys/ata.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c002541f        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025420       0x38 hw/diskphys/ata.32
                0x00000000c0025420                vtable for ATA
 .rodata.str1.1
                0x00000000c0025458       0x40 hw/diskphys/atapi.32
                                         0x6f (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c0025498       0x38 hw/diskphys/atapi.32
                0x00000000c0025498                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00254d0      0x202 hw/diskphys/sata.32
 *fill*         0x00000000c00256d2        0x2 
 .rodata._ZTV4SATA
                0x00000000c00256d4       0x38 hw/diskphys/sata.32
                0x00000000c00256d4                vtable for SATA
 .rodata.str1.1
                0x00000000c002570c      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c002583e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0025840       0x38 hw/diskphys/satapi.32
                0x00000000c0025840                vtable for SATAPI
 .rodata        0x00000000c0025878       0x19 hw/intctrl/apic.32
 *fill*         0x00000000c0025891        0x3 
 .rodata._ZTV6IOAPIC
                0x00000000c0025894       0x2c hw/intctrl/apic.32
                0x00000000c0025894                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00258c0       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00258db        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00258dc       0x30 hw/timer/apictimer.32
                0x00000000c00258dc                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002590c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0025929        0x3 
 .rodata._ZTV3PIT
                0x00000000c002592c       0x30 hw/timer/pit.32
                0x00000000c002592c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002595c      0x525
 *(.data)
 .data          0x00000000c002595c        0x0 crti.32
 .data          0x00000000c002595c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002595c                __dso_handle
 .data          0x00000000c0025960        0x0 acpica/utclib.32
 .data          0x00000000c0025960        0x0 core/malloc.32
 .data          0x00000000c0025960        0x0 libk/string.32
 .data          0x00000000c0025960        0x0 fs/fat/diskio.32
 .data          0x00000000c0025960        0x0 fs/fat/ff.32
 .data          0x00000000c0025960        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0025960        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0025960        0x0 compat/inlines.32
 .data          0x00000000c0025960        0x0 compat/resolve.32
 .data          0x00000000c0025960        0x0 core/computer.32
 .data          0x00000000c0025960        0x0 core/gdt.32
 .data          0x00000000c0025960        0x0 core/idle.32
 .data          0x00000000c0025960        0x0 core/idt.32
 .data          0x00000000c0025960        0x4 core/kheap.32
 *fill*         0x00000000c0025964       0x1c 
 .data          0x00000000c0025980      0x142 core/main.32
                0x00000000c0025980                titleScreen
 *fill*         0x00000000c0025ac2        0x2 
 .data          0x00000000c0025ac4        0x4 core/physmgr.32
                0x00000000c0025ac4                Phys::bitmap
 .data          0x00000000c0025ac8        0x0 core/pipe.32
 *fill*         0x00000000c0025ac8       0x18 
 .data          0x00000000c0025ae0       0x60 core/terminal.32
                0x00000000c0025ae0                VgaText::hiddenOut
                0x00000000c0025b00                ansiToVGAMappings
 .data          0x00000000c0025b40        0x0 core/tss.32
 .data          0x00000000c0025b40        0x4 core/unixfile.32
                0x00000000c0025b40                UnixFile::nextFd
 .data          0x00000000c0025b44       0x15 core/virtmgr.32
                0x00000000c0025b44                Virt::pageAllocPtr
                0x00000000c0025b48                Virt::bitmap
                0x00000000c0025b4c                Virt::swapfileSectorsPerPage
                0x00000000c0025b50                Virt::swapfileLength
                0x00000000c0025b54                Virt::swapfileSector
                0x00000000c0025b58                Virt::swapfileDrive
 *fill*         0x00000000c0025b59        0x3 
 .data          0x00000000c0025b5c        0x4 coreobjs/c++.32
                0x00000000c0025b5c                __stack_chk_guard
 .data          0x00000000c0025b60        0x0 dbg/kconsole.32
 .data          0x00000000c0025b60        0x0 fs/vfs.32
 .data          0x00000000c0025b60        0x0 hal/bus.32
 .data          0x00000000c0025b60        0x0 hal/buzzer.32
 .data          0x00000000c0025b60        0x0 hal/clock.32
 .data          0x00000000c0025b60        0x0 hal/device.32
 .data          0x00000000c0025b60        0x0 hal/diskctrl.32
 .data          0x00000000c0025b60        0x0 hal/diskphys.32
 .data          0x00000000c0025b60        0x0 hal/fpu.32
 .data          0x00000000c0025b60        0x0 hal/intctrl.32
 .data          0x00000000c0025b60        0x0 hal/keybrd.32
 .data          0x00000000c0025b60        0x0 hal/logidisk.32
 .data          0x00000000c0025b60        0x0 hal/mouse.32
 .data          0x00000000c0025b60        0x0 hal/partition.32
 .data          0x00000000c0025b60        0x0 hal/serial.32
 .data          0x00000000c0025b60        0x0 hal/timer.32
 .data          0x00000000c0025b60        0x0 hal/vcache.32
 .data          0x00000000c0025b60        0x0 hal/video.32
 .data          0x00000000c0025b60       0x10 hw/acpi.32
                0x00000000c0025b60                legacyIRQRemaps
 .data          0x00000000c0025b70        0x4 hw/cpu.32
                0x00000000c0025b70                lastCode
 .data          0x00000000c0025b74        0x0 hw/smp.32
 *fill*         0x00000000c0025b74        0xc 
 .data          0x00000000c0025b80       0x4d krnl/env.32
                0x00000000c0025b80                defaultSysEnv
 .data          0x00000000c0025bcd        0x0 krnl/panic.32
 .data          0x00000000c0025bcd        0x0 krnl/powctrl.32
 .data          0x00000000c0025bcd        0x0 reg/registry.32
 .data          0x00000000c0025bcd        0x0 sys/sc_eject.32
 .data          0x00000000c0025bcd        0x0 sys/sc_exit.32
 .data          0x00000000c0025bcd        0x0 sys/sc_getcwd.32
 .data          0x00000000c0025bcd        0x0 sys/sc_getpid.32
 .data          0x00000000c0025bcd        0x0 sys/sc_getramdata.32
 .data          0x00000000c0025bcd        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c0025bcd        0x0 sys/sc_loaddll.32
 .data          0x00000000c0025bcd        0x0 sys/sc_read.32
 .data          0x00000000c0025bcd        0x0 sys/sc_sbrk.32
 .data          0x00000000c0025bcd        0x0 sys/sc_setcwd.32
 .data          0x00000000c0025bcd        0x0 sys/sc_settime.32
 .data          0x00000000c0025bcd        0x0 sys/sc_timezone.32
 .data          0x00000000c0025bcd        0x0 sys/sc_write.32
 .data          0x00000000c0025bcd        0x0 sys/sc_wsbe.32
 .data          0x00000000c0025bcd        0x0 sys/sc_yield.32
 .data          0x00000000c0025bcd        0x0 sys/syscalls.32
 .data          0x00000000c0025bcd        0x0 thr/elf.32
 *fill*         0x00000000c0025bcd        0x3 
 .data          0x00000000c0025bd0        0x4 thr/prcssthr.32
                0x00000000c0025bd0                Thr::nextPID
 .data          0x00000000c0025bd4        0x0 vm86/vm8086.32
 .data          0x00000000c0025bd4        0x0 vm86/x87em.32
 *fill*         0x00000000c0025bd4        0xc 
 .data          0x00000000c0025be0      0x2a0 arch/i386/hal.32
                0x00000000c0025be0                Krnl::exceptionNames
 .data          0x00000000c0025e80        0x0 arch/i386/pic.32
 .data          0x00000000c0025e80        0x0 arch/i386/rtc.32
 .data          0x00000000c0025e80        0x0 arch/i386/vga.32
 .data          0x00000000c0025e80        0x0 fs/fat/vfslink.32
 .data          0x00000000c0025e80        0x1 fs/iso9660/vfslink.32
                0x00000000c0025e80                recentDriveletter
 .data          0x00000000c0025e81        0x0 hal/sound/sndcard.32
 .data          0x00000000c0025e81        0x0 hal/sound/sndport.32
 .data          0x00000000c0025e81        0x0 hw/bus/isa.32
 .data          0x00000000c0025e81        0x0 hw/bus/pci.32
 .data          0x00000000c0025e81        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0025e81        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0025e81        0x0 hw/diskphys/ata.32
 .data          0x00000000c0025e81        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0025e81        0x0 hw/diskphys/sata.32
 .data          0x00000000c0025e81        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0025e81        0x0 hw/intctrl/apic.32
 .data          0x00000000c0025e81        0x0 hw/timer/apictimer.32
 .data          0x00000000c0025e81        0x0 hw/timer/pit.32
 .data          0x00000000c0025e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0025e81        0x0 crtn.32
 .data          0x00000000c0025e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0025e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0025e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0025e81        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0025e84        0x0
 .got           0x00000000c0025e84        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0025e84        0x0
 .got.plt       0x00000000c0025e84        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0025e84        0x0
 .igot.plt      0x00000000c0025e84        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0025e84        0x0
 .tm_clone_table
                0x00000000c0025e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0025e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0025e81      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0025e81        0x3 
 .eh_frame      0x00000000c0025e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0025e84        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0025e84       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0025edc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0025f1c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0025f88       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c002600c        0x0
 .rel.got       0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c002600c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c002600c     0x43bc
                0x00000000c002600c                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c002600c        0x0 crti.32
 .bss           0x00000000c002600c       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c002602c        0x4 acpica/utclib.32
 *fill*         0x00000000c0026030       0x10 
 .bss           0x00000000c0026040      0x378 core/malloc.32
 .bss           0x00000000c00263b8        0x0 libk/string.32
 .bss           0x00000000c00263b8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c00263b8        0x8 
 .bss           0x00000000c00263c0       0x88 fs/fat/ff.32
 .bss           0x00000000c0026448        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026448        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0026448        0x0 compat/inlines.32
 .bss           0x00000000c0026448        0x0 compat/resolve.32
 .bss           0x00000000c0026448        0x6 core/computer.32
                0x00000000c0026448                Krnl::computer
                0x00000000c002644c                Krnl::preemptionOn
                0x00000000c002644d                Krnl::schedulingOn
 *fill*         0x00000000c002644e        0x2 
 .bss           0x00000000c0026450        0x6 core/gdt.32
                0x00000000c0026450                gdtDescr
 .bss           0x00000000c0026456        0x0 core/idle.32
 *fill*         0x00000000c0026456        0x2 
 .bss           0x00000000c0026458        0x6 core/idt.32
                0x00000000c0026458                idtDescr
 .bss           0x00000000c002645e        0x0 core/kheap.32
 *fill*         0x00000000c002645e        0x2 
 .bss           0x00000000c0026460        0x4 core/main.32
                0x00000000c0026460                sysBootSettings
 .bss           0x00000000c0026464       0x29 core/physmgr.32
                0x00000000c0026464                Phys::forbidEvictions
                0x00000000c0026468                Phys::currentPagePointer
                0x00000000c002646c                Phys::highestMem
                0x00000000c0026470                Phys::oldPercent
                0x00000000c0026474                Phys::usedPages
                0x00000000c0026478                Phys::usablePages
                0x00000000c002647c                Phys::dmaUsage
 .bss           0x00000000c002648d        0x0 core/pipe.32
 *fill*         0x00000000c002648d        0x3 
 .bss           0x00000000c0026490        0x9 core/terminal.32
                0x00000000c0026490                terminalCycle
                0x00000000c0026494                activeTerminal
                0x00000000c0026498                VgaText::graphicMode
 *fill*         0x00000000c0026499        0x1 
 .bss           0x00000000c002649a        0x2 core/tss.32
                0x00000000c002649a                doubleFaultSelector
 *fill*         0x00000000c002649c        0x4 
 .bss           0x00000000c00264a0       0x84 core/unixfile.32
                0x00000000c00264a0                sfileLpt
                0x00000000c00264e0                sfileCom
                0x00000000c0026504                sfileNul
                0x00000000c0026508                sfilePnt
                0x00000000c002650c                sfileAux
                0x00000000c0026510                sfileCon
                0x00000000c0026514                initialFilesAdded
                0x00000000c0026518                unixFileLinkedList
 .bss           0x00000000c0026524       0x14 core/virtmgr.32
                0x00000000c0026524                twswaps
                0x00000000c0026528                swapBalance
                0x00000000c002652c                panicVAS
                0x00000000c0026530                Virt::swapfileBitmap
                0x00000000c0026534                firstVAS
 .bss           0x00000000c0026538        0x0 coreobjs/c++.32
 .bss           0x00000000c0026538        0x0 dbg/kconsole.32
 .bss           0x00000000c0026538        0x4 fs/vfs.32
                0x00000000c0026538                installedFilesystems
 .bss           0x00000000c002653c        0x0 hal/bus.32
 .bss           0x00000000c002653c        0x0 hal/buzzer.32
 .bss           0x00000000c002653c        0x8 hal/clock.32
                0x00000000c002653c                User::dstOn
                0x00000000c002653d                User::timezoneHalfHourOffset
                0x00000000c0026540                User::timezoneHourOffset
 .bss           0x00000000c0026544        0x0 hal/device.32
 .bss           0x00000000c0026544        0x0 hal/diskctrl.32
 .bss           0x00000000c0026544        0x0 hal/diskphys.32
 .bss           0x00000000c0026544        0x0 hal/fpu.32
 *fill*         0x00000000c0026544       0x1c 
 .bss           0x00000000c0026560     0x2000 hal/intctrl.32
                0x00000000c0026560                INT_contexts
                0x00000000c0027560                INT_handlers
 .bss           0x00000000c0028560      0x429 hal/keybrd.32
                0x00000000c0028560                keyboardWaitingTaskList
                0x00000000c0028564                keyboardSetupYet
                0x00000000c0028568                guiKeyboardHandler
                0x00000000c0028580                keystates
 *fill*         0x00000000c0028989       0x17 
 .bss           0x00000000c00289a0       0x88 hal/logidisk.32
                0x00000000c00289a0                diskAssignments
                0x00000000c00289c0                disks
 .bss           0x00000000c0028a28        0x4 hal/mouse.32
                0x00000000c0028a28                guiMouseHandler
 .bss           0x00000000c0028a2c        0x0 hal/partition.32
 .bss           0x00000000c0028a2c        0x0 hal/serial.32
 .bss           0x00000000c0028a2c        0x4 hal/timer.32
                0x00000000c0028a2c                milliTenthsSinceBoot
 .bss           0x00000000c0028a30        0x0 hal/vcache.32
 .bss           0x00000000c0028a30        0x4 hal/video.32
                0x00000000c0028a30                screen
 *fill*         0x00000000c0028a34        0xc 
 .bss           0x00000000c0028a40      0x480 hw/acpi.32
                0x00000000c0028a40                systemSleepFunction
                0x00000000c0028a44                systemResetFunction
                0x00000000c0028a48                systemShutdownFunction
                0x00000000c0028a4c                nextACPITable
                0x00000000c0028a60                acpiTables
                0x00000000c0028c60                usingXSDT
                0x00000000c0028c64                MADTpointer
                0x00000000c0028c68                RSDTpointer
                0x00000000c0028c6c                RSDPpointer
                0x00000000c0028c70                nextAPICNMI
                0x00000000c0028c80                apicNMIInfo
                0x00000000c0028d00                legacyIRQFlags
                0x00000000c0028d20                ioapicDiscoveryNumber
                0x00000000c0028d40                ioapicFoundInMADT
                0x00000000c0028d60                ioapicAddresses
                0x00000000c0028de0                ioapicGSIBase
                0x00000000c0028e60                processorDiscoveryNumber
                0x00000000c0028e80                matchingAPICID
                0x00000000c0028ea0                processorID
 .bss           0x00000000c0028ec0       0x10 hw/cpu.32
                0x00000000c0028ec0                lastD
                0x00000000c0028ec4                lastC
                0x00000000c0028ec8                lastB
                0x00000000c0028ecc                lastA
 .bss           0x00000000c0028ed0        0x1 hw/smp.32
                0x00000000c0028ed0                Krnl::bspID
 *fill*         0x00000000c0028ed1        0x3 
 .bss           0x00000000c0028ed4        0x8 krnl/env.32
                0x00000000c0028ed4                Krnl::userEnv
                0x00000000c0028ed8                Krnl::systemEnv
 .bss           0x00000000c0028edc        0x9 krnl/panic.32
                0x00000000c0028edc                Krnl::guiProgramFaultHandler
                0x00000000c0028ee0                Krnl::guiPanicHandler
                0x00000000c0028ee4                Krnl::kernelInPanic
 *fill*         0x00000000c0028ee5       0x1b 
 .bss           0x00000000c0028f00       0x48 krnl/powctrl.32
                0x00000000c0028f00                Krnl::powCtrlOnBattery
                0x00000000c0028f20                Krnl::currentPowerSettings
                0x00000000c0028f44                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0028f48        0x0 reg/registry.32
 .bss           0x00000000c0028f48        0x0 sys/sc_eject.32
 .bss           0x00000000c0028f48        0x0 sys/sc_exit.32
 .bss           0x00000000c0028f48        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0028f48        0x0 sys/sc_getpid.32
 .bss           0x00000000c0028f48        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0028f48        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0028f48        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0028f48        0x0 sys/sc_read.32
 .bss           0x00000000c0028f48        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0028f48        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0028f48        0x0 sys/sc_settime.32
 .bss           0x00000000c0028f48        0x0 sys/sc_timezone.32
 .bss           0x00000000c0028f48        0x0 sys/sc_write.32
 .bss           0x00000000c0028f48        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0028f48        0x0 sys/sc_yield.32
 *fill*         0x00000000c0028f48       0x18 
 .bss           0x00000000c0028f60      0x200 sys/syscalls.32
                0x00000000c0028f60                systemCallHandlers
 .bss           0x00000000c0029160      0x7a4 thr/elf.32
                0x00000000c0029160                Thr::driverLookupNext
                0x00000000c0029180                Thr::driverLookupLen
                0x00000000c0029380                Thr::driverLookupAddr
                0x00000000c0029580                Thr::driverNameLookup
                0x00000000c0029780                Thr::kernelSymbols
                0x00000000c0029800                Thr::kernelStringTable
                0x00000000c0029880                Thr::kernelSymbolTable
                0x00000000c0029900                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0029904        0x4 
 .bss           0x00000000c0029908       0x68 thr/prcssthr.32
                0x00000000c0029908                cleanerThread
                0x00000000c002990c                weNeedTheCleanerToNotBlock
                0x00000000c0029910                retValLockStuff
                0x00000000c0029914                retValSchedLock
                0x00000000c0029918                lockStuffLock
                0x00000000c002991c                schedulerLock
                0x00000000c0029920                taskSwitchesPostponedFlag
                0x00000000c0029924                postponeTaskSwitchesCounter
                0x00000000c0029928                irqDisableCounter
                0x00000000c002992c                terminatedTaskList
                0x00000000c0029938                sleepingTaskList
                0x00000000c0029944                taskList
                0x00000000c0029950                kernelProcess
 *fill*         0x00000000c0029970       0x10 
 .bss           0x00000000c0029980       0x40 vm86/vm8086.32
                0x00000000c0029980                Vm::vmRetV
                0x00000000c0029984                Vm::vmDone
                0x00000000c0029985                Vm::vmReady
                0x00000000c0029988                Vm::vm86Thread
                0x00000000c002998c                Vm::vmToHostCommsPtr
                0x00000000c00299a0                Vm::vmToHostComms
 .bss           0x00000000c00299c0       0x48 vm86/x87em.32
                0x00000000c00299c0                Vm::fpuState
 .bss           0x00000000c0029a08       0x18 arch/i386/hal.32
                0x00000000c0029a08                Hal::apic
                0x00000000c0029a0c                fpuOwner
                0x00000000c0029a10                coproLoadFunc
                0x00000000c0029a14                coproSaveFunc
                0x00000000c0029a18                _i386_HAL_tscFunction
                0x00000000c0029a1c                gpFaultIntercept
 .bss           0x00000000c0029a20        0x0 arch/i386/pic.32
 .bss           0x00000000c0029a20        0x2 arch/i386/rtc.32
 .bss           0x00000000c0029a22        0x0 arch/i386/vga.32
 *fill*         0x00000000c0029a22       0x1e 
 .bss           0x00000000c0029a40       0xf0 fs/fat/vfslink.32
                0x00000000c0029a40                FAT::fats
                0x00000000c0029a60                FAT::vfsToFatRemaps
                0x00000000c0029ae0                fatToVFSRemaps
 *fill*         0x00000000c0029b30       0x10 
 .bss           0x00000000c0029b40      0x820 fs/iso9660/vfslink.32
                0x00000000c0029b40                recentSector
                0x00000000c0029b60                recentBuffer
 .bss           0x00000000c002a360        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a360        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a360        0x0 hw/bus/isa.32
 .bss           0x00000000c002a360        0xd hw/bus/pci.32
                0x00000000c002a360                thePCI
 .bss           0x00000000c002a36d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a36d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a36d        0x3 
 .bss           0x00000000c002a370        0x8 hw/diskphys/ata.32
                0x00000000c002a370                ataSectorsWritten
                0x00000000c002a374                ataSectorsRead
 .bss           0x00000000c002a378        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a378        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a378        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a378        0x8 
 .bss           0x00000000c002a380       0x41 hw/intctrl/apic.32
                0x00000000c002a380                noOfIOAPICs
                0x00000000c002a3a0                ioapics
                0x00000000c002a3c0                IOAPICsSetupYet
 .bss           0x00000000c002a3c1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a3c1        0x3 
 .bss           0x00000000c002a3c4        0x4 hw/timer/pit.32
                0x00000000c002a3c4                pitFreq
 .bss           0x00000000c002a3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a3c8        0x0 crtn.32
 .bss           0x00000000c002a3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a3c8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002e784                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
