Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootflags.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/apic.32
 .group         0x0000000000000000        0xc arch/i386/apic.32
 .comment       0x0000000000000000       0x12 arch/i386/apic.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootflags.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/apic.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21cfe
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x2ad dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f13                Dbg::logs(char*)
                0x00000000c0006f3d                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f5b                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f7c                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070f3        0x1 
 .text          0x00000000c00070f4      0x2d4 dbg/usban.32
                0x00000000c00070f4                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007160                __ubsan_handle_type_mismatch_v1
                0x00000000c000723c                __ubsan_handle_pointer_overflow
                0x00000000c0007268                __ubsan_handle_out_of_bounds
                0x00000000c0007294                __ubsan_handle_add_overflow
                0x00000000c00072c0                __ubsan_handle_load_invalid_value
                0x00000000c00072ec                __ubsan_handle_divrem_overflow
                0x00000000c0007318                __ubsan_handle_mul_overflow
                0x00000000c0007344                __ubsan_handle_sub_overflow
                0x00000000c0007370                __ubsan_handle_shift_out_of_bounds
                0x00000000c000739c                __ubsan_handle_negate_overflow
 .text          0x00000000c00073c8      0x814 fs/symlink.32
                0x00000000c0007517                KiDeinitialiseSymlinks(void*)
                0x00000000c00075aa                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000762d                KeInitialiseSymlinks()
                0x00000000c000778f                KiIsSymlinkRegistered(char const*)
                0x00000000c00078f9                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007aa0                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bdc      0xd88 fs/vfs.32
                0x00000000c0007bdc                File::read(unsigned long long, void*, int*)
                0x00000000c0007c34                File::write(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007ce4                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007d12                File::isAtty()
                0x00000000c0007d16                Directory::isAtty()
                0x00000000c0007d1a                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007d20                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d26                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d2c                File::~File()
                0x00000000c0007d2c                File::~File()
                0x00000000c0007d50                File::~File()
                0x00000000c0007d7a                Directory::~Directory()
                0x00000000c0007d7a                Directory::~Directory()
                0x00000000c0007d9e                Directory::~Directory()
                0x00000000c0007dc8                Filesystem::Filesystem()
                0x00000000c0007dc8                Filesystem::Filesystem()
                0x00000000c0007dec                Filesystem::~Filesystem()
                0x00000000c0007dec                Filesystem::~Filesystem()
                0x00000000c0007dfa                Filesystem::~Filesystem()
                0x00000000c0007e1e                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e48                Fs::initVFS()
                0x00000000c0007e72                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000808c                File::File(char const*, Process*, bool)
                0x00000000c000808c                File::File(char const*, Process*, bool)
                0x00000000c000818a                File::File(char const*, Process*)
                0x00000000c000818a                File::File(char const*, Process*)
                0x00000000c00081a8                File::open(FileOpenMode)
                0x00000000c0008206                File::close()
                0x00000000c0008266                File::seek(unsigned long long)
                0x00000000c00082bc                File::truncate(unsigned long long)
                0x00000000c0008312                File::tell(unsigned long long*)
                0x00000000c0008362                File::rewind()
                0x00000000c0008376                File::unlink()
                0x00000000c00083c2                File::rename(char const*)
                0x00000000c0008410                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000846c                File::exists()
                0x00000000c00084aa                File::stat(unsigned long long*, bool*)
                0x00000000c000850b                Fs::setcwd(Process*, char*)
                0x00000000c000866a                Directory::Directory(char const*, Process*)
                0x00000000c000866a                Directory::Directory(char const*, Process*)
                0x00000000c0008732                Directory::open()
                0x00000000c000878e                Directory::close()
                0x00000000c00087ee                Directory::unlink()
                0x00000000c000883a                Directory::rename(char const*)
                0x00000000c0008888                Directory::exists()
                0x00000000c00088c6                Directory::read(dirent*)
                0x00000000c0008912                Directory::create()
                0x00000000c000895e                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0008964       0x86 hal/bus.32
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c000899c                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
                0x00000000c00089c0                Bus::~Bus()
 .text          0x00000000c00089ea       0x9b hal/buzzer.32
                0x00000000c00089ea                KeBeepThread(void*)
                0x00000000c0008a2b                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a85        0x1 
 .text          0x00000000c0008a86      0xeac hal/clock.32
                0x00000000c0008a86                KeLoadTimezoneStrings()
                0x00000000c0008e15                KeGetTimezoneStringFromID(int)
                0x00000000c0008eb2                KeUpdateTimezone(char const*)
                0x00000000c0008fac                KeSetTimezone(char const*)
                0x00000000c0009009                KeSetTimezone(int)
                0x00000000c000903c                KeLoadTimezone()
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009110                Clock::~Clock()
                0x00000000c000913a                Clock::timeInSecondsLocal()
                0x00000000c00091b0                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000923c                KeDatetimeToSeconds(datetime_t)
                0x00000000c000957c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000964a                KeSecondsToDatetime(unsigned long long)
                0x00000000c0009906                Clock::timeInDatetimeLocal()
 .text          0x00000000c0009932      0x47a hal/device.32
                0x00000000c0009932                Device::hibernate()
                0x00000000c0009934                Device::wake()
                0x00000000c0009936                Device::detect()
                0x00000000c0009938                Device::disableLegacy()
                0x00000000c000993a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000993c                DriverlessDevice::close(int, int, void*)
                0x00000000c0009940                DriverlessDevice::detect()
                0x00000000c0009942                DriverlessDevice::open(int, int, void*)
                0x00000000c0009956                Device::~Device()
                0x00000000c0009956                Device::~Device()
                0x00000000c0009964                Device::~Device()
                0x00000000c000998c                Device::findAndLoadDriver()
                0x00000000c000999a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00099c0                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0009a00                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009a2a                Device::getParent()
                0x00000000c0009a36                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009a54                Device::addChild(Device*)
                0x00000000c0009a98                Device::removeAllChildren()
                0x00000000c0009ade                Device::hibernateAll()
                0x00000000c0009b0e                Device::wakeAll()
                0x00000000c0009b3e                Device::detectAll()
                0x00000000c0009b6e                Device::disableLegacyAll()
                0x00000000c0009b70                Device::loadDriversForAll()
                0x00000000c0009b72                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009ba8                Device::setName(char const*)
                0x00000000c0009bb6                Device::Device(char const*)
                0x00000000c0009bb6                Device::Device(char const*)
                0x00000000c0009cb2                Device::getName()
                0x00000000c0009cbc                Device::closeAll()
                0x00000000c0009d08                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009d08                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009d3e                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d82                getDevicesOfType(DeviceType)
 .text          0x00000000c0009dac       0x86 hal/diskctrl.32
                0x00000000c0009dac                HardDiskController::HardDiskController(char const*)
                0x00000000c0009dac                HardDiskController::HardDiskController(char const*)
                0x00000000c0009de4                HardDiskController::~HardDiskController()
                0x00000000c0009de4                HardDiskController::~HardDiskController()
                0x00000000c0009e08                HardDiskController::~HardDiskController()
 .text          0x00000000c0009e32       0xe2 hal/diskphys.32
                0x00000000c0009e32                PhysicalDisk::eject()
                0x00000000c0009e36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e9e                PhysicalDisk::startCache()
                0x00000000c0009ec6                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009ec6                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009eea                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009f14        0x0 hal/fpu.32
 .text          0x00000000c0009f14      0x874 hal/keybrd.32
                0x00000000c0009f14                startGUI(void*)
                0x00000000c0009f79                startGUIVESA(void*)
                0x00000000c0009fde                sendKeyToTerminal(unsigned char)
                0x00000000c000a0b4                sendKeyboardToken(KeyboardToken)
                0x00000000c000a570                clearInternalKeybuffer(VgaText*)
                0x00000000c000a5a5                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6fe                Keyboard::Keyboard(char const*)
                0x00000000c000a6fe                Keyboard::Keyboard(char const*)
                0x00000000c000a73a                Keyboard::~Keyboard()
                0x00000000c000a73a                Keyboard::~Keyboard()
                0x00000000c000a75e                Keyboard::~Keyboard()
 .text          0x00000000c000a788      0x3f8 hal/logidisk.32
                0x00000000c000a788                LogicalDisk::close(int, int, void*)
                0x00000000c000a78c                LogicalDisk::~LogicalDisk()
                0x00000000c000a78c                LogicalDisk::~LogicalDisk()
                0x00000000c000a7b0                LogicalDisk::~LogicalDisk()
                0x00000000c000a7da                LogicalDisk::open(int, int, void*)
                0x00000000c000a7ee                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a826                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a86c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a86c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a92c                LogicalDisk::assignDriveLetter()
                0x00000000c000a9e6                LogicalDisk::mount()
                0x00000000c000aa2e                LogicalDisk::unmount()
                0x00000000c000aa3e                LogicalDisk::eject()
                0x00000000c000aa52                LogicalDisk::unassignDriveLetter()
                0x00000000c000aaa8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ab14                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab80       0x86 hal/mouse.32
                0x00000000c000ab80                Mouse::Mouse(char const*)
                0x00000000c000ab80                Mouse::Mouse(char const*)
                0x00000000c000abb8                Mouse::~Mouse()
                0x00000000c000abb8                Mouse::~Mouse()
                0x00000000c000abdc                Mouse::~Mouse()
 .text          0x00000000c000ac06       0x90 hal/nic.32
                0x00000000c000ac06                NIC::getMAC()
                0x00000000c000ac0c                NIC::write(int, unsigned char*, int*)
                0x00000000c000ac12                NIC::NIC(char const*)
                0x00000000c000ac12                NIC::NIC(char const*)
                0x00000000c000ac48                NIC::~NIC()
                0x00000000c000ac48                NIC::~NIC()
                0x00000000c000ac6c                NIC::~NIC()
 .text          0x00000000c000ac96      0x33b hal/partition.32
                0x00000000c000ac96                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ad3e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000afd1        0x3 
 .text          0x00000000c000afd4       0x86 hal/serial.32
                0x00000000c000afd4                Serial::Serial(char const*)
                0x00000000c000afd4                Serial::Serial(char const*)
                0x00000000c000b00c                Serial::~Serial()
                0x00000000c000b00c                Serial::~Serial()
                0x00000000c000b030                Serial::~Serial()
 *fill*         0x00000000c000b05a        0x2 
 .text          0x00000000c000b05c      0x230 hal/timer.32
                0x00000000c000b05c                Timer::Timer(char const*)
                0x00000000c000b05c                Timer::Timer(char const*)
                0x00000000c000b094                Timer::~Timer()
                0x00000000c000b094                Timer::~Timer()
                0x00000000c000b0b8                Timer::~Timer()
                0x00000000c000b0e2                Timer::read()
                0x00000000c000b0ed                setupTimer(int)
                0x00000000c000b128                timerHandler(unsigned int)
 .text          0x00000000c000b28c      0x5fe hal/vcache.32
                0x00000000c000b28c                VCache::VCache(PhysicalDisk*)
                0x00000000c000b28c                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3fc                VCache::invalidateReadBuffer()
                0x00000000c000b40c                VCache::writeWriteBuffer()
                0x00000000c000b458                VCache::~VCache()
                0x00000000c000b458                VCache::~VCache()
                0x00000000c000b4b0                VCache::~VCache()
                0x00000000c000b4d8                VCache::write(unsigned long long, int, void*)
                0x00000000c000b6a6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b88a      0x70e hal/video.32
                0x00000000c000b88a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b8d6                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b946                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b9c4                Video::clearScreen(unsigned int)
                0x00000000c000b9f8                Video::putpixel(int, int, unsigned int)
                0x00000000c000ba06                Video::readPixelApprox(int, int)
                0x00000000c000ba1a                Video::Video(char const*)
                0x00000000c000ba1a                Video::Video(char const*)
                0x00000000c000ba50                Video::~Video()
                0x00000000c000ba50                Video::~Video()
                0x00000000c000ba74                Video::~Video()
                0x00000000c000ba9e                Video::isMonochrome()
                0x00000000c000baaa                Video::getWidth()
                0x00000000c000bab6                Video::getHeight()
                0x00000000c000bac2                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb7e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000bf28                Video::putTGA(int, int, unsigned char*, int)
 .text          0x00000000c000bf98     0x11a3 hw/acpi.32
                0x00000000c000bf98                ACPI::close(int, int, void*)
                0x00000000c000bfa0                loadACPITables(unsigned char*)
                0x00000000c000c200                findRSDT(unsigned char*)
                0x00000000c000c34c                findDataTable(unsigned char*, char*)
                0x00000000c000c3c0                scanMADT()
                0x00000000c000c870                ACPI::ACPI()
                0x00000000c000c870                ACPI::ACPI()
                0x00000000c000c8c0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c9bc                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca88                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca90                ACPI::detectPCI()
                0x00000000c000cc9c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ccb4                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d13b        0x1 
 .text          0x00000000c000d13c       0xea krnl/assert.32
                0x00000000c000d13c                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d226       0x91 krnl/atexit.32
                0x00000000c000d226                KeInitialiseAtexit()
                0x00000000c000d248                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d27c                KeExecuteAtexit()
 *fill*         0x00000000c000d2b7        0x1 
 .text          0x00000000c000d2b8       0x1e krnl/bootflags.32
                0x00000000c000d2b8                KeGetBootConfigurationFlag(BootConfigurationFlag)
                0x00000000c000d2c8                KeInitialiseBootConfigurationFlags()
 .text          0x00000000c000d2d6       0x8a krnl/bootmsg.32
                0x00000000c000d2d6                KeDisplaySplashScreen()
                0x00000000c000d305                KeSetBootMessage(char const*)
 .text          0x00000000c000d360       0x5f krnl/c++.32
                0x00000000c000d360                __cxa_atexit
                0x00000000c000d363                __cxa_finalize
                0x00000000c000d364                __stack_chk_fail
                0x00000000c000d39a                __cxa_pure_virtual
                0x00000000c000d3ab                operator new[](unsigned long)
                0x00000000c000d3b0                operator delete(void*, unsigned long)
                0x00000000c000d3b5                operator delete[](void*)
                0x00000000c000d3ba                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d3bf        0x1 
 .text          0x00000000c000d3c0       0x44 krnl/cdefs.32
                0x00000000c000d3c0                CUnlockScheduler
                0x00000000c000d3d8                CLockScheduler
                0x00000000c000d3e8                CPrintf
 .text          0x00000000c000d404      0xd56 krnl/cm.32
                0x00000000c000d404                CmOpen(char const*)
                0x00000000c000d522                CmClose(Reghive_Tag*)
                0x00000000c000d538                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d574                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d5eb                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d62a                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d65c                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d698                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d6c0                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d6e1                CmExpand(Reghive_Tag*, int)
                0x00000000c000d75c                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d7e2                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d8d6                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000da12                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000da73                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000daa3                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000dada                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000db04                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000db44                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000dbe8                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000dc16                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000ddb4                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000de01                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000de7b                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000dece                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000df92                zStrtok(char*, char const*)
                0x00000000c000e004                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000e085                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000e128                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c000e15a       0xe3 krnl/computer.32
                0x00000000c000e15a                Computer::close(int, int, void*)
                0x00000000c000e160                Computer::Computer()
                0x00000000c000e160                Computer::Computer()
                0x00000000c000e1a4                Computer::open(int, int, void*)
 .text          0x00000000c000e23d       0x2b krnl/crc32.32
                0x00000000c000e23d                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e268      0x5bf krnl/env.32
                0x00000000c000e268                EnvVarContainer::getEnv(char const*)
                0x00000000c000e2a6                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e368                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e36a                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e58e                EnvVarContainer::__loadSystem()
                0x00000000c000e5a8                EnvVarContainer::__loadUser()
                0x00000000c000e5aa                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e5aa                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e5cc                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e5cc                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e5fc                KeGetEnv(Process*, char const*)
                0x00000000c000e661                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e67b                KeSetEnvUser(char const*, char const*)
                0x00000000c000e69a                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e6ad                KeDeleteEnvSystem(char const*)
                0x00000000c000e6ae                KeDeleteEnvUser(char const*)
                0x00000000c000e6af                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e6b0                KeNewProcessEnv(Process*)
                0x00000000c000e6d2                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e71e                KeLoadSystemEnv()
                0x00000000c000e74c                KeLoadUserEnv()
                0x00000000c000e772                KeFlushEnv()
                0x00000000c000e773                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e793                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e827        0x1 
 .text          0x00000000c000e828      0x1a8 krnl/fault.32
                0x00000000c000e828                KeDisplayProgramFault(char const*)
                0x00000000c000e878                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e8cc                KePageFault(void*, void*)
                0x00000000c000e920                KeOpcodeFault(void*, void*)
                0x00000000c000e974                KeOtherFault(void*, void*)
                0x00000000c000e9a8                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e9b8                KeDoubleFault(void*, void*)
 .text          0x00000000c000e9d0      0x1db krnl/gdt.32
                0x00000000c000e9d0                GDTEntry::setBase(unsigned int)
                0x00000000c000e9ec                GDTEntry::setLimit(unsigned int)
                0x00000000c000ea0a                GDT::GDT()
                0x00000000c000ea0a                GDT::GDT()
                0x00000000c000ea20                GDT::addEntry(GDTEntry)
                0x00000000c000ea42                GDT::getNumberOfEntries()
                0x00000000c000ea4a                GDT::flush()
                0x00000000c000ea6c                GDT::setup()
 .text          0x00000000c000ebab       0x20 krnl/idle.32
                0x00000000c000ebab                idleFunction(void*)
 *fill*         0x00000000c000ebcb        0x1 
 .text          0x00000000c000ebcc      0x46c krnl/idt.32
                0x00000000c000ebcc                IDTEntry::IDTEntry(bool)
                0x00000000c000ebcc                IDTEntry::IDTEntry(bool)
                0x00000000c000ec46                IDTEntry::setOffset(unsigned int)
                0x00000000c000ec5c                IDT::IDT()
                0x00000000c000ec5c                IDT::IDT()
                0x00000000c000ec5e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ec66                IDT::addEntry(IDTEntry, int)
                0x00000000c000ec80                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000ecb8                IDT::flush()
                0x00000000c000ecd2                IDT::setup()
 .text          0x00000000c000f038       0x9a krnl/inlines.32
                0x00000000c000f038                CPU::current()
                0x00000000c000f044                operator new(unsigned long)
                0x00000000c000f049                operator delete(void*)
                0x00000000c000f04e                disableIRQs()
                0x00000000c000f050                enableIRQs()
                0x00000000c000f052                lockScheduler()
                0x00000000c000f05a                unlockScheduler()
                0x00000000c000f06c                lockStuff()
                0x00000000c000f07a                unlockStuff()
                0x00000000c000f0b7                Virt::getAKernelVAS()
                0x00000000c000f0bd                __not_memcpy
 .text          0x00000000c000f0d2      0x2bc krnl/intlformat.32
                0x00000000c000f0d2                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f2c2                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f2e4                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f306                KeSetLocale(klocale_t)
                0x00000000c000f31c                KeInitialiseLocale()
                0x00000000c000f38a                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f38b                KeFormatCurrency(char*, int, double)
                0x00000000c000f38c                KeFormatNumber(char*, long long, long long)
                0x00000000c000f38d                KeFormatNumber(char*, double)
 *fill*         0x00000000c000f38e        0x2 
 .text          0x00000000c000f390      0x42e krnl/intops.32
                0x00000000c000f390                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f518                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f6c4                KeGetDigitsInNumber(long long)
                0x00000000c000f730                KeItoa(unsigned long long, char*)
                0x00000000c000f760                KeItoa(long long, char*)
                0x00000000c000f790                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f7be      0x207 krnl/kheap.32
                0x00000000c000f7be                sbrk
                0x00000000c000f855                sbrk_thunk
                0x00000000c000f88b                mmap
                0x00000000c000f8e9                munmap
                0x00000000c000f8fe                liballoc_lock()
                0x00000000c000f90c                liballoc_unlock()
                0x00000000c000f924                liballoc_alloc(int)
                0x00000000c000f93c                liballoc_free(void*, int)
                0x00000000c000f957                realloc
                0x00000000c000f96b                malloc
                0x00000000c000f97b                free
                0x00000000c000f98b                rfree
                0x00000000c000f99b                calloc
 *fill*         0x00000000c000f9c5        0x3 
 .text          0x00000000c000f9c8      0x1d3 krnl/mailbox.32
                0x00000000c000f9c8                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fa28                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fa88                KeMailboxCreate()
                0x00000000c000fabc                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fb20                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fb84                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fb9b      0x20b krnl/main.32
                0x00000000c000fb9b                KeFirstTask()
                0x00000000c000fca6                KeEntryPoint
 *fill*         0x00000000c000fda6        0x2 
 .text          0x00000000c000fda8       0x1a krnl/mutex.32
                0x00000000c000fda8                Mutex::Mutex()
                0x00000000c000fda8                Mutex::Mutex()
 .text          0x00000000c000fdc2       0x12 krnl/panic.32
                0x00000000c000fdc2                KeIsKernelInPanic()
                0x00000000c000fdc8                KePanic(char const*)
 .text          0x00000000c000fdd4      0x667 krnl/physmgr.32
                0x00000000c000fdd4                Phys::allocateDMA(unsigned long)
                0x00000000c000febc                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000fef7                Phys::setPageState(unsigned long, bool)
                0x00000000c000ff37                Phys::getPageState(unsigned long)
                0x00000000c000ff53                Phys::freePage(unsigned long)
                0x00000000c000ffbc                Phys::allocatePage()
                0x00000000c001009a                Phys::allocateContiguousPages(int)
                0x00000000c0010115                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c001014d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c001043b        0x1 
 .text          0x00000000c001043c      0x275 krnl/pipe.32
                0x00000000c001043c                Pipe::isAtty()
                0x00000000c0010440                Pipe::~Pipe()
                0x00000000c0010440                Pipe::~Pipe()
                0x00000000c0010464                Pipe::~Pipe()
                0x00000000c001048c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c001054c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c001064a                Pipe::Pipe(int)
                0x00000000c001064a                Pipe::Pipe(int)
 .text          0x00000000c00106b1      0x1a3 krnl/powctrl.32
                0x00000000c00106b1                KePowerThread(void*)
                0x00000000c00106e3                KeChangePowerSettings(PowerSettings)
                0x00000000c00106f9                KeUserIOReceived()
                0x00000000c0010704                KeSetupPowerManager()
                0x00000000c001078d                KePrepareShutdown()
                0x00000000c00107ac                KeRegisterShutdownHandler(void (*)())
                0x00000000c00107b6                KeRegisterRestartHandler(void (*)())
                0x00000000c00107c0                KeRegisterSleepHandler(void (*)())
                0x00000000c00107ca                KeShutdown()
                0x00000000c0010800                KeSleep()
                0x00000000c001080c                KeHandlePowerButton()
                0x00000000c001081e                KeHandleSleepButton()
                0x00000000c0010830                KeRestart()
 .text          0x00000000c0010854       0x9d krnl/random.32
                0x00000000c0010854                KeRand()
                0x00000000c0010896                KeSeedRand(unsigned int)
                0x00000000c00108bf                KeInitRand()
 *fill*         0x00000000c00108f1        0x3 
 .text          0x00000000c00108f4      0x26c krnl/resolve.32
                0x00000000c00108f4                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010b60      0x415 krnl/semaphore.32
                0x00000000c0010b60                Semaphore::Semaphore(int)
                0x00000000c0010b60                Semaphore::Semaphore(int)
                0x00000000c0010b90                Semaphore::tryAcquire()
                0x00000000c0010c64                Semaphore::assertLocked(char const*)
                0x00000000c0010cf0                Semaphore::acquire(int)
                0x00000000c0010ea8                Semaphore::acquire()
                0x00000000c0010ec4                Semaphore::release()
 .text          0x00000000c0010f75      0x3a8 krnl/signal.32
                0x00000000c0010f75                KiSigKill(int)
                0x00000000c0010f89                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010f8a                KiDefaultSignalHandlerPause(int)
                0x00000000c0010fb6                KiDefaultSignalHandlerResume(int)
                0x00000000c0010fe2                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010fe7                KeInitSignals()
                0x00000000c0011059                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001108f                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011110                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001123f                KiCheckSignalZ
                0x00000000c0011290                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00112cb                KiFinishSignalZ
 .text          0x00000000c001131d      0xe91 krnl/syscalls.32
                0x00000000c001131d                SysSeekDir(regs*)
                0x00000000c0011322                SysTellDir(regs*)
                0x00000000c0011327                SysVerify(regs*)
                0x00000000c0011331                SysGetArgc(regs*)
                0x00000000c0011345                SysTTYName(regs*)
                0x00000000c001134d                SysFormatDisk(regs*)
                0x00000000c00113c4                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011418                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011471                SysRealpath(regs*)
                0x00000000c00114b5                SysReadDir(regs*)
                0x00000000c0011535                SysIsATTY(regs*)
                0x00000000c001158f                SysSeek(regs*)
                0x00000000c00115ed                SysTell(regs*)
                0x00000000c0011662                SysSize(regs*)
                0x00000000c00116dc                SysSizeFromFilename(regs*)
                0x00000000c0011806                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011930                SysClose(regs*)
                0x00000000c0011990                SysOpenDir(regs*)
                0x00000000c0011a0d                SysMakeDir(regs*)
                0x00000000c0011a7b                SysCloseDir(regs*)
                0x00000000c0011acf                SysWait(regs*)
                0x00000000c0011af0                SysNotImpl(regs*)
                0x00000000c0011b0b                SysPanic(regs*)
                0x00000000c0011b26                SysRmdir(regs*)
                0x00000000c0011b8b                SysUnlink(regs*)
                0x00000000c0011bf0                SysGetArgv(regs*)
                0x00000000c0011c3d                SysUSleep(regs*)
                0x00000000c0011c67                SysSpawn(regs*)
                0x00000000c0011cda                SysGetEnv(regs*)
                0x00000000c0011d8b                SysSetFatAttrib(regs*)
                0x00000000c0011dfe                SysShutdown(regs*)
                0x00000000c0011e5b                SysPipe(regs*)
                0x00000000c0011ea0                SysGetUnixTime(regs*)
                0x00000000c0011f2d                string_ends_with(char const*, char const*)
                0x00000000c0011f75                SysOpen(regs*)
                0x00000000c001216c                KeSystemCall(regs*, void*)
 .text          0x00000000c00121ae      0xb0b krnl/terminal.32
                0x00000000c00121ae                VgaText::isAtty()
                0x00000000c00121b2                VgaText::~VgaText()
                0x00000000c00121b2                VgaText::~VgaText()
                0x00000000c00121d6                VgaText::~VgaText()
                0x00000000c0012200                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0012220                setTerminalScrollLock(bool)
                0x00000000c0012221                doTerminalCycle()
                0x00000000c0012222                addToTerminalCycle(VgaText*)
                0x00000000c0012223                scrollTerminalScrollLock(int)
                0x00000000c0012224                VgaText::updateTitle()
                0x00000000c0012226                VgaText::load()
                0x00000000c0012228                VgaText::updateCursor()
                0x00000000c001223e                VgaText::doANSI_SGR(int)
                0x00000000c00122b2                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00122c2                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00122d2                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00122f2                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00122fe                VgaText::setTitleColour(VgaColour)
                0x00000000c001230a                VgaText::setTitle(char*)
                0x00000000c001230c                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c001231e                VgaText::scrollScreen()
                0x00000000c00123b0                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00123c0                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c001246c                VgaText::getCursorX()
                0x00000000c0012474                VgaText::getCursorY()
                0x00000000c001247c                VgaText::setCursor(int, int)
                0x00000000c0012493                setActiveTerminal(VgaText*)
                0x00000000c00124de                VgaText::clearScreen()
                0x00000000c001252c                VgaText::setCursorX(int)
                0x00000000c0012544                VgaText::setCursorY(int)
                0x00000000c001255c                VgaText::incrementCursor(bool)
                0x00000000c00125b0                VgaText::decrementCursor(bool)
                0x00000000c00125d2                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00126a2                VgaText::putchar(char)
                0x00000000c001279a                VgaText::putx(unsigned int)
                0x00000000c00127e0                VgaText::puts(char const*)
                0x00000000c0012806                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0012852                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00129cc                VgaText::VgaText(char const*)
                0x00000000c00129cc                VgaText::VgaText(char const*)
                0x00000000c0012b2c                VgaText::receiveKey(unsigned char)
                0x00000000c0012cb8                VgaText::doUpdate()
 *fill*         0x00000000c0012cb9        0x3 
 .text          0x00000000c0012cbc      0x224 krnl/tss.32
                0x00000000c0012cbc                TSS::TSS()
                0x00000000c0012cbc                TSS::TSS()
                0x00000000c0012ccc                TSS::setESP(unsigned long)
                0x00000000c0012ce0                TSS::flush()
                0x00000000c0012d00                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012ee0      0x4ce krnl/unixfile.32
                0x00000000c0012ee0                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012f36                ReservedFilename::isAtty()
                0x00000000c0012f52                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012fb0                UnixFile::getFileDescriptor()
                0x00000000c0012fb8                UnixFile::UnixFile(int)
                0x00000000c0012fb8                UnixFile::UnixFile(int)
                0x00000000c001316c                ReservedFilename::ReservedFilename(int)
                0x00000000c001316c                ReservedFilename::ReservedFilename(int)
                0x00000000c001319e                UnixFile::~UnixFile()
                0x00000000c001319e                UnixFile::~UnixFile()
                0x00000000c001323a                UnixFile::~UnixFile()
                0x00000000c0013262                ReservedFilename::~ReservedFilename()
                0x00000000c0013262                ReservedFilename::~ReservedFilename()
                0x00000000c0013286                ReservedFilename::~ReservedFilename()
                0x00000000c00132ad                KeGetFileFromDescriptor(int)
 .text          0x00000000c00133ae     0x132c krnl/virtmgr.32
                0x00000000c00133ae                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00133e8                Virt::getPageState(unsigned long)
                0x00000000c001340b                Virt::allocateKernelVirtualPages(int)
                0x00000000c0013530                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0013553                Virt::swapIDToSector(unsigned long)
                0x00000000c0013569                Virt::allocateSwapfilePage()
                0x00000000c00135e9                Virt::virtualMemorySetup()
                0x00000000c001363a                Virt::setupPageSwapping(int)
                0x00000000c00136ac                VAS::setCPUSpecific(unsigned long)
                0x00000000c00136ae                VAS::VAS(VAS*)
                0x00000000c00136ae                VAS::VAS(VAS*)
                0x00000000c00136c6                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00136f4                VAS::getPageTableEntry(unsigned long)
                0x00000000c0013713                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0013850                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0013874                VAS::virtualToPhysical(unsigned long)
                0x00000000c001388e                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c00138d0                VAS::VAS()
                0x00000000c00138d0                VAS::VAS()
                0x00000000c001393a                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c001395a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0013986                VAS::~VAS()
                0x00000000c0013986                VAS::~VAS()
                0x00000000c0013aee                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013bf2                VAS::allocatePages(int, int)
                0x00000000c0013cd8                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013d30                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013e26                VAS::VAS(bool)
                0x00000000c0013e26                VAS::VAS(bool)
                0x00000000c001400e                VAS::evict(unsigned long)
                0x00000000c0014112                VAS::canLockPage(unsigned long)
                0x00000000c001412c                VAS::unlockPage(unsigned long)
                0x00000000c0014160                VAS::canLockPages(unsigned long, int)
                0x00000000c001419c                VAS::unlockPages(unsigned long, int)
                0x00000000c00141d8                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0014358                VAS::lockPage(unsigned long)
                0x00000000c00143ca                VAS::lockPages(unsigned long, int)
                0x00000000c0014406                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c001447a                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00144a6                VAS::scanForEviction()
                0x00000000c00145df                mapVASFirstTime
 .text          0x00000000c00146da       0x2f sys/alarm.32
                0x00000000c00146da                SysAlarm(regs*)
 .text          0x00000000c0014709       0x36 sys/eject.32
                0x00000000c0014709                SysEject(regs*)
 .text          0x00000000c001473f       0x18 sys/exit.32
                0x00000000c001473f                SysExit(regs*)
 .text          0x00000000c0014757       0x1f sys/getcwd.32
                0x00000000c0014757                SysGetCwd(regs*)
 .text          0x00000000c0014776       0x26 sys/getpid.32
                0x00000000c0014776                SysGetPID(regs*)
 .text          0x00000000c001479c       0x21 sys/getramdata.32
                0x00000000c001479c                SysGetRAMData(regs*)
 .text          0x00000000c00147bd       0xbe sys/getvgaptr.32
                0x00000000c00147bd                SysGetVGAPtr(regs*)
 *fill*         0x00000000c001487b        0x1 
 .text          0x00000000c001487c       0xb9 sys/kill.32
                0x00000000c001487c                SysKill(regs*)
 .text          0x00000000c0014935       0xa8 sys/loaddll.32
                0x00000000c0014935                SysLoadDLL(regs*)
 .text          0x00000000c00149dd       0x12 sys/pause.32
                0x00000000c00149dd                SysPause(regs*)
 .text          0x00000000c00149ef       0x49 sys/pthread.32
                0x00000000c00149ef                SysPthreadCreate(regs*)
                0x00000000c0014a07                SysPthreadGetTID(regs*)
                0x00000000c0014a11                SysInternalPthreadGetContext(regs*)
                0x00000000c0014a16                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c0014a1b                SysPthreadJoin(regs*)
                0x00000000c0014a20                SysPthreadExit(regs*)
 .text          0x00000000c0014a38       0x68 sys/read.32
                0x00000000c0014a38                SysRead(regs*)
 .text          0x00000000c0014aa0       0x29 sys/registersignal.32
                0x00000000c0014aa0                SysRegisterSignal(regs*)
 .text          0x00000000c0014ac9      0x1cc sys/registry.32
                0x00000000c0014ac9                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014b0d                SysRegistryReadExtent(regs*)
                0x00000000c0014b55                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014b6c                SysRegistryEnterDirectory(regs*)
                0x00000000c0014b83                SysRegistryGetNext(regs*)
                0x00000000c0014b9a                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014bd4                SysRegistryOpen(regs*)
                0x00000000c0014be8                SysRegistryClose(regs*)
                0x00000000c0014bff                SysRegistryEasyReadString(regs*)
                0x00000000c0014c4b                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014c95       0x55 sys/sbrk.32
                0x00000000c0014c95                SysSbrk(regs*)
 .text          0x00000000c0014cea       0x1c sys/setcwd.32
                0x00000000c0014cea                SysSetCwd(regs*)
 .text          0x00000000c0014d06       0xd7 sys/settime.32
                0x00000000c0014d06                SysSetTime(regs*)
 .text          0x00000000c0014ddd       0x73 sys/symlink.32
                0x00000000c0014ddd                SysSymlink(regs*)
 .text          0x00000000c0014e50       0x3e sys/timezone.32
                0x00000000c0014e50                SysTimezone(regs*)
 .text          0x00000000c0014e8e       0xfc sys/truncate.32
                0x00000000c0014e8e                SysTruncate(regs*)
 .text          0x00000000c0014f8a       0x68 sys/write.32
                0x00000000c0014f8a                SysWrite(regs*)
 .text          0x00000000c0014ff2       0x9d sys/wsbe.32
                0x00000000c0014ff2                SysWsbe(regs*)
 .text          0x00000000c001508f       0x28 sys/yield.32
                0x00000000c001508f                SysYield(regs*)
 *fill*         0x00000000c00150b7        0x1 
 .text          0x00000000c00150b8      0x281 thr/alarm.32
                0x00000000c00150b8                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c0015248                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c0015339     0x12a0 thr/elf.32
                0x00000000c0015339                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00155cb                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0015863                Thr::runtimeReferenceHelper()
                0x00000000c0015876                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00158c5                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015b83                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00162cb                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00162fd                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0016334                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001634e                Thr::loadDLL(char const*, bool)
                0x00000000c00165a0                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00165d9       0x5a thr/exec.32
                0x00000000c00165d9                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0016633        0x1 
 .text          0x00000000c0016634     0x128d thr/prcssthr.32
                0x00000000c0016634                userModeEntryPoint(void*)
                0x00000000c0016660                changeTSS
                0x00000000c0016690                switchToThread(ThreadControlBlock*)
                0x00000000c0016750                Process::addArgs(char**)
                0x00000000c00167bc                Process::Process(char const*, Process*, char**)
                0x00000000c00167bc                Process::Process(char const*, Process*, char**)
                0x00000000c00169f4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00169f4                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016be0                taskStartupFunction
                0x00000000c0016bec                KeDisablePreemption()
                0x00000000c0016c14                KeRestorePreemption()
                0x00000000c0016c34                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016d8c                Process::createUserThread()
                0x00000000c0016dac                setupMultitasking(void (*)())
                0x00000000c0016ef4                schedule()
                0x00000000c0016f88                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016fb4                blockTask(TaskState)
                0x00000000c0016ff0                waitTask(int, int*, int)
                0x00000000c0017034                milliTenthSleepUntil(unsigned long long)
                0x00000000c00170e8                milliTenthSleep(unsigned long long)
                0x00000000c0017100                sleep(unsigned long long)
                0x00000000c0017120                sleep(unsigned int)
                0x00000000c0017138                milliTenthSleep(unsigned int)
                0x00000000c0017158                taskReturned
                0x00000000c00171a0                KeProcessFromPID(int)
                0x00000000c0017250                unblockTask(ThreadControlBlock*)
                0x00000000c0017304                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00175dc                cleanerTaskFunction(void*)
                0x00000000c00176f4                KeTerminateCurrentThread(int)
 .text          0x00000000c00178c1      0xe5f vm86/vm8086.32
                0x00000000c00178c1                Vm::inbv(unsigned short)
                0x00000000c00178d4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001790a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001791a                Vm::getSegment(unsigned int)
                0x00000000c0017922                Vm::getOffset(unsigned int)
                0x00000000c0017927                Vm::mainloop2()
                0x00000000c0017968                Vm::mainVm8086Loop(void*)
                0x00000000c001797c                Vm::mainloop3(unsigned long)
                0x00000000c00179ae                Vm::initialise8086()
                0x00000000c00179f2                Vm::resetConventionalMemory8086()
                0x00000000c00179f3                Vm::finish8086()
                0x00000000c0017a64                Vm::getOutput8086(unsigned char*)
                0x00000000c0017a89                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017beb                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017e33                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017ecd                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017ede                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017ef0                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017f01                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017f16                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017f2c                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017f41                Vm::faultHandler(regs*)
 .text          0x00000000c0018720      0x45f arch/i386/apic.32
                0x00000000c0018720                IOAPIC::close(int, int, void*)
                0x00000000c0018726                apicGetBase()
                0x00000000c0018760                IOAPIC::IOAPIC()
                0x00000000c0018760                IOAPIC::IOAPIC()
                0x00000000c0018788                apicOpen()
                0x00000000c0018914                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0018946                IOAPIC::read(int)
                0x00000000c001896e                IOAPIC::open(int, int, void*)
                0x00000000c0018a54                IOAPIC::write(int, int)
                0x00000000c0018a80                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0018b7f        0x1 
 .text          0x00000000c0018b80     0x1f3f arch/i386/hal.32
                0x00000000c0018b80                noCopro(unsigned long)
                0x00000000c0018b81                HalRestart()
                0x00000000c0018b8c                HalShutdown()
                0x00000000c0018b8d                HalSleep()
                0x00000000c0018b8e                CPU::close(int, int, void*)
                0x00000000c0018b91                x86ReadCMOS(unsigned char)
                0x00000000c0018be5                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018c45                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018c64                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018c81                AMD_K6_writeback(int, int, int)
                0x00000000c0018d41                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018ddf                cpuidCheckEDX(unsigned int)
                0x00000000c0018e0c                cpuidCheckECX(unsigned int)
                0x00000000c0018e3a                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018e68                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018e96                HalDetectFeatures()
                0x00000000c0019c81                HalEnableNMI()
                0x00000000c0019c94                HalDisableNMI()
                0x00000000c0019ca7                HalGetNMIState()
                0x00000000c0019cad                x86rdmsr(unsigned int)
                0x00000000c0019ceb                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0019d30                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0019d46                HalFindRSDP()
                0x00000000c0019e23                HalHandlePageFault(void*, void*)
                0x00000000c0019e52                HalHandleOpcodeFault(void*, void*)
                0x00000000c0019e94                HalDisplayDebugInfo(void*)
                0x00000000c001a222                HalReceivedNMI()
                0x00000000c001a2bd                HalSystemIdle()
                0x00000000c001a31c                i386SaveCoprocessor(void*)
                0x00000000c001a330                i386LoadCoprocessor(void*)
                0x00000000c001a344                x87EmulHandler(regs*, void*)
                0x00000000c001a3e1                HalInitialiseCoprocessor()
                0x00000000c001a465                HalPanic(char const*)
                0x00000000c001a579                HalQueryPerformanceCounter()
                0x00000000c001a589                HalInitialise()
                0x00000000c001a771                HalMakeBeep(int)
                0x00000000c001a7ab                HalGetRand()
                0x00000000c001a7ae                HalEndOfInterrupt(int)
                0x00000000c001a7da                CPU::CPU()
                0x00000000c001a7da                CPU::CPU()
                0x00000000c001a85e                CPU::setupSMEP()
                0x00000000c001a86a                CPU::setupUMIP()
                0x00000000c001a874                CPU::setupTSC()
                0x00000000c001a87e                CPU::setupLargePages()
                0x00000000c001a888                CPU::setupPAT()
                0x00000000c001a8ba                CPU::setupMTRR()
                0x00000000c001a8bc                CPU::setupGlobalPages()
                0x00000000c001a8c6                CPU::allowUsermodeDataAccess()
                0x00000000c001a8d4                CPU::prohibitUsermodeDataAccess()
                0x00000000c001a8e2                CPU::setupSMAP()
                0x00000000c001a8f0                CPU::setupFeatures()
                0x00000000c001a9bc                CPU::open(int, int, void*)
 .text          0x00000000c001aabf      0x341 arch/i386/intctrl.32
                0x00000000c001aabf                convertLegacyIRQNumber(int)
                0x00000000c001aafb                KeSetupInterrupts()
                0x00000000c001ab58                int_handler
                0x00000000c001abdb                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001ac25                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001ad53                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001ad87                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 .text          0x00000000c001ae00      0x2dc arch/i386/pic.32
                0x00000000c001ae00                picIoWait()
                0x00000000c001ae08                picDisable()
                0x00000000c001ae3c                picGetIRQReg(int)
                0x00000000c001aeb8                picOpen()
                0x00000000c001b03c                picEOI(int)
 .text          0x00000000c001b0dc      0x5f3 arch/i386/rtc.32
                0x00000000c001b0dc                RTC::open(int, int, void*)
                0x00000000c001b0e0                RTC::close(int, int, void*)
                0x00000000c001b0e4                RTC::timeInSecondsUTC()
                0x00000000c001b0f6                RTC::timeInDatetimeUTC()
                0x00000000c001b11c                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b15a                RTC::~RTC()
                0x00000000c001b15a                RTC::~RTC()
                0x00000000c001b17e                RTC::~RTC()
                0x00000000c001b1a8                RTC::get_update_in_progress_flag()
                0x00000000c001b1bc                RTC::completeRTCRefresh()
                0x00000000c001b470                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b5e6                rtcIRQHandler(regs*, void*)
                0x00000000c001b626                RTC::RTC()
                0x00000000c001b626                RTC::RTC()
 *fill*         0x00000000c001b6cf        0x1 
 .text          0x00000000c001b6d0      0x1f4 arch/i386/vga.32
                0x00000000c001b6d0                HalConsoleScroll(int, int)
                0x00000000c001b7d8                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b83c                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b8c4     0x14cf fs/fat/vfslink.32
                0x00000000c001b8c4                FAT::getName()
                0x00000000c001b8cc                FAT::tell(void*, unsigned long long*)
                0x00000000c001b908                FAT::stat(void*, unsigned long long*)
                0x00000000c001b944                FAT::~FAT()
                0x00000000c001b944                FAT::~FAT()
                0x00000000c001b968                FAT::~FAT()
                0x00000000c001b990                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001ba34                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001baf8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001bcdc                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001bef8                FAT::allocateSwapfile(char const*, int)
                0x00000000c001c0b8                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c228                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c288                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c2e8                FAT::close(void*)
                0x00000000c001c33c                FAT::closeDir(void*)
                0x00000000c001c390                FAT::truncate(void*, unsigned long long)
                0x00000000c001c3fc                FAT::seek(void*, unsigned long long)
                0x00000000c001c454                fatWrapperReadDisk
                0x00000000c001c494                fatWrapperWriteDisk
                0x00000000c001c4d4                fatWrapperIoctl
                0x00000000c001c5f0                FAT::FAT()
                0x00000000c001c5f0                FAT::FAT()
                0x00000000c001c648                FAT::fixFilepath(char*)
                0x00000000c001c688                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c7fc                FAT::openDir(char const*, void**)
                0x00000000c001c8ac                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c9a4                FAT::unlink(char const*)
                0x00000000c001ca24                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cbd8                FAT::rename(char const*, char const*)
                0x00000000c001cca4                FAT::mkdir(char const*)
                0x00000000c001cd24                FAT::exists(char const*)
 *fill*         0x00000000c001cd93        0x1 
 .text          0x00000000c001cd94       0x94 fs/iso9660/helper.32
                0x00000000c001cd94                isoReadDiscSectorHelper
                0x00000000c001cdf0                iso_kprintf
                0x00000000c001ce0c                iso_kprintfd
 .text          0x00000000c001ce28      0x71c fs/iso9660/vfslink.32
                0x00000000c001ce28                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001ce2e                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001ce34                ISO9660::getName()
                0x00000000c001ce3a                ISO9660::closeDir(void*)
                0x00000000c001ce44                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ce4a                ISO9660::unlink(char const*)
                0x00000000c001ce50                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001ce56                ISO9660::rename(char const*, char const*)
                0x00000000c001ce5c                ISO9660::mkdir(char const*)
                0x00000000c001ce62                ISO9660::~ISO9660()
                0x00000000c001ce62                ISO9660::~ISO9660()
                0x00000000c001ce86                ISO9660::~ISO9660()
                0x00000000c001ceae                ISO9660::exists(char const*)
                0x00000000c001cec2                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001cfa8                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001cff0                ISO9660::seek(void*, unsigned long long)
                0x00000000c001d032                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001d070                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001d0c2                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d204                ISO9660::close(void*)
                0x00000000c001d234                ISO9660::openDir(char const*, void**)
                0x00000000c001d30e                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d42b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d4aa                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d51c                ISO9660::ISO9660()
                0x00000000c001d51c                ISO9660::ISO9660()
 .text          0x00000000c001d544      0x26c hal/sound/sndcard.32
                0x00000000c001d544                SoundCard::beginPlayback()
                0x00000000c001d552                SoundCard::stopPlayback()
                0x00000000c001d560                SoundCard::SoundCard(char const*)
                0x00000000c001d560                SoundCard::SoundCard(char const*)
                0x00000000c001d5fe                SoundCard::~SoundCard()
                0x00000000c001d5fe                SoundCard::~SoundCard()
                0x00000000c001d622                SoundCard::~SoundCard()
                0x00000000c001d64c                SoundCard::configureRates(int, int, int)
                0x00000000c001d67c                SoundCard::getSamples16(int, short*)
                0x00000000c001d6d8                SoundCard::getSamples32(int, int*)
                0x00000000c001d75e                SoundCard::addChannel(SoundPort*)
                0x00000000c001d79c                SoundCard::removeChannel(int)
 .text          0x00000000c001d7b0      0x426 hal/sound/sndport.32
                0x00000000c001d7b0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d7b0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d83c                SoundPort::~SoundPort()
                0x00000000c001d83c                SoundPort::~SoundPort()
                0x00000000c001d870                SoundPort::unpause()
                0x00000000c001d87c                SoundPort::pause()
                0x00000000c001d888                SoundPort::getBufferUsed()
                0x00000000c001d890                SoundPort::getBufferSize()
                0x00000000c001d898                SoundPort::buffer8(signed char*, int)
                0x00000000c001d92c                SoundPort::buffer16(short*, int)
                0x00000000c001d9c0                SoundPort::buffer32(int*, int)
                0x00000000c001da4c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001db18                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001dbd6      0xc23 hw/bus/pci.32
                0x00000000c001dbd6                PCI::open(int, int, void*)
                0x00000000c001dbf4                PCI::close(int, int, void*)
                0x00000000c001dbf8                PCI::PCI()
                0x00000000c001dbf8                PCI::PCI()
                0x00000000c001dc90                PCI::readBAR8(unsigned int, int)
                0x00000000c001dcac                PCI::readBAR16(unsigned int, int)
                0x00000000c001dcca                PCI::readBAR32(unsigned int, int)
                0x00000000c001dce6                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001dd06                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001dd28                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001dd48                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ddbe                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001de68                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001de8c                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001deb4                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001defe                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001df26                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001df4a                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001df6e                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001df96                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dffa                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001e0e2                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e3a8                PCI::checkBus(unsigned char)
                0x00000000c001e3cc                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e5b2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e72e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e7a0                PCI::detect()
 *fill*         0x00000000c001e7f9        0x1 
 .text          0x00000000c001e7fa      0xe58 hw/diskctrl/ide.32
                0x00000000c001e7fa                IDE::close(int, int, void*)
                0x00000000c001e7fe                IDE::IDE()
                0x00000000c001e7fe                IDE::IDE()
                0x00000000c001e832                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e844                selectDrive(unsigned char, unsigned char)
                0x00000000c001e846                IDE::getBase(unsigned char)
                0x00000000c001e858                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e918                IDE::read(unsigned char, unsigned char)
                0x00000000c001e9c6                IDE::waitInterrupt(unsigned char)
                0x00000000c001ea29                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ea45                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ea62                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001eaac                IDE::open(int, int, void*)
                0x00000000c001f006                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001f0d6                IDE::detect()
                0x00000000c001f544                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f5fe                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f652      0x33d hw/diskctrl/satabus.32
                0x00000000c001f652                SATABus::close(int, int, void*)
                0x00000000c001f656                SATABus::detect()
                0x00000000c001f658                SATABus::SATABus()
                0x00000000c001f658                SATABus::SATABus()
                0x00000000c001f6de                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f710                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f758                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f778                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f7a2                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f8b2                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001f95c                SATABus::open(int, int, void*)
 *fill*         0x00000000c001f98f        0x1 
 .text          0x00000000c001f990      0x7a9 hw/diskphys/ata.32
                0x00000000c001f990                ATA::close(int, int, void*)
                0x00000000c001f9b4                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001f9b6                ATA::ATA()
                0x00000000c001f9b6                ATA::ATA()
                0x00000000c001f9e4                ATA::flush(bool)
                0x00000000c001fa32                ATA::readyForCommand()
                0x00000000c001fa7e                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001fe6e                ATA::read(unsigned long long, int, void*)
                0x00000000c001feba                ATA::write(unsigned long long, int, void*)
                0x00000000c001ff06                ATA::detectCHS()
                0x00000000c001ff30                ATA::open(int, int, void*)
                0x00000000c002011b                combineCharAndColour(char, unsigned char)
                0x00000000c002012c                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c0020139        0x1 
 .text          0x00000000c002013a      0x618 hw/diskphys/atapi.32
                0x00000000c002013a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c0020140                ATAPI::close(int, int, void*)
                0x00000000c0020164                ATAPI::ATAPI()
                0x00000000c0020164                ATAPI::ATAPI()
                0x00000000c0020192                ATAPI::readyForCommand()
                0x00000000c00201e4                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c00204ac                ATAPI::diskRemoved()
                0x00000000c00204e6                ATAPI::eject()
                0x00000000c002052e                ATAPI::diskInserted()
                0x00000000c002053a                ATAPI::detectMedia()
                0x00000000c00205f8                ATAPI::open(int, int, void*)
                0x00000000c00206d8                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020752      0x44c hw/diskphys/sata.32
                0x00000000c0020752                SATA::close(int, int, void*)
                0x00000000c0020776                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0020778                SATA::open(int, int, void*)
                0x00000000c0020830                SATA::SATA()
                0x00000000c0020830                SATA::SATA()
                0x00000000c002085e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020ae6                SATA::read(unsigned long long, int, void*)
                0x00000000c0020b32                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020b9e      0x5d4 hw/diskphys/satapi.32
                0x00000000c0020b9e                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020ba4                SATAPI::close(int, int, void*)
                0x00000000c0020bc8                SATAPI::SATAPI()
                0x00000000c0020bc8                SATAPI::SATAPI()
                0x00000000c0020bf6                SATAPI::diskRemoved()
                0x00000000c0020bf8                SATAPI::diskInserted()
                0x00000000c0020c14                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020ef6                SATAPI::eject()
                0x00000000c0020f32                SATAPI::detectMedia()
                0x00000000c0020f88                SATAPI::open(int, int, void*)
                0x00000000c0021088                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0021172        0x2 
 .text          0x00000000c0021174       0xf0 hw/timer/apictimer.32
                0x00000000c0021174                APICTimer::close(int, int, void*)
                0x00000000c002117c                apicTimerHandler(regs*, void*)
                0x00000000c00211a4                APICTimer::open(int, int, void*)
                0x00000000c0021214                APICTimer::write(int)
                0x00000000c002123c                APICTimer::APICTimer()
                0x00000000c002123c                APICTimer::APICTimer()
 .text          0x00000000c0021264      0x1ad hw/timer/pit.32
                0x00000000c0021264                PIT::write(int)
                0x00000000c00212e8                pitHandler(regs*, void*)
                0x00000000c0021310                PIT::open(int, int, void*)
                0x00000000c0021360                PIT::close(int, int, void*)
                0x00000000c0021390                PIT::PIT()
                0x00000000c0021390                PIT::PIT()
 *fill*         0x00000000c0021411        0xf 
 .text          0x00000000c0021420       0x6f arch/i386/avx.32
                0x00000000c0021420                avxDetect
                0x00000000c002144a                avxSave
                0x00000000c002145b                avxLoad
                0x00000000c002146c                avxInit
                0x00000000c002148e                avxClose
 *fill*         0x00000000c002148f        0x1 
 .text          0x00000000c0021490      0x2b4 arch/i386/interrupt.32
                0x00000000c0021490                isr0
                0x00000000c00214a0                isr1
                0x00000000c00214aa                isr2
                0x00000000c00214b4                isr3
                0x00000000c00214be                isr4
                0x00000000c00214c8                isr5
                0x00000000c00214d2                isr6
                0x00000000c00214dc                isr7
                0x00000000c00214e6                isr8
                0x00000000c00214ee                isr9
                0x00000000c00214f8                isr10
                0x00000000c0021500                isr11
                0x00000000c0021508                isr12
                0x00000000c0021510                isr13
                0x00000000c002152a                isr14
                0x00000000c0021532                isr15
                0x00000000c002153c                isr16
                0x00000000c0021546                isr17
                0x00000000c0021550                isr18
                0x00000000c002155a                irq3
                0x00000000c0021564                irq4
                0x00000000c002156e                irq5
                0x00000000c0021578                irq6
                0x00000000c0021582                irq7
                0x00000000c002158c                irq8
                0x00000000c0021596                irq9
                0x00000000c00215a0                irq10
                0x00000000c00215aa                irq11
                0x00000000c00215b4                irq12
                0x00000000c00215be                irq13
                0x00000000c00215c8                irq14
                0x00000000c00215d2                irq15
                0x00000000c00215dc                irq1
                0x00000000c00215e3                irq2
                0x00000000c00215ea                isr96
                0x00000000c00215f1                irq0
                0x00000000c00215f6                int_common_stub
                0x00000000c00215f6                syscall_common_stub
                0x00000000c00216f4                irq16
                0x00000000c00216fe                irq17
                0x00000000c0021708                irq18
                0x00000000c0021712                irq19
                0x00000000c002171c                irq20
                0x00000000c0021726                irq21
                0x00000000c0021730                irq22
                0x00000000c002173a                irq23
 *fill*         0x00000000c0021744        0xc 
 .text          0x00000000c0021750       0x10 arch/i386/rdrand.32
                0x00000000c0021750                i386GetRDRAND
 .text          0x00000000c0021760       0x39 arch/i386/sse.32
                0x00000000c0021760                sseDetect
                0x00000000c0021778                sseSave
                0x00000000c0021780                sseLoad
                0x00000000c0021788                sseInit
                0x00000000c0021798                sseClose
 *fill*         0x00000000c0021799        0x7 
 .text          0x00000000c00217a0       0x4f arch/i386/x87.32
                0x00000000c00217a6                x87Detect
                0x00000000c00217c7                x87Save
                0x00000000c00217ce                x87Load
                0x00000000c00217d5                x87Init
                0x00000000c00217ee                x87Close
 *fill*         0x00000000c00217ef        0x1 
 .text          0x00000000c00217f0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021815        0x0 crtn.32
 *fill*         0x00000000c0021815        0x3 
 .text          0x00000000c0021818      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021818                __divdi3
 *fill*         0x00000000c0021963        0x1 
 .text          0x00000000c0021964      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021964                __moddi3
 *fill*         0x00000000c0021ae2        0x2 
 .text          0x00000000c0021ae4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021ae4                __udivdi3
 *fill*         0x00000000c0021be3        0x1 
 .text          0x00000000c0021be4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021be4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021d00        0x0
 .iplt          0x00000000c0021d00        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021cfe        0xf
 .init          0x00000000c0021cfe        0x3 crti.32
                0x00000000c0021cfe                _init
 .init          0x00000000c0021d01        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021d06        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021d0b        0x2 crtn.32

.fini           0x00000000c0021d0d        0xa
 .fini          0x00000000c0021d0d        0x3 crti.32
                0x00000000c0021d0d                _fini
 .fini          0x00000000c0021d10        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021d15        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021d18       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021d18       0x1a hal/device.32
                0x00000000c0021d18                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021d18                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021d32       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021d32       0x2a hal/device.32
                0x00000000c0021d32                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021d5c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021d5c       0xdc hal/device.32
                0x00000000c0021d5c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021e38       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021e38       0x42 hal/device.32
                0x00000000c0021e38                LinkedList<Device>::LinkedList()
                0x00000000c0021e38                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021e7c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021e7c       0x1c hal/timer.32
                0x00000000c0021e7c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021e98        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021e98        0x7 hal/timer.32
                0x00000000c0021e98                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021ea0       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021ea0       0xbc hal/timer.32
                0x00000000c0021ea0                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021f5c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021f5c       0xda hal/timer.32
                0x00000000c0021f5c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0022038       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0022038       0x23 hw/acpi.32
                0x00000000c0022038                ACPI::~ACPI()
                0x00000000c0022038                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002205c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002205c       0x2a hw/acpi.32
                0x00000000c002205c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022088        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022088        0x2 hw/acpi.32
                0x00000000c0022088                LinkedList<Device>::~LinkedList()
                0x00000000c0022088                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002208c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002208c       0x1c hw/acpi.32
                0x00000000c002208c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00220a8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00220a8        0x7 hw/acpi.32
                0x00000000c00220a8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00220b0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00220b0       0xb8 hw/acpi.32
                0x00000000c00220b0                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0022168       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0022168       0x23 krnl/computer.32
                0x00000000c0022168                Computer::~Computer()
                0x00000000c0022168                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002218c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002218c       0x2a krnl/computer.32
                0x00000000c002218c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c00221b6       0x24
 .text._Z10idleCommonv
                0x00000000c00221b6       0x24 krnl/idle.32
                0x00000000c00221b6                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00221da        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00221da        0x2 krnl/unixfile.32
                0x00000000c00221da                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00221da                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00221dc       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00221dc       0x42 krnl/unixfile.32
                0x00000000c00221dc                LinkedList<UnixFile>::LinkedList()
                0x00000000c00221dc                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002221e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002221e       0xd3 krnl/unixfile.32
                0x00000000c002221e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00222f2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00222f2        0x7 krnl/unixfile.32
                0x00000000c00222f2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00222fa       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00222fa       0xa1 krnl/unixfile.32
                0x00000000c00222fa                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002239c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002239c        0x8 krnl/unixfile.32
                0x00000000c002239c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00223a4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00223a4        0x8 sys/kill.32
                0x00000000c00223a4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00223ac        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00223ac        0x2 thr/prcssthr.32
                0x00000000c00223ac                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00223ac                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00223b0       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00223b0       0x49 thr/prcssthr.32
                0x00000000c00223b0                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00223b0                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00223fc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00223fc       0x42 thr/prcssthr.32
                0x00000000c00223fc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00223fc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN6IOAPICD2Ev
                0x00000000c002243e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002243e       0x23 arch/i386/apic.32
                0x00000000c002243e                IOAPIC::~IOAPIC()
                0x00000000c002243e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022462       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022462       0x2a arch/i386/apic.32
                0x00000000c0022462                IOAPIC::~IOAPIC()

.text._ZN3CPUD2Ev
                0x00000000c002248c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002248c       0x23 arch/i386/hal.32
                0x00000000c002248c                CPU::~CPU()
                0x00000000c002248c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00224b0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00224b0       0x2a arch/i386/hal.32
                0x00000000c00224b0                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c00224da       0x23
 .text._ZN3PCID2Ev
                0x00000000c00224da       0x23 hw/bus/pci.32
                0x00000000c00224da                PCI::~PCI()
                0x00000000c00224da                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00224fe       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00224fe       0x2a hw/bus/pci.32
                0x00000000c00224fe                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0022528       0x23
 .text._ZN3IDED2Ev
                0x00000000c0022528       0x23 hw/diskctrl/ide.32
                0x00000000c0022528                IDE::~IDE()
                0x00000000c0022528                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002254c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002254c       0x2a hw/diskctrl/ide.32
                0x00000000c002254c                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022576       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022576       0x23 hw/diskctrl/satabus.32
                0x00000000c0022576                SATABus::~SATABus()
                0x00000000c0022576                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002259a       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002259a       0x2a hw/diskctrl/satabus.32
                0x00000000c002259a                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c00225c4       0x23
 .text._ZN3ATAD2Ev
                0x00000000c00225c4       0x23 hw/diskphys/ata.32
                0x00000000c00225c4                ATA::~ATA()
                0x00000000c00225c4                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00225e8       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00225e8       0x2a hw/diskphys/ata.32
                0x00000000c00225e8                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0022612       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0022612       0x23 hw/diskphys/atapi.32
                0x00000000c0022612                ATAPI::~ATAPI()
                0x00000000c0022612                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0022636       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0022636       0x2a hw/diskphys/atapi.32
                0x00000000c0022636                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022660       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022660       0x23 hw/diskphys/sata.32
                0x00000000c0022660                SATA::~SATA()
                0x00000000c0022660                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022684       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022684       0x2a hw/diskphys/sata.32
                0x00000000c0022684                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00226ae       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00226ae       0x23 hw/diskphys/satapi.32
                0x00000000c00226ae                SATAPI::~SATAPI()
                0x00000000c00226ae                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00226d2       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00226d2       0x2a hw/diskphys/satapi.32
                0x00000000c00226d2                SATAPI::~SATAPI()

.text._ZN9APICTimerD2Ev
                0x00000000c00226fc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00226fc       0x23 hw/timer/apictimer.32
                0x00000000c00226fc                APICTimer::~APICTimer()
                0x00000000c00226fc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022720       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022720       0x2a hw/timer/apictimer.32
                0x00000000c0022720                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002274c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002274c       0x23 hw/timer/pit.32
                0x00000000c002274c                PIT::~PIT()
                0x00000000c002274c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022770       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022770       0x2a hw/timer/pit.32
                0x00000000c0022770                PIT::~PIT()

.rodata         0x00000000c002279a     0x3b3e
                0x00000000c002279a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002279a        0x2 
 .ctors         0x00000000c002279c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00227a0        0x4 krnl/unixfile.32
 .ctors         0x00000000c00227a4        0x4 thr/prcssthr.32
 .ctors         0x00000000c00227a8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00227ac                end_ctors = .
                0x00000000c00227ac                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00227ac        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00227b0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00227b0                __DTOR_END__
                0x00000000c00227b4                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00227b4        0xc 
 .rodata        0x00000000c00227c0      0x101 acpica/utclib.32
                0x00000000c00227c0                AcpiGbl_Ctypes
 *fill*         0x00000000c00228c1        0x3 
 .rodata        0x00000000c00228c4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c00228dc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022926       0x1a 
 .rodata        0x00000000c0022940       0xed fs/fat/ff.32
 *fill*         0x00000000c0022a2d       0x13 
 .rodata        0x00000000c0022a40      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022e40       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0022eaf       0x11 dbg/kconsole.32
 .rodata.str1.4
                0x00000000c0022ec0       0x38 dbg/kconsole.32
 .rodata        0x00000000c0022ef8      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0023048      0x169 dbg/usban.32
 *fill*         0x00000000c00231b1        0x3 
 .rodata.str1.4
                0x00000000c00231b4      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00232eb      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c002340e       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0023467        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023468       0x6c fs/vfs.32
                0x00000000c0023468                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00234d4       0x1c fs/vfs.32
                0x00000000c00234d4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00234f0       0x1c fs/vfs.32
                0x00000000c00234f0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002350c       0x2c hal/bus.32
                0x00000000c002350c                vtable for Bus
 *fill*         0x00000000c0023538        0x8 
 .rodata        0x00000000c0023540      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0023690       0x3c hal/clock.32
                0x00000000c0023690                vtable for Clock
 .rodata.str1.1
                0x00000000c00236cc       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0023730       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023752       0x15 hal/device.32
 *fill*         0x00000000c0023767        0x1 
 .rodata._ZTV6Device
                0x00000000c0023768       0x2c hal/device.32
                0x00000000c0023768                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023794       0x2c hal/device.32
                0x00000000c0023794                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00237c0       0x2c hal/diskctrl.32
                0x00000000c00237c0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00237ec       0x38 hal/diskphys.32
                0x00000000c00237ec                vtable for PhysicalDisk
 .rodata        0x00000000c0023824       0x53 hal/keybrd.32
 *fill*         0x00000000c0023877        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023878       0x34 hal/keybrd.32
                0x00000000c0023878                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00238ac       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00238f0       0x2c hal/logidisk.32
                0x00000000c00238f0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c002391c       0x2c hal/mouse.32
                0x00000000c002391c                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023948       0x34 hal/nic.32
                0x00000000c0023948                vtable for NIC
 .rodata.str1.1
                0x00000000c002397c        0xb hal/partition.32
 *fill*         0x00000000c0023987        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023988       0x44 hal/serial.32
                0x00000000c0023988                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00239cc       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023a17        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023a1f       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023a1f       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0023a1f       0x47 hal/timer.32
 *fill*         0x00000000c0023a66        0x2 
 .rodata._ZTV5Timer
                0x00000000c0023a68       0x30 hal/timer.32
                0x00000000c0023a68                vtable for Timer
 .rodata.str1.1
                0x00000000c0023a98       0x3e hal/vcache.32
 *fill*         0x00000000c0023ad6        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023ad8       0x10 hal/vcache.32
                0x00000000c0023ad8                vtable for VCache
 .rodata.str1.1
                0x00000000c0023ae8       0xba hal/video.32
 *fill*         0x00000000c0023ba2        0x2 
 .rodata._ZTV5Video
                0x00000000c0023ba4       0x4c hal/video.32
                0x00000000c0023ba4                vtable for Video
 .rodata.str1.1
                0x00000000c0023bf0      0x1b7 hw/acpi.32
 *fill*         0x00000000c0023da7        0x1 
 .rodata.str1.4
                0x00000000c0023da8       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023e43       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023e43        0x8 hw/acpi.32
 *fill*         0x00000000c0023e43        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023e44       0x2c hw/acpi.32
                0x00000000c0023e44                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023e70       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023e83       0x19 krnl/atexit.32
 .rodata.str1.1
                0x00000000c0023e9c       0x13 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023eaf       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0023ee2        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0023ee5       0x91 krnl/cm.32
                                         0x95 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023f76       0x21 krnl/computer.32
 *fill*         0x00000000c0023f97        0x1 
 .rodata.str1.4
                0x00000000c0023f98       0x2c krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c0023fc4       0x2c krnl/computer.32
                0x00000000c0023fc4                vtable for Computer
 .rodata.str1.1
                0x00000000c0023ff0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c002402c       0x3e krnl/fault.32
 *fill*         0x00000000c002406a        0x2 
 .rodata.str1.4
                0x00000000c002406c       0x28 krnl/fault.32
 .rodata.str1.1
                0x00000000c0024094        0x4 krnl/intlformat.32
 .rodata.str1.1
                0x00000000c0024098       0x11 krnl/intops.32
 .rodata.str1.4
                0x00000000c0024098       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c00240c8        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c00240d7       0x9f krnl/main.32
                                         0xb9 (size before relaxing)
 *fill*         0x00000000c0024176        0x2 
 .rodata.str1.4
                0x00000000c0024178       0x48 krnl/main.32
 .rodata.str1.4
                0x00000000c00241c0      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00242c5       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c002431d       0x39 krnl/pipe.32
 *fill*         0x00000000c0024356        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0024358       0x1c krnl/pipe.32
                0x00000000c0024358                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024374       0x54 krnl/powctrl.32
 .rodata.str1.1
                0x00000000c00243c8       0xd9 krnl/resolve.32
 *fill*         0x00000000c00244a1        0x3 
 .rodata.str1.4
                0x00000000c00244a4       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c00244c3      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c00245cb       0x63 krnl/syscalls.32
                                         0x6b (size before relaxing)
 .rodata.str1.1
                0x00000000c002462e       0x4d krnl/terminal.32
                                         0x5e (size before relaxing)
 *fill*         0x00000000c002467b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c002467c       0x1c krnl/terminal.32
                0x00000000c002467c                vtable for VgaText
 .rodata        0x00000000c0024698       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00246d3       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00246d3       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00246d3       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00246d3        0x8 krnl/unixfile.32
 *fill*         0x00000000c00246d3        0x1 
 .rodata.str1.4
                0x00000000c00246d4       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00246f4       0x1c krnl/unixfile.32
                0x00000000c00246f4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024710       0x1c krnl/unixfile.32
                0x00000000c0024710                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002472c      0x313 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024a3f      0x15a krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024b99       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024bae        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024bbd        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024bc7       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0024be8       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024c2c       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024c41       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024c6d       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c0024c7e      0x219 thr/elf.32
                                        0x228 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024e97       0x57 thr/prcssthr.32
 *fill*         0x00000000c0024eee        0x2 
 .rodata.str1.4
                0x00000000c0024ef0       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024fe8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024fe8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024fe8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024fe8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024fe8       0x61 vm86/vm8086.32
 *fill*         0x00000000c0025049        0x3 
 .rodata.str1.4
                0x00000000c002504c       0x81 vm86/vm8086.32
 *fill*         0x00000000c00250cd        0x3 
 .rodata        0x00000000c00250d0      0x390 vm86/vm8086.32
 .rodata        0x00000000c0025460       0x17 arch/i386/apic.32
 *fill*         0x00000000c0025477        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c0025478       0x2c arch/i386/apic.32
                0x00000000c0025478                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00254a4      0x322 arch/i386/hal.32
                                        0x335 (size before relaxing)
 *fill*         0x00000000c00257c6        0x2 
 .rodata.str1.4
                0x00000000c00257c8       0x23 arch/i386/hal.32
 *fill*         0x00000000c00257eb        0x1 
 .rodata._ZTV3CPU
                0x00000000c00257ec       0x2c arch/i386/hal.32
                0x00000000c00257ec                vtable for CPU
 .rodata.str1.4
                0x00000000c0025818       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025879       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c00258b7       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00258cc       0x3c arch/i386/rtc.32
                0x00000000c00258cc                vtable for RTC
 .rodata.str1.1
                0x00000000c0025908       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025949        0x3 
 .rodata._ZTV3FAT
                0x00000000c002594c       0x6c fs/fat/vfslink.32
                0x00000000c002594c                vtable for FAT
 .rodata.str1.1
                0x00000000c00259b8       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00259b8      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0025af0       0x6c fs/iso9660/vfslink.32
                0x00000000c0025af0                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025b5c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0025ba0       0x34 hal/sound/sndcard.32
                0x00000000c0025ba0                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0025bd4       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025c13       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025c4b       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0025cec       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0025d50       0x2c hw/bus/pci.32
                0x00000000c0025d50                vtable for PCI
 .rodata.str1.1
                0x00000000c0025d7c      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0025ea0       0x2c hw/diskctrl/ide.32
                0x00000000c0025ea0                vtable for IDE
 .rodata.str1.4
                0x00000000c0025ecc       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0025ef0       0x2c hw/diskctrl/satabus.32
                0x00000000c0025ef0                vtable for SATABus
 .rodata.str1.1
                0x00000000c0025f1c       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0025fd7        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025fd8       0x38 hw/diskphys/ata.32
                0x00000000c0025fd8                vtable for ATA
 .rodata.str1.1
                0x00000000c0026010        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c002601d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0026020       0x38 hw/diskphys/atapi.32
                0x00000000c0026020                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0026058       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00260e0       0x38 hw/diskphys/sata.32
                0x00000000c00260e0                vtable for SATA
 .rodata.str1.1
                0x00000000c0026118       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0026202        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0026204       0x38 hw/diskphys/satapi.32
                0x00000000c0026204                vtable for SATAPI
 .rodata.str1.1
                0x00000000c002623c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0026257        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0026258       0x30 hw/timer/apictimer.32
                0x00000000c0026258                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0026288       0x1d hw/timer/pit.32
 *fill*         0x00000000c00262a5        0x3 
 .rodata._ZTV3PIT
                0x00000000c00262a8       0x30 hw/timer/pit.32
                0x00000000c00262a8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00262d8      0xa6d
 *(.data)
 .data          0x00000000c00262d8        0x0 crti.32
 .data          0x00000000c00262d8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00262d8                __dso_handle
 .data          0x00000000c00262dc        0x0 acpica/utclib.32
 .data          0x00000000c00262dc        0x0 krnl/malloc.32
 .data          0x00000000c00262dc        0x0 libk/ctype.32
 .data          0x00000000c00262dc        0x0 libk/string.32
 .data          0x00000000c00262dc        0x0 arch/i386/cc.32
 .data          0x00000000c00262dc        0x0 fs/fat/diskio.32
 .data          0x00000000c00262dc        0x0 fs/fat/ff.32
 .data          0x00000000c00262dc        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00262dc        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00262dc        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00262dc        0x0 dbg/kconsole.32
 *fill*         0x00000000c00262dc        0x4 
 .data          0x00000000c00262e0       0x28 dbg/usban.32
                0x00000000c00262e0                KiUsbanTypeMismatchTypes
 .data          0x00000000c0026308        0x0 fs/symlink.32
 .data          0x00000000c0026308        0x0 fs/vfs.32
 .data          0x00000000c0026308        0x0 hal/bus.32
 .data          0x00000000c0026308        0x0 hal/buzzer.32
 .data          0x00000000c0026308        0x0 hal/clock.32
 .data          0x00000000c0026308        0x0 hal/device.32
 .data          0x00000000c0026308        0x0 hal/diskctrl.32
 .data          0x00000000c0026308        0x0 hal/diskphys.32
 .data          0x00000000c0026308        0x0 hal/fpu.32
 .data          0x00000000c0026308        0x0 hal/keybrd.32
 .data          0x00000000c0026308        0x0 hal/logidisk.32
 .data          0x00000000c0026308        0x0 hal/mouse.32
 .data          0x00000000c0026308        0x0 hal/nic.32
 .data          0x00000000c0026308        0x0 hal/partition.32
 .data          0x00000000c0026308        0x0 hal/serial.32
 .data          0x00000000c0026308        0x0 hal/timer.32
 .data          0x00000000c0026308        0x0 hal/vcache.32
 .data          0x00000000c0026308        0x0 hal/video.32
 .data          0x00000000c0026308       0x10 hw/acpi.32
                0x00000000c0026308                legacyIRQRemaps
 .data          0x00000000c0026318        0x0 krnl/assert.32
 .data          0x00000000c0026318        0x0 krnl/atexit.32
 .data          0x00000000c0026318        0x0 krnl/bootflags.32
 .data          0x00000000c0026318        0x0 krnl/bootmsg.32
 .data          0x00000000c0026318        0x4 krnl/c++.32
                0x00000000c0026318                __stack_chk_guard
 .data          0x00000000c002631c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002631c        0x4 
 .data          0x00000000c0026320      0x100 krnl/cm.32
                0x00000000c0026320                CmComponents
 .data          0x00000000c0026420        0x0 krnl/computer.32
 .data          0x00000000c0026420      0x400 krnl/crc32.32
                0x00000000c0026420                KiPolyLookupCRC32
 .data          0x00000000c0026820       0x4d krnl/env.32
                0x00000000c0026820                defaultSysEnv
 .data          0x00000000c002686d        0x0 krnl/fault.32
 .data          0x00000000c002686d        0x0 krnl/gdt.32
 .data          0x00000000c002686d        0x0 krnl/idle.32
 .data          0x00000000c002686d        0x0 krnl/idt.32
 .data          0x00000000c002686d        0x0 krnl/inlines.32
 .data          0x00000000c002686d        0x0 krnl/intlformat.32
 .data          0x00000000c002686d        0x0 krnl/intops.32
 *fill*         0x00000000c002686d        0x3 
 .data          0x00000000c0026870        0x4 krnl/kheap.32
 .data          0x00000000c0026874        0x0 krnl/mailbox.32
 .data          0x00000000c0026874        0x0 krnl/main.32
 .data          0x00000000c0026874        0x0 krnl/mutex.32
 .data          0x00000000c0026874        0x0 krnl/panic.32
 .data          0x00000000c0026874        0x4 krnl/physmgr.32
                0x00000000c0026874                Phys::bitmap
 .data          0x00000000c0026878        0x0 krnl/pipe.32
 .data          0x00000000c0026878        0x0 krnl/powctrl.32
 .data          0x00000000c0026878        0x0 krnl/random.32
 .data          0x00000000c0026878        0x0 krnl/resolve.32
 .data          0x00000000c0026878        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026878        0x8 
 .data          0x00000000c0026880       0x4c krnl/signal.32
                0x00000000c0026880                KiDefaultSignalHandlers
 *fill*         0x00000000c00268cc       0x14 
 .data          0x00000000c00268e0      0x124 krnl/syscalls.32
                0x00000000c00268e0                systemCallHandlers
 *fill*         0x00000000c0026a04       0x1c 
 .data          0x00000000c0026a20       0x60 krnl/terminal.32
                0x00000000c0026a20                VgaText::hiddenOut
                0x00000000c0026a40                ansiToVGAMappings
 .data          0x00000000c0026a80        0x0 krnl/tss.32
 .data          0x00000000c0026a80        0x4 krnl/unixfile.32
                0x00000000c0026a80                UnixFile::nextFd
 .data          0x00000000c0026a84       0x15 krnl/virtmgr.32
                0x00000000c0026a84                Virt::pageAllocPtr
                0x00000000c0026a88                Virt::bitmap
                0x00000000c0026a8c                Virt::swapfileSectorsPerPage
                0x00000000c0026a90                Virt::swapfileLength
                0x00000000c0026a94                Virt::swapfileSector
                0x00000000c0026a98                Virt::swapfileDrive
 .data          0x00000000c0026a99        0x0 sys/alarm.32
 .data          0x00000000c0026a99        0x0 sys/eject.32
 .data          0x00000000c0026a99        0x0 sys/exit.32
 .data          0x00000000c0026a99        0x0 sys/getcwd.32
 .data          0x00000000c0026a99        0x0 sys/getpid.32
 .data          0x00000000c0026a99        0x0 sys/getramdata.32
 .data          0x00000000c0026a99        0x0 sys/getvgaptr.32
 .data          0x00000000c0026a99        0x0 sys/kill.32
 .data          0x00000000c0026a99        0x0 sys/loaddll.32
 .data          0x00000000c0026a99        0x0 sys/pause.32
 .data          0x00000000c0026a99        0x0 sys/pthread.32
 .data          0x00000000c0026a99        0x0 sys/read.32
 .data          0x00000000c0026a99        0x0 sys/registersignal.32
 .data          0x00000000c0026a99        0x0 sys/registry.32
 .data          0x00000000c0026a99        0x0 sys/sbrk.32
 .data          0x00000000c0026a99        0x0 sys/setcwd.32
 .data          0x00000000c0026a99        0x0 sys/settime.32
 .data          0x00000000c0026a99        0x0 sys/symlink.32
 .data          0x00000000c0026a99        0x0 sys/timezone.32
 .data          0x00000000c0026a99        0x0 sys/truncate.32
 .data          0x00000000c0026a99        0x0 sys/write.32
 .data          0x00000000c0026a99        0x0 sys/wsbe.32
 .data          0x00000000c0026a99        0x0 sys/yield.32
 .data          0x00000000c0026a99        0x0 thr/alarm.32
 .data          0x00000000c0026a99        0x0 thr/elf.32
 .data          0x00000000c0026a99        0x0 thr/exec.32
 *fill*         0x00000000c0026a99        0x3 
 .data          0x00000000c0026a9c        0x4 thr/prcssthr.32
                0x00000000c0026a9c                keNextPID
 .data          0x00000000c0026aa0        0x0 vm86/vm8086.32
 .data          0x00000000c0026aa0        0x0 arch/i386/apic.32
 .data          0x00000000c0026aa0      0x2a4 arch/i386/hal.32
                0x00000000c0026aa0                exceptionNames
                0x00000000c0026d40                lastCode
 .data          0x00000000c0026d44        0x0 arch/i386/intctrl.32
 .data          0x00000000c0026d44        0x0 arch/i386/pic.32
 .data          0x00000000c0026d44        0x0 arch/i386/rtc.32
 .data          0x00000000c0026d44        0x0 arch/i386/vga.32
 .data          0x00000000c0026d44        0x0 fs/fat/vfslink.32
 .data          0x00000000c0026d44        0x0 fs/iso9660/helper.32
 .data          0x00000000c0026d44        0x1 fs/iso9660/vfslink.32
                0x00000000c0026d44                recentDriveletter
 .data          0x00000000c0026d45        0x0 hal/sound/sndcard.32
 .data          0x00000000c0026d45        0x0 hal/sound/sndport.32
 .data          0x00000000c0026d45        0x0 hw/bus/pci.32
 .data          0x00000000c0026d45        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0026d45        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0026d45        0x0 hw/diskphys/ata.32
 .data          0x00000000c0026d45        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0026d45        0x0 hw/diskphys/sata.32
 .data          0x00000000c0026d45        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0026d45        0x0 hw/timer/apictimer.32
 .data          0x00000000c0026d45        0x0 hw/timer/pit.32
 .data          0x00000000c0026d45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0026d45        0x0 crtn.32
 .data          0x00000000c0026d45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0026d45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0026d45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0026d45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0026d48        0x0
 .got           0x00000000c0026d48        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0026d48        0x0
 .got.plt       0x00000000c0026d48        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0026d48        0x0
 .igot.plt      0x00000000c0026d48        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0026d48        0x0
 .tm_clone_table
                0x00000000c0026d48        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0026d48        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0026d45      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0026d45        0x3 
 .eh_frame      0x00000000c0026d48        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0026d48        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0026d48       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0026da0       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0026de0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0026e4c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0027000       0x7d
 *(userkernel)
 userkernel     0x00000000c0027000       0x52 krnl/signal.32
                0x00000000c0027000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002702c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0027052       0x2b krnl/syscalls.32
                0x00000000c0027052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0028000        0x1
 *(align_previous)
 align_previous
                0x00000000c0028000        0x1 krnl/signal.32
                0x00000000c0028000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0028004        0x0
 .rel.got       0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028001     0x74fb
                0x00000000c0028001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0028001       0x1f 
 COMMON         0x00000000c0028020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0028020                dcache
                0x00000000c0028060                cdDriveLetter
                0x00000000c0028080                icache
 *(.bss)
 .bss           0x00000000c00280c0        0x0 crti.32
 .bss           0x00000000c00280c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00280e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00280e4       0x1c 
 .bss           0x00000000c0028100      0x378 krnl/malloc.32
 .bss           0x00000000c0028478        0x0 libk/ctype.32
 .bss           0x00000000c0028478        0x0 libk/string.32
 .bss           0x00000000c0028478        0x0 arch/i386/cc.32
 .bss           0x00000000c0028478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028478        0x8 
 .bss           0x00000000c0028480       0x88 fs/fat/ff.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0028508       0x18 
 .bss           0x00000000c0028520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0028eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0028eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0028eb8        0x8 
 .bss           0x00000000c0028ec0     0x2444 fs/symlink.32
                0x00000000c0028ec0                kiNumWaitingRoomSymlinks
                0x00000000c0028ee0                kiNewlyCreatedIDs
                0x00000000c0028f00                kiNewlyCreatedSymlinks
                0x00000000c0029300                kiSymlinkHashTable
                0x00000000c002b300                kiBaseSymlinkID
 .bss           0x00000000c002b304        0x4 fs/vfs.32
                0x00000000c002b304                installedFilesystems
 .bss           0x00000000c002b308        0x0 hal/bus.32
 .bss           0x00000000c002b308        0x0 hal/buzzer.32
 *fill*         0x00000000c002b308       0x18 
 .bss           0x00000000c002b320      0x348 hal/clock.32
                0x00000000c002b320                keLoadedTimezones
                0x00000000c002b324                keNumberOfTimezones
                0x00000000c002b340                keTimezoneStrings
                0x00000000c002b660                keDstOn
                0x00000000c002b661                keTimezoneHalfHourOffset
                0x00000000c002b664                keTimezoneHourOffset
 .bss           0x00000000c002b668        0x0 hal/device.32
 .bss           0x00000000c002b668        0x0 hal/diskctrl.32
 .bss           0x00000000c002b668        0x0 hal/diskphys.32
 .bss           0x00000000c002b668        0x0 hal/fpu.32
 *fill*         0x00000000c002b668       0x18 
 .bss           0x00000000c002b680      0x428 hal/keybrd.32
                0x00000000c002b680                keyboardWaitingTaskList
                0x00000000c002b684                keyboardSetupYet
                0x00000000c002b688                guiKeyboardHandler
                0x00000000c002b6a0                keystates
 *fill*         0x00000000c002baa8       0x18 
 .bss           0x00000000c002bac0       0x88 hal/logidisk.32
                0x00000000c002bac0                diskAssignments
                0x00000000c002bae0                disks
 .bss           0x00000000c002bb48        0x4 hal/mouse.32
                0x00000000c002bb48                guiMouseHandler
 .bss           0x00000000c002bb4c        0x0 hal/nic.32
 .bss           0x00000000c002bb4c        0x0 hal/partition.32
 .bss           0x00000000c002bb4c        0x0 hal/serial.32
 *fill*         0x00000000c002bb4c        0x4 
 .bss           0x00000000c002bb50        0x8 hal/timer.32
                0x00000000c002bb50                milliTenthsSinceBoot
 .bss           0x00000000c002bb58        0x0 hal/vcache.32
 .bss           0x00000000c002bb58        0x4 hal/video.32
                0x00000000c002bb58                screen
 *fill*         0x00000000c002bb5c        0x4 
 .bss           0x00000000c002bb60      0x480 hw/acpi.32
                0x00000000c002bb60                nextACPITable
                0x00000000c002bb80                acpiTables
                0x00000000c002bd80                usingXSDT
                0x00000000c002bd84                RSDTpointer
                0x00000000c002bd88                RSDPpointer
                0x00000000c002bd8c                nextAPICNMI
                0x00000000c002bda0                apicNMIInfo
                0x00000000c002be20                legacyIRQFlags
                0x00000000c002be40                ioapicDiscoveryNumber
                0x00000000c002be60                ioapicFoundInMADT
                0x00000000c002be80                ioapicAddresses
                0x00000000c002bf00                ioapicGSIBase
                0x00000000c002bf80                processorDiscoveryNumber
                0x00000000c002bfa0                matchingAPICID
                0x00000000c002bfc0                processorID
 .bss           0x00000000c002bfe0        0x0 krnl/assert.32
 .bss           0x00000000c002bfe0      0x120 krnl/atexit.32
                0x00000000c002bfe0                kiNextAtexitHandler
                0x00000000c002c000                kiAtexitContexts
                0x00000000c002c080                kiAtexitHandlers
 .bss           0x00000000c002c100        0x4 krnl/bootflags.32
                0x00000000c002c100                keBootSettings
 .bss           0x00000000c002c104        0x0 krnl/bootmsg.32
 .bss           0x00000000c002c104        0x0 krnl/c++.32
 .bss           0x00000000c002c104        0x0 krnl/cdefs.32
 .bss           0x00000000c002c104        0x4 krnl/cm.32
 .bss           0x00000000c002c108        0x6 krnl/computer.32
                0x00000000c002c108                computer
                0x00000000c002c10c                keIsPreemptionOn
                0x00000000c002c10d                keIsSchedulingOn
 .bss           0x00000000c002c10e        0x0 krnl/crc32.32
 *fill*         0x00000000c002c10e        0x2 
 .bss           0x00000000c002c110        0x8 krnl/env.32
                0x00000000c002c110                KeUserEnv
                0x00000000c002c114                KeSystemEnv
 .bss           0x00000000c002c118        0x0 krnl/fault.32
 .bss           0x00000000c002c118        0x6 krnl/gdt.32
                0x00000000c002c118                gdtDescr
 .bss           0x00000000c002c11e        0x0 krnl/idle.32
 *fill*         0x00000000c002c11e        0x2 
 .bss           0x00000000c002c120        0x6 krnl/idt.32
                0x00000000c002c120                idtDescr
 .bss           0x00000000c002c126        0x0 krnl/inlines.32
 *fill*         0x00000000c002c126       0x1a 
 .bss           0x00000000c002c140       0x24 krnl/intlformat.32
                0x00000000c002c140                keLocale
 .bss           0x00000000c002c164        0x0 krnl/intops.32
 .bss           0x00000000c002c164        0x0 krnl/kheap.32
 .bss           0x00000000c002c164        0x0 krnl/mailbox.32
 .bss           0x00000000c002c164        0x0 krnl/main.32
 .bss           0x00000000c002c164        0x0 krnl/mutex.32
 .bss           0x00000000c002c164        0x1 krnl/panic.32
                0x00000000c002c164                keKernelPanicHappening
 *fill*         0x00000000c002c165        0x3 
 .bss           0x00000000c002c168       0x29 krnl/physmgr.32
                0x00000000c002c168                Phys::forbidEvictions
                0x00000000c002c16c                Phys::currentPagePointer
                0x00000000c002c170                Phys::highestMem
                0x00000000c002c174                Phys::oldPercent
                0x00000000c002c178                Phys::usedPages
                0x00000000c002c17c                Phys::usablePages
                0x00000000c002c180                Phys::dmaUsage
 .bss           0x00000000c002c191        0x0 krnl/pipe.32
 *fill*         0x00000000c002c191        0xf 
 .bss           0x00000000c002c1a0       0x48 krnl/powctrl.32
                0x00000000c002c1a0                keSleepFunction
                0x00000000c002c1a4                keRestartFunction
                0x00000000c002c1a8                keShutdownFunction
                0x00000000c002c1ac                powCtrlOnBattery
                0x00000000c002c1c0                currentPowerSettings
                0x00000000c002c1e4                secondsSinceLastUserIO
 .bss           0x00000000c002c1e8        0x8 krnl/random.32
                0x00000000c002c1e8                kiRandSeed
 .bss           0x00000000c002c1f0        0x0 krnl/resolve.32
 .bss           0x00000000c002c1f0        0x0 krnl/semaphore.32
 .bss           0x00000000c002c1f0        0x0 krnl/signal.32
 .bss           0x00000000c002c1f0        0x0 krnl/syscalls.32
 .bss           0x00000000c002c1f0        0x9 krnl/terminal.32
                0x00000000c002c1f0                terminalCycle
                0x00000000c002c1f4                activeTerminal
                0x00000000c002c1f8                VgaText::graphicMode
 *fill*         0x00000000c002c1f9        0x1 
 .bss           0x00000000c002c1fa        0x2 krnl/tss.32
                0x00000000c002c1fa                doubleFaultSelector
 *fill*         0x00000000c002c1fc        0x4 
 .bss           0x00000000c002c200       0x84 krnl/unixfile.32
                0x00000000c002c200                sfileLpt
                0x00000000c002c240                sfileCom
                0x00000000c002c264                sfileNul
                0x00000000c002c268                sfilePnt
                0x00000000c002c26c                sfileAux
                0x00000000c002c270                sfileCon
                0x00000000c002c274                initialFilesAdded
                0x00000000c002c278                unixFileLinkedList
 .bss           0x00000000c002c284       0x10 krnl/virtmgr.32
                0x00000000c002c284                twswaps
                0x00000000c002c288                swapBalance
                0x00000000c002c28c                Virt::swapfileBitmap
                0x00000000c002c290                keFirstVAS
 .bss           0x00000000c002c294        0x0 sys/alarm.32
 .bss           0x00000000c002c294        0x0 sys/eject.32
 .bss           0x00000000c002c294        0x0 sys/exit.32
 .bss           0x00000000c002c294        0x0 sys/getcwd.32
 .bss           0x00000000c002c294        0x0 sys/getpid.32
 .bss           0x00000000c002c294        0x0 sys/getramdata.32
 .bss           0x00000000c002c294        0x0 sys/getvgaptr.32
 .bss           0x00000000c002c294        0x0 sys/kill.32
 .bss           0x00000000c002c294        0x0 sys/loaddll.32
 .bss           0x00000000c002c294        0x0 sys/pause.32
 .bss           0x00000000c002c294        0x0 sys/pthread.32
 .bss           0x00000000c002c294        0x0 sys/read.32
 .bss           0x00000000c002c294        0x0 sys/registersignal.32
 .bss           0x00000000c002c294        0x0 sys/registry.32
 .bss           0x00000000c002c294        0x0 sys/sbrk.32
 .bss           0x00000000c002c294        0x0 sys/setcwd.32
 .bss           0x00000000c002c294        0x0 sys/settime.32
 .bss           0x00000000c002c294        0x0 sys/symlink.32
 .bss           0x00000000c002c294        0x0 sys/timezone.32
 .bss           0x00000000c002c294        0x0 sys/truncate.32
 .bss           0x00000000c002c294        0x0 sys/write.32
 .bss           0x00000000c002c294        0x0 sys/wsbe.32
 .bss           0x00000000c002c294        0x0 sys/yield.32
 .bss           0x00000000c002c294        0x0 thr/alarm.32
 *fill*         0x00000000c002c294        0xc 
 .bss           0x00000000c002c2a0      0x7a4 thr/elf.32
                0x00000000c002c2a0                Thr::driverLookupNext
                0x00000000c002c2c0                Thr::driverLookupLen
                0x00000000c002c4c0                Thr::driverLookupAddr
                0x00000000c002c6c0                Thr::driverNameLookup
                0x00000000c002c8c0                Thr::kernelSymbols
                0x00000000c002c940                Thr::kernelStringTable
                0x00000000c002c9c0                Thr::kernelSymbolTable
                0x00000000c002ca40                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002ca44        0x0 thr/exec.32
 *fill*         0x00000000c002ca44        0x4 
 .bss           0x00000000c002ca48       0x70 thr/prcssthr.32
                0x00000000c002ca48                keRestorePreemptionValue
                0x00000000c002ca4c                kePreemptionDisableCounter
                0x00000000c002ca50                cleanerThread
                0x00000000c002ca54                weNeedTheCleanerToNotBlock
                0x00000000c002ca58                retValLockStuff
                0x00000000c002ca5c                retValSchedLock
                0x00000000c002ca60                lockStuffLock
                0x00000000c002ca64                schedulerLock
                0x00000000c002ca68                taskSwitchesPostponedFlag
                0x00000000c002ca6c                postponeTaskSwitchesCounter
                0x00000000c002ca70                irqDisableCounter
                0x00000000c002ca74                terminatedTaskList
                0x00000000c002ca80                sleepingTaskList
                0x00000000c002ca8c                taskList
                0x00000000c002ca98                kernelProcess
 *fill*         0x00000000c002cab8        0x8 
 .bss           0x00000000c002cac0       0x40 vm86/vm8086.32
                0x00000000c002cac0                Vm::started8086Yet
                0x00000000c002cac4                Vm::vmRetV
                0x00000000c002cac8                Vm::vmDone
                0x00000000c002cac9                Vm::vmReady
                0x00000000c002cacc                Vm::vm86Thread
                0x00000000c002cad0                Vm::vmToHostCommsPtr
                0x00000000c002cae0                Vm::vmToHostComms
 .bss           0x00000000c002cb00       0x41 arch/i386/apic.32
                0x00000000c002cb00                noOfIOAPICs
                0x00000000c002cb20                ioapics
                0x00000000c002cb40                IOAPICsSetupYet
 *fill*         0x00000000c002cb41        0x3 
 .bss           0x00000000c002cb44       0x50 arch/i386/hal.32
                0x00000000c002cb44                guiPanicHandler
                0x00000000c002cb48                fpuOwner
                0x00000000c002cb4c                coproLoadFunc
                0x00000000c002cb50                coproSaveFunc
                0x00000000c002cb54                lastD
                0x00000000c002cb58                lastC
                0x00000000c002cb5c                lastB
                0x00000000c002cb60                lastA
                0x00000000c002cb64                HalPageWriteCombiningFlag
                0x00000000c002cb68                HalPageGlobalFlag
                0x00000000c002cb6c                keNMIEnabled
                0x00000000c002cb70                vendorIDString
                0x00000000c002cb7d                familyID
                0x00000000c002cb7e                model
                0x00000000c002cb7f                processorType
                0x00000000c002cb80                steppingID
                0x00000000c002cb84                vendor
                0x00000000c002cb88                opcodeDetectionMode
                0x00000000c002cb8c                features
 *fill*         0x00000000c002cb94        0xc 
 .bss           0x00000000c002cba0     0x2000 arch/i386/intctrl.32
                0x00000000c002cba0                keInterruptContexts
                0x00000000c002dba0                keInterruptHandlers
 .bss           0x00000000c002eba0        0x0 arch/i386/pic.32
 .bss           0x00000000c002eba0        0x2 arch/i386/rtc.32
 .bss           0x00000000c002eba2        0x0 arch/i386/vga.32
 *fill*         0x00000000c002eba2       0x1e 
 .bss           0x00000000c002ebc0       0xf0 fs/fat/vfslink.32
                0x00000000c002ebc0                FAT::fats
                0x00000000c002ebe0                FAT::vfsToFatRemaps
                0x00000000c002ec60                fatToVFSRemaps
 .bss           0x00000000c002ecb0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002ecb0       0x10 
 .bss           0x00000000c002ecc0      0x820 fs/iso9660/vfslink.32
                0x00000000c002ecc0                iso9660Owner
                0x00000000c002ecc4                recentSector
                0x00000000c002ece0                recentBuffer
 .bss           0x00000000c002f4e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002f4e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002f4e0        0xd hw/bus/pci.32
                0x00000000c002f4e0                thePCI
 .bss           0x00000000c002f4ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002f4ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002f4ed        0x3 
 .bss           0x00000000c002f4f0        0x8 hw/diskphys/ata.32
                0x00000000c002f4f0                ataSectorsWritten
                0x00000000c002f4f4                ataSectorsRead
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c002f4f8        0x0 hw/timer/apictimer.32
 .bss           0x00000000c002f4f8        0x4 hw/timer/pit.32
                0x00000000c002f4f8                pitFreq
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002f4fc        0x0 crtn.32
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002f4fc                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00369f7                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
