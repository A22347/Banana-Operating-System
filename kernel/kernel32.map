Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootflags.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/apic.32
 .group         0x0000000000000000        0xc arch/i386/apic.32
 .comment       0x0000000000000000       0x12 arch/i386/apic.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootflags.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/apic.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21c0e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x2ad dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f13                Dbg::logs(char*)
                0x00000000c0006f3d                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f5b                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f7c                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070f3        0x1 
 .text          0x00000000c00070f4      0x2d4 dbg/usban.32
                0x00000000c00070f4                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007160                __ubsan_handle_type_mismatch_v1
                0x00000000c000723c                __ubsan_handle_pointer_overflow
                0x00000000c0007268                __ubsan_handle_out_of_bounds
                0x00000000c0007294                __ubsan_handle_add_overflow
                0x00000000c00072c0                __ubsan_handle_load_invalid_value
                0x00000000c00072ec                __ubsan_handle_divrem_overflow
                0x00000000c0007318                __ubsan_handle_mul_overflow
                0x00000000c0007344                __ubsan_handle_sub_overflow
                0x00000000c0007370                __ubsan_handle_shift_out_of_bounds
                0x00000000c000739c                __ubsan_handle_negate_overflow
 .text          0x00000000c00073c8      0x814 fs/symlink.32
                0x00000000c0007517                KiDeinitialiseSymlinks(void*)
                0x00000000c00075aa                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000762d                KeInitialiseSymlinks()
                0x00000000c000778f                KiIsSymlinkRegistered(char const*)
                0x00000000c00078f9                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007aa0                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bdc      0xd88 fs/vfs.32
                0x00000000c0007bdc                File::read(unsigned long long, void*, int*)
                0x00000000c0007c34                File::write(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007ce4                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007d12                File::isAtty()
                0x00000000c0007d16                Directory::isAtty()
                0x00000000c0007d1a                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007d20                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d26                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d2c                File::~File()
                0x00000000c0007d2c                File::~File()
                0x00000000c0007d50                File::~File()
                0x00000000c0007d7a                Directory::~Directory()
                0x00000000c0007d7a                Directory::~Directory()
                0x00000000c0007d9e                Directory::~Directory()
                0x00000000c0007dc8                Filesystem::Filesystem()
                0x00000000c0007dc8                Filesystem::Filesystem()
                0x00000000c0007dec                Filesystem::~Filesystem()
                0x00000000c0007dec                Filesystem::~Filesystem()
                0x00000000c0007dfa                Filesystem::~Filesystem()
                0x00000000c0007e1e                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e48                Fs::initVFS()
                0x00000000c0007e72                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000808c                File::File(char const*, Process*, bool)
                0x00000000c000808c                File::File(char const*, Process*, bool)
                0x00000000c000818a                File::File(char const*, Process*)
                0x00000000c000818a                File::File(char const*, Process*)
                0x00000000c00081a8                File::open(FileOpenMode)
                0x00000000c0008206                File::close()
                0x00000000c0008266                File::seek(unsigned long long)
                0x00000000c00082bc                File::truncate(unsigned long long)
                0x00000000c0008312                File::tell(unsigned long long*)
                0x00000000c0008362                File::rewind()
                0x00000000c0008376                File::unlink()
                0x00000000c00083c2                File::rename(char const*)
                0x00000000c0008410                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000846c                File::exists()
                0x00000000c00084aa                File::stat(unsigned long long*, bool*)
                0x00000000c000850b                Fs::setcwd(Process*, char*)
                0x00000000c000866a                Directory::Directory(char const*, Process*)
                0x00000000c000866a                Directory::Directory(char const*, Process*)
                0x00000000c0008732                Directory::open()
                0x00000000c000878e                Directory::close()
                0x00000000c00087ee                Directory::unlink()
                0x00000000c000883a                Directory::rename(char const*)
                0x00000000c0008888                Directory::exists()
                0x00000000c00088c6                Directory::read(dirent*)
                0x00000000c0008912                Directory::create()
                0x00000000c000895e                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0008964       0x86 hal/bus.32
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c000899c                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
                0x00000000c00089c0                Bus::~Bus()
 .text          0x00000000c00089ea       0x9b hal/buzzer.32
                0x00000000c00089ea                KeBeepThread(void*)
                0x00000000c0008a2b                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a85        0x1 
 .text          0x00000000c0008a86      0xeac hal/clock.32
                0x00000000c0008a86                KeLoadTimezoneStrings()
                0x00000000c0008e15                KeGetTimezoneStringFromID(int)
                0x00000000c0008eb2                KeUpdateTimezone(char const*)
                0x00000000c0008fac                KeSetTimezone(char const*)
                0x00000000c0009009                KeSetTimezone(int)
                0x00000000c000903c                KeLoadTimezone()
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009110                Clock::~Clock()
                0x00000000c000913a                Clock::timeInSecondsLocal()
                0x00000000c00091b0                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000923c                KeDatetimeToSeconds(datetime_t)
                0x00000000c000957c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000964a                KeSecondsToDatetime(unsigned long long)
                0x00000000c0009906                Clock::timeInDatetimeLocal()
 .text          0x00000000c0009932      0x47a hal/device.32
                0x00000000c0009932                Device::hibernate()
                0x00000000c0009934                Device::wake()
                0x00000000c0009936                Device::detect()
                0x00000000c0009938                Device::disableLegacy()
                0x00000000c000993a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000993c                DriverlessDevice::close(int, int, void*)
                0x00000000c0009940                DriverlessDevice::detect()
                0x00000000c0009942                DriverlessDevice::open(int, int, void*)
                0x00000000c0009956                Device::~Device()
                0x00000000c0009956                Device::~Device()
                0x00000000c0009964                Device::~Device()
                0x00000000c000998c                Device::findAndLoadDriver()
                0x00000000c000999a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00099c0                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0009a00                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009a2a                Device::getParent()
                0x00000000c0009a36                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009a54                Device::addChild(Device*)
                0x00000000c0009a98                Device::removeAllChildren()
                0x00000000c0009ade                Device::hibernateAll()
                0x00000000c0009b0e                Device::wakeAll()
                0x00000000c0009b3e                Device::detectAll()
                0x00000000c0009b6e                Device::disableLegacyAll()
                0x00000000c0009b70                Device::loadDriversForAll()
                0x00000000c0009b72                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009ba8                Device::setName(char const*)
                0x00000000c0009bb6                Device::Device(char const*)
                0x00000000c0009bb6                Device::Device(char const*)
                0x00000000c0009cb2                Device::getName()
                0x00000000c0009cbc                Device::closeAll()
                0x00000000c0009d08                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009d08                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009d3e                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d82                getDevicesOfType(DeviceType)
 .text          0x00000000c0009dac       0x86 hal/diskctrl.32
                0x00000000c0009dac                HardDiskController::HardDiskController(char const*)
                0x00000000c0009dac                HardDiskController::HardDiskController(char const*)
                0x00000000c0009de4                HardDiskController::~HardDiskController()
                0x00000000c0009de4                HardDiskController::~HardDiskController()
                0x00000000c0009e08                HardDiskController::~HardDiskController()
 .text          0x00000000c0009e32       0xe2 hal/diskphys.32
                0x00000000c0009e32                PhysicalDisk::eject()
                0x00000000c0009e36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e9e                PhysicalDisk::startCache()
                0x00000000c0009ec6                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009ec6                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009eea                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009f14        0x0 hal/fpu.32
 .text          0x00000000c0009f14      0x874 hal/keybrd.32
                0x00000000c0009f14                startGUI(void*)
                0x00000000c0009f79                startGUIVESA(void*)
                0x00000000c0009fde                sendKeyToTerminal(unsigned char)
                0x00000000c000a0b4                sendKeyboardToken(KeyboardToken)
                0x00000000c000a570                clearInternalKeybuffer(VgaText*)
                0x00000000c000a5a5                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6fe                Keyboard::Keyboard(char const*)
                0x00000000c000a6fe                Keyboard::Keyboard(char const*)
                0x00000000c000a73a                Keyboard::~Keyboard()
                0x00000000c000a73a                Keyboard::~Keyboard()
                0x00000000c000a75e                Keyboard::~Keyboard()
 .text          0x00000000c000a788      0x3f8 hal/logidisk.32
                0x00000000c000a788                LogicalDisk::close(int, int, void*)
                0x00000000c000a78c                LogicalDisk::~LogicalDisk()
                0x00000000c000a78c                LogicalDisk::~LogicalDisk()
                0x00000000c000a7b0                LogicalDisk::~LogicalDisk()
                0x00000000c000a7da                LogicalDisk::open(int, int, void*)
                0x00000000c000a7ee                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a826                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a86c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a86c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a92c                LogicalDisk::assignDriveLetter()
                0x00000000c000a9e6                LogicalDisk::mount()
                0x00000000c000aa2e                LogicalDisk::unmount()
                0x00000000c000aa3e                LogicalDisk::eject()
                0x00000000c000aa52                LogicalDisk::unassignDriveLetter()
                0x00000000c000aaa8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ab14                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab80       0x86 hal/mouse.32
                0x00000000c000ab80                Mouse::Mouse(char const*)
                0x00000000c000ab80                Mouse::Mouse(char const*)
                0x00000000c000abb8                Mouse::~Mouse()
                0x00000000c000abb8                Mouse::~Mouse()
                0x00000000c000abdc                Mouse::~Mouse()
 .text          0x00000000c000ac06       0x90 hal/nic.32
                0x00000000c000ac06                NIC::getMAC()
                0x00000000c000ac0c                NIC::write(int, unsigned char*, int*)
                0x00000000c000ac12                NIC::NIC(char const*)
                0x00000000c000ac12                NIC::NIC(char const*)
                0x00000000c000ac48                NIC::~NIC()
                0x00000000c000ac48                NIC::~NIC()
                0x00000000c000ac6c                NIC::~NIC()
 .text          0x00000000c000ac96      0x33b hal/partition.32
                0x00000000c000ac96                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ad3e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000afd1        0x3 
 .text          0x00000000c000afd4       0x86 hal/serial.32
                0x00000000c000afd4                Serial::Serial(char const*)
                0x00000000c000afd4                Serial::Serial(char const*)
                0x00000000c000b00c                Serial::~Serial()
                0x00000000c000b00c                Serial::~Serial()
                0x00000000c000b030                Serial::~Serial()
 *fill*         0x00000000c000b05a        0x2 
 .text          0x00000000c000b05c      0x230 hal/timer.32
                0x00000000c000b05c                Timer::Timer(char const*)
                0x00000000c000b05c                Timer::Timer(char const*)
                0x00000000c000b094                Timer::~Timer()
                0x00000000c000b094                Timer::~Timer()
                0x00000000c000b0b8                Timer::~Timer()
                0x00000000c000b0e2                Timer::read()
                0x00000000c000b0ed                setupTimer(int)
                0x00000000c000b128                timerHandler(unsigned int)
 .text          0x00000000c000b28c      0x5fe hal/vcache.32
                0x00000000c000b28c                VCache::VCache(PhysicalDisk*)
                0x00000000c000b28c                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3fc                VCache::invalidateReadBuffer()
                0x00000000c000b40c                VCache::writeWriteBuffer()
                0x00000000c000b458                VCache::~VCache()
                0x00000000c000b458                VCache::~VCache()
                0x00000000c000b4b0                VCache::~VCache()
                0x00000000c000b4d8                VCache::write(unsigned long long, int, void*)
                0x00000000c000b6a6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b88a      0x70e hal/video.32
                0x00000000c000b88a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b8d6                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b946                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b9c4                Video::clearScreen(unsigned int)
                0x00000000c000b9f8                Video::putpixel(int, int, unsigned int)
                0x00000000c000ba06                Video::readPixelApprox(int, int)
                0x00000000c000ba1a                Video::Video(char const*)
                0x00000000c000ba1a                Video::Video(char const*)
                0x00000000c000ba50                Video::~Video()
                0x00000000c000ba50                Video::~Video()
                0x00000000c000ba74                Video::~Video()
                0x00000000c000ba9e                Video::isMonochrome()
                0x00000000c000baaa                Video::getWidth()
                0x00000000c000bab6                Video::getHeight()
                0x00000000c000bac2                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb7e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000bf28                Video::putTGA(int, int, unsigned char*, int)
 .text          0x00000000c000bf98     0x11a3 hw/acpi.32
                0x00000000c000bf98                ACPI::close(int, int, void*)
                0x00000000c000bfa0                loadACPITables(unsigned char*)
                0x00000000c000c200                findRSDT(unsigned char*)
                0x00000000c000c34c                findDataTable(unsigned char*, char*)
                0x00000000c000c3c0                scanMADT()
                0x00000000c000c870                ACPI::ACPI()
                0x00000000c000c870                ACPI::ACPI()
                0x00000000c000c8c0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c9bc                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca88                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca90                ACPI::detectPCI()
                0x00000000c000cc9c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ccb4                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d13b        0x1 
 .text          0x00000000c000d13c       0xea krnl/assert.32
                0x00000000c000d13c                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d226       0x91 krnl/atexit.32
                0x00000000c000d226                KeInitialiseAtexit()
                0x00000000c000d248                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d27c                KeExecuteAtexit()
 *fill*         0x00000000c000d2b7        0x1 
 .text          0x00000000c000d2b8       0x1e krnl/bootflags.32
                0x00000000c000d2b8                KeGetBootConfigurationFlag(BootConfigurationFlag)
                0x00000000c000d2c8                KeInitialiseBootConfigurationFlags()
 .text          0x00000000c000d2d6       0x8a krnl/bootmsg.32
                0x00000000c000d2d6                KeDisplaySplashScreen()
                0x00000000c000d305                KeSetBootMessage(char const*)
 .text          0x00000000c000d360       0x5f krnl/c++.32
                0x00000000c000d360                __cxa_atexit
                0x00000000c000d363                __cxa_finalize
                0x00000000c000d364                __stack_chk_fail
                0x00000000c000d39a                __cxa_pure_virtual
                0x00000000c000d3ab                operator new[](unsigned long)
                0x00000000c000d3b0                operator delete(void*, unsigned long)
                0x00000000c000d3b5                operator delete[](void*)
                0x00000000c000d3ba                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d3bf        0x1 
 .text          0x00000000c000d3c0       0x44 krnl/cdefs.32
                0x00000000c000d3c0                CUnlockScheduler
                0x00000000c000d3d8                CLockScheduler
                0x00000000c000d3e8                CPrintf
 .text          0x00000000c000d404      0xc81 krnl/cm.32
                0x00000000c000d404                CmOpen(char const*)
                0x00000000c000d522                CmClose(Reghive_Tag*)
                0x00000000c000d538                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d574                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d5eb                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d62a                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d65c                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d698                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d6c0                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d6e1                CmExpand(Reghive_Tag*, int)
                0x00000000c000d75c                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d7e2                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d8d6                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000da12                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000da73                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000daa3                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000dada                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000db04                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000db44                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000dbe8                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000dc16                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000ddb4                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000de01                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000de7b                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000dece                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000df92                zStrtok(char*, char const*)
                0x00000000c000e004                CmFindObjectFromPath(Reghive_Tag*, char const*)
 *fill*         0x00000000c000e085        0x1 
 .text          0x00000000c000e086       0xe3 krnl/computer.32
                0x00000000c000e086                Computer::close(int, int, void*)
                0x00000000c000e08c                Computer::Computer()
                0x00000000c000e08c                Computer::Computer()
                0x00000000c000e0d0                Computer::open(int, int, void*)
 .text          0x00000000c000e169       0x2b krnl/crc32.32
                0x00000000c000e169                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e194      0x5bf krnl/env.32
                0x00000000c000e194                EnvVarContainer::getEnv(char const*)
                0x00000000c000e1d2                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e294                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e296                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e4ba                EnvVarContainer::__loadSystem()
                0x00000000c000e4d4                EnvVarContainer::__loadUser()
                0x00000000c000e4d6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e4d6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e4f8                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e4f8                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e528                KeGetEnv(Process*, char const*)
                0x00000000c000e58d                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e5a7                KeSetEnvUser(char const*, char const*)
                0x00000000c000e5c6                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e5d9                KeDeleteEnvSystem(char const*)
                0x00000000c000e5da                KeDeleteEnvUser(char const*)
                0x00000000c000e5db                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e5dc                KeNewProcessEnv(Process*)
                0x00000000c000e5fe                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e64a                KeLoadSystemEnv()
                0x00000000c000e678                KeLoadUserEnv()
                0x00000000c000e69e                KeFlushEnv()
                0x00000000c000e69f                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e6bf                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e753        0x1 
 .text          0x00000000c000e754      0x1a8 krnl/fault.32
                0x00000000c000e754                KeDisplayProgramFault(char const*)
                0x00000000c000e7a4                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e7f8                KePageFault(void*, void*)
                0x00000000c000e84c                KeOpcodeFault(void*, void*)
                0x00000000c000e8a0                KeOtherFault(void*, void*)
                0x00000000c000e8d4                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e8e4                KeDoubleFault(void*, void*)
 .text          0x00000000c000e8fc      0x1db krnl/gdt.32
                0x00000000c000e8fc                GDTEntry::setBase(unsigned int)
                0x00000000c000e918                GDTEntry::setLimit(unsigned int)
                0x00000000c000e936                GDT::GDT()
                0x00000000c000e936                GDT::GDT()
                0x00000000c000e94c                GDT::addEntry(GDTEntry)
                0x00000000c000e96e                GDT::getNumberOfEntries()
                0x00000000c000e976                GDT::flush()
                0x00000000c000e998                GDT::setup()
 .text          0x00000000c000ead7       0x20 krnl/idle.32
                0x00000000c000ead7                idleFunction(void*)
 *fill*         0x00000000c000eaf7        0x1 
 .text          0x00000000c000eaf8      0x46c krnl/idt.32
                0x00000000c000eaf8                IDTEntry::IDTEntry(bool)
                0x00000000c000eaf8                IDTEntry::IDTEntry(bool)
                0x00000000c000eb72                IDTEntry::setOffset(unsigned int)
                0x00000000c000eb88                IDT::IDT()
                0x00000000c000eb88                IDT::IDT()
                0x00000000c000eb8a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000eb92                IDT::addEntry(IDTEntry, int)
                0x00000000c000ebac                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000ebe4                IDT::flush()
                0x00000000c000ebfe                IDT::setup()
 .text          0x00000000c000ef64       0x9a krnl/inlines.32
                0x00000000c000ef64                CPU::current()
                0x00000000c000ef70                operator new(unsigned long)
                0x00000000c000ef75                operator delete(void*)
                0x00000000c000ef7a                disableIRQs()
                0x00000000c000ef7c                enableIRQs()
                0x00000000c000ef7e                lockScheduler()
                0x00000000c000ef86                unlockScheduler()
                0x00000000c000ef98                lockStuff()
                0x00000000c000efa6                unlockStuff()
                0x00000000c000efe3                Virt::getAKernelVAS()
                0x00000000c000efe9                __not_memcpy
 .text          0x00000000c000effe      0x2bc krnl/intlformat.32
                0x00000000c000effe                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f1ee                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f210                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f232                KeSetLocale(klocale_t)
                0x00000000c000f248                KeInitialiseLocale()
                0x00000000c000f2b6                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f2b7                KeFormatCurrency(char*, int, double)
                0x00000000c000f2b8                KeFormatNumber(char*, long long, long long)
                0x00000000c000f2b9                KeFormatNumber(char*, double)
 *fill*         0x00000000c000f2ba        0x2 
 .text          0x00000000c000f2bc      0x42e krnl/intops.32
                0x00000000c000f2bc                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f444                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f5f0                KeGetDigitsInNumber(long long)
                0x00000000c000f65c                KeItoa(unsigned long long, char*)
                0x00000000c000f68c                KeItoa(long long, char*)
                0x00000000c000f6bc                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f6ea      0x207 krnl/kheap.32
                0x00000000c000f6ea                sbrk
                0x00000000c000f781                sbrk_thunk
                0x00000000c000f7b7                mmap
                0x00000000c000f815                munmap
                0x00000000c000f82a                liballoc_lock()
                0x00000000c000f838                liballoc_unlock()
                0x00000000c000f850                liballoc_alloc(int)
                0x00000000c000f868                liballoc_free(void*, int)
                0x00000000c000f883                realloc
                0x00000000c000f897                malloc
                0x00000000c000f8a7                free
                0x00000000c000f8b7                rfree
                0x00000000c000f8c7                calloc
 *fill*         0x00000000c000f8f1        0x3 
 .text          0x00000000c000f8f4      0x1d3 krnl/mailbox.32
                0x00000000c000f8f4                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000f954                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000f9b4                KeMailboxCreate()
                0x00000000c000f9e8                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fa4c                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fab0                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fac7      0x20b krnl/main.32
                0x00000000c000fac7                KeFirstTask()
                0x00000000c000fbd2                KeEntryPoint
 *fill*         0x00000000c000fcd2        0x2 
 .text          0x00000000c000fcd4       0x1a krnl/mutex.32
                0x00000000c000fcd4                Mutex::Mutex()
                0x00000000c000fcd4                Mutex::Mutex()
 .text          0x00000000c000fcee       0x12 krnl/panic.32
                0x00000000c000fcee                KeIsKernelInPanic()
                0x00000000c000fcf4                KePanic(char const*)
 .text          0x00000000c000fd00      0x65a krnl/physmgr.32
                0x00000000c000fd00                Phys::allocateDMA(unsigned long)
                0x00000000c000fde8                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000fe23                Phys::setPageState(unsigned long, bool)
                0x00000000c000fe63                Phys::getPageState(unsigned long)
                0x00000000c000fe7f                Phys::freePage(unsigned long)
                0x00000000c000fee8                Phys::allocatePage()
                0x00000000c000ffb9                Phys::allocateContiguousPages(int)
                0x00000000c0010034                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c001006c                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c001035a      0x275 krnl/pipe.32
                0x00000000c001035a                Pipe::isAtty()
                0x00000000c001035e                Pipe::~Pipe()
                0x00000000c001035e                Pipe::~Pipe()
                0x00000000c0010382                Pipe::~Pipe()
                0x00000000c00103aa                Pipe::write(unsigned long long, void*, int*)
                0x00000000c001046a                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0010568                Pipe::Pipe(int)
                0x00000000c0010568                Pipe::Pipe(int)
 .text          0x00000000c00105cf      0x1a3 krnl/powctrl.32
                0x00000000c00105cf                KePowerThread(void*)
                0x00000000c0010601                KeChangePowerSettings(PowerSettings)
                0x00000000c0010617                KeUserIOReceived()
                0x00000000c0010622                KeSetupPowerManager()
                0x00000000c00106ab                KePrepareShutdown()
                0x00000000c00106ca                KeRegisterShutdownHandler(void (*)())
                0x00000000c00106d4                KeRegisterRestartHandler(void (*)())
                0x00000000c00106de                KeRegisterSleepHandler(void (*)())
                0x00000000c00106e8                KeShutdown()
                0x00000000c001071e                KeSleep()
                0x00000000c001072a                KeHandlePowerButton()
                0x00000000c001073c                KeHandleSleepButton()
                0x00000000c001074e                KeRestart()
 .text          0x00000000c0010772       0x9d krnl/random.32
                0x00000000c0010772                KeRand()
                0x00000000c00107b4                KeSeedRand(unsigned int)
                0x00000000c00107dd                KeInitRand()
 *fill*         0x00000000c001080f        0x1 
 .text          0x00000000c0010810      0x26c krnl/resolve.32
                0x00000000c0010810                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010a7c      0x415 krnl/semaphore.32
                0x00000000c0010a7c                Semaphore::Semaphore(int)
                0x00000000c0010a7c                Semaphore::Semaphore(int)
                0x00000000c0010aac                Semaphore::tryAcquire()
                0x00000000c0010b80                Semaphore::assertLocked(char const*)
                0x00000000c0010c0c                Semaphore::acquire(int)
                0x00000000c0010dc4                Semaphore::acquire()
                0x00000000c0010de0                Semaphore::release()
 .text          0x00000000c0010e91      0x3a8 krnl/signal.32
                0x00000000c0010e91                KiSigKill(int)
                0x00000000c0010ea5                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010ea6                KiDefaultSignalHandlerPause(int)
                0x00000000c0010ed2                KiDefaultSignalHandlerResume(int)
                0x00000000c0010efe                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010f03                KeInitSignals()
                0x00000000c0010f75                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010fab                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001102c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001115b                KiCheckSignalZ
                0x00000000c00111ac                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00111e7                KiFinishSignalZ
 .text          0x00000000c0011239      0xe91 krnl/syscalls.32
                0x00000000c0011239                SysSeekDir(regs*)
                0x00000000c001123e                SysTellDir(regs*)
                0x00000000c0011243                SysVerify(regs*)
                0x00000000c001124d                SysGetArgc(regs*)
                0x00000000c0011261                SysTTYName(regs*)
                0x00000000c0011269                SysFormatDisk(regs*)
                0x00000000c00112e0                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011334                SysGetDiskVolumeLabel(regs*)
                0x00000000c001138d                SysRealpath(regs*)
                0x00000000c00113d1                SysReadDir(regs*)
                0x00000000c0011451                SysIsATTY(regs*)
                0x00000000c00114ab                SysSeek(regs*)
                0x00000000c0011509                SysTell(regs*)
                0x00000000c001157e                SysSize(regs*)
                0x00000000c00115f8                SysSizeFromFilename(regs*)
                0x00000000c0011722                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c001184c                SysClose(regs*)
                0x00000000c00118ac                SysOpenDir(regs*)
                0x00000000c0011929                SysMakeDir(regs*)
                0x00000000c0011997                SysCloseDir(regs*)
                0x00000000c00119eb                SysWait(regs*)
                0x00000000c0011a0c                SysNotImpl(regs*)
                0x00000000c0011a27                SysPanic(regs*)
                0x00000000c0011a42                SysRmdir(regs*)
                0x00000000c0011aa7                SysUnlink(regs*)
                0x00000000c0011b0c                SysGetArgv(regs*)
                0x00000000c0011b59                SysUSleep(regs*)
                0x00000000c0011b83                SysSpawn(regs*)
                0x00000000c0011bf6                SysGetEnv(regs*)
                0x00000000c0011ca7                SysSetFatAttrib(regs*)
                0x00000000c0011d1a                SysShutdown(regs*)
                0x00000000c0011d77                SysPipe(regs*)
                0x00000000c0011dbc                SysGetUnixTime(regs*)
                0x00000000c0011e49                string_ends_with(char const*, char const*)
                0x00000000c0011e91                SysOpen(regs*)
                0x00000000c0012088                KeSystemCall(regs*, void*)
 .text          0x00000000c00120ca      0xb0b krnl/terminal.32
                0x00000000c00120ca                VgaText::isAtty()
                0x00000000c00120ce                VgaText::~VgaText()
                0x00000000c00120ce                VgaText::~VgaText()
                0x00000000c00120f2                VgaText::~VgaText()
                0x00000000c001211c                VgaText::read(unsigned long long, void*, int*)
                0x00000000c001213c                setTerminalScrollLock(bool)
                0x00000000c001213d                doTerminalCycle()
                0x00000000c001213e                addToTerminalCycle(VgaText*)
                0x00000000c001213f                scrollTerminalScrollLock(int)
                0x00000000c0012140                VgaText::updateTitle()
                0x00000000c0012142                VgaText::load()
                0x00000000c0012144                VgaText::updateCursor()
                0x00000000c001215a                VgaText::doANSI_SGR(int)
                0x00000000c00121ce                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00121de                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00121ee                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c001220e                VgaText::setTitleTextColour(VgaColour)
                0x00000000c001221a                VgaText::setTitleColour(VgaColour)
                0x00000000c0012226                VgaText::setTitle(char*)
                0x00000000c0012228                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c001223a                VgaText::scrollScreen()
                0x00000000c00122cc                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00122dc                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0012388                VgaText::getCursorX()
                0x00000000c0012390                VgaText::getCursorY()
                0x00000000c0012398                VgaText::setCursor(int, int)
                0x00000000c00123af                setActiveTerminal(VgaText*)
                0x00000000c00123fa                VgaText::clearScreen()
                0x00000000c0012448                VgaText::setCursorX(int)
                0x00000000c0012460                VgaText::setCursorY(int)
                0x00000000c0012478                VgaText::incrementCursor(bool)
                0x00000000c00124cc                VgaText::decrementCursor(bool)
                0x00000000c00124ee                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00125be                VgaText::putchar(char)
                0x00000000c00126b6                VgaText::putx(unsigned int)
                0x00000000c00126fc                VgaText::puts(char const*)
                0x00000000c0012722                VgaText::write(unsigned long long, void*, int*)
                0x00000000c001276e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00128e8                VgaText::VgaText(char const*)
                0x00000000c00128e8                VgaText::VgaText(char const*)
                0x00000000c0012a48                VgaText::receiveKey(unsigned char)
                0x00000000c0012bd4                VgaText::doUpdate()
 *fill*         0x00000000c0012bd5        0x3 
 .text          0x00000000c0012bd8      0x224 krnl/tss.32
                0x00000000c0012bd8                TSS::TSS()
                0x00000000c0012bd8                TSS::TSS()
                0x00000000c0012be8                TSS::setESP(unsigned long)
                0x00000000c0012bfc                TSS::flush()
                0x00000000c0012c1c                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012dfc      0x4ce krnl/unixfile.32
                0x00000000c0012dfc                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012e52                ReservedFilename::isAtty()
                0x00000000c0012e6e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012ecc                UnixFile::getFileDescriptor()
                0x00000000c0012ed4                UnixFile::UnixFile(int)
                0x00000000c0012ed4                UnixFile::UnixFile(int)
                0x00000000c0013088                ReservedFilename::ReservedFilename(int)
                0x00000000c0013088                ReservedFilename::ReservedFilename(int)
                0x00000000c00130ba                UnixFile::~UnixFile()
                0x00000000c00130ba                UnixFile::~UnixFile()
                0x00000000c0013156                UnixFile::~UnixFile()
                0x00000000c001317e                ReservedFilename::~ReservedFilename()
                0x00000000c001317e                ReservedFilename::~ReservedFilename()
                0x00000000c00131a2                ReservedFilename::~ReservedFilename()
                0x00000000c00131c9                KeGetFileFromDescriptor(int)
 .text          0x00000000c00132ca     0x132c krnl/virtmgr.32
                0x00000000c00132ca                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0013304                Virt::getPageState(unsigned long)
                0x00000000c0013327                Virt::allocateKernelVirtualPages(int)
                0x00000000c001344c                Virt::freeSwapfilePage(unsigned long)
                0x00000000c001346f                Virt::swapIDToSector(unsigned long)
                0x00000000c0013485                Virt::allocateSwapfilePage()
                0x00000000c0013505                Virt::virtualMemorySetup()
                0x00000000c0013556                Virt::setupPageSwapping(int)
                0x00000000c00135c8                VAS::setCPUSpecific(unsigned long)
                0x00000000c00135ca                VAS::VAS(VAS*)
                0x00000000c00135ca                VAS::VAS(VAS*)
                0x00000000c00135e2                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0013610                VAS::getPageTableEntry(unsigned long)
                0x00000000c001362f                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001376c                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0013790                VAS::virtualToPhysical(unsigned long)
                0x00000000c00137aa                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c00137ec                VAS::VAS()
                0x00000000c00137ec                VAS::VAS()
                0x00000000c0013856                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0013876                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00138a2                VAS::~VAS()
                0x00000000c00138a2                VAS::~VAS()
                0x00000000c0013a0a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013b0e                VAS::allocatePages(int, int)
                0x00000000c0013bf4                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013c4c                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013d42                VAS::VAS(bool)
                0x00000000c0013d42                VAS::VAS(bool)
                0x00000000c0013f2a                VAS::evict(unsigned long)
                0x00000000c001402e                VAS::canLockPage(unsigned long)
                0x00000000c0014048                VAS::unlockPage(unsigned long)
                0x00000000c001407c                VAS::canLockPages(unsigned long, int)
                0x00000000c00140b8                VAS::unlockPages(unsigned long, int)
                0x00000000c00140f4                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0014274                VAS::lockPage(unsigned long)
                0x00000000c00142e6                VAS::lockPages(unsigned long, int)
                0x00000000c0014322                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0014396                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00143c2                VAS::scanForEviction()
                0x00000000c00144fb                mapVASFirstTime
 .text          0x00000000c00145f6       0x2f sys/alarm.32
                0x00000000c00145f6                SysAlarm(regs*)
 .text          0x00000000c0014625       0x36 sys/eject.32
                0x00000000c0014625                SysEject(regs*)
 .text          0x00000000c001465b       0x18 sys/exit.32
                0x00000000c001465b                SysExit(regs*)
 .text          0x00000000c0014673       0x1f sys/getcwd.32
                0x00000000c0014673                SysGetCwd(regs*)
 .text          0x00000000c0014692       0x26 sys/getpid.32
                0x00000000c0014692                SysGetPID(regs*)
 .text          0x00000000c00146b8       0x21 sys/getramdata.32
                0x00000000c00146b8                SysGetRAMData(regs*)
 .text          0x00000000c00146d9       0xbe sys/getvgaptr.32
                0x00000000c00146d9                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014797        0x1 
 .text          0x00000000c0014798       0xb9 sys/kill.32
                0x00000000c0014798                SysKill(regs*)
 .text          0x00000000c0014851       0xa8 sys/loaddll.32
                0x00000000c0014851                SysLoadDLL(regs*)
 .text          0x00000000c00148f9       0x12 sys/pause.32
                0x00000000c00148f9                SysPause(regs*)
 .text          0x00000000c001490b       0x49 sys/pthread.32
                0x00000000c001490b                SysPthreadCreate(regs*)
                0x00000000c0014923                SysPthreadGetTID(regs*)
                0x00000000c001492d                SysInternalPthreadGetContext(regs*)
                0x00000000c0014932                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c0014937                SysPthreadJoin(regs*)
                0x00000000c001493c                SysPthreadExit(regs*)
 .text          0x00000000c0014954       0x68 sys/read.32
                0x00000000c0014954                SysRead(regs*)
 .text          0x00000000c00149bc       0x29 sys/registersignal.32
                0x00000000c00149bc                SysRegisterSignal(regs*)
 .text          0x00000000c00149e5      0x1cc sys/registry.32
                0x00000000c00149e5                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014a29                SysRegistryReadExtent(regs*)
                0x00000000c0014a71                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014a88                SysRegistryEnterDirectory(regs*)
                0x00000000c0014a9f                SysRegistryGetNext(regs*)
                0x00000000c0014ab6                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014af0                SysRegistryOpen(regs*)
                0x00000000c0014b04                SysRegistryClose(regs*)
                0x00000000c0014b1b                SysRegistryEasyReadString(regs*)
                0x00000000c0014b67                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014bb1       0x55 sys/sbrk.32
                0x00000000c0014bb1                SysSbrk(regs*)
 .text          0x00000000c0014c06       0x1c sys/setcwd.32
                0x00000000c0014c06                SysSetCwd(regs*)
 .text          0x00000000c0014c22       0xd7 sys/settime.32
                0x00000000c0014c22                SysSetTime(regs*)
 .text          0x00000000c0014cf9       0x73 sys/symlink.32
                0x00000000c0014cf9                SysSymlink(regs*)
 .text          0x00000000c0014d6c       0x3e sys/timezone.32
                0x00000000c0014d6c                SysTimezone(regs*)
 .text          0x00000000c0014daa       0xfc sys/truncate.32
                0x00000000c0014daa                SysTruncate(regs*)
 .text          0x00000000c0014ea6       0x68 sys/write.32
                0x00000000c0014ea6                SysWrite(regs*)
 .text          0x00000000c0014f0e       0x9d sys/wsbe.32
                0x00000000c0014f0e                SysWsbe(regs*)
 .text          0x00000000c0014fab       0x28 sys/yield.32
                0x00000000c0014fab                SysYield(regs*)
 *fill*         0x00000000c0014fd3        0x1 
 .text          0x00000000c0014fd4      0x281 thr/alarm.32
                0x00000000c0014fd4                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c0015164                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c0015255     0x12a0 thr/elf.32
                0x00000000c0015255                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00154e7                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001577f                Thr::runtimeReferenceHelper()
                0x00000000c0015792                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00157e1                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015a9f                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00161e7                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0016219                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0016250                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001626a                Thr::loadDLL(char const*, bool)
                0x00000000c00164bc                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00164f5       0x5a thr/exec.32
                0x00000000c00164f5                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c001654f        0x1 
 .text          0x00000000c0016550     0x128d thr/prcssthr.32
                0x00000000c0016550                userModeEntryPoint(void*)
                0x00000000c001657c                changeTSS
                0x00000000c00165ac                switchToThread(ThreadControlBlock*)
                0x00000000c001666c                Process::addArgs(char**)
                0x00000000c00166d8                Process::Process(char const*, Process*, char**)
                0x00000000c00166d8                Process::Process(char const*, Process*, char**)
                0x00000000c0016910                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016910                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016afc                taskStartupFunction
                0x00000000c0016b08                KeDisablePreemption()
                0x00000000c0016b30                KeRestorePreemption()
                0x00000000c0016b50                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016ca8                Process::createUserThread()
                0x00000000c0016cc8                setupMultitasking(void (*)())
                0x00000000c0016e10                schedule()
                0x00000000c0016ea4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016ed0                blockTask(TaskState)
                0x00000000c0016f0c                waitTask(int, int*, int)
                0x00000000c0016f50                milliTenthSleepUntil(unsigned long long)
                0x00000000c0017004                milliTenthSleep(unsigned long long)
                0x00000000c001701c                sleep(unsigned long long)
                0x00000000c001703c                sleep(unsigned int)
                0x00000000c0017054                milliTenthSleep(unsigned int)
                0x00000000c0017074                taskReturned
                0x00000000c00170bc                KeProcessFromPID(int)
                0x00000000c001716c                unblockTask(ThreadControlBlock*)
                0x00000000c0017220                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00174f8                cleanerTaskFunction(void*)
                0x00000000c0017610                KeTerminateCurrentThread(int)
 .text          0x00000000c00177dd      0xe5f vm86/vm8086.32
                0x00000000c00177dd                Vm::inbv(unsigned short)
                0x00000000c00177f0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017826                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0017836                Vm::getSegment(unsigned int)
                0x00000000c001783e                Vm::getOffset(unsigned int)
                0x00000000c0017843                Vm::mainloop2()
                0x00000000c0017884                Vm::mainVm8086Loop(void*)
                0x00000000c0017898                Vm::mainloop3(unsigned long)
                0x00000000c00178ca                Vm::initialise8086()
                0x00000000c001790e                Vm::resetConventionalMemory8086()
                0x00000000c001790f                Vm::finish8086()
                0x00000000c0017980                Vm::getOutput8086(unsigned char*)
                0x00000000c00179a5                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017b07                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017d4f                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017de9                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017dfa                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017e0c                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017e1d                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017e32                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017e48                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017e5d                Vm::faultHandler(regs*)
 .text          0x00000000c001863c      0x45f arch/i386/apic.32
                0x00000000c001863c                IOAPIC::close(int, int, void*)
                0x00000000c0018642                apicGetBase()
                0x00000000c001867c                IOAPIC::IOAPIC()
                0x00000000c001867c                IOAPIC::IOAPIC()
                0x00000000c00186a4                apicOpen()
                0x00000000c0018830                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0018862                IOAPIC::read(int)
                0x00000000c001888a                IOAPIC::open(int, int, void*)
                0x00000000c0018970                IOAPIC::write(int, int)
                0x00000000c001899c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0018a9b        0x1 
 .text          0x00000000c0018a9c     0x1f3f arch/i386/hal.32
                0x00000000c0018a9c                noCopro(unsigned long)
                0x00000000c0018a9d                HalRestart()
                0x00000000c0018aa8                HalShutdown()
                0x00000000c0018aa9                HalSleep()
                0x00000000c0018aaa                CPU::close(int, int, void*)
                0x00000000c0018aad                x86ReadCMOS(unsigned char)
                0x00000000c0018b01                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018b61                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018b80                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018b9d                AMD_K6_writeback(int, int, int)
                0x00000000c0018c5d                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018cfb                cpuidCheckEDX(unsigned int)
                0x00000000c0018d28                cpuidCheckECX(unsigned int)
                0x00000000c0018d56                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018d84                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018db2                HalDetectFeatures()
                0x00000000c0019b9d                HalEnableNMI()
                0x00000000c0019bb0                HalDisableNMI()
                0x00000000c0019bc3                HalGetNMIState()
                0x00000000c0019bc9                x86rdmsr(unsigned int)
                0x00000000c0019c07                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0019c4c                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0019c62                HalFindRSDP()
                0x00000000c0019d3f                HalHandlePageFault(void*, void*)
                0x00000000c0019d6e                HalHandleOpcodeFault(void*, void*)
                0x00000000c0019db0                HalDisplayDebugInfo(void*)
                0x00000000c001a13e                HalReceivedNMI()
                0x00000000c001a1d9                HalSystemIdle()
                0x00000000c001a238                i386SaveCoprocessor(void*)
                0x00000000c001a24c                i386LoadCoprocessor(void*)
                0x00000000c001a260                x87EmulHandler(regs*, void*)
                0x00000000c001a2fd                HalInitialiseCoprocessor()
                0x00000000c001a381                HalPanic(char const*)
                0x00000000c001a495                HalQueryPerformanceCounter()
                0x00000000c001a4a5                HalInitialise()
                0x00000000c001a68d                HalMakeBeep(int)
                0x00000000c001a6c7                HalGetRand()
                0x00000000c001a6ca                HalEndOfInterrupt(int)
                0x00000000c001a6f6                CPU::CPU()
                0x00000000c001a6f6                CPU::CPU()
                0x00000000c001a77a                CPU::setupSMEP()
                0x00000000c001a786                CPU::setupUMIP()
                0x00000000c001a790                CPU::setupTSC()
                0x00000000c001a79a                CPU::setupLargePages()
                0x00000000c001a7a4                CPU::setupPAT()
                0x00000000c001a7d6                CPU::setupMTRR()
                0x00000000c001a7d8                CPU::setupGlobalPages()
                0x00000000c001a7e2                CPU::allowUsermodeDataAccess()
                0x00000000c001a7f0                CPU::prohibitUsermodeDataAccess()
                0x00000000c001a7fe                CPU::setupSMAP()
                0x00000000c001a80c                CPU::setupFeatures()
                0x00000000c001a8d8                CPU::open(int, int, void*)
 .text          0x00000000c001a9db      0x341 arch/i386/intctrl.32
                0x00000000c001a9db                convertLegacyIRQNumber(int)
                0x00000000c001aa17                KeSetupInterrupts()
                0x00000000c001aa74                int_handler
                0x00000000c001aaf7                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001ab41                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001ac6f                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001aca3                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 .text          0x00000000c001ad1c      0x2dc arch/i386/pic.32
                0x00000000c001ad1c                picIoWait()
                0x00000000c001ad24                picDisable()
                0x00000000c001ad58                picGetIRQReg(int)
                0x00000000c001add4                picOpen()
                0x00000000c001af58                picEOI(int)
 .text          0x00000000c001aff8      0x5f3 arch/i386/rtc.32
                0x00000000c001aff8                RTC::open(int, int, void*)
                0x00000000c001affc                RTC::close(int, int, void*)
                0x00000000c001b000                RTC::timeInSecondsUTC()
                0x00000000c001b012                RTC::timeInDatetimeUTC()
                0x00000000c001b038                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b076                RTC::~RTC()
                0x00000000c001b076                RTC::~RTC()
                0x00000000c001b09a                RTC::~RTC()
                0x00000000c001b0c4                RTC::get_update_in_progress_flag()
                0x00000000c001b0d8                RTC::completeRTCRefresh()
                0x00000000c001b38c                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b502                rtcIRQHandler(regs*, void*)
                0x00000000c001b542                RTC::RTC()
                0x00000000c001b542                RTC::RTC()
 *fill*         0x00000000c001b5eb        0x1 
 .text          0x00000000c001b5ec      0x1f4 arch/i386/vga.32
                0x00000000c001b5ec                HalConsoleScroll(int, int)
                0x00000000c001b6f4                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b758                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b7e0     0x14cf fs/fat/vfslink.32
                0x00000000c001b7e0                FAT::getName()
                0x00000000c001b7e8                FAT::tell(void*, unsigned long long*)
                0x00000000c001b824                FAT::stat(void*, unsigned long long*)
                0x00000000c001b860                FAT::~FAT()
                0x00000000c001b860                FAT::~FAT()
                0x00000000c001b884                FAT::~FAT()
                0x00000000c001b8ac                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b950                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001ba14                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001bbf8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001be14                FAT::allocateSwapfile(char const*, int)
                0x00000000c001bfd4                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c144                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c1a4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c204                FAT::close(void*)
                0x00000000c001c258                FAT::closeDir(void*)
                0x00000000c001c2ac                FAT::truncate(void*, unsigned long long)
                0x00000000c001c318                FAT::seek(void*, unsigned long long)
                0x00000000c001c370                fatWrapperReadDisk
                0x00000000c001c3b0                fatWrapperWriteDisk
                0x00000000c001c3f0                fatWrapperIoctl
                0x00000000c001c50c                FAT::FAT()
                0x00000000c001c50c                FAT::FAT()
                0x00000000c001c564                FAT::fixFilepath(char*)
                0x00000000c001c5a4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c718                FAT::openDir(char const*, void**)
                0x00000000c001c7c8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c8c0                FAT::unlink(char const*)
                0x00000000c001c940                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001caf4                FAT::rename(char const*, char const*)
                0x00000000c001cbc0                FAT::mkdir(char const*)
                0x00000000c001cc40                FAT::exists(char const*)
 *fill*         0x00000000c001ccaf        0x1 
 .text          0x00000000c001ccb0       0x94 fs/iso9660/helper.32
                0x00000000c001ccb0                isoReadDiscSectorHelper
                0x00000000c001cd0c                iso_kprintf
                0x00000000c001cd28                iso_kprintfd
 .text          0x00000000c001cd44      0x71c fs/iso9660/vfslink.32
                0x00000000c001cd44                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001cd4a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001cd50                ISO9660::getName()
                0x00000000c001cd56                ISO9660::closeDir(void*)
                0x00000000c001cd60                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cd66                ISO9660::unlink(char const*)
                0x00000000c001cd6c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001cd72                ISO9660::rename(char const*, char const*)
                0x00000000c001cd78                ISO9660::mkdir(char const*)
                0x00000000c001cd7e                ISO9660::~ISO9660()
                0x00000000c001cd7e                ISO9660::~ISO9660()
                0x00000000c001cda2                ISO9660::~ISO9660()
                0x00000000c001cdca                ISO9660::exists(char const*)
                0x00000000c001cdde                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001cec4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001cf0c                ISO9660::seek(void*, unsigned long long)
                0x00000000c001cf4e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001cf8c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001cfde                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d120                ISO9660::close(void*)
                0x00000000c001d150                ISO9660::openDir(char const*, void**)
                0x00000000c001d22a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d347                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d3c6                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d438                ISO9660::ISO9660()
                0x00000000c001d438                ISO9660::ISO9660()
 .text          0x00000000c001d460      0x26c hal/sound/sndcard.32
                0x00000000c001d460                SoundCard::beginPlayback()
                0x00000000c001d46e                SoundCard::stopPlayback()
                0x00000000c001d47c                SoundCard::SoundCard(char const*)
                0x00000000c001d47c                SoundCard::SoundCard(char const*)
                0x00000000c001d51a                SoundCard::~SoundCard()
                0x00000000c001d51a                SoundCard::~SoundCard()
                0x00000000c001d53e                SoundCard::~SoundCard()
                0x00000000c001d568                SoundCard::configureRates(int, int, int)
                0x00000000c001d598                SoundCard::getSamples16(int, short*)
                0x00000000c001d5f4                SoundCard::getSamples32(int, int*)
                0x00000000c001d67a                SoundCard::addChannel(SoundPort*)
                0x00000000c001d6b8                SoundCard::removeChannel(int)
 .text          0x00000000c001d6cc      0x426 hal/sound/sndport.32
                0x00000000c001d6cc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d6cc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d758                SoundPort::~SoundPort()
                0x00000000c001d758                SoundPort::~SoundPort()
                0x00000000c001d78c                SoundPort::unpause()
                0x00000000c001d798                SoundPort::pause()
                0x00000000c001d7a4                SoundPort::getBufferUsed()
                0x00000000c001d7ac                SoundPort::getBufferSize()
                0x00000000c001d7b4                SoundPort::buffer8(signed char*, int)
                0x00000000c001d848                SoundPort::buffer16(short*, int)
                0x00000000c001d8dc                SoundPort::buffer32(int*, int)
                0x00000000c001d968                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001da34                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001daf2      0xc23 hw/bus/pci.32
                0x00000000c001daf2                PCI::open(int, int, void*)
                0x00000000c001db10                PCI::close(int, int, void*)
                0x00000000c001db14                PCI::PCI()
                0x00000000c001db14                PCI::PCI()
                0x00000000c001dbac                PCI::readBAR8(unsigned int, int)
                0x00000000c001dbc8                PCI::readBAR16(unsigned int, int)
                0x00000000c001dbe6                PCI::readBAR32(unsigned int, int)
                0x00000000c001dc02                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001dc22                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001dc44                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001dc64                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dcda                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dd84                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001dda8                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001ddd0                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001de1a                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001de42                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001de66                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001de8a                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001deb2                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001df16                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001dffe                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e2c4                PCI::checkBus(unsigned char)
                0x00000000c001e2e8                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e4ce                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e64a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e6bc                PCI::detect()
 *fill*         0x00000000c001e715        0x1 
 .text          0x00000000c001e716      0xe58 hw/diskctrl/ide.32
                0x00000000c001e716                IDE::close(int, int, void*)
                0x00000000c001e71a                IDE::IDE()
                0x00000000c001e71a                IDE::IDE()
                0x00000000c001e74e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e760                selectDrive(unsigned char, unsigned char)
                0x00000000c001e762                IDE::getBase(unsigned char)
                0x00000000c001e774                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e834                IDE::read(unsigned char, unsigned char)
                0x00000000c001e8e2                IDE::waitInterrupt(unsigned char)
                0x00000000c001e945                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001e961                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001e97e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001e9c8                IDE::open(int, int, void*)
                0x00000000c001ef22                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001eff2                IDE::detect()
                0x00000000c001f460                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f51a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f56e      0x33d hw/diskctrl/satabus.32
                0x00000000c001f56e                SATABus::close(int, int, void*)
                0x00000000c001f572                SATABus::detect()
                0x00000000c001f574                SATABus::SATABus()
                0x00000000c001f574                SATABus::SATABus()
                0x00000000c001f5fa                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f62c                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f674                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f694                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f6be                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f7ce                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001f878                SATABus::open(int, int, void*)
 *fill*         0x00000000c001f8ab        0x1 
 .text          0x00000000c001f8ac      0x7a9 hw/diskphys/ata.32
                0x00000000c001f8ac                ATA::close(int, int, void*)
                0x00000000c001f8d0                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001f8d2                ATA::ATA()
                0x00000000c001f8d2                ATA::ATA()
                0x00000000c001f900                ATA::flush(bool)
                0x00000000c001f94e                ATA::readyForCommand()
                0x00000000c001f99a                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001fd8a                ATA::read(unsigned long long, int, void*)
                0x00000000c001fdd6                ATA::write(unsigned long long, int, void*)
                0x00000000c001fe22                ATA::detectCHS()
                0x00000000c001fe4c                ATA::open(int, int, void*)
                0x00000000c0020037                combineCharAndColour(char, unsigned char)
                0x00000000c0020048                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c0020055        0x1 
 .text          0x00000000c0020056      0x618 hw/diskphys/atapi.32
                0x00000000c0020056                ATAPI::write(unsigned long long, int, void*)
                0x00000000c002005c                ATAPI::close(int, int, void*)
                0x00000000c0020080                ATAPI::ATAPI()
                0x00000000c0020080                ATAPI::ATAPI()
                0x00000000c00200ae                ATAPI::readyForCommand()
                0x00000000c0020100                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c00203c8                ATAPI::diskRemoved()
                0x00000000c0020402                ATAPI::eject()
                0x00000000c002044a                ATAPI::diskInserted()
                0x00000000c0020456                ATAPI::detectMedia()
                0x00000000c0020514                ATAPI::open(int, int, void*)
                0x00000000c00205f4                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c002066e      0x44c hw/diskphys/sata.32
                0x00000000c002066e                SATA::close(int, int, void*)
                0x00000000c0020692                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0020694                SATA::open(int, int, void*)
                0x00000000c002074c                SATA::SATA()
                0x00000000c002074c                SATA::SATA()
                0x00000000c002077a                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020a02                SATA::read(unsigned long long, int, void*)
                0x00000000c0020a4e                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020aba      0x5d4 hw/diskphys/satapi.32
                0x00000000c0020aba                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020ac0                SATAPI::close(int, int, void*)
                0x00000000c0020ae4                SATAPI::SATAPI()
                0x00000000c0020ae4                SATAPI::SATAPI()
                0x00000000c0020b12                SATAPI::diskRemoved()
                0x00000000c0020b14                SATAPI::diskInserted()
                0x00000000c0020b30                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020e12                SATAPI::eject()
                0x00000000c0020e4e                SATAPI::detectMedia()
                0x00000000c0020ea4                SATAPI::open(int, int, void*)
                0x00000000c0020fa4                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c002108e        0x2 
 .text          0x00000000c0021090       0xf0 hw/timer/apictimer.32
                0x00000000c0021090                APICTimer::close(int, int, void*)
                0x00000000c0021098                apicTimerHandler(regs*, void*)
                0x00000000c00210c0                APICTimer::open(int, int, void*)
                0x00000000c0021130                APICTimer::write(int)
                0x00000000c0021158                APICTimer::APICTimer()
                0x00000000c0021158                APICTimer::APICTimer()
 .text          0x00000000c0021180      0x1ad hw/timer/pit.32
                0x00000000c0021180                PIT::write(int)
                0x00000000c0021204                pitHandler(regs*, void*)
                0x00000000c002122c                PIT::open(int, int, void*)
                0x00000000c002127c                PIT::close(int, int, void*)
                0x00000000c00212ac                PIT::PIT()
                0x00000000c00212ac                PIT::PIT()
 *fill*         0x00000000c002132d        0x3 
 .text          0x00000000c0021330       0x6f arch/i386/avx.32
                0x00000000c0021330                avxDetect
                0x00000000c002135a                avxSave
                0x00000000c002136b                avxLoad
                0x00000000c002137c                avxInit
                0x00000000c002139e                avxClose
 *fill*         0x00000000c002139f        0x1 
 .text          0x00000000c00213a0      0x2b4 arch/i386/interrupt.32
                0x00000000c00213a0                isr0
                0x00000000c00213b0                isr1
                0x00000000c00213ba                isr2
                0x00000000c00213c4                isr3
                0x00000000c00213ce                isr4
                0x00000000c00213d8                isr5
                0x00000000c00213e2                isr6
                0x00000000c00213ec                isr7
                0x00000000c00213f6                isr8
                0x00000000c00213fe                isr9
                0x00000000c0021408                isr10
                0x00000000c0021410                isr11
                0x00000000c0021418                isr12
                0x00000000c0021420                isr13
                0x00000000c002143a                isr14
                0x00000000c0021442                isr15
                0x00000000c002144c                isr16
                0x00000000c0021456                isr17
                0x00000000c0021460                isr18
                0x00000000c002146a                irq3
                0x00000000c0021474                irq4
                0x00000000c002147e                irq5
                0x00000000c0021488                irq6
                0x00000000c0021492                irq7
                0x00000000c002149c                irq8
                0x00000000c00214a6                irq9
                0x00000000c00214b0                irq10
                0x00000000c00214ba                irq11
                0x00000000c00214c4                irq12
                0x00000000c00214ce                irq13
                0x00000000c00214d8                irq14
                0x00000000c00214e2                irq15
                0x00000000c00214ec                irq1
                0x00000000c00214f3                irq2
                0x00000000c00214fa                isr96
                0x00000000c0021501                irq0
                0x00000000c0021506                int_common_stub
                0x00000000c0021506                syscall_common_stub
                0x00000000c0021604                irq16
                0x00000000c002160e                irq17
                0x00000000c0021618                irq18
                0x00000000c0021622                irq19
                0x00000000c002162c                irq20
                0x00000000c0021636                irq21
                0x00000000c0021640                irq22
                0x00000000c002164a                irq23
 *fill*         0x00000000c0021654        0xc 
 .text          0x00000000c0021660       0x10 arch/i386/rdrand.32
                0x00000000c0021660                i386GetRDRAND
 .text          0x00000000c0021670       0x39 arch/i386/sse.32
                0x00000000c0021670                sseDetect
                0x00000000c0021688                sseSave
                0x00000000c0021690                sseLoad
                0x00000000c0021698                sseInit
                0x00000000c00216a8                sseClose
 *fill*         0x00000000c00216a9        0x7 
 .text          0x00000000c00216b0       0x4f arch/i386/x87.32
                0x00000000c00216b6                x87Detect
                0x00000000c00216d7                x87Save
                0x00000000c00216de                x87Load
                0x00000000c00216e5                x87Init
                0x00000000c00216fe                x87Close
 *fill*         0x00000000c00216ff        0x1 
 .text          0x00000000c0021700       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021725        0x0 crtn.32
 *fill*         0x00000000c0021725        0x3 
 .text          0x00000000c0021728      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021728                __divdi3
 *fill*         0x00000000c0021873        0x1 
 .text          0x00000000c0021874      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021874                __moddi3
 *fill*         0x00000000c00219f2        0x2 
 .text          0x00000000c00219f4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00219f4                __udivdi3
 *fill*         0x00000000c0021af3        0x1 
 .text          0x00000000c0021af4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021af4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021c10        0x0
 .iplt          0x00000000c0021c10        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021c0e        0xf
 .init          0x00000000c0021c0e        0x3 crti.32
                0x00000000c0021c0e                _init
 .init          0x00000000c0021c11        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021c16        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021c1b        0x2 crtn.32

.fini           0x00000000c0021c1d        0xa
 .fini          0x00000000c0021c1d        0x3 crti.32
                0x00000000c0021c1d                _fini
 .fini          0x00000000c0021c20        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021c25        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021c28       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021c28       0x1a hal/device.32
                0x00000000c0021c28                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021c28                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021c42       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021c42       0x2a hal/device.32
                0x00000000c0021c42                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021c6c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021c6c       0xdc hal/device.32
                0x00000000c0021c6c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021d48       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021d48       0x42 hal/device.32
                0x00000000c0021d48                LinkedList<Device>::LinkedList()
                0x00000000c0021d48                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021d8c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021d8c       0x1c hal/timer.32
                0x00000000c0021d8c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021da8        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021da8        0x7 hal/timer.32
                0x00000000c0021da8                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021db0       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021db0       0xbc hal/timer.32
                0x00000000c0021db0                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021e6c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021e6c       0xda hal/timer.32
                0x00000000c0021e6c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021f48       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021f48       0x23 hw/acpi.32
                0x00000000c0021f48                ACPI::~ACPI()
                0x00000000c0021f48                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0021f6c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0021f6c       0x2a hw/acpi.32
                0x00000000c0021f6c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021f98        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021f98        0x2 hw/acpi.32
                0x00000000c0021f98                LinkedList<Device>::~LinkedList()
                0x00000000c0021f98                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021f9c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021f9c       0x1c hw/acpi.32
                0x00000000c0021f9c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021fb8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021fb8        0x7 hw/acpi.32
                0x00000000c0021fb8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021fc0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021fc0       0xb8 hw/acpi.32
                0x00000000c0021fc0                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0022078       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0022078       0x23 krnl/computer.32
                0x00000000c0022078                Computer::~Computer()
                0x00000000c0022078                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002209c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002209c       0x2a krnl/computer.32
                0x00000000c002209c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c00220c6       0x24
 .text._Z10idleCommonv
                0x00000000c00220c6       0x24 krnl/idle.32
                0x00000000c00220c6                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00220ea        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00220ea        0x2 krnl/unixfile.32
                0x00000000c00220ea                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00220ea                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00220ec       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00220ec       0x42 krnl/unixfile.32
                0x00000000c00220ec                LinkedList<UnixFile>::LinkedList()
                0x00000000c00220ec                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002212e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002212e       0xd3 krnl/unixfile.32
                0x00000000c002212e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022202        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022202        0x7 krnl/unixfile.32
                0x00000000c0022202                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002220a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002220a       0xa1 krnl/unixfile.32
                0x00000000c002220a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00222ac        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00222ac        0x8 krnl/unixfile.32
                0x00000000c00222ac                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00222b4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00222b4        0x8 sys/kill.32
                0x00000000c00222b4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00222bc        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00222bc        0x2 thr/prcssthr.32
                0x00000000c00222bc                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00222bc                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00222c0       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00222c0       0x49 thr/prcssthr.32
                0x00000000c00222c0                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00222c0                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002230c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002230c       0x42 thr/prcssthr.32
                0x00000000c002230c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c002230c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN6IOAPICD2Ev
                0x00000000c002234e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002234e       0x23 arch/i386/apic.32
                0x00000000c002234e                IOAPIC::~IOAPIC()
                0x00000000c002234e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022372       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022372       0x2a arch/i386/apic.32
                0x00000000c0022372                IOAPIC::~IOAPIC()

.text._ZN3CPUD2Ev
                0x00000000c002239c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002239c       0x23 arch/i386/hal.32
                0x00000000c002239c                CPU::~CPU()
                0x00000000c002239c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00223c0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00223c0       0x2a arch/i386/hal.32
                0x00000000c00223c0                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c00223ea       0x23
 .text._ZN3PCID2Ev
                0x00000000c00223ea       0x23 hw/bus/pci.32
                0x00000000c00223ea                PCI::~PCI()
                0x00000000c00223ea                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002240e       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002240e       0x2a hw/bus/pci.32
                0x00000000c002240e                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0022438       0x23
 .text._ZN3IDED2Ev
                0x00000000c0022438       0x23 hw/diskctrl/ide.32
                0x00000000c0022438                IDE::~IDE()
                0x00000000c0022438                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002245c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002245c       0x2a hw/diskctrl/ide.32
                0x00000000c002245c                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022486       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022486       0x23 hw/diskctrl/satabus.32
                0x00000000c0022486                SATABus::~SATABus()
                0x00000000c0022486                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c00224aa       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c00224aa       0x2a hw/diskctrl/satabus.32
                0x00000000c00224aa                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c00224d4       0x23
 .text._ZN3ATAD2Ev
                0x00000000c00224d4       0x23 hw/diskphys/ata.32
                0x00000000c00224d4                ATA::~ATA()
                0x00000000c00224d4                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00224f8       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00224f8       0x2a hw/diskphys/ata.32
                0x00000000c00224f8                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0022522       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0022522       0x23 hw/diskphys/atapi.32
                0x00000000c0022522                ATAPI::~ATAPI()
                0x00000000c0022522                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0022546       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0022546       0x2a hw/diskphys/atapi.32
                0x00000000c0022546                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022570       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022570       0x23 hw/diskphys/sata.32
                0x00000000c0022570                SATA::~SATA()
                0x00000000c0022570                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022594       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022594       0x2a hw/diskphys/sata.32
                0x00000000c0022594                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00225be       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00225be       0x23 hw/diskphys/satapi.32
                0x00000000c00225be                SATAPI::~SATAPI()
                0x00000000c00225be                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00225e2       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00225e2       0x2a hw/diskphys/satapi.32
                0x00000000c00225e2                SATAPI::~SATAPI()

.text._ZN9APICTimerD2Ev
                0x00000000c002260c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c002260c       0x23 hw/timer/apictimer.32
                0x00000000c002260c                APICTimer::~APICTimer()
                0x00000000c002260c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022630       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022630       0x2a hw/timer/apictimer.32
                0x00000000c0022630                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002265c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002265c       0x23 hw/timer/pit.32
                0x00000000c002265c                PIT::~PIT()
                0x00000000c002265c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022680       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022680       0x2a hw/timer/pit.32
                0x00000000c0022680                PIT::~PIT()

.rodata         0x00000000c00226aa     0x3b5a
                0x00000000c00226aa                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00226aa        0x2 
 .ctors         0x00000000c00226ac        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00226b0        0x4 krnl/unixfile.32
 .ctors         0x00000000c00226b4        0x4 thr/prcssthr.32
 .ctors         0x00000000c00226b8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00226bc                end_ctors = .
                0x00000000c00226bc                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00226bc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00226c0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00226c0                __DTOR_END__
                0x00000000c00226c4                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00226c4       0x1c 
 .rodata        0x00000000c00226e0      0x101 acpica/utclib.32
                0x00000000c00226e0                AcpiGbl_Ctypes
 *fill*         0x00000000c00227e1        0x3 
 .rodata        0x00000000c00227e4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c00227fc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022846       0x1a 
 .rodata        0x00000000c0022860       0xed fs/fat/ff.32
 *fill*         0x00000000c002294d       0x13 
 .rodata        0x00000000c0022960      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022d60       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0022dcf       0x11 dbg/kconsole.32
 .rodata.str1.4
                0x00000000c0022de0       0x38 dbg/kconsole.32
 .rodata        0x00000000c0022e18      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0022f68      0x169 dbg/usban.32
 *fill*         0x00000000c00230d1        0x3 
 .rodata.str1.4
                0x00000000c00230d4      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002320b      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c002332e       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0023387        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023388       0x6c fs/vfs.32
                0x00000000c0023388                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00233f4       0x1c fs/vfs.32
                0x00000000c00233f4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0023410       0x1c fs/vfs.32
                0x00000000c0023410                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002342c       0x2c hal/bus.32
                0x00000000c002342c                vtable for Bus
 *fill*         0x00000000c0023458        0x8 
 .rodata        0x00000000c0023460      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c00235b0       0x3c hal/clock.32
                0x00000000c00235b0                vtable for Clock
 .rodata.str1.1
                0x00000000c00235ec       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0023650       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023672       0x15 hal/device.32
 *fill*         0x00000000c0023687        0x1 
 .rodata._ZTV6Device
                0x00000000c0023688       0x2c hal/device.32
                0x00000000c0023688                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00236b4       0x2c hal/device.32
                0x00000000c00236b4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00236e0       0x2c hal/diskctrl.32
                0x00000000c00236e0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002370c       0x38 hal/diskphys.32
                0x00000000c002370c                vtable for PhysicalDisk
 .rodata        0x00000000c0023744       0x53 hal/keybrd.32
 *fill*         0x00000000c0023797        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023798       0x34 hal/keybrd.32
                0x00000000c0023798                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00237cc       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0023810       0x2c hal/logidisk.32
                0x00000000c0023810                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c002383c       0x2c hal/mouse.32
                0x00000000c002383c                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023868       0x34 hal/nic.32
                0x00000000c0023868                vtable for NIC
 .rodata.str1.1
                0x00000000c002389c        0xb hal/partition.32
 *fill*         0x00000000c00238a7        0x1 
 .rodata._ZTV6Serial
                0x00000000c00238a8       0x44 hal/serial.32
                0x00000000c00238a8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00238ec       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023937        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002393f       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002393f       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c002393f       0x47 hal/timer.32
 *fill*         0x00000000c0023986        0x2 
 .rodata._ZTV5Timer
                0x00000000c0023988       0x30 hal/timer.32
                0x00000000c0023988                vtable for Timer
 .rodata.str1.1
                0x00000000c00239b8       0x3e hal/vcache.32
 *fill*         0x00000000c00239f6        0x2 
 .rodata._ZTV6VCache
                0x00000000c00239f8       0x10 hal/vcache.32
                0x00000000c00239f8                vtable for VCache
 .rodata.str1.1
                0x00000000c0023a08       0xba hal/video.32
 *fill*         0x00000000c0023ac2        0x2 
 .rodata._ZTV5Video
                0x00000000c0023ac4       0x4c hal/video.32
                0x00000000c0023ac4                vtable for Video
 .rodata.str1.1
                0x00000000c0023b10      0x1b7 hw/acpi.32
 *fill*         0x00000000c0023cc7        0x1 
 .rodata.str1.4
                0x00000000c0023cc8       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023d63       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023d63        0x8 hw/acpi.32
 *fill*         0x00000000c0023d63        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023d64       0x2c hw/acpi.32
                0x00000000c0023d64                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023d90       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023da3       0x19 krnl/atexit.32
 .rodata.str1.1
                0x00000000c0023dbc       0x13 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023dcf       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0023e02        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0023e05       0x87 krnl/cm.32
                                         0x89 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023e8c       0x21 krnl/computer.32
 *fill*         0x00000000c0023ead        0x3 
 .rodata.str1.4
                0x00000000c0023eb0       0x2c krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c0023edc       0x2c krnl/computer.32
                0x00000000c0023edc                vtable for Computer
 .rodata.str1.1
                0x00000000c0023f08       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0023f44       0x3e krnl/fault.32
 *fill*         0x00000000c0023f82        0x2 
 .rodata.str1.4
                0x00000000c0023f84       0x28 krnl/fault.32
 .rodata.str1.1
                0x00000000c0023fac        0x4 krnl/intlformat.32
 .rodata.str1.1
                0x00000000c0023fb0       0x11 krnl/intops.32
 .rodata.str1.4
                0x00000000c0023fb0       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023fe0        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023fef       0x9f krnl/main.32
                                         0xb9 (size before relaxing)
 *fill*         0x00000000c002408e        0x2 
 .rodata.str1.4
                0x00000000c0024090       0x48 krnl/main.32
 .rodata.str1.1
                0x00000000c00240d8       0x6a krnl/physmgr.32
 *fill*         0x00000000c0024142        0x2 
 .rodata.str1.4
                0x00000000c0024144      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024249       0x39 krnl/pipe.32
 *fill*         0x00000000c0024282        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0024284       0x1c krnl/pipe.32
                0x00000000c0024284                vtable for Pipe
 .rodata.str1.1
                0x00000000c00242a0       0x54 krnl/powctrl.32
 .rodata.str1.1
                0x00000000c00242f4       0xd9 krnl/resolve.32
 *fill*         0x00000000c00243cd        0x3 
 .rodata.str1.4
                0x00000000c00243d0       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c00243ef      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c00244f7       0x63 krnl/syscalls.32
                                         0x6b (size before relaxing)
 .rodata.str1.1
                0x00000000c002455a       0x4d krnl/terminal.32
                                         0x5e (size before relaxing)
 *fill*         0x00000000c00245a7        0x1 
 .rodata._ZTV7VgaText
                0x00000000c00245a8       0x1c krnl/terminal.32
                0x00000000c00245a8                vtable for VgaText
 .rodata        0x00000000c00245c4       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00245ff       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00245ff       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00245ff       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00245ff        0x8 krnl/unixfile.32
 *fill*         0x00000000c00245ff        0x1 
 .rodata.str1.4
                0x00000000c0024600       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0024620       0x1c krnl/unixfile.32
                0x00000000c0024620                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002463c       0x1c krnl/unixfile.32
                0x00000000c002463c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024658      0x313 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c002496b      0x15a krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024ac5       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024ada        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024ae9        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024af3       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0024b14       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024b58       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024b6d       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024b99       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c0024baa      0x219 thr/elf.32
                                        0x228 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024dc3       0x57 thr/prcssthr.32
 *fill*         0x00000000c0024e1a        0x2 
 .rodata.str1.4
                0x00000000c0024e1c       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024f14       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024f14       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024f14       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024f14        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024f14       0x61 vm86/vm8086.32
 *fill*         0x00000000c0024f75        0x3 
 .rodata.str1.4
                0x00000000c0024f78       0x81 vm86/vm8086.32
 *fill*         0x00000000c0024ff9        0x3 
 .rodata        0x00000000c0024ffc      0x390 vm86/vm8086.32
 .rodata        0x00000000c002538c       0x17 arch/i386/apic.32
 *fill*         0x00000000c00253a3        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c00253a4       0x2c arch/i386/apic.32
                0x00000000c00253a4                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00253d0      0x322 arch/i386/hal.32
                                        0x335 (size before relaxing)
 *fill*         0x00000000c00256f2        0x2 
 .rodata.str1.4
                0x00000000c00256f4       0x23 arch/i386/hal.32
 *fill*         0x00000000c0025717        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025718       0x2c arch/i386/hal.32
                0x00000000c0025718                vtable for CPU
 .rodata.str1.4
                0x00000000c0025744       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c00257a5       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c00257e3       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00257f8       0x3c arch/i386/rtc.32
                0x00000000c00257f8                vtable for RTC
 .rodata.str1.1
                0x00000000c0025834       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025875        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025878       0x6c fs/fat/vfslink.32
                0x00000000c0025878                vtable for FAT
 .rodata.str1.1
                0x00000000c00258e4       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00258e4      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0025a1c       0x6c fs/iso9660/vfslink.32
                0x00000000c0025a1c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025a88       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0025acc       0x34 hal/sound/sndcard.32
                0x00000000c0025acc                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0025b00       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025b3f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025b77       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0025c18       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0025c7c       0x2c hw/bus/pci.32
                0x00000000c0025c7c                vtable for PCI
 .rodata.str1.1
                0x00000000c0025ca8      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0025dcc       0x2c hw/diskctrl/ide.32
                0x00000000c0025dcc                vtable for IDE
 .rodata.str1.4
                0x00000000c0025df8       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0025e1c       0x2c hw/diskctrl/satabus.32
                0x00000000c0025e1c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0025e48       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0025f03        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025f04       0x38 hw/diskphys/ata.32
                0x00000000c0025f04                vtable for ATA
 .rodata.str1.1
                0x00000000c0025f3c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0025f49        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0025f4c       0x38 hw/diskphys/atapi.32
                0x00000000c0025f4c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0025f84       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c002600c       0x38 hw/diskphys/sata.32
                0x00000000c002600c                vtable for SATA
 .rodata.str1.1
                0x00000000c0026044       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c002612e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0026130       0x38 hw/diskphys/satapi.32
                0x00000000c0026130                vtable for SATAPI
 .rodata.str1.1
                0x00000000c0026168       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0026183        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0026184       0x30 hw/timer/apictimer.32
                0x00000000c0026184                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00261b4       0x1d hw/timer/pit.32
 *fill*         0x00000000c00261d1        0x3 
 .rodata._ZTV3PIT
                0x00000000c00261d4       0x30 hw/timer/pit.32
                0x00000000c00261d4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0026204      0xa81
 *(.data)
 .data          0x00000000c0026204        0x0 crti.32
 .data          0x00000000c0026204        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0026204                __dso_handle
 .data          0x00000000c0026208        0x0 acpica/utclib.32
 .data          0x00000000c0026208        0x0 krnl/malloc.32
 .data          0x00000000c0026208        0x0 libk/ctype.32
 .data          0x00000000c0026208        0x0 libk/string.32
 .data          0x00000000c0026208        0x0 arch/i386/cc.32
 .data          0x00000000c0026208        0x0 fs/fat/diskio.32
 .data          0x00000000c0026208        0x0 fs/fat/ff.32
 .data          0x00000000c0026208        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0026208        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0026208        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0026208        0x0 dbg/kconsole.32
 *fill*         0x00000000c0026208       0x18 
 .data          0x00000000c0026220       0x28 dbg/usban.32
                0x00000000c0026220                KiUsbanTypeMismatchTypes
 .data          0x00000000c0026248        0x0 fs/symlink.32
 .data          0x00000000c0026248        0x0 fs/vfs.32
 .data          0x00000000c0026248        0x0 hal/bus.32
 .data          0x00000000c0026248        0x0 hal/buzzer.32
 .data          0x00000000c0026248        0x0 hal/clock.32
 .data          0x00000000c0026248        0x0 hal/device.32
 .data          0x00000000c0026248        0x0 hal/diskctrl.32
 .data          0x00000000c0026248        0x0 hal/diskphys.32
 .data          0x00000000c0026248        0x0 hal/fpu.32
 .data          0x00000000c0026248        0x0 hal/keybrd.32
 .data          0x00000000c0026248        0x0 hal/logidisk.32
 .data          0x00000000c0026248        0x0 hal/mouse.32
 .data          0x00000000c0026248        0x0 hal/nic.32
 .data          0x00000000c0026248        0x0 hal/partition.32
 .data          0x00000000c0026248        0x0 hal/serial.32
 .data          0x00000000c0026248        0x0 hal/timer.32
 .data          0x00000000c0026248        0x0 hal/vcache.32
 .data          0x00000000c0026248        0x0 hal/video.32
 .data          0x00000000c0026248       0x10 hw/acpi.32
                0x00000000c0026248                legacyIRQRemaps
 .data          0x00000000c0026258        0x0 krnl/assert.32
 .data          0x00000000c0026258        0x0 krnl/atexit.32
 .data          0x00000000c0026258        0x0 krnl/bootflags.32
 .data          0x00000000c0026258        0x0 krnl/bootmsg.32
 .data          0x00000000c0026258        0x4 krnl/c++.32
                0x00000000c0026258                __stack_chk_guard
 .data          0x00000000c002625c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002625c        0x4 
 .data          0x00000000c0026260      0x100 krnl/cm.32
                0x00000000c0026260                CmComponents
 .data          0x00000000c0026360        0x0 krnl/computer.32
 .data          0x00000000c0026360      0x400 krnl/crc32.32
                0x00000000c0026360                KiPolyLookupCRC32
 .data          0x00000000c0026760       0x4d krnl/env.32
                0x00000000c0026760                defaultSysEnv
 .data          0x00000000c00267ad        0x0 krnl/fault.32
 .data          0x00000000c00267ad        0x0 krnl/gdt.32
 .data          0x00000000c00267ad        0x0 krnl/idle.32
 .data          0x00000000c00267ad        0x0 krnl/idt.32
 .data          0x00000000c00267ad        0x0 krnl/inlines.32
 .data          0x00000000c00267ad        0x0 krnl/intlformat.32
 .data          0x00000000c00267ad        0x0 krnl/intops.32
 *fill*         0x00000000c00267ad        0x3 
 .data          0x00000000c00267b0        0x4 krnl/kheap.32
 .data          0x00000000c00267b4        0x0 krnl/mailbox.32
 .data          0x00000000c00267b4        0x0 krnl/main.32
 .data          0x00000000c00267b4        0x0 krnl/mutex.32
 .data          0x00000000c00267b4        0x0 krnl/panic.32
 .data          0x00000000c00267b4        0x4 krnl/physmgr.32
                0x00000000c00267b4                Phys::bitmap
 .data          0x00000000c00267b8        0x0 krnl/pipe.32
 .data          0x00000000c00267b8        0x0 krnl/powctrl.32
 .data          0x00000000c00267b8        0x0 krnl/random.32
 .data          0x00000000c00267b8        0x0 krnl/resolve.32
 .data          0x00000000c00267b8        0x0 krnl/semaphore.32
 *fill*         0x00000000c00267b8        0x8 
 .data          0x00000000c00267c0       0x4c krnl/signal.32
                0x00000000c00267c0                KiDefaultSignalHandlers
 *fill*         0x00000000c002680c       0x14 
 .data          0x00000000c0026820      0x124 krnl/syscalls.32
                0x00000000c0026820                systemCallHandlers
 *fill*         0x00000000c0026944       0x1c 
 .data          0x00000000c0026960       0x60 krnl/terminal.32
                0x00000000c0026960                VgaText::hiddenOut
                0x00000000c0026980                ansiToVGAMappings
 .data          0x00000000c00269c0        0x0 krnl/tss.32
 .data          0x00000000c00269c0        0x4 krnl/unixfile.32
                0x00000000c00269c0                UnixFile::nextFd
 .data          0x00000000c00269c4       0x15 krnl/virtmgr.32
                0x00000000c00269c4                Virt::pageAllocPtr
                0x00000000c00269c8                Virt::bitmap
                0x00000000c00269cc                Virt::swapfileSectorsPerPage
                0x00000000c00269d0                Virt::swapfileLength
                0x00000000c00269d4                Virt::swapfileSector
                0x00000000c00269d8                Virt::swapfileDrive
 .data          0x00000000c00269d9        0x0 sys/alarm.32
 .data          0x00000000c00269d9        0x0 sys/eject.32
 .data          0x00000000c00269d9        0x0 sys/exit.32
 .data          0x00000000c00269d9        0x0 sys/getcwd.32
 .data          0x00000000c00269d9        0x0 sys/getpid.32
 .data          0x00000000c00269d9        0x0 sys/getramdata.32
 .data          0x00000000c00269d9        0x0 sys/getvgaptr.32
 .data          0x00000000c00269d9        0x0 sys/kill.32
 .data          0x00000000c00269d9        0x0 sys/loaddll.32
 .data          0x00000000c00269d9        0x0 sys/pause.32
 .data          0x00000000c00269d9        0x0 sys/pthread.32
 .data          0x00000000c00269d9        0x0 sys/read.32
 .data          0x00000000c00269d9        0x0 sys/registersignal.32
 .data          0x00000000c00269d9        0x0 sys/registry.32
 .data          0x00000000c00269d9        0x0 sys/sbrk.32
 .data          0x00000000c00269d9        0x0 sys/setcwd.32
 .data          0x00000000c00269d9        0x0 sys/settime.32
 .data          0x00000000c00269d9        0x0 sys/symlink.32
 .data          0x00000000c00269d9        0x0 sys/timezone.32
 .data          0x00000000c00269d9        0x0 sys/truncate.32
 .data          0x00000000c00269d9        0x0 sys/write.32
 .data          0x00000000c00269d9        0x0 sys/wsbe.32
 .data          0x00000000c00269d9        0x0 sys/yield.32
 .data          0x00000000c00269d9        0x0 thr/alarm.32
 .data          0x00000000c00269d9        0x0 thr/elf.32
 .data          0x00000000c00269d9        0x0 thr/exec.32
 *fill*         0x00000000c00269d9        0x3 
 .data          0x00000000c00269dc        0x4 thr/prcssthr.32
                0x00000000c00269dc                keNextPID
 .data          0x00000000c00269e0        0x0 vm86/vm8086.32
 .data          0x00000000c00269e0        0x0 arch/i386/apic.32
 .data          0x00000000c00269e0      0x2a4 arch/i386/hal.32
                0x00000000c00269e0                exceptionNames
                0x00000000c0026c80                lastCode
 .data          0x00000000c0026c84        0x0 arch/i386/intctrl.32
 .data          0x00000000c0026c84        0x0 arch/i386/pic.32
 .data          0x00000000c0026c84        0x0 arch/i386/rtc.32
 .data          0x00000000c0026c84        0x0 arch/i386/vga.32
 .data          0x00000000c0026c84        0x0 fs/fat/vfslink.32
 .data          0x00000000c0026c84        0x0 fs/iso9660/helper.32
 .data          0x00000000c0026c84        0x1 fs/iso9660/vfslink.32
                0x00000000c0026c84                recentDriveletter
 .data          0x00000000c0026c85        0x0 hal/sound/sndcard.32
 .data          0x00000000c0026c85        0x0 hal/sound/sndport.32
 .data          0x00000000c0026c85        0x0 hw/bus/pci.32
 .data          0x00000000c0026c85        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0026c85        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0026c85        0x0 hw/diskphys/ata.32
 .data          0x00000000c0026c85        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0026c85        0x0 hw/diskphys/sata.32
 .data          0x00000000c0026c85        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0026c85        0x0 hw/timer/apictimer.32
 .data          0x00000000c0026c85        0x0 hw/timer/pit.32
 .data          0x00000000c0026c85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0026c85        0x0 crtn.32
 .data          0x00000000c0026c85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0026c85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0026c85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0026c85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0026c88        0x0
 .got           0x00000000c0026c88        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0026c88        0x0
 .got.plt       0x00000000c0026c88        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0026c88        0x0
 .igot.plt      0x00000000c0026c88        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0026c88        0x0
 .tm_clone_table
                0x00000000c0026c88        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0026c88        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0026c85      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0026c85        0x3 
 .eh_frame      0x00000000c0026c88        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0026c88        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0026c88       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0026ce0       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0026d20       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0026d8c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0027000       0x7d
 *(userkernel)
 userkernel     0x00000000c0027000       0x52 krnl/signal.32
                0x00000000c0027000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002702c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0027052       0x2b krnl/syscalls.32
                0x00000000c0027052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0028000        0x1
 *(align_previous)
 align_previous
                0x00000000c0028000        0x1 krnl/signal.32
                0x00000000c0028000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0028004        0x0
 .rel.got       0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028001     0x74fb
                0x00000000c0028001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0028001       0x1f 
 COMMON         0x00000000c0028020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0028020                dcache
                0x00000000c0028060                cdDriveLetter
                0x00000000c0028080                icache
 *(.bss)
 .bss           0x00000000c00280c0        0x0 crti.32
 .bss           0x00000000c00280c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00280e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00280e4       0x1c 
 .bss           0x00000000c0028100      0x378 krnl/malloc.32
 .bss           0x00000000c0028478        0x0 libk/ctype.32
 .bss           0x00000000c0028478        0x0 libk/string.32
 .bss           0x00000000c0028478        0x0 arch/i386/cc.32
 .bss           0x00000000c0028478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028478        0x8 
 .bss           0x00000000c0028480       0x88 fs/fat/ff.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0028508       0x18 
 .bss           0x00000000c0028520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0028eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0028eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0028eb8        0x8 
 .bss           0x00000000c0028ec0     0x2444 fs/symlink.32
                0x00000000c0028ec0                kiNumWaitingRoomSymlinks
                0x00000000c0028ee0                kiNewlyCreatedIDs
                0x00000000c0028f00                kiNewlyCreatedSymlinks
                0x00000000c0029300                kiSymlinkHashTable
                0x00000000c002b300                kiBaseSymlinkID
 .bss           0x00000000c002b304        0x4 fs/vfs.32
                0x00000000c002b304                installedFilesystems
 .bss           0x00000000c002b308        0x0 hal/bus.32
 .bss           0x00000000c002b308        0x0 hal/buzzer.32
 *fill*         0x00000000c002b308       0x18 
 .bss           0x00000000c002b320      0x348 hal/clock.32
                0x00000000c002b320                keLoadedTimezones
                0x00000000c002b324                keNumberOfTimezones
                0x00000000c002b340                keTimezoneStrings
                0x00000000c002b660                keDstOn
                0x00000000c002b661                keTimezoneHalfHourOffset
                0x00000000c002b664                keTimezoneHourOffset
 .bss           0x00000000c002b668        0x0 hal/device.32
 .bss           0x00000000c002b668        0x0 hal/diskctrl.32
 .bss           0x00000000c002b668        0x0 hal/diskphys.32
 .bss           0x00000000c002b668        0x0 hal/fpu.32
 *fill*         0x00000000c002b668       0x18 
 .bss           0x00000000c002b680      0x428 hal/keybrd.32
                0x00000000c002b680                keyboardWaitingTaskList
                0x00000000c002b684                keyboardSetupYet
                0x00000000c002b688                guiKeyboardHandler
                0x00000000c002b6a0                keystates
 *fill*         0x00000000c002baa8       0x18 
 .bss           0x00000000c002bac0       0x88 hal/logidisk.32
                0x00000000c002bac0                diskAssignments
                0x00000000c002bae0                disks
 .bss           0x00000000c002bb48        0x4 hal/mouse.32
                0x00000000c002bb48                guiMouseHandler
 .bss           0x00000000c002bb4c        0x0 hal/nic.32
 .bss           0x00000000c002bb4c        0x0 hal/partition.32
 .bss           0x00000000c002bb4c        0x0 hal/serial.32
 *fill*         0x00000000c002bb4c        0x4 
 .bss           0x00000000c002bb50        0x8 hal/timer.32
                0x00000000c002bb50                milliTenthsSinceBoot
 .bss           0x00000000c002bb58        0x0 hal/vcache.32
 .bss           0x00000000c002bb58        0x4 hal/video.32
                0x00000000c002bb58                screen
 *fill*         0x00000000c002bb5c        0x4 
 .bss           0x00000000c002bb60      0x480 hw/acpi.32
                0x00000000c002bb60                nextACPITable
                0x00000000c002bb80                acpiTables
                0x00000000c002bd80                usingXSDT
                0x00000000c002bd84                RSDTpointer
                0x00000000c002bd88                RSDPpointer
                0x00000000c002bd8c                nextAPICNMI
                0x00000000c002bda0                apicNMIInfo
                0x00000000c002be20                legacyIRQFlags
                0x00000000c002be40                ioapicDiscoveryNumber
                0x00000000c002be60                ioapicFoundInMADT
                0x00000000c002be80                ioapicAddresses
                0x00000000c002bf00                ioapicGSIBase
                0x00000000c002bf80                processorDiscoveryNumber
                0x00000000c002bfa0                matchingAPICID
                0x00000000c002bfc0                processorID
 .bss           0x00000000c002bfe0        0x0 krnl/assert.32
 .bss           0x00000000c002bfe0      0x120 krnl/atexit.32
                0x00000000c002bfe0                kiNextAtexitHandler
                0x00000000c002c000                kiAtexitContexts
                0x00000000c002c080                kiAtexitHandlers
 .bss           0x00000000c002c100        0x4 krnl/bootflags.32
                0x00000000c002c100                keBootSettings
 .bss           0x00000000c002c104        0x0 krnl/bootmsg.32
 .bss           0x00000000c002c104        0x0 krnl/c++.32
 .bss           0x00000000c002c104        0x0 krnl/cdefs.32
 .bss           0x00000000c002c104        0x4 krnl/cm.32
 .bss           0x00000000c002c108        0x6 krnl/computer.32
                0x00000000c002c108                computer
                0x00000000c002c10c                keIsPreemptionOn
                0x00000000c002c10d                keIsSchedulingOn
 .bss           0x00000000c002c10e        0x0 krnl/crc32.32
 *fill*         0x00000000c002c10e        0x2 
 .bss           0x00000000c002c110        0x8 krnl/env.32
                0x00000000c002c110                KeUserEnv
                0x00000000c002c114                KeSystemEnv
 .bss           0x00000000c002c118        0x0 krnl/fault.32
 .bss           0x00000000c002c118        0x6 krnl/gdt.32
                0x00000000c002c118                gdtDescr
 .bss           0x00000000c002c11e        0x0 krnl/idle.32
 *fill*         0x00000000c002c11e        0x2 
 .bss           0x00000000c002c120        0x6 krnl/idt.32
                0x00000000c002c120                idtDescr
 .bss           0x00000000c002c126        0x0 krnl/inlines.32
 *fill*         0x00000000c002c126       0x1a 
 .bss           0x00000000c002c140       0x24 krnl/intlformat.32
                0x00000000c002c140                keLocale
 .bss           0x00000000c002c164        0x0 krnl/intops.32
 .bss           0x00000000c002c164        0x0 krnl/kheap.32
 .bss           0x00000000c002c164        0x0 krnl/mailbox.32
 .bss           0x00000000c002c164        0x0 krnl/main.32
 .bss           0x00000000c002c164        0x0 krnl/mutex.32
 .bss           0x00000000c002c164        0x1 krnl/panic.32
                0x00000000c002c164                keKernelPanicHappening
 *fill*         0x00000000c002c165        0x3 
 .bss           0x00000000c002c168       0x28 krnl/physmgr.32
                0x00000000c002c168                Phys::forbidEvictions
                0x00000000c002c16c                Phys::currentPagePointer
                0x00000000c002c170                Phys::highestMem
                0x00000000c002c174                Phys::oldPercent
                0x00000000c002c178                Phys::usedPages
                0x00000000c002c17c                Phys::usablePages
                0x00000000c002c180                Phys::dmaUsage
 .bss           0x00000000c002c190        0x0 krnl/pipe.32
 *fill*         0x00000000c002c190       0x10 
 .bss           0x00000000c002c1a0       0x48 krnl/powctrl.32
                0x00000000c002c1a0                keSleepFunction
                0x00000000c002c1a4                keRestartFunction
                0x00000000c002c1a8                keShutdownFunction
                0x00000000c002c1ac                powCtrlOnBattery
                0x00000000c002c1c0                currentPowerSettings
                0x00000000c002c1e4                secondsSinceLastUserIO
 .bss           0x00000000c002c1e8        0x8 krnl/random.32
                0x00000000c002c1e8                kiRandSeed
 .bss           0x00000000c002c1f0        0x0 krnl/resolve.32
 .bss           0x00000000c002c1f0        0x0 krnl/semaphore.32
 .bss           0x00000000c002c1f0        0x0 krnl/signal.32
 .bss           0x00000000c002c1f0        0x0 krnl/syscalls.32
 .bss           0x00000000c002c1f0        0x9 krnl/terminal.32
                0x00000000c002c1f0                terminalCycle
                0x00000000c002c1f4                activeTerminal
                0x00000000c002c1f8                VgaText::graphicMode
 *fill*         0x00000000c002c1f9        0x1 
 .bss           0x00000000c002c1fa        0x2 krnl/tss.32
                0x00000000c002c1fa                doubleFaultSelector
 *fill*         0x00000000c002c1fc        0x4 
 .bss           0x00000000c002c200       0x84 krnl/unixfile.32
                0x00000000c002c200                sfileLpt
                0x00000000c002c240                sfileCom
                0x00000000c002c264                sfileNul
                0x00000000c002c268                sfilePnt
                0x00000000c002c26c                sfileAux
                0x00000000c002c270                sfileCon
                0x00000000c002c274                initialFilesAdded
                0x00000000c002c278                unixFileLinkedList
 .bss           0x00000000c002c284       0x10 krnl/virtmgr.32
                0x00000000c002c284                twswaps
                0x00000000c002c288                swapBalance
                0x00000000c002c28c                Virt::swapfileBitmap
                0x00000000c002c290                keFirstVAS
 .bss           0x00000000c002c294        0x0 sys/alarm.32
 .bss           0x00000000c002c294        0x0 sys/eject.32
 .bss           0x00000000c002c294        0x0 sys/exit.32
 .bss           0x00000000c002c294        0x0 sys/getcwd.32
 .bss           0x00000000c002c294        0x0 sys/getpid.32
 .bss           0x00000000c002c294        0x0 sys/getramdata.32
 .bss           0x00000000c002c294        0x0 sys/getvgaptr.32
 .bss           0x00000000c002c294        0x0 sys/kill.32
 .bss           0x00000000c002c294        0x0 sys/loaddll.32
 .bss           0x00000000c002c294        0x0 sys/pause.32
 .bss           0x00000000c002c294        0x0 sys/pthread.32
 .bss           0x00000000c002c294        0x0 sys/read.32
 .bss           0x00000000c002c294        0x0 sys/registersignal.32
 .bss           0x00000000c002c294        0x0 sys/registry.32
 .bss           0x00000000c002c294        0x0 sys/sbrk.32
 .bss           0x00000000c002c294        0x0 sys/setcwd.32
 .bss           0x00000000c002c294        0x0 sys/settime.32
 .bss           0x00000000c002c294        0x0 sys/symlink.32
 .bss           0x00000000c002c294        0x0 sys/timezone.32
 .bss           0x00000000c002c294        0x0 sys/truncate.32
 .bss           0x00000000c002c294        0x0 sys/write.32
 .bss           0x00000000c002c294        0x0 sys/wsbe.32
 .bss           0x00000000c002c294        0x0 sys/yield.32
 .bss           0x00000000c002c294        0x0 thr/alarm.32
 *fill*         0x00000000c002c294        0xc 
 .bss           0x00000000c002c2a0      0x7a4 thr/elf.32
                0x00000000c002c2a0                Thr::driverLookupNext
                0x00000000c002c2c0                Thr::driverLookupLen
                0x00000000c002c4c0                Thr::driverLookupAddr
                0x00000000c002c6c0                Thr::driverNameLookup
                0x00000000c002c8c0                Thr::kernelSymbols
                0x00000000c002c940                Thr::kernelStringTable
                0x00000000c002c9c0                Thr::kernelSymbolTable
                0x00000000c002ca40                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002ca44        0x0 thr/exec.32
 *fill*         0x00000000c002ca44        0x4 
 .bss           0x00000000c002ca48       0x70 thr/prcssthr.32
                0x00000000c002ca48                keRestorePreemptionValue
                0x00000000c002ca4c                kePreemptionDisableCounter
                0x00000000c002ca50                cleanerThread
                0x00000000c002ca54                weNeedTheCleanerToNotBlock
                0x00000000c002ca58                retValLockStuff
                0x00000000c002ca5c                retValSchedLock
                0x00000000c002ca60                lockStuffLock
                0x00000000c002ca64                schedulerLock
                0x00000000c002ca68                taskSwitchesPostponedFlag
                0x00000000c002ca6c                postponeTaskSwitchesCounter
                0x00000000c002ca70                irqDisableCounter
                0x00000000c002ca74                terminatedTaskList
                0x00000000c002ca80                sleepingTaskList
                0x00000000c002ca8c                taskList
                0x00000000c002ca98                kernelProcess
 *fill*         0x00000000c002cab8        0x8 
 .bss           0x00000000c002cac0       0x40 vm86/vm8086.32
                0x00000000c002cac0                Vm::started8086Yet
                0x00000000c002cac4                Vm::vmRetV
                0x00000000c002cac8                Vm::vmDone
                0x00000000c002cac9                Vm::vmReady
                0x00000000c002cacc                Vm::vm86Thread
                0x00000000c002cad0                Vm::vmToHostCommsPtr
                0x00000000c002cae0                Vm::vmToHostComms
 .bss           0x00000000c002cb00       0x41 arch/i386/apic.32
                0x00000000c002cb00                noOfIOAPICs
                0x00000000c002cb20                ioapics
                0x00000000c002cb40                IOAPICsSetupYet
 *fill*         0x00000000c002cb41        0x3 
 .bss           0x00000000c002cb44       0x50 arch/i386/hal.32
                0x00000000c002cb44                guiPanicHandler
                0x00000000c002cb48                fpuOwner
                0x00000000c002cb4c                coproLoadFunc
                0x00000000c002cb50                coproSaveFunc
                0x00000000c002cb54                lastD
                0x00000000c002cb58                lastC
                0x00000000c002cb5c                lastB
                0x00000000c002cb60                lastA
                0x00000000c002cb64                HalPageWriteCombiningFlag
                0x00000000c002cb68                HalPageGlobalFlag
                0x00000000c002cb6c                keNMIEnabled
                0x00000000c002cb70                vendorIDString
                0x00000000c002cb7d                familyID
                0x00000000c002cb7e                model
                0x00000000c002cb7f                processorType
                0x00000000c002cb80                steppingID
                0x00000000c002cb84                vendor
                0x00000000c002cb88                opcodeDetectionMode
                0x00000000c002cb8c                features
 *fill*         0x00000000c002cb94        0xc 
 .bss           0x00000000c002cba0     0x2000 arch/i386/intctrl.32
                0x00000000c002cba0                keInterruptContexts
                0x00000000c002dba0                keInterruptHandlers
 .bss           0x00000000c002eba0        0x0 arch/i386/pic.32
 .bss           0x00000000c002eba0        0x2 arch/i386/rtc.32
 .bss           0x00000000c002eba2        0x0 arch/i386/vga.32
 *fill*         0x00000000c002eba2       0x1e 
 .bss           0x00000000c002ebc0       0xf0 fs/fat/vfslink.32
                0x00000000c002ebc0                FAT::fats
                0x00000000c002ebe0                FAT::vfsToFatRemaps
                0x00000000c002ec60                fatToVFSRemaps
 .bss           0x00000000c002ecb0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002ecb0       0x10 
 .bss           0x00000000c002ecc0      0x820 fs/iso9660/vfslink.32
                0x00000000c002ecc0                iso9660Owner
                0x00000000c002ecc4                recentSector
                0x00000000c002ece0                recentBuffer
 .bss           0x00000000c002f4e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002f4e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002f4e0        0xd hw/bus/pci.32
                0x00000000c002f4e0                thePCI
 .bss           0x00000000c002f4ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002f4ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002f4ed        0x3 
 .bss           0x00000000c002f4f0        0x8 hw/diskphys/ata.32
                0x00000000c002f4f0                ataSectorsWritten
                0x00000000c002f4f4                ataSectorsRead
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002f4f8        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c002f4f8        0x0 hw/timer/apictimer.32
 .bss           0x00000000c002f4f8        0x4 hw/timer/pit.32
                0x00000000c002f4f8                pitFreq
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002f4fc        0x0 crtn.32
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002f4fc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002f4fc                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00369f7                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
