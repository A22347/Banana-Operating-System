Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x216ba
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0x2 
 .text          0x00000000c00003a4      0x5dd acpica/utclib.32
                0x00000000c00003a4                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004a8                memset
                0x00000000c00004c4                strlen
                0x00000000c00004dc                strpbrk
                0x00000000c0000518                strtok
                0x00000000c0000564                strcpy
                0x00000000c0000588                strncpy
                0x00000000c00005f0                strcmp
                0x00000000c0000630                strchr
                0x00000000c0000654                strncmp
                0x00000000c00006a4                strcat
                0x00000000c00006d4                strncat
                0x00000000c0000710                strstr
                0x00000000c0000758                toupper
                0x00000000c000076c                tolower
                0x00000000c0000780                simple_strtoul
 .text          0x00000000c0000981      0xfad core/malloc.32
                0x00000000c0000aec                dlfree
                0x00000000c0000e47                dlmalloc
                0x00000000c0001384                dlrealloc
                0x00000000c0001527                dlmemalign
                0x00000000c000164a                dlcalloc
                0x00000000c00016e4                dlcfree
                0x00000000c00016e9                dlindependent_calloc
                0x00000000c000170e                dlindependent_comalloc
                0x00000000c0001725                dlvalloc
                0x00000000c0001750                dlpvalloc
                0x00000000c0001786                dlmalloc_trim
                0x00000000c0001793                dlmalloc_usable_size
                0x00000000c00017c4                dlmallinfo
                0x00000000c0001893                dlmalloc_stats
                0x00000000c00018a4                dlmallopt
 .text          0x00000000c000192e        0x0 libk/string.32
 .text          0x00000000c000192e       0x51 fs/fat/diskio.32
                0x00000000c000192e                disk_status
                0x00000000c0001931                disk_initialize
                0x00000000c0001934                disk_read
                0x00000000c000194a                disk_write
                0x00000000c0001960                disk_ioctl
 .text          0x00000000c000197f     0x6a69 fs/fat/ff.32
                0x00000000c0004c4d                f_mount
                0x00000000c0004caf                f_open
                0x00000000c00050eb                f_read
                0x00000000c000536b                f_write
                0x00000000c0005625                f_sync
                0x00000000c0005801                f_close
                0x00000000c0005830                f_lseek
                0x00000000c0005ce7                f_opendir
                0x00000000c0005de9                f_closedir
                0x00000000c0005e0b                f_readdir
                0x00000000c0005ea6                f_stat
                0x00000000c0005f35                f_getfree
                0x00000000c0006100                f_truncate
                0x00000000c00061f8                f_unlink
                0x00000000c000637b                f_mkdir
                0x00000000c00065a7                f_rename
                0x00000000c000689a                f_chmod
                0x00000000c0006978                f_utime
                0x00000000c0006a56                f_getlabel
                0x00000000c0006c44                f_setlabel
                0x00000000c0006eb1                f_expand
                0x00000000c00070e7                f_forward
                0x00000000c00072c5                f_mkfs
 .text          0x00000000c00083e8       0x2f fs/fat/ffsystem.32
                0x00000000c00083e8                ff_memalloc
                0x00000000c0008400                ff_memfree
 *fill*         0x00000000c0008417        0x1 
 .text          0x00000000c0008418      0x274 fs/fat/ffunicode.32
                0x00000000c0008418                ff_uni2oem
                0x00000000c00084b0                ff_oem2uni
                0x00000000c0008524                ff_wtoupper
 .text          0x00000000c000868c       0xa7 compat/inlines.32
                0x00000000c000868c                CPU::current()
                0x00000000c0008698                operator new(unsigned long)
                0x00000000c000869d                operator delete(void*)
                0x00000000c00086a2                disableIRQs()
                0x00000000c00086aa                enableIRQs()
                0x00000000c00086b9                lockScheduler()
                0x00000000c00086c1                unlockScheduler()
                0x00000000c00086d0                lockStuff()
                0x00000000c00086de                unlockStuff()
                0x00000000c0008718                Virt::getAKernelVAS()
                0x00000000c000871e                __not_memcpy
 *fill*         0x00000000c0008733        0x1 
 .text          0x00000000c0008734      0x118 compat/resolve.32
                0x00000000c0008734                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c000884c      0x783 core/computer.32
                0x00000000c000884c                Computer::close(int, int, void*)
                0x00000000c0008890                Krnl::firstTask()
                0x00000000c00089e4                Computer::Computer()
                0x00000000c00089e4                Computer::Computer()
                0x00000000c0008b40                Computer::setBootMessage(char const*)
                0x00000000c0008b42                Computer::detectFeatures()
                0x00000000c0008d4c                Computer::displayFeatures()
                0x00000000c0008d4e                Computer::rdmsr(unsigned int)
                0x00000000c0008d7a                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0008db2                Computer::shutdown()
                0x00000000c0008dca                Computer::restart()
                0x00000000c0008de2                Computer::sleep()
                0x00000000c0008df6                Computer::nmiEnabled()
                0x00000000c0008e02                Computer::readCMOS(unsigned char)
                0x00000000c0008e1c                Computer::enableNMI(bool)
                0x00000000c0008e34                Computer::open(int, int, void*)
                0x00000000c0008f12                Computer::disableNMI()
                0x00000000c0008f20                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0008f3e                Computer::handleNMI()
                0x00000000c0008fa4                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c0008fcf        0x1 
 .text          0x00000000c0008fd0      0x211 core/gdt.32
                0x00000000c0008fd0                GDTEntry::setBase(unsigned int)
                0x00000000c0008fec                GDTEntry::setLimit(unsigned int)
                0x00000000c000900a                GDT::GDT()
                0x00000000c000900a                GDT::GDT()
                0x00000000c0009020                GDT::addEntry(GDTEntry)
                0x00000000c0009042                GDT::getNumberOfEntries()
                0x00000000c000904a                GDT::flush()
                0x00000000c000906c                GDT::setup()
 .text          0x00000000c00091e1       0x19 core/idle.32
                0x00000000c00091e1                idleFunction(void*)
 *fill*         0x00000000c00091fa        0x2 
 .text          0x00000000c00091fc      0x464 core/idt.32
                0x00000000c00091fc                IDTEntry::IDTEntry(bool)
                0x00000000c00091fc                IDTEntry::IDTEntry(bool)
                0x00000000c000926e                IDTEntry::setOffset(unsigned int)
                0x00000000c0009284                IDT::IDT()
                0x00000000c0009284                IDT::IDT()
                0x00000000c0009286                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000928e                IDT::addEntry(IDTEntry, int)
                0x00000000c00092a8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00092e0                IDT::flush()
                0x00000000c00092fa                IDT::setup()
 .text          0x00000000c0009660      0x191 core/kheap.32
                0x00000000c0009660                sbrk
                0x00000000c0009703                mmap
                0x00000000c0009719                munmap
                0x00000000c000972f                liballoc_lock()
                0x00000000c000973c                liballoc_unlock()
                0x00000000c0009750                liballoc_alloc(int)
                0x00000000c0009768                liballoc_free(void*, int)
                0x00000000c0009783                realloc
                0x00000000c0009797                malloc
                0x00000000c00097a7                free
                0x00000000c00097b7                rfree
                0x00000000c00097c7                calloc
 .text          0x00000000c00097f1      0x1bf core/main.32
                0x00000000c00097f1                Krnl::setBootMessage(char const*)
                0x00000000c000985d                kernel_main
 .text          0x00000000c00099b0      0x668 core/physmgr.32
                0x00000000c00099b0                Phys::allocateDMA(unsigned long)
                0x00000000c0009abf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0009b05                Phys::setPageState(unsigned long, bool)
                0x00000000c0009b37                Phys::getPageState(unsigned long)
                0x00000000c0009b53                Phys::freePage(unsigned long)
                0x00000000c0009bd6                Phys::allocatePage()
                0x00000000c0009cc1                Phys::allocateContiguousPages(int)
                0x00000000c0009d1d                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0009d55                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000a018      0x273 core/pipe.32
                0x00000000c000a018                Pipe::isAtty()
                0x00000000c000a01c                Pipe::~Pipe()
                0x00000000c000a01c                Pipe::~Pipe()
                0x00000000c000a040                Pipe::~Pipe()
                0x00000000c000a068                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000a128                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000a224                Pipe::Pipe(int)
                0x00000000c000a224                Pipe::Pipe(int)
 *fill*         0x00000000c000a28b        0x1 
 .text          0x00000000c000a28c      0xa8a core/terminal.32
                0x00000000c000a28c                VgaText::isAtty()
                0x00000000c000a290                VgaText::~VgaText()
                0x00000000c000a290                VgaText::~VgaText()
                0x00000000c000a2b4                VgaText::~VgaText()
                0x00000000c000a2de                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000a2fe                setTerminalScrollLock(bool)
                0x00000000c000a2ff                addToTerminalCycle(VgaText*)
                0x00000000c000a320                scrollTerminalScrollLock(int)
                0x00000000c000a322                VgaText::updateTitle()
                0x00000000c000a324                VgaText::load()
                0x00000000c000a326                VgaText::updateCursor()
                0x00000000c000a33c                VgaText::doANSI_SGR(int)
                0x00000000c000a3b0                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000a3c0                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000a3d0                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000a3f0                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000a3fc                VgaText::setTitleColour(VgaColour)
                0x00000000c000a408                VgaText::setTitle(char*)
                0x00000000c000a416                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000a428                VgaText::scrollScreen()
                0x00000000c000a4c0                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000a4d2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000a562                VgaText::getCursorX()
                0x00000000c000a56a                VgaText::getCursorY()
                0x00000000c000a572                VgaText::setCursor(int, int)
                0x00000000c000a589                setActiveTerminal(VgaText*)
                0x00000000c000a5e3                doTerminalCycle()
                0x00000000c000a5fe                VgaText::clearScreen()
                0x00000000c000a64c                VgaText::setCursorX(int)
                0x00000000c000a664                VgaText::setCursorY(int)
                0x00000000c000a67c                VgaText::incrementCursor(bool)
                0x00000000c000a6d0                VgaText::decrementCursor(bool)
                0x00000000c000a6f2                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000a7c0                VgaText::putchar(char)
                0x00000000c000a8ac                VgaText::putx(unsigned int)
                0x00000000c000a8f2                VgaText::puts(char const*)
                0x00000000c000a918                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000a964                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000aab2                VgaText::VgaText(char const*)
                0x00000000c000aab2                VgaText::VgaText(char const*)
                0x00000000c000ac18                VgaText::receiveKey(unsigned char)
                0x00000000c000acf0                VgaText::doUpdate()
                0x00000000c000acf1                newTerminal(char*)
 *fill*         0x00000000c000ad16        0x2 
 .text          0x00000000c000ad18      0x1a1 core/tss.32
                0x00000000c000ad18                TSS::TSS()
                0x00000000c000ad18                TSS::TSS()
                0x00000000c000ad28                TSS::setESP(unsigned long)
                0x00000000c000ad3c                TSS::flush()
                0x00000000c000ad5c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000aeb9        0x1 
 .text          0x00000000c000aeba      0x4c2 core/unixfile.32
                0x00000000c000aeba                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000af10                ReservedFilename::isAtty()
                0x00000000c000af2c                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000af8a                UnixFile::getFileDescriptor()
                0x00000000c000af92                UnixFile::UnixFile(int)
                0x00000000c000af92                UnixFile::UnixFile(int)
                0x00000000c000b142                ReservedFilename::ReservedFilename(int)
                0x00000000c000b142                ReservedFilename::ReservedFilename(int)
                0x00000000c000b174                UnixFile::~UnixFile()
                0x00000000c000b174                UnixFile::~UnixFile()
                0x00000000c000b20c                UnixFile::~UnixFile()
                0x00000000c000b234                ReservedFilename::~ReservedFilename()
                0x00000000c000b234                ReservedFilename::~ReservedFilename()
                0x00000000c000b258                ReservedFilename::~ReservedFilename()
                0x00000000c000b27f                getFromFileDescriptor(int)
 .text          0x00000000c000b37c     0x124e core/virtmgr.32
                0x00000000c000b37c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000b3b1                Virt::getPageState(unsigned long)
                0x00000000c000b3d5                Virt::allocateKernelVirtualPages(int)
                0x00000000c000b4e6                Virt::freeSwapfilePage(unsigned long)
                0x00000000c000b504                Virt::swapIDToSector(unsigned long)
                0x00000000c000b516                Virt::allocateSwapfilePage()
                0x00000000c000b594                Virt::virtualMemorySetup()
                0x00000000c000b5df                Virt::setupPageSwapping(int)
                0x00000000c000b650                VAS::VAS(VAS*)
                0x00000000c000b650                VAS::VAS(VAS*)
                0x00000000c000b67e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000b6aa                VAS::getPageTableEntry(unsigned long)
                0x00000000c000b6c9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000b7ec                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000b810                VAS::virtualToPhysical(unsigned long)
                0x00000000c000b828                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000b868                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000b89a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000b8c4                VAS::~VAS()
                0x00000000c000b8c4                VAS::~VAS()
                0x00000000c000ba40                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000bb44                VAS::allocatePages(int, int)
                0x00000000c000bd1c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000bd38                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000bdfe                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000beec                VAS::VAS(bool)
                0x00000000c000beec                VAS::VAS(bool)
                0x00000000c000c16c                VAS::VAS()
                0x00000000c000c16c                VAS::VAS()
                0x00000000c000c1dc                VAS::evict(unsigned long)
                0x00000000c000c2ac                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000c3c0                VAS::scanForEviction()
                0x00000000c000c49e                mapVASFirstTime
 .text          0x00000000c000c5ca       0x95 coreobjs/c++.32
                0x00000000c000c5ca                __cxa_atexit
                0x00000000c000c5cd                __cxa_finalize
                0x00000000c000c5ce                __stack_chk_fail
                0x00000000c000c63a                __cxa_pure_virtual
                0x00000000c000c64b                operator new[](unsigned long)
                0x00000000c000c650                operator delete(void*, unsigned long)
                0x00000000c000c655                operator delete[](void*)
                0x00000000c000c65a                operator delete[](void*, unsigned long)
 .text          0x00000000c000c65f      0x1fc dbg/kconsole.32
                0x00000000c000c65f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000c6b8                Dbg::logc(char)
                0x00000000c000c6d8                Dbg::logs(char*)
                0x00000000c000c6f5                Dbg::logWriteInt(unsigned int)
                0x00000000c000c712                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000c731                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000c85b        0x1 
 .text          0x00000000c000c85c      0xcac fs/vfs.32
                0x00000000c000c85c                File::read(unsigned long long, void*, int*)
                0x00000000c000c8b4                File::write(unsigned long long, void*, int*)
                0x00000000c000c90c                Directory::read(unsigned long long, void*, int*)
                0x00000000c000c964                Directory::write(unsigned long long, void*, int*)
                0x00000000c000c992                File::isAtty()
                0x00000000c000c996                Directory::isAtty()
                0x00000000c000c99a                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000c9a0                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000c9a6                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000c9ac                File::~File()
                0x00000000c000c9ac                File::~File()
                0x00000000c000c9d0                File::~File()
                0x00000000c000c9fa                Directory::~Directory()
                0x00000000c000c9fa                Directory::~Directory()
                0x00000000c000ca1e                Directory::~Directory()
                0x00000000c000ca48                Filesystem::Filesystem()
                0x00000000c000ca48                Filesystem::Filesystem()
                0x00000000c000ca6c                Filesystem::~Filesystem()
                0x00000000c000ca6c                Filesystem::~Filesystem()
                0x00000000c000ca7a                Filesystem::~Filesystem()
                0x00000000c000ca9e                Fs::getcwd(Process*, char*, int)
                0x00000000c000cac8                Fs::initVFS()
                0x00000000c000caf2                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000cc9c                File::File(char const*, Process*)
                0x00000000c000cc9c                File::File(char const*, Process*)
                0x00000000c000cd76                File::open(FileOpenMode)
                0x00000000c000cdd4                File::close()
                0x00000000c000ce34                File::seek(unsigned long long)
                0x00000000c000ce8a                File::tell(unsigned long long*)
                0x00000000c000ceda                File::rewind()
                0x00000000c000ceee                File::unlink()
                0x00000000c000cf3a                File::rename(char const*)
                0x00000000c000cf88                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000cfe4                File::exists()
                0x00000000c000d022                File::stat(unsigned long long*, bool*)
                0x00000000c000d083                Fs::setcwd(Process*, char*)
                0x00000000c000d1fc                Directory::Directory(char const*, Process*)
                0x00000000c000d1fc                Directory::Directory(char const*, Process*)
                0x00000000c000d2d6                Directory::open()
                0x00000000c000d332                Directory::close()
                0x00000000c000d392                Directory::unlink()
                0x00000000c000d3de                Directory::rename(char const*)
                0x00000000c000d42c                Directory::exists()
                0x00000000c000d46a                Directory::read(dirent*)
                0x00000000c000d4b6                Directory::create()
                0x00000000c000d502                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000d508       0x86 hal/bus.32
                0x00000000c000d508                Bus::Bus(char const*)
                0x00000000c000d508                Bus::Bus(char const*)
                0x00000000c000d540                Bus::~Bus()
                0x00000000c000d540                Bus::~Bus()
                0x00000000c000d564                Bus::~Bus()
 .text          0x00000000c000d58e       0x96 hal/buzzer.32
                0x00000000c000d58e                beepThread(void*)
                0x00000000c000d5cb                Krnl::beep(int, int, bool)
 .text          0x00000000c000d624      0x467 hal/clock.32
                0x00000000c000d624                User::loadClockSettings(int)
                0x00000000c000d676                Clock::Clock(char const*)
                0x00000000c000d676                Clock::Clock(char const*)
                0x00000000c000d6ac                Clock::~Clock()
                0x00000000c000d6ac                Clock::~Clock()
                0x00000000c000d6d0                Clock::~Clock()
                0x00000000c000d6fa                Clock::timeInSecondsLocal()
                0x00000000c000d742                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000d79b                datetimeToSeconds(datetime_t)
                0x00000000c000d8c2                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000d922                secondsToDatetime(unsigned long long)
                0x00000000c000da66                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000da8b        0x1 
 .text          0x00000000c000da8c      0x4d0 hal/device.32
                0x00000000c000da8c                Device::hibernate()
                0x00000000c000da8e                Device::wake()
                0x00000000c000da90                Device::detect()
                0x00000000c000da92                Device::disableLegacy()
                0x00000000c000da94                Device::powerSaving(PowerSavingLevel)
                0x00000000c000da96                DriverlessDevice::close(int, int, void*)
                0x00000000c000da9a                DriverlessDevice::detect()
                0x00000000c000da9c                DriverlessDevice::open(int, int, void*)
                0x00000000c000dab0                Device::~Device()
                0x00000000c000dab0                Device::~Device()
                0x00000000c000dabe                Device::~Device()
                0x00000000c000dae6                Device::findAndLoadDriver()
                0x00000000c000daf4                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000db1a                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000db5a                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000db84                Device::getParent()
                0x00000000c000db90                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000dbae                Device::addChild(Device*)
                0x00000000c000dbf2                Device::removeAllChildren()
                0x00000000c000dc38                Device::hibernateAll()
                0x00000000c000dc68                Device::wakeAll()
                0x00000000c000dc98                Device::detectAll()
                0x00000000c000dcc8                Device::disableLegacyAll()
                0x00000000c000dcf8                Device::loadDriversForAll()
                0x00000000c000dd38                Device::closeAll()
                0x00000000c000dd6e                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000dda4                Device::setName(char const*)
                0x00000000c000ddb2                Device::Device(char const*)
                0x00000000c000ddb2                Device::Device(char const*)
                0x00000000c000deae                Device::getName()
                0x00000000c000deb8                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000deb8                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000deee                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000df32                getDevicesOfType(DeviceType)
 .text          0x00000000c000df5c       0x86 hal/diskctrl.32
                0x00000000c000df5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000df5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000df94                HardDiskController::~HardDiskController()
                0x00000000c000df94                HardDiskController::~HardDiskController()
                0x00000000c000dfb8                HardDiskController::~HardDiskController()
 .text          0x00000000c000dfe2       0xe2 hal/diskphys.32
                0x00000000c000dfe2                PhysicalDisk::eject()
                0x00000000c000dfe6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000dfe6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000e04e                PhysicalDisk::startCache()
                0x00000000c000e076                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e076                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e09a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000e0c4        0x0 hal/fpu.32
 .text          0x00000000c000e0c4      0x34c hal/intctrl.32
                0x00000000c000e0c4                int_handler
                0x00000000c000e14c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000e194                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000e2bf                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000e2f3                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000e371                setupINTS()
                0x00000000c000e3ce                convertLegacyIRQNumber(int)
 .text          0x00000000c000e410      0x778 hal/keybrd.32
                0x00000000c000e410                startGUI(void*)
                0x00000000c000e47c                startGUIVESA(void*)
                0x00000000c000e4e8                sendKeyToTerminal(unsigned char)
                0x00000000c000e5a6                sendKeyboardToken(KeyboardToken)
                0x00000000c000e9d8                clearInternalKeybuffer(VgaText*)
                0x00000000c000ea0d                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000eafe                Keyboard::Keyboard(char const*)
                0x00000000c000eafe                Keyboard::Keyboard(char const*)
                0x00000000c000eb3a                Keyboard::~Keyboard()
                0x00000000c000eb3a                Keyboard::~Keyboard()
                0x00000000c000eb5e                Keyboard::~Keyboard()
 .text          0x00000000c000eb88      0x42a hal/logidisk.32
                0x00000000c000eb88                LogicalDisk::close(int, int, void*)
                0x00000000c000eb8c                LogicalDisk::~LogicalDisk()
                0x00000000c000eb8c                LogicalDisk::~LogicalDisk()
                0x00000000c000ebb0                LogicalDisk::~LogicalDisk()
                0x00000000c000ebda                LogicalDisk::open(int, int, void*)
                0x00000000c000ebee                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000ec26                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000ec6c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ec6c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ed22                LogicalDisk::assignDriveLetter()
                0x00000000c000edd8                LogicalDisk::mount()
                0x00000000c000ee60                LogicalDisk::unmount()
                0x00000000c000ee70                LogicalDisk::eject()
                0x00000000c000ee84                LogicalDisk::unassignDriveLetter()
                0x00000000c000eeda                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ef46                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000efb2        0x2 
 .text          0x00000000c000efb4       0x86 hal/mouse.32
                0x00000000c000efb4                Mouse::Mouse(char const*)
                0x00000000c000efb4                Mouse::Mouse(char const*)
                0x00000000c000efec                Mouse::~Mouse()
                0x00000000c000efec                Mouse::~Mouse()
                0x00000000c000f010                Mouse::~Mouse()
 .text          0x00000000c000f03a      0x339 hal/partition.32
                0x00000000c000f03a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000f0e2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000f373        0x1 
 .text          0x00000000c000f374       0x86 hal/serial.32
                0x00000000c000f374                Serial::Serial(char const*)
                0x00000000c000f374                Serial::Serial(char const*)
                0x00000000c000f3ac                Serial::~Serial()
                0x00000000c000f3ac                Serial::~Serial()
                0x00000000c000f3d0                Serial::~Serial()
 *fill*         0x00000000c000f3fa        0x2 
 .text          0x00000000c000f3fc      0x234 hal/timer.32
                0x00000000c000f3fc                Timer::Timer(char const*)
                0x00000000c000f3fc                Timer::Timer(char const*)
                0x00000000c000f434                Timer::~Timer()
                0x00000000c000f434                Timer::~Timer()
                0x00000000c000f458                Timer::~Timer()
                0x00000000c000f482                Timer::read()
                0x00000000c000f48d                setupTimer(int)
                0x00000000c000f4c8                timerHandler(unsigned int)
 .text          0x00000000c000f630      0x43e hal/vcache.32
                0x00000000c000f630                VCache::VCache(PhysicalDisk*)
                0x00000000c000f630                VCache::VCache(PhysicalDisk*)
                0x00000000c000f798                VCache::invalidateReadBuffer()
                0x00000000c000f7a8                VCache::writeWriteBuffer()
                0x00000000c000f7f4                VCache::~VCache()
                0x00000000c000f7f4                VCache::~VCache()
                0x00000000c000f848                VCache::~VCache()
                0x00000000c000f870                VCache::write(unsigned long long, int, void*)
                0x00000000c000f96a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000fa6e      0x4b3 hal/video.32
                0x00000000c000fa6e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000faba                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000fb2a                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000fba8                Video::clearScreen(unsigned int)
                0x00000000c000fbdc                Video::putpixel(int, int, unsigned int)
                0x00000000c000fbea                Video::Video(char const*)
                0x00000000c000fbea                Video::Video(char const*)
                0x00000000c000fc20                Video::~Video()
                0x00000000c000fc20                Video::~Video()
                0x00000000c000fc44                Video::~Video()
                0x00000000c000fc6e                Video::isMonochrome()
                0x00000000c000fc7a                Video::getWidth()
                0x00000000c000fc86                Video::getHeight()
                0x00000000c000fc92                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000fd4e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000feb6                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ff21        0x3 
 .text          0x00000000c000ff24     0x16bf hw/acpi.32
                0x00000000c000ff24                ACPI::close(int, int, void*)
                0x00000000c000ffd8                findRSDP()
                0x00000000c00100ac                loadACPITables(unsigned char*)
                0x00000000c0010310                findRSDT(unsigned char*)
                0x00000000c00104d0                findDataTable(unsigned char*, char*)
                0x00000000c0010548                scanMADT()
                0x00000000c0010a24                ACPI::ACPI()
                0x00000000c0010a24                ACPI::ACPI()
                0x00000000c0010a88                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0010b70                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0010c38                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0010c40                ACPI::detectPCI()
                0x00000000c0011124                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c001116c                ACPI::sleep()
                0x00000000c00111a8                ACPI::open(int, int, void*)
 *fill*         0x00000000c00115e3        0x1 
 .text          0x00000000c00115e4      0xdcb hw/cpu.32
                0x00000000c00115e4                CPU::close(int, int, void*)
                0x00000000c00115e8                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0011604                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001161c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0011690                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0011714                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0011742                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0011770                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001179e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00117cc                CPU::CPU()
                0x00000000c00117cc                CPU::CPU()
                0x00000000c001185a                CPU::displayFeatures()
                0x00000000c001185c                CPU::detectFeatures()
                0x00000000c0011f32                CPU::setupSMEP()
                0x00000000c0011f3e                CPU::setupUMIP()
                0x00000000c0011f48                CPU::setupTSC()
                0x00000000c0011f52                CPU::setupLargePages()
                0x00000000c0011f5c                CPU::setupPAT()
                0x00000000c0011f98                CPU::setupMTRR()
                0x00000000c0011f9a                CPU::setupGlobalPages()
                0x00000000c0011fa4                CPU::allowUsermodeDataAccess()
                0x00000000c0011fb6                CPU::prohibitUsermodeDataAccess()
                0x00000000c0011fc8                CPU::setupSMAP()
                0x00000000c0011fd6                CPU::setupFeatures()
                0x00000000c00120a2                CPU::open(int, int, void*)
                0x00000000c00121b4                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c00123af      0x16a hw/smp.32
                0x00000000c00123af                Krnl::smpEntry()
                0x00000000c00123b1                Krnl::startCPU(int)
                0x00000000c00124fa                Krnl::startCPUs()
 *fill*         0x00000000c0012519        0x1 
 .text          0x00000000c001251a      0x581 krnl/env.32
                0x00000000c001251a                EnvVarContainer::getEnv(char const*)
                0x00000000c0012558                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001261a                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001261c                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0012802                EnvVarContainer::__loadSystem()
                0x00000000c001281c                EnvVarContainer::__loadUser()
                0x00000000c001281e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001281e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0012840                EnvVarContainer::~EnvVarContainer()
                0x00000000c0012840                EnvVarContainer::~EnvVarContainer()
                0x00000000c0012870                Krnl::getEnv(Process*, char const*)
                0x00000000c00128d5                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00128ef                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001290e                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0012921                Krnl::deleteEnvSystem(char const*)
                0x00000000c0012922                Krnl::deleteEnvUser(char const*)
                0x00000000c0012923                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0012924                Krnl::newProcessEnv(Process*)
                0x00000000c0012946                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0012992                Krnl::loadSystemEnv()
                0x00000000c00129c0                Krnl::loadUserEnv()
                0x00000000c00129e6                Krnl::flushEnv()
                0x00000000c00129e7                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0012a07                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0012a9b      0x243 krnl/panic.32
                0x00000000c0012a9b                Krnl::panic(char const*)
 .text          0x00000000c0012cde      0x194 krnl/powctrl.32
                0x00000000c0012cde                Krnl::powerThread(void*)
                0x00000000c0012d5e                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0012d74                Krnl::userIOReceived()
                0x00000000c0012d7f                Krnl::handlePowerButton()
                0x00000000c0012db4                Krnl::handleSleepButton()
                0x00000000c0012de9                Krnl::setupPowerManager()
 .text          0x00000000c0012e72      0x50e reg/registry.32
                0x00000000c0012e72                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012fca                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001311f                Reg::getLine(char*, char*, char*)
                0x00000000c0013156                Reg::readInt(char*, char*, int*)
                0x00000000c0013241                Reg::readString(char*, char*, char*, int)
                0x00000000c00132c2                Reg::readBool(char*, char*, bool*)
                0x00000000c00132e7                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013313                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001333f                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013380       0x36 sys/sc_eject.32
                0x00000000c0013380                Sys::eject(regs*)
 .text          0x00000000c00133b6       0x18 sys/sc_exit.32
                0x00000000c00133b6                Sys::exit(regs*)
 .text          0x00000000c00133ce       0x1f sys/sc_getcwd.32
                0x00000000c00133ce                Sys::getCwd(regs*)
 .text          0x00000000c00133ed        0xc sys/sc_getpid.32
                0x00000000c00133ed                Sys::getPID(regs*)
 .text          0x00000000c00133f9       0x1a sys/sc_getramdata.32
                0x00000000c00133f9                Sys::getRAMData(regs*)
 .text          0x00000000c0013413       0x84 sys/sc_getvgaptr.32
                0x00000000c0013413                Sys::getVGAPtr(regs*)
 .text          0x00000000c0013497       0xa8 sys/sc_loaddll.32
                0x00000000c0013497                Sys::loadDLL(regs*)
 .text          0x00000000c001353f       0x68 sys/sc_read.32
                0x00000000c001353f                Sys::read(regs*)
 .text          0x00000000c00135a7       0x55 sys/sc_sbrk.32
                0x00000000c00135a7                Sys::sbrk(regs*)
 .text          0x00000000c00135fc       0x1c sys/sc_setcwd.32
                0x00000000c00135fc                Sys::setCwd(regs*)
 .text          0x00000000c0013618       0x95 sys/sc_settime.32
                0x00000000c0013618                Sys::setTime(regs*)
 .text          0x00000000c00136ad       0x4a sys/sc_timezone.32
                0x00000000c00136ad                Sys::timezone(regs*)
 .text          0x00000000c00136f7       0x68 sys/sc_write.32
                0x00000000c00136f7                Sys::write(regs*)
 .text          0x00000000c001375f       0x62 sys/sc_wsbe.32
                0x00000000c001375f                Sys::wsbe(regs*)
 .text          0x00000000c00137c1       0x38 sys/sc_yield.32
                0x00000000c00137c1                Sys::yield(regs*)
 .text          0x00000000c00137f9      0xe70 sys/syscalls.32
                0x00000000c00137f9                sysCallSeekDir(regs*)
                0x00000000c00137fe                sysCallTellDir(regs*)
                0x00000000c0013803                sysCallVerify(regs*)
                0x00000000c001380d                sysCallGetArgc(regs*)
                0x00000000c001381d                sysFormatDisk(regs*)
                0x00000000c0013887                sysSetDiskVolumeLabel(regs*)
                0x00000000c00138d1                sysGetDiskVolumeLabel(regs*)
                0x00000000c0013926                sysShutdown(regs*)
                0x00000000c0013984                sysCallRealpath(regs*)
                0x00000000c00139c7                sysCallReadDir(regs*)
                0x00000000c0013a46                sysCallIsATTY(regs*)
                0x00000000c0013aa0                sysCallSeek(regs*)
                0x00000000c0013af7                sysCallTell(regs*)
                0x00000000c0013b63                sysCallSize(regs*)
                0x00000000c0013bd5                sysCallSizeFromFilename(regs*)
                0x00000000c0013c84                sysCallClose(regs*)
                0x00000000c0013ce4                sysCallOpenDir(regs*)
                0x00000000c0013d59                sysCallCloseDir(regs*)
                0x00000000c0013dad                sysCallMakeDir(regs*)
                0x00000000c0013e1d                sysCallWait(regs*)
                0x00000000c0013e37                sysCallNotImpl(regs*)
                0x00000000c0013e52                sysPanic(regs*)
                0x00000000c0013e6c                sysCallRmdir(regs*)
                0x00000000c0013ed0                sysCallUnlink(regs*)
                0x00000000c0013f34                sysCallGetArgv(regs*)
                0x00000000c0013f80                sysCallTTYName(regs*)
                0x00000000c0014003                sysCallUSleep(regs*)
                0x00000000c001402c                sysCallSpawn(regs*)
                0x00000000c0014094                sysCallGetEnv(regs*)
                0x00000000c0014141                sysSetFatAttrib(regs*)
                0x00000000c00141b3                sysPipe(regs*)
                0x00000000c00141f8                sysGetUnixTime(regs*)
                0x00000000c001420c                string_ends_with(char const*, char const*)
                0x00000000c0014254                sysCallOpen(regs*)
                0x00000000c001443c                Sys::loadSyscalls()
                0x00000000c0014627                Sys::systemCall(regs*, void*)
 .text          0x00000000c0014669     0x1203 thr/elf.32
                0x00000000c0014669                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014913                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014b29                Thr::runtimeReferenceHelper()
                0x00000000c0014b3c                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014b8b                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014e49                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001557f                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00155b1                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00155e8                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015602                Thr::loadDLL(char const*, bool)
                0x00000000c0015833                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001586c     0x12a1 thr/prcssthr.32
                0x00000000c001586c                userModeEntryPoint(void*)
                0x00000000c0015894                changeTSS
                0x00000000c00158c4                switchToThread(ThreadControlBlock*)
                0x00000000c0015970                Process::addArgs(char**)
                0x00000000c00159d0                Process::Process(char const*, Process*, char**)
                0x00000000c00159d0                Process::Process(char const*, Process*, char**)
                0x00000000c0015bbc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015bbc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015d74                taskStartupFunction
                0x00000000c0015d80                Semaphore::Semaphore(int)
                0x00000000c0015d80                Semaphore::Semaphore(int)
                0x00000000c0015db0                Mutex::Mutex()
                0x00000000c0015db0                Mutex::Mutex()
                0x00000000c0015dc4                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015ebc                Process::createUserThread()
                0x00000000c0015ed8                setupMultitasking(void (*)())
                0x00000000c0015fe0                schedule()
                0x00000000c001606c                Semaphore::tryAcquire()
                0x00000000c0016138                Semaphore::assertLocked(char const*)
                0x00000000c00161b0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00161d8                blockTask(TaskState)
                0x00000000c0016208                waitTask(int, int*, int)
                0x00000000c001624c                milliTenthSleepUntil(unsigned int)
                0x00000000c00162d8                milliTenthSleep(unsigned int)
                0x00000000c00162e8                sleep(unsigned int)
                0x00000000c0016304                Semaphore::acquire()
                0x00000000c00163c0                taskReturned
                0x00000000c00163fc                Thr::processFromPID(int)
                0x00000000c001649c                unblockTask(ThreadControlBlock*)
                0x00000000c0016540                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016808                cleanerTaskFunction(void*)
                0x00000000c00168f8                terminateTask(int)
                0x00000000c00169c4                Thr::terminateFromIRQ(int)
                0x00000000c00169d0                Semaphore::release()
 .text          0x00000000c0016b0d      0xb93 vm86/vm8086.32
                0x00000000c0016b0d                Vm::inbv(unsigned short)
                0x00000000c0016b20                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016b56                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016b66                Vm::getSegment(unsigned int)
                0x00000000c0016b6e                Vm::getOffset(unsigned int)
                0x00000000c0016b73                Vm::mainloop2()
                0x00000000c0016bad                Vm::mainVm8086Loop(void*)
                0x00000000c0016bbd                Vm::mainloop3(unsigned long)
                0x00000000c0016be3                Vm::initialise8086()
                0x00000000c0016c26                Vm::finish8086()
                0x00000000c0016c87                Vm::getOutput8086(unsigned char*)
                0x00000000c0016cac                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016d65                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016ecd                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016f57                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016f68                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016f7a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016f8b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016fa0                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016fb6                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016fcb                Vm::faultHandler(regs*)
 .text          0x00000000c00176a0      0xfcd vm86/x87em.32
                0x00000000c00176a0                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c00176fe                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c0017707                Vm::fpu32ToInternal(unsigned int)
                0x00000000c001774c                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c0017755                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c00177b4                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c00177f0                Vm::fpuLongToFloat(long long)
                0x00000000c001784f                Vm::fpuGet0()
                0x00000000c0017854                Vm::fpuGet1()
                0x00000000c001785c                Vm::fpuGetPi()
                0x00000000c0017864                Vm::fpuGetLog2E()
                0x00000000c001787c                Vm::fpuGetLogE2()
                0x00000000c0017894                Vm::fpuGetLog210()
                0x00000000c00178ac                Vm::fpuGetLog102()
                0x00000000c00178c4                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c00178d8                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c00178ee                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c0017944                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c0017955                Vm::fpuAbs(unsigned long long)
                0x00000000c001795e                Vm::fpuChs(unsigned long long)
                0x00000000c001796e                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c001797d                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c001799c                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c00179b8                Vm::fpuSquare(unsigned long long)
                0x00000000c00179ce                Vm::fpuGetReg(int)
                0x00000000c0017a11                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c0017a5d                Vm::fpuPush(unsigned long long)
                0x00000000c0017abb                Vm::fpuPop()
                0x00000000c0017b0e                Vm::x87Handler(regs*)
 .text          0x00000000c001866d     0x1096 arch/i386/hal.32
                0x00000000c001866d                Hal::noCopro(unsigned long)
                0x00000000c001866e                Hal::noTSC()
                0x00000000c0018673                Hal::readTSC()
                0x00000000c0018676                nmiHandler(regs*, void*)
                0x00000000c001868f                doubleFault(regs*, void*)
                0x00000000c00186a8                displayDebugInfo(regs*)
                0x00000000c0018cfc                displayProgramFault(char const*)
                0x00000000c0018d39                gpFault(regs*, void*)
                0x00000000c0018dae                pgFault(regs*, void*)
                0x00000000c0018e38                otherISRHandler(regs*, void*)
                0x00000000c0018e8c                opcodeFault(regs*, void*)
                0x00000000c0019286                i386SaveCoprocessor(void*)
                0x00000000c001929a                i386LoadCoprocessor(void*)
                0x00000000c00192ae                x87EmulHandler(regs*, void*)
                0x00000000c001936e                Hal::initialiseCoprocessor()
                0x00000000c0019450                Hal::panic(char const*)
                0x00000000c0019455                Hal::initialise()
                0x00000000c0019695                Hal::makeBeep(int)
                0x00000000c00196cf                Hal::getRand()
                0x00000000c00196d2                Hal::endOfInterrupt(int)
 *fill*         0x00000000c0019703        0x1 
 .text          0x00000000c0019704      0x2dc arch/i386/pic.32
                0x00000000c0019704                picIoWait()
                0x00000000c001970c                picDisable()
                0x00000000c0019740                picGetIRQReg(int)
                0x00000000c00197bc                picOpen()
                0x00000000c0019940                picEOI(int)
 .text          0x00000000c00199e0      0x724 arch/i386/rtc.32
                0x00000000c00199e0                RTC::open(int, int, void*)
                0x00000000c00199e4                RTC::close(int, int, void*)
                0x00000000c00199e8                RTC::timeInSecondsUTC()
                0x00000000c00199fa                RTC::timeInDatetimeUTC()
                0x00000000c0019a20                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0019a5e                RTC::~RTC()
                0x00000000c0019a5e                RTC::~RTC()
                0x00000000c0019a82                RTC::~RTC()
                0x00000000c0019aac                RTC::get_update_in_progress_flag()
                0x00000000c0019ac4                RTC::completeRTCRefresh()
                0x00000000c0019d8e                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001a008                rtcIRQHandler(regs*, void*)
                0x00000000c001a04e                RTC::RTC()
                0x00000000c001a04e                RTC::RTC()
 .text          0x00000000c001a104      0x1f7 arch/i386/vga.32
                0x00000000c001a104                Hal::consoleScroll(int, int)
                0x00000000c001a20c                Hal::consoleWriteCharacter(char, int, int, int, int)
                0x00000000c001a270                Hal::consoleCursorUpdate(int, int)
 *fill*         0x00000000c001a2fb        0x1 
 .text          0x00000000c001a2fc     0x13b7 fs/fat/vfslink.32
                0x00000000c001a2fc                FAT::getName()
                0x00000000c001a304                FAT::tell(void*, unsigned long long*)
                0x00000000c001a340                FAT::stat(void*, unsigned long long*)
                0x00000000c001a37c                FAT::~FAT()
                0x00000000c001a37c                FAT::~FAT()
                0x00000000c001a3a0                FAT::~FAT()
                0x00000000c001a3c8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001a46c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001a530                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a704                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001a91c                FAT::allocateSwapfile(char const*, int)
                0x00000000c001aad8                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001ac44                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001aca4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001ad04                FAT::close(void*)
                0x00000000c001ad58                FAT::closeDir(void*)
                0x00000000c001adac                FAT::seek(void*, unsigned long long)
                0x00000000c001ae08                fatWrapperReadDisk
                0x00000000c001ae50                fatWrapperWriteDisk
                0x00000000c001ae98                fatWrapperIoctl
                0x00000000c001afa8                FAT::FAT()
                0x00000000c001afa8                FAT::FAT()
                0x00000000c001affc                FAT::fixFilepath(char*)
                0x00000000c001b038                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001b16c                FAT::openDir(char const*, void**)
                0x00000000c001b21c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b310                FAT::unlink(char const*)
                0x00000000c001b390                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b4f8                FAT::rename(char const*, char const*)
                0x00000000c001b5c4                FAT::mkdir(char const*)
                0x00000000c001b644                FAT::exists(char const*)
 *fill*         0x00000000c001b6b3        0x1 
 .text          0x00000000c001b6b4      0xba7 fs/iso9660/vfslink.32
                0x00000000c001b6b4                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b6ba                ISO9660::seek(void*, unsigned long long)
                0x00000000c001b6ea                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001b70e                ISO9660::getName()
                0x00000000c001b714                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001b738                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b73e                ISO9660::unlink(char const*)
                0x00000000c001b744                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001b74a                ISO9660::rename(char const*, char const*)
                0x00000000c001b750                ISO9660::mkdir(char const*)
                0x00000000c001b756                ISO9660::close(void*)
                0x00000000c001b778                ISO9660::closeDir(void*)
                0x00000000c001b79a                ISO9660::~ISO9660()
                0x00000000c001b79a                ISO9660::~ISO9660()
                0x00000000c001b7be                ISO9660::~ISO9660()
                0x00000000c001b7e5                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001b827                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b8a2                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b902                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001bb06                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bd80                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001bdd4                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001bfaa                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001c038                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001c0e6                ISO9660::exists(char const*)
                0x00000000c001c10a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c19e                ISO9660::openDir(char const*, void**)
                0x00000000c001c238                ISO9660::ISO9660()
                0x00000000c001c238                ISO9660::ISO9660()
 *fill*         0x00000000c001c25b        0x1 
 .text          0x00000000c001c25c      0x298 hal/sound/sndcard.32
                0x00000000c001c25c                SoundCard::beginPlayback()
                0x00000000c001c26a                SoundCard::stopPlayback()
                0x00000000c001c278                SoundCard::SoundCard(char const*)
                0x00000000c001c278                SoundCard::SoundCard(char const*)
                0x00000000c001c316                SoundCard::~SoundCard()
                0x00000000c001c316                SoundCard::~SoundCard()
                0x00000000c001c33a                SoundCard::~SoundCard()
                0x00000000c001c364                SoundCard::configureRates(int, int, int)
                0x00000000c001c394                SoundCard::getSamples16(int, short*)
                0x00000000c001c3fe                SoundCard::getSamples32(int, int*)
                0x00000000c001c484                SoundCard::addChannel(SoundPort*)
                0x00000000c001c4e0                SoundCard::removeChannel(int)
 .text          0x00000000c001c4f4      0x3fb hal/sound/sndport.32
                0x00000000c001c4f4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c4f4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c580                SoundPort::~SoundPort()
                0x00000000c001c580                SoundPort::~SoundPort()
                0x00000000c001c5b4                SoundPort::unpause()
                0x00000000c001c5c0                SoundPort::pause()
                0x00000000c001c5cc                SoundPort::getBufferUsed()
                0x00000000c001c5d4                SoundPort::getBufferSize()
                0x00000000c001c5dc                SoundPort::buffer16(short*, int)
                0x00000000c001c690                SoundPort::buffer32(int*, int)
                0x00000000c001c73c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001c838                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001c8ef        0x0 hw/bus/isa.32
 *fill*         0x00000000c001c8ef        0x1 
 .text          0x00000000c001c8f0     0x1187 hw/bus/pci.32
                0x00000000c001c8f0                PCI::open(int, int, void*)
                0x00000000c001c90e                PCI::close(int, int, void*)
                0x00000000c001c912                PCI::PCI()
                0x00000000c001c912                PCI::PCI()
                0x00000000c001c9a8                PCI::readBAR8(unsigned int, int)
                0x00000000c001c9c4                PCI::readBAR16(unsigned int, int)
                0x00000000c001c9e2                PCI::readBAR32(unsigned int, int)
                0x00000000c001c9fe                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001ca1e                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001ca40                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001ca60                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cace                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cb76                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001cb9a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001cbc2                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001cc0c                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001cc34                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001cc58                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001cc7c                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001cca4                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cd08                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001cdf0                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001d1e2                PCI::checkBus(unsigned char)
                0x00000000c001d206                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001d646                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001d9b8                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001da24                PCI::detect()
 *fill*         0x00000000c001da77        0x1 
 .text          0x00000000c001da78      0xb66 hw/diskctrl/ide.32
                0x00000000c001da78                IDE::close(int, int, void*)
                0x00000000c001da7c                IDE::IDE()
                0x00000000c001da7c                IDE::IDE()
                0x00000000c001dab0                IDE::prepareInterrupt(unsigned char)
                0x00000000c001dac2                selectDrive(unsigned char, unsigned char)
                0x00000000c001dac4                IDE::getBase(unsigned char)
                0x00000000c001dad6                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001db96                IDE::read(unsigned char, unsigned char)
                0x00000000c001dc44                IDE::waitInterrupt(unsigned char)
                0x00000000c001dca6                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001dcc2                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001dcde                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001dd24                IDE::open(int, int, void*)
                0x00000000c001e14e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001e21a                IDE::detect()
                0x00000000c001e4da                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001e58a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001e5de      0x46c hw/diskctrl/satabus.32
                0x00000000c001e5de                SATABus::close(int, int, void*)
                0x00000000c001e5e2                SATABus::detect()
                0x00000000c001e5e4                SATABus::SATABus()
                0x00000000c001e5e4                SATABus::SATABus()
                0x00000000c001e66a                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e69c                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e6e4                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e704                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e72e                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001e834                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001ea16                SATABus::open(int, int, void*)
 .text          0x00000000c001ea4a      0x684 hw/diskphys/ata.32
                0x00000000c001ea4a                ATA::close(int, int, void*)
                0x00000000c001ea6e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001ea70                ATA::ATA()
                0x00000000c001ea70                ATA::ATA()
                0x00000000c001ea9e                ATA::flush(bool)
                0x00000000c001eae8                ATA::readyForCommand()
                0x00000000c001eb34                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ef2a                ATA::read(unsigned long long, int, void*)
                0x00000000c001ef76                ATA::write(unsigned long long, int, void*)
                0x00000000c001efd8                ATA::detectCHS()
                0x00000000c001f002                ATA::open(int, int, void*)
 .text          0x00000000c001f0ce      0x645 hw/diskphys/atapi.32
                0x00000000c001f0ce                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001f0d4                ATAPI::close(int, int, void*)
                0x00000000c001f0f8                ATAPI::ATAPI()
                0x00000000c001f0f8                ATAPI::ATAPI()
                0x00000000c001f126                ATAPI::readyForCommand()
                0x00000000c001f178                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001f438                ATAPI::diskRemoved()
                0x00000000c001f494                ATAPI::eject()
                0x00000000c001f4dc                ATAPI::diskInserted()
                0x00000000c001f4f8                ATAPI::detectMedia()
                0x00000000c001f5b4                ATAPI::open(int, int, void*)
                0x00000000c001f694                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001f713        0x1 
 .text          0x00000000c001f714      0xa68 hw/diskphys/sata.32
                0x00000000c001f714                SATA::close(int, int, void*)
                0x00000000c001f738                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001f73a                SATA::open(int, int, void*)
                0x00000000c001f930                SATA::SATA()
                0x00000000c001f930                SATA::SATA()
                0x00000000c001f95e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ff56                SATA::read(unsigned long long, int, void*)
                0x00000000c0020056                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c002017c      0x642 hw/diskphys/satapi.32
                0x00000000c002017c                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020182                SATAPI::close(int, int, void*)
                0x00000000c00201a6                SATAPI::SATAPI()
                0x00000000c00201a6                SATAPI::SATAPI()
                0x00000000c00201d4                SATAPI::diskRemoved()
                0x00000000c00201d6                SATAPI::diskInserted()
                0x00000000c00201f2                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020480                SATAPI::eject()
                0x00000000c00204bc                SATAPI::detectMedia()
                0x00000000c00205e6                SATAPI::open(int, int, void*)
                0x00000000c00206e6                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c00207be      0x43f hw/intctrl/apic.32
                0x00000000c00207be                IOAPIC::close(int, int, void*)
                0x00000000c00207c4                apicGetBase()
                0x00000000c0020806                IOAPIC::IOAPIC()
                0x00000000c0020806                IOAPIC::IOAPIC()
                0x00000000c002082e                apicOpen()
                0x00000000c0020988                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c00209ba                IOAPIC::read(int)
                0x00000000c00209e2                IOAPIC::open(int, int, void*)
                0x00000000c0020ad8                IOAPIC::write(int, int)
                0x00000000c0020b04                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0020bfd        0x3 
 .text          0x00000000c0020c00       0xf0 hw/timer/apictimer.32
                0x00000000c0020c00                APICTimer::close(int, int, void*)
                0x00000000c0020c08                apicTimerHandler(regs*, void*)
                0x00000000c0020c30                APICTimer::open(int, int, void*)
                0x00000000c0020ca0                APICTimer::write(int)
                0x00000000c0020cc8                APICTimer::APICTimer()
                0x00000000c0020cc8                APICTimer::APICTimer()
 .text          0x00000000c0020cf0      0x1a3 hw/timer/pit.32
                0x00000000c0020cf0                PIT::write(int)
                0x00000000c0020d70                pitHandler(regs*, void*)
                0x00000000c0020d94                PIT::open(int, int, void*)
                0x00000000c0020de4                PIT::close(int, int, void*)
                0x00000000c0020e14                PIT::PIT()
                0x00000000c0020e14                PIT::PIT()
 *fill*         0x00000000c0020e93        0xd 
 .text          0x00000000c0020ea0       0x83 arch/i386/avx.32
                0x00000000c0020ea0                avxDetect
                0x00000000c0020eca                avxSave
                0x00000000c0020edb                avxLoad
                0x00000000c0020eec                avxInit
                0x00000000c0020f0e                avxClose
                0x00000000c0020f0f                wouldSheSayYes
 *fill*         0x00000000c0020f23        0xd 
 .text          0x00000000c0020f30      0x1d6 arch/i386/interrupt.32
                0x00000000c0020f30                isr0
                0x00000000c0020f40                isr1
                0x00000000c0020f4a                isr2
                0x00000000c0020f54                isr3
                0x00000000c0020f5e                isr4
                0x00000000c0020f68                isr5
                0x00000000c0020f72                isr6
                0x00000000c0020f7c                isr7
                0x00000000c0020f86                isr8
                0x00000000c0020f8e                isr9
                0x00000000c0020f98                isr10
                0x00000000c0020fa0                isr11
                0x00000000c0020fa8                isr12
                0x00000000c0020fb0                isr13
                0x00000000c0020fb8                isr14
                0x00000000c0020fc0                isr15
                0x00000000c0020fca                isr16
                0x00000000c0020fd4                isr17
                0x00000000c0020fde                isr18
                0x00000000c0020fe8                irq3
                0x00000000c0020ff2                irq4
                0x00000000c0020ffc                irq5
                0x00000000c0021006                irq6
                0x00000000c0021010                irq7
                0x00000000c002101a                irq8
                0x00000000c0021024                irq9
                0x00000000c002102e                irq10
                0x00000000c0021038                irq11
                0x00000000c0021042                irq12
                0x00000000c002104c                irq13
                0x00000000c0021056                irq14
                0x00000000c0021060                irq15
                0x00000000c002106a                irq1
                0x00000000c0021071                irq2
                0x00000000c0021078                isr96
                0x00000000c002107f                irq0
                0x00000000c0021084                int_common_stub
                0x00000000c0021084                syscall_common_stub
                0x00000000c00210b6                irq16
                0x00000000c00210c0                irq17
                0x00000000c00210ca                irq18
                0x00000000c00210d4                irq19
                0x00000000c00210de                irq20
                0x00000000c00210e8                irq21
                0x00000000c00210f2                irq22
                0x00000000c00210fc                irq23
 *fill*         0x00000000c0021106        0xa 
 .text          0x00000000c0021110       0x10 arch/i386/rdrand.32
                0x00000000c0021110                i386GetRDRAND
 .text          0x00000000c0021120       0x39 arch/i386/sse.32
                0x00000000c0021120                absolutelyNoChanceInHell
                0x00000000c0021120                sseDetect
                0x00000000c0021138                sseSave
                0x00000000c0021140                sseLoad
                0x00000000c0021148                sseInit
                0x00000000c0021158                sseClose
 *fill*         0x00000000c0021159        0x7 
 .text          0x00000000c0021160       0x49 arch/i386/x87.32
                0x00000000c0021166                x87Detect
                0x00000000c0021181                x87Save
                0x00000000c0021188                x87Load
                0x00000000c002118f                x87Init
                0x00000000c00211a8                x87Close
 *fill*         0x00000000c00211a9        0x3 
 .text          0x00000000c00211ac       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00211d1        0x0 crtn.32
 *fill*         0x00000000c00211d1        0x3 
 .text          0x00000000c00211d4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00211d4                __divdi3
 *fill*         0x00000000c002131f        0x1 
 .text          0x00000000c0021320      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021320                __moddi3
 *fill*         0x00000000c002149e        0x2 
 .text          0x00000000c00214a0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00214a0                __udivdi3
 *fill*         0x00000000c002159f        0x1 
 .text          0x00000000c00215a0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c00215a0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c00216c0        0x0
 .iplt          0x00000000c00216c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c00216ba        0xf
 .init          0x00000000c00216ba        0x3 crti.32
                0x00000000c00216ba                _init
 .init          0x00000000c00216bd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c00216c2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c00216c7        0x2 crtn.32

.fini           0x00000000c00216c9        0xa
 .fini          0x00000000c00216c9        0x3 crti.32
                0x00000000c00216c9                _fini
 .fini          0x00000000c00216cc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c00216d1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c00216d4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c00216d4       0x23 core/computer.32
                0x00000000c00216d4                Computer::~Computer()
                0x00000000c00216d4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c00216f8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c00216f8       0x2a core/computer.32
                0x00000000c00216f8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021722       0x21
 .text._Z10idleCommonv
                0x00000000c0021722       0x21 core/idle.32
                0x00000000c0021722                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021744        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021744        0x2 core/unixfile.32
                0x00000000c0021744                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0021744                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021746       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021746       0x42 core/unixfile.32
                0x00000000c0021746                LinkedList<UnixFile>::LinkedList()
                0x00000000c0021746                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021788       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021788       0xd3 core/unixfile.32
                0x00000000c0021788                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002185c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002185c        0x7 core/unixfile.32
                0x00000000c002185c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021864       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021864       0xa1 core/unixfile.32
                0x00000000c0021864                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021906        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021906        0x8 core/unixfile.32
                0x00000000c0021906                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002190e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c002190e       0x1a hal/device.32
                0x00000000c002190e                DriverlessDevice::~DriverlessDevice()
                0x00000000c002190e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021928       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021928       0x2a hal/device.32
                0x00000000c0021928                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021952       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021952       0xdc hal/device.32
                0x00000000c0021952                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021a2e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021a2e       0x42 hal/device.32
                0x00000000c0021a2e                LinkedList<Device>::LinkedList()
                0x00000000c0021a2e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021a70       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021a70       0x1c hal/timer.32
                0x00000000c0021a70                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021a8c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021a8c        0x7 hal/timer.32
                0x00000000c0021a8c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021a94       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021a94       0xb8 hal/timer.32
                0x00000000c0021a94                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021b4c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021b4c       0xda hal/timer.32
                0x00000000c0021b4c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021c28       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021c28       0x23 hw/acpi.32
                0x00000000c0021c28                ACPI::~ACPI()
                0x00000000c0021c28                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0021c4c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0021c4c       0x2a hw/acpi.32
                0x00000000c0021c4c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021c78        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021c78        0x2 hw/acpi.32
                0x00000000c0021c78                LinkedList<Device>::~LinkedList()
                0x00000000c0021c78                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021c7c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021c7c       0x1c hw/acpi.32
                0x00000000c0021c7c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021c98        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021c98        0x7 hw/acpi.32
                0x00000000c0021c98                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021ca0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021ca0       0xb8 hw/acpi.32
                0x00000000c0021ca0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c0021d58       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0021d58       0x23 hw/cpu.32
                0x00000000c0021d58                CPU::~CPU()
                0x00000000c0021d58                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0021d7c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0021d7c       0x2a hw/cpu.32
                0x00000000c0021d7c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021da8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021da8        0x2 thr/prcssthr.32
                0x00000000c0021da8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0021da8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021dac       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021dac       0x49 thr/prcssthr.32
                0x00000000c0021dac                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0021dac                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021df8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021df8       0x42 thr/prcssthr.32
                0x00000000c0021df8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0021df8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021e3c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021e3c        0x8 thr/prcssthr.32
                0x00000000c0021e3c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0021e44        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0021e44        0xd vm86/x87em.32
                0x00000000c0021e44                Vm::_FPUState::_FPUState()
                0x00000000c0021e44                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c0021e52       0x23
 .text._ZN3PCID2Ev
                0x00000000c0021e52       0x23 hw/bus/pci.32
                0x00000000c0021e52                PCI::~PCI()
                0x00000000c0021e52                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0021e76       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0021e76       0x2a hw/bus/pci.32
                0x00000000c0021e76                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0021ea0       0x23
 .text._ZN3IDED2Ev
                0x00000000c0021ea0       0x23 hw/diskctrl/ide.32
                0x00000000c0021ea0                IDE::~IDE()
                0x00000000c0021ea0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0021ec4       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0021ec4       0x2a hw/diskctrl/ide.32
                0x00000000c0021ec4                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0021eee       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0021eee       0x23 hw/diskctrl/satabus.32
                0x00000000c0021eee                SATABus::~SATABus()
                0x00000000c0021eee                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0021f12       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0021f12       0x2a hw/diskctrl/satabus.32
                0x00000000c0021f12                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0021f3c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0021f3c       0x23 hw/diskphys/ata.32
                0x00000000c0021f3c                ATA::~ATA()
                0x00000000c0021f3c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0021f60       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0021f60       0x2a hw/diskphys/ata.32
                0x00000000c0021f60                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0021f8a       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0021f8a       0x23 hw/diskphys/atapi.32
                0x00000000c0021f8a                ATAPI::~ATAPI()
                0x00000000c0021f8a                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0021fae       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0021fae       0x2a hw/diskphys/atapi.32
                0x00000000c0021fae                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0021fd8       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0021fd8       0x23 hw/diskphys/sata.32
                0x00000000c0021fd8                SATA::~SATA()
                0x00000000c0021fd8                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0021ffc       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0021ffc       0x2a hw/diskphys/sata.32
                0x00000000c0021ffc                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0022026       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0022026       0x23 hw/diskphys/satapi.32
                0x00000000c0022026                SATAPI::~SATAPI()
                0x00000000c0022026                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002204a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002204a       0x2a hw/diskphys/satapi.32
                0x00000000c002204a                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0022074       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0022074       0x23 hw/intctrl/apic.32
                0x00000000c0022074                IOAPIC::~IOAPIC()
                0x00000000c0022074                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022098       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022098       0x2a hw/intctrl/apic.32
                0x00000000c0022098                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00220c4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00220c4       0x23 hw/timer/apictimer.32
                0x00000000c00220c4                APICTimer::~APICTimer()
                0x00000000c00220c4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00220e8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00220e8       0x2a hw/timer/apictimer.32
                0x00000000c00220e8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0022114       0x23
 .text._ZN3PITD2Ev
                0x00000000c0022114       0x23 hw/timer/pit.32
                0x00000000c0022114                PIT::~PIT()
                0x00000000c0022114                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022138       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022138       0x2a hw/timer/pit.32
                0x00000000c0022138                PIT::~PIT()

.rodata         0x00000000c0022162     0x36da
                0x00000000c0022162                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0022162        0x2 
 .ctors         0x00000000c0022164        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022168        0x4 core/unixfile.32
 .ctors         0x00000000c002216c        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022170        0x4 vm86/x87em.32
 .ctors         0x00000000c0022174        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022178                end_ctors = .
                0x00000000c0022178                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0022178        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002217c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002217c                __DTOR_END__
                0x00000000c0022180                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022180        0x0 
 .rodata        0x00000000c0022180      0x101 acpica/utclib.32
                0x00000000c0022180                AcpiGbl_Ctypes
 *fill*         0x00000000c0022281        0x3 
 .rodata        0x00000000c0022284       0x18 core/malloc.32
 *fill*         0x00000000c002229c        0x4 
 .rodata        0x00000000c00222a0      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c00223c0       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0022416        0xa 
 .rodata        0x00000000c0022420      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022820       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0022869      0x12c core/computer.32
 *fill*         0x00000000c0022995        0x3 
 .rodata.str1.4
                0x00000000c0022998       0x8c core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0022a24       0x2c core/computer.32
                0x00000000c0022a24                vtable for Computer
 .rodata.str1.1
                0x00000000c0022a50       0x2a core/kheap.32
 *fill*         0x00000000c0022a7a        0x2 
 .rodata.str1.4
                0x00000000c0022a7c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0022aac       0x17 core/main.32
 *fill*         0x00000000c0022ac3        0x1 
 .rodata.str1.4
                0x00000000c0022ac4       0x1f core/main.32
 .rodata.str1.1
                0x00000000c0022ae3       0xea core/physmgr.32
                                         0xee (size before relaxing)
 *fill*         0x00000000c0022bcd        0x3 
 .rodata.str1.4
                0x00000000c0022bd0       0xc9 core/physmgr.32
 .rodata.str1.1
                0x00000000c0022c99       0x39 core/pipe.32
 *fill*         0x00000000c0022cd2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0022cd4       0x1c core/pipe.32
                0x00000000c0022cd4                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022cf0       0x69 core/terminal.32
 *fill*         0x00000000c0022d59        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0022d5c       0x1c core/terminal.32
                0x00000000c0022d5c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0022d78       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0022d9a       0x15 core/unixfile.32
 *fill*         0x00000000c0022daf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0022db0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0022dfb        0x8 core/unixfile.32
 *fill*         0x00000000c0022e03        0x1 
 .rodata.str1.4
                0x00000000c0022e04       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0022e24       0x1c core/unixfile.32
                0x00000000c0022e24                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0022e40       0x1c core/unixfile.32
                0x00000000c0022e40                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0022e5c      0x1b8 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0023014      0x194 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00231a8       0x83 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c002322b       0x11 dbg/kconsole.32
 *fill*         0x00000000c002322b        0x1 
 .rodata        0x00000000c002322c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002337c       0x25 fs/vfs.32
                                         0x33 (size before relaxing)
 *fill*         0x00000000c00233a1        0x3 
 .rodata.str1.4
                0x00000000c00233a4       0x54 fs/vfs.32
 .rodata._ZTV10Filesystem
                0x00000000c00233f8       0x68 fs/vfs.32
                0x00000000c00233f8                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0023460       0x1c fs/vfs.32
                0x00000000c0023460                vtable for File
 .rodata._ZTV9Directory
                0x00000000c002347c       0x1c fs/vfs.32
                0x00000000c002347c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0023498       0x2c hal/bus.32
                0x00000000c0023498                vtable for Bus
 .rodata.str1.1
                0x00000000c00234c4       0x1e hal/clock.32
 *fill*         0x00000000c00234e2        0x2 
 .rodata._ZTV5Clock
                0x00000000c00234e4       0x3c hal/clock.32
                0x00000000c00234e4                vtable for Clock
 .rodata        0x00000000c0023520       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0023550       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00235a8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00235a8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c00235a8       0x2c hal/device.32
                0x00000000c00235a8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00235d4       0x2c hal/device.32
                0x00000000c00235d4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023600       0x2c hal/diskctrl.32
                0x00000000c0023600                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002362c       0x38 hal/diskphys.32
                0x00000000c002362c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0023664       0x3e hal/intctrl.32
 *fill*         0x00000000c00236a2        0x2 
 .rodata.str1.4
                0x00000000c00236a4       0x5d hal/intctrl.32
 .rodata        0x00000000c0023701       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0023754       0x34 hal/keybrd.32
                0x00000000c0023754                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0023788       0x9a hal/logidisk.32
 *fill*         0x00000000c0023822        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0023824       0x2c hal/logidisk.32
                0x00000000c0023824                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0023850       0x2c hal/mouse.32
                0x00000000c0023850                vtable for Mouse
 .rodata.str1.1
                0x00000000c002387c        0xb hal/partition.32
 *fill*         0x00000000c0023887        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023888       0x44 hal/serial.32
                0x00000000c0023888                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00238cc       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00238cc        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00238cc       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00238cc       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00238cc       0x30 hal/timer.32
                0x00000000c00238cc                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00238fc       0x10 hal/vcache.32
                0x00000000c00238fc                vtable for VCache
 .rodata.str1.1
                0x00000000c002390c       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c0023974       0x48 hal/video.32
                0x00000000c0023974                vtable for Video
 .rodata.str1.4
                0x00000000c00239bc      0x123 hw/acpi.32
 .rodata.str1.1
                0x00000000c0023adf      0x268 hw/acpi.32
                                        0x282 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023d47       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023d47        0x8 hw/acpi.32
 *fill*         0x00000000c0023d47        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023d48       0x2c hw/acpi.32
                0x00000000c0023d48                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023d74      0x1be hw/cpu.32
                                        0x1c2 (size before relaxing)
 *fill*         0x00000000c0023f32        0x2 
 .rodata._ZTV3CPU
                0x00000000c0023f34       0x2c hw/cpu.32
                0x00000000c0023f34                vtable for CPU
 .rodata.str1.1
                0x00000000c0023f60       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c0023f71       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0023fad       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 *fill*         0x00000000c002404d        0x3 
 .rodata.str1.4
                0x00000000c0024050      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c002418e       0x2f krnl/powctrl.32
 .rodata.str1.1
                0x00000000c00241bd       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024202       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c0024256       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c0024282       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00242ca      0x247 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024511       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0024568      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024674       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024674       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024674       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024674        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024674       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0024714       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0024744       0x58 vm86/x87em.32
 .rodata        0x00000000c002479c       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c00247d8      0x27f arch/i386/hal.32
                                        0x28a (size before relaxing)
 *fill*         0x00000000c0024a57        0x1 
 .rodata.str1.4
                0x00000000c0024a58       0x99 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0024af1       0xc5 arch/i386/rtc.32
 *fill*         0x00000000c0024bb6        0x2 
 .rodata._ZTV3RTC
                0x00000000c0024bb8       0x3c arch/i386/rtc.32
                0x00000000c0024bb8                vtable for RTC
 .rodata.str1.1
                0x00000000c0024bf4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0024c35        0x3 
 .rodata._ZTV3FAT
                0x00000000c0024c38       0x68 fs/fat/vfslink.32
                0x00000000c0024c38                vtable for FAT
 .rodata.str1.1
                0x00000000c0024ca0       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c0024cbb        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c0024cbc       0x68 fs/iso9660/vfslink.32
                0x00000000c0024cbc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0024d24       0xc3 hal/sound/sndcard.32
                                         0xdb (size before relaxing)
 *fill*         0x00000000c0024de7        0x1 
 .rodata._ZTV9SoundCard
                0x00000000c0024de8       0x34 hal/sound/sndcard.32
                0x00000000c0024de8                vtable for SoundCard
 .rodata.str1.1
                0x00000000c0024e1c       0x6e hal/sound/sndport.32
 *fill*         0x00000000c0024e8a        0x2 
 .rodata.str1.4
                0x00000000c0024e8c       0x93 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0024f1f      0x1cd hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00250ec       0x2c hw/bus/pci.32
                0x00000000c00250ec                vtable for PCI
 .rodata.str1.1
                0x00000000c0025118       0xa3 hw/diskctrl/ide.32
 *fill*         0x00000000c00251bb        0x1 
 .rodata._ZTV3IDE
                0x00000000c00251bc       0x2c hw/diskctrl/ide.32
                0x00000000c00251bc                vtable for IDE
 .rodata.str1.4
                0x00000000c00251e8       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata.str1.1
                0x00000000c002520c       0x7b hw/diskctrl/satabus.32
 *fill*         0x00000000c0025287        0x1 
 .rodata._ZTV7SATABus
                0x00000000c0025288       0x2c hw/diskctrl/satabus.32
                0x00000000c0025288                vtable for SATABus
 .rodata.str1.1
                0x00000000c00252b4       0x4b hw/diskphys/ata.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c00252ff        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025300       0x38 hw/diskphys/ata.32
                0x00000000c0025300                vtable for ATA
 .rodata.str1.1
                0x00000000c0025338       0x40 hw/diskphys/atapi.32
                                         0x6f (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c0025378       0x38 hw/diskphys/atapi.32
                0x00000000c0025378                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00253b0      0x202 hw/diskphys/sata.32
 *fill*         0x00000000c00255b2        0x2 
 .rodata._ZTV4SATA
                0x00000000c00255b4       0x38 hw/diskphys/sata.32
                0x00000000c00255b4                vtable for SATA
 .rodata.str1.1
                0x00000000c00255ec      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c002571e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0025720       0x38 hw/diskphys/satapi.32
                0x00000000c0025720                vtable for SATAPI
 .rodata        0x00000000c0025758       0x19 hw/intctrl/apic.32
 *fill*         0x00000000c0025771        0x3 
 .rodata._ZTV6IOAPIC
                0x00000000c0025774       0x2c hw/intctrl/apic.32
                0x00000000c0025774                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00257a0       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00257bb        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00257bc       0x30 hw/timer/apictimer.32
                0x00000000c00257bc                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00257ec       0x1d hw/timer/pit.32
 *fill*         0x00000000c0025809        0x3 
 .rodata._ZTV3PIT
                0x00000000c002580c       0x30 hw/timer/pit.32
                0x00000000c002580c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002583c      0x525
 *(.data)
 .data          0x00000000c002583c        0x0 crti.32
 .data          0x00000000c002583c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002583c                __dso_handle
 .data          0x00000000c0025840        0x0 acpica/utclib.32
 .data          0x00000000c0025840        0x0 core/malloc.32
 .data          0x00000000c0025840        0x0 libk/string.32
 .data          0x00000000c0025840        0x0 fs/fat/diskio.32
 .data          0x00000000c0025840        0x0 fs/fat/ff.32
 .data          0x00000000c0025840        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0025840        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0025840        0x0 compat/inlines.32
 .data          0x00000000c0025840        0x0 compat/resolve.32
 .data          0x00000000c0025840        0x0 core/computer.32
 .data          0x00000000c0025840        0x0 core/gdt.32
 .data          0x00000000c0025840        0x0 core/idle.32
 .data          0x00000000c0025840        0x0 core/idt.32
 .data          0x00000000c0025840        0x4 core/kheap.32
 *fill*         0x00000000c0025844       0x1c 
 .data          0x00000000c0025860      0x142 core/main.32
                0x00000000c0025860                titleScreen
 *fill*         0x00000000c00259a2        0x2 
 .data          0x00000000c00259a4        0x4 core/physmgr.32
                0x00000000c00259a4                Phys::bitmap
 .data          0x00000000c00259a8        0x0 core/pipe.32
 *fill*         0x00000000c00259a8       0x18 
 .data          0x00000000c00259c0       0x60 core/terminal.32
                0x00000000c00259c0                VgaText::hiddenOut
                0x00000000c00259e0                ansiToVGAMappings
 .data          0x00000000c0025a20        0x0 core/tss.32
 .data          0x00000000c0025a20        0x4 core/unixfile.32
                0x00000000c0025a20                UnixFile::nextFd
 .data          0x00000000c0025a24       0x15 core/virtmgr.32
                0x00000000c0025a24                Virt::pageAllocPtr
                0x00000000c0025a28                Virt::bitmap
                0x00000000c0025a2c                Virt::swapfileSectorsPerPage
                0x00000000c0025a30                Virt::swapfileLength
                0x00000000c0025a34                Virt::swapfileSector
                0x00000000c0025a38                Virt::swapfileDrive
 *fill*         0x00000000c0025a39        0x3 
 .data          0x00000000c0025a3c        0x4 coreobjs/c++.32
                0x00000000c0025a3c                __stack_chk_guard
 .data          0x00000000c0025a40        0x0 dbg/kconsole.32
 .data          0x00000000c0025a40        0x0 fs/vfs.32
 .data          0x00000000c0025a40        0x0 hal/bus.32
 .data          0x00000000c0025a40        0x0 hal/buzzer.32
 .data          0x00000000c0025a40        0x0 hal/clock.32
 .data          0x00000000c0025a40        0x0 hal/device.32
 .data          0x00000000c0025a40        0x0 hal/diskctrl.32
 .data          0x00000000c0025a40        0x0 hal/diskphys.32
 .data          0x00000000c0025a40        0x0 hal/fpu.32
 .data          0x00000000c0025a40        0x0 hal/intctrl.32
 .data          0x00000000c0025a40        0x0 hal/keybrd.32
 .data          0x00000000c0025a40        0x0 hal/logidisk.32
 .data          0x00000000c0025a40        0x0 hal/mouse.32
 .data          0x00000000c0025a40        0x0 hal/partition.32
 .data          0x00000000c0025a40        0x0 hal/serial.32
 .data          0x00000000c0025a40        0x0 hal/timer.32
 .data          0x00000000c0025a40        0x0 hal/vcache.32
 .data          0x00000000c0025a40        0x0 hal/video.32
 .data          0x00000000c0025a40       0x10 hw/acpi.32
                0x00000000c0025a40                legacyIRQRemaps
 .data          0x00000000c0025a50        0x4 hw/cpu.32
                0x00000000c0025a50                lastCode
 .data          0x00000000c0025a54        0x0 hw/smp.32
 *fill*         0x00000000c0025a54        0xc 
 .data          0x00000000c0025a60       0x4d krnl/env.32
                0x00000000c0025a60                defaultSysEnv
 .data          0x00000000c0025aad        0x0 krnl/panic.32
 .data          0x00000000c0025aad        0x0 krnl/powctrl.32
 .data          0x00000000c0025aad        0x0 reg/registry.32
 .data          0x00000000c0025aad        0x0 sys/sc_eject.32
 .data          0x00000000c0025aad        0x0 sys/sc_exit.32
 .data          0x00000000c0025aad        0x0 sys/sc_getcwd.32
 .data          0x00000000c0025aad        0x0 sys/sc_getpid.32
 .data          0x00000000c0025aad        0x0 sys/sc_getramdata.32
 .data          0x00000000c0025aad        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c0025aad        0x0 sys/sc_loaddll.32
 .data          0x00000000c0025aad        0x0 sys/sc_read.32
 .data          0x00000000c0025aad        0x0 sys/sc_sbrk.32
 .data          0x00000000c0025aad        0x0 sys/sc_setcwd.32
 .data          0x00000000c0025aad        0x0 sys/sc_settime.32
 .data          0x00000000c0025aad        0x0 sys/sc_timezone.32
 .data          0x00000000c0025aad        0x0 sys/sc_write.32
 .data          0x00000000c0025aad        0x0 sys/sc_wsbe.32
 .data          0x00000000c0025aad        0x0 sys/sc_yield.32
 .data          0x00000000c0025aad        0x0 sys/syscalls.32
 .data          0x00000000c0025aad        0x0 thr/elf.32
 *fill*         0x00000000c0025aad        0x3 
 .data          0x00000000c0025ab0        0x4 thr/prcssthr.32
                0x00000000c0025ab0                Thr::nextPID
 .data          0x00000000c0025ab4        0x0 vm86/vm8086.32
 .data          0x00000000c0025ab4        0x0 vm86/x87em.32
 *fill*         0x00000000c0025ab4        0xc 
 .data          0x00000000c0025ac0      0x2a0 arch/i386/hal.32
                0x00000000c0025ac0                Krnl::exceptionNames
 .data          0x00000000c0025d60        0x0 arch/i386/pic.32
 .data          0x00000000c0025d60        0x0 arch/i386/rtc.32
 .data          0x00000000c0025d60        0x0 arch/i386/vga.32
 .data          0x00000000c0025d60        0x0 fs/fat/vfslink.32
 .data          0x00000000c0025d60        0x1 fs/iso9660/vfslink.32
                0x00000000c0025d60                recentDriveletter
 .data          0x00000000c0025d61        0x0 hal/sound/sndcard.32
 .data          0x00000000c0025d61        0x0 hal/sound/sndport.32
 .data          0x00000000c0025d61        0x0 hw/bus/isa.32
 .data          0x00000000c0025d61        0x0 hw/bus/pci.32
 .data          0x00000000c0025d61        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0025d61        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0025d61        0x0 hw/diskphys/ata.32
 .data          0x00000000c0025d61        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0025d61        0x0 hw/diskphys/sata.32
 .data          0x00000000c0025d61        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0025d61        0x0 hw/intctrl/apic.32
 .data          0x00000000c0025d61        0x0 hw/timer/apictimer.32
 .data          0x00000000c0025d61        0x0 hw/timer/pit.32
 .data          0x00000000c0025d61        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0025d61        0x0 crtn.32
 .data          0x00000000c0025d61        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0025d61        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0025d61        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0025d61        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0025d64        0x0
 .got           0x00000000c0025d64        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0025d64        0x0
 .got.plt       0x00000000c0025d64        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0025d64        0x0
 .igot.plt      0x00000000c0025d64        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0025d64        0x0
 .tm_clone_table
                0x00000000c0025d64        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0025d64        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0025d61      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0025d61        0x3 
 .eh_frame      0x00000000c0025d64        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0025d64        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0025d64       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0025dbc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0025dfc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0025e68       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c0025eec        0x0
 .rel.got       0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025eec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025eec     0x43bc
                0x00000000c0025eec                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0025eec        0x0 crti.32
 .bss           0x00000000c0025eec       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0025f0c        0x4 acpica/utclib.32
 *fill*         0x00000000c0025f10       0x10 
 .bss           0x00000000c0025f20      0x378 core/malloc.32
 .bss           0x00000000c0026298        0x0 libk/string.32
 .bss           0x00000000c0026298        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026298        0x8 
 .bss           0x00000000c00262a0       0x88 fs/fat/ff.32
 .bss           0x00000000c0026328        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026328        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0026328        0x0 compat/inlines.32
 .bss           0x00000000c0026328        0x0 compat/resolve.32
 .bss           0x00000000c0026328        0x6 core/computer.32
                0x00000000c0026328                Krnl::computer
                0x00000000c002632c                Krnl::preemptionOn
                0x00000000c002632d                Krnl::schedulingOn
 *fill*         0x00000000c002632e        0x2 
 .bss           0x00000000c0026330        0x6 core/gdt.32
                0x00000000c0026330                gdtDescr
 .bss           0x00000000c0026336        0x0 core/idle.32
 *fill*         0x00000000c0026336        0x2 
 .bss           0x00000000c0026338        0x6 core/idt.32
                0x00000000c0026338                idtDescr
 .bss           0x00000000c002633e        0x0 core/kheap.32
 *fill*         0x00000000c002633e        0x2 
 .bss           0x00000000c0026340        0x4 core/main.32
                0x00000000c0026340                sysBootSettings
 .bss           0x00000000c0026344       0x29 core/physmgr.32
                0x00000000c0026344                Phys::forbidEvictions
                0x00000000c0026348                Phys::currentPagePointer
                0x00000000c002634c                Phys::highestMem
                0x00000000c0026350                Phys::oldPercent
                0x00000000c0026354                Phys::usedPages
                0x00000000c0026358                Phys::usablePages
                0x00000000c002635c                Phys::dmaUsage
 .bss           0x00000000c002636d        0x0 core/pipe.32
 *fill*         0x00000000c002636d        0x3 
 .bss           0x00000000c0026370        0x9 core/terminal.32
                0x00000000c0026370                terminalCycle
                0x00000000c0026374                activeTerminal
                0x00000000c0026378                VgaText::graphicMode
 *fill*         0x00000000c0026379        0x1 
 .bss           0x00000000c002637a        0x2 core/tss.32
                0x00000000c002637a                doubleFaultSelector
 *fill*         0x00000000c002637c        0x4 
 .bss           0x00000000c0026380       0x84 core/unixfile.32
                0x00000000c0026380                sfileLpt
                0x00000000c00263c0                sfileCom
                0x00000000c00263e4                sfileNul
                0x00000000c00263e8                sfilePnt
                0x00000000c00263ec                sfileAux
                0x00000000c00263f0                sfileCon
                0x00000000c00263f4                initialFilesAdded
                0x00000000c00263f8                unixFileLinkedList
 .bss           0x00000000c0026404       0x14 core/virtmgr.32
                0x00000000c0026404                twswaps
                0x00000000c0026408                swapBalance
                0x00000000c002640c                panicVAS
                0x00000000c0026410                Virt::swapfileBitmap
                0x00000000c0026414                firstVAS
 .bss           0x00000000c0026418        0x0 coreobjs/c++.32
 .bss           0x00000000c0026418        0x0 dbg/kconsole.32
 .bss           0x00000000c0026418        0x4 fs/vfs.32
                0x00000000c0026418                installedFilesystems
 .bss           0x00000000c002641c        0x0 hal/bus.32
 .bss           0x00000000c002641c        0x0 hal/buzzer.32
 .bss           0x00000000c002641c        0x8 hal/clock.32
                0x00000000c002641c                User::dstOn
                0x00000000c002641d                User::timezoneHalfHourOffset
                0x00000000c0026420                User::timezoneHourOffset
 .bss           0x00000000c0026424        0x0 hal/device.32
 .bss           0x00000000c0026424        0x0 hal/diskctrl.32
 .bss           0x00000000c0026424        0x0 hal/diskphys.32
 .bss           0x00000000c0026424        0x0 hal/fpu.32
 *fill*         0x00000000c0026424       0x1c 
 .bss           0x00000000c0026440     0x2000 hal/intctrl.32
                0x00000000c0026440                INT_contexts
                0x00000000c0027440                INT_handlers
 .bss           0x00000000c0028440      0x429 hal/keybrd.32
                0x00000000c0028440                keyboardWaitingTaskList
                0x00000000c0028444                keyboardSetupYet
                0x00000000c0028448                guiKeyboardHandler
                0x00000000c0028460                keystates
 *fill*         0x00000000c0028869       0x17 
 .bss           0x00000000c0028880       0x88 hal/logidisk.32
                0x00000000c0028880                diskAssignments
                0x00000000c00288a0                disks
 .bss           0x00000000c0028908        0x4 hal/mouse.32
                0x00000000c0028908                guiMouseHandler
 .bss           0x00000000c002890c        0x0 hal/partition.32
 .bss           0x00000000c002890c        0x0 hal/serial.32
 .bss           0x00000000c002890c        0x4 hal/timer.32
                0x00000000c002890c                milliTenthsSinceBoot
 .bss           0x00000000c0028910        0x0 hal/vcache.32
 .bss           0x00000000c0028910        0x4 hal/video.32
                0x00000000c0028910                screen
 *fill*         0x00000000c0028914        0xc 
 .bss           0x00000000c0028920      0x480 hw/acpi.32
                0x00000000c0028920                systemSleepFunction
                0x00000000c0028924                systemResetFunction
                0x00000000c0028928                systemShutdownFunction
                0x00000000c002892c                nextACPITable
                0x00000000c0028940                acpiTables
                0x00000000c0028b40                usingXSDT
                0x00000000c0028b44                MADTpointer
                0x00000000c0028b48                RSDTpointer
                0x00000000c0028b4c                RSDPpointer
                0x00000000c0028b50                nextAPICNMI
                0x00000000c0028b60                apicNMIInfo
                0x00000000c0028be0                legacyIRQFlags
                0x00000000c0028c00                ioapicDiscoveryNumber
                0x00000000c0028c20                ioapicFoundInMADT
                0x00000000c0028c40                ioapicAddresses
                0x00000000c0028cc0                ioapicGSIBase
                0x00000000c0028d40                processorDiscoveryNumber
                0x00000000c0028d60                matchingAPICID
                0x00000000c0028d80                processorID
 .bss           0x00000000c0028da0       0x10 hw/cpu.32
                0x00000000c0028da0                lastD
                0x00000000c0028da4                lastC
                0x00000000c0028da8                lastB
                0x00000000c0028dac                lastA
 .bss           0x00000000c0028db0        0x1 hw/smp.32
                0x00000000c0028db0                Krnl::bspID
 *fill*         0x00000000c0028db1        0x3 
 .bss           0x00000000c0028db4        0x8 krnl/env.32
                0x00000000c0028db4                Krnl::userEnv
                0x00000000c0028db8                Krnl::systemEnv
 .bss           0x00000000c0028dbc        0x9 krnl/panic.32
                0x00000000c0028dbc                Krnl::guiProgramFaultHandler
                0x00000000c0028dc0                Krnl::guiPanicHandler
                0x00000000c0028dc4                Krnl::kernelInPanic
 *fill*         0x00000000c0028dc5       0x1b 
 .bss           0x00000000c0028de0       0x48 krnl/powctrl.32
                0x00000000c0028de0                Krnl::powCtrlOnBattery
                0x00000000c0028e00                Krnl::currentPowerSettings
                0x00000000c0028e24                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0028e28        0x0 reg/registry.32
 .bss           0x00000000c0028e28        0x0 sys/sc_eject.32
 .bss           0x00000000c0028e28        0x0 sys/sc_exit.32
 .bss           0x00000000c0028e28        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0028e28        0x0 sys/sc_getpid.32
 .bss           0x00000000c0028e28        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0028e28        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0028e28        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0028e28        0x0 sys/sc_read.32
 .bss           0x00000000c0028e28        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0028e28        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0028e28        0x0 sys/sc_settime.32
 .bss           0x00000000c0028e28        0x0 sys/sc_timezone.32
 .bss           0x00000000c0028e28        0x0 sys/sc_write.32
 .bss           0x00000000c0028e28        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0028e28        0x0 sys/sc_yield.32
 *fill*         0x00000000c0028e28       0x18 
 .bss           0x00000000c0028e40      0x200 sys/syscalls.32
                0x00000000c0028e40                systemCallHandlers
 .bss           0x00000000c0029040      0x7a4 thr/elf.32
                0x00000000c0029040                Thr::driverLookupNext
                0x00000000c0029060                Thr::driverLookupLen
                0x00000000c0029260                Thr::driverLookupAddr
                0x00000000c0029460                Thr::driverNameLookup
                0x00000000c0029660                Thr::kernelSymbols
                0x00000000c00296e0                Thr::kernelStringTable
                0x00000000c0029760                Thr::kernelSymbolTable
                0x00000000c00297e0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00297e4        0x4 
 .bss           0x00000000c00297e8       0x68 thr/prcssthr.32
                0x00000000c00297e8                cleanerThread
                0x00000000c00297ec                weNeedTheCleanerToNotBlock
                0x00000000c00297f0                retValLockStuff
                0x00000000c00297f4                retValSchedLock
                0x00000000c00297f8                lockStuffLock
                0x00000000c00297fc                schedulerLock
                0x00000000c0029800                taskSwitchesPostponedFlag
                0x00000000c0029804                postponeTaskSwitchesCounter
                0x00000000c0029808                irqDisableCounter
                0x00000000c002980c                terminatedTaskList
                0x00000000c0029818                sleepingTaskList
                0x00000000c0029824                taskList
                0x00000000c0029830                kernelProcess
 *fill*         0x00000000c0029850       0x10 
 .bss           0x00000000c0029860       0x40 vm86/vm8086.32
                0x00000000c0029860                Vm::vmRetV
                0x00000000c0029864                Vm::vmDone
                0x00000000c0029865                Vm::vmReady
                0x00000000c0029868                Vm::vm86Thread
                0x00000000c002986c                Vm::vmToHostCommsPtr
                0x00000000c0029880                Vm::vmToHostComms
 .bss           0x00000000c00298a0       0x48 vm86/x87em.32
                0x00000000c00298a0                Vm::fpuState
 .bss           0x00000000c00298e8       0x18 arch/i386/hal.32
                0x00000000c00298e8                Hal::apic
                0x00000000c00298ec                fpuOwner
                0x00000000c00298f0                coproLoadFunc
                0x00000000c00298f4                coproSaveFunc
                0x00000000c00298f8                _i386_HAL_tscFunction
                0x00000000c00298fc                gpFaultIntercept
 .bss           0x00000000c0029900        0x0 arch/i386/pic.32
 .bss           0x00000000c0029900        0x2 arch/i386/rtc.32
 .bss           0x00000000c0029902        0x0 arch/i386/vga.32
 *fill*         0x00000000c0029902       0x1e 
 .bss           0x00000000c0029920       0xf0 fs/fat/vfslink.32
                0x00000000c0029920                FAT::fats
                0x00000000c0029940                FAT::vfsToFatRemaps
                0x00000000c00299c0                fatToVFSRemaps
 *fill*         0x00000000c0029a10       0x10 
 .bss           0x00000000c0029a20      0x820 fs/iso9660/vfslink.32
                0x00000000c0029a20                recentSector
                0x00000000c0029a40                recentBuffer
 .bss           0x00000000c002a240        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a240        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a240        0x0 hw/bus/isa.32
 .bss           0x00000000c002a240        0xd hw/bus/pci.32
                0x00000000c002a240                thePCI
 .bss           0x00000000c002a24d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a24d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a24d        0x3 
 .bss           0x00000000c002a250        0x8 hw/diskphys/ata.32
                0x00000000c002a250                ataSectorsWritten
                0x00000000c002a254                ataSectorsRead
 .bss           0x00000000c002a258        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a258        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a258        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a258        0x8 
 .bss           0x00000000c002a260       0x41 hw/intctrl/apic.32
                0x00000000c002a260                noOfIOAPICs
                0x00000000c002a280                ioapics
                0x00000000c002a2a0                IOAPICsSetupYet
 .bss           0x00000000c002a2a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a2a1        0x3 
 .bss           0x00000000c002a2a4        0x4 hw/timer/pit.32
                0x00000000c002a2a4                pitFreq
 .bss           0x00000000c002a2a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a2a8        0x0 crtn.32
 .bss           0x00000000c002a2a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a2a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a2a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a2a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a2a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002e664                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
