Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f8ca
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6c3 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca8                Krnl::firstTask()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006e96                Computer::setBootMessage(char const*)
                0x00000000c0006e98                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070ec                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007128                Computer::shutdown()
                0x00000000c0007140                Computer::restart()
                0x00000000c0007158                Computer::sleep()
                0x00000000c000716c                Computer::nmiEnabled()
                0x00000000c0007178                Computer::readCMOS(unsigned char)
                0x00000000c0007196                Computer::enableNMI(bool)
                0x00000000c00071ae                Computer::open(int, int, void*)
                0x00000000c0007282                Computer::disableNMI()
                0x00000000c0007292                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072b6                Computer::handleNMI()
 *fill*         0x00000000c0007321        0x1 
 .text          0x00000000c0007322      0x1db core/gdt.32
                0x00000000c0007322                GDTEntry::setBase(unsigned int)
                0x00000000c000733e                GDTEntry::setLimit(unsigned int)
                0x00000000c000735c                GDT::GDT()
                0x00000000c000735c                GDT::GDT()
                0x00000000c0007372                GDT::addEntry(GDTEntry)
                0x00000000c0007394                GDT::getNumberOfEntries()
                0x00000000c000739c                GDT::flush()
                0x00000000c00073be                GDT::setup()
 .text          0x00000000c00074fd       0x1d core/idle.32
                0x00000000c00074fd                idleFunction(void*)
 *fill*         0x00000000c000751a        0x2 
 .text          0x00000000c000751c      0x46c core/idt.32
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c0007596                IDTEntry::setOffset(unsigned int)
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ae                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075b6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007608                IDT::flush()
                0x00000000c0007622                IDT::setup()
 .text          0x00000000c0007988      0x188 core/kheap.32
                0x00000000c0007988                sbrk
                0x00000000c0007a1f                mmap
                0x00000000c0007a35                munmap
                0x00000000c0007a4b                liballoc_lock()
                0x00000000c0007a59                liballoc_unlock()
                0x00000000c0007a6f                liballoc_alloc(int)
                0x00000000c0007a87                liballoc_free(void*, int)
                0x00000000c0007aa2                realloc
                0x00000000c0007ab6                malloc
                0x00000000c0007ac6                free
                0x00000000c0007ad6                rfree
                0x00000000c0007ae6                calloc
 .text          0x00000000c0007b10       0xc7 core/main.32
                0x00000000c0007b10                KeEntryPoint
 .text          0x00000000c0007bd7      0x644 core/physmgr.32
                0x00000000c0007bd7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cbf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfa                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3a                Phys::getPageState(unsigned long)
                0x00000000c0007d56                Phys::freePage(unsigned long)
                0x00000000c0007dbf                Phys::allocatePage()
                0x00000000c0007e8e                Phys::allocateContiguousPages(int)
                0x00000000c0007ef5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f2d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000821b        0x1 
 .text          0x00000000c000821c      0x273 core/pipe.32
                0x00000000c000821c                Pipe::isAtty()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008244                Pipe::~Pipe()
                0x00000000c000826c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000832c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xab3 core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a60                VgaText::putx(unsigned int)
                0x00000000c0008aa6                VgaText::puts(char const*)
                0x00000000c0008acc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b18                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008db6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f42                VgaText::doUpdate()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x1a1 core/tss.32
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f54                TSS::setESP(unsigned long)
                0x00000000c0008f68                TSS::flush()
                0x00000000c0008f88                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090e5        0x1 
 .text          0x00000000c00090e6      0x4ca core/unixfile.32
                0x00000000c00090e6                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000913c                ReservedFilename::isAtty()
                0x00000000c0009158                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091b6                UnixFile::getFileDescriptor()
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c0009440                UnixFile::~UnixFile()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c000948c                ReservedFilename::~ReservedFilename()
                0x00000000c00094b3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b0     0x1218 core/virtmgr.32
                0x00000000c00095b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ea                Virt::getPageState(unsigned long)
                0x00000000c000960d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009732                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009755                Virt::swapIDToSector(unsigned long)
                0x00000000c000976b                Virt::allocateSwapfilePage()
                0x00000000c00097eb                Virt::virtualMemorySetup()
                0x00000000c000983c                Virt::setupPageSwapping(int)
                0x00000000c00098ae                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098de                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000992b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a68                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a8c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aa6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009b52                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b86                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009d20                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e24                VAS::allocatePages(int, int)
                0x00000000c0009f1a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f72                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a2b2                VAS::evict(unsigned long)
                0x00000000c000a390                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a52a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a59e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ca                VAS::scanForEviction()
                0x00000000c000a6cd                mapVASFirstTime
 .text          0x00000000c000a7c8       0x5f coreobjs/c++.32
                0x00000000c000a7c8                __cxa_atexit
                0x00000000c000a7cb                __cxa_finalize
                0x00000000c000a7cc                __stack_chk_fail
                0x00000000c000a802                __cxa_pure_virtual
                0x00000000c000a813                operator new[](unsigned long)
                0x00000000c000a818                operator delete(void*, unsigned long)
                0x00000000c000a81d                operator delete[](void*)
                0x00000000c000a822                operator delete[](void*, unsigned long)
 .text          0x00000000c000a827      0x254 dbg/kconsole.32
                0x00000000c000a827                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8c7                Dbg::logc(char)
                0x00000000c000a8e7                Dbg::logs(char*)
                0x00000000c000a906                Dbg::logWriteInt(unsigned int)
                0x00000000c000a924                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a945                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa7b        0x1 
 .text          0x00000000c000aa7c      0x2d4 dbg/usban.32
                0x00000000c000aa7c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aae8                __ubsan_handle_type_mismatch_v1
                0x00000000c000abc4                __ubsan_handle_pointer_overflow
                0x00000000c000abf0                __ubsan_handle_out_of_bounds
                0x00000000c000ac1c                __ubsan_handle_add_overflow
                0x00000000c000ac48                __ubsan_handle_load_invalid_value
                0x00000000c000ac74                __ubsan_handle_divrem_overflow
                0x00000000c000aca0                __ubsan_handle_mul_overflow
                0x00000000c000accc                __ubsan_handle_sub_overflow
                0x00000000c000acf8                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad24                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad50      0x81b fs/symlink.32
                0x00000000c000ae9f                KiDeinitialiseSymlinks(void*)
                0x00000000c000af32                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000afb5                KiIsSymlinkRegistered(char const*)
                0x00000000c000b12b                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b2bf                KeCreateSymlink(char const*, char const*)
                0x00000000c000b3fb                KeInitialiseSymlinks()
 *fill*         0x00000000c000b56b        0x1 
 .text          0x00000000c000b56c      0xd58 fs/vfs.32
                0x00000000c000b56c                File::read(unsigned long long, void*, int*)
                0x00000000c000b5c4                File::write(unsigned long long, void*, int*)
                0x00000000c000b61c                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b674                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b6a2                File::isAtty()
                0x00000000c000b6a6                Directory::isAtty()
                0x00000000c000b6aa                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b6b0                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b6b6                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b6bc                File::~File()
                0x00000000c000b6bc                File::~File()
                0x00000000c000b6e0                File::~File()
                0x00000000c000b70a                Directory::~Directory()
                0x00000000c000b70a                Directory::~Directory()
                0x00000000c000b72e                Directory::~Directory()
                0x00000000c000b758                Filesystem::Filesystem()
                0x00000000c000b758                Filesystem::Filesystem()
                0x00000000c000b77c                Filesystem::~Filesystem()
                0x00000000c000b77c                Filesystem::~Filesystem()
                0x00000000c000b78a                Filesystem::~Filesystem()
                0x00000000c000b7ae                Fs::getcwd(Process*, char*, int)
                0x00000000c000b7d8                Fs::initVFS()
                0x00000000c000b802                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba0c                File::File(char const*, Process*, bool)
                0x00000000c000ba0c                File::File(char const*, Process*, bool)
                0x00000000c000baea                File::File(char const*, Process*)
                0x00000000c000baea                File::File(char const*, Process*)
                0x00000000c000bb08                File::open(FileOpenMode)
                0x00000000c000bb66                File::close()
                0x00000000c000bbc6                File::seek(unsigned long long)
                0x00000000c000bc1c                File::truncate(unsigned long long)
                0x00000000c000bc72                File::tell(unsigned long long*)
                0x00000000c000bcc2                File::rewind()
                0x00000000c000bcd6                File::unlink()
                0x00000000c000bd22                File::rename(char const*)
                0x00000000c000bd70                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bdcc                File::exists()
                0x00000000c000be0a                File::stat(unsigned long long*, bool*)
                0x00000000c000be6b                Fs::setcwd(Process*, char*)
                0x00000000c000bfca                Directory::Directory(char const*, Process*)
                0x00000000c000bfca                Directory::Directory(char const*, Process*)
                0x00000000c000c092                Directory::open()
                0x00000000c000c0ee                Directory::close()
                0x00000000c000c14e                Directory::unlink()
                0x00000000c000c19a                Directory::rename(char const*)
                0x00000000c000c1e8                Directory::exists()
                0x00000000c000c226                Directory::read(dirent*)
                0x00000000c000c272                Directory::create()
                0x00000000c000c2be                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c2c4       0x86 hal/bus.32
                0x00000000c000c2c4                Bus::Bus(char const*)
                0x00000000c000c2c4                Bus::Bus(char const*)
                0x00000000c000c2fc                Bus::~Bus()
                0x00000000c000c2fc                Bus::~Bus()
                0x00000000c000c320                Bus::~Bus()
 .text          0x00000000c000c34a       0x96 hal/buzzer.32
                0x00000000c000c34a                beepThread(void*)
                0x00000000c000c387                Krnl::beep(int, int, bool)
 .text          0x00000000c000c3e0      0x45f hal/clock.32
                0x00000000c000c3e0                User::loadClockSettings(int)
                0x00000000c000c432                Clock::Clock(char const*)
                0x00000000c000c432                Clock::Clock(char const*)
                0x00000000c000c468                Clock::~Clock()
                0x00000000c000c468                Clock::~Clock()
                0x00000000c000c48c                Clock::~Clock()
                0x00000000c000c4b6                Clock::timeInSecondsLocal()
                0x00000000c000c4fe                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c557                datetimeToSeconds(datetime_t)
                0x00000000c000c676                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c6d6                secondsToDatetime(unsigned long long)
                0x00000000c000c81a                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c83f        0x1 
 .text          0x00000000c000c840      0x464 hal/device.32
                0x00000000c000c840                Device::hibernate()
                0x00000000c000c842                Device::wake()
                0x00000000c000c844                Device::detect()
                0x00000000c000c846                Device::disableLegacy()
                0x00000000c000c848                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c84a                DriverlessDevice::close(int, int, void*)
                0x00000000c000c84e                DriverlessDevice::detect()
                0x00000000c000c850                DriverlessDevice::open(int, int, void*)
                0x00000000c000c864                Device::~Device()
                0x00000000c000c864                Device::~Device()
                0x00000000c000c872                Device::~Device()
                0x00000000c000c89a                Device::findAndLoadDriver()
                0x00000000c000c8a8                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c8ce                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c90e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c938                Device::getParent()
                0x00000000c000c944                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c962                Device::addChild(Device*)
                0x00000000c000c9a6                Device::removeAllChildren()
                0x00000000c000c9ec                Device::hibernateAll()
                0x00000000c000ca1c                Device::wakeAll()
                0x00000000c000ca4c                Device::detectAll()
                0x00000000c000ca7c                Device::disableLegacyAll()
                0x00000000c000ca7e                Device::loadDriversForAll()
                0x00000000c000ca80                Device::closeAll()
                0x00000000c000cab6                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000caec                Device::setName(char const*)
                0x00000000c000cafa                Device::Device(char const*)
                0x00000000c000cafa                Device::Device(char const*)
                0x00000000c000cbf6                Device::getName()
                0x00000000c000cc00                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc00                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc36                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cc7a                getDevicesOfType(DeviceType)
 .text          0x00000000c000cca4       0x86 hal/diskctrl.32
                0x00000000c000cca4                HardDiskController::HardDiskController(char const*)
                0x00000000c000cca4                HardDiskController::HardDiskController(char const*)
                0x00000000c000ccdc                HardDiskController::~HardDiskController()
                0x00000000c000ccdc                HardDiskController::~HardDiskController()
                0x00000000c000cd00                HardDiskController::~HardDiskController()
 .text          0x00000000c000cd2a       0xe2 hal/diskphys.32
                0x00000000c000cd2a                PhysicalDisk::eject()
                0x00000000c000cd2e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cd2e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cd96                PhysicalDisk::startCache()
                0x00000000c000cdbe                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cdbe                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cde2                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ce0c        0x0 hal/fpu.32
 .text          0x00000000c000ce0c      0x359 hal/intctrl.32
                0x00000000c000ce0c                int_handler
                0x00000000c000ce96                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cee0                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d014                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d048                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d0c6                setupINTS()
                0x00000000c000d123                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000d165        0x1 
 .text          0x00000000c000d166      0x8be hal/keybrd.32
                0x00000000c000d166                startGUI(void*)
                0x00000000c000d1d4                startGUIVESA(void*)
                0x00000000c000d242                sendKeyToTerminal(unsigned char)
                0x00000000c000d31d                sendKeyboardToken(KeyboardToken)
                0x00000000c000d807                clearInternalKeybuffer(VgaText*)
                0x00000000c000d83c                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d99a                Keyboard::Keyboard(char const*)
                0x00000000c000d99a                Keyboard::Keyboard(char const*)
                0x00000000c000d9d6                Keyboard::~Keyboard()
                0x00000000c000d9d6                Keyboard::~Keyboard()
                0x00000000c000d9fa                Keyboard::~Keyboard()
 .text          0x00000000c000da24      0x3f8 hal/logidisk.32
                0x00000000c000da24                LogicalDisk::close(int, int, void*)
                0x00000000c000da28                LogicalDisk::~LogicalDisk()
                0x00000000c000da28                LogicalDisk::~LogicalDisk()
                0x00000000c000da4c                LogicalDisk::~LogicalDisk()
                0x00000000c000da76                LogicalDisk::open(int, int, void*)
                0x00000000c000da8a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000dac2                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000db08                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000db08                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dbc8                LogicalDisk::assignDriveLetter()
                0x00000000c000dc82                LogicalDisk::mount()
                0x00000000c000dcca                LogicalDisk::unmount()
                0x00000000c000dcda                LogicalDisk::eject()
                0x00000000c000dcee                LogicalDisk::unassignDriveLetter()
                0x00000000c000dd44                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ddb0                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000de1c       0x86 hal/mouse.32
                0x00000000c000de1c                Mouse::Mouse(char const*)
                0x00000000c000de1c                Mouse::Mouse(char const*)
                0x00000000c000de54                Mouse::~Mouse()
                0x00000000c000de54                Mouse::~Mouse()
                0x00000000c000de78                Mouse::~Mouse()
 .text          0x00000000c000dea2       0x90 hal/nic.32
                0x00000000c000dea2                NIC::getMAC()
                0x00000000c000dea8                NIC::write(int, unsigned char*, int*)
                0x00000000c000deae                NIC::NIC(char const*)
                0x00000000c000deae                NIC::NIC(char const*)
                0x00000000c000dee4                NIC::~NIC()
                0x00000000c000dee4                NIC::~NIC()
                0x00000000c000df08                NIC::~NIC()
 .text          0x00000000c000df32      0x33b hal/partition.32
                0x00000000c000df32                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dfda                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e26d        0x3 
 .text          0x00000000c000e270       0x86 hal/serial.32
                0x00000000c000e270                Serial::Serial(char const*)
                0x00000000c000e270                Serial::Serial(char const*)
                0x00000000c000e2a8                Serial::~Serial()
                0x00000000c000e2a8                Serial::~Serial()
                0x00000000c000e2cc                Serial::~Serial()
 *fill*         0x00000000c000e2f6        0x2 
 .text          0x00000000c000e2f8      0x234 hal/timer.32
                0x00000000c000e2f8                Timer::Timer(char const*)
                0x00000000c000e2f8                Timer::Timer(char const*)
                0x00000000c000e330                Timer::~Timer()
                0x00000000c000e330                Timer::~Timer()
                0x00000000c000e354                Timer::~Timer()
                0x00000000c000e37e                Timer::read()
                0x00000000c000e389                setupTimer(int)
                0x00000000c000e3c4                timerHandler(unsigned int)
 .text          0x00000000c000e52c      0x444 hal/vcache.32
                0x00000000c000e52c                VCache::VCache(PhysicalDisk*)
                0x00000000c000e52c                VCache::VCache(PhysicalDisk*)
                0x00000000c000e69c                VCache::invalidateReadBuffer()
                0x00000000c000e6ac                VCache::writeWriteBuffer()
                0x00000000c000e6f8                VCache::~VCache()
                0x00000000c000e6f8                VCache::~VCache()
                0x00000000c000e750                VCache::~VCache()
                0x00000000c000e778                VCache::write(unsigned long long, int, void*)
                0x00000000c000e866                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e970      0x4c7 hal/video.32
                0x00000000c000e970                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e9bc                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ea2c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eaaa                Video::clearScreen(unsigned int)
                0x00000000c000eade                Video::putpixel(int, int, unsigned int)
                0x00000000c000eaec                Video::readPixelApprox(int, int)
                0x00000000c000eb00                Video::Video(char const*)
                0x00000000c000eb00                Video::Video(char const*)
                0x00000000c000eb36                Video::~Video()
                0x00000000c000eb36                Video::~Video()
                0x00000000c000eb5a                Video::~Video()
                0x00000000c000eb84                Video::isMonochrome()
                0x00000000c000eb90                Video::getWidth()
                0x00000000c000eb9c                Video::getHeight()
                0x00000000c000eba8                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ec64                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000edcc                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ee37        0x1 
 .text          0x00000000c000ee38     0x138b hw/acpi.32
                0x00000000c000ee38                ACPI::close(int, int, void*)
                0x00000000c000eeec                findRSDP()
                0x00000000c000ef84                loadACPITables(unsigned char*)
                0x00000000c000f1f0                findRSDT(unsigned char*)
                0x00000000c000f348                findDataTable(unsigned char*, char*)
                0x00000000c000f3c8                scanMADT()
                0x00000000c000f880                ACPI::ACPI()
                0x00000000c000f880                ACPI::ACPI()
                0x00000000c000f8d4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f9d0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fa9c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000faa4                ACPI::detectPCI()
                0x00000000c000fcc4                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fd0c                ACPI::sleep()
                0x00000000c000fd28                ACPI::open(int, int, void*)
 *fill*         0x00000000c00101c3        0x1 
 .text          0x00000000c00101c4      0xbc5 hw/cpu.32
                0x00000000c00101c4                CPU::close(int, int, void*)
                0x00000000c00101c8                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c00101e4                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c00101fc                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0010270                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00102f4                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010322                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0010350                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001037e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00103ac                CPU::CPU()
                0x00000000c00103ac                CPU::CPU()
                0x00000000c001043a                CPU::displayFeatures()
                0x00000000c001043c                CPU::detectFeatures()
                0x00000000c0010b10                CPU::setupSMEP()
                0x00000000c0010b1c                CPU::setupUMIP()
                0x00000000c0010b26                CPU::setupTSC()
                0x00000000c0010b30                CPU::setupLargePages()
                0x00000000c0010b3a                CPU::setupPAT()
                0x00000000c0010b76                CPU::setupMTRR()
                0x00000000c0010b78                CPU::setupGlobalPages()
                0x00000000c0010b82                CPU::allowUsermodeDataAccess()
                0x00000000c0010b94                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010ba6                CPU::setupSMAP()
                0x00000000c0010bb4                CPU::setupFeatures()
                0x00000000c0010c80                CPU::open(int, int, void*)
 .text          0x00000000c0010d89       0xb6 krnl/atexit.32
                0x00000000c0010d89                KeInitialiseAtexit()
                0x00000000c0010da8                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010ddc                KeExecuteAtexit()
 .text          0x00000000c0010e3f       0xdf krnl/bootmsg.32
                0x00000000c0010e3f                KeDisplaySplashScreen()
                0x00000000c0010ebb                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010f1e        0x2 
 .text          0x00000000c0010f20       0x1d krnl/compat.32
                0x00000000c0010f20                Krnl::handlePowerButton()
                0x00000000c0010f30                Krnl::handleSleepButton()
 .text          0x00000000c0010f3d       0x2b krnl/crc32.32
                0x00000000c0010f3d                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010f68      0x5bf krnl/env.32
                0x00000000c0010f68                EnvVarContainer::getEnv(char const*)
                0x00000000c0010fa6                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0011068                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001106a                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001128e                EnvVarContainer::__loadSystem()
                0x00000000c00112a8                EnvVarContainer::__loadUser()
                0x00000000c00112aa                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112aa                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00112cc                EnvVarContainer::~EnvVarContainer()
                0x00000000c00112cc                EnvVarContainer::~EnvVarContainer()
                0x00000000c00112fc                KeGetEnv(Process*, char const*)
                0x00000000c0011361                KeSetEnvSystem(char const*, char const*)
                0x00000000c001137b                KeSetEnvUser(char const*, char const*)
                0x00000000c001139a                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00113ad                KeDeleteEnvSystem(char const*)
                0x00000000c00113ae                KeDeleteEnvUser(char const*)
                0x00000000c00113af                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00113b0                KeNewProcessEnv(Process*)
                0x00000000c00113d2                KeCopyProcessEnv(Process*, Process*)
                0x00000000c001141e                KeLoadSystemEnv()
                0x00000000c001144c                KeLoadUserEnv()
                0x00000000c0011472                KeFlushEnv()
                0x00000000c0011473                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011493                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011527       0x94 krnl/inlines.32
                0x00000000c0011527                CPU::current()
                0x00000000c0011533                operator new(unsigned long)
                0x00000000c0011538                operator delete(void*)
                0x00000000c001153d                disableIRQs()
                0x00000000c001153f                enableIRQs()
                0x00000000c0011541                lockScheduler()
                0x00000000c0011549                unlockScheduler()
                0x00000000c0011558                lockStuff()
                0x00000000c0011566                unlockStuff()
                0x00000000c00115a0                Virt::getAKernelVAS()
                0x00000000c00115a6                __not_memcpy
 .text          0x00000000c00115bb        0xc krnl/panic.32
                0x00000000c00115bb                KePanic(char const*)
 .text          0x00000000c00115c7      0x142 krnl/powctrl.32
                0x00000000c00115c7                KePowerThread(void*)
                0x00000000c00115f5                KeChangePowerSettings(PowerSettings)
                0x00000000c001160b                KeUserIOReceived()
                0x00000000c0011616                KeHandlePowerButton()
                0x00000000c001164b                KeHandleSleepButton()
                0x00000000c0011680                KeSetupPowerManager()
 .text          0x00000000c0011709       0x9d krnl/random.32
                0x00000000c0011709                KeRand()
                0x00000000c001174b                KeSeedRand(unsigned int)
                0x00000000c0011774                KeInitRand()
 *fill*         0x00000000c00117a6        0x2 
 .text          0x00000000c00117a8      0x1bc krnl/resolve.32
                0x00000000c00117a8                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011964      0x322 krnl/signal.32
                0x00000000c0011964                KiSigKill(int)
                0x00000000c0011978                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011979                KiDefaultSignalHandlerPause(int)
                0x00000000c00119a5                KiDefaultSignalHandlerResume(int)
                0x00000000c00119d1                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00119d6                KeInitSignals()
                0x00000000c0011a28                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011a5e                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011adb                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011bd2                KiCheckSignalZ
                0x00000000c0011c14                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011c4f                KiFinishSignalZ
 .text          0x00000000c0011c86      0xdf3 krnl/syscalls.32
                0x00000000c0011c86                SysSeekDir(regs*)
                0x00000000c0011c8b                SysTellDir(regs*)
                0x00000000c0011c90                SysVerify(regs*)
                0x00000000c0011c9a                SysGetArgc(regs*)
                0x00000000c0011cae                SysTTYName(regs*)
                0x00000000c0011cb6                SysFormatDisk(regs*)
                0x00000000c0011d2d                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011d81                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011dda                SysShutdown(regs*)
                0x00000000c0011e38                SysRealpath(regs*)
                0x00000000c0011e7c                SysReadDir(regs*)
                0x00000000c0011efc                SysIsATTY(regs*)
                0x00000000c0011f56                SysSeek(regs*)
                0x00000000c0011fad                SysTell(regs*)
                0x00000000c001201a                SysSize(regs*)
                0x00000000c001208d                SysSizeFromFilename(regs*)
                0x00000000c00121a1                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00122d2                SysClose(regs*)
                0x00000000c0012332                SysOpenDir(regs*)
                0x00000000c00123af                SysMakeDir(regs*)
                0x00000000c001241d                SysCloseDir(regs*)
                0x00000000c0012471                SysWait(regs*)
                0x00000000c0012492                SysNotImpl(regs*)
                0x00000000c00124ad                SysPanic(regs*)
                0x00000000c00124c8                SysRmdir(regs*)
                0x00000000c001252d                SysUnlink(regs*)
                0x00000000c0012592                SysGetArgv(regs*)
                0x00000000c00125df                SysUSleep(regs*)
                0x00000000c0012608                SysSpawn(regs*)
                0x00000000c001267b                SysGetEnv(regs*)
                0x00000000c001272c                SysSetFatAttrib(regs*)
                0x00000000c001279f                SysPipe(regs*)
                0x00000000c00127e4                SysGetUnixTime(regs*)
                0x00000000c00127f8                string_ends_with(char const*, char const*)
                0x00000000c0012840                SysOpen(regs*)
                0x00000000c0012a37                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012a79        0x3 
 .text          0x00000000c0012a7c      0x159 net/ethernet.32
                0x00000000c0012a7c                KeSwitchEndian16(unsigned short)
                0x00000000c0012aa0                KeSwitchEndian32(unsigned int)
                0x00000000c0012ad0                EthernetCRC32(unsigned char*, int)
                0x00000000c0012b74                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012bd5      0xd56 reg/cm.32
                0x00000000c0012bd5                CmOpen(char const*)
                0x00000000c0012cf3                CmClose(Reghive_Tag*)
                0x00000000c0012d09                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012d45                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012dbc                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012dfb                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012e2d                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012e69                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012e91                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012eb2                CmExpand(Reghive_Tag*, int)
                0x00000000c0012f2d                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012fb3                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c00130a7                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c00131e3                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0013244                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0013274                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c00132ab                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00132d5                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013315                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00133b9                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c00133e7                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013585                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00135d2                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001364c                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001369f                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013763                zStrtok(char*, char const*)
                0x00000000c00137d5                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013856                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00138f9                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001392b      0x52a reg/registry.32
                0x00000000c001392b                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013a9c                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013bf1                Reg::getLine(char*, char*, char*)
                0x00000000c0013c28                Reg::readInt(char*, char*, int*)
                0x00000000c0013d16                Reg::readString(char*, char*, char*, int)
                0x00000000c0013d97                Reg::readBool(char*, char*, bool*)
                0x00000000c0013dbc                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013de8                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013e14                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013e55       0x36 sys/eject.32
                0x00000000c0013e55                SysEject(regs*)
 .text          0x00000000c0013e8b       0x18 sys/exit.32
                0x00000000c0013e8b                SysExit(regs*)
 .text          0x00000000c0013ea3       0x1f sys/getcwd.32
                0x00000000c0013ea3                SysGetCwd(regs*)
 .text          0x00000000c0013ec2        0xc sys/getpid.32
                0x00000000c0013ec2                SysGetPID(regs*)
 .text          0x00000000c0013ece       0x1a sys/getramdata.32
                0x00000000c0013ece                SysGetRAMData(regs*)
 .text          0x00000000c0013ee8       0x82 sys/getvgaptr.32
                0x00000000c0013ee8                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013f6a        0x2 
 .text          0x00000000c0013f6c       0xb9 sys/kill.32
                0x00000000c0013f6c                SysKill(regs*)
 .text          0x00000000c0014025       0xa8 sys/loaddll.32
                0x00000000c0014025                SysLoadDLL(regs*)
 .text          0x00000000c00140cd       0x68 sys/read.32
                0x00000000c00140cd                SysRead(regs*)
 .text          0x00000000c0014135       0x29 sys/registersignal.32
                0x00000000c0014135                SysRegisterSignal(regs*)
 .text          0x00000000c001415e      0x19c sys/registry.32
                0x00000000c001415e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00141d5                SysRegistryReadExtent(regs*)
                0x00000000c001421d                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014245                SysRegistryEnterDirectory(regs*)
                0x00000000c001426d                SysRegistryGetNext(regs*)
                0x00000000c0014295                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00142cf                SysRegistryOpen(regs*)
                0x00000000c00142e3                SysRegistryClose(regs*)
 .text          0x00000000c00142fa       0x55 sys/sbrk.32
                0x00000000c00142fa                SysSbrk(regs*)
 .text          0x00000000c001434f       0x1c sys/setcwd.32
                0x00000000c001434f                SysSetCwd(regs*)
 .text          0x00000000c001436b       0x96 sys/settime.32
                0x00000000c001436b                SysSetTime(regs*)
 .text          0x00000000c0014401       0x2d sys/symlink.32
                0x00000000c0014401                SysSymlink(regs*)
 .text          0x00000000c001442e       0x4a sys/timezone.32
                0x00000000c001442e                SysTimezone(regs*)
 .text          0x00000000c0014478       0xfc sys/truncate.32
                0x00000000c0014478                SysTruncate(regs*)
 .text          0x00000000c0014574       0x68 sys/write.32
                0x00000000c0014574                SysWrite(regs*)
 .text          0x00000000c00145dc       0x62 sys/wsbe.32
                0x00000000c00145dc                SysWsbe(regs*)
 .text          0x00000000c001463e       0x25 sys/yield.32
                0x00000000c001463e                SysYield(regs*)
 .text          0x00000000c0014663     0x11e6 thr/elf.32
                0x00000000c0014663                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00148f1                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014b03                Thr::runtimeReferenceHelper()
                0x00000000c0014b16                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014b65                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014e23                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001555c                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001558e                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00155c5                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00155df                Thr::loadDLL(char const*, bool)
                0x00000000c0015810                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0015849        0x3 
 .text          0x00000000c001584c     0x13d9 thr/prcssthr.32
                0x00000000c001584c                userModeEntryPoint(void*)
                0x00000000c0015874                changeTSS
                0x00000000c00158a4                switchToThread(ThreadControlBlock*)
                0x00000000c0015954                Process::addArgs(char**)
                0x00000000c00159c0                Process::Process(char const*, Process*, char**)
                0x00000000c00159c0                Process::Process(char const*, Process*, char**)
                0x00000000c0015bcc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015bcc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015da0                taskStartupFunction
                0x00000000c0015dac                Semaphore::Semaphore(int)
                0x00000000c0015dac                Semaphore::Semaphore(int)
                0x00000000c0015ddc                Mutex::Mutex()
                0x00000000c0015ddc                Mutex::Mutex()
                0x00000000c0015df0                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015efc                Process::createUserThread()
                0x00000000c0015f1c                setupMultitasking(void (*)())
                0x00000000c0016040                schedule()
                0x00000000c00160d4                Semaphore::tryAcquire()
                0x00000000c00161a8                Semaphore::assertLocked(char const*)
                0x00000000c001622c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016254                blockTask(TaskState)
                0x00000000c001628c                waitTask(int, int*, int)
                0x00000000c00162d0                milliTenthSleepUntil(unsigned int)
                0x00000000c0016370                milliTenthSleep(unsigned int)
                0x00000000c0016384                sleep(unsigned int)
                0x00000000c00163a0                Semaphore::acquire()
                0x00000000c0016468                taskReturned
                0x00000000c00164ac                Thr::processFromPID(int)
                0x00000000c0016558                unblockTask(ThreadControlBlock*)
                0x00000000c0016604                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00168d8                cleanerTaskFunction(void*)
                0x00000000c00169e0                terminateTask(int)
                0x00000000c0016acc                Thr::terminateFromIRQ(int)
                0x00000000c0016adc                Semaphore::release()
 .text          0x00000000c0016c25      0xc27 vm86/vm8086.32
                0x00000000c0016c25                Vm::inbv(unsigned short)
                0x00000000c0016c38                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016c6e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016c7e                Vm::getSegment(unsigned int)
                0x00000000c0016c86                Vm::getOffset(unsigned int)
                0x00000000c0016c8b                Vm::mainloop2()
                0x00000000c0016cc5                Vm::mainVm8086Loop(void*)
                0x00000000c0016cd5                Vm::mainloop3(unsigned long)
                0x00000000c0016cfb                Vm::initialise8086()
                0x00000000c0016d3e                Vm::finish8086()
                0x00000000c0016d9f                Vm::getOutput8086(unsigned char*)
                0x00000000c0016dc4                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016e7d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001701b                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00170b4                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00170c5                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00170d7                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00170e8                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00170fd                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017113                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017128                Vm::faultHandler(regs*)
 .text          0x00000000c001784c      0xaf0 arch/i386/hal.32
                0x00000000c001784c                noCopro(unsigned long)
                0x00000000c001784d                nmiHandler(regs*, void*)
                0x00000000c0017866                doubleFault(regs*, void*)
                0x00000000c001787f                displayDebugInfo(regs*)
                0x00000000c0017c04                HalSystemIdle()
                0x00000000c0017c80                displayProgramFault(char const*)
                0x00000000c0017ccc                gpFault(regs*, void*)
                0x00000000c0017d33                pgFault(regs*, void*)
                0x00000000c0017dbc                otherISRHandler(regs*, void*)
                0x00000000c0017df0                opcodeFault(regs*, void*)
                0x00000000c0017e73                i386SaveCoprocessor(void*)
                0x00000000c0017e87                i386LoadCoprocessor(void*)
                0x00000000c0017e9b                x87EmulHandler(regs*, void*)
                0x00000000c0017f38                HalInitialiseCoprocessor()
                0x00000000c0017fe6                HalPanic(char const*)
                0x00000000c00180fa                HalQueryPerformanceCounter()
                0x00000000c0018115                HalInitialise()
                0x00000000c00182cb                HalMakeBeep(int)
                0x00000000c0018305                HalGetRand()
                0x00000000c0018308                HalEndOfInterrupt(int)
                0x00000000c0018339                HalRestart()
                0x00000000c001833a                HalShutdown()
                0x00000000c001833b                HalSleep()
 .text          0x00000000c001833c      0x2dc arch/i386/pic.32
                0x00000000c001833c                picIoWait()
                0x00000000c0018344                picDisable()
                0x00000000c0018378                picGetIRQReg(int)
                0x00000000c00183f4                picOpen()
                0x00000000c0018578                picEOI(int)
 .text          0x00000000c0018618      0x674 arch/i386/rtc.32
                0x00000000c0018618                RTC::open(int, int, void*)
                0x00000000c001861c                RTC::close(int, int, void*)
                0x00000000c0018620                RTC::timeInSecondsUTC()
                0x00000000c0018632                RTC::timeInDatetimeUTC()
                0x00000000c0018658                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018696                RTC::~RTC()
                0x00000000c0018696                RTC::~RTC()
                0x00000000c00186ba                RTC::~RTC()
                0x00000000c00186e4                RTC::get_update_in_progress_flag()
                0x00000000c00186fe                RTC::completeRTCRefresh()
                0x00000000c00189de                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018b8c                rtcIRQHandler(regs*, void*)
                0x00000000c0018bd2                RTC::RTC()
                0x00000000c0018bd2                RTC::RTC()
 .text          0x00000000c0018c8c      0x1f4 arch/i386/vga.32
                0x00000000c0018c8c                HalConsoleScroll(int, int)
                0x00000000c0018d94                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018df8                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018e80     0x14cf fs/fat/vfslink.32
                0x00000000c0018e80                FAT::getName()
                0x00000000c0018e88                FAT::tell(void*, unsigned long long*)
                0x00000000c0018ec4                FAT::stat(void*, unsigned long long*)
                0x00000000c0018f00                FAT::~FAT()
                0x00000000c0018f00                FAT::~FAT()
                0x00000000c0018f24                FAT::~FAT()
                0x00000000c0018f4c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018ff0                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00190b4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019298                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00194b4                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019674                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00197e4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019844                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00198a4                FAT::close(void*)
                0x00000000c00198f8                FAT::closeDir(void*)
                0x00000000c001994c                FAT::truncate(void*, unsigned long long)
                0x00000000c00199b8                FAT::seek(void*, unsigned long long)
                0x00000000c0019a10                fatWrapperReadDisk
                0x00000000c0019a50                fatWrapperWriteDisk
                0x00000000c0019a90                fatWrapperIoctl
                0x00000000c0019bac                FAT::FAT()
                0x00000000c0019bac                FAT::FAT()
                0x00000000c0019c04                FAT::fixFilepath(char*)
                0x00000000c0019c44                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019db8                FAT::openDir(char const*, void**)
                0x00000000c0019e68                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019f60                FAT::unlink(char const*)
                0x00000000c0019fe0                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a194                FAT::rename(char const*, char const*)
                0x00000000c001a260                FAT::mkdir(char const*)
                0x00000000c001a2e0                FAT::exists(char const*)
 *fill*         0x00000000c001a34f        0x1 
 .text          0x00000000c001a350       0x94 fs/iso9660/helper.32
                0x00000000c001a350                isoReadDiscSectorHelper
                0x00000000c001a3ac                iso_kprintf
                0x00000000c001a3c8                iso_kprintfd
 .text          0x00000000c001a3e4      0x71c fs/iso9660/vfslink.32
                0x00000000c001a3e4                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a3ea                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a3f0                ISO9660::getName()
                0x00000000c001a3f6                ISO9660::closeDir(void*)
                0x00000000c001a400                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a406                ISO9660::unlink(char const*)
                0x00000000c001a40c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a412                ISO9660::rename(char const*, char const*)
                0x00000000c001a418                ISO9660::mkdir(char const*)
                0x00000000c001a41e                ISO9660::~ISO9660()
                0x00000000c001a41e                ISO9660::~ISO9660()
                0x00000000c001a442                ISO9660::~ISO9660()
                0x00000000c001a46a                ISO9660::exists(char const*)
                0x00000000c001a47e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a564                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a5ac                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a5ee                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a62c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a67e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a7c0                ISO9660::close(void*)
                0x00000000c001a7f0                ISO9660::openDir(char const*, void**)
                0x00000000c001a8ca                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a9e7                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001aa66                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001aad8                ISO9660::ISO9660()
                0x00000000c001aad8                ISO9660::ISO9660()
 .text          0x00000000c001ab00      0x26c hal/sound/sndcard.32
                0x00000000c001ab00                SoundCard::beginPlayback()
                0x00000000c001ab0e                SoundCard::stopPlayback()
                0x00000000c001ab1c                SoundCard::SoundCard(char const*)
                0x00000000c001ab1c                SoundCard::SoundCard(char const*)
                0x00000000c001abba                SoundCard::~SoundCard()
                0x00000000c001abba                SoundCard::~SoundCard()
                0x00000000c001abde                SoundCard::~SoundCard()
                0x00000000c001ac08                SoundCard::configureRates(int, int, int)
                0x00000000c001ac38                SoundCard::getSamples16(int, short*)
                0x00000000c001ac94                SoundCard::getSamples32(int, int*)
                0x00000000c001ad1a                SoundCard::addChannel(SoundPort*)
                0x00000000c001ad58                SoundCard::removeChannel(int)
 .text          0x00000000c001ad6c      0x38a hal/sound/sndport.32
                0x00000000c001ad6c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ad6c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001adf8                SoundPort::~SoundPort()
                0x00000000c001adf8                SoundPort::~SoundPort()
                0x00000000c001ae2c                SoundPort::unpause()
                0x00000000c001ae38                SoundPort::pause()
                0x00000000c001ae44                SoundPort::getBufferUsed()
                0x00000000c001ae4c                SoundPort::getBufferSize()
                0x00000000c001ae54                SoundPort::buffer16(short*, int)
                0x00000000c001aee0                SoundPort::buffer32(int*, int)
                0x00000000c001af6c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b038                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b0f6        0x0 hw/bus/isa.32
 .text          0x00000000c001b0f6      0xbb7 hw/bus/pci.32
                0x00000000c001b0f6                PCI::open(int, int, void*)
                0x00000000c001b114                PCI::close(int, int, void*)
                0x00000000c001b118                PCI::PCI()
                0x00000000c001b118                PCI::PCI()
                0x00000000c001b1b0                PCI::readBAR8(unsigned int, int)
                0x00000000c001b1cc                PCI::readBAR16(unsigned int, int)
                0x00000000c001b1ea                PCI::readBAR32(unsigned int, int)
                0x00000000c001b206                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b226                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b248                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b268                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b2de                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b388                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b3ac                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b3d4                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b41e                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b446                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b46a                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b48e                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4b6                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b51a                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b602                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b8c8                PCI::checkBus(unsigned char)
                0x00000000c001b8ec                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001ba66                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bbe2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bc54                PCI::detect()
 *fill*         0x00000000c001bcad        0x1 
 .text          0x00000000c001bcae      0xb9a hw/diskctrl/ide.32
                0x00000000c001bcae                IDE::close(int, int, void*)
                0x00000000c001bcb2                IDE::IDE()
                0x00000000c001bcb2                IDE::IDE()
                0x00000000c001bce6                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bcf8                selectDrive(unsigned char, unsigned char)
                0x00000000c001bcfa                IDE::getBase(unsigned char)
                0x00000000c001bd0c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bdcc                IDE::read(unsigned char, unsigned char)
                0x00000000c001be7a                IDE::waitInterrupt(unsigned char)
                0x00000000c001bedc                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bef8                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bf14                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bf5e                IDE::open(int, int, void*)
                0x00000000c001c39c                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c46c                IDE::detect()
                0x00000000c001c73a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c7f4                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c848      0x32a hw/diskctrl/satabus.32
                0x00000000c001c848                SATABus::close(int, int, void*)
                0x00000000c001c84c                SATABus::detect()
                0x00000000c001c84e                SATABus::SATABus()
                0x00000000c001c84e                SATABus::SATABus()
                0x00000000c001c8d4                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c906                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c94e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c96e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c998                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001caa8                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cb52                SATABus::open(int, int, void*)
 .text          0x00000000c001cb72      0x93f hw/diskphys/ata.32
                0x00000000c001cb72                ATA::close(int, int, void*)
                0x00000000c001cb96                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cb98                ATA::ATA()
                0x00000000c001cb98                ATA::ATA()
                0x00000000c001cbc6                ATA::flush(bool)
                0x00000000c001cc14                ATA::readyForCommand()
                0x00000000c001cc60                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cff6                ATA::detectCHS()
                0x00000000c001d020                ATA::open(int, int, void*)
                0x00000000c001d0ec                combineCharAndColour(char, unsigned char)
                0x00000000c001d0fd                combineColours(unsigned char, unsigned char)
                0x00000000c001d10a                ATA::read(unsigned long long, int, void*)
                0x00000000c001d2e0                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d4b1        0x1 
 .text          0x00000000c001d4b2      0x618 hw/diskphys/atapi.32
                0x00000000c001d4b2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d4b8                ATAPI::close(int, int, void*)
                0x00000000c001d4dc                ATAPI::ATAPI()
                0x00000000c001d4dc                ATAPI::ATAPI()
                0x00000000c001d50a                ATAPI::readyForCommand()
                0x00000000c001d55c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d824                ATAPI::diskRemoved()
                0x00000000c001d85e                ATAPI::eject()
                0x00000000c001d8a6                ATAPI::diskInserted()
                0x00000000c001d8b2                ATAPI::detectMedia()
                0x00000000c001d970                ATAPI::open(int, int, void*)
                0x00000000c001da50                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001daca      0x807 hw/diskphys/sata.32
                0x00000000c001daca                SATA::close(int, int, void*)
                0x00000000c001daee                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001daf0                SATA::open(int, int, void*)
                0x00000000c001db9a                SATA::SATA()
                0x00000000c001db9a                SATA::SATA()
                0x00000000c001dbc8                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001de1c                SATA::read(unsigned long long, int, void*)
                0x00000000c001e06c                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e2d1        0x1 
 .text          0x00000000c001e2d2      0x5d0 hw/diskphys/satapi.32
                0x00000000c001e2d2                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e2d8                SATAPI::close(int, int, void*)
                0x00000000c001e2fc                SATAPI::SATAPI()
                0x00000000c001e2fc                SATAPI::SATAPI()
                0x00000000c001e32a                SATAPI::diskRemoved()
                0x00000000c001e32c                SATAPI::diskInserted()
                0x00000000c001e348                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e626                SATAPI::eject()
                0x00000000c001e662                SATAPI::detectMedia()
                0x00000000c001e6b8                SATAPI::open(int, int, void*)
                0x00000000c001e7b8                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e8a2      0x45b hw/intctrl/apic.32
                0x00000000c001e8a2                IOAPIC::close(int, int, void*)
                0x00000000c001e8a8                apicGetBase()
                0x00000000c001e8ee                IOAPIC::IOAPIC()
                0x00000000c001e8ee                IOAPIC::IOAPIC()
                0x00000000c001e916                apicOpen()
                0x00000000c001ea92                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001eac4                IOAPIC::read(int)
                0x00000000c001eaec                IOAPIC::open(int, int, void*)
                0x00000000c001ebd2                IOAPIC::write(int, int)
                0x00000000c001ebfe                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ecfd        0x3 
 .text          0x00000000c001ed00       0xf0 hw/timer/apictimer.32
                0x00000000c001ed00                APICTimer::close(int, int, void*)
                0x00000000c001ed08                apicTimerHandler(regs*, void*)
                0x00000000c001ed30                APICTimer::open(int, int, void*)
                0x00000000c001eda0                APICTimer::write(int)
                0x00000000c001edc8                APICTimer::APICTimer()
                0x00000000c001edc8                APICTimer::APICTimer()
 .text          0x00000000c001edf0      0x1ad hw/timer/pit.32
                0x00000000c001edf0                PIT::write(int)
                0x00000000c001ee74                pitHandler(regs*, void*)
                0x00000000c001ee9c                PIT::open(int, int, void*)
                0x00000000c001eeec                PIT::close(int, int, void*)
                0x00000000c001ef1c                PIT::PIT()
                0x00000000c001ef1c                PIT::PIT()
 *fill*         0x00000000c001ef9d        0x3 
 .text          0x00000000c001efa0       0x83 arch/i386/avx.32
                0x00000000c001efa0                avxDetect
                0x00000000c001efca                avxSave
                0x00000000c001efdb                avxLoad
                0x00000000c001efec                avxInit
                0x00000000c001f00e                avxClose
                0x00000000c001f00f                wouldSheSayYes
 *fill*         0x00000000c001f023        0xd 
 .text          0x00000000c001f030      0x2ec arch/i386/interrupt.32
                0x00000000c001f030                isr0
                0x00000000c001f040                isr1
                0x00000000c001f04a                isr2
                0x00000000c001f054                isr3
                0x00000000c001f05e                isr4
                0x00000000c001f068                isr5
                0x00000000c001f072                isr6
                0x00000000c001f07c                isr7
                0x00000000c001f086                isr8
                0x00000000c001f08e                isr9
                0x00000000c001f098                isr10
                0x00000000c001f0a0                isr11
                0x00000000c001f0a8                isr12
                0x00000000c001f0b0                isr13
                0x00000000c001f0ca                isr14
                0x00000000c001f0d2                isr15
                0x00000000c001f0dc                isr16
                0x00000000c001f0e6                isr17
                0x00000000c001f0f0                isr18
                0x00000000c001f0fa                irq3
                0x00000000c001f104                irq4
                0x00000000c001f10e                irq5
                0x00000000c001f118                irq6
                0x00000000c001f122                irq7
                0x00000000c001f12c                irq8
                0x00000000c001f136                irq9
                0x00000000c001f140                irq10
                0x00000000c001f14a                irq11
                0x00000000c001f154                irq12
                0x00000000c001f15e                irq13
                0x00000000c001f168                irq14
                0x00000000c001f172                irq15
                0x00000000c001f17c                irq1
                0x00000000c001f183                irq2
                0x00000000c001f18a                isr96
                0x00000000c001f191                irq0
                0x00000000c001f196                int_common_stub
                0x00000000c001f1c8                syscall_common_stub
                0x00000000c001f2cc                irq16
                0x00000000c001f2d6                irq17
                0x00000000c001f2e0                irq18
                0x00000000c001f2ea                irq19
                0x00000000c001f2f4                irq20
                0x00000000c001f2fe                irq21
                0x00000000c001f308                irq22
                0x00000000c001f312                irq23
 *fill*         0x00000000c001f31c        0x4 
 .text          0x00000000c001f320       0x10 arch/i386/rdrand.32
                0x00000000c001f320                i386GetRDRAND
 .text          0x00000000c001f330       0x39 arch/i386/sse.32
                0x00000000c001f330                absolutelyNoChanceInHell
                0x00000000c001f330                sseDetect
                0x00000000c001f348                sseSave
                0x00000000c001f350                sseLoad
                0x00000000c001f358                sseInit
                0x00000000c001f368                sseClose
 *fill*         0x00000000c001f369        0x7 
 .text          0x00000000c001f370       0x49 arch/i386/x87.32
                0x00000000c001f376                x87Detect
                0x00000000c001f391                x87Save
                0x00000000c001f398                x87Load
                0x00000000c001f39f                x87Init
                0x00000000c001f3b8                x87Close
 *fill*         0x00000000c001f3b9        0x3 
 .text          0x00000000c001f3bc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f3e1        0x0 crtn.32
 *fill*         0x00000000c001f3e1        0x3 
 .text          0x00000000c001f3e4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f3e4                __divdi3
 *fill*         0x00000000c001f52f        0x1 
 .text          0x00000000c001f530      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f530                __moddi3
 *fill*         0x00000000c001f6ae        0x2 
 .text          0x00000000c001f6b0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f6b0                __udivdi3
 *fill*         0x00000000c001f7af        0x1 
 .text          0x00000000c001f7b0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f7b0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f8d0        0x0
 .iplt          0x00000000c001f8d0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f8ca        0xf
 .init          0x00000000c001f8ca        0x3 crti.32
                0x00000000c001f8ca                _init
 .init          0x00000000c001f8cd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f8d2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f8d7        0x2 crtn.32

.fini           0x00000000c001f8d9        0xa
 .fini          0x00000000c001f8d9        0x3 crti.32
                0x00000000c001f8d9                _fini
 .fini          0x00000000c001f8dc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f8e1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f8e4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f8e4       0x23 core/computer.32
                0x00000000c001f8e4                Computer::~Computer()
                0x00000000c001f8e4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f908       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f908       0x2a core/computer.32
                0x00000000c001f908                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f932       0x21
 .text._Z10idleCommonv
                0x00000000c001f932       0x21 core/idle.32
                0x00000000c001f932                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f954        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f954        0x2 core/unixfile.32
                0x00000000c001f954                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f954                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f956       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f956       0x42 core/unixfile.32
                0x00000000c001f956                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f956                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f998       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f998       0xd3 core/unixfile.32
                0x00000000c001f998                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fa6c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fa6c        0x7 core/unixfile.32
                0x00000000c001fa6c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fa74       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fa74       0xa1 core/unixfile.32
                0x00000000c001fa74                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb16        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb16        0x8 core/unixfile.32
                0x00000000c001fb16                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb1e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb1e       0x1a hal/device.32
                0x00000000c001fb1e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fb1e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb38       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb38       0x2a hal/device.32
                0x00000000c001fb38                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fb62       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fb62       0xdc hal/device.32
                0x00000000c001fb62                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc3e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc3e       0x42 hal/device.32
                0x00000000c001fc3e                LinkedList<Device>::LinkedList()
                0x00000000c001fc3e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fc80       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fc80       0x1c hal/timer.32
                0x00000000c001fc80                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fc9c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fc9c        0x7 hal/timer.32
                0x00000000c001fc9c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fca4       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fca4       0xbc hal/timer.32
                0x00000000c001fca4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fd60       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fd60       0xda hal/timer.32
                0x00000000c001fd60                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fe3c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fe3c       0x23 hw/acpi.32
                0x00000000c001fe3c                ACPI::~ACPI()
                0x00000000c001fe3c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fe60       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fe60       0x2a hw/acpi.32
                0x00000000c001fe60                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fe8c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fe8c        0x2 hw/acpi.32
                0x00000000c001fe8c                LinkedList<Device>::~LinkedList()
                0x00000000c001fe8c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fe90       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fe90       0x1c hw/acpi.32
                0x00000000c001fe90                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001feac        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001feac        0x7 hw/acpi.32
                0x00000000c001feac                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001feb4       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001feb4       0xb8 hw/acpi.32
                0x00000000c001feb4                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ff6c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ff6c       0x23 hw/cpu.32
                0x00000000c001ff6c                CPU::~CPU()
                0x00000000c001ff6c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ff90       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ff90       0x2a hw/cpu.32
                0x00000000c001ff90                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ffbc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ffbc        0x8 sys/kill.32
                0x00000000c001ffbc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ffc4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ffc4        0x2 thr/prcssthr.32
                0x00000000c001ffc4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ffc4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ffc8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ffc8       0x49 thr/prcssthr.32
                0x00000000c001ffc8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ffc8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020014       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020014       0x42 thr/prcssthr.32
                0x00000000c0020014                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020014                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c0020056       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020056       0x23 hw/bus/pci.32
                0x00000000c0020056                PCI::~PCI()
                0x00000000c0020056                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002007a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002007a       0x2a hw/bus/pci.32
                0x00000000c002007a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00200a4       0x23
 .text._ZN3IDED2Ev
                0x00000000c00200a4       0x23 hw/diskctrl/ide.32
                0x00000000c00200a4                IDE::~IDE()
                0x00000000c00200a4                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00200c8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00200c8       0x2a hw/diskctrl/ide.32
                0x00000000c00200c8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00200f2       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00200f2       0x23 hw/diskctrl/satabus.32
                0x00000000c00200f2                SATABus::~SATABus()
                0x00000000c00200f2                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020116       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020116       0x2a hw/diskctrl/satabus.32
                0x00000000c0020116                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020140       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020140       0x23 hw/diskphys/ata.32
                0x00000000c0020140                ATA::~ATA()
                0x00000000c0020140                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020164       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020164       0x2a hw/diskphys/ata.32
                0x00000000c0020164                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c002018e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c002018e       0x23 hw/diskphys/atapi.32
                0x00000000c002018e                ATAPI::~ATAPI()
                0x00000000c002018e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00201b2       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00201b2       0x2a hw/diskphys/atapi.32
                0x00000000c00201b2                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00201dc       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00201dc       0x23 hw/diskphys/sata.32
                0x00000000c00201dc                SATA::~SATA()
                0x00000000c00201dc                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020200       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020200       0x2a hw/diskphys/sata.32
                0x00000000c0020200                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002022a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002022a       0x23 hw/diskphys/satapi.32
                0x00000000c002022a                SATAPI::~SATAPI()
                0x00000000c002022a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002024e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002024e       0x2a hw/diskphys/satapi.32
                0x00000000c002024e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020278       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020278       0x23 hw/intctrl/apic.32
                0x00000000c0020278                IOAPIC::~IOAPIC()
                0x00000000c0020278                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002029c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002029c       0x2a hw/intctrl/apic.32
                0x00000000c002029c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00202c8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00202c8       0x23 hw/timer/apictimer.32
                0x00000000c00202c8                APICTimer::~APICTimer()
                0x00000000c00202c8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00202ec       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00202ec       0x2a hw/timer/apictimer.32
                0x00000000c00202ec                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020318       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020318       0x23 hw/timer/pit.32
                0x00000000c0020318                PIT::~PIT()
                0x00000000c0020318                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002033c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002033c       0x2a hw/timer/pit.32
                0x00000000c002033c                PIT::~PIT()

.rodata         0x00000000c0020366     0x31ea
                0x00000000c0020366                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020366        0x2 
 .ctors         0x00000000c0020368        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c002036c        0x4 core/unixfile.32
 .ctors         0x00000000c0020370        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020374        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020378                end_ctors = .
                0x00000000c0020378                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020378        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002037c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002037c                __DTOR_END__
                0x00000000c0020380                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020380        0x0 
 .rodata        0x00000000c0020380      0x101 acpica/utclib.32
                0x00000000c0020380                AcpiGbl_Ctypes
 *fill*         0x00000000c0020481        0x3 
 .rodata        0x00000000c0020484       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002049c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c00204e6       0x1a 
 .rodata        0x00000000c0020500       0xed fs/fat/ff.32
 *fill*         0x00000000c00205ed       0x13 
 .rodata        0x00000000c0020600      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020a00       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020a6f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020b84       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020bec       0x2c core/computer.32
                0x00000000c0020bec                vtable for Computer
 .rodata.str1.4
                0x00000000c0020c18       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020c48        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020c54       0x17 core/main.32
 *fill*         0x00000000c0020c6b        0x1 
 .rodata.str1.4
                0x00000000c0020c6c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020d11       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020d69       0x39 core/pipe.32
 *fill*         0x00000000c0020da2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020da4       0x1c core/pipe.32
                0x00000000c0020da4                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020dc0       0x2b core/terminal.32
 *fill*         0x00000000c0020deb        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020dec       0x1c core/terminal.32
                0x00000000c0020dec                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020e08       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020e2a       0x15 core/unixfile.32
 *fill*         0x00000000c0020e3f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020e40       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020e8b        0x8 core/unixfile.32
 *fill*         0x00000000c0020e93        0x1 
 .rodata.str1.4
                0x00000000c0020e94       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020eb4       0x1c core/unixfile.32
                0x00000000c0020eb4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020ed0       0x1c core/unixfile.32
                0x00000000c0020ed0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020eec      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021180      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00212a6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c00212d9       0x11 dbg/kconsole.32
 *fill*         0x00000000c00212d9        0x3 
 .rodata        0x00000000c00212dc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002142c      0x169 dbg/usban.32
 *fill*         0x00000000c0021595        0x3 
 .rodata.str1.4
                0x00000000c0021598      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00216cf      0x19e fs/symlink.32
 .rodata.str1.1
                0x00000000c002186d       0x26 fs/vfs.32
                                         0x28 (size before relaxing)
 *fill*         0x00000000c0021893        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021894       0x6c fs/vfs.32
                0x00000000c0021894                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021900       0x1c fs/vfs.32
                0x00000000c0021900                vtable for File
 .rodata._ZTV9Directory
                0x00000000c002191c       0x1c fs/vfs.32
                0x00000000c002191c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021938       0x2c hal/bus.32
                0x00000000c0021938                vtable for Bus
 .rodata.str1.1
                0x00000000c0021964       0x1e hal/clock.32
 *fill*         0x00000000c0021982        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021984       0x3c hal/clock.32
                0x00000000c0021984                vtable for Clock
 .rodata        0x00000000c00219c0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00219f0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021a48       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021a48       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021a48       0x2c hal/device.32
                0x00000000c0021a48                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021a74       0x2c hal/device.32
                0x00000000c0021a74                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021aa0       0x2c hal/diskctrl.32
                0x00000000c0021aa0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021acc       0x38 hal/diskphys.32
                0x00000000c0021acc                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021b04       0x3e hal/intctrl.32
 *fill*         0x00000000c0021b42        0x2 
 .rodata.str1.4
                0x00000000c0021b44       0x5d hal/intctrl.32
 .rodata        0x00000000c0021ba1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021bf4       0x34 hal/keybrd.32
                0x00000000c0021bf4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021c28       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021c6c       0x2c hal/logidisk.32
                0x00000000c0021c6c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021c98       0x2c hal/mouse.32
                0x00000000c0021c98                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021cc4       0x34 hal/nic.32
                0x00000000c0021cc4                vtable for NIC
 .rodata.str1.1
                0x00000000c0021cf8        0xb hal/partition.32
 *fill*         0x00000000c0021d03        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021d04       0x44 hal/serial.32
                0x00000000c0021d04                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021d48       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021d48        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021d48       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021d48       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021d48       0x30 hal/timer.32
                0x00000000c0021d48                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021d78       0x10 hal/vcache.32
                0x00000000c0021d78                vtable for VCache
 .rodata.str1.1
                0x00000000c0021d88       0x93 hal/video.32
 *fill*         0x00000000c0021e1b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021e1c       0x4c hal/video.32
                0x00000000c0021e1c                vtable for Video
 .rodata.str1.4
                0x00000000c0021e68       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021f03      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0022059       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0022059        0x8 hw/acpi.32
 *fill*         0x00000000c0022059        0x3 
 .rodata._ZTV4ACPI
                0x00000000c002205c       0x2c hw/acpi.32
                0x00000000c002205c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022088      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022203        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022204       0x2c hw/cpu.32
                0x00000000c0022204                vtable for CPU
 .rodata.str1.1
                0x00000000c0022230       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022270       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00222ac       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c002233d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022406       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002244e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0022479       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c00224ef       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022534        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002253e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002255f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c00225f5       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022649       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022675      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022841       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022898      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00229a8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00229a8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00229a8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00229a8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00229a8       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022a6a        0x2 
 .rodata        0x00000000c0022a6c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022a9c      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022c3b        0x1 
 .rodata.str1.4
                0x00000000c0022c3c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022caf       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022cc4       0x3c arch/i386/rtc.32
                0x00000000c0022cc4                vtable for RTC
 .rodata.str1.1
                0x00000000c0022d00       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022d41        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022d44       0x6c fs/fat/vfslink.32
                0x00000000c0022d44                vtable for FAT
 .rodata.str1.1
                0x00000000c0022db0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022db0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022ee8       0x6c fs/iso9660/vfslink.32
                0x00000000c0022ee8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022f54       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022f98       0x34 hal/sound/sndcard.32
                0x00000000c0022f98                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022fcc       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002300b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023043       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00230e4       0x2c hw/bus/pci.32
                0x00000000c00230e4                vtable for PCI
 .rodata.str1.1
                0x00000000c0023110       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0023197        0x1 
 .rodata._ZTV3IDE
                0x00000000c0023198       0x2c hw/diskctrl/ide.32
                0x00000000c0023198                vtable for IDE
 .rodata.str1.4
                0x00000000c00231c4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00231e8       0x2c hw/diskctrl/satabus.32
                0x00000000c00231e8                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023214       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023226        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023228       0x38 hw/diskphys/ata.32
                0x00000000c0023228                vtable for ATA
 .rodata.str1.1
                0x00000000c0023260        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c002326d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0023270       0x38 hw/diskphys/atapi.32
                0x00000000c0023270                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00232a8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023324       0x38 hw/diskphys/sata.32
                0x00000000c0023324                vtable for SATA
 .rodata.str1.1
                0x00000000c002335c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023446        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023448       0x38 hw/diskphys/satapi.32
                0x00000000c0023448                vtable for SATAPI
 .rodata        0x00000000c0023480        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0023488       0x2c hw/intctrl/apic.32
                0x00000000c0023488                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00234b4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00234cf        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00234d0       0x30 hw/timer/apictimer.32
                0x00000000c00234d0                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023500       0x1d hw/timer/pit.32
 *fill*         0x00000000c002351d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023520       0x30 hw/timer/pit.32
                0x00000000c0023520                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023550      0xbb1
 *(.data)
 .data          0x00000000c0023550        0x0 crti.32
 .data          0x00000000c0023550        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023550                __dso_handle
 .data          0x00000000c0023554        0x0 acpica/utclib.32
 .data          0x00000000c0023554        0x0 core/malloc.32
 .data          0x00000000c0023554        0x0 libk/ctype.32
 .data          0x00000000c0023554        0x0 libk/string.32
 .data          0x00000000c0023554        0x0 fs/fat/diskio.32
 .data          0x00000000c0023554        0x0 fs/fat/ff.32
 .data          0x00000000c0023554        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023554        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023554        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023554        0x0 core/computer.32
 .data          0x00000000c0023554        0x0 core/gdt.32
 .data          0x00000000c0023554        0x0 core/idle.32
 .data          0x00000000c0023554        0x0 core/idt.32
 .data          0x00000000c0023554        0x4 core/kheap.32
 .data          0x00000000c0023558        0x0 core/main.32
 .data          0x00000000c0023558        0x4 core/physmgr.32
                0x00000000c0023558                Phys::bitmap
 .data          0x00000000c002355c        0x0 core/pipe.32
 *fill*         0x00000000c002355c        0x4 
 .data          0x00000000c0023560       0x60 core/terminal.32
                0x00000000c0023560                VgaText::hiddenOut
                0x00000000c0023580                ansiToVGAMappings
 .data          0x00000000c00235c0        0x0 core/tss.32
 .data          0x00000000c00235c0        0x4 core/unixfile.32
                0x00000000c00235c0                UnixFile::nextFd
 .data          0x00000000c00235c4       0x15 core/virtmgr.32
                0x00000000c00235c4                Virt::pageAllocPtr
                0x00000000c00235c8                Virt::bitmap
                0x00000000c00235cc                Virt::swapfileSectorsPerPage
                0x00000000c00235d0                Virt::swapfileLength
                0x00000000c00235d4                Virt::swapfileSector
                0x00000000c00235d8                Virt::swapfileDrive
 *fill*         0x00000000c00235d9        0x3 
 .data          0x00000000c00235dc        0x4 coreobjs/c++.32
                0x00000000c00235dc                __stack_chk_guard
 .data          0x00000000c00235e0        0x0 dbg/kconsole.32
 .data          0x00000000c00235e0       0x28 dbg/usban.32
                0x00000000c00235e0                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023608        0x0 fs/symlink.32
 .data          0x00000000c0023608        0x0 fs/vfs.32
 .data          0x00000000c0023608        0x0 hal/bus.32
 .data          0x00000000c0023608        0x0 hal/buzzer.32
 .data          0x00000000c0023608        0x0 hal/clock.32
 .data          0x00000000c0023608        0x0 hal/device.32
 .data          0x00000000c0023608        0x0 hal/diskctrl.32
 .data          0x00000000c0023608        0x0 hal/diskphys.32
 .data          0x00000000c0023608        0x0 hal/fpu.32
 .data          0x00000000c0023608        0x0 hal/intctrl.32
 .data          0x00000000c0023608        0x0 hal/keybrd.32
 .data          0x00000000c0023608        0x0 hal/logidisk.32
 .data          0x00000000c0023608        0x0 hal/mouse.32
 .data          0x00000000c0023608        0x0 hal/nic.32
 .data          0x00000000c0023608        0x0 hal/partition.32
 .data          0x00000000c0023608        0x0 hal/serial.32
 .data          0x00000000c0023608        0x0 hal/timer.32
 .data          0x00000000c0023608        0x0 hal/vcache.32
 .data          0x00000000c0023608        0x0 hal/video.32
 .data          0x00000000c0023608       0x10 hw/acpi.32
                0x00000000c0023608                legacyIRQRemaps
 .data          0x00000000c0023618        0x4 hw/cpu.32
                0x00000000c0023618                lastCode
 .data          0x00000000c002361c        0x0 krnl/atexit.32
 *fill*         0x00000000c002361c        0x4 
 .data          0x00000000c0023620      0x142 krnl/bootmsg.32
                0x00000000c0023620                KiSplashScreen
 .data          0x00000000c0023762        0x0 krnl/compat.32
 *fill*         0x00000000c0023762       0x1e 
 .data          0x00000000c0023780      0x400 krnl/crc32.32
                0x00000000c0023780                KiPolyLookupCRC32
 .data          0x00000000c0023b80       0x4d krnl/env.32
                0x00000000c0023b80                defaultSysEnv
 .data          0x00000000c0023bcd        0x0 krnl/inlines.32
 .data          0x00000000c0023bcd        0x0 krnl/panic.32
 .data          0x00000000c0023bcd        0x0 krnl/powctrl.32
 .data          0x00000000c0023bcd        0x0 krnl/random.32
 .data          0x00000000c0023bcd        0x0 krnl/resolve.32
 *fill*         0x00000000c0023bcd       0x13 
 .data          0x00000000c0023be0       0x4c krnl/signal.32
                0x00000000c0023be0                KiDefaultSignalHandlers
 *fill*         0x00000000c0023c2c       0x14 
 .data          0x00000000c0023c40       0xfc krnl/syscalls.32
                0x00000000c0023c40                systemCallHandlers
 .data          0x00000000c0023d3c        0x0 net/ethernet.32
 *fill*         0x00000000c0023d3c        0x4 
 .data          0x00000000c0023d40      0x100 reg/cm.32
                0x00000000c0023d40                CmComponents
 .data          0x00000000c0023e40        0x0 reg/registry.32
 .data          0x00000000c0023e40        0x0 sys/eject.32
 .data          0x00000000c0023e40        0x0 sys/exit.32
 .data          0x00000000c0023e40        0x0 sys/getcwd.32
 .data          0x00000000c0023e40        0x0 sys/getpid.32
 .data          0x00000000c0023e40        0x0 sys/getramdata.32
 .data          0x00000000c0023e40        0x0 sys/getvgaptr.32
 .data          0x00000000c0023e40        0x0 sys/kill.32
 .data          0x00000000c0023e40        0x0 sys/loaddll.32
 .data          0x00000000c0023e40        0x0 sys/read.32
 .data          0x00000000c0023e40        0x0 sys/registersignal.32
 .data          0x00000000c0023e40        0x0 sys/registry.32
 .data          0x00000000c0023e40        0x0 sys/sbrk.32
 .data          0x00000000c0023e40        0x0 sys/setcwd.32
 .data          0x00000000c0023e40        0x0 sys/settime.32
 .data          0x00000000c0023e40        0x0 sys/symlink.32
 .data          0x00000000c0023e40        0x0 sys/timezone.32
 .data          0x00000000c0023e40        0x0 sys/truncate.32
 .data          0x00000000c0023e40        0x0 sys/write.32
 .data          0x00000000c0023e40        0x0 sys/wsbe.32
 .data          0x00000000c0023e40        0x0 sys/yield.32
 .data          0x00000000c0023e40        0x0 thr/elf.32
 .data          0x00000000c0023e40        0x4 thr/prcssthr.32
                0x00000000c0023e40                Thr::nextPID
 .data          0x00000000c0023e44        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023e44       0x1c 
 .data          0x00000000c0023e60      0x2a0 arch/i386/hal.32
                0x00000000c0023e60                exceptionNames
 .data          0x00000000c0024100        0x0 arch/i386/pic.32
 .data          0x00000000c0024100        0x0 arch/i386/rtc.32
 .data          0x00000000c0024100        0x0 arch/i386/vga.32
 .data          0x00000000c0024100        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024100        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024100        0x1 fs/iso9660/vfslink.32
                0x00000000c0024100                recentDriveletter
 .data          0x00000000c0024101        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024101        0x0 hal/sound/sndport.32
 .data          0x00000000c0024101        0x0 hw/bus/isa.32
 .data          0x00000000c0024101        0x0 hw/bus/pci.32
 .data          0x00000000c0024101        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024101        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024101        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024101        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024101        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024101        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024101        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024101        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024101        0x0 hw/timer/pit.32
 .data          0x00000000c0024101        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024101        0x0 crtn.32
 .data          0x00000000c0024101        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024101        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024101        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024101        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024104        0x0
 .got           0x00000000c0024104        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024104        0x0
 .got.plt       0x00000000c0024104        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024104        0x0
 .igot.plt      0x00000000c0024104        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024104        0x0
 .tm_clone_table
                0x00000000c0024104        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024104        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024101      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024101        0x3 
 .eh_frame      0x00000000c0024104        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024104        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024104       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002415c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002419c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024208       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
