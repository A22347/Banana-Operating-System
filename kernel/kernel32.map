Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xce thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xac thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1ec6a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x923 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c0000580                memset
                0x00000000c0000620                strlen
                0x00000000c0000650                strpbrk
                0x00000000c00006a0                strtok
                0x00000000c0000720                strcpy
                0x00000000c0000750                strncpy
                0x00000000c0000840                strcmp
                0x00000000c0000890                strchr
                0x00000000c00008d0                strncmp
                0x00000000c0000930                strcat
                0x00000000c0000960                strncat
                0x00000000c00009c0                strstr
                0x00000000c0000a20                toupper
                0x00000000c0000a40                tolower
                0x00000000c0000a60                simple_strtoul
 .text          0x00000000c0000ca3      0xfb1 core/malloc.32
                0x00000000c0000e0e                dlfree
                0x00000000c000116c                dlmalloc
                0x00000000c00016a9                dlrealloc
                0x00000000c000184d                dlmemalign
                0x00000000c0001970                dlcalloc
                0x00000000c0001a0a                dlcfree
                0x00000000c0001a0f                dlindependent_calloc
                0x00000000c0001a34                dlindependent_comalloc
                0x00000000c0001a4b                dlvalloc
                0x00000000c0001a76                dlpvalloc
                0x00000000c0001aac                dlmalloc_trim
                0x00000000c0001ab9                dlmalloc_usable_size
                0x00000000c0001aea                dlmallinfo
                0x00000000c0001bb9                dlmalloc_stats
                0x00000000c0001bca                dlmallopt
 .text          0x00000000c0001c54      0x224 libk/ctype.32
                0x00000000c0001c54                isblank
                0x00000000c0001c74                iscntrl
                0x00000000c0001c94                isdigit
                0x00000000c0001cb0                islower
                0x00000000c0001ccc                isspace
                0x00000000c0001cf4                isupper
                0x00000000c0001d10                isalpha
                0x00000000c0001d48                isalnum
                0x00000000c0001d80                ispunct
                0x00000000c0001dc8                isgraph
                0x00000000c0001e00                isprint
                0x00000000c0001e30                isxdigit
 .text          0x00000000c0001e78        0x0 libk/string.32
 .text          0x00000000c0001e78       0x51 fs/fat/diskio.32
                0x00000000c0001e78                disk_status
                0x00000000c0001e7b                disk_initialize
                0x00000000c0001e7e                disk_read
                0x00000000c0001e94                disk_write
                0x00000000c0001eaa                disk_ioctl
 .text          0x00000000c0001ec9     0x3d37 fs/fat/ff.32
                0x00000000c0003c4b                f_mount
                0x00000000c0003cad                f_open
                0x00000000c0003f77                f_read
                0x00000000c0004153                f_write
                0x00000000c0004386                f_sync
                0x00000000c000443d                f_close
                0x00000000c000446c                f_lseek
                0x00000000c0004612                f_opendir
                0x00000000c00046dd                f_closedir
                0x00000000c00046ff                f_readdir
                0x00000000c0004791                f_stat
                0x00000000c0004810                f_getfree
                0x00000000c0004914                f_truncate
                0x00000000c00049f8                f_unlink
                0x00000000c0004b16                f_mkdir
                0x00000000c0004cb1                f_rename
                0x00000000c0004e69                f_chmod
                0x00000000c0004f1b                f_utime
                0x00000000c0004fc9                f_getlabel
                0x00000000c000511d                f_setlabel
                0x00000000c00052ad                f_expand
                0x00000000c000540b                f_mkfs
 .text          0x00000000c0005c00       0x28 fs/fat/ffsystem.32
                0x00000000c0005c00                ff_memalloc
                0x00000000c0005c14                ff_memfree
 .text          0x00000000c0005c28      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c28                ff_uni2oem
                0x00000000c0005cc4                ff_oem2uni
                0x00000000c0005d3c                ff_wtoupper
 .text          0x00000000c0005f04      0xd13 fs/iso9660/iso9660.32
                0x00000000c0006137                isoReadDiscSector
                0x00000000c00061d2                strnicmp
                0x00000000c0006476                stricmp
                0x00000000c00064c2                iso_open
                0x00000000c000654a                iso_close
                0x00000000c0006568                iso_read
                0x00000000c000667e                iso_seek
                0x00000000c0006702                iso_tell
                0x00000000c0006733                iso_total
                0x00000000c000675e                fn_postprocess
                0x00000000c0006784                iso_readdir
                0x00000000c00069e2                iso_reset
                0x00000000c00069ff                init_percd
                0x00000000c0006af9                iso_ioctl
                0x00000000c0006b11                fs_iso9660_init
                0x00000000c0006ba7                fs_iso9660_shutdown
 *fill*         0x00000000c0006c17        0x1 
 .text          0x00000000c0006c18      0x751 core/computer.32
                0x00000000c0006c18                Computer::close(int, int, void*)
                0x00000000c0006c72                Krnl::firstTask()
                0x00000000c0006df6                Computer::Computer()
                0x00000000c0006df6                Computer::Computer()
                0x00000000c0006eaa                Computer::setBootMessage(char const*)
                0x00000000c0006eac                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070e8                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000712c                Computer::shutdown()
                0x00000000c0007152                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071d0                Computer::open(int, int, void*)
                0x00000000c00072be                Computer::disableNMI()
                0x00000000c00072d8                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072f8                Computer::handleNMI()
 *fill*         0x00000000c0007369        0x1 
 .text          0x00000000c000736a      0x1c7 core/gdt.32
                0x00000000c000736a                GDTEntry::setBase(unsigned int)
                0x00000000c0007386                GDTEntry::setLimit(unsigned int)
                0x00000000c00073a2                GDT::GDT()
                0x00000000c00073a2                GDT::GDT()
                0x00000000c00073b8                GDT::addEntry(GDTEntry)
                0x00000000c00073d4                GDT::getNumberOfEntries()
                0x00000000c00073dc                GDT::flush()
                0x00000000c00073fe                GDT::setup()
 .text          0x00000000c0007531       0x1d core/idle.32
                0x00000000c0007531                idleFunction(void*)
 *fill*         0x00000000c000754e        0x2 
 .text          0x00000000c0007550      0x462 core/idt.32
                0x00000000c0007550                IDTEntry::IDTEntry(bool)
                0x00000000c0007550                IDTEntry::IDTEntry(bool)
                0x00000000c00075c8                IDTEntry::setOffset(unsigned int)
                0x00000000c00075dc                IDT::IDT()
                0x00000000c00075dc                IDT::IDT()
                0x00000000c00075de                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075e6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075fa                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007632                IDT::flush()
                0x00000000c000764c                IDT::setup()
 .text          0x00000000c00079b2      0x1c3 core/kheap.32
                0x00000000c00079b2                sbrk
                0x00000000c0007a4b                mmap
                0x00000000c0007a63                munmap
                0x00000000c0007a7b                liballoc_lock()
                0x00000000c0007a88                liballoc_unlock()
                0x00000000c0007a9c                liballoc_alloc(int)
                0x00000000c0007ac0                liballoc_free(void*, int)
                0x00000000c0007ae1                realloc
                0x00000000c0007afc                malloc
                0x00000000c0007b0f                free
                0x00000000c0007b22                rfree
                0x00000000c0007b35                calloc
 .text          0x00000000c0007b75       0xcf core/main.32
                0x00000000c0007b75                KeEntryPoint
 *fill*         0x00000000c0007c44        0xc 
 .text          0x00000000c0007c50      0x602 core/physmgr.32
                0x00000000c0007c50                Phys::allocateDMA(unsigned long)
                0x00000000c0007d23                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d56                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d89                Phys::getPageState(unsigned long)
                0x00000000c0007da4                Phys::freePage(unsigned long)
                0x00000000c0007e0c                Phys::allocatePage()
                0x00000000c0007ecc                Phys::allocateContiguousPages(int)
                0x00000000c0007f28                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f6a                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0008252      0x267 core/pipe.32
                0x00000000c0008252                Pipe::isAtty()
                0x00000000c0008256                Pipe::~Pipe()
                0x00000000c0008256                Pipe::~Pipe()
                0x00000000c0008276                Pipe::~Pipe()
                0x00000000c000829e                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008362                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008454                Pipe::Pipe(int)
                0x00000000c0008454                Pipe::Pipe(int)
 *fill*         0x00000000c00084b9        0x1 
 .text          0x00000000c00084ba      0xabe core/terminal.32
                0x00000000c00084ba                VgaText::isAtty()
                0x00000000c00084be                VgaText::~VgaText()
                0x00000000c00084be                VgaText::~VgaText()
                0x00000000c00084de                VgaText::~VgaText()
                0x00000000c0008506                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008526                setTerminalScrollLock(bool)
                0x00000000c0008527                doTerminalCycle()
                0x00000000c0008528                addToTerminalCycle(VgaText*)
                0x00000000c0008529                scrollTerminalScrollLock(int)
                0x00000000c000852a                VgaText::updateTitle()
                0x00000000c000852c                VgaText::load()
                0x00000000c000852e                VgaText::updateCursor()
                0x00000000c0008544                VgaText::doANSI_SGR(int)
                0x00000000c00085b8                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085c8                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085d8                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085f8                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008604                VgaText::setTitleColour(VgaColour)
                0x00000000c0008610                VgaText::setTitle(char*)
                0x00000000c0008612                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008624                VgaText::scrollScreen()
                0x00000000c00086b6                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086c6                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008756                VgaText::getCursorX()
                0x00000000c000875e                VgaText::getCursorY()
                0x00000000c0008766                VgaText::setCursor(int, int)
                0x00000000c000877d                setActiveTerminal(VgaText*)
                0x00000000c00087c8                VgaText::clearScreen()
                0x00000000c0008816                VgaText::setCursorX(int)
                0x00000000c000882e                VgaText::setCursorY(int)
                0x00000000c0008846                VgaText::incrementCursor(bool)
                0x00000000c00088a2                VgaText::decrementCursor(bool)
                0x00000000c00088c4                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008990                VgaText::putchar(char)
                0x00000000c0008a7c                VgaText::putx(unsigned int)
                0x00000000c0008ac2                VgaText::puts(char const*)
                0x00000000c0008ae8                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b34                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c7e                VgaText::VgaText(char const*)
                0x00000000c0008c7e                VgaText::VgaText(char const*)
                0x00000000c0008df4                VgaText::receiveKey(unsigned char)
                0x00000000c0008f52                VgaText::doUpdate()
                0x00000000c0008f53                newTerminal(char*)
 .text          0x00000000c0008f78      0x1ae core/tss.32
                0x00000000c0008f78                TSS::TSS()
                0x00000000c0008f78                TSS::TSS()
                0x00000000c0008f88                TSS::setESP(unsigned long)
                0x00000000c0008f9c                TSS::flush()
                0x00000000c0008fc0                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0009126      0x496 core/unixfile.32
                0x00000000c0009126                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000917c                ReservedFilename::isAtty()
                0x00000000c0009198                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091f6                UnixFile::getFileDescriptor()
                0x00000000c00091fe                UnixFile::UnixFile(int)
                0x00000000c00091fe                UnixFile::UnixFile(int)
                0x00000000c0009392                ReservedFilename::ReservedFilename(int)
                0x00000000c0009392                ReservedFilename::ReservedFilename(int)
                0x00000000c00093c4                UnixFile::~UnixFile()
                0x00000000c00093c4                UnixFile::~UnixFile()
                0x00000000c0009450                UnixFile::~UnixFile()
                0x00000000c0009478                ReservedFilename::~ReservedFilename()
                0x00000000c0009478                ReservedFilename::~ReservedFilename()
                0x00000000c0009498                ReservedFilename::~ReservedFilename()
                0x00000000c00094bf                getFromFileDescriptor(int)
 *fill*         0x00000000c00095bc        0x4 
 .text          0x00000000c00095c0     0x134c core/virtmgr.32
                0x00000000c00095c0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095f9                Virt::getPageState(unsigned long)
                0x00000000c0009620                Virt::allocateKernelVirtualPages(int)
                0x00000000c000973b                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009759                Virt::swapIDToSector(unsigned long)
                0x00000000c000976f                Virt::allocateSwapfilePage()
                0x00000000c00097e8                Virt::virtualMemorySetup()
                0x00000000c0009842                Virt::setupPageSwapping(int)
                0x00000000c00098c4                VAS::VAS(VAS*)
                0x00000000c00098c4                VAS::VAS(VAS*)
                0x00000000c00098ee                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000991a                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009939                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a4e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a74                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a96                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009ae2                VAS::VAS()
                0x00000000c0009ae2                VAS::VAS()
                0x00000000c0009b64                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009bae                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bd8                VAS::~VAS()
                0x00000000c0009bd8                VAS::~VAS()
                0x00000000c0009d42                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e76                VAS::allocatePages(int, int)
                0x00000000c000a054                VAS::setCPUSpecific(unsigned long)
                0x00000000c000a082                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a150                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a276                VAS::VAS(bool)
                0x00000000c000a276                VAS::VAS(bool)
                0x00000000c000a4fa                VAS::evict(unsigned long)
                0x00000000c000a5ca                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a6f4                VAS::scanForEviction()
                0x00000000c000a7dc                mapVASFirstTime
 .text          0x00000000c000a90c       0x5f coreobjs/c++.32
                0x00000000c000a90c                __cxa_atexit
                0x00000000c000a90f                __cxa_finalize
                0x00000000c000a910                __stack_chk_fail
                0x00000000c000a946                __cxa_pure_virtual
                0x00000000c000a957                operator new[](unsigned long)
                0x00000000c000a95c                operator delete(void*, unsigned long)
                0x00000000c000a961                operator delete[](void*)
                0x00000000c000a966                operator delete[](void*, unsigned long)
 .text          0x00000000c000a96b      0x259 dbg/kconsole.32
                0x00000000c000a96b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a9dd                Dbg::logc(char)
                0x00000000c000a9fd                Dbg::logs(char*)
                0x00000000c000aa1f                Dbg::logWriteInt(unsigned int)
                0x00000000c000aa4b                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000aa76                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000abc4      0xc46 fs/vfs.32
                0x00000000c000abc4                File::read(unsigned long long, void*, int*)
                0x00000000c000ac1c                File::write(unsigned long long, void*, int*)
                0x00000000c000ac74                Directory::read(unsigned long long, void*, int*)
                0x00000000c000accc                Directory::write(unsigned long long, void*, int*)
                0x00000000c000acfa                File::isAtty()
                0x00000000c000acfe                Directory::isAtty()
                0x00000000c000ad02                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ad08                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ad0e                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ad14                File::~File()
                0x00000000c000ad14                File::~File()
                0x00000000c000ad34                File::~File()
                0x00000000c000ad5c                Directory::~Directory()
                0x00000000c000ad5c                Directory::~Directory()
                0x00000000c000ad7c                Directory::~Directory()
                0x00000000c000ada4                Filesystem::Filesystem()
                0x00000000c000ada4                Filesystem::Filesystem()
                0x00000000c000adc8                Filesystem::~Filesystem()
                0x00000000c000adc8                Filesystem::~Filesystem()
                0x00000000c000add6                Filesystem::~Filesystem()
                0x00000000c000adfd                Fs::getcwd(Process*, char*, int)
                0x00000000c000ae27                Fs::initVFS()
                0x00000000c000ae51                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aff8                File::File(char const*, Process*)
                0x00000000c000aff8                File::File(char const*, Process*)
                0x00000000c000b0b6                File::open(FileOpenMode)
                0x00000000c000b114                File::close()
                0x00000000c000b174                File::seek(unsigned long long)
                0x00000000c000b1ca                File::tell(unsigned long long*)
                0x00000000c000b21a                File::rewind()
                0x00000000c000b22e                File::unlink()
                0x00000000c000b27a                File::rename(char const*)
                0x00000000c000b2c8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b31e                File::exists()
                0x00000000c000b35c                File::stat(unsigned long long*, bool*)
                0x00000000c000b3bd                Fs::setcwd(Process*, char*)
                0x00000000c000b51a                Directory::Directory(char const*, Process*)
                0x00000000c000b51a                Directory::Directory(char const*, Process*)
                0x00000000c000b5d8                Directory::open()
                0x00000000c000b634                Directory::close()
                0x00000000c000b694                Directory::unlink()
                0x00000000c000b6e0                Directory::rename(char const*)
                0x00000000c000b72e                Directory::exists()
                0x00000000c000b76c                Directory::read(dirent*)
                0x00000000c000b7b8                Directory::create()
                0x00000000c000b804                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b80a        0x2 
 .text          0x00000000c000b80c       0x7f hal/bus.32
                0x00000000c000b80c                Bus::Bus(char const*)
                0x00000000c000b80c                Bus::Bus(char const*)
                0x00000000c000b844                Bus::~Bus()
                0x00000000c000b844                Bus::~Bus()
                0x00000000c000b864                Bus::~Bus()
 .text          0x00000000c000b88b       0x99 hal/buzzer.32
                0x00000000c000b88b                beepThread(void*)
                0x00000000c000b8c8                Krnl::beep(int, int, bool)
 *fill*         0x00000000c000b924        0xc 
 .text          0x00000000c000b930      0xa9a hal/clock.32
                0x00000000c000b930                User::loadClockSettings(int)
                0x00000000c000b98e                Clock::Clock(char const*)
                0x00000000c000b98e                Clock::Clock(char const*)
                0x00000000c000b9c4                Clock::~Clock()
                0x00000000c000b9c4                Clock::~Clock()
                0x00000000c000b9e4                Clock::~Clock()
                0x00000000c000ba0c                Clock::timeInSecondsLocal()
                0x00000000c000ba50                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000babc                datetimeToSeconds(datetime_t)
                0x00000000c000c172                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c1ec                secondsToDatetime(unsigned long long)
                0x00000000c000c39a                Clock::timeInDatetimeLocal()
 .text          0x00000000c000c3ca      0x460 hal/device.32
                0x00000000c000c3ca                Device::hibernate()
                0x00000000c000c3cc                Device::wake()
                0x00000000c000c3ce                Device::detect()
                0x00000000c000c3d0                Device::disableLegacy()
                0x00000000c000c3d2                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c3d4                DriverlessDevice::close(int, int, void*)
                0x00000000c000c3d8                DriverlessDevice::detect()
                0x00000000c000c3da                DriverlessDevice::open(int, int, void*)
                0x00000000c000c3ee                Device::~Device()
                0x00000000c000c3ee                Device::~Device()
                0x00000000c000c3fc                Device::~Device()
                0x00000000c000c424                Device::findAndLoadDriver()
                0x00000000c000c432                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c458                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c498                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c4c0                Device::getParent()
                0x00000000c000c4cc                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c4ea                Device::addChild(Device*)
                0x00000000c000c52e                Device::removeAllChildren()
                0x00000000c000c574                Device::hibernateAll()
                0x00000000c000c5a4                Device::wakeAll()
                0x00000000c000c5d4                Device::detectAll()
                0x00000000c000c604                Device::disableLegacyAll()
                0x00000000c000c606                Device::loadDriversForAll()
                0x00000000c000c608                Device::closeAll()
                0x00000000c000c63e                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c674                Device::setName(char const*)
                0x00000000c000c682                Device::Device(char const*)
                0x00000000c000c682                Device::Device(char const*)
                0x00000000c000c77c                Device::getName()
                0x00000000c000c786                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c786                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c7bc                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c800                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c82a        0x2 
 .text          0x00000000c000c82c       0x7f hal/diskctrl.32
                0x00000000c000c82c                HardDiskController::HardDiskController(char const*)
                0x00000000c000c82c                HardDiskController::HardDiskController(char const*)
                0x00000000c000c864                HardDiskController::~HardDiskController()
                0x00000000c000c864                HardDiskController::~HardDiskController()
                0x00000000c000c884                HardDiskController::~HardDiskController()
 *fill*         0x00000000c000c8ab        0x1 
 .text          0x00000000c000c8ac       0xdb hal/diskphys.32
                0x00000000c000c8ac                PhysicalDisk::eject()
                0x00000000c000c8b0                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c8b0                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c918                PhysicalDisk::startCache()
                0x00000000c000c940                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c940                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c960                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c987        0x0 hal/fpu.32
 *fill*         0x00000000c000c987        0x9 
 .text          0x00000000c000c990      0x331 hal/intctrl.32
                0x00000000c000c990                int_handler
                0x00000000c000ca0b                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000ca54                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000cb94                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000cbc8                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000cc36                setupINTS()
                0x00000000c000cc83                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000ccc1        0x1 
 .text          0x00000000c000ccc2      0x81d hal/keybrd.32
                0x00000000c000ccc2                startGUI(void*)
                0x00000000c000cd31                startGUIVESA(void*)
                0x00000000c000cda0                sendKeyToTerminal(unsigned char)
                0x00000000c000ce66                sendKeyboardToken(KeyboardToken)
                0x00000000c000d2e3                clearInternalKeybuffer(VgaText*)
                0x00000000c000d319                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d45c                Keyboard::Keyboard(char const*)
                0x00000000c000d45c                Keyboard::Keyboard(char const*)
                0x00000000c000d498                Keyboard::~Keyboard()
                0x00000000c000d498                Keyboard::~Keyboard()
                0x00000000c000d4b8                Keyboard::~Keyboard()
 *fill*         0x00000000c000d4df        0x1 
 .text          0x00000000c000d4e0      0x41e hal/logidisk.32
                0x00000000c000d4e0                LogicalDisk::close(int, int, void*)
                0x00000000c000d4e4                LogicalDisk::~LogicalDisk()
                0x00000000c000d4e4                LogicalDisk::~LogicalDisk()
                0x00000000c000d504                LogicalDisk::~LogicalDisk()
                0x00000000c000d52c                LogicalDisk::open(int, int, void*)
                0x00000000c000d540                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d592                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d5d8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d5d8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d69a                LogicalDisk::assignDriveLetter()
                0x00000000c000d756                LogicalDisk::mount()
                0x00000000c000d79e                LogicalDisk::unmount()
                0x00000000c000d7ae                LogicalDisk::eject()
                0x00000000c000d7c2                LogicalDisk::unassignDriveLetter()
                0x00000000c000d826                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d892                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000d8fe        0x2 
 .text          0x00000000c000d900       0x7f hal/mouse.32
                0x00000000c000d900                Mouse::Mouse(char const*)
                0x00000000c000d900                Mouse::Mouse(char const*)
                0x00000000c000d938                Mouse::~Mouse()
                0x00000000c000d938                Mouse::~Mouse()
                0x00000000c000d958                Mouse::~Mouse()
 *fill*         0x00000000c000d97f        0x1 
 .text          0x00000000c000d980       0x89 hal/nic.32
                0x00000000c000d980                NIC::getMAC()
                0x00000000c000d986                NIC::write(int, unsigned char*, int*)
                0x00000000c000d98c                NIC::NIC(char const*)
                0x00000000c000d98c                NIC::NIC(char const*)
                0x00000000c000d9c2                NIC::~NIC()
                0x00000000c000d9c2                NIC::~NIC()
                0x00000000c000d9e2                NIC::~NIC()
 .text          0x00000000c000da09      0x34a hal/partition.32
                0x00000000c000da09                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dab1                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000dd53        0x1 
 .text          0x00000000c000dd54       0x7f hal/serial.32
                0x00000000c000dd54                Serial::Serial(char const*)
                0x00000000c000dd54                Serial::Serial(char const*)
                0x00000000c000dd8c                Serial::~Serial()
                0x00000000c000dd8c                Serial::~Serial()
                0x00000000c000ddac                Serial::~Serial()
 *fill*         0x00000000c000ddd3        0x1 
 .text          0x00000000c000ddd4      0x22c hal/timer.32
                0x00000000c000ddd4                Timer::Timer(char const*)
                0x00000000c000ddd4                Timer::Timer(char const*)
                0x00000000c000de0c                Timer::~Timer()
                0x00000000c000de0c                Timer::~Timer()
                0x00000000c000de2c                Timer::~Timer()
                0x00000000c000de54                Timer::read()
                0x00000000c000de5f                setupTimer(int)
                0x00000000c000de9a                timerHandler(unsigned int)
 .text          0x00000000c000e000      0x404 hal/vcache.32
                0x00000000c000e000                VCache::VCache(PhysicalDisk*)
                0x00000000c000e000                VCache::VCache(PhysicalDisk*)
                0x00000000c000e160                VCache::invalidateReadBuffer()
                0x00000000c000e170                VCache::writeWriteBuffer()
                0x00000000c000e1bc                VCache::~VCache()
                0x00000000c000e1bc                VCache::~VCache()
                0x00000000c000e208                VCache::~VCache()
                0x00000000c000e230                VCache::write(unsigned long long, int, void*)
                0x00000000c000e31a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e404      0x4d1 hal/video.32
                0x00000000c000e404                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e450                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e4c0                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e550                Video::clearScreen(unsigned int)
                0x00000000c000e584                Video::putpixel(int, int, unsigned int)
                0x00000000c000e592                Video::readPixelApprox(int, int)
                0x00000000c000e5a6                Video::Video(char const*)
                0x00000000c000e5a6                Video::Video(char const*)
                0x00000000c000e5dc                Video::~Video()
                0x00000000c000e5dc                Video::~Video()
                0x00000000c000e5fc                Video::~Video()
                0x00000000c000e624                Video::isMonochrome()
                0x00000000c000e630                Video::getWidth()
                0x00000000c000e63c                Video::getHeight()
                0x00000000c000e648                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e704                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e86a                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e8d5        0x3 
 .text          0x00000000c000e8d8     0x1305 hw/acpi.32
                0x00000000c000e8d8                ACPI::close(int, int, void*)
                0x00000000c000e988                findRSDP()
                0x00000000c000ea20                loadACPITables(unsigned char*)
                0x00000000c000eca4                findRSDT(unsigned char*)
                0x00000000c000ee10                findDataTable(unsigned char*, char*)
                0x00000000c000ee90                scanMADT()
                0x00000000c000f358                ACPI::ACPI()
                0x00000000c000f358                ACPI::ACPI()
                0x00000000c000f3ac                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f490                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f558                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f560                ACPI::detectPCI()
                0x00000000c000f768                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f7b4                ACPI::sleep()
                0x00000000c000f7d0                ACPI::open(int, int, void*)
 *fill*         0x00000000c000fbdd        0x1 
 .text          0x00000000c000fbde      0xb75 hw/cpu.32
                0x00000000c000fbde                CPU::close(int, int, void*)
                0x00000000c000fbe2                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000fbfe                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000fc16                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000fc8a                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000fd0e                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000fd3c                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000fd6a                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000fd98                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000fdc6                CPU::CPU()
                0x00000000c000fdc6                CPU::CPU()
                0x00000000c000fe48                CPU::displayFeatures()
                0x00000000c000fe4a                CPU::detectFeatures()
                0x00000000c00104ee                CPU::setupSMEP()
                0x00000000c00104fa                CPU::setupUMIP()
                0x00000000c0010504                CPU::setupTSC()
                0x00000000c001050e                CPU::setupLargePages()
                0x00000000c0010518                CPU::setupPAT()
                0x00000000c0010560                CPU::setupMTRR()
                0x00000000c0010562                CPU::setupGlobalPages()
                0x00000000c001056c                CPU::allowUsermodeDataAccess()
                0x00000000c001057e                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010590                CPU::setupSMAP()
                0x00000000c001059e                CPU::setupFeatures()
                0x00000000c001066a                CPU::open(int, int, void*)
 .text          0x00000000c0010753       0xd1 krnl/bootmsg.32
                0x00000000c0010753                KeDisplaySplashScreen()
                0x00000000c00107c1                KeSetBootMessage(char const*)
 .text          0x00000000c0010824      0x57d krnl/env.32
                0x00000000c0010824                EnvVarContainer::getEnv(char const*)
                0x00000000c0010862                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010924                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010926                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010b0c                EnvVarContainer::__loadSystem()
                0x00000000c0010b26                EnvVarContainer::__loadUser()
                0x00000000c0010b28                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010b28                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010b4a                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010b4a                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010b76                Krnl::getEnv(Process*, char const*)
                0x00000000c0010bdb                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0010bf5                Krnl::setEnvUser(char const*, char const*)
                0x00000000c0010c14                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0010c27                Krnl::deleteEnvSystem(char const*)
                0x00000000c0010c28                Krnl::deleteEnvUser(char const*)
                0x00000000c0010c29                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0010c2a                Krnl::newProcessEnv(Process*)
                0x00000000c0010c4c                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010c98                Krnl::loadSystemEnv()
                0x00000000c0010cc6                Krnl::loadUserEnv()
                0x00000000c0010cec                Krnl::flushEnv()
                0x00000000c0010ced                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0010d0d                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0010da1       0x94 krnl/inlines.32
                0x00000000c0010da1                CPU::current()
                0x00000000c0010dad                operator new(unsigned long)
                0x00000000c0010db2                operator delete(void*)
                0x00000000c0010db7                disableIRQs()
                0x00000000c0010db9                enableIRQs()
                0x00000000c0010dbb                lockScheduler()
                0x00000000c0010dc3                unlockScheduler()
                0x00000000c0010dd2                lockStuff()
                0x00000000c0010de0                unlockStuff()
                0x00000000c0010e1a                Virt::getAKernelVAS()
                0x00000000c0010e20                __not_memcpy
 .text          0x00000000c0010e35        0xc krnl/panic.32
                0x00000000c0010e35                KePanic(char const*)
 .text          0x00000000c0010e41      0x142 krnl/powctrl.32
                0x00000000c0010e41                Krnl::powerThread(void*)
                0x00000000c0010e6f                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010e85                Krnl::userIOReceived()
                0x00000000c0010e90                Krnl::handlePowerButton()
                0x00000000c0010ec5                Krnl::handleSleepButton()
                0x00000000c0010efa                Krnl::setupPowerManager()
 .text          0x00000000c0010f83       0x9e krnl/random.32
                0x00000000c0010f83                KeRand()
                0x00000000c0010fc6                KeSeedRand(unsigned int)
                0x00000000c0010fef                KeInitRand()
 *fill*         0x00000000c0011021        0x3 
 .text          0x00000000c0011024      0x190 krnl/resolve.32
                0x00000000c0011024                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00111b4      0x315 krnl/signal.32
                0x00000000c00111b4                KiSigKill(int)
                0x00000000c00111c8                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00111c9                KiDefaultSignalHandlerPause(int)
                0x00000000c00111f5                KiDefaultSignalHandlerResume(int)
                0x00000000c0011221                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011226                KeInitSignals()
                0x00000000c0011271                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00112a7                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011324                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011415                KiCheckSignalZ
                0x00000000c0011457                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011492                KiFinishSignalZ
 .text          0x00000000c00114c9      0xdb4 krnl/syscalls.32
                0x00000000c00114c9                SysSeekDir(regs*)
                0x00000000c00114ce                SysTellDir(regs*)
                0x00000000c00114d3                SysVerify(regs*)
                0x00000000c00114dd                SysGetArgc(regs*)
                0x00000000c00114ed                SysTTYName(regs*)
                0x00000000c00114f5                SysFormatDisk(regs*)
                0x00000000c0011564                SysSetDiskVolumeLabel(regs*)
                0x00000000c00115ce                SysGetDiskVolumeLabel(regs*)
                0x00000000c001164f                SysShutdown(regs*)
                0x00000000c00116ff                SysRealpath(regs*)
                0x00000000c0011750                SysReadDir(regs*)
                0x00000000c00117d4                SysIsATTY(regs*)
                0x00000000c0011826                SysSeek(regs*)
                0x00000000c0011893                SysTell(regs*)
                0x00000000c00118ff                SysSize(regs*)
                0x00000000c0011973                SysSizeFromFilename(regs*)
                0x00000000c0011a43                SysClose(regs*)
                0x00000000c0011a9f                SysOpenDir(regs*)
                0x00000000c0011b18                SysMakeDir(regs*)
                0x00000000c0011b86                SysCloseDir(regs*)
                0x00000000c0011be1                SysWait(regs*)
                0x00000000c0011c06                SysNotImpl(regs*)
                0x00000000c0011c23                SysPanic(regs*)
                0x00000000c0011c40                SysRmdir(regs*)
                0x00000000c0011c9e                SysUnlink(regs*)
                0x00000000c0011cfc                SysGetArgv(regs*)
                0x00000000c0011d48                SysUSleep(regs*)
                0x00000000c0011d9a                SysSpawn(regs*)
                0x00000000c0011e19                SysGetEnv(regs*)
                0x00000000c0011eea                SysSetFatAttrib(regs*)
                0x00000000c0011f6d                SysPipe(regs*)
                0x00000000c0011fcd                SysGetUnixTime(regs*)
                0x00000000c0011fe1                string_ends_with(char const*, char const*)
                0x00000000c001203b                SysOpen(regs*)
                0x00000000c001223b                KeSystemCall(regs*, void*)
 *fill*         0x00000000c001227d        0x3 
 .text          0x00000000c0012280      0x151 net/ethernet.32
                0x00000000c0012280                KeSwitchEndian16(unsigned short)
                0x00000000c00122a8                KeSwitchEndian32(unsigned int)
                0x00000000c00122d8                EthernetCRC32(unsigned char*, int)
                0x00000000c001237c                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c00123d1      0xd4b reg/cm.32
                0x00000000c00123d1                CmOpen(char const*)
                0x00000000c00124ef                CmClose(Reghive_Tag*)
                0x00000000c0012505                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012541                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c00125b8                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c00125f7                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012629                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012665                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c001268d                CmUpdateHeader(Reghive_Tag*)
                0x00000000c00126ae                CmExpand(Reghive_Tag*, int)
                0x00000000c0012729                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c00127af                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c00128a6                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c00129e2                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012a43                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012a71                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012aa9                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012ad0                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012b10                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012bb4                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012be2                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0012d7f                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0012dcc                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012e46                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0012e99                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012f5d                zStrtok(char*, char const*)
                0x00000000c0012fc6                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013047                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00130ea                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001311c      0x521 reg/registry.32
                0x00000000c001311c                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c001328b                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00133e0                Reg::getLine(char*, char*, char*)
                0x00000000c0013417                Reg::readInt(char*, char*, int*)
                0x00000000c00134f3                Reg::readString(char*, char*, char*, int)
                0x00000000c0013579                Reg::readBool(char*, char*, bool*)
                0x00000000c001359e                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00135d0                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00135fc                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001363d       0x36 sys/eject.32
                0x00000000c001363d                SysEject(regs*)
 .text          0x00000000c0013673       0x18 sys/exit.32
                0x00000000c0013673                SysExit(regs*)
 .text          0x00000000c001368b       0x1f sys/getcwd.32
                0x00000000c001368b                SysGetCwd(regs*)
 .text          0x00000000c00136aa        0xc sys/getpid.32
                0x00000000c00136aa                SysGetPID(regs*)
 .text          0x00000000c00136b6       0x1a sys/getramdata.32
                0x00000000c00136b6                SysGetRAMData(regs*)
 .text          0x00000000c00136d0       0x82 sys/getvgaptr.32
                0x00000000c00136d0                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013752        0x2 
 .text          0x00000000c0013754       0xbe sys/kill.32
                0x00000000c0013754                SysKill(regs*)
 .text          0x00000000c0013812       0xa8 sys/loaddll.32
                0x00000000c0013812                SysLoadDLL(regs*)
 .text          0x00000000c00138ba       0x68 sys/read.32
                0x00000000c00138ba                SysRead(regs*)
 .text          0x00000000c0013922       0x29 sys/registersignal.32
                0x00000000c0013922                SysRegisterSignal(regs*)
 .text          0x00000000c001394b      0x19c sys/registry.32
                0x00000000c001394b                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00139c2                SysRegistryReadExtent(regs*)
                0x00000000c0013a0a                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013a32                SysRegistryEnterDirectory(regs*)
                0x00000000c0013a5a                SysRegistryGetNext(regs*)
                0x00000000c0013a82                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013abc                SysRegistryOpen(regs*)
                0x00000000c0013ad0                SysRegistryClose(regs*)
 .text          0x00000000c0013ae7       0x55 sys/sbrk.32
                0x00000000c0013ae7                SysSbrk(regs*)
 .text          0x00000000c0013b3c       0x1c sys/setcwd.32
                0x00000000c0013b3c                SysSetCwd(regs*)
 .text          0x00000000c0013b58       0xb3 sys/settime.32
                0x00000000c0013b58                SysSetTime(regs*)
 .text          0x00000000c0013c0b       0x4a sys/timezone.32
                0x00000000c0013c0b                SysTimezone(regs*)
 .text          0x00000000c0013c55       0x68 sys/write.32
                0x00000000c0013c55                SysWrite(regs*)
 .text          0x00000000c0013cbd       0x62 sys/wsbe.32
                0x00000000c0013cbd                SysWsbe(regs*)
 .text          0x00000000c0013d1f       0x25 sys/yield.32
                0x00000000c0013d1f                SysYield(regs*)
 .text          0x00000000c0013d44     0x120f thr/elf.32
                0x00000000c0013d44                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0013fcb                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00141ee                Thr::runtimeReferenceHelper()
                0x00000000c0014201                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014250                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014511                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014c5b                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014c8d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014cc4                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014cde                Thr::loadDLL(char const*, bool)
                0x00000000c0014f1a                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0014f53        0xd 
 .text          0x00000000c0014f60     0x12b7 thr/prcssthr.32
                0x00000000c0014f60                userModeEntryPoint(void*)
                0x00000000c0014f88                changeTSS
                0x00000000c0014fc0                switchToThread(ThreadControlBlock*)
                0x00000000c0015094                Process::addArgs(char**)
                0x00000000c00150f8                Process::Process(char const*, Process*, char**)
                0x00000000c00150f8                Process::Process(char const*, Process*, char**)
                0x00000000c00152f0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00152f0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00154b0                taskStartupFunction
                0x00000000c00154bc                Semaphore::Semaphore(int)
                0x00000000c00154bc                Semaphore::Semaphore(int)
                0x00000000c00154ec                Mutex::Mutex()
                0x00000000c00154ec                Mutex::Mutex()
                0x00000000c0015508                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001560c                Process::createUserThread()
                0x00000000c0015638                setupMultitasking(void (*)())
                0x00000000c0015760                schedule()
                0x00000000c00157ec                Semaphore::tryAcquire()
                0x00000000c00158a4                Semaphore::assertLocked(char const*)
                0x00000000c0015914                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001593c                blockTask(TaskState)
                0x00000000c001596c                waitTask(int, int*, int)
                0x00000000c00159b4                milliTenthSleepUntil(unsigned int)
                0x00000000c0015a3c                milliTenthSleep(unsigned int)
                0x00000000c0015a4c                sleep(unsigned int)
                0x00000000c0015a5c                Semaphore::acquire()
                0x00000000c0015b10                taskReturned
                0x00000000c0015b48                Thr::processFromPID(int)
                0x00000000c0015be8                unblockTask(ThreadControlBlock*)
                0x00000000c0015c7c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015f34                cleanerTaskFunction(void*)
                0x00000000c0016018                terminateTask(int)
                0x00000000c00160dc                Thr::terminateFromIRQ(int)
                0x00000000c00160ec                Semaphore::release()
 .text          0x00000000c0016217      0xb88 vm86/vm8086.32
                0x00000000c0016217                Vm::inbv(unsigned short)
                0x00000000c001622c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016264                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016274                Vm::getSegment(unsigned int)
                0x00000000c001627c                Vm::getOffset(unsigned int)
                0x00000000c0016281                Vm::mainloop2()
                0x00000000c00162bb                Vm::mainVm8086Loop(void*)
                0x00000000c00162cb                Vm::mainloop3(unsigned long)
                0x00000000c00162f1                Vm::initialise8086()
                0x00000000c0016334                Vm::finish8086()
                0x00000000c0016395                Vm::getOutput8086(unsigned char*)
                0x00000000c00163ba                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016471                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00165d4                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016662                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016673                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016685                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016696                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00166ab                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00166c2                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00166d7                Vm::faultHandler(regs*)
 .text          0x00000000c0016d9f      0xa68 arch/i386/hal.32
                0x00000000c0016d9f                noCopro(unsigned long)
                0x00000000c0016da0                nmiHandler(regs*, void*)
                0x00000000c0016db5                doubleFault(regs*, void*)
                0x00000000c0016dca                displayDebugInfo(regs*)
                0x00000000c001710b                HalSystemIdle()
                0x00000000c0017181                displayProgramFault(char const*)
                0x00000000c00171d9                gpFault(regs*, void*)
                0x00000000c0017233                pgFault(regs*, void*)
                0x00000000c00172b2                otherISRHandler(regs*, void*)
                0x00000000c00172de                opcodeFault(regs*, void*)
                0x00000000c0017352                i386SaveCoprocessor(void*)
                0x00000000c0017366                i386LoadCoprocessor(void*)
                0x00000000c001737a                x87EmulHandler(regs*, void*)
                0x00000000c0017417                HalInitialiseCoprocessor()
                0x00000000c00174c5                HalPanic(char const*)
                0x00000000c00175be                HalQueryPerformanceCounter()
                0x00000000c00175f1                HalInitialise()
                0x00000000c0017797                HalMakeBeep(int)
                0x00000000c00177d0                HalGetRand()
                0x00000000c00177d3                HalEndOfInterrupt(int)
                0x00000000c0017804                HalRestart()
                0x00000000c0017805                HalShutdown()
                0x00000000c0017806                HalSleep()
 *fill*         0x00000000c0017807        0x1 
 .text          0x00000000c0017808      0x300 arch/i386/pic.32
                0x00000000c0017808                picIoWait()
                0x00000000c0017810                picDisable()
                0x00000000c0017848                picGetIRQReg(int)
                0x00000000c00178cc                picOpen()
                0x00000000c0017a60                picEOI(int)
 .text          0x00000000c0017b08      0x681 arch/i386/rtc.32
                0x00000000c0017b08                RTC::open(int, int, void*)
                0x00000000c0017b0c                RTC::close(int, int, void*)
                0x00000000c0017b10                RTC::timeInSecondsUTC()
                0x00000000c0017b22                RTC::timeInDatetimeUTC()
                0x00000000c0017b48                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0017b86                RTC::~RTC()
                0x00000000c0017b86                RTC::~RTC()
                0x00000000c0017ba6                RTC::~RTC()
                0x00000000c0017bce                RTC::get_update_in_progress_flag()
                0x00000000c0017be6                RTC::completeRTCRefresh()
                0x00000000c0017eca                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018070                rtcIRQHandler(regs*, void*)
                0x00000000c00180c0                RTC::RTC()
                0x00000000c00180c0                RTC::RTC()
 *fill*         0x00000000c0018189        0x3 
 .text          0x00000000c001818c      0x20a arch/i386/vga.32
                0x00000000c001818c                HalConsoleScroll(int, int)
                0x00000000c0018294                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018300                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0018396        0x2 
 .text          0x00000000c0018398     0x13e7 fs/fat/vfslink.32
                0x00000000c0018398                FAT::getName()
                0x00000000c00183a0                FAT::tell(void*, unsigned long long*)
                0x00000000c00183dc                FAT::stat(void*, unsigned long long*)
                0x00000000c0018418                FAT::~FAT()
                0x00000000c0018418                FAT::~FAT()
                0x00000000c0018438                FAT::~FAT()
                0x00000000c0018460                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018508                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00185e4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00187c0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00189dc                FAT::allocateSwapfile(char const*, int)
                0x00000000c0018bb4                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0018d1c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0018d88                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0018df4                FAT::close(void*)
                0x00000000c0018e40                FAT::closeDir(void*)
                0x00000000c0018e8c                FAT::seek(void*, unsigned long long)
                0x00000000c0018ee4                fatWrapperReadDisk
                0x00000000c0018f24                fatWrapperWriteDisk
                0x00000000c0018f64                fatWrapperIoctl
                0x00000000c0019080                FAT::FAT()
                0x00000000c0019080                FAT::FAT()
                0x00000000c00190d0                FAT::fixFilepath(char*)
                0x00000000c001910c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001923c                FAT::openDir(char const*, void**)
                0x00000000c00192ec                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00193e0                FAT::unlink(char const*)
                0x00000000c001945c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00195c8                FAT::rename(char const*, char const*)
                0x00000000c0019694                FAT::mkdir(char const*)
                0x00000000c0019710                FAT::exists(char const*)
 *fill*         0x00000000c001977f        0x1 
 .text          0x00000000c0019780       0x98 fs/iso9660/helper.32
                0x00000000c0019780                isoReadDiscSectorHelper
                0x00000000c00197e0                iso_kprintf
                0x00000000c00197fc                iso_kprintfd
 .text          0x00000000c0019818      0x6f0 fs/iso9660/vfslink.32
                0x00000000c0019818                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001981e                ISO9660::getName()
                0x00000000c0019824                ISO9660::closeDir(void*)
                0x00000000c001982e                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019834                ISO9660::unlink(char const*)
                0x00000000c001983a                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019840                ISO9660::rename(char const*, char const*)
                0x00000000c0019846                ISO9660::mkdir(char const*)
                0x00000000c001984c                ISO9660::~ISO9660()
                0x00000000c001984c                ISO9660::~ISO9660()
                0x00000000c001986c                ISO9660::~ISO9660()
                0x00000000c0019894                ISO9660::exists(char const*)
                0x00000000c00198a8                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0019986                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c00199ce                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019a12                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019a50                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019aa2                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019bda                ISO9660::close(void*)
                0x00000000c0019c0a                ISO9660::openDir(char const*, void**)
                0x00000000c0019cdc                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019df7                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0019e72                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019ee4                ISO9660::ISO9660()
                0x00000000c0019ee4                ISO9660::ISO9660()
 .text          0x00000000c0019f08      0x264 hal/sound/sndcard.32
                0x00000000c0019f08                SoundCard::beginPlayback()
                0x00000000c0019f16                SoundCard::stopPlayback()
                0x00000000c0019f24                SoundCard::SoundCard(char const*)
                0x00000000c0019f24                SoundCard::SoundCard(char const*)
                0x00000000c0019fc2                SoundCard::~SoundCard()
                0x00000000c0019fc2                SoundCard::~SoundCard()
                0x00000000c0019fe2                SoundCard::~SoundCard()
                0x00000000c001a00a                SoundCard::configureRates(int, int, int)
                0x00000000c001a03a                SoundCard::getSamples16(int, short*)
                0x00000000c001a096                SoundCard::getSamples32(int, int*)
                0x00000000c001a11a                SoundCard::addChannel(SoundPort*)
                0x00000000c001a158                SoundCard::removeChannel(int)
 .text          0x00000000c001a16c      0x35f hal/sound/sndport.32
                0x00000000c001a16c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a16c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a1f4                SoundPort::~SoundPort()
                0x00000000c001a1f4                SoundPort::~SoundPort()
                0x00000000c001a224                SoundPort::unpause()
                0x00000000c001a230                SoundPort::pause()
                0x00000000c001a23c                SoundPort::getBufferUsed()
                0x00000000c001a244                SoundPort::getBufferSize()
                0x00000000c001a24c                SoundPort::buffer16(short*, int)
                0x00000000c001a2d8                SoundPort::buffer32(int*, int)
                0x00000000c001a360                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001a41c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001a4cb        0x0 hw/bus/isa.32
 *fill*         0x00000000c001a4cb        0x1 
 .text          0x00000000c001a4cc      0xb7d hw/bus/pci.32
                0x00000000c001a4cc                PCI::open(int, int, void*)
                0x00000000c001a4ea                PCI::close(int, int, void*)
                0x00000000c001a4ee                PCI::PCI()
                0x00000000c001a4ee                PCI::PCI()
                0x00000000c001a588                PCI::readBAR8(unsigned int, int)
                0x00000000c001a5a4                PCI::readBAR16(unsigned int, int)
                0x00000000c001a5c4                PCI::readBAR32(unsigned int, int)
                0x00000000c001a5e0                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001a600                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001a622                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001a642                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a6c0                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a76a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a78e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a7b6                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a800                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a828                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a850                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a878                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a8a0                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a902                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001a9cc                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001ac76                PCI::checkBus(unsigned char)
                0x00000000c001ac9a                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001ae12                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001af7e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001aff0                PCI::detect()
 *fill*         0x00000000c001b049        0x1 
 .text          0x00000000c001b04a      0xb44 hw/diskctrl/ide.32
                0x00000000c001b04a                IDE::close(int, int, void*)
                0x00000000c001b04e                IDE::IDE()
                0x00000000c001b04e                IDE::IDE()
                0x00000000c001b080                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b092                selectDrive(unsigned char, unsigned char)
                0x00000000c001b094                IDE::getBase(unsigned char)
                0x00000000c001b0a6                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b154                IDE::read(unsigned char, unsigned char)
                0x00000000c001b1f0                IDE::waitInterrupt(unsigned char)
                0x00000000c001b255                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b271                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001b28e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001b2d4                IDE::open(int, int, void*)
                0x00000000c001b6ec                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b7a6                IDE::detect()
                0x00000000c001ba60                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001bb32                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001bb8e      0x334 hw/diskctrl/satabus.32
                0x00000000c001bb8e                SATABus::close(int, int, void*)
                0x00000000c001bb92                SATABus::detect()
                0x00000000c001bb94                SATABus::SATABus()
                0x00000000c001bb94                SATABus::SATABus()
                0x00000000c001bc24                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001bc56                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001bc9c                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001bcbc                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001bce6                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001bdf8                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001bea2                SATABus::open(int, int, void*)
 .text          0x00000000c001bec2      0x990 hw/diskphys/ata.32
                0x00000000c001bec2                ATA::close(int, int, void*)
                0x00000000c001bee6                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001bee8                ATA::ATA()
                0x00000000c001bee8                ATA::ATA()
                0x00000000c001bf18                ATA::flush(bool)
                0x00000000c001bf62                ATA::readyForCommand()
                0x00000000c001bfae                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c386                ATA::detectCHS()
                0x00000000c001c3b0                ATA::open(int, int, void*)
                0x00000000c001c47c                combineCharAndColour(char, unsigned char)
                0x00000000c001c48d                combineColours(unsigned char, unsigned char)
                0x00000000c001c49a                ATA::read(unsigned long long, int, void*)
                0x00000000c001c678                ATA::write(unsigned long long, int, void*)
 .text          0x00000000c001c852      0x60c hw/diskphys/atapi.32
                0x00000000c001c852                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c858                ATAPI::close(int, int, void*)
                0x00000000c001c87c                ATAPI::ATAPI()
                0x00000000c001c87c                ATAPI::ATAPI()
                0x00000000c001c8ac                ATAPI::readyForCommand()
                0x00000000c001c8fe                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001cbbe                ATAPI::diskRemoved()
                0x00000000c001cbf8                ATAPI::eject()
                0x00000000c001cc40                ATAPI::diskInserted()
                0x00000000c001cc4c                ATAPI::detectMedia()
                0x00000000c001cd06                ATAPI::open(int, int, void*)
                0x00000000c001cde6                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ce5e      0x7fb hw/diskphys/sata.32
                0x00000000c001ce5e                SATA::close(int, int, void*)
                0x00000000c001ce82                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ce84                SATA::open(int, int, void*)
                0x00000000c001cf2e                SATA::SATA()
                0x00000000c001cf2e                SATA::SATA()
                0x00000000c001cf5e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d1a4                SATA::read(unsigned long long, int, void*)
                0x00000000c001d3f6                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d659        0x1 
 .text          0x00000000c001d65a      0x5ce hw/diskphys/satapi.32
                0x00000000c001d65a                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001d660                SATAPI::close(int, int, void*)
                0x00000000c001d684                SATAPI::SATAPI()
                0x00000000c001d684                SATAPI::SATAPI()
                0x00000000c001d6b4                SATAPI::diskRemoved()
                0x00000000c001d6b6                SATAPI::diskInserted()
                0x00000000c001d6d2                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001d9ae                SATAPI::eject()
                0x00000000c001d9ea                SATAPI::detectMedia()
                0x00000000c001da40                SATAPI::open(int, int, void*)
                0x00000000c001db40                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dc28      0x450 hw/intctrl/apic.32
                0x00000000c001dc28                IOAPIC::close(int, int, void*)
                0x00000000c001dc2e                apicGetBase()
                0x00000000c001dc72                IOAPIC::IOAPIC()
                0x00000000c001dc72                IOAPIC::IOAPIC()
                0x00000000c001dc99                apicOpen()
                0x00000000c001de06                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001de38                IOAPIC::read(int)
                0x00000000c001de60                IOAPIC::open(int, int, void*)
                0x00000000c001df40                IOAPIC::write(int, int)
                0x00000000c001df6c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 .text          0x00000000c001e078       0xf3 hw/timer/apictimer.32
                0x00000000c001e078                APICTimer::close(int, int, void*)
                0x00000000c001e080                apicTimerHandler(regs*, void*)
                0x00000000c001e0a4                APICTimer::open(int, int, void*)
                0x00000000c001e120                APICTimer::write(int)
                0x00000000c001e144                APICTimer::APICTimer()
                0x00000000c001e144                APICTimer::APICTimer()
 *fill*         0x00000000c001e16b        0x1 
 .text          0x00000000c001e16c      0x1c7 hw/timer/pit.32
                0x00000000c001e16c                PIT::write(int)
                0x00000000c001e1f0                pitHandler(regs*, void*)
                0x00000000c001e210                PIT::open(int, int, void*)
                0x00000000c001e270                PIT::close(int, int, void*)
                0x00000000c001e2b0                PIT::PIT()
                0x00000000c001e2b0                PIT::PIT()
 *fill*         0x00000000c001e333        0xd 
 .text          0x00000000c001e340       0x83 arch/i386/avx.32
                0x00000000c001e340                avxDetect
                0x00000000c001e36a                avxSave
                0x00000000c001e37b                avxLoad
                0x00000000c001e38c                avxInit
                0x00000000c001e3ae                avxClose
                0x00000000c001e3af                wouldSheSayYes
 *fill*         0x00000000c001e3c3        0xd 
 .text          0x00000000c001e3d0      0x2ec arch/i386/interrupt.32
                0x00000000c001e3d0                isr0
                0x00000000c001e3e0                isr1
                0x00000000c001e3ea                isr2
                0x00000000c001e3f4                isr3
                0x00000000c001e3fe                isr4
                0x00000000c001e408                isr5
                0x00000000c001e412                isr6
                0x00000000c001e41c                isr7
                0x00000000c001e426                isr8
                0x00000000c001e42e                isr9
                0x00000000c001e438                isr10
                0x00000000c001e440                isr11
                0x00000000c001e448                isr12
                0x00000000c001e450                isr13
                0x00000000c001e46a                isr14
                0x00000000c001e472                isr15
                0x00000000c001e47c                isr16
                0x00000000c001e486                isr17
                0x00000000c001e490                isr18
                0x00000000c001e49a                irq3
                0x00000000c001e4a4                irq4
                0x00000000c001e4ae                irq5
                0x00000000c001e4b8                irq6
                0x00000000c001e4c2                irq7
                0x00000000c001e4cc                irq8
                0x00000000c001e4d6                irq9
                0x00000000c001e4e0                irq10
                0x00000000c001e4ea                irq11
                0x00000000c001e4f4                irq12
                0x00000000c001e4fe                irq13
                0x00000000c001e508                irq14
                0x00000000c001e512                irq15
                0x00000000c001e51c                irq1
                0x00000000c001e523                irq2
                0x00000000c001e52a                isr96
                0x00000000c001e531                irq0
                0x00000000c001e536                int_common_stub
                0x00000000c001e568                syscall_common_stub
                0x00000000c001e66c                irq16
                0x00000000c001e676                irq17
                0x00000000c001e680                irq18
                0x00000000c001e68a                irq19
                0x00000000c001e694                irq20
                0x00000000c001e69e                irq21
                0x00000000c001e6a8                irq22
                0x00000000c001e6b2                irq23
 *fill*         0x00000000c001e6bc        0x4 
 .text          0x00000000c001e6c0       0x10 arch/i386/rdrand.32
                0x00000000c001e6c0                i386GetRDRAND
 .text          0x00000000c001e6d0       0x39 arch/i386/sse.32
                0x00000000c001e6d0                absolutelyNoChanceInHell
                0x00000000c001e6d0                sseDetect
                0x00000000c001e6e8                sseSave
                0x00000000c001e6f0                sseLoad
                0x00000000c001e6f8                sseInit
                0x00000000c001e708                sseClose
 *fill*         0x00000000c001e709        0x7 
 .text          0x00000000c001e710       0x49 arch/i386/x87.32
                0x00000000c001e716                x87Detect
                0x00000000c001e731                x87Save
                0x00000000c001e738                x87Load
                0x00000000c001e73f                x87Init
                0x00000000c001e758                x87Close
 *fill*         0x00000000c001e759        0x3 
 .text          0x00000000c001e75c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e781        0x0 crtn.32
 *fill*         0x00000000c001e781        0x3 
 .text          0x00000000c001e784      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e784                __divdi3
 *fill*         0x00000000c001e8cf        0x1 
 .text          0x00000000c001e8d0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e8d0                __moddi3
 *fill*         0x00000000c001ea4e        0x2 
 .text          0x00000000c001ea50       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001ea50                __udivdi3
 *fill*         0x00000000c001eb4f        0x1 
 .text          0x00000000c001eb50      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001eb50                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001ec70        0x0
 .iplt          0x00000000c001ec70        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001ec6a        0xf
 .init          0x00000000c001ec6a        0x3 crti.32
                0x00000000c001ec6a                _init
 .init          0x00000000c001ec6d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001ec72        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001ec77        0x2 crtn.32

.fini           0x00000000c001ec79        0xa
 .fini          0x00000000c001ec79        0x3 crti.32
                0x00000000c001ec79                _fini
 .fini          0x00000000c001ec7c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001ec81        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001ec84       0x1f
 .text._ZN8ComputerD2Ev
                0x00000000c001ec84       0x1f core/computer.32
                0x00000000c001ec84                Computer::~Computer()
                0x00000000c001ec84                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001eca4       0x27
 .text._ZN8ComputerD0Ev
                0x00000000c001eca4       0x27 core/computer.32
                0x00000000c001eca4                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001eccb       0x21
 .text._Z10idleCommonv
                0x00000000c001eccb       0x21 core/idle.32
                0x00000000c001eccb                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ecec        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ecec        0x2 core/unixfile.32
                0x00000000c001ecec                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001ecec                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ecee       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ecee       0x42 core/unixfile.32
                0x00000000c001ecee                LinkedList<UnixFile>::LinkedList()
                0x00000000c001ecee                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ed30       0xc7
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ed30       0xc7 core/unixfile.32
                0x00000000c001ed30                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001edf8        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001edf8        0x7 core/unixfile.32
                0x00000000c001edf8                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ee00       0x95
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ee00       0x95 core/unixfile.32
                0x00000000c001ee00                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ee96        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ee96        0x8 core/unixfile.32
                0x00000000c001ee96                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ee9e       0x1f
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ee9e       0x1f hal/device.32
                0x00000000c001ee9e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ee9e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eebe       0x27
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eebe       0x27 hal/device.32
                0x00000000c001eebe                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eee6       0xd0
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eee6       0xd0 hal/device.32
                0x00000000c001eee6                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001efb6       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001efb6       0x42 hal/device.32
                0x00000000c001efb6                LinkedList<Device>::LinkedList()
                0x00000000c001efb6                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eff8       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eff8       0x1c hal/timer.32
                0x00000000c001eff8                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f014        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f014        0x7 hal/timer.32
                0x00000000c001f014                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f01c       0xac
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f01c       0xac hal/timer.32
                0x00000000c001f01c                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f0c8       0xce
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f0c8       0xce hal/timer.32
                0x00000000c001f0c8                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f198       0x1f
 .text._ZN4ACPID2Ev
                0x00000000c001f198       0x1f hw/acpi.32
                0x00000000c001f198                ACPI::~ACPI()
                0x00000000c001f198                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f1b8       0x27
 .text._ZN4ACPID0Ev
                0x00000000c001f1b8       0x27 hw/acpi.32
                0x00000000c001f1b8                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f1e0        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f1e0        0x2 hw/acpi.32
                0x00000000c001f1e0                LinkedList<Device>::~LinkedList()
                0x00000000c001f1e0                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f1e4       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f1e4       0x1c hw/acpi.32
                0x00000000c001f1e4                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f200        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f200        0x7 hw/acpi.32
                0x00000000c001f200                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f208       0xac
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f208       0xac hw/acpi.32
                0x00000000c001f208                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001f2b4       0x1f
 .text._ZN3CPUD2Ev
                0x00000000c001f2b4       0x1f hw/cpu.32
                0x00000000c001f2b4                CPU::~CPU()
                0x00000000c001f2b4                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001f2d4       0x27
 .text._ZN3CPUD0Ev
                0x00000000c001f2d4       0x27 hw/cpu.32
                0x00000000c001f2d4                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001f2fc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001f2fc        0x8 sys/kill.32
                0x00000000c001f2fc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001f304        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001f304        0x2 thr/prcssthr.32
                0x00000000c001f304                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001f304                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001f308       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001f308       0x49 thr/prcssthr.32
                0x00000000c001f308                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001f308                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001f354       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001f354       0x42 thr/prcssthr.32
                0x00000000c001f354                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001f354                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001f396       0x1f
 .text._ZN3PCID2Ev
                0x00000000c001f396       0x1f hw/bus/pci.32
                0x00000000c001f396                PCI::~PCI()
                0x00000000c001f396                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001f3b6       0x27
 .text._ZN3PCID0Ev
                0x00000000c001f3b6       0x27 hw/bus/pci.32
                0x00000000c001f3b6                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f3de       0x1f
 .text._ZN3IDED2Ev
                0x00000000c001f3de       0x1f hw/diskctrl/ide.32
                0x00000000c001f3de                IDE::~IDE()
                0x00000000c001f3de                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f3fe       0x27
 .text._ZN3IDED0Ev
                0x00000000c001f3fe       0x27 hw/diskctrl/ide.32
                0x00000000c001f3fe                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001f426       0x1f
 .text._ZN7SATABusD2Ev
                0x00000000c001f426       0x1f hw/diskctrl/satabus.32
                0x00000000c001f426                SATABus::~SATABus()
                0x00000000c001f426                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001f446       0x27
 .text._ZN7SATABusD0Ev
                0x00000000c001f446       0x27 hw/diskctrl/satabus.32
                0x00000000c001f446                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001f46e       0x1f
 .text._ZN3ATAD2Ev
                0x00000000c001f46e       0x1f hw/diskphys/ata.32
                0x00000000c001f46e                ATA::~ATA()
                0x00000000c001f46e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f48e       0x27
 .text._ZN3ATAD0Ev
                0x00000000c001f48e       0x27 hw/diskphys/ata.32
                0x00000000c001f48e                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f4b6       0x1f
 .text._ZN5ATAPID2Ev
                0x00000000c001f4b6       0x1f hw/diskphys/atapi.32
                0x00000000c001f4b6                ATAPI::~ATAPI()
                0x00000000c001f4b6                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f4d6       0x27
 .text._ZN5ATAPID0Ev
                0x00000000c001f4d6       0x27 hw/diskphys/atapi.32
                0x00000000c001f4d6                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001f4fe       0x1f
 .text._ZN4SATAD2Ev
                0x00000000c001f4fe       0x1f hw/diskphys/sata.32
                0x00000000c001f4fe                SATA::~SATA()
                0x00000000c001f4fe                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001f51e       0x27
 .text._ZN4SATAD0Ev
                0x00000000c001f51e       0x27 hw/diskphys/sata.32
                0x00000000c001f51e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001f546       0x1f
 .text._ZN6SATAPID2Ev
                0x00000000c001f546       0x1f hw/diskphys/satapi.32
                0x00000000c001f546                SATAPI::~SATAPI()
                0x00000000c001f546                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001f566       0x27
 .text._ZN6SATAPID0Ev
                0x00000000c001f566       0x27 hw/diskphys/satapi.32
                0x00000000c001f566                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001f58e       0x1f
 .text._ZN6IOAPICD2Ev
                0x00000000c001f58e       0x1f hw/intctrl/apic.32
                0x00000000c001f58e                IOAPIC::~IOAPIC()
                0x00000000c001f58e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f5ae       0x27
 .text._ZN6IOAPICD0Ev
                0x00000000c001f5ae       0x27 hw/intctrl/apic.32
                0x00000000c001f5ae                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f5d8       0x1f
 .text._ZN9APICTimerD2Ev
                0x00000000c001f5d8       0x1f hw/timer/apictimer.32
                0x00000000c001f5d8                APICTimer::~APICTimer()
                0x00000000c001f5d8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f5f8       0x27
 .text._ZN9APICTimerD0Ev
                0x00000000c001f5f8       0x27 hw/timer/apictimer.32
                0x00000000c001f5f8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f620       0x1f
 .text._ZN3PITD2Ev
                0x00000000c001f620       0x1f hw/timer/pit.32
                0x00000000c001f620                PIT::~PIT()
                0x00000000c001f620                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f640       0x27
 .text._ZN3PITD0Ev
                0x00000000c001f640       0x27 hw/timer/pit.32
                0x00000000c001f640                PIT::~PIT()

.rodata         0x00000000c001f667     0x2d21
                0x00000000c001f667                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f667        0x1 
 .ctors         0x00000000c001f668        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f66c        0x4 core/unixfile.32
 .ctors         0x00000000c001f670        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f674        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f678                end_ctors = .
                0x00000000c001f678                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f678        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f67c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f67c                __DTOR_END__
                0x00000000c001f680                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f680        0x0 
 .rodata        0x00000000c001f680      0x101 acpica/utclib.32
                0x00000000c001f680                AcpiGbl_Ctypes
 *fill*         0x00000000c001f781        0x3 
 .rodata        0x00000000c001f784       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f79c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f7e6       0x1a 
 .rodata        0x00000000c001f800       0xed fs/fat/ff.32
 *fill*         0x00000000c001f8ed       0x13 
 .rodata        0x00000000c001f900      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001fd00       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001fd6f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001fe84       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001feec       0x2c core/computer.32
                0x00000000c001feec                vtable for Computer
 .rodata.str1.4
                0x00000000c001ff18       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001ff48        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001ff54       0x17 core/main.32
 *fill*         0x00000000c001ff6b        0x1 
 .rodata.str1.4
                0x00000000c001ff6c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020011       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020069       0x39 core/pipe.32
 *fill*         0x00000000c00200a2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00200a4       0x1c core/pipe.32
                0x00000000c00200a4                vtable for Pipe
 .rodata.str1.1
                0x00000000c00200c0       0x2b core/terminal.32
 *fill*         0x00000000c00200eb        0x1 
 .rodata._ZTV7VgaText
                0x00000000c00200ec       0x1c core/terminal.32
                0x00000000c00200ec                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020108       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002012a       0x15 core/unixfile.32
 *fill*         0x00000000c002013f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020140       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002018b        0x8 core/unixfile.32
 *fill*         0x00000000c0020193        0x1 
 .rodata.str1.4
                0x00000000c0020194       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00201b4       0x1c core/unixfile.32
                0x00000000c00201b4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00201d0       0x1c core/unixfile.32
                0x00000000c00201d0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00201ec      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020353      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002045a       0x33 coreobjs/c++.32
 *fill*         0x00000000c002048d        0x3 
 .rodata        0x00000000c0020490      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00205e0       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c00205e0       0x68 fs/vfs.32
                0x00000000c00205e0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020648       0x1c fs/vfs.32
                0x00000000c0020648                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020664       0x1c fs/vfs.32
                0x00000000c0020664                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020680       0x2c hal/bus.32
                0x00000000c0020680                vtable for Bus
 .rodata.str1.1
                0x00000000c00206ac       0x1e hal/clock.32
 *fill*         0x00000000c00206ca        0x2 
 .rodata._ZTV5Clock
                0x00000000c00206cc       0x3c hal/clock.32
                0x00000000c00206cc                vtable for Clock
 *fill*         0x00000000c0020708       0x18 
 .rodata        0x00000000c0020720       0x30 hal/clock.32
 .rodata.cst16  0x00000000c0020750      0x180 hal/clock.32
 .rodata.str1.1
                0x00000000c00208d0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020928       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020928       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020928       0x2c hal/device.32
                0x00000000c0020928                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020954       0x2c hal/device.32
                0x00000000c0020954                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020980       0x2c hal/diskctrl.32
                0x00000000c0020980                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00209ac       0x38 hal/diskphys.32
                0x00000000c00209ac                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00209e4       0x3e hal/intctrl.32
 *fill*         0x00000000c0020a22        0x2 
 .rodata.str1.4
                0x00000000c0020a24       0x5d hal/intctrl.32
 .rodata        0x00000000c0020a81       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0020ad4       0x34 hal/keybrd.32
                0x00000000c0020ad4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020b08       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0020b4c       0x2c hal/logidisk.32
                0x00000000c0020b4c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0020b78       0x2c hal/mouse.32
                0x00000000c0020b78                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0020ba4       0x34 hal/nic.32
                0x00000000c0020ba4                vtable for NIC
 .rodata.str1.1
                0x00000000c0020bd8        0xb hal/partition.32
 *fill*         0x00000000c0020be3        0x1 
 .rodata._ZTV6Serial
                0x00000000c0020be4       0x44 hal/serial.32
                0x00000000c0020be4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020c28       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020c28        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020c28       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020c28       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0020c28       0x30 hal/timer.32
                0x00000000c0020c28                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020c58       0x10 hal/vcache.32
                0x00000000c0020c58                vtable for VCache
 .rodata.str1.1
                0x00000000c0020c68       0x93 hal/video.32
 *fill*         0x00000000c0020cfb        0x1 
 .rodata._ZTV5Video
                0x00000000c0020cfc       0x4c hal/video.32
                0x00000000c0020cfc                vtable for Video
 .rodata.str1.4
                0x00000000c0020d48       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0020de3      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0020f1f       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0020f1f        0x8 hw/acpi.32
 *fill*         0x00000000c0020f1f        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020f20       0x2c hw/acpi.32
                0x00000000c0020f20                vtable for ACPI
 .rodata.str1.1
                0x00000000c0020f4c      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c00210b9        0x3 
 .rodata._ZTV3CPU
                0x00000000c00210bc       0x2c hw/cpu.32
                0x00000000c00210bc                vtable for CPU
 .rodata.str1.1
                0x00000000c00210e8       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021124       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c00211b5       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c002127e       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00212c6       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00212f1       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0021367       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00213ac        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00213b6       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00213d7       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c002146d       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00214c1       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00214ed      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00216b9       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0021710      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002181c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002181c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002181c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002181c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002181c       0xa0 vm86/vm8086.32
 .rodata        0x00000000c00218bc       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00218ec      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c0021a7c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0021aef       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0021b04       0x3c arch/i386/rtc.32
                0x00000000c0021b04                vtable for RTC
 .rodata.str1.1
                0x00000000c0021b40       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0021b81        0x3 
 .rodata._ZTV3FAT
                0x00000000c0021b84       0x68 fs/fat/vfslink.32
                0x00000000c0021b84                vtable for FAT
 .rodata.str1.1
                0x00000000c0021bec       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0021bec      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0021d24       0x68 fs/iso9660/vfslink.32
                0x00000000c0021d24                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0021d8c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0021dd0       0x34 hal/sound/sndcard.32
                0x00000000c0021dd0                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0021e04       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0021e43       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0021e7b       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0021f1c       0x2c hw/bus/pci.32
                0x00000000c0021f1c                vtable for PCI
 .rodata.str1.1
                0x00000000c0021f48       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0021fcf        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021fd0       0x2c hw/diskctrl/ide.32
                0x00000000c0021fd0                vtable for IDE
 .rodata.str1.4
                0x00000000c0021ffc       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022020       0x2c hw/diskctrl/satabus.32
                0x00000000c0022020                vtable for SATABus
 .rodata.str1.1
                0x00000000c002204c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c002205e        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022060       0x38 hw/diskphys/ata.32
                0x00000000c0022060                vtable for ATA
 .rodata.str1.1
                0x00000000c0022098        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00220a5        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00220a8       0x38 hw/diskphys/atapi.32
                0x00000000c00220a8                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00220e0       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c002215c       0x38 hw/diskphys/sata.32
                0x00000000c002215c                vtable for SATA
 .rodata.str1.1
                0x00000000c0022194       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c002227e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0022280       0x38 hw/diskphys/satapi.32
                0x00000000c0022280                vtable for SATAPI
 .rodata        0x00000000c00222b8        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00222c0       0x2c hw/intctrl/apic.32
                0x00000000c00222c0                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00222ec       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0022307        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022308       0x30 hw/timer/apictimer.32
                0x00000000c0022308                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0022338       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022355        0x3 
 .rodata._ZTV3PIT
                0x00000000c0022358       0x30 hw/timer/pit.32
                0x00000000c0022358                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0022388      0x4dd
 *(.data)
 .data          0x00000000c0022388        0x0 crti.32
 .data          0x00000000c0022388        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0022388                __dso_handle
 .data          0x00000000c002238c        0x0 acpica/utclib.32
 .data          0x00000000c002238c        0x0 core/malloc.32
 .data          0x00000000c002238c        0x0 libk/ctype.32
 .data          0x00000000c002238c        0x0 libk/string.32
 .data          0x00000000c002238c        0x0 fs/fat/diskio.32
 .data          0x00000000c002238c        0x0 fs/fat/ff.32
 .data          0x00000000c002238c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c002238c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c002238c        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c002238c        0x0 core/computer.32
 .data          0x00000000c002238c        0x0 core/gdt.32
 .data          0x00000000c002238c        0x0 core/idle.32
 .data          0x00000000c002238c        0x0 core/idt.32
 .data          0x00000000c002238c        0x4 core/kheap.32
 .data          0x00000000c0022390        0x0 core/main.32
 .data          0x00000000c0022390        0x4 core/physmgr.32
                0x00000000c0022390                Phys::bitmap
 .data          0x00000000c0022394        0x0 core/pipe.32
 *fill*         0x00000000c0022394        0xc 
 .data          0x00000000c00223a0       0x60 core/terminal.32
                0x00000000c00223a0                VgaText::hiddenOut
                0x00000000c00223c0                ansiToVGAMappings
 .data          0x00000000c0022400        0x0 core/tss.32
 .data          0x00000000c0022400        0x4 core/unixfile.32
                0x00000000c0022400                UnixFile::nextFd
 .data          0x00000000c0022404       0x15 core/virtmgr.32
                0x00000000c0022404                Virt::pageAllocPtr
                0x00000000c0022408                Virt::bitmap
                0x00000000c002240c                Virt::swapfileSectorsPerPage
                0x00000000c0022410                Virt::swapfileLength
                0x00000000c0022414                Virt::swapfileSector
                0x00000000c0022418                Virt::swapfileDrive
 *fill*         0x00000000c0022419        0x3 
 .data          0x00000000c002241c        0x4 coreobjs/c++.32
                0x00000000c002241c                __stack_chk_guard
 .data          0x00000000c0022420        0x0 dbg/kconsole.32
 .data          0x00000000c0022420        0x0 fs/vfs.32
 .data          0x00000000c0022420        0x0 hal/bus.32
 .data          0x00000000c0022420        0x0 hal/buzzer.32
 .data          0x00000000c0022420        0x0 hal/clock.32
 .data          0x00000000c0022420        0x0 hal/device.32
 .data          0x00000000c0022420        0x0 hal/diskctrl.32
 .data          0x00000000c0022420        0x0 hal/diskphys.32
 .data          0x00000000c0022420        0x0 hal/fpu.32
 .data          0x00000000c0022420        0x0 hal/intctrl.32
 .data          0x00000000c0022420        0x0 hal/keybrd.32
 .data          0x00000000c0022420        0x0 hal/logidisk.32
 .data          0x00000000c0022420        0x0 hal/mouse.32
 .data          0x00000000c0022420        0x0 hal/nic.32
 .data          0x00000000c0022420        0x0 hal/partition.32
 .data          0x00000000c0022420        0x0 hal/serial.32
 .data          0x00000000c0022420        0x0 hal/timer.32
 .data          0x00000000c0022420        0x0 hal/vcache.32
 .data          0x00000000c0022420        0x0 hal/video.32
 .data          0x00000000c0022420       0x10 hw/acpi.32
                0x00000000c0022420                legacyIRQRemaps
 .data          0x00000000c0022430        0x4 hw/cpu.32
                0x00000000c0022430                lastCode
 *fill*         0x00000000c0022434        0xc 
 .data          0x00000000c0022440      0x142 krnl/bootmsg.32
                0x00000000c0022440                KiSplashScreen
 *fill*         0x00000000c0022582       0x1e 
 .data          0x00000000c00225a0       0x4d krnl/env.32
                0x00000000c00225a0                defaultSysEnv
 .data          0x00000000c00225ed        0x0 krnl/inlines.32
 .data          0x00000000c00225ed        0x0 krnl/panic.32
 .data          0x00000000c00225ed        0x0 krnl/powctrl.32
 .data          0x00000000c00225ed        0x0 krnl/random.32
 .data          0x00000000c00225ed        0x0 krnl/resolve.32
 *fill*         0x00000000c00225ed       0x13 
 .data          0x00000000c0022600       0x4c krnl/signal.32
                0x00000000c0022600                KiDefaultSignalHandlers
 *fill*         0x00000000c002264c       0x14 
 .data          0x00000000c0022660       0xf0 krnl/syscalls.32
                0x00000000c0022660                systemCallHandlers
 .data          0x00000000c0022750        0x0 net/ethernet.32
 *fill*         0x00000000c0022750       0x10 
 .data          0x00000000c0022760      0x100 reg/cm.32
                0x00000000c0022760                CmComponents
 .data          0x00000000c0022860        0x0 reg/registry.32
 .data          0x00000000c0022860        0x0 sys/eject.32
 .data          0x00000000c0022860        0x0 sys/exit.32
 .data          0x00000000c0022860        0x0 sys/getcwd.32
 .data          0x00000000c0022860        0x0 sys/getpid.32
 .data          0x00000000c0022860        0x0 sys/getramdata.32
 .data          0x00000000c0022860        0x0 sys/getvgaptr.32
 .data          0x00000000c0022860        0x0 sys/kill.32
 .data          0x00000000c0022860        0x0 sys/loaddll.32
 .data          0x00000000c0022860        0x0 sys/read.32
 .data          0x00000000c0022860        0x0 sys/registersignal.32
 .data          0x00000000c0022860        0x0 sys/registry.32
 .data          0x00000000c0022860        0x0 sys/sbrk.32
 .data          0x00000000c0022860        0x0 sys/setcwd.32
 .data          0x00000000c0022860        0x0 sys/settime.32
 .data          0x00000000c0022860        0x0 sys/timezone.32
 .data          0x00000000c0022860        0x0 sys/write.32
 .data          0x00000000c0022860        0x0 sys/wsbe.32
 .data          0x00000000c0022860        0x0 sys/yield.32
 .data          0x00000000c0022860        0x0 thr/elf.32
 .data          0x00000000c0022860        0x4 thr/prcssthr.32
                0x00000000c0022860                Thr::nextPID
 .data          0x00000000c0022864        0x0 vm86/vm8086.32
 .data          0x00000000c0022864        0x0 arch/i386/hal.32
 .data          0x00000000c0022864        0x0 arch/i386/pic.32
 .data          0x00000000c0022864        0x0 arch/i386/rtc.32
 .data          0x00000000c0022864        0x0 arch/i386/vga.32
 .data          0x00000000c0022864        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022864        0x0 fs/iso9660/helper.32
 .data          0x00000000c0022864        0x1 fs/iso9660/vfslink.32
                0x00000000c0022864                recentDriveletter
 .data          0x00000000c0022865        0x0 hal/sound/sndcard.32
 .data          0x00000000c0022865        0x0 hal/sound/sndport.32
 .data          0x00000000c0022865        0x0 hw/bus/isa.32
 .data          0x00000000c0022865        0x0 hw/bus/pci.32
 .data          0x00000000c0022865        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022865        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0022865        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022865        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022865        0x0 hw/diskphys/sata.32
 .data          0x00000000c0022865        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0022865        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022865        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022865        0x0 hw/timer/pit.32
 .data          0x00000000c0022865        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022865        0x0 crtn.32
 .data          0x00000000c0022865        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0022865        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0022865        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0022865        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0022868        0x0
 .got           0x00000000c0022868        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0022868        0x0
 .got.plt       0x00000000c0022868        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0022868        0x0
 .igot.plt      0x00000000c0022868        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0022868        0x0
 .tm_clone_table
                0x00000000c0022868        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0022868        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022865      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0022865        0x3 
 .eh_frame      0x00000000c0022868        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0022868        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0022868       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00228c0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022900       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002296c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0023000       0x8d
 *(userkernel)
 userkernel     0x00000000c0023000       0x52 krnl/signal.32
                0x00000000c0023000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002302c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0023052       0x3b krnl/syscalls.32
                0x00000000c0023052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0024000        0x1
 *(align_previous)
 align_previous
                0x00000000c0024000        0x1 krnl/signal.32
                0x00000000c0024000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0024004        0x0
 .rel.got       0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0024001     0x4ba7
                0x00000000c0024001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0024001       0x1f 
 COMMON         0x00000000c0024020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0024020                dcache
                0x00000000c0024060                cdDriveLetter
                0x00000000c0024080                icache
 *(.bss)
 .bss           0x00000000c00240c0        0x0 crti.32
 .bss           0x00000000c00240c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00240e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00240e4       0x1c 
 .bss           0x00000000c0024100      0x378 core/malloc.32
 .bss           0x00000000c0024478        0x0 libk/ctype.32
 .bss           0x00000000c0024478        0x0 libk/string.32
 .bss           0x00000000c0024478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480       0x88 fs/fat/ff.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0024508       0x18 
 .bss           0x00000000c0024520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0024eb8        0x6 core/computer.32
                0x00000000c0024eb8                Krnl::computer
                0x00000000c0024ebc                KeIsPreemptionOn
                0x00000000c0024ebd                KeIsSchedulingOn
 *fill*         0x00000000c0024ebe        0x2 
 .bss           0x00000000c0024ec0        0x6 core/gdt.32
                0x00000000c0024ec0                gdtDescr
 .bss           0x00000000c0024ec6        0x0 core/idle.32
 *fill*         0x00000000c0024ec6        0x2 
 .bss           0x00000000c0024ec8        0x6 core/idt.32
                0x00000000c0024ec8                idtDescr
 .bss           0x00000000c0024ece        0x0 core/kheap.32
 *fill*         0x00000000c0024ece        0x2 
 .bss           0x00000000c0024ed0        0x4 core/main.32
                0x00000000c0024ed0                sysBootSettings
 .bss           0x00000000c0024ed4       0x29 core/physmgr.32
                0x00000000c0024ed4                Phys::forbidEvictions
                0x00000000c0024ed8                Phys::currentPagePointer
                0x00000000c0024edc                Phys::highestMem
                0x00000000c0024ee0                Phys::oldPercent
                0x00000000c0024ee4                Phys::usedPages
                0x00000000c0024ee8                Phys::usablePages
                0x00000000c0024eec                Phys::dmaUsage
 .bss           0x00000000c0024efd        0x0 core/pipe.32
 *fill*         0x00000000c0024efd        0x3 
 .bss           0x00000000c0024f00        0x9 core/terminal.32
                0x00000000c0024f00                terminalCycle
                0x00000000c0024f04                activeTerminal
                0x00000000c0024f08                VgaText::graphicMode
 *fill*         0x00000000c0024f09        0x1 
 .bss           0x00000000c0024f0a        0x2 core/tss.32
                0x00000000c0024f0a                doubleFaultSelector
 *fill*         0x00000000c0024f0c       0x14 
 .bss           0x00000000c0024f20       0x84 core/unixfile.32
                0x00000000c0024f20                sfileLpt
                0x00000000c0024f60                sfileCom
                0x00000000c0024f84                sfileNul
                0x00000000c0024f88                sfilePnt
                0x00000000c0024f8c                sfileAux
                0x00000000c0024f90                sfileCon
                0x00000000c0024f94                initialFilesAdded
                0x00000000c0024f98                unixFileLinkedList
 .bss           0x00000000c0024fa4       0x10 core/virtmgr.32
                0x00000000c0024fa4                twswaps
                0x00000000c0024fa8                swapBalance
                0x00000000c0024fac                Virt::swapfileBitmap
                0x00000000c0024fb0                firstVAS
 .bss           0x00000000c0024fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0024fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0024fb4        0x4 fs/vfs.32
                0x00000000c0024fb4                installedFilesystems
 .bss           0x00000000c0024fb8        0x0 hal/bus.32
 .bss           0x00000000c0024fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0024fb8        0x8 hal/clock.32
                0x00000000c0024fb8                User::dstOn
                0x00000000c0024fb9                User::timezoneHalfHourOffset
                0x00000000c0024fbc                User::timezoneHourOffset
 .bss           0x00000000c0024fc0        0x0 hal/device.32
 .bss           0x00000000c0024fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0024fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0024fc0        0x0 hal/fpu.32
 .bss           0x00000000c0024fc0     0x2000 hal/intctrl.32
                0x00000000c0024fc0                INT_contexts
                0x00000000c0025fc0                INT_handlers
 .bss           0x00000000c0026fc0      0x429 hal/keybrd.32
                0x00000000c0026fc0                keyboardWaitingTaskList
                0x00000000c0026fc4                keyboardSetupYet
                0x00000000c0026fc8                guiKeyboardHandler
                0x00000000c0026fe0                keystates
 *fill*         0x00000000c00273e9       0x17 
 .bss           0x00000000c0027400       0x88 hal/logidisk.32
                0x00000000c0027400                diskAssignments
                0x00000000c0027420                disks
 .bss           0x00000000c0027488        0x4 hal/mouse.32
                0x00000000c0027488                guiMouseHandler
 .bss           0x00000000c002748c        0x0 hal/nic.32
 .bss           0x00000000c002748c        0x0 hal/partition.32
 .bss           0x00000000c002748c        0x0 hal/serial.32
 .bss           0x00000000c002748c        0x4 hal/timer.32
                0x00000000c002748c                milliTenthsSinceBoot
 .bss           0x00000000c0027490        0x0 hal/vcache.32
 .bss           0x00000000c0027490        0x4 hal/video.32
                0x00000000c0027490                screen
 *fill*         0x00000000c0027494        0xc 
 .bss           0x00000000c00274a0      0x480 hw/acpi.32
                0x00000000c00274a0                systemSleepFunction
                0x00000000c00274a4                systemResetFunction
                0x00000000c00274a8                systemShutdownFunction
                0x00000000c00274ac                nextACPITable
                0x00000000c00274c0                acpiTables
                0x00000000c00276c0                usingXSDT
                0x00000000c00276c4                MADTpointer
                0x00000000c00276c8                RSDTpointer
                0x00000000c00276cc                RSDPpointer
                0x00000000c00276d0                nextAPICNMI
                0x00000000c00276e0                apicNMIInfo
                0x00000000c0027760                legacyIRQFlags
                0x00000000c0027780                ioapicDiscoveryNumber
                0x00000000c00277a0                ioapicFoundInMADT
                0x00000000c00277c0                ioapicAddresses
                0x00000000c0027840                ioapicGSIBase
                0x00000000c00278c0                processorDiscoveryNumber
                0x00000000c00278e0                matchingAPICID
                0x00000000c0027900                processorID
 .bss           0x00000000c0027920       0x10 hw/cpu.32
                0x00000000c0027920                lastD
                0x00000000c0027924                lastC
                0x00000000c0027928                lastB
                0x00000000c002792c                lastA
 .bss           0x00000000c0027930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0027930        0x8 krnl/env.32
                0x00000000c0027930                Krnl::userEnv
                0x00000000c0027934                Krnl::systemEnv
 .bss           0x00000000c0027938        0x0 krnl/inlines.32
 .bss           0x00000000c0027938        0x1 krnl/panic.32
                0x00000000c0027938                KeIsKernelInPanic
 *fill*         0x00000000c0027939        0x7 
 .bss           0x00000000c0027940       0x48 krnl/powctrl.32
                0x00000000c0027940                Krnl::powCtrlOnBattery
                0x00000000c0027960                Krnl::currentPowerSettings
                0x00000000c0027984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0027988        0x8 krnl/random.32
                0x00000000c0027988                kiRandSeed
 .bss           0x00000000c0027990        0x0 krnl/resolve.32
 .bss           0x00000000c0027990        0x0 krnl/signal.32
 .bss           0x00000000c0027990        0x0 krnl/syscalls.32
 .bss           0x00000000c0027990        0x0 net/ethernet.32
 .bss           0x00000000c0027990        0x4 reg/cm.32
 .bss           0x00000000c0027994        0x0 reg/registry.32
 .bss           0x00000000c0027994        0x0 sys/eject.32
 .bss           0x00000000c0027994        0x0 sys/exit.32
 .bss           0x00000000c0027994        0x0 sys/getcwd.32
 .bss           0x00000000c0027994        0x0 sys/getpid.32
 .bss           0x00000000c0027994        0x0 sys/getramdata.32
 .bss           0x00000000c0027994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0027994        0x0 sys/kill.32
 .bss           0x00000000c0027994        0x0 sys/loaddll.32
 .bss           0x00000000c0027994        0x0 sys/read.32
 .bss           0x00000000c0027994        0x0 sys/registersignal.32
 .bss           0x00000000c0027994        0x0 sys/registry.32
 .bss           0x00000000c0027994        0x0 sys/sbrk.32
 .bss           0x00000000c0027994        0x0 sys/setcwd.32
 .bss           0x00000000c0027994        0x0 sys/settime.32
 .bss           0x00000000c0027994        0x0 sys/timezone.32
 .bss           0x00000000c0027994        0x0 sys/write.32
 .bss           0x00000000c0027994        0x0 sys/wsbe.32
 .bss           0x00000000c0027994        0x0 sys/yield.32
 *fill*         0x00000000c0027994        0xc 
 .bss           0x00000000c00279a0      0x7a4 thr/elf.32
                0x00000000c00279a0                Thr::driverLookupNext
                0x00000000c00279c0                Thr::driverLookupLen
                0x00000000c0027bc0                Thr::driverLookupAddr
                0x00000000c0027dc0                Thr::driverNameLookup
                0x00000000c0027fc0                Thr::kernelSymbols
                0x00000000c0028040                Thr::kernelStringTable
                0x00000000c00280c0                Thr::kernelSymbolTable
                0x00000000c0028140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028144        0x4 
 .bss           0x00000000c0028148       0x68 thr/prcssthr.32
                0x00000000c0028148                cleanerThread
                0x00000000c002814c                weNeedTheCleanerToNotBlock
                0x00000000c0028150                retValLockStuff
                0x00000000c0028154                retValSchedLock
                0x00000000c0028158                lockStuffLock
                0x00000000c002815c                schedulerLock
                0x00000000c0028160                taskSwitchesPostponedFlag
                0x00000000c0028164                postponeTaskSwitchesCounter
                0x00000000c0028168                irqDisableCounter
                0x00000000c002816c                terminatedTaskList
                0x00000000c0028178                sleepingTaskList
                0x00000000c0028184                taskList
                0x00000000c0028190                kernelProcess
 *fill*         0x00000000c00281b0       0x10 
 .bss           0x00000000c00281c0       0x40 vm86/vm8086.32
                0x00000000c00281c0                Vm::vmRetV
                0x00000000c00281c4                Vm::vmDone
                0x00000000c00281c5                Vm::vmReady
                0x00000000c00281c8                Vm::vm86Thread
                0x00000000c00281cc                Vm::vmToHostCommsPtr
                0x00000000c00281e0                Vm::vmToHostComms
 .bss           0x00000000c0028200       0x14 arch/i386/hal.32
                0x00000000c0028200                apic
                0x00000000c0028204                fpuOwner
                0x00000000c0028208                coproLoadFunc
                0x00000000c002820c                coproSaveFunc
                0x00000000c0028210                gpFaultIntercept
 .bss           0x00000000c0028214        0x0 arch/i386/pic.32
 .bss           0x00000000c0028214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0028216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0028216        0xa 
 .bss           0x00000000c0028220       0xf0 fs/fat/vfslink.32
                0x00000000c0028220                FAT::fats
                0x00000000c0028240                FAT::vfsToFatRemaps
                0x00000000c00282c0                fatToVFSRemaps
 .bss           0x00000000c0028310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0028310       0x10 
 .bss           0x00000000c0028320      0x820 fs/iso9660/vfslink.32
                0x00000000c0028320                iso9660Owner
                0x00000000c0028324                recentSector
                0x00000000c0028340                recentBuffer
 .bss           0x00000000c0028b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0028b40        0xd hw/bus/pci.32
                0x00000000c0028b40                thePCI
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0028b4d        0x3 
 .bss           0x00000000c0028b50        0x8 hw/diskphys/ata.32
                0x00000000c0028b50                ataSectorsWritten
                0x00000000c0028b54                ataSectorsRead
 .bss           0x00000000c0028b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0028b58        0x8 
 .bss           0x00000000c0028b60       0x41 hw/intctrl/apic.32
                0x00000000c0028b60                noOfIOAPICs
                0x00000000c0028b80                ioapics
                0x00000000c0028ba0                IOAPICsSetupYet
 .bss           0x00000000c0028ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0028ba1        0x3 
 .bss           0x00000000c0028ba4        0x4 hw/timer/pit.32
                0x00000000c0028ba4                pitFreq
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0028ba8        0x0 crtn.32
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0028ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
