Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c45a
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 *fill*         0x00000000c0001afb        0x1 
 .text          0x00000000c0001afc      0x1f2 libk/ctype.32
                0x00000000c0001afc                isblank
                0x00000000c0001b1c                iscntrl
                0x00000000c0001b3c                isdigit
                0x00000000c0001b58                islower
                0x00000000c0001b74                isspace
                0x00000000c0001b9c                isupper
                0x00000000c0001bb8                isalpha
                0x00000000c0001be8                isalnum
                0x00000000c0001c18                ispunct
                0x00000000c0001c58                isgraph
                0x00000000c0001c88                isprint
                0x00000000c0001cb0                isxdigit
 .text          0x00000000c0001cee        0x0 libk/string.32
 .text          0x00000000c0001cee       0x51 fs/fat/diskio.32
                0x00000000c0001cee                disk_status
                0x00000000c0001cf1                disk_initialize
                0x00000000c0001cf4                disk_read
                0x00000000c0001d0a                disk_write
                0x00000000c0001d20                disk_ioctl
 .text          0x00000000c0001d3f     0x3d4b fs/fat/ff.32
                0x00000000c0003adb                f_mount
                0x00000000c0003b3d                f_open
                0x00000000c0003e08                f_read
                0x00000000c0004007                f_write
                0x00000000c000423b                f_sync
                0x00000000c00042f0                f_close
                0x00000000c000431f                f_lseek
                0x00000000c00044c6                f_opendir
                0x00000000c0004591                f_closedir
                0x00000000c00045b3                f_readdir
                0x00000000c0004645                f_stat
                0x00000000c00046c4                f_getfree
                0x00000000c00047c6                f_truncate
                0x00000000c00048aa                f_unlink
                0x00000000c00049cc                f_mkdir
                0x00000000c0004b67                f_rename
                0x00000000c0004d1d                f_chmod
                0x00000000c0004dc6                f_utime
                0x00000000c0004e74                f_getlabel
                0x00000000c0004fc5                f_setlabel
                0x00000000c0005155                f_expand
                0x00000000c00052b5                f_mkfs
 *fill*         0x00000000c0005a8a        0x2 
 .text          0x00000000c0005a8c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a8c                ff_memalloc
                0x00000000c0005aa4                ff_memfree
 *fill*         0x00000000c0005abb        0x1 
 .text          0x00000000c0005abc      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005abc                ff_uni2oem
                0x00000000c0005b5c                ff_oem2uni
                0x00000000c0005bd4                ff_wtoupper
 .text          0x00000000c0005d64     0x1145 fs/iso9660/iso9660.32
                0x00000000c0006064                isoReadDiscSector
                0x00000000c0006145                strnicmp
                0x00000000c00064a8                stricmp
                0x00000000c0006502                iso_open
                0x00000000c00065e2                iso_close
                0x00000000c0006602                iso_read
                0x00000000c0006800                iso_seek
                0x00000000c00068de                iso_tell
                0x00000000c000693b                iso_total
                0x00000000c0006984                fn_postprocess
                0x00000000c00069b8                iso_readdir
                0x00000000c0006c82                iso_reset
                0x00000000c0006c92                init_percd
                0x00000000c0006d97                iso_ioctl
                0x00000000c0006da2                fs_iso9660_init
                0x00000000c0006e31                fs_iso9660_shutdown
 .text          0x00000000c0006ea9       0x94 compat/inlines.32
                0x00000000c0006ea9                CPU::current()
                0x00000000c0006eb5                operator new(unsigned long)
                0x00000000c0006eba                operator delete(void*)
                0x00000000c0006ebf                disableIRQs()
                0x00000000c0006ec1                enableIRQs()
                0x00000000c0006ec3                lockScheduler()
                0x00000000c0006ecb                unlockScheduler()
                0x00000000c0006eda                lockStuff()
                0x00000000c0006ee8                unlockStuff()
                0x00000000c0006f22                Virt::getAKernelVAS()
                0x00000000c0006f28                __not_memcpy
 *fill*         0x00000000c0006f3d        0x3 
 .text          0x00000000c0006f40      0x118 compat/resolve.32
                0x00000000c0006f40                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0007058      0x68b core/computer.32
                0x00000000c0007058                Computer::close(int, int, void*)
                0x00000000c000709d                Krnl::firstTask()
                0x00000000c00071d6                Computer::Computer()
                0x00000000c00071d6                Computer::Computer()
                0x00000000c0007288                Computer::setBootMessage(char const*)
                0x00000000c000728a                Computer::detectFeatures()
                0x00000000c0007494                Computer::displayFeatures()
                0x00000000c0007496                Computer::rdmsr(unsigned int)
                0x00000000c00074c2                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00074fa                Computer::shutdown()
                0x00000000c0007512                Computer::restart()
                0x00000000c000752a                Computer::sleep()
                0x00000000c000753e                Computer::nmiEnabled()
                0x00000000c000754a                Computer::readCMOS(unsigned char)
                0x00000000c0007564                Computer::enableNMI(bool)
                0x00000000c000757c                Computer::open(int, int, void*)
                0x00000000c0007650                Computer::disableNMI()
                0x00000000c0007660                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000767e                Computer::handleNMI()
 *fill*         0x00000000c00076e3        0x1 
 .text          0x00000000c00076e4      0x1cf core/gdt.32
                0x00000000c00076e4                GDTEntry::setBase(unsigned int)
                0x00000000c0007700                GDTEntry::setLimit(unsigned int)
                0x00000000c000771e                GDT::GDT()
                0x00000000c000771e                GDT::GDT()
                0x00000000c0007734                GDT::addEntry(GDTEntry)
                0x00000000c0007756                GDT::getNumberOfEntries()
                0x00000000c000775e                GDT::flush()
                0x00000000c0007780                GDT::setup()
 .text          0x00000000c00078b3       0x19 core/idle.32
                0x00000000c00078b3                idleFunction(void*)
 .text          0x00000000c00078cc      0x464 core/idt.32
                0x00000000c00078cc                IDTEntry::IDTEntry(bool)
                0x00000000c00078cc                IDTEntry::IDTEntry(bool)
                0x00000000c000793e                IDTEntry::setOffset(unsigned int)
                0x00000000c0007954                IDT::IDT()
                0x00000000c0007954                IDT::IDT()
                0x00000000c0007956                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000795e                IDT::addEntry(IDTEntry, int)
                0x00000000c0007978                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00079b0                IDT::flush()
                0x00000000c00079ca                IDT::setup()
 .text          0x00000000c0007d30      0x183 core/kheap.32
                0x00000000c0007d30                sbrk
                0x00000000c0007dc5                mmap
                0x00000000c0007ddb                munmap
                0x00000000c0007df1                liballoc_lock()
                0x00000000c0007dfe                liballoc_unlock()
                0x00000000c0007e12                liballoc_alloc(int)
                0x00000000c0007e2a                liballoc_free(void*, int)
                0x00000000c0007e45                realloc
                0x00000000c0007e59                malloc
                0x00000000c0007e69                free
                0x00000000c0007e79                rfree
                0x00000000c0007e89                calloc
 .text          0x00000000c0007eb3      0x1b4 core/main.32
                0x00000000c0007eb3                Krnl::setBootMessage(char const*)
                0x00000000c0007f1f                kernel_main
 .text          0x00000000c0008067      0x5dc core/physmgr.32
                0x00000000c0008067                Phys::allocateDMA(unsigned long)
                0x00000000c000813e                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0008171                Phys::setPageState(unsigned long, bool)
                0x00000000c00081a3                Phys::getPageState(unsigned long)
                0x00000000c00081c4                Phys::freePage(unsigned long)
                0x00000000c0008226                Phys::allocatePage()
                0x00000000c00082e4                Phys::allocateContiguousPages(int)
                0x00000000c0008340                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0008378                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008643        0x1 
 .text          0x00000000c0008644      0x273 core/pipe.32
                0x00000000c0008644                Pipe::isAtty()
                0x00000000c0008648                Pipe::~Pipe()
                0x00000000c0008648                Pipe::~Pipe()
                0x00000000c000866c                Pipe::~Pipe()
                0x00000000c0008694                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008754                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008850                Pipe::Pipe(int)
                0x00000000c0008850                Pipe::Pipe(int)
 *fill*         0x00000000c00088b7        0x1 
 .text          0x00000000c00088b8      0xa1e core/terminal.32
                0x00000000c00088b8                VgaText::isAtty()
                0x00000000c00088bc                VgaText::~VgaText()
                0x00000000c00088bc                VgaText::~VgaText()
                0x00000000c00088e0                VgaText::~VgaText()
                0x00000000c000890a                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000892a                setTerminalScrollLock(bool)
                0x00000000c000892b                doTerminalCycle()
                0x00000000c000892c                addToTerminalCycle(VgaText*)
                0x00000000c000892d                scrollTerminalScrollLock(int)
                0x00000000c000892e                VgaText::updateTitle()
                0x00000000c0008930                VgaText::load()
                0x00000000c0008932                VgaText::updateCursor()
                0x00000000c0008948                VgaText::doANSI_SGR(int)
                0x00000000c00089bc                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00089cc                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00089dc                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00089fc                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008a08                VgaText::setTitleColour(VgaColour)
                0x00000000c0008a14                VgaText::setTitle(char*)
                0x00000000c0008a16                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008a28                VgaText::scrollScreen()
                0x00000000c0008ac0                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008ad2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008b62                VgaText::getCursorX()
                0x00000000c0008b6a                VgaText::getCursorY()
                0x00000000c0008b72                VgaText::setCursor(int, int)
                0x00000000c0008b89                setActiveTerminal(VgaText*)
                0x00000000c0008bd4                VgaText::clearScreen()
                0x00000000c0008c22                VgaText::setCursorX(int)
                0x00000000c0008c3a                VgaText::setCursorY(int)
                0x00000000c0008c52                VgaText::incrementCursor(bool)
                0x00000000c0008ca6                VgaText::decrementCursor(bool)
                0x00000000c0008cc8                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008d96                VgaText::putchar(char)
                0x00000000c0008e82                VgaText::putx(unsigned int)
                0x00000000c0008ec8                VgaText::puts(char const*)
                0x00000000c0008eee                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008f3a                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000908c                VgaText::VgaText(char const*)
                0x00000000c000908c                VgaText::VgaText(char const*)
                0x00000000c00091d8                VgaText::receiveKey(unsigned char)
                0x00000000c00092b0                VgaText::doUpdate()
                0x00000000c00092b1                newTerminal(char*)
 *fill*         0x00000000c00092d6        0x2 
 .text          0x00000000c00092d8      0x1a1 core/tss.32
                0x00000000c00092d8                TSS::TSS()
                0x00000000c00092d8                TSS::TSS()
                0x00000000c00092e8                TSS::setESP(unsigned long)
                0x00000000c00092fc                TSS::flush()
                0x00000000c000931c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0009479        0x1 
 .text          0x00000000c000947a      0x4c2 core/unixfile.32
                0x00000000c000947a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00094d0                ReservedFilename::isAtty()
                0x00000000c00094ec                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000954a                UnixFile::getFileDescriptor()
                0x00000000c0009552                UnixFile::UnixFile(int)
                0x00000000c0009552                UnixFile::UnixFile(int)
                0x00000000c0009702                ReservedFilename::ReservedFilename(int)
                0x00000000c0009702                ReservedFilename::ReservedFilename(int)
                0x00000000c0009734                UnixFile::~UnixFile()
                0x00000000c0009734                UnixFile::~UnixFile()
                0x00000000c00097cc                UnixFile::~UnixFile()
                0x00000000c00097f4                ReservedFilename::~ReservedFilename()
                0x00000000c00097f4                ReservedFilename::~ReservedFilename()
                0x00000000c0009818                ReservedFilename::~ReservedFilename()
                0x00000000c000983f                getFromFileDescriptor(int)
 .text          0x00000000c000993c     0x1166 core/virtmgr.32
                0x00000000c000993c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009971                Virt::getPageState(unsigned long)
                0x00000000c0009995                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009aa6                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009ac4                Virt::swapIDToSector(unsigned long)
                0x00000000c0009ad6                Virt::allocateSwapfilePage()
                0x00000000c0009b54                Virt::virtualMemorySetup()
                0x00000000c0009b9f                Virt::setupPageSwapping(int)
                0x00000000c0009c10                VAS::VAS()
                0x00000000c0009c10                VAS::VAS()
                0x00000000c0009c4c                VAS::VAS(VAS*)
                0x00000000c0009c4c                VAS::VAS(VAS*)
                0x00000000c0009c7a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009ca6                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009cc5                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009dea                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009e0e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009e28                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009e68                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009e9c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009ec6                VAS::~VAS()
                0x00000000c0009ec6                VAS::~VAS()
                0x00000000c000a02a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000a12e                VAS::allocatePages(int, int)
                0x00000000c000a306                VAS::setCPUSpecific(unsigned long)
                0x00000000c000a324                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a3ea                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a4d8                VAS::VAS(bool)
                0x00000000c000a4d8                VAS::VAS(bool)
                0x00000000c000a758                VAS::evict(unsigned long)
                0x00000000c000a81a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a908                VAS::scanForEviction()
                0x00000000c000a9e8                mapVASFirstTime
 .text          0x00000000c000aaa2       0x5f coreobjs/c++.32
                0x00000000c000aaa2                __cxa_atexit
                0x00000000c000aaa5                __cxa_finalize
                0x00000000c000aaa6                __stack_chk_fail
                0x00000000c000aadc                __cxa_pure_virtual
                0x00000000c000aaed                operator new[](unsigned long)
                0x00000000c000aaf2                operator delete(void*, unsigned long)
                0x00000000c000aaf7                operator delete[](void*)
                0x00000000c000aafc                operator delete[](void*, unsigned long)
 .text          0x00000000c000ab01      0x21c dbg/kconsole.32
                0x00000000c000ab01                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ab6c                Dbg::logc(char)
                0x00000000c000ab8c                Dbg::logs(char*)
                0x00000000c000aba9                Dbg::logWriteInt(unsigned int)
                0x00000000c000abc7                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000abe8                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000ad1d        0x1 
 .text          0x00000000c000ad1e      0xc5c fs/vfs.32
                0x00000000c000ad1e                File::read(unsigned long long, void*, int*)
                0x00000000c000ad76                File::write(unsigned long long, void*, int*)
                0x00000000c000adce                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ae26                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ae54                File::isAtty()
                0x00000000c000ae58                Directory::isAtty()
                0x00000000c000ae5c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ae62                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ae68                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ae6e                File::~File()
                0x00000000c000ae6e                File::~File()
                0x00000000c000ae92                File::~File()
                0x00000000c000aebc                Directory::~Directory()
                0x00000000c000aebc                Directory::~Directory()
                0x00000000c000aee0                Directory::~Directory()
                0x00000000c000af0a                Filesystem::Filesystem()
                0x00000000c000af0a                Filesystem::Filesystem()
                0x00000000c000af2e                Filesystem::~Filesystem()
                0x00000000c000af2e                Filesystem::~Filesystem()
                0x00000000c000af3c                Filesystem::~Filesystem()
                0x00000000c000af60                Fs::getcwd(Process*, char*, int)
                0x00000000c000af8a                Fs::initVFS()
                0x00000000c000afb4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b15e                File::File(char const*, Process*)
                0x00000000c000b15e                File::File(char const*, Process*)
                0x00000000c000b21e                File::open(FileOpenMode)
                0x00000000c000b27c                File::close()
                0x00000000c000b2dc                File::seek(unsigned long long)
                0x00000000c000b332                File::tell(unsigned long long*)
                0x00000000c000b382                File::rewind()
                0x00000000c000b396                File::unlink()
                0x00000000c000b3e2                File::rename(char const*)
                0x00000000c000b430                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b48c                File::exists()
                0x00000000c000b4ca                File::stat(unsigned long long*, bool*)
                0x00000000c000b52b                Fs::setcwd(Process*, char*)
                0x00000000c000b688                Directory::Directory(char const*, Process*)
                0x00000000c000b688                Directory::Directory(char const*, Process*)
                0x00000000c000b748                Directory::open()
                0x00000000c000b7a4                Directory::close()
                0x00000000c000b804                Directory::unlink()
                0x00000000c000b850                Directory::rename(char const*)
                0x00000000c000b89e                Directory::exists()
                0x00000000c000b8dc                Directory::read(dirent*)
                0x00000000c000b928                Directory::create()
                0x00000000c000b974                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b97a        0x2 
 .text          0x00000000c000b97c       0x86 hal/bus.32
                0x00000000c000b97c                Bus::Bus(char const*)
                0x00000000c000b97c                Bus::Bus(char const*)
                0x00000000c000b9b4                Bus::~Bus()
                0x00000000c000b9b4                Bus::~Bus()
                0x00000000c000b9d8                Bus::~Bus()
 .text          0x00000000c000ba02       0x96 hal/buzzer.32
                0x00000000c000ba02                beepThread(void*)
                0x00000000c000ba3f                Krnl::beep(int, int, bool)
 .text          0x00000000c000ba98      0x46d hal/clock.32
                0x00000000c000ba98                User::loadClockSettings(int)
                0x00000000c000baea                Clock::Clock(char const*)
                0x00000000c000baea                Clock::Clock(char const*)
                0x00000000c000bb20                Clock::~Clock()
                0x00000000c000bb20                Clock::~Clock()
                0x00000000c000bb44                Clock::~Clock()
                0x00000000c000bb6e                Clock::timeInSecondsLocal()
                0x00000000c000bbb6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000bc0f                datetimeToSeconds(datetime_t)
                0x00000000c000bd3c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bd9c                secondsToDatetime(unsigned long long)
                0x00000000c000bee0                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bf05        0x1 
 .text          0x00000000c000bf06      0x464 hal/device.32
                0x00000000c000bf06                Device::hibernate()
                0x00000000c000bf08                Device::wake()
                0x00000000c000bf0a                Device::detect()
                0x00000000c000bf0c                Device::disableLegacy()
                0x00000000c000bf0e                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bf10                DriverlessDevice::close(int, int, void*)
                0x00000000c000bf14                DriverlessDevice::detect()
                0x00000000c000bf16                DriverlessDevice::open(int, int, void*)
                0x00000000c000bf2a                Device::~Device()
                0x00000000c000bf2a                Device::~Device()
                0x00000000c000bf38                Device::~Device()
                0x00000000c000bf60                Device::findAndLoadDriver()
                0x00000000c000bf6e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bf94                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bfd4                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bffe                Device::getParent()
                0x00000000c000c00a                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c028                Device::addChild(Device*)
                0x00000000c000c06c                Device::removeAllChildren()
                0x00000000c000c0b2                Device::hibernateAll()
                0x00000000c000c0e2                Device::wakeAll()
                0x00000000c000c112                Device::detectAll()
                0x00000000c000c142                Device::disableLegacyAll()
                0x00000000c000c144                Device::loadDriversForAll()
                0x00000000c000c146                Device::closeAll()
                0x00000000c000c17c                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c1b2                Device::setName(char const*)
                0x00000000c000c1c0                Device::Device(char const*)
                0x00000000c000c1c0                Device::Device(char const*)
                0x00000000c000c2bc                Device::getName()
                0x00000000c000c2c6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c2c6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c2fc                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c340                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c36a        0x2 
 .text          0x00000000c000c36c       0x86 hal/diskctrl.32
                0x00000000c000c36c                HardDiskController::HardDiskController(char const*)
                0x00000000c000c36c                HardDiskController::HardDiskController(char const*)
                0x00000000c000c3a4                HardDiskController::~HardDiskController()
                0x00000000c000c3a4                HardDiskController::~HardDiskController()
                0x00000000c000c3c8                HardDiskController::~HardDiskController()
 .text          0x00000000c000c3f2       0xe2 hal/diskphys.32
                0x00000000c000c3f2                PhysicalDisk::eject()
                0x00000000c000c3f6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c3f6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c45e                PhysicalDisk::startCache()
                0x00000000c000c486                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c486                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c4aa                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c4d4        0x0 hal/fpu.32
 .text          0x00000000c000c4d4      0x35d hal/intctrl.32
                0x00000000c000c4d4                int_handler
                0x00000000c000c55c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c5a4                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c6dc                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c710                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c78f                setupINTS()
                0x00000000c000c7ec                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c831        0x1 
 .text          0x00000000c000c832      0x78c hal/keybrd.32
                0x00000000c000c832                startGUI(void*)
                0x00000000c000c89e                startGUIVESA(void*)
                0x00000000c000c90a                sendKeyToTerminal(unsigned char)
                0x00000000c000c9cd                sendKeyboardToken(KeyboardToken)
                0x00000000c000ce0d                clearInternalKeybuffer(VgaText*)
                0x00000000c000ce42                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000cf34                Keyboard::Keyboard(char const*)
                0x00000000c000cf34                Keyboard::Keyboard(char const*)
                0x00000000c000cf70                Keyboard::~Keyboard()
                0x00000000c000cf70                Keyboard::~Keyboard()
                0x00000000c000cf94                Keyboard::~Keyboard()
 .text          0x00000000c000cfbe      0x3ea hal/logidisk.32
                0x00000000c000cfbe                LogicalDisk::close(int, int, void*)
                0x00000000c000cfc2                LogicalDisk::~LogicalDisk()
                0x00000000c000cfc2                LogicalDisk::~LogicalDisk()
                0x00000000c000cfe6                LogicalDisk::~LogicalDisk()
                0x00000000c000d010                LogicalDisk::open(int, int, void*)
                0x00000000c000d024                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d05c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d0a2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d0a2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d158                LogicalDisk::assignDriveLetter()
                0x00000000c000d20e                LogicalDisk::mount()
                0x00000000c000d256                LogicalDisk::unmount()
                0x00000000c000d266                LogicalDisk::eject()
                0x00000000c000d27a                LogicalDisk::unassignDriveLetter()
                0x00000000c000d2d0                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d33c                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000d3a8       0x86 hal/mouse.32
                0x00000000c000d3a8                Mouse::Mouse(char const*)
                0x00000000c000d3a8                Mouse::Mouse(char const*)
                0x00000000c000d3e0                Mouse::~Mouse()
                0x00000000c000d3e0                Mouse::~Mouse()
                0x00000000c000d404                Mouse::~Mouse()
 .text          0x00000000c000d42e      0x339 hal/partition.32
                0x00000000c000d42e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d4d6                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d767        0x1 
 .text          0x00000000c000d768       0x86 hal/serial.32
                0x00000000c000d768                Serial::Serial(char const*)
                0x00000000c000d768                Serial::Serial(char const*)
                0x00000000c000d7a0                Serial::~Serial()
                0x00000000c000d7a0                Serial::~Serial()
                0x00000000c000d7c4                Serial::~Serial()
 *fill*         0x00000000c000d7ee        0x2 
 .text          0x00000000c000d7f0      0x234 hal/timer.32
                0x00000000c000d7f0                Timer::Timer(char const*)
                0x00000000c000d7f0                Timer::Timer(char const*)
                0x00000000c000d828                Timer::~Timer()
                0x00000000c000d828                Timer::~Timer()
                0x00000000c000d84c                Timer::~Timer()
                0x00000000c000d876                Timer::read()
                0x00000000c000d881                setupTimer(int)
                0x00000000c000d8bc                timerHandler(unsigned int)
 .text          0x00000000c000da24      0x480 hal/vcache.32
                0x00000000c000da24                VCache::VCache(PhysicalDisk*)
                0x00000000c000da24                VCache::VCache(PhysicalDisk*)
                0x00000000c000db8c                VCache::invalidateReadBuffer()
                0x00000000c000db9c                VCache::writeWriteBuffer()
                0x00000000c000dbe8                VCache::~VCache()
                0x00000000c000dbe8                VCache::~VCache()
                0x00000000c000dc3c                VCache::~VCache()
                0x00000000c000dc64                VCache::write(unsigned long long, int, void*)
                0x00000000c000dd7a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000dea4      0x4b3 hal/video.32
                0x00000000c000dea4                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000def0                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000df60                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000dfde                Video::clearScreen(unsigned int)
                0x00000000c000e012                Video::putpixel(int, int, unsigned int)
                0x00000000c000e020                Video::Video(char const*)
                0x00000000c000e020                Video::Video(char const*)
                0x00000000c000e056                Video::~Video()
                0x00000000c000e056                Video::~Video()
                0x00000000c000e07a                Video::~Video()
                0x00000000c000e0a4                Video::isMonochrome()
                0x00000000c000e0b0                Video::getWidth()
                0x00000000c000e0bc                Video::getHeight()
                0x00000000c000e0c8                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000e184                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e2ec                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e357        0x1 
 .text          0x00000000c000e358     0x1307 hw/acpi.32
                0x00000000c000e358                ACPI::close(int, int, void*)
                0x00000000c000e410                findRSDP()
                0x00000000c000e4a0                loadACPITables(unsigned char*)
                0x00000000c000e704                findRSDT(unsigned char*)
                0x00000000c000e854                findDataTable(unsigned char*, char*)
                0x00000000c000e8cc                scanMADT()
                0x00000000c000eda0                ACPI::ACPI()
                0x00000000c000eda0                ACPI::ACPI()
                0x00000000c000edf4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000eedc                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000efa4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000efac                ACPI::detectPCI()
                0x00000000c000f1b4                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f208                ACPI::sleep()
                0x00000000c000f224                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f65f        0x1 
 .text          0x00000000c000f660      0xb95 hw/cpu.32
                0x00000000c000f660                CPU::close(int, int, void*)
                0x00000000c000f664                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f680                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f698                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f70c                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f790                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f7be                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f7ec                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f81a                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f848                CPU::CPU()
                0x00000000c000f848                CPU::CPU()
                0x00000000c000f8d6                CPU::displayFeatures()
                0x00000000c000f8d8                CPU::detectFeatures()
                0x00000000c000ff9c                CPU::setupSMEP()
                0x00000000c000ffa8                CPU::setupUMIP()
                0x00000000c000ffb2                CPU::setupTSC()
                0x00000000c000ffbc                CPU::setupLargePages()
                0x00000000c000ffc6                CPU::setupPAT()
                0x00000000c0010002                CPU::setupMTRR()
                0x00000000c0010004                CPU::setupGlobalPages()
                0x00000000c001000e                CPU::allowUsermodeDataAccess()
                0x00000000c0010020                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010032                CPU::setupSMAP()
                0x00000000c0010040                CPU::setupFeatures()
                0x00000000c001010c                CPU::open(int, int, void*)
 *fill*         0x00000000c00101f5        0x1 
 .text          0x00000000c00101f6      0x581 krnl/env.32
                0x00000000c00101f6                EnvVarContainer::getEnv(char const*)
                0x00000000c0010234                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00102f6                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00102f8                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00104de                EnvVarContainer::__loadSystem()
                0x00000000c00104f8                EnvVarContainer::__loadUser()
                0x00000000c00104fa                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104fa                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001051c                EnvVarContainer::~EnvVarContainer()
                0x00000000c001051c                EnvVarContainer::~EnvVarContainer()
                0x00000000c001054c                Krnl::getEnv(Process*, char const*)
                0x00000000c00105b1                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00105cb                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00105ea                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00105fd                Krnl::deleteEnvSystem(char const*)
                0x00000000c00105fe                Krnl::deleteEnvUser(char const*)
                0x00000000c00105ff                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0010600                Krnl::newProcessEnv(Process*)
                0x00000000c0010622                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c001066e                Krnl::loadSystemEnv()
                0x00000000c001069c                Krnl::loadUserEnv()
                0x00000000c00106c2                Krnl::flushEnv()
                0x00000000c00106c3                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00106e3                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0010777      0x108 krnl/panic.32
                0x00000000c0010777                Krnl::panic(char const*)
 .text          0x00000000c001087f      0x142 krnl/powctrl.32
                0x00000000c001087f                Krnl::powerThread(void*)
                0x00000000c00108ad                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c00108c3                Krnl::userIOReceived()
                0x00000000c00108ce                Krnl::handlePowerButton()
                0x00000000c0010903                Krnl::handleSleepButton()
                0x00000000c0010938                Krnl::setupPowerManager()
 .text          0x00000000c00109c1      0x50e reg/registry.32
                0x00000000c00109c1                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0010b19                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0010c6e                Reg::getLine(char*, char*, char*)
                0x00000000c0010ca5                Reg::readInt(char*, char*, int*)
                0x00000000c0010d90                Reg::readString(char*, char*, char*, int)
                0x00000000c0010e11                Reg::readBool(char*, char*, bool*)
                0x00000000c0010e36                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0010e62                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0010e8e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0010ecf       0x36 sys/sc_eject.32
                0x00000000c0010ecf                Sys::eject(regs*)
 .text          0x00000000c0010f05       0x18 sys/sc_exit.32
                0x00000000c0010f05                Sys::exit(regs*)
 .text          0x00000000c0010f1d       0x1f sys/sc_getcwd.32
                0x00000000c0010f1d                Sys::getCwd(regs*)
 .text          0x00000000c0010f3c        0xc sys/sc_getpid.32
                0x00000000c0010f3c                Sys::getPID(regs*)
 .text          0x00000000c0010f48       0x1a sys/sc_getramdata.32
                0x00000000c0010f48                Sys::getRAMData(regs*)
 .text          0x00000000c0010f62       0x82 sys/sc_getvgaptr.32
                0x00000000c0010f62                Sys::getVGAPtr(regs*)
 .text          0x00000000c0010fe4       0xa8 sys/sc_loaddll.32
                0x00000000c0010fe4                Sys::loadDLL(regs*)
 .text          0x00000000c001108c       0x68 sys/sc_read.32
                0x00000000c001108c                Sys::read(regs*)
 .text          0x00000000c00110f4       0x55 sys/sc_sbrk.32
                0x00000000c00110f4                Sys::sbrk(regs*)
 .text          0x00000000c0011149       0x1c sys/sc_setcwd.32
                0x00000000c0011149                Sys::setCwd(regs*)
 .text          0x00000000c0011165       0x95 sys/sc_settime.32
                0x00000000c0011165                Sys::setTime(regs*)
 .text          0x00000000c00111fa       0x4a sys/sc_timezone.32
                0x00000000c00111fa                Sys::timezone(regs*)
 .text          0x00000000c0011244       0x68 sys/sc_write.32
                0x00000000c0011244                Sys::write(regs*)
 .text          0x00000000c00112ac       0x62 sys/sc_wsbe.32
                0x00000000c00112ac                Sys::wsbe(regs*)
 .text          0x00000000c001130e       0x25 sys/sc_yield.32
                0x00000000c001130e                Sys::yield(regs*)
 .text          0x00000000c0011333      0xe2c sys/syscalls.32
                0x00000000c0011333                sysCallSeekDir(regs*)
                0x00000000c0011338                sysCallTellDir(regs*)
                0x00000000c001133d                sysCallVerify(regs*)
                0x00000000c0011347                sysCallGetArgc(regs*)
                0x00000000c0011357                sysCallTTYName(regs*)
                0x00000000c001135f                sysFormatDisk(regs*)
                0x00000000c00113cc                sysSetDiskVolumeLabel(regs*)
                0x00000000c0011416                sysGetDiskVolumeLabel(regs*)
                0x00000000c001146b                sysShutdown(regs*)
                0x00000000c00114c9                sysCallRealpath(regs*)
                0x00000000c001150c                sysCallReadDir(regs*)
                0x00000000c001158c                sysCallIsATTY(regs*)
                0x00000000c00115e8                sysCallSeek(regs*)
                0x00000000c0011641                sysCallTell(regs*)
                0x00000000c00116b0                sysCallSize(regs*)
                0x00000000c0011725                sysCallSizeFromFilename(regs*)
                0x00000000c00117d8                sysCallClose(regs*)
                0x00000000c0011838                sysCallOpenDir(regs*)
                0x00000000c00118af                sysCallCloseDir(regs*)
                0x00000000c0011903                sysCallMakeDir(regs*)
                0x00000000c0011975                sysCallWait(regs*)
                0x00000000c0011992                sysCallNotImpl(regs*)
                0x00000000c00119ad                sysPanic(regs*)
                0x00000000c00119c8                sysCallRmdir(regs*)
                0x00000000c0011a2f                sysCallUnlink(regs*)
                0x00000000c0011a96                sysCallGetArgv(regs*)
                0x00000000c0011ae3                sysCallUSleep(regs*)
                0x00000000c0011b0c                sysCallSpawn(regs*)
                0x00000000c0011b75                sysCallGetEnv(regs*)
                0x00000000c0011c24                sysSetFatAttrib(regs*)
                0x00000000c0011c9b                sysPipe(regs*)
                0x00000000c0011ce0                sysGetUnixTime(regs*)
                0x00000000c0011cf4                string_ends_with(char const*, char const*)
                0x00000000c0011d3e                sysCallOpen(regs*)
                0x00000000c0011f32                Sys::loadSyscalls()
                0x00000000c001211d                Sys::systemCall(regs*, void*)
 .text          0x00000000c001215f     0x11e5 thr/elf.32
                0x00000000c001215f                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00123eb                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0012601                Thr::runtimeReferenceHelper()
                0x00000000c0012614                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0012663                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0012921                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0013057                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0013089                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00130c0                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00130da                Thr::loadDLL(char const*, bool)
                0x00000000c001330b                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0013344     0x12c5 thr/prcssthr.32
                0x00000000c0013344                userModeEntryPoint(void*)
                0x00000000c001336c                changeTSS
                0x00000000c001339c                switchToThread(ThreadControlBlock*)
                0x00000000c0013450                Process::addArgs(char**)
                0x00000000c00134b0                Process::Process(char const*, Process*, char**)
                0x00000000c00134b0                Process::Process(char const*, Process*, char**)
                0x00000000c00136a0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00136a0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001385c                taskStartupFunction
                0x00000000c0013868                Semaphore::Semaphore(int)
                0x00000000c0013868                Semaphore::Semaphore(int)
                0x00000000c0013898                Mutex::Mutex()
                0x00000000c0013898                Mutex::Mutex()
                0x00000000c00138ac                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00139a4                Process::createUserThread()
                0x00000000c00139c4                setupMultitasking(void (*)())
                0x00000000c0013acc                schedule()
                0x00000000c0013b5c                Semaphore::tryAcquire()
                0x00000000c0013c28                Semaphore::assertLocked(char const*)
                0x00000000c0013ca0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013cc8                blockTask(TaskState)
                0x00000000c0013cf8                waitTask(int, int*, int)
                0x00000000c0013d3c                milliTenthSleepUntil(unsigned int)
                0x00000000c0013dcc                milliTenthSleep(unsigned int)
                0x00000000c0013ddc                sleep(unsigned int)
                0x00000000c0013df8                Semaphore::acquire()
                0x00000000c0013eb4                taskReturned
                0x00000000c0013ef0                Thr::processFromPID(int)
                0x00000000c0013f90                unblockTask(ThreadControlBlock*)
                0x00000000c0014034                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0014300                cleanerTaskFunction(void*)
                0x00000000c00143f0                terminateTask(int)
                0x00000000c00144bc                Thr::terminateFromIRQ(int)
                0x00000000c00144cc                Semaphore::release()
 .text          0x00000000c0014609      0xb93 vm86/vm8086.32
                0x00000000c0014609                Vm::inbv(unsigned short)
                0x00000000c001461c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0014652                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0014662                Vm::getSegment(unsigned int)
                0x00000000c001466a                Vm::getOffset(unsigned int)
                0x00000000c001466f                Vm::mainloop2()
                0x00000000c00146a9                Vm::mainVm8086Loop(void*)
                0x00000000c00146b9                Vm::mainloop3(unsigned long)
                0x00000000c00146df                Vm::initialise8086()
                0x00000000c0014722                Vm::finish8086()
                0x00000000c0014783                Vm::getOutput8086(unsigned char*)
                0x00000000c00147a8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014861                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00149c9                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0014a53                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0014a64                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0014a76                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0014a87                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0014a9c                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0014ab2                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0014ac7                Vm::faultHandler(regs*)
 .text          0x00000000c001519c      0x8e9 arch/i386/hal.32
                0x00000000c001519c                noCopro(unsigned long)
                0x00000000c001519d                nmiHandler(regs*, void*)
                0x00000000c00151b6                doubleFault(regs*, void*)
                0x00000000c00151cf                displayDebugInfo(regs*)
                0x00000000c00154f0                displayProgramFault(char const*)
                0x00000000c001553c                gpFault(regs*, void*)
                0x00000000c00155a1                pgFault(regs*, void*)
                0x00000000c0015627                otherISRHandler(regs*, void*)
                0x00000000c001565b                opcodeFault(regs*, void*)
                0x00000000c00156db                i386SaveCoprocessor(void*)
                0x00000000c00156ef                i386LoadCoprocessor(void*)
                0x00000000c0015703                x87EmulHandler(regs*, void*)
                0x00000000c00157a0                HalInitialiseCoprocessor()
                0x00000000c001584e                HalPanic(char const*)
                0x00000000c0015853                HalQueryPerformanceCounter()
                0x00000000c001586e                HalInitialise()
                0x00000000c0015a14                HalMakeBeep(int)
                0x00000000c0015a4e                HalGetRand()
                0x00000000c0015a51                HalEndOfInterrupt(int)
                0x00000000c0015a82                HalRestart()
                0x00000000c0015a83                HalShutdown()
                0x00000000c0015a84                HalSleep()
 *fill*         0x00000000c0015a85        0x3 
 .text          0x00000000c0015a88      0x2f4 arch/i386/pic.32
                0x00000000c0015a88                picIoWait()
                0x00000000c0015a90                picDisable()
                0x00000000c0015ac4                picGetIRQReg(int)
                0x00000000c0015b48                picOpen()
                0x00000000c0015cd8                picEOI(int)
 .text          0x00000000c0015d7c      0x64d arch/i386/rtc.32
                0x00000000c0015d7c                RTC::open(int, int, void*)
                0x00000000c0015d80                RTC::close(int, int, void*)
                0x00000000c0015d84                RTC::timeInSecondsUTC()
                0x00000000c0015d96                RTC::timeInDatetimeUTC()
                0x00000000c0015dbc                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015dfa                RTC::~RTC()
                0x00000000c0015dfa                RTC::~RTC()
                0x00000000c0015e1e                RTC::~RTC()
                0x00000000c0015e48                RTC::get_update_in_progress_flag()
                0x00000000c0015e60                RTC::completeRTCRefresh()
                0x00000000c0016118                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00162cb                rtcIRQHandler(regs*, void*)
                0x00000000c0016310                RTC::RTC()
                0x00000000c0016310                RTC::RTC()
 *fill*         0x00000000c00163c9        0x3 
 .text          0x00000000c00163cc      0x203 arch/i386/vga.32
                0x00000000c00163cc                HalConsoleScroll(int, int)
                0x00000000c00164d4                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016540                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00165cf        0x1 
 .text          0x00000000c00165d0     0x13e7 fs/fat/vfslink.32
                0x00000000c00165d0                FAT::getName()
                0x00000000c00165d8                FAT::tell(void*, unsigned long long*)
                0x00000000c0016614                FAT::stat(void*, unsigned long long*)
                0x00000000c0016650                FAT::~FAT()
                0x00000000c0016650                FAT::~FAT()
                0x00000000c0016674                FAT::~FAT()
                0x00000000c001669c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016740                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0016804                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00169d8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016bf0                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016db0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016f1c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016f7c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016fdc                FAT::close(void*)
                0x00000000c0017030                FAT::closeDir(void*)
                0x00000000c0017084                FAT::seek(void*, unsigned long long)
                0x00000000c00170dc                fatWrapperReadDisk
                0x00000000c0017120                fatWrapperWriteDisk
                0x00000000c0017164                fatWrapperIoctl
                0x00000000c0017280                FAT::FAT()
                0x00000000c0017280                FAT::FAT()
                0x00000000c00172d4                FAT::fixFilepath(char*)
                0x00000000c0017310                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0017448                FAT::openDir(char const*, void**)
                0x00000000c00174f8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00175f0                FAT::unlink(char const*)
                0x00000000c0017670                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00177fc                FAT::rename(char const*, char const*)
                0x00000000c00178c8                FAT::mkdir(char const*)
                0x00000000c0017948                FAT::exists(char const*)
 *fill*         0x00000000c00179b7        0x1 
 .text          0x00000000c00179b8       0x5c fs/iso9660/helper.32
                0x00000000c00179b8                isoReadDiscSectorHelper
 .text          0x00000000c0017a14      0x58c fs/iso9660/vfslink.32
                0x00000000c0017a14                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017a1a                ISO9660::getName()
                0x00000000c0017a20                ISO9660::closeDir(void*)
                0x00000000c0017a2a                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017a30                ISO9660::unlink(char const*)
                0x00000000c0017a36                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017a3c                ISO9660::rename(char const*, char const*)
                0x00000000c0017a42                ISO9660::mkdir(char const*)
                0x00000000c0017a48                ISO9660::~ISO9660()
                0x00000000c0017a48                ISO9660::~ISO9660()
                0x00000000c0017a6c                ISO9660::~ISO9660()
                0x00000000c0017a94                ISO9660::exists(char const*)
                0x00000000c0017aa8                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017b34                ISO9660::openDir(char const*, void**)
                0x00000000c0017bb4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017bf4                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017c2c                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017c62                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017c9c                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017d88                ISO9660::close(void*)
                0x00000000c0017dae                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017e7b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017f06                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017f78                ISO9660::ISO9660()
                0x00000000c0017f78                ISO9660::ISO9660()
 .text          0x00000000c0017fa0      0x26c hal/sound/sndcard.32
                0x00000000c0017fa0                SoundCard::beginPlayback()
                0x00000000c0017fae                SoundCard::stopPlayback()
                0x00000000c0017fbc                SoundCard::SoundCard(char const*)
                0x00000000c0017fbc                SoundCard::SoundCard(char const*)
                0x00000000c001805a                SoundCard::~SoundCard()
                0x00000000c001805a                SoundCard::~SoundCard()
                0x00000000c001807e                SoundCard::~SoundCard()
                0x00000000c00180a8                SoundCard::configureRates(int, int, int)
                0x00000000c00180d8                SoundCard::getSamples16(int, short*)
                0x00000000c0018134                SoundCard::getSamples32(int, int*)
                0x00000000c00181ba                SoundCard::addChannel(SoundPort*)
                0x00000000c00181f8                SoundCard::removeChannel(int)
 .text          0x00000000c001820c      0x377 hal/sound/sndport.32
                0x00000000c001820c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001820c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018298                SoundPort::~SoundPort()
                0x00000000c0018298                SoundPort::~SoundPort()
                0x00000000c00182cc                SoundPort::unpause()
                0x00000000c00182d8                SoundPort::pause()
                0x00000000c00182e4                SoundPort::getBufferUsed()
                0x00000000c00182ec                SoundPort::getBufferSize()
                0x00000000c00182f4                SoundPort::buffer16(short*, int)
                0x00000000c0018380                SoundPort::buffer32(int*, int)
                0x00000000c0018408                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00184cc                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0018583        0x0 hw/bus/isa.32
 *fill*         0x00000000c0018583        0x1 
 .text          0x00000000c0018584      0xb49 hw/bus/pci.32
                0x00000000c0018584                PCI::open(int, int, void*)
                0x00000000c00185a2                PCI::close(int, int, void*)
                0x00000000c00185a6                PCI::PCI()
                0x00000000c00185a6                PCI::PCI()
                0x00000000c0018640                PCI::readBAR8(unsigned int, int)
                0x00000000c001865c                PCI::readBAR16(unsigned int, int)
                0x00000000c001867a                PCI::readBAR32(unsigned int, int)
                0x00000000c0018696                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c00186b6                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c00186d8                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c00186f8                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018766                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001880e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018832                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001885a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c00188a4                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c00188cc                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c00188f0                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018914                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001893c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00189a0                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018a88                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018d02                PCI::checkBus(unsigned char)
                0x00000000c0018d28                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018e9a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001900e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001907a                PCI::detect()
 *fill*         0x00000000c00190cd        0x1 
 .text          0x00000000c00190ce      0xb5a hw/diskctrl/ide.32
                0x00000000c00190ce                IDE::close(int, int, void*)
                0x00000000c00190d2                IDE::IDE()
                0x00000000c00190d2                IDE::IDE()
                0x00000000c0019106                IDE::prepareInterrupt(unsigned char)
                0x00000000c0019118                selectDrive(unsigned char, unsigned char)
                0x00000000c001911a                IDE::getBase(unsigned char)
                0x00000000c001912c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c00191ec                IDE::read(unsigned char, unsigned char)
                0x00000000c001929a                IDE::waitInterrupt(unsigned char)
                0x00000000c0019302                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001931e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001933a                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019380                IDE::open(int, int, void*)
                0x00000000c001978e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001985a                IDE::detect()
                0x00000000c0019b1a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019bca                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019c28      0x32a hw/diskctrl/satabus.32
                0x00000000c0019c28                SATABus::close(int, int, void*)
                0x00000000c0019c2c                SATABus::detect()
                0x00000000c0019c2e                SATABus::SATABus()
                0x00000000c0019c2e                SATABus::SATABus()
                0x00000000c0019cb4                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019ce6                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d2e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d4e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d78                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019e88                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019f32                SATABus::open(int, int, void*)
 .text          0x00000000c0019f52      0x5f4 hw/diskphys/ata.32
                0x00000000c0019f52                ATA::close(int, int, void*)
                0x00000000c0019f76                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019f78                ATA::ATA()
                0x00000000c0019f78                ATA::ATA()
                0x00000000c0019fa6                ATA::flush(bool)
                0x00000000c0019ff0                ATA::readyForCommand()
                0x00000000c001a03c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a3b8                ATA::read(unsigned long long, int, void*)
                0x00000000c001a404                ATA::write(unsigned long long, int, void*)
                0x00000000c001a450                ATA::detectCHS()
                0x00000000c001a47a                ATA::open(int, int, void*)
 .text          0x00000000c001a546      0x60e hw/diskphys/atapi.32
                0x00000000c001a546                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a54c                ATAPI::close(int, int, void*)
                0x00000000c001a570                ATAPI::ATAPI()
                0x00000000c001a570                ATAPI::ATAPI()
                0x00000000c001a59e                ATAPI::readyForCommand()
                0x00000000c001a5f0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a8b0                ATAPI::diskRemoved()
                0x00000000c001a8ea                ATAPI::eject()
                0x00000000c001a932                ATAPI::diskInserted()
                0x00000000c001a93e                ATAPI::detectMedia()
                0x00000000c001a9fa                ATAPI::open(int, int, void*)
                0x00000000c001aada                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ab54      0x402 hw/diskphys/sata.32
                0x00000000c001ab54                SATA::close(int, int, void*)
                0x00000000c001ab78                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ab7a                SATA::open(int, int, void*)
                0x00000000c001ac24                SATA::SATA()
                0x00000000c001ac24                SATA::SATA()
                0x00000000c001ac52                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ae9e                SATA::read(unsigned long long, int, void*)
                0x00000000c001aeea                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001af56      0x5f5 hw/diskphys/satapi.32
                0x00000000c001af56                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001af5c                SATAPI::close(int, int, void*)
                0x00000000c001af80                SATAPI::SATAPI()
                0x00000000c001af80                SATAPI::SATAPI()
                0x00000000c001afae                SATAPI::diskRemoved()
                0x00000000c001afb0                SATAPI::diskInserted()
                0x00000000c001afcc                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b2a8                SATAPI::eject()
                0x00000000c001b2e4                SATAPI::detectMedia()
                0x00000000c001b30a                SATAPI::open(int, int, void*)
                0x00000000c001b40a                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b54b        0x1 
 .text          0x00000000c001b54c      0x455 hw/intctrl/apic.32
                0x00000000c001b54c                IOAPIC::close(int, int, void*)
                0x00000000c001b552                apicGetBase()
                0x00000000c001b594                IOAPIC::IOAPIC()
                0x00000000c001b594                IOAPIC::IOAPIC()
                0x00000000c001b5bc                apicOpen()
                0x00000000c001b722                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b754                IOAPIC::read(int)
                0x00000000c001b77c                IOAPIC::open(int, int, void*)
                0x00000000c001b870                IOAPIC::write(int, int)
                0x00000000c001b89c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b9a1        0x3 
 .text          0x00000000c001b9a4       0xf0 hw/timer/apictimer.32
                0x00000000c001b9a4                APICTimer::close(int, int, void*)
                0x00000000c001b9ac                apicTimerHandler(regs*, void*)
                0x00000000c001b9d4                APICTimer::open(int, int, void*)
                0x00000000c001ba44                APICTimer::write(int)
                0x00000000c001ba6c                APICTimer::APICTimer()
                0x00000000c001ba6c                APICTimer::APICTimer()
 .text          0x00000000c001ba94      0x1aa hw/timer/pit.32
                0x00000000c001ba94                PIT::write(int)
                0x00000000c001bb18                pitHandler(regs*, void*)
                0x00000000c001bb3c                PIT::open(int, int, void*)
                0x00000000c001bb8c                PIT::close(int, int, void*)
                0x00000000c001bbbc                PIT::PIT()
                0x00000000c001bbbc                PIT::PIT()
 *fill*         0x00000000c001bc3e        0x2 
 .text          0x00000000c001bc40       0x83 arch/i386/avx.32
                0x00000000c001bc40                avxDetect
                0x00000000c001bc6a                avxSave
                0x00000000c001bc7b                avxLoad
                0x00000000c001bc8c                avxInit
                0x00000000c001bcae                avxClose
                0x00000000c001bcaf                wouldSheSayYes
 *fill*         0x00000000c001bcc3        0xd 
 .text          0x00000000c001bcd0      0x1d6 arch/i386/interrupt.32
                0x00000000c001bcd0                isr0
                0x00000000c001bce0                isr1
                0x00000000c001bcea                isr2
                0x00000000c001bcf4                isr3
                0x00000000c001bcfe                isr4
                0x00000000c001bd08                isr5
                0x00000000c001bd12                isr6
                0x00000000c001bd1c                isr7
                0x00000000c001bd26                isr8
                0x00000000c001bd2e                isr9
                0x00000000c001bd38                isr10
                0x00000000c001bd40                isr11
                0x00000000c001bd48                isr12
                0x00000000c001bd50                isr13
                0x00000000c001bd58                isr14
                0x00000000c001bd60                isr15
                0x00000000c001bd6a                isr16
                0x00000000c001bd74                isr17
                0x00000000c001bd7e                isr18
                0x00000000c001bd88                irq3
                0x00000000c001bd92                irq4
                0x00000000c001bd9c                irq5
                0x00000000c001bda6                irq6
                0x00000000c001bdb0                irq7
                0x00000000c001bdba                irq8
                0x00000000c001bdc4                irq9
                0x00000000c001bdce                irq10
                0x00000000c001bdd8                irq11
                0x00000000c001bde2                irq12
                0x00000000c001bdec                irq13
                0x00000000c001bdf6                irq14
                0x00000000c001be00                irq15
                0x00000000c001be0a                irq1
                0x00000000c001be11                irq2
                0x00000000c001be18                isr96
                0x00000000c001be1f                irq0
                0x00000000c001be24                int_common_stub
                0x00000000c001be24                syscall_common_stub
                0x00000000c001be56                irq16
                0x00000000c001be60                irq17
                0x00000000c001be6a                irq18
                0x00000000c001be74                irq19
                0x00000000c001be7e                irq20
                0x00000000c001be88                irq21
                0x00000000c001be92                irq22
                0x00000000c001be9c                irq23
 *fill*         0x00000000c001bea6        0xa 
 .text          0x00000000c001beb0       0x10 arch/i386/rdrand.32
                0x00000000c001beb0                i386GetRDRAND
 .text          0x00000000c001bec0       0x39 arch/i386/sse.32
                0x00000000c001bec0                absolutelyNoChanceInHell
                0x00000000c001bec0                sseDetect
                0x00000000c001bed8                sseSave
                0x00000000c001bee0                sseLoad
                0x00000000c001bee8                sseInit
                0x00000000c001bef8                sseClose
 *fill*         0x00000000c001bef9        0x7 
 .text          0x00000000c001bf00       0x49 arch/i386/x87.32
                0x00000000c001bf06                x87Detect
                0x00000000c001bf21                x87Save
                0x00000000c001bf28                x87Load
                0x00000000c001bf2f                x87Init
                0x00000000c001bf48                x87Close
 *fill*         0x00000000c001bf49        0x3 
 .text          0x00000000c001bf4c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bf71        0x0 crtn.32
 *fill*         0x00000000c001bf71        0x3 
 .text          0x00000000c001bf74      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bf74                __divdi3
 *fill*         0x00000000c001c0bf        0x1 
 .text          0x00000000c001c0c0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c0c0                __moddi3
 *fill*         0x00000000c001c23e        0x2 
 .text          0x00000000c001c240       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c240                __udivdi3
 *fill*         0x00000000c001c33f        0x1 
 .text          0x00000000c001c340      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c340                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c460        0x0
 .iplt          0x00000000c001c460        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c45a        0xf
 .init          0x00000000c001c45a        0x3 crti.32
                0x00000000c001c45a                _init
 .init          0x00000000c001c45d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c462        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c467        0x2 crtn.32

.fini           0x00000000c001c469        0xa
 .fini          0x00000000c001c469        0x3 crti.32
                0x00000000c001c469                _fini
 .fini          0x00000000c001c46c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c471        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c474       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c474       0x23 core/computer.32
                0x00000000c001c474                Computer::~Computer()
                0x00000000c001c474                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c498       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c498       0x2a core/computer.32
                0x00000000c001c498                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c4c2       0x21
 .text._Z10idleCommonv
                0x00000000c001c4c2       0x21 core/idle.32
                0x00000000c001c4c2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c4e4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c4e4        0x2 core/unixfile.32
                0x00000000c001c4e4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c4e4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c4e6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c4e6       0x42 core/unixfile.32
                0x00000000c001c4e6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c4e6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c528       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c528       0xd3 core/unixfile.32
                0x00000000c001c528                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c5fc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c5fc        0x7 core/unixfile.32
                0x00000000c001c5fc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c604       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c604       0xa1 core/unixfile.32
                0x00000000c001c604                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c6a6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c6a6        0x8 core/unixfile.32
                0x00000000c001c6a6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c6ae       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c6ae       0x1a hal/device.32
                0x00000000c001c6ae                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c6ae                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c6c8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c6c8       0x2a hal/device.32
                0x00000000c001c6c8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c6f2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c6f2       0xdc hal/device.32
                0x00000000c001c6f2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c7ce       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c7ce       0x42 hal/device.32
                0x00000000c001c7ce                LinkedList<Device>::LinkedList()
                0x00000000c001c7ce                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c810       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c810       0x1c hal/timer.32
                0x00000000c001c810                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c82c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c82c        0x7 hal/timer.32
                0x00000000c001c82c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c834       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c834       0xb8 hal/timer.32
                0x00000000c001c834                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c8ec       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c8ec       0xda hal/timer.32
                0x00000000c001c8ec                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c9c8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c9c8       0x23 hw/acpi.32
                0x00000000c001c9c8                ACPI::~ACPI()
                0x00000000c001c9c8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c9ec       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c9ec       0x2a hw/acpi.32
                0x00000000c001c9ec                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ca18        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ca18        0x2 hw/acpi.32
                0x00000000c001ca18                LinkedList<Device>::~LinkedList()
                0x00000000c001ca18                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ca1c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ca1c       0x1c hw/acpi.32
                0x00000000c001ca1c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ca38        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ca38        0x7 hw/acpi.32
                0x00000000c001ca38                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ca40       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ca40       0xb8 hw/acpi.32
                0x00000000c001ca40                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001caf8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001caf8       0x23 hw/cpu.32
                0x00000000c001caf8                CPU::~CPU()
                0x00000000c001caf8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001cb1c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001cb1c       0x2a hw/cpu.32
                0x00000000c001cb1c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cb48        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cb48        0x2 thr/prcssthr.32
                0x00000000c001cb48                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001cb48                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cb4c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cb4c       0x49 thr/prcssthr.32
                0x00000000c001cb4c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001cb4c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb98       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb98       0x42 thr/prcssthr.32
                0x00000000c001cb98                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001cb98                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cbdc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cbdc        0x8 thr/prcssthr.32
                0x00000000c001cbdc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cbe4       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cbe4       0x23 hw/bus/pci.32
                0x00000000c001cbe4                PCI::~PCI()
                0x00000000c001cbe4                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cc08       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cc08       0x2a hw/bus/pci.32
                0x00000000c001cc08                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cc32       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cc32       0x23 hw/diskctrl/ide.32
                0x00000000c001cc32                IDE::~IDE()
                0x00000000c001cc32                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cc56       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cc56       0x2a hw/diskctrl/ide.32
                0x00000000c001cc56                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cc80       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cc80       0x23 hw/diskctrl/satabus.32
                0x00000000c001cc80                SATABus::~SATABus()
                0x00000000c001cc80                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cca4       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cca4       0x2a hw/diskctrl/satabus.32
                0x00000000c001cca4                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001ccce       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001ccce       0x23 hw/diskphys/ata.32
                0x00000000c001ccce                ATA::~ATA()
                0x00000000c001ccce                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001ccf2       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001ccf2       0x2a hw/diskphys/ata.32
                0x00000000c001ccf2                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cd1c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cd1c       0x23 hw/diskphys/atapi.32
                0x00000000c001cd1c                ATAPI::~ATAPI()
                0x00000000c001cd1c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cd40       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cd40       0x2a hw/diskphys/atapi.32
                0x00000000c001cd40                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cd6a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cd6a       0x23 hw/diskphys/sata.32
                0x00000000c001cd6a                SATA::~SATA()
                0x00000000c001cd6a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cd8e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cd8e       0x2a hw/diskphys/sata.32
                0x00000000c001cd8e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cdb8       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cdb8       0x23 hw/diskphys/satapi.32
                0x00000000c001cdb8                SATAPI::~SATAPI()
                0x00000000c001cdb8                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cddc       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cddc       0x2a hw/diskphys/satapi.32
                0x00000000c001cddc                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001ce06       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001ce06       0x23 hw/intctrl/apic.32
                0x00000000c001ce06                IOAPIC::~IOAPIC()
                0x00000000c001ce06                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001ce2a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001ce2a       0x2a hw/intctrl/apic.32
                0x00000000c001ce2a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ce54       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ce54       0x23 hw/timer/apictimer.32
                0x00000000c001ce54                APICTimer::~APICTimer()
                0x00000000c001ce54                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ce78       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ce78       0x2a hw/timer/apictimer.32
                0x00000000c001ce78                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001cea4       0x23
 .text._ZN3PITD2Ev
                0x00000000c001cea4       0x23 hw/timer/pit.32
                0x00000000c001cea4                PIT::~PIT()
                0x00000000c001cea4                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001cec8       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001cec8       0x2a hw/timer/pit.32
                0x00000000c001cec8                PIT::~PIT()

.rodata         0x00000000c001cef2     0x2866
                0x00000000c001cef2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cef2        0x2 
 .ctors         0x00000000c001cef4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cef8        0x4 core/unixfile.32
 .ctors         0x00000000c001cefc        0x4 thr/prcssthr.32
 .ctors         0x00000000c001cf00        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cf04                end_ctors = .
                0x00000000c001cf04                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001cf04        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001cf08        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cf08                __DTOR_END__
                0x00000000c001cf0c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cf0c       0x14 
 .rodata        0x00000000c001cf20      0x101 acpica/utclib.32
                0x00000000c001cf20                AcpiGbl_Ctypes
 *fill*         0x00000000c001d021        0x3 
 .rodata        0x00000000c001d024       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001d03c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d086       0x1a 
 .rodata        0x00000000c001d0a0       0xed fs/fat/ff.32
 *fill*         0x00000000c001d18d       0x13 
 .rodata        0x00000000c001d1a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d5a0       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d5b1       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001d5fa      0x115 core/computer.32
 *fill*         0x00000000c001d70f        0x1 
 .rodata.str1.4
                0x00000000c001d710       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d778       0x2c core/computer.32
                0x00000000c001d778                vtable for Computer
 .rodata.str1.4
                0x00000000c001d7a4       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d7d4        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d7e0       0x17 core/main.32
 *fill*         0x00000000c001d7f7        0x1 
 .rodata.str1.4
                0x00000000c001d7f8       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d89d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d8f5       0x39 core/pipe.32
 *fill*         0x00000000c001d92e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d930       0x1c core/pipe.32
                0x00000000c001d930                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d94c       0x69 core/terminal.32
 *fill*         0x00000000c001d9b5        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d9b8       0x1c core/terminal.32
                0x00000000c001d9b8                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d9d4       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d9f6       0x15 core/unixfile.32
 *fill*         0x00000000c001da0b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001da0c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001da57        0x8 core/unixfile.32
 *fill*         0x00000000c001da5f        0x1 
 .rodata.str1.4
                0x00000000c001da60       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001da80       0x1c core/unixfile.32
                0x00000000c001da80                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001da9c       0x1c core/unixfile.32
                0x00000000c001da9c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001dab8      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dc1f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dd26       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dd59       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dd59        0x3 
 .rodata        0x00000000c001dd5c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001deac       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001deac       0x68 fs/vfs.32
                0x00000000c001deac                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001df14       0x1c fs/vfs.32
                0x00000000c001df14                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001df30       0x1c fs/vfs.32
                0x00000000c001df30                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001df4c       0x2c hal/bus.32
                0x00000000c001df4c                vtable for Bus
 .rodata.str1.1
                0x00000000c001df78       0x1e hal/clock.32
 *fill*         0x00000000c001df96        0x2 
 .rodata._ZTV5Clock
                0x00000000c001df98       0x3c hal/clock.32
                0x00000000c001df98                vtable for Clock
 *fill*         0x00000000c001dfd4        0xc 
 .rodata        0x00000000c001dfe0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001e010       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001e068       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001e068       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001e068       0x2c hal/device.32
                0x00000000c001e068                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001e094       0x2c hal/device.32
                0x00000000c001e094                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e0c0       0x2c hal/diskctrl.32
                0x00000000c001e0c0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e0ec       0x38 hal/diskphys.32
                0x00000000c001e0ec                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e124       0x3e hal/intctrl.32
 *fill*         0x00000000c001e162        0x2 
 .rodata.str1.4
                0x00000000c001e164       0x5d hal/intctrl.32
 .rodata        0x00000000c001e1c1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e214       0x34 hal/keybrd.32
                0x00000000c001e214                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e248       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e28c       0x2c hal/logidisk.32
                0x00000000c001e28c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e2b8       0x2c hal/mouse.32
                0x00000000c001e2b8                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e2e4        0xb hal/partition.32
 *fill*         0x00000000c001e2ef        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e2f0       0x44 hal/serial.32
                0x00000000c001e2f0                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e334       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e334        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e334       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e334       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e334       0x30 hal/timer.32
                0x00000000c001e334                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e364       0x10 hal/vcache.32
                0x00000000c001e364                vtable for VCache
 .rodata.str1.1
                0x00000000c001e374       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e3dc       0x48 hal/video.32
                0x00000000c001e3dc                vtable for Video
 .rodata.str1.4
                0x00000000c001e424       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e4bf      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e5fb       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e5fb        0x8 hw/acpi.32
 *fill*         0x00000000c001e5fb        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e5fc       0x2c hw/acpi.32
                0x00000000c001e5fc                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e628      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e795        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e798       0x2c hw/cpu.32
                0x00000000c001e798                vtable for CPU
 .rodata.str1.1
                0x00000000c001e7c4       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e800       0x3d krnl/panic.32
                                         0x3e (size before relaxing)
 *fill*         0x00000000c001e83d        0x3 
 .rodata.str1.4
                0x00000000c001e840       0x3a krnl/panic.32
 .rodata.str1.1
                0x00000000c001e87a       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e8bf        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001e8c9       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001e91d       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001e949       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e991      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001eb5d       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001ebb4      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ecc0       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ecc0       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ecc0       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ecc0        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001ecc0       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001ed60       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ed90      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001ee9e        0x2 
 .rodata.str1.4
                0x00000000c001eea0       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001ef13       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001ef28       0x3c arch/i386/rtc.32
                0x00000000c001ef28                vtable for RTC
 .rodata.str1.1
                0x00000000c001ef64       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001efa5        0x3 
 .rodata._ZTV3FAT
                0x00000000c001efa8       0x68 fs/fat/vfslink.32
                0x00000000c001efa8                vtable for FAT
 .rodata.str1.1
                0x00000000c001f010       0x76 fs/iso9660/vfslink.32
 *fill*         0x00000000c001f086        0x2 
 .rodata._ZTV7ISO9660
                0x00000000c001f088       0x68 fs/iso9660/vfslink.32
                0x00000000c001f088                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f0f0       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f134       0x34 hal/sound/sndcard.32
                0x00000000c001f134                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f168       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f1a7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f1df       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f280       0x2c hw/bus/pci.32
                0x00000000c001f280                vtable for PCI
 .rodata.str1.1
                0x00000000c001f2ac       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f333        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f334       0x2c hw/diskctrl/ide.32
                0x00000000c001f334                vtable for IDE
 .rodata.str1.4
                0x00000000c001f360       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f384       0x2c hw/diskctrl/satabus.32
                0x00000000c001f384                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f3b0       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f3c2        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f3c4       0x38 hw/diskphys/ata.32
                0x00000000c001f3c4                vtable for ATA
 .rodata.str1.1
                0x00000000c001f3fc        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f409        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f40c       0x38 hw/diskphys/atapi.32
                0x00000000c001f40c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f444       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f4c0       0x38 hw/diskphys/sata.32
                0x00000000c001f4c0                vtable for SATA
 .rodata.str1.1
                0x00000000c001f4f8      0x158 hw/diskphys/satapi.32
                                        0x165 (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f650       0x38 hw/diskphys/satapi.32
                0x00000000c001f650                vtable for SATAPI
 .rodata        0x00000000c001f688        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f690       0x2c hw/intctrl/apic.32
                0x00000000c001f690                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f6bc       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f6d7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f6d8       0x30 hw/timer/apictimer.32
                0x00000000c001f6d8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f708       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f725        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f728       0x30 hw/timer/pit.32
                0x00000000c001f728                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f758      0x25d
 *(.data)
 .data          0x00000000c001f758        0x0 crti.32
 .data          0x00000000c001f758        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f758                __dso_handle
 .data          0x00000000c001f75c        0x0 acpica/utclib.32
 .data          0x00000000c001f75c        0x0 core/malloc.32
 .data          0x00000000c001f75c        0x0 libk/ctype.32
 .data          0x00000000c001f75c        0x0 libk/string.32
 .data          0x00000000c001f75c        0x0 fs/fat/diskio.32
 .data          0x00000000c001f75c        0x0 fs/fat/ff.32
 .data          0x00000000c001f75c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f75c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f75c        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f75c        0x0 compat/inlines.32
 .data          0x00000000c001f75c        0x0 compat/resolve.32
 .data          0x00000000c001f75c        0x0 core/computer.32
 .data          0x00000000c001f75c        0x0 core/gdt.32
 .data          0x00000000c001f75c        0x0 core/idle.32
 .data          0x00000000c001f75c        0x0 core/idt.32
 .data          0x00000000c001f75c        0x4 core/kheap.32
 .data          0x00000000c001f760      0x142 core/main.32
                0x00000000c001f760                titleScreen
 *fill*         0x00000000c001f8a2        0x2 
 .data          0x00000000c001f8a4        0x4 core/physmgr.32
                0x00000000c001f8a4                Phys::bitmap
 .data          0x00000000c001f8a8        0x0 core/pipe.32
 *fill*         0x00000000c001f8a8       0x18 
 .data          0x00000000c001f8c0       0x60 core/terminal.32
                0x00000000c001f8c0                VgaText::hiddenOut
                0x00000000c001f8e0                ansiToVGAMappings
 .data          0x00000000c001f920        0x0 core/tss.32
 .data          0x00000000c001f920        0x4 core/unixfile.32
                0x00000000c001f920                UnixFile::nextFd
 .data          0x00000000c001f924       0x15 core/virtmgr.32
                0x00000000c001f924                Virt::pageAllocPtr
                0x00000000c001f928                Virt::bitmap
                0x00000000c001f92c                Virt::swapfileSectorsPerPage
                0x00000000c001f930                Virt::swapfileLength
                0x00000000c001f934                Virt::swapfileSector
                0x00000000c001f938                Virt::swapfileDrive
 *fill*         0x00000000c001f939        0x3 
 .data          0x00000000c001f93c        0x4 coreobjs/c++.32
                0x00000000c001f93c                __stack_chk_guard
 .data          0x00000000c001f940        0x0 dbg/kconsole.32
 .data          0x00000000c001f940        0x0 fs/vfs.32
 .data          0x00000000c001f940        0x0 hal/bus.32
 .data          0x00000000c001f940        0x0 hal/buzzer.32
 .data          0x00000000c001f940        0x0 hal/clock.32
 .data          0x00000000c001f940        0x0 hal/device.32
 .data          0x00000000c001f940        0x0 hal/diskctrl.32
 .data          0x00000000c001f940        0x0 hal/diskphys.32
 .data          0x00000000c001f940        0x0 hal/fpu.32
 .data          0x00000000c001f940        0x0 hal/intctrl.32
 .data          0x00000000c001f940        0x0 hal/keybrd.32
 .data          0x00000000c001f940        0x0 hal/logidisk.32
 .data          0x00000000c001f940        0x0 hal/mouse.32
 .data          0x00000000c001f940        0x0 hal/partition.32
 .data          0x00000000c001f940        0x0 hal/serial.32
 .data          0x00000000c001f940        0x0 hal/timer.32
 .data          0x00000000c001f940        0x0 hal/vcache.32
 .data          0x00000000c001f940        0x0 hal/video.32
 .data          0x00000000c001f940       0x10 hw/acpi.32
                0x00000000c001f940                legacyIRQRemaps
 .data          0x00000000c001f950        0x4 hw/cpu.32
                0x00000000c001f950                lastCode
 *fill*         0x00000000c001f954        0xc 
 .data          0x00000000c001f960       0x4d krnl/env.32
                0x00000000c001f960                defaultSysEnv
 .data          0x00000000c001f9ad        0x0 krnl/panic.32
 .data          0x00000000c001f9ad        0x0 krnl/powctrl.32
 .data          0x00000000c001f9ad        0x0 reg/registry.32
 .data          0x00000000c001f9ad        0x0 sys/sc_eject.32
 .data          0x00000000c001f9ad        0x0 sys/sc_exit.32
 .data          0x00000000c001f9ad        0x0 sys/sc_getcwd.32
 .data          0x00000000c001f9ad        0x0 sys/sc_getpid.32
 .data          0x00000000c001f9ad        0x0 sys/sc_getramdata.32
 .data          0x00000000c001f9ad        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001f9ad        0x0 sys/sc_loaddll.32
 .data          0x00000000c001f9ad        0x0 sys/sc_read.32
 .data          0x00000000c001f9ad        0x0 sys/sc_sbrk.32
 .data          0x00000000c001f9ad        0x0 sys/sc_setcwd.32
 .data          0x00000000c001f9ad        0x0 sys/sc_settime.32
 .data          0x00000000c001f9ad        0x0 sys/sc_timezone.32
 .data          0x00000000c001f9ad        0x0 sys/sc_write.32
 .data          0x00000000c001f9ad        0x0 sys/sc_wsbe.32
 .data          0x00000000c001f9ad        0x0 sys/sc_yield.32
 .data          0x00000000c001f9ad        0x0 sys/syscalls.32
 .data          0x00000000c001f9ad        0x0 thr/elf.32
 *fill*         0x00000000c001f9ad        0x3 
 .data          0x00000000c001f9b0        0x4 thr/prcssthr.32
                0x00000000c001f9b0                Thr::nextPID
 .data          0x00000000c001f9b4        0x0 vm86/vm8086.32
 .data          0x00000000c001f9b4        0x0 arch/i386/hal.32
 .data          0x00000000c001f9b4        0x0 arch/i386/pic.32
 .data          0x00000000c001f9b4        0x0 arch/i386/rtc.32
 .data          0x00000000c001f9b4        0x0 arch/i386/vga.32
 .data          0x00000000c001f9b4        0x0 fs/fat/vfslink.32
 .data          0x00000000c001f9b4        0x0 fs/iso9660/helper.32
 .data          0x00000000c001f9b4        0x1 fs/iso9660/vfslink.32
                0x00000000c001f9b4                recentDriveletter
 .data          0x00000000c001f9b5        0x0 hal/sound/sndcard.32
 .data          0x00000000c001f9b5        0x0 hal/sound/sndport.32
 .data          0x00000000c001f9b5        0x0 hw/bus/isa.32
 .data          0x00000000c001f9b5        0x0 hw/bus/pci.32
 .data          0x00000000c001f9b5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001f9b5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001f9b5        0x0 hw/diskphys/ata.32
 .data          0x00000000c001f9b5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001f9b5        0x0 hw/diskphys/sata.32
 .data          0x00000000c001f9b5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001f9b5        0x0 hw/intctrl/apic.32
 .data          0x00000000c001f9b5        0x0 hw/timer/apictimer.32
 .data          0x00000000c001f9b5        0x0 hw/timer/pit.32
 .data          0x00000000c001f9b5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001f9b5        0x0 crtn.32
 .data          0x00000000c001f9b5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001f9b5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001f9b5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001f9b5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001f9b8        0x0
 .got           0x00000000c001f9b8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001f9b8        0x0
 .got.plt       0x00000000c001f9b8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001f9b8        0x0
 .igot.plt      0x00000000c001f9b8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001f9b8        0x0
 .tm_clone_table
                0x00000000c001f9b8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001f9b8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001f9b5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001f9b5        0x3 
 .eh_frame      0x00000000c001f9b8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001f9b8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001f9b8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fa10       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fa50       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fabc       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001fb40        0x0
 .rel.got       0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001fb40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001fb40     0x4da8
                0x00000000c001fb40                sbss = .
 *(COMMON)
 *fill*         0x00000000c001fb40        0x0 
 COMMON         0x00000000c001fb40       0xa0 fs/iso9660/iso9660.32
                0x00000000c001fb40                dcache
                0x00000000c001fb80                cdDriveLetter
                0x00000000c001fba0                icache
 *(.bss)
 .bss           0x00000000c001fbe0        0x0 crti.32
 .bss           0x00000000c001fbe0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001fc00        0x4 acpica/utclib.32
 *fill*         0x00000000c001fc04       0x1c 
 .bss           0x00000000c001fc20      0x378 core/malloc.32
 .bss           0x00000000c001ff98        0x0 libk/ctype.32
 .bss           0x00000000c001ff98        0x0 libk/string.32
 .bss           0x00000000c001ff98        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001ff98        0x8 
 .bss           0x00000000c001ffa0       0x88 fs/fat/ff.32
 .bss           0x00000000c0020028        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0020028        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0020028       0x18 
 .bss           0x00000000c0020040      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c00209d8        0x0 compat/inlines.32
 .bss           0x00000000c00209d8        0x0 compat/resolve.32
 .bss           0x00000000c00209d8        0x6 core/computer.32
                0x00000000c00209d8                Krnl::computer
                0x00000000c00209dc                Krnl::preemptionOn
                0x00000000c00209dd                Krnl::schedulingOn
 *fill*         0x00000000c00209de        0x2 
 .bss           0x00000000c00209e0        0x6 core/gdt.32
                0x00000000c00209e0                gdtDescr
 .bss           0x00000000c00209e6        0x0 core/idle.32
 *fill*         0x00000000c00209e6        0x2 
 .bss           0x00000000c00209e8        0x6 core/idt.32
                0x00000000c00209e8                idtDescr
 .bss           0x00000000c00209ee        0x0 core/kheap.32
 *fill*         0x00000000c00209ee        0x2 
 .bss           0x00000000c00209f0        0x4 core/main.32
                0x00000000c00209f0                sysBootSettings
 .bss           0x00000000c00209f4       0x29 core/physmgr.32
                0x00000000c00209f4                Phys::forbidEvictions
                0x00000000c00209f8                Phys::currentPagePointer
                0x00000000c00209fc                Phys::highestMem
                0x00000000c0020a00                Phys::oldPercent
                0x00000000c0020a04                Phys::usedPages
                0x00000000c0020a08                Phys::usablePages
                0x00000000c0020a0c                Phys::dmaUsage
 .bss           0x00000000c0020a1d        0x0 core/pipe.32
 *fill*         0x00000000c0020a1d        0x3 
 .bss           0x00000000c0020a20        0x9 core/terminal.32
                0x00000000c0020a20                terminalCycle
                0x00000000c0020a24                activeTerminal
                0x00000000c0020a28                VgaText::graphicMode
 *fill*         0x00000000c0020a29        0x1 
 .bss           0x00000000c0020a2a        0x2 core/tss.32
                0x00000000c0020a2a                doubleFaultSelector
 *fill*         0x00000000c0020a2c       0x14 
 .bss           0x00000000c0020a40       0x84 core/unixfile.32
                0x00000000c0020a40                sfileLpt
                0x00000000c0020a80                sfileCom
                0x00000000c0020aa4                sfileNul
                0x00000000c0020aa8                sfilePnt
                0x00000000c0020aac                sfileAux
                0x00000000c0020ab0                sfileCon
                0x00000000c0020ab4                initialFilesAdded
                0x00000000c0020ab8                unixFileLinkedList
 .bss           0x00000000c0020ac4       0x10 core/virtmgr.32
                0x00000000c0020ac4                twswaps
                0x00000000c0020ac8                swapBalance
                0x00000000c0020acc                Virt::swapfileBitmap
                0x00000000c0020ad0                firstVAS
 .bss           0x00000000c0020ad4        0x0 coreobjs/c++.32
 .bss           0x00000000c0020ad4        0x0 dbg/kconsole.32
 .bss           0x00000000c0020ad4        0x4 fs/vfs.32
                0x00000000c0020ad4                installedFilesystems
 .bss           0x00000000c0020ad8        0x0 hal/bus.32
 .bss           0x00000000c0020ad8        0x0 hal/buzzer.32
 .bss           0x00000000c0020ad8        0x8 hal/clock.32
                0x00000000c0020ad8                User::dstOn
                0x00000000c0020ad9                User::timezoneHalfHourOffset
                0x00000000c0020adc                User::timezoneHourOffset
 .bss           0x00000000c0020ae0        0x0 hal/device.32
 .bss           0x00000000c0020ae0        0x0 hal/diskctrl.32
 .bss           0x00000000c0020ae0        0x0 hal/diskphys.32
 .bss           0x00000000c0020ae0        0x0 hal/fpu.32
 .bss           0x00000000c0020ae0     0x2000 hal/intctrl.32
                0x00000000c0020ae0                INT_contexts
                0x00000000c0021ae0                INT_handlers
 .bss           0x00000000c0022ae0      0x429 hal/keybrd.32
                0x00000000c0022ae0                keyboardWaitingTaskList
                0x00000000c0022ae4                keyboardSetupYet
                0x00000000c0022ae8                guiKeyboardHandler
                0x00000000c0022b00                keystates
 *fill*         0x00000000c0022f09       0x17 
 .bss           0x00000000c0022f20       0x88 hal/logidisk.32
                0x00000000c0022f20                diskAssignments
                0x00000000c0022f40                disks
 .bss           0x00000000c0022fa8        0x4 hal/mouse.32
                0x00000000c0022fa8                guiMouseHandler
 .bss           0x00000000c0022fac        0x0 hal/partition.32
 .bss           0x00000000c0022fac        0x0 hal/serial.32
 .bss           0x00000000c0022fac        0x4 hal/timer.32
                0x00000000c0022fac                milliTenthsSinceBoot
 .bss           0x00000000c0022fb0        0x0 hal/vcache.32
 .bss           0x00000000c0022fb0        0x4 hal/video.32
                0x00000000c0022fb0                screen
 *fill*         0x00000000c0022fb4        0xc 
 .bss           0x00000000c0022fc0      0x480 hw/acpi.32
                0x00000000c0022fc0                systemSleepFunction
                0x00000000c0022fc4                systemResetFunction
                0x00000000c0022fc8                systemShutdownFunction
                0x00000000c0022fcc                nextACPITable
                0x00000000c0022fe0                acpiTables
                0x00000000c00231e0                usingXSDT
                0x00000000c00231e4                MADTpointer
                0x00000000c00231e8                RSDTpointer
                0x00000000c00231ec                RSDPpointer
                0x00000000c00231f0                nextAPICNMI
                0x00000000c0023200                apicNMIInfo
                0x00000000c0023280                legacyIRQFlags
                0x00000000c00232a0                ioapicDiscoveryNumber
                0x00000000c00232c0                ioapicFoundInMADT
                0x00000000c00232e0                ioapicAddresses
                0x00000000c0023360                ioapicGSIBase
                0x00000000c00233e0                processorDiscoveryNumber
                0x00000000c0023400                matchingAPICID
                0x00000000c0023420                processorID
 .bss           0x00000000c0023440       0x10 hw/cpu.32
                0x00000000c0023440                lastD
                0x00000000c0023444                lastC
                0x00000000c0023448                lastB
                0x00000000c002344c                lastA
 .bss           0x00000000c0023450        0x8 krnl/env.32
                0x00000000c0023450                Krnl::userEnv
                0x00000000c0023454                Krnl::systemEnv
 .bss           0x00000000c0023458        0x9 krnl/panic.32
                0x00000000c0023458                Krnl::guiProgramFaultHandler
                0x00000000c002345c                Krnl::guiPanicHandler
                0x00000000c0023460                Krnl::kernelInPanic
 *fill*         0x00000000c0023461       0x1f 
 .bss           0x00000000c0023480       0x48 krnl/powctrl.32
                0x00000000c0023480                Krnl::powCtrlOnBattery
                0x00000000c00234a0                Krnl::currentPowerSettings
                0x00000000c00234c4                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c00234c8        0x0 reg/registry.32
 .bss           0x00000000c00234c8        0x0 sys/sc_eject.32
 .bss           0x00000000c00234c8        0x0 sys/sc_exit.32
 .bss           0x00000000c00234c8        0x0 sys/sc_getcwd.32
 .bss           0x00000000c00234c8        0x0 sys/sc_getpid.32
 .bss           0x00000000c00234c8        0x0 sys/sc_getramdata.32
 .bss           0x00000000c00234c8        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c00234c8        0x0 sys/sc_loaddll.32
 .bss           0x00000000c00234c8        0x0 sys/sc_read.32
 .bss           0x00000000c00234c8        0x0 sys/sc_sbrk.32
 .bss           0x00000000c00234c8        0x0 sys/sc_setcwd.32
 .bss           0x00000000c00234c8        0x0 sys/sc_settime.32
 .bss           0x00000000c00234c8        0x0 sys/sc_timezone.32
 .bss           0x00000000c00234c8        0x0 sys/sc_write.32
 .bss           0x00000000c00234c8        0x0 sys/sc_wsbe.32
 .bss           0x00000000c00234c8        0x0 sys/sc_yield.32
 *fill*         0x00000000c00234c8       0x18 
 .bss           0x00000000c00234e0      0x200 sys/syscalls.32
                0x00000000c00234e0                systemCallHandlers
 .bss           0x00000000c00236e0      0x7a4 thr/elf.32
                0x00000000c00236e0                Thr::driverLookupNext
                0x00000000c0023700                Thr::driverLookupLen
                0x00000000c0023900                Thr::driverLookupAddr
                0x00000000c0023b00                Thr::driverNameLookup
                0x00000000c0023d00                Thr::kernelSymbols
                0x00000000c0023d80                Thr::kernelStringTable
                0x00000000c0023e00                Thr::kernelSymbolTable
                0x00000000c0023e80                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023e84        0x4 
 .bss           0x00000000c0023e88       0x68 thr/prcssthr.32
                0x00000000c0023e88                cleanerThread
                0x00000000c0023e8c                weNeedTheCleanerToNotBlock
                0x00000000c0023e90                retValLockStuff
                0x00000000c0023e94                retValSchedLock
                0x00000000c0023e98                lockStuffLock
                0x00000000c0023e9c                schedulerLock
                0x00000000c0023ea0                taskSwitchesPostponedFlag
                0x00000000c0023ea4                postponeTaskSwitchesCounter
                0x00000000c0023ea8                irqDisableCounter
                0x00000000c0023eac                terminatedTaskList
                0x00000000c0023eb8                sleepingTaskList
                0x00000000c0023ec4                taskList
                0x00000000c0023ed0                kernelProcess
 *fill*         0x00000000c0023ef0       0x10 
 .bss           0x00000000c0023f00       0x40 vm86/vm8086.32
                0x00000000c0023f00                Vm::vmRetV
                0x00000000c0023f04                Vm::vmDone
                0x00000000c0023f05                Vm::vmReady
                0x00000000c0023f08                Vm::vm86Thread
                0x00000000c0023f0c                Vm::vmToHostCommsPtr
                0x00000000c0023f20                Vm::vmToHostComms
 .bss           0x00000000c0023f40       0x14 arch/i386/hal.32
                0x00000000c0023f40                apic
                0x00000000c0023f44                fpuOwner
                0x00000000c0023f48                coproLoadFunc
                0x00000000c0023f4c                coproSaveFunc
                0x00000000c0023f50                gpFaultIntercept
 .bss           0x00000000c0023f54        0x0 arch/i386/pic.32
 .bss           0x00000000c0023f54        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023f56        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023f56        0xa 
 .bss           0x00000000c0023f60       0xf0 fs/fat/vfslink.32
                0x00000000c0023f60                FAT::fats
                0x00000000c0023f80                FAT::vfsToFatRemaps
                0x00000000c0024000                fatToVFSRemaps
 .bss           0x00000000c0024050        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0024050       0x10 
 .bss           0x00000000c0024060      0x820 fs/iso9660/vfslink.32
                0x00000000c0024060                iso9660Owner
                0x00000000c0024064                recentSector
                0x00000000c0024080                recentBuffer
 .bss           0x00000000c0024880        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0024880        0x0 hal/sound/sndport.32
 .bss           0x00000000c0024880        0x0 hw/bus/isa.32
 .bss           0x00000000c0024880        0xd hw/bus/pci.32
                0x00000000c0024880                thePCI
 .bss           0x00000000c002488d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002488d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002488d        0x3 
 .bss           0x00000000c0024890        0x8 hw/diskphys/ata.32
                0x00000000c0024890                ataSectorsWritten
                0x00000000c0024894                ataSectorsRead
 .bss           0x00000000c0024898        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024898        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0024898        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0024898        0x8 
 .bss           0x00000000c00248a0       0x41 hw/intctrl/apic.32
                0x00000000c00248a0                noOfIOAPICs
                0x00000000c00248c0                ioapics
                0x00000000c00248e0                IOAPICsSetupYet
 .bss           0x00000000c00248e1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00248e1        0x3 
 .bss           0x00000000c00248e4        0x4 hw/timer/pit.32
                0x00000000c00248e4                pitFreq
 .bss           0x00000000c00248e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00248e8        0x0 crtn.32
 .bss           0x00000000c00248e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00248e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00248e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00248e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00248e8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0029690                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
