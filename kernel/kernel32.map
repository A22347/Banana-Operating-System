Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/rand.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/rand.32
LOAD net/ethernet.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2329a
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x440 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                getRDRAND
                0x00000000c0000229                detectCPUID
                0x00000000c000023f                goToVM86
                0x00000000c000026f                goToUsermode
                0x00000000c0000299                switchToThreadASMFirstTime
                0x00000000c00002a7                switchToThreadASM
                0x00000000c0000337                asmQuickAcquireLock
                0x00000000c0000355                asmQuickReleaseLock
                0x00000000c0000361                asmAcquireLock
                0x00000000c0000382                asmReleaseLock
                0x00000000c0000395                loadGDT
                0x00000000c00003b5                isr0
                0x00000000c00003c5                isr1
                0x00000000c00003cf                isr2
                0x00000000c00003d9                isr3
                0x00000000c00003e3                isr4
                0x00000000c00003ed                isr5
                0x00000000c00003f7                isr6
                0x00000000c0000401                isr7
                0x00000000c000040b                isr8
                0x00000000c0000413                isr9
                0x00000000c000041d                isr10
                0x00000000c0000425                isr11
                0x00000000c000042d                isr12
                0x00000000c0000435                isr13
                0x00000000c000043d                isr14
                0x00000000c0000445                isr15
                0x00000000c000044f                isr16
                0x00000000c0000459                isr17
                0x00000000c0000463                isr18
                0x00000000c000046d                irq3
                0x00000000c0000477                irq4
                0x00000000c0000481                irq5
                0x00000000c000048b                irq6
                0x00000000c0000495                irq7
                0x00000000c000049f                irq8
                0x00000000c00004a9                irq9
                0x00000000c00004b3                irq10
                0x00000000c00004bd                irq11
                0x00000000c00004c7                irq12
                0x00000000c00004d1                irq13
                0x00000000c00004db                irq14
                0x00000000c00004e5                irq15
                0x00000000c00004ef                irq1
                0x00000000c00004f6                irq2
                0x00000000c00004fd                isr96
                0x00000000c0000504                irq0
                0x00000000c0000509                int_common_stub
                0x00000000c0000509                syscall_common_stub
                0x00000000c000053b                irq16
                0x00000000c0000545                irq17
                0x00000000c000054f                irq18
                0x00000000c0000559                irq19
                0x00000000c0000563                irq20
                0x00000000c000056d                irq21
                0x00000000c0000577                irq22
                0x00000000c0000581                irq23
                0x00000000c000058b                memcpy
 .text          0x00000000c0000590      0x5dd acpica/utclib.32
                0x00000000c0000590                memcmp
                0x00000000c00005cc                memmove
                0x00000000c0000694                memset
                0x00000000c00006b0                strlen
                0x00000000c00006c8                strpbrk
                0x00000000c0000704                strtok
                0x00000000c0000750                strcpy
                0x00000000c0000774                strncpy
                0x00000000c00007dc                strcmp
                0x00000000c000081c                strchr
                0x00000000c0000840                strncmp
                0x00000000c0000890                strcat
                0x00000000c00008c0                strncat
                0x00000000c00008fc                strstr
                0x00000000c0000944                toupper
                0x00000000c0000958                tolower
                0x00000000c000096c                simple_strtoul
 .text          0x00000000c0000b6d      0xfad core/malloc.32
                0x00000000c0000cd8                dlfree
                0x00000000c0001033                dlmalloc
                0x00000000c0001570                dlrealloc
                0x00000000c0001713                dlmemalign
                0x00000000c0001836                dlcalloc
                0x00000000c00018d0                dlcfree
                0x00000000c00018d5                dlindependent_calloc
                0x00000000c00018fa                dlindependent_comalloc
                0x00000000c0001911                dlvalloc
                0x00000000c000193c                dlpvalloc
                0x00000000c0001972                dlmalloc_trim
                0x00000000c000197f                dlmalloc_usable_size
                0x00000000c00019b0                dlmallinfo
                0x00000000c0001a7f                dlmalloc_stats
                0x00000000c0001a90                dlmallopt
 .text          0x00000000c0001b1a        0x0 libk/string.32
 .text          0x00000000c0001b1a       0x51 fs/fat/diskio.32
                0x00000000c0001b1a                disk_status
                0x00000000c0001b1d                disk_initialize
                0x00000000c0001b20                disk_read
                0x00000000c0001b36                disk_write
                0x00000000c0001b4c                disk_ioctl
 .text          0x00000000c0001b6b     0x6a69 fs/fat/ff.32
                0x00000000c0004e39                f_mount
                0x00000000c0004e9b                f_open
                0x00000000c00052d7                f_read
                0x00000000c0005557                f_write
                0x00000000c0005811                f_sync
                0x00000000c00059ed                f_close
                0x00000000c0005a1c                f_lseek
                0x00000000c0005ed3                f_opendir
                0x00000000c0005fd5                f_closedir
                0x00000000c0005ff7                f_readdir
                0x00000000c0006092                f_stat
                0x00000000c0006121                f_getfree
                0x00000000c00062ec                f_truncate
                0x00000000c00063e4                f_unlink
                0x00000000c0006567                f_mkdir
                0x00000000c0006793                f_rename
                0x00000000c0006a86                f_chmod
                0x00000000c0006b64                f_utime
                0x00000000c0006c42                f_getlabel
                0x00000000c0006e30                f_setlabel
                0x00000000c000709d                f_expand
                0x00000000c00072d3                f_forward
                0x00000000c00074b1                f_mkfs
 .text          0x00000000c00085d4       0x2f fs/fat/ffsystem.32
                0x00000000c00085d4                ff_memalloc
                0x00000000c00085ec                ff_memfree
 *fill*         0x00000000c0008603        0x1 
 .text          0x00000000c0008604      0x274 fs/fat/ffunicode.32
                0x00000000c0008604                ff_uni2oem
                0x00000000c000869c                ff_oem2uni
                0x00000000c0008710                ff_wtoupper
 .text          0x00000000c0008878       0xa7 compat/inlines.32
                0x00000000c0008878                CPU::current()
                0x00000000c0008884                operator new(unsigned long)
                0x00000000c0008889                operator delete(void*)
                0x00000000c000888e                disableIRQs()
                0x00000000c0008896                enableIRQs()
                0x00000000c00088a5                lockScheduler()
                0x00000000c00088ad                unlockScheduler()
                0x00000000c00088bc                lockStuff()
                0x00000000c00088ca                unlockStuff()
                0x00000000c0008904                Virt::getAKernelVAS()
                0x00000000c000890a                __not_memcpy
 *fill*         0x00000000c000891f        0x1 
 .text          0x00000000c0008920      0x118 compat/resolve.32
                0x00000000c0008920                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0008a38      0xb95 core/computer.32
                0x00000000c0008a38                Computer::close(int, int, void*)
                0x00000000c0008a7c                Krnl::firstTask()
                0x00000000c0008bd0                Computer::Computer()
                0x00000000c0008bd0                Computer::Computer()
                0x00000000c0008d2c                Computer::setBootMessage(char const*)
                0x00000000c0008d2e                Computer::detectFeatures()
                0x00000000c0008f38                Computer::displayFeatures()
                0x00000000c000927e                Computer::rdmsr(unsigned int)
                0x00000000c00092aa                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00092e2                Computer::shutdown()
                0x00000000c00092fa                Computer::restart()
                0x00000000c0009312                Computer::sleep()
                0x00000000c0009326                Computer::nmiEnabled()
                0x00000000c0009332                Computer::readCMOS(unsigned char)
                0x00000000c000934c                Computer::enableNMI(bool)
                0x00000000c0009364                Computer::open(int, int, void*)
                0x00000000c0009510                Computer::disableNMI()
                0x00000000c000951e                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000953c                Computer::handleNMI()
                0x00000000c00095a2                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c00095cd        0x1 
 .text          0x00000000c00095ce      0x19d core/gdt.32
                0x00000000c00095ce                GDTEntry::setBase(unsigned int)
                0x00000000c00095ea                GDTEntry::setLimit(unsigned int)
                0x00000000c0009608                GDT::GDT()
                0x00000000c0009608                GDT::GDT()
                0x00000000c000961e                GDT::addEntry(GDTEntry)
                0x00000000c0009640                GDT::getNumberOfEntries()
                0x00000000c0009648                GDT::flush()
                0x00000000c000966a                GDT::setup()
 .text          0x00000000c000976b       0x6b core/idle.32
                0x00000000c000976b                idleFunction(void*)
 *fill*         0x00000000c00097d6        0x2 
 .text          0x00000000c00097d8      0x464 core/idt.32
                0x00000000c00097d8                IDTEntry::IDTEntry(bool)
                0x00000000c00097d8                IDTEntry::IDTEntry(bool)
                0x00000000c000984a                IDTEntry::setOffset(unsigned int)
                0x00000000c0009860                IDT::IDT()
                0x00000000c0009860                IDT::IDT()
                0x00000000c0009862                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000986a                IDT::addEntry(IDTEntry, int)
                0x00000000c0009884                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00098bc                IDT::flush()
                0x00000000c00098d6                IDT::setup()
 .text          0x00000000c0009c3c      0x191 core/kheap.32
                0x00000000c0009c3c                sbrk
                0x00000000c0009cdf                mmap
                0x00000000c0009cf5                munmap
                0x00000000c0009d0b                liballoc_lock()
                0x00000000c0009d18                liballoc_unlock()
                0x00000000c0009d2c                liballoc_alloc(int)
                0x00000000c0009d44                liballoc_free(void*, int)
                0x00000000c0009d5f                realloc
                0x00000000c0009d73                malloc
                0x00000000c0009d83                free
                0x00000000c0009d93                rfree
                0x00000000c0009da3                calloc
 .text          0x00000000c0009dcd      0x437 core/main.32
                0x00000000c0009dcd                Krnl::setBootMessage(char const*)
                0x00000000c0009e39                kernel_main
 .text          0x00000000c000a204      0x673 core/physmgr.32
                0x00000000c000a204                Phys::allocateDMA(unsigned long)
                0x00000000c000a313                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000a359                Phys::setPageState(unsigned long, bool)
                0x00000000c000a38b                Phys::getPageState(unsigned long)
                0x00000000c000a3a7                Phys::freePage(unsigned long)
                0x00000000c000a42a                Phys::allocatePage()
                0x00000000c000a515                Phys::allocateContiguousPages(int)
                0x00000000c000a571                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000a5a9                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000a877        0x1 
 .text          0x00000000c000a878      0x273 core/pipe.32
                0x00000000c000a878                Pipe::isAtty()
                0x00000000c000a87c                Pipe::~Pipe()
                0x00000000c000a87c                Pipe::~Pipe()
                0x00000000c000a8a0                Pipe::~Pipe()
                0x00000000c000a8c8                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000a9c4                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000aa84                Pipe::Pipe(int)
                0x00000000c000aa84                Pipe::Pipe(int)
 *fill*         0x00000000c000aaeb        0x1 
 .text          0x00000000c000aaec      0xb8f core/terminal.32
                0x00000000c000aaec                VgaText::isAtty()
                0x00000000c000aaf0                VgaText::~VgaText()
                0x00000000c000aaf0                VgaText::~VgaText()
                0x00000000c000ab14                VgaText::~VgaText()
                0x00000000c000ab3e                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000ab5e                setTerminalScrollLock(bool)
                0x00000000c000ab5f                addToTerminalCycle(VgaText*)
                0x00000000c000ab80                installVgaTextImplementation()
                0x00000000c000ab95                scrollTerminalScrollLock(int)
                0x00000000c000ab96                VgaText::updateTitle()
                0x00000000c000abd4                VgaText::load()
                0x00000000c000ac22                VgaText::updateCursor()
                0x00000000c000ac38                VgaText::doANSI_SGR(int)
                0x00000000c000acac                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000acbc                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000accc                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000acec                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000acfc                VgaText::setTitleColour(VgaColour)
                0x00000000c000ad0c                VgaText::setTitle(char*)
                0x00000000c000ad32                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000ad44                VgaText::scrollScreen()
                0x00000000c000add8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000adea                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000ae46                VgaText::getCursorX()
                0x00000000c000ae4e                VgaText::getCursorY()
                0x00000000c000ae56                VgaText::setCursor(int, int)
                0x00000000c000ae6d                setActiveTerminal(VgaText*)
                0x00000000c000aecf                doTerminalCycle()
                0x00000000c000aeea                VgaText::setCursorX(int)
                0x00000000c000af02                VgaText::setCursorY(int)
                0x00000000c000af1a                VgaText::incrementCursor(bool)
                0x00000000c000af6e                VgaText::decrementCursor(bool)
                0x00000000c000af90                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000b068                VgaText::doUpdate()
                0x00000000c000b076                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000b1ee                VgaText::clearScreen()
                0x00000000c000b248                VgaText::putchar(char)
                0x00000000c000b334                VgaText::putx(unsigned int)
                0x00000000c000b37a                VgaText::puts(char const*)
                0x00000000c000b3a0                VgaText::VgaText(char const*)
                0x00000000c000b3a0                VgaText::VgaText(char const*)
                0x00000000c000b51c                VgaText::receiveKey(unsigned char)
                0x00000000c000b602                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000b656                newTerminal(char*)
 *fill*         0x00000000c000b67b        0x1 
 .text          0x00000000c000b67c      0x1a1 core/tss.32
                0x00000000c000b67c                TSS::TSS()
                0x00000000c000b67c                TSS::TSS()
                0x00000000c000b68c                TSS::setESP(unsigned long)
                0x00000000c000b6a0                TSS::flush()
                0x00000000c000b6c0                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000b81d        0x1 
 .text          0x00000000c000b81e      0x4c2 core/unixfile.32
                0x00000000c000b81e                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000b874                ReservedFilename::isAtty()
                0x00000000c000b890                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000b8ee                UnixFile::getFileDescriptor()
                0x00000000c000b8f6                UnixFile::UnixFile(int)
                0x00000000c000b8f6                UnixFile::UnixFile(int)
                0x00000000c000baa6                ReservedFilename::ReservedFilename(int)
                0x00000000c000baa6                ReservedFilename::ReservedFilename(int)
                0x00000000c000bad8                UnixFile::~UnixFile()
                0x00000000c000bad8                UnixFile::~UnixFile()
                0x00000000c000bb70                UnixFile::~UnixFile()
                0x00000000c000bb98                ReservedFilename::~ReservedFilename()
                0x00000000c000bb98                ReservedFilename::~ReservedFilename()
                0x00000000c000bbbc                ReservedFilename::~ReservedFilename()
                0x00000000c000bbe3                getFromFileDescriptor(int)
 .text          0x00000000c000bce0     0x1218 core/virtmgr.32
                0x00000000c000bce0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000bd15                Virt::getPageState(unsigned long)
                0x00000000c000bd39                Virt::allocateKernelVirtualPages(int)
                0x00000000c000be4a                Virt::freeSwapfilePage(unsigned long)
                0x00000000c000be68                Virt::swapIDToSector(unsigned long)
                0x00000000c000be7a                Virt::allocateSwapfilePage()
                0x00000000c000bef8                Virt::virtualMemorySetup()
                0x00000000c000bf43                Virt::setupPageSwapping(int)
                0x00000000c000bfb4                VAS::VAS()
                0x00000000c000bfb4                VAS::VAS()
                0x00000000c000bff0                VAS::VAS(VAS*)
                0x00000000c000bff0                VAS::VAS(VAS*)
                0x00000000c000c01e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000c04a                VAS::getPageTableEntry(unsigned long)
                0x00000000c000c069                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000c18c                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000c1b0                VAS::virtualToPhysical(unsigned long)
                0x00000000c000c1c8                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000c208                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000c23a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000c264                VAS::~VAS()
                0x00000000c000c264                VAS::~VAS()
                0x00000000c000c3e0                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000c4e2                VAS::allocatePages(int, int)
                0x00000000c000c6ba                VAS::setCPUSpecific(unsigned long)
                0x00000000c000c6d6                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000c79c                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000c88a                VAS::VAS(bool)
                0x00000000c000c88a                VAS::VAS(bool)
                0x00000000c000cb0a                VAS::evict(unsigned long)
                0x00000000c000cbda                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000ccee                VAS::scanForEviction()
                0x00000000c000cdcc                mapVASFirstTime
 .text          0x00000000c000cef8       0x95 coreobjs/c++.32
                0x00000000c000cef8                __cxa_atexit
                0x00000000c000cefb                __cxa_finalize
                0x00000000c000cefc                __stack_chk_fail
                0x00000000c000cf68                __cxa_pure_virtual
                0x00000000c000cf79                operator new[](unsigned long)
                0x00000000c000cf7e                operator delete(void*, unsigned long)
                0x00000000c000cf83                operator delete[](void*)
                0x00000000c000cf88                operator delete[](void*, unsigned long)
 .text          0x00000000c000cf8d      0x1fc dbg/kconsole.32
                0x00000000c000cf8d                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000cfe6                Dbg::logc(char)
                0x00000000c000d006                Dbg::logs(char*)
                0x00000000c000d023                Dbg::logWriteInt(unsigned int)
                0x00000000c000d040                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000d05f                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000d189        0x1 
 .text          0x00000000c000d18a      0xcac fs/vfs.32
                0x00000000c000d18a                File::read(unsigned long long, void*, int*)
                0x00000000c000d1e2                File::write(unsigned long long, void*, int*)
                0x00000000c000d23a                Directory::read(unsigned long long, void*, int*)
                0x00000000c000d292                Directory::write(unsigned long long, void*, int*)
                0x00000000c000d2c0                File::isAtty()
                0x00000000c000d2c4                Directory::isAtty()
                0x00000000c000d2c8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000d2ce                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000d2d4                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000d2da                File::~File()
                0x00000000c000d2da                File::~File()
                0x00000000c000d2fe                File::~File()
                0x00000000c000d328                Directory::~Directory()
                0x00000000c000d328                Directory::~Directory()
                0x00000000c000d34c                Directory::~Directory()
                0x00000000c000d376                Filesystem::Filesystem()
                0x00000000c000d376                Filesystem::Filesystem()
                0x00000000c000d39a                Filesystem::~Filesystem()
                0x00000000c000d39a                Filesystem::~Filesystem()
                0x00000000c000d3a8                Filesystem::~Filesystem()
                0x00000000c000d3cc                Fs::getcwd(Process*, char*, int)
                0x00000000c000d3f6                Fs::initVFS()
                0x00000000c000d420                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000d5ca                File::File(char const*, Process*)
                0x00000000c000d5ca                File::File(char const*, Process*)
                0x00000000c000d6a4                File::open(FileOpenMode)
                0x00000000c000d702                File::close()
                0x00000000c000d762                File::seek(unsigned long long)
                0x00000000c000d7b8                File::tell(unsigned long long*)
                0x00000000c000d808                File::rewind()
                0x00000000c000d81c                File::unlink()
                0x00000000c000d868                File::rename(char const*)
                0x00000000c000d8b6                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000d912                File::exists()
                0x00000000c000d950                File::stat(unsigned long long*, bool*)
                0x00000000c000d9b1                Fs::setcwd(Process*, char*)
                0x00000000c000db2a                Directory::Directory(char const*, Process*)
                0x00000000c000db2a                Directory::Directory(char const*, Process*)
                0x00000000c000dc04                Directory::open()
                0x00000000c000dc60                Directory::close()
                0x00000000c000dcc0                Directory::unlink()
                0x00000000c000dd0c                Directory::rename(char const*)
                0x00000000c000dd5a                Directory::exists()
                0x00000000c000dd98                Directory::read(dirent*)
                0x00000000c000dde4                Directory::create()
                0x00000000c000de30                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000de36        0x2 
 .text          0x00000000c000de38       0x86 hal/bus.32
                0x00000000c000de38                Bus::Bus(char const*)
                0x00000000c000de38                Bus::Bus(char const*)
                0x00000000c000de70                Bus::~Bus()
                0x00000000c000de70                Bus::~Bus()
                0x00000000c000de94                Bus::~Bus()
 *fill*         0x00000000c000debe        0x2 
 .text          0x00000000c000dec0      0x153 hal/buzzer.32
                0x00000000c000dec0                Buzzer::Buzzer(char const*)
                0x00000000c000dec0                Buzzer::Buzzer(char const*)
                0x00000000c000df04                Buzzer::~Buzzer()
                0x00000000c000df04                Buzzer::~Buzzer()
                0x00000000c000df28                Buzzer::~Buzzer()
                0x00000000c000df52                Buzzer::stop()
                0x00000000c000df65                beepThread(void*)
                0x00000000c000dfa6                Buzzer::beep(int, int, bool)
 *fill*         0x00000000c000e013        0x1 
 .text          0x00000000c000e014      0x467 hal/clock.32
                0x00000000c000e014                User::loadClockSettings(int)
                0x00000000c000e066                Clock::Clock(char const*)
                0x00000000c000e066                Clock::Clock(char const*)
                0x00000000c000e09c                Clock::~Clock()
                0x00000000c000e09c                Clock::~Clock()
                0x00000000c000e0c0                Clock::~Clock()
                0x00000000c000e0ea                Clock::timeInSecondsLocal()
                0x00000000c000e132                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000e18b                datetimeToSeconds(datetime_t)
                0x00000000c000e2b2                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000e312                secondsToDatetime(unsigned long long)
                0x00000000c000e456                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000e47b        0x1 
 .text          0x00000000c000e47c      0x504 hal/device.32
                0x00000000c000e47c                Device::hibernate()
                0x00000000c000e47e                Device::wake()
                0x00000000c000e480                Device::detect()
                0x00000000c000e482                Device::disableLegacy()
                0x00000000c000e484                Device::powerSaving(PowerSavingLevel)
                0x00000000c000e486                DriverlessDevice::close(int, int, void*)
                0x00000000c000e48a                DriverlessDevice::detect()
                0x00000000c000e48c                DriverlessDevice::open(int, int, void*)
                0x00000000c000e4a0                Device::~Device()
                0x00000000c000e4a0                Device::~Device()
                0x00000000c000e4ae                Device::~Device()
                0x00000000c000e4d6                Device::findAndLoadDriver()
                0x00000000c000e4e4                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000e50a                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000e54a                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000e588                Device::getParent()
                0x00000000c000e594                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000e5d2                Device::addChild(Device*)
                0x00000000c000e616                Device::removeAllChildren()
                0x00000000c000e65c                Device::hibernateAll()
                0x00000000c000e68c                Device::wakeAll()
                0x00000000c000e6bc                Device::detectAll()
                0x00000000c000e6ec                Device::disableLegacyAll()
                0x00000000c000e71c                Device::loadDriversForAll()
                0x00000000c000e75c                Device::closeAll()
                0x00000000c000e792                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000e7c8                Device::setName(char const*)
                0x00000000c000e7d6                Device::Device(char const*)
                0x00000000c000e7d6                Device::Device(char const*)
                0x00000000c000e8d2                Device::getName()
                0x00000000c000e8dc                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e8dc                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e912                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000e956                getDevicesOfType(DeviceType)
 .text          0x00000000c000e980       0x86 hal/diskctrl.32
                0x00000000c000e980                HardDiskController::HardDiskController(char const*)
                0x00000000c000e980                HardDiskController::HardDiskController(char const*)
                0x00000000c000e9b8                HardDiskController::~HardDiskController()
                0x00000000c000e9b8                HardDiskController::~HardDiskController()
                0x00000000c000e9dc                HardDiskController::~HardDiskController()
 .text          0x00000000c000ea06       0xe2 hal/diskphys.32
                0x00000000c000ea06                PhysicalDisk::eject()
                0x00000000c000ea0a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ea0a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ea72                PhysicalDisk::startCache()
                0x00000000c000ea9a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ea9a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000eabe                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000eae8      0x15f hal/fpu.32
                0x00000000c000eae8                FPU::FPU(char const*)
                0x00000000c000eae8                FPU::FPU(char const*)
                0x00000000c000eb20                FPU::~FPU()
                0x00000000c000eb20                FPU::~FPU()
                0x00000000c000eb44                FPU::~FPU()
                0x00000000c000eb6e                setupFPU()
 *fill*         0x00000000c000ec47        0x1 
 .text          0x00000000c000ec48     0x12bf hal/intctrl.32
                0x00000000c000ec48                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000ec80                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000ecd2                doubleFault(regs*, void*)
                0x00000000c000ecec                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ed88                InterruptController::clearAllHandlers(int, bool)
                0x00000000c000ee30                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000eeb7                nmiHandler(regs*, void*)
                0x00000000c000eec5                int_handler
                0x00000000c000ef66                InterruptController::InterruptController(char const*)
                0x00000000c000ef66                InterruptController::InterruptController(char const*)
                0x00000000c000f00c                InterruptController::~InterruptController()
                0x00000000c000f00c                InterruptController::~InterruptController()
                0x00000000c000f030                InterruptController::~InterruptController()
                0x00000000c000f05a                displayDebugInfo(regs*)
                0x00000000c000f4e9                x87EmulHandler(regs*, void*)
                0x00000000c000f622                gpFault(regs*, void*)
                0x00000000c000f65b                pgFault(regs*, void*)
                0x00000000c000f6aa                otherISRHandler(regs*, void*)
                0x00000000c000f6c9                opcodeFault(regs*, void*)
                0x00000000c000faa3                displayProgramFault(char const*)
                0x00000000c000facb                setupInterruptController()
                0x00000000c000feba                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c000ff07        0x1 
 .text          0x00000000c000ff08      0x778 hal/keybrd.32
                0x00000000c000ff08                startGUI(void*)
                0x00000000c000ff74                startGUIVESA(void*)
                0x00000000c000ffe0                sendKeyToTerminal(unsigned char)
                0x00000000c001009e                sendKeyboardToken(KeyboardToken)
                0x00000000c00104d0                clearInternalKeybuffer(VgaText*)
                0x00000000c0010505                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c00105f6                Keyboard::Keyboard(char const*)
                0x00000000c00105f6                Keyboard::Keyboard(char const*)
                0x00000000c0010632                Keyboard::~Keyboard()
                0x00000000c0010632                Keyboard::~Keyboard()
                0x00000000c0010656                Keyboard::~Keyboard()
 .text          0x00000000c0010680      0x42a hal/logidisk.32
                0x00000000c0010680                LogicalDisk::close(int, int, void*)
                0x00000000c0010684                LogicalDisk::~LogicalDisk()
                0x00000000c0010684                LogicalDisk::~LogicalDisk()
                0x00000000c00106a8                LogicalDisk::~LogicalDisk()
                0x00000000c00106d2                LogicalDisk::open(int, int, void*)
                0x00000000c00106e6                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c001071e                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0010764                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0010764                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c001081a                LogicalDisk::assignDriveLetter()
                0x00000000c00108d0                LogicalDisk::mount()
                0x00000000c0010958                LogicalDisk::unmount()
                0x00000000c0010968                LogicalDisk::eject()
                0x00000000c001097c                LogicalDisk::unassignDriveLetter()
                0x00000000c00109d2                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0010a3e                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c0010aaa        0x2 
 .text          0x00000000c0010aac       0x86 hal/mouse.32
                0x00000000c0010aac                Mouse::Mouse(char const*)
                0x00000000c0010aac                Mouse::Mouse(char const*)
                0x00000000c0010ae4                Mouse::~Mouse()
                0x00000000c0010ae4                Mouse::~Mouse()
                0x00000000c0010b08                Mouse::~Mouse()
 .text          0x00000000c0010b32      0x339 hal/partition.32
                0x00000000c0010b32                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0010bda                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0010e6b        0x1 
 .text          0x00000000c0010e6c       0x86 hal/serial.32
                0x00000000c0010e6c                Serial::Serial(char const*)
                0x00000000c0010e6c                Serial::Serial(char const*)
                0x00000000c0010ea4                Serial::~Serial()
                0x00000000c0010ea4                Serial::~Serial()
                0x00000000c0010ec8                Serial::~Serial()
 *fill*         0x00000000c0010ef2        0x2 
 .text          0x00000000c0010ef4      0x2f2 hal/timer.32
                0x00000000c0010ef4                Timer::Timer(char const*)
                0x00000000c0010ef4                Timer::Timer(char const*)
                0x00000000c0010f2c                Timer::~Timer()
                0x00000000c0010f2c                Timer::~Timer()
                0x00000000c0010f50                Timer::~Timer()
                0x00000000c0010f7a                Timer::read()
                0x00000000c0010f85                timerHandler(unsigned int)
                0x00000000c00110ec                setupTimer(int)
 *fill*         0x00000000c00111e6        0x2 
 .text          0x00000000c00111e8      0x43e hal/vcache.32
                0x00000000c00111e8                VCache::VCache(PhysicalDisk*)
                0x00000000c00111e8                VCache::VCache(PhysicalDisk*)
                0x00000000c0011350                VCache::invalidateReadBuffer()
                0x00000000c0011360                VCache::writeWriteBuffer()
                0x00000000c00113ac                VCache::~VCache()
                0x00000000c00113ac                VCache::~VCache()
                0x00000000c0011400                VCache::~VCache()
                0x00000000c0011428                VCache::write(unsigned long long, int, void*)
                0x00000000c0011522                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c0011626      0x4b3 hal/video.32
                0x00000000c0011626                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c0011672                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c00116e2                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c0011760                Video::clearScreen(unsigned int)
                0x00000000c0011794                Video::putpixel(int, int, unsigned int)
                0x00000000c00117a2                Video::Video(char const*)
                0x00000000c00117a2                Video::Video(char const*)
                0x00000000c00117d8                Video::~Video()
                0x00000000c00117d8                Video::~Video()
                0x00000000c00117fc                Video::~Video()
                0x00000000c0011826                Video::isMonochrome()
                0x00000000c0011832                Video::getWidth()
                0x00000000c001183e                Video::getHeight()
                0x00000000c001184a                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c0011906                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c0011a6e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c0011ad9        0x3 
 .text          0x00000000c0011adc     0x1707 hw/acpi.32
                0x00000000c0011adc                ACPI::close(int, int, void*)
                0x00000000c0011b90                findRSDP()
                0x00000000c0011c64                loadACPITables(unsigned char*)
                0x00000000c0011ec8                findRSDT(unsigned char*)
                0x00000000c0012088                findDataTable(unsigned char*, char*)
                0x00000000c0012100                scanMADT()
                0x00000000c00125dc                ACPI::ACPI()
                0x00000000c00125dc                ACPI::ACPI()
                0x00000000c0012640                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0012728                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c00127f0                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c00127f8                ACPI::detectPCI()
                0x00000000c0012cdc                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0012d24                ACPI::sleep()
                0x00000000c0012d60                ACPI::open(int, int, void*)
 *fill*         0x00000000c00131e3        0x1 
 .text          0x00000000c00131e4     0x1861 hw/cpu.32
                0x00000000c00131e4                CPU::close(int, int, void*)
                0x00000000c00131e8                CPU::lookupAMDName(unsigned char, unsigned char)
                0x00000000c001337c                CPU::lookupIntelName(unsigned char, unsigned char)
                0x00000000c001362a                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0013646                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001365e                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c00136d2                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0013756                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0013784                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00137b2                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00137e0                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c001380e                CPU::CPU()
                0x00000000c001380e                CPU::CPU()
                0x00000000c001389c                CPU::displayFeatures()
                0x00000000c0013b3c                CPU::detectFeatures()
                0x00000000c0014566                CPU::setupSMEP()
                0x00000000c0014572                CPU::setupUMIP()
                0x00000000c001457c                CPU::setupTSC()
                0x00000000c0014586                CPU::setupLargePages()
                0x00000000c0014590                CPU::setupPAT()
                0x00000000c00145cc                CPU::setupMTRR()
                0x00000000c00145ce                CPU::setupGlobalPages()
                0x00000000c00145d8                CPU::allowUsermodeDataAccess()
                0x00000000c00145ea                CPU::prohibitUsermodeDataAccess()
                0x00000000c00145fc                CPU::setupSMAP()
                0x00000000c001460a                CPU::setupFeatures()
                0x00000000c00146d6                CPU::open(int, int, void*)
                0x00000000c001484a                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0014a45        0x0 hw/ports.32
 .text          0x00000000c0014a45      0x16a hw/smp.32
                0x00000000c0014a45                Krnl::smpEntry()
                0x00000000c0014a47                Krnl::startCPU(int)
                0x00000000c0014b90                Krnl::startCPUs()
 *fill*         0x00000000c0014baf        0x1 
 .text          0x00000000c0014bb0      0x581 krnl/env.32
                0x00000000c0014bb0                EnvVarContainer::getEnv(char const*)
                0x00000000c0014bee                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0014cb0                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0014cb2                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0014e98                EnvVarContainer::__loadSystem()
                0x00000000c0014eb2                EnvVarContainer::__loadUser()
                0x00000000c0014eb4                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0014eb4                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0014ed6                EnvVarContainer::~EnvVarContainer()
                0x00000000c0014ed6                EnvVarContainer::~EnvVarContainer()
                0x00000000c0014f06                Krnl::getEnv(Process*, char const*)
                0x00000000c0014f6b                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0014f85                Krnl::setEnvUser(char const*, char const*)
                0x00000000c0014fa4                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0014fb7                Krnl::deleteEnvSystem(char const*)
                0x00000000c0014fb8                Krnl::deleteEnvUser(char const*)
                0x00000000c0014fb9                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0014fba                Krnl::newProcessEnv(Process*)
                0x00000000c0014fdc                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0015028                Krnl::loadSystemEnv()
                0x00000000c0015056                Krnl::loadUserEnv()
                0x00000000c001507c                Krnl::flushEnv()
                0x00000000c001507d                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001509d                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0015131      0x243 krnl/panic.32
                0x00000000c0015131                Krnl::panic(char const*)
 .text          0x00000000c0015374      0x194 krnl/powctrl.32
                0x00000000c0015374                Krnl::powerThread(void*)
                0x00000000c00153f4                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c001540a                Krnl::userIOReceived()
                0x00000000c0015415                Krnl::handlePowerButton()
                0x00000000c001544a                Krnl::handleSleepButton()
                0x00000000c001547f                Krnl::setupPowerManager()
 .text          0x00000000c0015508      0x13a krnl/rand.32
                0x00000000c0015508                Krnl::initRNG()
                0x00000000c00155e1                Krnl::rand()
 *fill*         0x00000000c0015642        0x2 
 .text          0x00000000c0015644      0x5a0 net/ethernet.32
                0x00000000c0015644                Net::switchEndian16(unsigned short)
                0x00000000c0015668                Net::switchEndian32(unsigned int)
                0x00000000c0015698                Net::crc32Calc(unsigned char*, int)
                0x00000000c001573c                Net::wrapEthernetFrame(Net::UnwrappedEthernetFrame, unsigned char*)
                0x00000000c0015958                Net::unwrapEthernetFrame(unsigned char*, int)
 .text          0x00000000c0015be4      0x50e reg/registry.32
                0x00000000c0015be4                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0015d3c                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0015e91                Reg::getLine(char*, char*, char*)
                0x00000000c0015ec8                Reg::readInt(char*, char*, int*)
                0x00000000c0015fb3                Reg::readString(char*, char*, char*, int)
                0x00000000c0016034                Reg::readBool(char*, char*, bool*)
                0x00000000c0016059                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0016085                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00160b1                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00160f2       0x36 sys/sc_eject.32
                0x00000000c00160f2                Sys::eject(regs*)
 .text          0x00000000c0016128       0x18 sys/sc_exit.32
                0x00000000c0016128                Sys::exit(regs*)
 .text          0x00000000c0016140       0x1f sys/sc_getcwd.32
                0x00000000c0016140                Sys::getCwd(regs*)
 .text          0x00000000c001615f        0xc sys/sc_getpid.32
                0x00000000c001615f                Sys::getPID(regs*)
 .text          0x00000000c001616b       0x1a sys/sc_getramdata.32
                0x00000000c001616b                Sys::getRAMData(regs*)
 .text          0x00000000c0016185       0x84 sys/sc_getvgaptr.32
                0x00000000c0016185                Sys::getVGAPtr(regs*)
 .text          0x00000000c0016209       0xa8 sys/sc_loaddll.32
                0x00000000c0016209                Sys::loadDLL(regs*)
 .text          0x00000000c00162b1       0x68 sys/sc_read.32
                0x00000000c00162b1                Sys::read(regs*)
 .text          0x00000000c0016319       0x55 sys/sc_sbrk.32
                0x00000000c0016319                Sys::sbrk(regs*)
 .text          0x00000000c001636e       0x1c sys/sc_setcwd.32
                0x00000000c001636e                Sys::setCwd(regs*)
 .text          0x00000000c001638a       0x95 sys/sc_settime.32
                0x00000000c001638a                Sys::setTime(regs*)
 .text          0x00000000c001641f       0x4a sys/sc_timezone.32
                0x00000000c001641f                Sys::timezone(regs*)
 .text          0x00000000c0016469       0x68 sys/sc_write.32
                0x00000000c0016469                Sys::write(regs*)
 .text          0x00000000c00164d1       0x62 sys/sc_wsbe.32
                0x00000000c00164d1                Sys::wsbe(regs*)
 .text          0x00000000c0016533       0x38 sys/sc_yield.32
                0x00000000c0016533                Sys::yield(regs*)
 .text          0x00000000c001656b      0xf8e sys/syscalls.32
                0x00000000c001656b                sysCallSeekDir(regs*)
                0x00000000c0016570                sysCallTellDir(regs*)
                0x00000000c0016575                sysCallVerify(regs*)
                0x00000000c001657f                sysCallGetArgc(regs*)
                0x00000000c001658f                sysFormatDisk(regs*)
                0x00000000c00165f9                sysSetDiskVolumeLabel(regs*)
                0x00000000c0016643                sysGetDiskVolumeLabel(regs*)
                0x00000000c0016698                sysShutdown(regs*)
                0x00000000c00166f6                sysCallRealpath(regs*)
                0x00000000c0016739                sysCallReadDir(regs*)
                0x00000000c00167b8                sysCallIsATTY(regs*)
                0x00000000c0016812                sysCallSeek(regs*)
                0x00000000c0016869                sysCallTell(regs*)
                0x00000000c00168d5                sysCallSize(regs*)
                0x00000000c0016947                sysCallSizeFromFilename(regs*)
                0x00000000c00169f6                sysCallClose(regs*)
                0x00000000c0016a56                sysCallOpenDir(regs*)
                0x00000000c0016acb                sysCallCloseDir(regs*)
                0x00000000c0016b1f                sysCallMakeDir(regs*)
                0x00000000c0016b8f                sysCallWait(regs*)
                0x00000000c0016ba9                sysCallNotImpl(regs*)
                0x00000000c0016bc4                sysPanic(regs*)
                0x00000000c0016bde                sysCallRmdir(regs*)
                0x00000000c0016c42                sysCallUnlink(regs*)
                0x00000000c0016ca6                sysCallGetArgv(regs*)
                0x00000000c0016cf2                sysCallTTYName(regs*)
                0x00000000c0016d75                sysCallUSleep(regs*)
                0x00000000c0016d9e                sysCallSpawn(regs*)
                0x00000000c0016e06                sysCallGetEnv(regs*)
                0x00000000c0016eb3                sysAppSettings(regs*)
                0x00000000c0016fc7                sysSetFatAttrib(regs*)
                0x00000000c0017039                sysPipe(regs*)
                0x00000000c001707e                sysGetUnixTime(regs*)
                0x00000000c0017092                string_ends_with(char const*, char const*)
                0x00000000c00170da                sysCallOpen(regs*)
                0x00000000c00172c2                Sys::loadSyscalls()
                0x00000000c00174b7                Sys::systemCall(regs*, void*)
 .text          0x00000000c00174f9     0x1203 thr/elf.32
                0x00000000c00174f9                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00177a3                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00179b9                Thr::runtimeReferenceHelper()
                0x00000000c00179cc                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0017a1b                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0017cd9                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001840f                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0018441                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0018478                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0018492                Thr::loadDLL(char const*, bool)
                0x00000000c00186c3                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00186fc     0x12a9 thr/prcssthr.32
                0x00000000c00186fc                userModeEntryPoint(void*)
                0x00000000c0018724                changeTSS
                0x00000000c0018754                switchToThread(ThreadControlBlock*)
                0x00000000c0018808                Process::addArgs(char**)
                0x00000000c0018868                Process::Process(char const*, Process*, char**)
                0x00000000c0018868                Process::Process(char const*, Process*, char**)
                0x00000000c0018a54                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0018a54                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0018c0c                taskStartupFunction
                0x00000000c0018c18                Semaphore::Semaphore(int)
                0x00000000c0018c18                Semaphore::Semaphore(int)
                0x00000000c0018c48                Mutex::Mutex()
                0x00000000c0018c48                Mutex::Mutex()
                0x00000000c0018c5c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0018d54                Process::createUserThread()
                0x00000000c0018d70                setupMultitasking(void (*)())
                0x00000000c0018e78                schedule()
                0x00000000c0018f04                Semaphore::tryAcquire()
                0x00000000c0018fd0                Semaphore::assertLocked(char const*)
                0x00000000c0019048                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0019070                blockTask(TaskState)
                0x00000000c00190a0                waitTask(int, int*, int)
                0x00000000c00190e4                milliTenthSleepUntil(unsigned int)
                0x00000000c0019170                milliTenthSleep(unsigned int)
                0x00000000c0019180                sleep(unsigned int)
                0x00000000c001919c                Semaphore::acquire()
                0x00000000c0019258                taskReturned
                0x00000000c0019294                Thr::processFromPID(int)
                0x00000000c0019334                unblockTask(ThreadControlBlock*)
                0x00000000c00193d8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00196a0                cleanerTaskFunction(void*)
                0x00000000c0019790                terminateTask(int)
                0x00000000c001985c                Thr::terminateFromIRQ(int)
                0x00000000c0019868                Semaphore::release()
 .text          0x00000000c00199a5      0xb93 vm86/vm8086.32
                0x00000000c00199a5                Vm::inbv(unsigned short)
                0x00000000c00199b8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00199ee                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00199fe                Vm::getSegment(unsigned int)
                0x00000000c0019a06                Vm::getOffset(unsigned int)
                0x00000000c0019a0b                Vm::mainloop2()
                0x00000000c0019a45                Vm::mainVm8086Loop(void*)
                0x00000000c0019a55                Vm::mainloop3(unsigned long)
                0x00000000c0019a7b                Vm::initialise8086()
                0x00000000c0019abe                Vm::finish8086()
                0x00000000c0019b1f                Vm::getOutput8086(unsigned char*)
                0x00000000c0019b44                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0019bfd                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0019d65                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0019def                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0019e00                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0019e12                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0019e23                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0019e38                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0019e4e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0019e63                Vm::faultHandler(regs*)
 .text          0x00000000c001a538      0xfcd vm86/x87em.32
                0x00000000c001a538                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c001a596                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c001a59f                Vm::fpu32ToInternal(unsigned int)
                0x00000000c001a5e4                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c001a5ed                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c001a64c                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c001a688                Vm::fpuLongToFloat(long long)
                0x00000000c001a6e7                Vm::fpuGet0()
                0x00000000c001a6ec                Vm::fpuGet1()
                0x00000000c001a6f4                Vm::fpuGetPi()
                0x00000000c001a6fc                Vm::fpuGetLog2E()
                0x00000000c001a714                Vm::fpuGetLogE2()
                0x00000000c001a72c                Vm::fpuGetLog210()
                0x00000000c001a744                Vm::fpuGetLog102()
                0x00000000c001a75c                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c001a770                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c001a786                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c001a7dc                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c001a7ed                Vm::fpuAbs(unsigned long long)
                0x00000000c001a7f6                Vm::fpuChs(unsigned long long)
                0x00000000c001a806                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c001a815                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c001a834                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c001a850                Vm::fpuSquare(unsigned long long)
                0x00000000c001a866                Vm::fpuGetReg(int)
                0x00000000c001a8a9                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c001a8f5                Vm::fpuPush(unsigned long long)
                0x00000000c001a953                Vm::fpuPop()
                0x00000000c001a9a6                Vm::x87Handler(regs*)
 *fill*         0x00000000c001b505        0x3 
 .text          0x00000000c001b508     0x13b7 fs/fat/vfslink.32
                0x00000000c001b508                FAT::getName()
                0x00000000c001b510                FAT::tell(void*, unsigned long long*)
                0x00000000c001b54c                FAT::stat(void*, unsigned long long*)
                0x00000000c001b588                FAT::~FAT()
                0x00000000c001b588                FAT::~FAT()
                0x00000000c001b5ac                FAT::~FAT()
                0x00000000c001b5d4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b678                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b73c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b910                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001bb28                FAT::allocateSwapfile(char const*, int)
                0x00000000c001bce4                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001be50                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001beb0                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001bf10                FAT::close(void*)
                0x00000000c001bf64                FAT::closeDir(void*)
                0x00000000c001bfb8                FAT::seek(void*, unsigned long long)
                0x00000000c001c014                fatWrapperReadDisk
                0x00000000c001c05c                fatWrapperWriteDisk
                0x00000000c001c0a4                fatWrapperIoctl
                0x00000000c001c1b4                FAT::FAT()
                0x00000000c001c1b4                FAT::FAT()
                0x00000000c001c208                FAT::fixFilepath(char*)
                0x00000000c001c244                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c378                FAT::openDir(char const*, void**)
                0x00000000c001c428                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c51c                FAT::unlink(char const*)
                0x00000000c001c59c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c704                FAT::rename(char const*, char const*)
                0x00000000c001c7d0                FAT::mkdir(char const*)
                0x00000000c001c850                FAT::exists(char const*)
 *fill*         0x00000000c001c8bf        0x1 
 .text          0x00000000c001c8c0      0xba7 fs/iso9660/vfslink.32
                0x00000000c001c8c0                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001c8c6                ISO9660::seek(void*, unsigned long long)
                0x00000000c001c8f6                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001c91a                ISO9660::getName()
                0x00000000c001c920                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001c944                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c94a                ISO9660::unlink(char const*)
                0x00000000c001c950                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001c956                ISO9660::rename(char const*, char const*)
                0x00000000c001c95c                ISO9660::mkdir(char const*)
                0x00000000c001c962                ISO9660::close(void*)
                0x00000000c001c984                ISO9660::closeDir(void*)
                0x00000000c001c9a6                ISO9660::~ISO9660()
                0x00000000c001c9a6                ISO9660::~ISO9660()
                0x00000000c001c9ca                ISO9660::~ISO9660()
                0x00000000c001c9f1                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001ca33                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001caae                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001cb0e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001cd12                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001cf8c                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001cfe0                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001d1b6                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001d244                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001d2f2                ISO9660::exists(char const*)
                0x00000000c001d316                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d3aa                ISO9660::openDir(char const*, void**)
                0x00000000c001d444                ISO9660::ISO9660()
                0x00000000c001d444                ISO9660::ISO9660()
 *fill*         0x00000000c001d467        0x1 
 .text          0x00000000c001d468      0x298 hal/sound/sndcard.32
                0x00000000c001d468                SoundCard::beginPlayback()
                0x00000000c001d476                SoundCard::stopPlayback()
                0x00000000c001d484                SoundCard::SoundCard(char const*)
                0x00000000c001d484                SoundCard::SoundCard(char const*)
                0x00000000c001d522                SoundCard::~SoundCard()
                0x00000000c001d522                SoundCard::~SoundCard()
                0x00000000c001d546                SoundCard::~SoundCard()
                0x00000000c001d570                SoundCard::configureRates(int, int, int)
                0x00000000c001d5a0                SoundCard::getSamples16(int, short*)
                0x00000000c001d60a                SoundCard::getSamples32(int, int*)
                0x00000000c001d690                SoundCard::addChannel(SoundPort*)
                0x00000000c001d6ec                SoundCard::removeChannel(int)
 .text          0x00000000c001d700      0x3fb hal/sound/sndport.32
                0x00000000c001d700                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d700                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d78c                SoundPort::~SoundPort()
                0x00000000c001d78c                SoundPort::~SoundPort()
                0x00000000c001d7c0                SoundPort::unpause()
                0x00000000c001d7cc                SoundPort::pause()
                0x00000000c001d7d8                SoundPort::getBufferUsed()
                0x00000000c001d7e0                SoundPort::getBufferSize()
                0x00000000c001d7e8                SoundPort::buffer16(short*, int)
                0x00000000c001d89c                SoundPort::buffer32(int*, int)
                0x00000000c001d948                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001da44                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001dafb        0x0 hw/bus/isa.32
 *fill*         0x00000000c001dafb        0x1 
 .text          0x00000000c001dafc     0x1187 hw/bus/pci.32
                0x00000000c001dafc                PCI::open(int, int, void*)
                0x00000000c001db1a                PCI::close(int, int, void*)
                0x00000000c001db1e                PCI::PCI()
                0x00000000c001db1e                PCI::PCI()
                0x00000000c001dbb4                PCI::readBAR8(unsigned int, int)
                0x00000000c001dbd0                PCI::readBAR16(unsigned int, int)
                0x00000000c001dbee                PCI::readBAR32(unsigned int, int)
                0x00000000c001dc0a                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001dc2a                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001dc4c                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001dc6c                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dcda                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dd82                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001dda6                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001ddce                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001de18                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001de40                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001de64                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001de88                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001deb0                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001df14                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001dffc                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e3ee                PCI::checkBus(unsigned char)
                0x00000000c001e412                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e852                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ebc4                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001ec30                PCI::detect()
 *fill*         0x00000000c001ec83        0x1 
 .text          0x00000000c001ec84      0xb66 hw/diskctrl/ide.32
                0x00000000c001ec84                IDE::close(int, int, void*)
                0x00000000c001ec88                IDE::IDE()
                0x00000000c001ec88                IDE::IDE()
                0x00000000c001ecbc                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ecce                selectDrive(unsigned char, unsigned char)
                0x00000000c001ecd0                IDE::getBase(unsigned char)
                0x00000000c001ece2                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001eda2                IDE::read(unsigned char, unsigned char)
                0x00000000c001ee50                IDE::waitInterrupt(unsigned char)
                0x00000000c001eeb2                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001eece                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001eeea                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ef30                IDE::open(int, int, void*)
                0x00000000c001f35a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001f426                IDE::detect()
                0x00000000c001f6e6                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f796                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f7ea      0x557 hw/diskctrl/satabus.32
                0x00000000c001f7ea                SATABus::close(int, int, void*)
                0x00000000c001f7ee                SATABus::detect()
                0x00000000c001f7f0                SATABus::SATABus()
                0x00000000c001f7f0                SATABus::SATABus()
                0x00000000c001f876                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f8a8                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f8f0                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f910                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f93a                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001fa40                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001fc22                SATABus::open(int, int, void*)
 *fill*         0x00000000c001fd41        0x1 
 .text          0x00000000c001fd42      0x684 hw/diskphys/ata.32
                0x00000000c001fd42                ATA::close(int, int, void*)
                0x00000000c001fd66                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001fd68                ATA::ATA()
                0x00000000c001fd68                ATA::ATA()
                0x00000000c001fd96                ATA::flush(bool)
                0x00000000c001fde0                ATA::readyForCommand()
                0x00000000c001fe2c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020222                ATA::read(unsigned long long, int, void*)
                0x00000000c002026e                ATA::write(unsigned long long, int, void*)
                0x00000000c00202d0                ATA::detectCHS()
                0x00000000c00202fa                ATA::open(int, int, void*)
 .text          0x00000000c00203c6      0x645 hw/diskphys/atapi.32
                0x00000000c00203c6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c00203cc                ATAPI::close(int, int, void*)
                0x00000000c00203f0                ATAPI::ATAPI()
                0x00000000c00203f0                ATAPI::ATAPI()
                0x00000000c002041e                ATAPI::readyForCommand()
                0x00000000c0020470                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0020730                ATAPI::diskRemoved()
                0x00000000c002078c                ATAPI::eject()
                0x00000000c00207d4                ATAPI::diskInserted()
                0x00000000c00207f0                ATAPI::detectMedia()
                0x00000000c00208ac                ATAPI::open(int, int, void*)
                0x00000000c002098c                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0020a0b        0x1 
 .text          0x00000000c0020a0c      0xa68 hw/diskphys/sata.32
                0x00000000c0020a0c                SATA::close(int, int, void*)
                0x00000000c0020a30                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0020a32                SATA::open(int, int, void*)
                0x00000000c0020c28                SATA::SATA()
                0x00000000c0020c28                SATA::SATA()
                0x00000000c0020c56                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c002124e                SATA::read(unsigned long long, int, void*)
                0x00000000c002134e                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0021474      0x6d4 hw/diskphys/satapi.32
                0x00000000c0021474                SATAPI::write(unsigned long long, int, void*)
                0x00000000c002147a                SATAPI::close(int, int, void*)
                0x00000000c002149e                SATAPI::SATAPI()
                0x00000000c002149e                SATAPI::SATAPI()
                0x00000000c00214cc                SATAPI::diskRemoved()
                0x00000000c0021528                SATAPI::diskInserted()
                0x00000000c0021544                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c00217d8                SATAPI::eject()
                0x00000000c0021830                SATAPI::detectMedia()
                0x00000000c0021970                SATAPI::open(int, int, void*)
                0x00000000c0021a70                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0021b48       0x94 hw/fpu/avx.32
                0x00000000c0021b48                AVX::open(int, int, void*)
                0x00000000c0021b5c                AVX::close(int, int, void*)
                0x00000000c0021b70                AVX::available()
                0x00000000c0021b84                AVX::save(void*)
                0x00000000c0021b9c                AVX::load(void*)
                0x00000000c0021bb4                AVX::AVX()
                0x00000000c0021bb4                AVX::AVX()
 .text          0x00000000c0021bdc       0x94 hw/fpu/mmx.32
                0x00000000c0021bdc                MMX::available()
                0x00000000c0021bf0                MMX::open(int, int, void*)
                0x00000000c0021c04                MMX::close(int, int, void*)
                0x00000000c0021c18                MMX::save(void*)
                0x00000000c0021c30                MMX::load(void*)
                0x00000000c0021c48                MMX::MMX()
                0x00000000c0021c48                MMX::MMX()
 .text          0x00000000c0021c70       0x9c hw/fpu/sse.32
                0x00000000c0021c70                SSE::open(int, int, void*)
                0x00000000c0021c84                SSE::close(int, int, void*)
                0x00000000c0021c98                SSE::available()
                0x00000000c0021cb4                SSE::save(void*)
                0x00000000c0021ccc                SSE::load(void*)
                0x00000000c0021ce4                SSE::SSE()
                0x00000000c0021ce4                SSE::SSE()
 .text          0x00000000c0021d0c       0x8e hw/fpu/x87.32
                0x00000000c0021d0c                x87::open(int, int, void*)
                0x00000000c0021d1e                x87::close(int, int, void*)
                0x00000000c0021d30                x87::available()
                0x00000000c0021d42                x87::save(void*)
                0x00000000c0021d5a                x87::load(void*)
                0x00000000c0021d72                x87::x87()
                0x00000000c0021d72                x87::x87()
 .text          0x00000000c0021d9a      0x71e hw/intctrl/apic.32
                0x00000000c0021d9a                APIC::disable()
                0x00000000c0021d9c                APIC::close(int, int, void*)
                0x00000000c0021dbe                IOAPIC::close(int, int, void*)
                0x00000000c0021dc4                APIC::io_wait()
                0x00000000c0021dca                APIC::getBase()
                0x00000000c0021e0c                APIC::eoi(unsigned char)
                0x00000000c0021e3a                APIC::open(int, int, void*)
                0x00000000c0021f88                IOAPIC::IOAPIC()
                0x00000000c0021f88                IOAPIC::IOAPIC()
                0x00000000c0021fb0                APIC::APIC()
                0x00000000c0021fb0                APIC::APIC()
                0x00000000c002208c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c00220be                IOAPIC::read(int)
                0x00000000c00220e6                IOAPIC::open(int, int, void*)
                0x00000000c00221dc                IOAPIC::write(int, int)
                0x00000000c0022208                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
                0x00000000c0022302                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 .text          0x00000000c00224b8      0x3d3 hw/intctrl/pic.32
                0x00000000c00224b8                PIC::disable()
                0x00000000c00224e6                PIC::close(int, int, void*)
                0x00000000c0022508                PIC::PIC()
                0x00000000c0022508                PIC::PIC()
                0x00000000c00225de                PIC::ioWait()
                0x00000000c00225e4                PIC::getIRQReg(int)
                0x00000000c002264e                PIC::eoi(unsigned char)
                0x00000000c00226e0                PIC::remap()
                0x00000000c002284c                PIC::open(int, int, void*)
 *fill*         0x00000000c002288b        0x1 
 .text          0x00000000c002288c      0x240 hw/timer/apictimer.32
                0x00000000c002288c                APICTimer::close(int, int, void*)
                0x00000000c0022894                apicTimerHandler(regs*, void*)
                0x00000000c00228bc                APICTimer::write(int)
                0x00000000c00229a4                APICTimer::open(int, int, void*)
                0x00000000c0022aa4                APICTimer::APICTimer()
                0x00000000c0022aa4                APICTimer::APICTimer()
 .text          0x00000000c0022acc      0x1a3 hw/timer/pit.32
                0x00000000c0022acc                PIT::write(int)
                0x00000000c0022b4c                pitHandler(regs*, void*)
                0x00000000c0022b70                PIT::open(int, int, void*)
                0x00000000c0022bc0                PIT::close(int, int, void*)
                0x00000000c0022bf0                PIT::PIT()
                0x00000000c0022bf0                PIT::PIT()
 *fill*         0x00000000c0022c6f        0x1 
 .text          0x00000000c0022c70       0x83 hw/fpu/x86/avx.32
                0x00000000c0022c70                avxDetect
                0x00000000c0022c9a                avxSave
                0x00000000c0022cab                avxLoad
                0x00000000c0022cbc                avxInit
                0x00000000c0022cde                avxClose
                0x00000000c0022cdf                wouldSheSayYes
 *fill*         0x00000000c0022cf3        0xd 
 .text          0x00000000c0022d00       0x39 hw/fpu/x86/sse.32
                0x00000000c0022d00                absolutelyNoChanceInHell
                0x00000000c0022d00                sseDetect
                0x00000000c0022d18                sseSave
                0x00000000c0022d20                sseLoad
                0x00000000c0022d28                sseInit
                0x00000000c0022d38                sseClose
 *fill*         0x00000000c0022d39        0x7 
 .text          0x00000000c0022d40       0x49 hw/fpu/x86/x87.32
                0x00000000c0022d46                x87Detect
                0x00000000c0022d61                x87Save
                0x00000000c0022d68                x87Load
                0x00000000c0022d6f                x87Init
                0x00000000c0022d88                x87Close
 *fill*         0x00000000c0022d89        0x3 
 .text          0x00000000c0022d8c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0022db1        0x0 crtn.32
 *fill*         0x00000000c0022db1        0x3 
 .text          0x00000000c0022db4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0022db4                __divdi3
 *fill*         0x00000000c0022eff        0x1 
 .text          0x00000000c0022f00      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0022f00                __moddi3
 *fill*         0x00000000c002307e        0x2 
 .text          0x00000000c0023080       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0023080                __udivdi3
 *fill*         0x00000000c002317f        0x1 
 .text          0x00000000c0023180      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0023180                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c00232a0        0x0
 .iplt          0x00000000c00232a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002329a        0xf
 .init          0x00000000c002329a        0x3 crti.32
                0x00000000c002329a                _init
 .init          0x00000000c002329d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c00232a2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c00232a7        0x2 crtn.32

.fini           0x00000000c00232a9        0xa
 .fini          0x00000000c00232a9        0x3 crti.32
                0x00000000c00232a9                _fini
 .fini          0x00000000c00232ac        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c00232b1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c00232b4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c00232b4       0x23 core/computer.32
                0x00000000c00232b4                Computer::~Computer()
                0x00000000c00232b4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c00232d8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c00232d8       0x2a core/computer.32
                0x00000000c00232d8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0023302       0x21
 .text._Z10idleCommonv
                0x00000000c0023302       0x21 core/idle.32
                0x00000000c0023302                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0023324        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0023324        0x2 core/unixfile.32
                0x00000000c0023324                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0023324                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0023326       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0023326       0x42 core/unixfile.32
                0x00000000c0023326                LinkedList<UnixFile>::LinkedList()
                0x00000000c0023326                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0023368       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0023368       0xd3 core/unixfile.32
                0x00000000c0023368                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002343c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002343c        0x7 core/unixfile.32
                0x00000000c002343c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0023444       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0023444       0xa1 core/unixfile.32
                0x00000000c0023444                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00234e6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00234e6        0x8 core/unixfile.32
                0x00000000c00234e6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00234ee       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c00234ee       0x1a hal/device.32
                0x00000000c00234ee                DriverlessDevice::~DriverlessDevice()
                0x00000000c00234ee                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0023508       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0023508       0x2a hal/device.32
                0x00000000c0023508                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0023532       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0023532       0xdc hal/device.32
                0x00000000c0023532                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c002360e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c002360e       0x42 hal/device.32
                0x00000000c002360e                LinkedList<Device>::LinkedList()
                0x00000000c002360e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0023650       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0023650       0x1c hal/timer.32
                0x00000000c0023650                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c002366c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c002366c        0x7 hal/timer.32
                0x00000000c002366c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0023674       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0023674       0xb8 hal/timer.32
                0x00000000c0023674                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002372c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002372c       0xda hal/timer.32
                0x00000000c002372c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0023808       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0023808       0x23 hw/acpi.32
                0x00000000c0023808                ACPI::~ACPI()
                0x00000000c0023808                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002382c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002382c       0x2a hw/acpi.32
                0x00000000c002382c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0023858        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0023858        0x2 hw/acpi.32
                0x00000000c0023858                LinkedList<Device>::~LinkedList()
                0x00000000c0023858                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002385c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002385c       0x1c hw/acpi.32
                0x00000000c002385c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0023878        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0023878        0x7 hw/acpi.32
                0x00000000c0023878                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0023880       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0023880       0xb8 hw/acpi.32
                0x00000000c0023880                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c0023938       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0023938       0x23 hw/cpu.32
                0x00000000c0023938                CPU::~CPU()
                0x00000000c0023938                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c002395c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c002395c       0x2a hw/cpu.32
                0x00000000c002395c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0023988        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0023988        0x2 thr/prcssthr.32
                0x00000000c0023988                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0023988                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c002398c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c002398c       0x49 thr/prcssthr.32
                0x00000000c002398c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c002398c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00239d8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00239d8       0x42 thr/prcssthr.32
                0x00000000c00239d8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00239d8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0023a1c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0023a1c        0x8 thr/prcssthr.32
                0x00000000c0023a1c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0023a24        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0023a24        0xd vm86/x87em.32
                0x00000000c0023a24                Vm::_FPUState::_FPUState()
                0x00000000c0023a24                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c0023a32       0x23
 .text._ZN3PCID2Ev
                0x00000000c0023a32       0x23 hw/bus/pci.32
                0x00000000c0023a32                PCI::~PCI()
                0x00000000c0023a32                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0023a56       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0023a56       0x2a hw/bus/pci.32
                0x00000000c0023a56                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0023a80       0x23
 .text._ZN3IDED2Ev
                0x00000000c0023a80       0x23 hw/diskctrl/ide.32
                0x00000000c0023a80                IDE::~IDE()
                0x00000000c0023a80                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0023aa4       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0023aa4       0x2a hw/diskctrl/ide.32
                0x00000000c0023aa4                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0023ace       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0023ace       0x23 hw/diskctrl/satabus.32
                0x00000000c0023ace                SATABus::~SATABus()
                0x00000000c0023ace                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0023af2       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0023af2       0x2a hw/diskctrl/satabus.32
                0x00000000c0023af2                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0023b1c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0023b1c       0x23 hw/diskphys/ata.32
                0x00000000c0023b1c                ATA::~ATA()
                0x00000000c0023b1c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0023b40       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0023b40       0x2a hw/diskphys/ata.32
                0x00000000c0023b40                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0023b6a       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0023b6a       0x23 hw/diskphys/atapi.32
                0x00000000c0023b6a                ATAPI::~ATAPI()
                0x00000000c0023b6a                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0023b8e       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0023b8e       0x2a hw/diskphys/atapi.32
                0x00000000c0023b8e                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0023bb8       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0023bb8       0x23 hw/diskphys/sata.32
                0x00000000c0023bb8                SATA::~SATA()
                0x00000000c0023bb8                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0023bdc       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0023bdc       0x2a hw/diskphys/sata.32
                0x00000000c0023bdc                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0023c06       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0023c06       0x23 hw/diskphys/satapi.32
                0x00000000c0023c06                SATAPI::~SATAPI()
                0x00000000c0023c06                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0023c2a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0023c2a       0x2a hw/diskphys/satapi.32
                0x00000000c0023c2a                SATAPI::~SATAPI()

.text._ZN3AVXD2Ev
                0x00000000c0023c54       0x23
 .text._ZN3AVXD2Ev
                0x00000000c0023c54       0x23 hw/fpu/avx.32
                0x00000000c0023c54                AVX::~AVX()
                0x00000000c0023c54                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c0023c78       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c0023c78       0x2a hw/fpu/avx.32
                0x00000000c0023c78                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c0023ca4       0x23
 .text._ZN3MMXD2Ev
                0x00000000c0023ca4       0x23 hw/fpu/mmx.32
                0x00000000c0023ca4                MMX::~MMX()
                0x00000000c0023ca4                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c0023cc8       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c0023cc8       0x2a hw/fpu/mmx.32
                0x00000000c0023cc8                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c0023cf4       0x23
 .text._ZN3SSED2Ev
                0x00000000c0023cf4       0x23 hw/fpu/sse.32
                0x00000000c0023cf4                SSE::~SSE()
                0x00000000c0023cf4                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c0023d18       0x2a
 .text._ZN3SSED0Ev
                0x00000000c0023d18       0x2a hw/fpu/sse.32
                0x00000000c0023d18                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c0023d42       0x23
 .text._ZN3x87D2Ev
                0x00000000c0023d42       0x23 hw/fpu/x87.32
                0x00000000c0023d42                x87::~x87()
                0x00000000c0023d42                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c0023d66       0x2a
 .text._ZN3x87D0Ev
                0x00000000c0023d66       0x2a hw/fpu/x87.32
                0x00000000c0023d66                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c0023d90       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0023d90       0x23 hw/intctrl/apic.32
                0x00000000c0023d90                IOAPIC::~IOAPIC()
                0x00000000c0023d90                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0023db4       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0023db4       0x2a hw/intctrl/apic.32
                0x00000000c0023db4                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c0023dde       0x23
 .text._ZN4APICD2Ev
                0x00000000c0023dde       0x23 hw/intctrl/apic.32
                0x00000000c0023dde                APIC::~APIC()
                0x00000000c0023dde                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c0023e02       0x2a
 .text._ZN4APICD0Ev
                0x00000000c0023e02       0x2a hw/intctrl/apic.32
                0x00000000c0023e02                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c0023e2c       0x23
 .text._ZN3PICD2Ev
                0x00000000c0023e2c       0x23 hw/intctrl/pic.32
                0x00000000c0023e2c                PIC::~PIC()
                0x00000000c0023e2c                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c0023e50       0x2a
 .text._ZN3PICD0Ev
                0x00000000c0023e50       0x2a hw/intctrl/pic.32
                0x00000000c0023e50                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0023e7c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0023e7c       0x23 hw/timer/apictimer.32
                0x00000000c0023e7c                APICTimer::~APICTimer()
                0x00000000c0023e7c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0023ea0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0023ea0       0x2a hw/timer/apictimer.32
                0x00000000c0023ea0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0023ecc       0x23
 .text._ZN3PITD2Ev
                0x00000000c0023ecc       0x23 hw/timer/pit.32
                0x00000000c0023ecc                PIT::~PIT()
                0x00000000c0023ecc                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0023ef0       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0023ef0       0x2a hw/timer/pit.32
                0x00000000c0023ef0                PIT::~PIT()

.rodata         0x00000000c0023f1a     0x405a
                0x00000000c0023f1a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0023f1a        0x2 
 .ctors         0x00000000c0023f1c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0023f20        0x4 core/unixfile.32
 .ctors         0x00000000c0023f24        0x4 thr/prcssthr.32
 .ctors         0x00000000c0023f28        0x4 vm86/x87em.32
 .ctors         0x00000000c0023f2c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0023f30                end_ctors = .
                0x00000000c0023f30                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0023f30        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0023f34        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0023f34                __DTOR_END__
                0x00000000c0023f38                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0023f38        0x8 
 .rodata        0x00000000c0023f40      0x101 acpica/utclib.32
                0x00000000c0023f40                AcpiGbl_Ctypes
 *fill*         0x00000000c0024041        0x3 
 .rodata        0x00000000c0024044       0x18 core/malloc.32
 *fill*         0x00000000c002405c        0x4 
 .rodata        0x00000000c0024060      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c0024180       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c00241d6        0xa 
 .rodata        0x00000000c00241e0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00245e0       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0024629      0x321 core/computer.32
                                        0x323 (size before relaxing)
 *fill*         0x00000000c002494a        0x2 
 .rodata.str1.4
                0x00000000c002494c       0xcc core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0024a18       0x2c core/computer.32
                0x00000000c0024a18                vtable for Computer
 .rodata.str1.1
                0x00000000c0024a44       0x2a core/kheap.32
 *fill*         0x00000000c0024a6e        0x2 
 .rodata.str1.4
                0x00000000c0024a70       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0024aa0       0x99 core/main.32
 *fill*         0x00000000c0024b39        0x3 
 .rodata.str1.4
                0x00000000c0024b3c       0x1f core/main.32
 .rodata.str1.1
                0x00000000c0024b5b       0xea core/physmgr.32
                                         0xee (size before relaxing)
 *fill*         0x00000000c0024c45        0x3 
 .rodata.str1.4
                0x00000000c0024c48       0xc9 core/physmgr.32
 .rodata.str1.1
                0x00000000c0024d11       0x39 core/pipe.32
 *fill*         0x00000000c0024d4a        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0024d4c       0x1c core/pipe.32
                0x00000000c0024d4c                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024d68       0x69 core/terminal.32
 *fill*         0x00000000c0024dd1        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0024dd4       0x1c core/terminal.32
                0x00000000c0024dd4                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0024df0       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0024e12       0x15 core/unixfile.32
 *fill*         0x00000000c0024e27        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0024e28       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0024e73        0x8 core/unixfile.32
 *fill*         0x00000000c0024e7b        0x1 
 .rodata.str1.4
                0x00000000c0024e7c       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0024e9c       0x1c core/unixfile.32
                0x00000000c0024e9c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024eb8       0x1c core/unixfile.32
                0x00000000c0024eb8                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024ed4      0x1b8 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002508c      0x194 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0025220       0x83 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c00252a3       0x11 dbg/kconsole.32
 *fill*         0x00000000c00252a3        0x1 
 .rodata        0x00000000c00252a4      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00253f4       0x25 fs/vfs.32
                                         0x33 (size before relaxing)
 *fill*         0x00000000c0025419        0x3 
 .rodata.str1.4
                0x00000000c002541c       0x54 fs/vfs.32
 .rodata._ZTV10Filesystem
                0x00000000c0025470       0x68 fs/vfs.32
                0x00000000c0025470                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00254d8       0x1c fs/vfs.32
                0x00000000c00254d8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00254f4       0x1c fs/vfs.32
                0x00000000c00254f4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0025510       0x2c hal/bus.32
                0x00000000c0025510                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c002553c       0x30 hal/buzzer.32
                0x00000000c002553c                vtable for Buzzer
 .rodata.str1.1
                0x00000000c002556c       0x1e hal/clock.32
 *fill*         0x00000000c002558a        0x2 
 .rodata._ZTV5Clock
                0x00000000c002558c       0x3c hal/clock.32
                0x00000000c002558c                vtable for Clock
 *fill*         0x00000000c00255c8       0x18 
 .rodata        0x00000000c00255e0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0025610       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0025668       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0025668       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0025668       0x2c hal/device.32
                0x00000000c0025668                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0025694       0x2c hal/device.32
                0x00000000c0025694                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00256c0       0x2c hal/diskctrl.32
                0x00000000c00256c0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00256ec       0x38 hal/diskphys.32
                0x00000000c00256ec                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0025724       0x26 hal/fpu.32
 *fill*         0x00000000c002574a        0x2 
 .rodata._ZTV3FPU
                0x00000000c002574c       0x38 hal/fpu.32
                0x00000000c002574c                vtable for FPU
 .rodata        0x00000000c0025784      0x370 hal/intctrl.32
 .rodata._ZTV19InterruptController
                0x00000000c0025af4       0x48 hal/intctrl.32
                0x00000000c0025af4                vtable for InterruptController
 .rodata        0x00000000c0025b3c       0x53 hal/keybrd.32
 *fill*         0x00000000c0025b8f        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0025b90       0x34 hal/keybrd.32
                0x00000000c0025b90                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0025bc4       0x9a hal/logidisk.32
 *fill*         0x00000000c0025c5e        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0025c60       0x2c hal/logidisk.32
                0x00000000c0025c60                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0025c8c       0x2c hal/mouse.32
                0x00000000c0025c8c                vtable for Mouse
 .rodata.str1.1
                0x00000000c0025cb8        0xb hal/partition.32
 *fill*         0x00000000c0025cc3        0x1 
 .rodata._ZTV6Serial
                0x00000000c0025cc4       0x44 hal/serial.32
                0x00000000c0025cc4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0025d08       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0025d08        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0025d08       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0025d08       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0025d08       0x30 hal/timer.32
                0x00000000c0025d08                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0025d38       0x10 hal/vcache.32
                0x00000000c0025d38                vtable for VCache
 .rodata.str1.1
                0x00000000c0025d48       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c0025db0       0x48 hal/video.32
                0x00000000c0025db0                vtable for Video
 .rodata.str1.4
                0x00000000c0025df8      0x123 hw/acpi.32
 .rodata.str1.1
                0x00000000c0025f1b      0x2a0 hw/acpi.32
                                        0x2ba (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00261bb       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00261bb        0x8 hw/acpi.32
 *fill*         0x00000000c00261bb        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00261bc       0x2c hw/acpi.32
                0x00000000c00261bc                vtable for ACPI
 .rodata.str1.1
                0x00000000c00261e8      0x563 hw/cpu.32
                                        0x570 (size before relaxing)
 *fill*         0x00000000c002674b        0x1 
 .rodata._ZTV3CPU
                0x00000000c002674c       0x2c hw/cpu.32
                0x00000000c002674c                vtable for CPU
 .rodata.str1.1
                0x00000000c0026778       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c0026789       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00267c5       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 *fill*         0x00000000c0026865        0x3 
 .rodata.str1.4
                0x00000000c0026868      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c00269a6       0x2f krnl/powctrl.32
 .rodata.str1.1
                0x00000000c00269d5       0x31 krnl/rand.32
 *fill*         0x00000000c0026a06        0x2 
 .rodata.str1.4
                0x00000000c0026a08       0x4c net/ethernet.32
 .rodata.str1.1
                0x00000000c0026a54       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0026a99       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c0026aed       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c0026b19       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0026b61      0x247 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c0026da8       0x57 thr/prcssthr.32
 *fill*         0x00000000c0026dff        0x1 
 .rodata.str1.4
                0x00000000c0026e00      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0026f0c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0026f0c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0026f0c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0026f0c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0026f0c       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0026fac       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0026fdc       0x58 vm86/x87em.32
 .rodata        0x00000000c0027034       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c0027070       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00270b1        0x3 
 .rodata._ZTV3FAT
                0x00000000c00270b4       0x68 fs/fat/vfslink.32
                0x00000000c00270b4                vtable for FAT
 .rodata.str1.1
                0x00000000c002711c       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c0027137        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c0027138       0x68 fs/iso9660/vfslink.32
                0x00000000c0027138                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00271a0       0xc3 hal/sound/sndcard.32
                                         0xdb (size before relaxing)
 *fill*         0x00000000c0027263        0x1 
 .rodata._ZTV9SoundCard
                0x00000000c0027264       0x34 hal/sound/sndcard.32
                0x00000000c0027264                vtable for SoundCard
 .rodata.str1.1
                0x00000000c0027298       0x6e hal/sound/sndport.32
 *fill*         0x00000000c0027306        0x2 
 .rodata.str1.4
                0x00000000c0027308       0x93 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002739b      0x1cd hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0027568       0x2c hw/bus/pci.32
                0x00000000c0027568                vtable for PCI
 .rodata.str1.1
                0x00000000c0027594       0xa3 hw/diskctrl/ide.32
 *fill*         0x00000000c0027637        0x1 
 .rodata._ZTV3IDE
                0x00000000c0027638       0x2c hw/diskctrl/ide.32
                0x00000000c0027638                vtable for IDE
 .rodata.str1.4
                0x00000000c0027664       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata.str1.1
                0x00000000c0027688       0xec hw/diskctrl/satabus.32
 .rodata._ZTV7SATABus
                0x00000000c0027774       0x2c hw/diskctrl/satabus.32
                0x00000000c0027774                vtable for SATABus
 .rodata.str1.1
                0x00000000c00277a0       0x4b hw/diskphys/ata.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c00277eb        0x1 
 .rodata._ZTV3ATA
                0x00000000c00277ec       0x38 hw/diskphys/ata.32
                0x00000000c00277ec                vtable for ATA
 .rodata.str1.1
                0x00000000c0027824       0x2a hw/diskphys/atapi.32
                                         0x6f (size before relaxing)
 *fill*         0x00000000c002784e        0x2 
 .rodata._ZTV5ATAPI
                0x00000000c0027850       0x38 hw/diskphys/atapi.32
                0x00000000c0027850                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0027888      0x202 hw/diskphys/sata.32
 *fill*         0x00000000c0027a8a        0x2 
 .rodata._ZTV4SATA
                0x00000000c0027a8c       0x38 hw/diskphys/sata.32
                0x00000000c0027a8c                vtable for SATA
 .rodata.str1.1
                0x00000000c0027ac4      0x134 hw/diskphys/satapi.32
                                        0x16c (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c0027bf8       0x38 hw/diskphys/satapi.32
                0x00000000c0027bf8                vtable for SATAPI
 .rodata.str1.1
                0x00000000c0027c30        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c0027c38       0x38 hw/fpu/avx.32
                0x00000000c0027c38                vtable for AVX
 .rodata.str1.1
                0x00000000c0027c70        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0027c78       0x38 hw/fpu/mmx.32
                0x00000000c0027c78                vtable for MMX
 .rodata.str1.1
                0x00000000c0027cb0        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0027cb8       0x38 hw/fpu/sse.32
                0x00000000c0027cb8                vtable for SSE
 .rodata        0x00000000c0027cf0        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0027cf8       0x38 hw/fpu/x87.32
                0x00000000c0027cf8                vtable for x87
 .rodata        0x00000000c0027d30       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0027e08       0x48 hw/intctrl/apic.32
                0x00000000c0027e08                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0027e50       0x2c hw/intctrl/apic.32
                0x00000000c0027e50                vtable for IOAPIC
 .rodata        0x00000000c0027e7c       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c0027e9e        0x2 
 .rodata._ZTV3PIC
                0x00000000c0027ea0       0x48 hw/intctrl/pic.32
                0x00000000c0027ea0                vtable for PIC
 .rodata.str1.1
                0x00000000c0027ee8        0xb hw/timer/apictimer.32
 *fill*         0x00000000c0027ef3        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0027ef4       0x30 hw/timer/apictimer.32
                0x00000000c0027ef4                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0027f24       0x1d hw/timer/pit.32
 *fill*         0x00000000c0027f41        0x3 
 .rodata._ZTV3PIT
                0x00000000c0027f44       0x30 hw/timer/pit.32
                0x00000000c0027f44                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0027f74      0x7c1
 *(.data)
 .data          0x00000000c0027f74        0x0 crti.32
 .data          0x00000000c0027f74        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0027f74                __dso_handle
 .data          0x00000000c0027f78        0x0 acpica/utclib.32
 .data          0x00000000c0027f78        0x0 core/malloc.32
 .data          0x00000000c0027f78        0x0 libk/string.32
 .data          0x00000000c0027f78        0x0 fs/fat/diskio.32
 .data          0x00000000c0027f78        0x0 fs/fat/ff.32
 .data          0x00000000c0027f78        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0027f78        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0027f78        0x0 compat/inlines.32
 .data          0x00000000c0027f78        0x0 compat/resolve.32
 .data          0x00000000c0027f78        0x0 core/computer.32
 .data          0x00000000c0027f78        0x0 core/gdt.32
 .data          0x00000000c0027f78        0x0 core/idle.32
 .data          0x00000000c0027f78        0x0 core/idt.32
 .data          0x00000000c0027f78        0x4 core/kheap.32
 *fill*         0x00000000c0027f7c        0x4 
 .data          0x00000000c0027f80      0x142 core/main.32
                0x00000000c0027f80                titleScreen
 *fill*         0x00000000c00280c2        0x2 
 .data          0x00000000c00280c4        0x4 core/physmgr.32
                0x00000000c00280c4                Phys::bitmap
 .data          0x00000000c00280c8        0x0 core/pipe.32
 *fill*         0x00000000c00280c8       0x18 
 .data          0x00000000c00280e0       0x60 core/terminal.32
                0x00000000c00280e0                VgaText::hiddenOut
                0x00000000c0028100                ansiToVGAMappings
 .data          0x00000000c0028140        0x0 core/tss.32
 .data          0x00000000c0028140        0x4 core/unixfile.32
                0x00000000c0028140                UnixFile::nextFd
 .data          0x00000000c0028144       0x15 core/virtmgr.32
                0x00000000c0028144                Virt::pageAllocPtr
                0x00000000c0028148                Virt::bitmap
                0x00000000c002814c                Virt::swapfileSectorsPerPage
                0x00000000c0028150                Virt::swapfileLength
                0x00000000c0028154                Virt::swapfileSector
                0x00000000c0028158                Virt::swapfileDrive
 *fill*         0x00000000c0028159        0x3 
 .data          0x00000000c002815c        0x4 coreobjs/c++.32
                0x00000000c002815c                __stack_chk_guard
 .data          0x00000000c0028160        0x0 dbg/kconsole.32
 .data          0x00000000c0028160        0x0 fs/vfs.32
 .data          0x00000000c0028160        0x0 hal/bus.32
 .data          0x00000000c0028160        0x0 hal/buzzer.32
 .data          0x00000000c0028160        0x0 hal/clock.32
 .data          0x00000000c0028160        0x0 hal/device.32
 .data          0x00000000c0028160        0x0 hal/diskctrl.32
 .data          0x00000000c0028160        0x0 hal/diskphys.32
 .data          0x00000000c0028160        0x0 hal/fpu.32
 .data          0x00000000c0028160      0x2a0 hal/intctrl.32
                0x00000000c0028160                Krnl::exceptionNames
 .data          0x00000000c0028400        0x0 hal/keybrd.32
 .data          0x00000000c0028400        0x0 hal/logidisk.32
 .data          0x00000000c0028400        0x0 hal/mouse.32
 .data          0x00000000c0028400        0x0 hal/partition.32
 .data          0x00000000c0028400        0x0 hal/serial.32
 .data          0x00000000c0028400        0x0 hal/timer.32
 .data          0x00000000c0028400        0x0 hal/vcache.32
 .data          0x00000000c0028400        0x0 hal/video.32
 .data          0x00000000c0028400       0x10 hw/acpi.32
                0x00000000c0028400                legacyIRQRemaps
 *fill*         0x00000000c0028410       0x10 
 .data          0x00000000c0028420      0x2a4 hw/cpu.32
                0x00000000c0028420                cpuNameList
                0x00000000c00286c0                lastCode
 .data          0x00000000c00286c4        0x0 hw/ports.32
 .data          0x00000000c00286c4        0x0 hw/smp.32
 *fill*         0x00000000c00286c4       0x1c 
 .data          0x00000000c00286e0       0x4d krnl/env.32
                0x00000000c00286e0                defaultSysEnv
 .data          0x00000000c002872d        0x0 krnl/panic.32
 .data          0x00000000c002872d        0x0 krnl/powctrl.32
 .data          0x00000000c002872d        0x0 krnl/rand.32
 .data          0x00000000c002872d        0x0 net/ethernet.32
 .data          0x00000000c002872d        0x0 reg/registry.32
 .data          0x00000000c002872d        0x0 sys/sc_eject.32
 .data          0x00000000c002872d        0x0 sys/sc_exit.32
 .data          0x00000000c002872d        0x0 sys/sc_getcwd.32
 .data          0x00000000c002872d        0x0 sys/sc_getpid.32
 .data          0x00000000c002872d        0x0 sys/sc_getramdata.32
 .data          0x00000000c002872d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c002872d        0x0 sys/sc_loaddll.32
 .data          0x00000000c002872d        0x0 sys/sc_read.32
 .data          0x00000000c002872d        0x0 sys/sc_sbrk.32
 .data          0x00000000c002872d        0x0 sys/sc_setcwd.32
 .data          0x00000000c002872d        0x0 sys/sc_settime.32
 .data          0x00000000c002872d        0x0 sys/sc_timezone.32
 .data          0x00000000c002872d        0x0 sys/sc_write.32
 .data          0x00000000c002872d        0x0 sys/sc_wsbe.32
 .data          0x00000000c002872d        0x0 sys/sc_yield.32
 .data          0x00000000c002872d        0x0 sys/syscalls.32
 .data          0x00000000c002872d        0x0 thr/elf.32
 *fill*         0x00000000c002872d        0x3 
 .data          0x00000000c0028730        0x4 thr/prcssthr.32
                0x00000000c0028730                Thr::nextPID
 .data          0x00000000c0028734        0x0 vm86/vm8086.32
 .data          0x00000000c0028734        0x0 vm86/x87em.32
 .data          0x00000000c0028734        0x0 fs/fat/vfslink.32
 .data          0x00000000c0028734        0x1 fs/iso9660/vfslink.32
                0x00000000c0028734                recentDriveletter
 .data          0x00000000c0028735        0x0 hal/sound/sndcard.32
 .data          0x00000000c0028735        0x0 hal/sound/sndport.32
 .data          0x00000000c0028735        0x0 hw/bus/isa.32
 .data          0x00000000c0028735        0x0 hw/bus/pci.32
 .data          0x00000000c0028735        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0028735        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0028735        0x0 hw/diskphys/ata.32
 .data          0x00000000c0028735        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0028735        0x0 hw/diskphys/sata.32
 .data          0x00000000c0028735        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0028735        0x0 hw/fpu/avx.32
 .data          0x00000000c0028735        0x0 hw/fpu/mmx.32
 .data          0x00000000c0028735        0x0 hw/fpu/sse.32
 .data          0x00000000c0028735        0x0 hw/fpu/x87.32
 .data          0x00000000c0028735        0x0 hw/intctrl/apic.32
 .data          0x00000000c0028735        0x0 hw/intctrl/pic.32
 .data          0x00000000c0028735        0x0 hw/timer/apictimer.32
 .data          0x00000000c0028735        0x0 hw/timer/pit.32
 .data          0x00000000c0028735        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0028735        0x0 crtn.32
 .data          0x00000000c0028735        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0028735        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0028735        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0028735        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0028738        0x0
 .got           0x00000000c0028738        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0028738        0x0
 .got.plt       0x00000000c0028738        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0028738        0x0
 .igot.plt      0x00000000c0028738        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0028738        0x0
 .tm_clone_table
                0x00000000c0028738        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0028738        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0028735      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0028735        0x3 
 .eh_frame      0x00000000c0028738        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0028738        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0028738       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0028790       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00287d0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002883c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c00288c0        0x0
 .rel.got       0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c00288c0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c00288c0     0x23e8
                0x00000000c00288c0                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c00288c0        0x0 crti.32
 .bss           0x00000000c00288c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00288e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00288e4       0x1c 
 .bss           0x00000000c0028900      0x378 core/malloc.32
 .bss           0x00000000c0028c78        0x0 libk/string.32
 .bss           0x00000000c0028c78        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028c78        0x8 
 .bss           0x00000000c0028c80       0x88 fs/fat/ff.32
 .bss           0x00000000c0028d08        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028d08        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0028d08        0x0 compat/inlines.32
 .bss           0x00000000c0028d08        0x0 compat/resolve.32
 .bss           0x00000000c0028d08        0x6 core/computer.32
                0x00000000c0028d08                Krnl::computer
                0x00000000c0028d0c                Krnl::preemptionOn
                0x00000000c0028d0d                Krnl::schedulingOn
 *fill*         0x00000000c0028d0e        0x2 
 .bss           0x00000000c0028d10        0x6 core/gdt.32
                0x00000000c0028d10                gdtDescr
 .bss           0x00000000c0028d16        0x0 core/idle.32
 *fill*         0x00000000c0028d16        0x2 
 .bss           0x00000000c0028d18        0x6 core/idt.32
                0x00000000c0028d18                idtDescr
 .bss           0x00000000c0028d1e        0x0 core/kheap.32
 *fill*         0x00000000c0028d1e        0x2 
 .bss           0x00000000c0028d20        0x4 core/main.32
                0x00000000c0028d20                sysBootSettings
 .bss           0x00000000c0028d24       0x29 core/physmgr.32
                0x00000000c0028d24                Phys::forbidEvictions
                0x00000000c0028d28                Phys::currentPagePointer
                0x00000000c0028d2c                Phys::highestMem
                0x00000000c0028d30                Phys::oldPercent
                0x00000000c0028d34                Phys::usedPages
                0x00000000c0028d38                Phys::usablePages
                0x00000000c0028d3c                Phys::dmaUsage
 .bss           0x00000000c0028d4d        0x0 core/pipe.32
 *fill*         0x00000000c0028d4d       0x13 
 .bss           0x00000000c0028d60       0x29 core/terminal.32
                0x00000000c0028d60                textModeImplementation
                0x00000000c0028d80                terminalCycle
                0x00000000c0028d84                activeTerminal
                0x00000000c0028d88                VgaText::graphicMode
 *fill*         0x00000000c0028d89        0x1 
 .bss           0x00000000c0028d8a        0x2 core/tss.32
                0x00000000c0028d8a                doubleFaultSelector
 *fill*         0x00000000c0028d8c       0x14 
 .bss           0x00000000c0028da0       0x84 core/unixfile.32
                0x00000000c0028da0                sfileLpt
                0x00000000c0028de0                sfileCom
                0x00000000c0028e04                sfileNul
                0x00000000c0028e08                sfilePnt
                0x00000000c0028e0c                sfileAux
                0x00000000c0028e10                sfileCon
                0x00000000c0028e14                initialFilesAdded
                0x00000000c0028e18                unixFileLinkedList
 .bss           0x00000000c0028e24       0x10 core/virtmgr.32
                0x00000000c0028e24                twswaps
                0x00000000c0028e28                swapBalance
                0x00000000c0028e2c                Virt::swapfileBitmap
                0x00000000c0028e30                firstVAS
 .bss           0x00000000c0028e34        0x0 coreobjs/c++.32
 .bss           0x00000000c0028e34        0x0 dbg/kconsole.32
 .bss           0x00000000c0028e34        0x4 fs/vfs.32
                0x00000000c0028e34                installedFilesystems
 .bss           0x00000000c0028e38        0x0 hal/bus.32
 .bss           0x00000000c0028e38        0x4 hal/buzzer.32
                0x00000000c0028e38                systemBuzzer
 .bss           0x00000000c0028e3c        0x8 hal/clock.32
                0x00000000c0028e3c                User::dstOn
                0x00000000c0028e3d                User::timezoneHalfHourOffset
                0x00000000c0028e40                User::timezoneHourOffset
 .bss           0x00000000c0028e44        0x0 hal/device.32
 .bss           0x00000000c0028e44        0x0 hal/diskctrl.32
 .bss           0x00000000c0028e44        0x0 hal/diskphys.32
 .bss           0x00000000c0028e44        0x0 hal/fpu.32
 .bss           0x00000000c0028e44        0x8 hal/intctrl.32
                0x00000000c0028e44                gpFaultIntercept
                0x00000000c0028e48                Krnl::fpuOwner
 *fill*         0x00000000c0028e4c       0x14 
 .bss           0x00000000c0028e60      0x429 hal/keybrd.32
                0x00000000c0028e60                keyboardWaitingTaskList
                0x00000000c0028e64                keyboardSetupYet
                0x00000000c0028e68                guiKeyboardHandler
                0x00000000c0028e80                keystates
 *fill*         0x00000000c0029289       0x17 
 .bss           0x00000000c00292a0       0x88 hal/logidisk.32
                0x00000000c00292a0                diskAssignments
                0x00000000c00292c0                disks
 .bss           0x00000000c0029328        0x4 hal/mouse.32
                0x00000000c0029328                guiMouseHandler
 .bss           0x00000000c002932c        0x0 hal/partition.32
 .bss           0x00000000c002932c        0x0 hal/serial.32
 .bss           0x00000000c002932c        0x4 hal/timer.32
                0x00000000c002932c                milliTenthsSinceBoot
 .bss           0x00000000c0029330        0x0 hal/vcache.32
 .bss           0x00000000c0029330        0x4 hal/video.32
                0x00000000c0029330                screen
 *fill*         0x00000000c0029334        0xc 
 .bss           0x00000000c0029340      0x480 hw/acpi.32
                0x00000000c0029340                systemSleepFunction
                0x00000000c0029344                systemResetFunction
                0x00000000c0029348                systemShutdownFunction
                0x00000000c002934c                nextACPITable
                0x00000000c0029360                acpiTables
                0x00000000c0029560                usingXSDT
                0x00000000c0029564                MADTpointer
                0x00000000c0029568                RSDTpointer
                0x00000000c002956c                RSDPpointer
                0x00000000c0029570                nextAPICNMI
                0x00000000c0029580                apicNMIInfo
                0x00000000c0029600                legacyIRQFlags
                0x00000000c0029620                ioapicDiscoveryNumber
                0x00000000c0029640                ioapicFoundInMADT
                0x00000000c0029660                ioapicAddresses
                0x00000000c00296e0                ioapicGSIBase
                0x00000000c0029760                processorDiscoveryNumber
                0x00000000c0029780                matchingAPICID
                0x00000000c00297a0                processorID
 .bss           0x00000000c00297c0       0x10 hw/cpu.32
                0x00000000c00297c0                lastD
                0x00000000c00297c4                lastC
                0x00000000c00297c8                lastB
                0x00000000c00297cc                lastA
 .bss           0x00000000c00297d0        0x0 hw/ports.32
 .bss           0x00000000c00297d0        0x1 hw/smp.32
                0x00000000c00297d0                Krnl::bspID
 *fill*         0x00000000c00297d1        0x3 
 .bss           0x00000000c00297d4        0x8 krnl/env.32
                0x00000000c00297d4                Krnl::userEnv
                0x00000000c00297d8                Krnl::systemEnv
 .bss           0x00000000c00297dc        0x9 krnl/panic.32
                0x00000000c00297dc                Krnl::guiProgramFaultHandler
                0x00000000c00297e0                Krnl::guiPanicHandler
                0x00000000c00297e4                Krnl::kernelInPanic
 *fill*         0x00000000c00297e5       0x1b 
 .bss           0x00000000c0029800       0x48 krnl/powctrl.32
                0x00000000c0029800                Krnl::powCtrlOnBattery
                0x00000000c0029820                Krnl::currentPowerSettings
                0x00000000c0029844                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0029848        0x9 krnl/rand.32
                0x00000000c0029848                Krnl::lcg
                0x00000000c0029850                Krnl::initedRand
 .bss           0x00000000c0029851        0x0 net/ethernet.32
 .bss           0x00000000c0029851        0x0 reg/registry.32
 .bss           0x00000000c0029851        0x0 sys/sc_eject.32
 .bss           0x00000000c0029851        0x0 sys/sc_exit.32
 .bss           0x00000000c0029851        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0029851        0x0 sys/sc_getpid.32
 .bss           0x00000000c0029851        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0029851        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0029851        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0029851        0x0 sys/sc_read.32
 .bss           0x00000000c0029851        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0029851        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0029851        0x0 sys/sc_settime.32
 .bss           0x00000000c0029851        0x0 sys/sc_timezone.32
 .bss           0x00000000c0029851        0x0 sys/sc_write.32
 .bss           0x00000000c0029851        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0029851        0x0 sys/sc_yield.32
 *fill*         0x00000000c0029851        0xf 
 .bss           0x00000000c0029860      0x200 sys/syscalls.32
                0x00000000c0029860                systemCallHandlers
 .bss           0x00000000c0029a60      0x7a4 thr/elf.32
                0x00000000c0029a60                Thr::driverLookupNext
                0x00000000c0029a80                Thr::driverLookupLen
                0x00000000c0029c80                Thr::driverLookupAddr
                0x00000000c0029e80                Thr::driverNameLookup
                0x00000000c002a080                Thr::kernelSymbols
                0x00000000c002a100                Thr::kernelStringTable
                0x00000000c002a180                Thr::kernelSymbolTable
                0x00000000c002a200                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002a204        0x4 
 .bss           0x00000000c002a208       0x68 thr/prcssthr.32
                0x00000000c002a208                cleanerThread
                0x00000000c002a20c                weNeedTheCleanerToNotBlock
                0x00000000c002a210                retValLockStuff
                0x00000000c002a214                retValSchedLock
                0x00000000c002a218                lockStuffLock
                0x00000000c002a21c                schedulerLock
                0x00000000c002a220                taskSwitchesPostponedFlag
                0x00000000c002a224                postponeTaskSwitchesCounter
                0x00000000c002a228                irqDisableCounter
                0x00000000c002a22c                terminatedTaskList
                0x00000000c002a238                sleepingTaskList
                0x00000000c002a244                taskList
                0x00000000c002a250                kernelProcess
 *fill*         0x00000000c002a270       0x10 
 .bss           0x00000000c002a280       0x40 vm86/vm8086.32
                0x00000000c002a280                Vm::vmRetV
                0x00000000c002a284                Vm::vmDone
                0x00000000c002a285                Vm::vmReady
                0x00000000c002a288                Vm::vm86Thread
                0x00000000c002a28c                Vm::vmToHostCommsPtr
                0x00000000c002a2a0                Vm::vmToHostComms
 .bss           0x00000000c002a2c0       0x48 vm86/x87em.32
                0x00000000c002a2c0                Vm::fpuState
 *fill*         0x00000000c002a308       0x18 
 .bss           0x00000000c002a320       0xf0 fs/fat/vfslink.32
                0x00000000c002a320                FAT::fats
                0x00000000c002a340                FAT::vfsToFatRemaps
                0x00000000c002a3c0                fatToVFSRemaps
 *fill*         0x00000000c002a410       0x10 
 .bss           0x00000000c002a420      0x820 fs/iso9660/vfslink.32
                0x00000000c002a420                recentSector
                0x00000000c002a440                recentBuffer
 .bss           0x00000000c002ac40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002ac40        0x0 hal/sound/sndport.32
 .bss           0x00000000c002ac40        0x0 hw/bus/isa.32
 .bss           0x00000000c002ac40        0xd hw/bus/pci.32
                0x00000000c002ac40                thePCI
 .bss           0x00000000c002ac4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002ac4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002ac4d        0x3 
 .bss           0x00000000c002ac50        0x8 hw/diskphys/ata.32
                0x00000000c002ac50                ataSectorsWritten
                0x00000000c002ac54                ataSectorsRead
 .bss           0x00000000c002ac58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002ac58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002ac58        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c002ac58        0x0 hw/fpu/avx.32
 .bss           0x00000000c002ac58        0x0 hw/fpu/mmx.32
 .bss           0x00000000c002ac58        0x0 hw/fpu/sse.32
 .bss           0x00000000c002ac58        0x0 hw/fpu/x87.32
 *fill*         0x00000000c002ac58        0x8 
 .bss           0x00000000c002ac60       0x41 hw/intctrl/apic.32
                0x00000000c002ac60                noOfIOAPICs
                0x00000000c002ac80                ioapics
                0x00000000c002aca0                IOAPICsSetupYet
 .bss           0x00000000c002aca1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c002aca1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002aca1        0x3 
 .bss           0x00000000c002aca4        0x4 hw/timer/pit.32
                0x00000000c002aca4                pitFreq
 .bss           0x00000000c002aca8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002aca8        0x0 crtn.32
 .bss           0x00000000c002aca8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002aca8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002aca8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002aca8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002aca8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d090                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
