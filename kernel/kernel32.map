Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c40a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002ff                asmQuickAcquireLock
                0x00000000c000031d                asmQuickReleaseLock
                0x00000000c0000329                asmAcquireLock
                0x00000000c000034a                asmReleaseLock
                0x00000000c000035d                loadGDT
                0x00000000c000037d                memcpy
 *fill*         0x00000000c0000382        0xe 
 .text          0x00000000c0000390      0x79e acpica/utclib.32
                0x00000000c0000390                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004d0                memset
                0x00000000c0000540                strlen
                0x00000000c0000570                strpbrk
                0x00000000c00005b0                strtok
                0x00000000c0000600                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b2e      0xfad core/malloc.32
                0x00000000c0000c99                dlfree
                0x00000000c0000ff4                dlmalloc
                0x00000000c0001531                dlrealloc
                0x00000000c00016d4                dlmemalign
                0x00000000c00017f7                dlcalloc
                0x00000000c0001891                dlcfree
                0x00000000c0001896                dlindependent_calloc
                0x00000000c00018bb                dlindependent_comalloc
                0x00000000c00018d2                dlvalloc
                0x00000000c00018fd                dlpvalloc
                0x00000000c0001933                dlmalloc_trim
                0x00000000c0001940                dlmalloc_usable_size
                0x00000000c0001971                dlmallinfo
                0x00000000c0001a40                dlmalloc_stats
                0x00000000c0001a51                dlmallopt
 *fill*         0x00000000c0001adb        0x1 
 .text          0x00000000c0001adc      0x1f2 libk/ctype.32
                0x00000000c0001adc                isblank
                0x00000000c0001afc                iscntrl
                0x00000000c0001b1c                isdigit
                0x00000000c0001b38                islower
                0x00000000c0001b54                isspace
                0x00000000c0001b7c                isupper
                0x00000000c0001b98                isalpha
                0x00000000c0001bc8                isalnum
                0x00000000c0001bf8                ispunct
                0x00000000c0001c38                isgraph
                0x00000000c0001c68                isprint
                0x00000000c0001c90                isxdigit
 .text          0x00000000c0001cce        0x0 libk/string.32
 .text          0x00000000c0001cce       0x51 fs/fat/diskio.32
                0x00000000c0001cce                disk_status
                0x00000000c0001cd1                disk_initialize
                0x00000000c0001cd4                disk_read
                0x00000000c0001cea                disk_write
                0x00000000c0001d00                disk_ioctl
 .text          0x00000000c0001d1f     0x3d4b fs/fat/ff.32
                0x00000000c0003abb                f_mount
                0x00000000c0003b1d                f_open
                0x00000000c0003de8                f_read
                0x00000000c0003fe7                f_write
                0x00000000c000421b                f_sync
                0x00000000c00042d0                f_close
                0x00000000c00042ff                f_lseek
                0x00000000c00044a6                f_opendir
                0x00000000c0004571                f_closedir
                0x00000000c0004593                f_readdir
                0x00000000c0004625                f_stat
                0x00000000c00046a4                f_getfree
                0x00000000c00047a6                f_truncate
                0x00000000c000488a                f_unlink
                0x00000000c00049ac                f_mkdir
                0x00000000c0004b47                f_rename
                0x00000000c0004cfd                f_chmod
                0x00000000c0004da6                f_utime
                0x00000000c0004e54                f_getlabel
                0x00000000c0004fa5                f_setlabel
                0x00000000c0005135                f_expand
                0x00000000c0005295                f_mkfs
 *fill*         0x00000000c0005a6a        0x2 
 .text          0x00000000c0005a6c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a6c                ff_memalloc
                0x00000000c0005a84                ff_memfree
 *fill*         0x00000000c0005a9b        0x1 
 .text          0x00000000c0005a9c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a9c                ff_uni2oem
                0x00000000c0005b3c                ff_oem2uni
                0x00000000c0005bb4                ff_wtoupper
 .text          0x00000000c0005d44      0xc76 fs/iso9660/iso9660.32
                0x00000000c0005f63                isoReadDiscSector
                0x00000000c0005ffe                strnicmp
                0x00000000c00062b1                stricmp
                0x00000000c00062fd                iso_open
                0x00000000c0006387                iso_close
                0x00000000c00063a5                iso_read
                0x00000000c00064bb                iso_seek
                0x00000000c000653f                iso_tell
                0x00000000c0006570                iso_total
                0x00000000c000659b                fn_postprocess
                0x00000000c00065c1                iso_readdir
                0x00000000c00067b2                iso_reset
                0x00000000c00067bf                init_percd
                0x00000000c00068b9                iso_ioctl
                0x00000000c00068c1                fs_iso9660_init
                0x00000000c000694a                fs_iso9660_shutdown
 .text          0x00000000c00069ba      0x685 core/computer.32
                0x00000000c00069ba                Computer::close(int, int, void*)
                0x00000000c00069ff                Krnl::firstTask()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006be4                Computer::setBootMessage(char const*)
                0x00000000c0006be6                Computer::detectFeatures()
                0x00000000c0006df0                Computer::displayFeatures()
                0x00000000c0006df2                Computer::rdmsr(unsigned int)
                0x00000000c0006e1e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006e56                Computer::shutdown()
                0x00000000c0006e6e                Computer::restart()
                0x00000000c0006e86                Computer::sleep()
                0x00000000c0006e9a                Computer::nmiEnabled()
                0x00000000c0006ea6                Computer::readCMOS(unsigned char)
                0x00000000c0006ec0                Computer::enableNMI(bool)
                0x00000000c0006ed8                Computer::open(int, int, void*)
                0x00000000c0006fac                Computer::disableNMI()
                0x00000000c0006fbc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006fda                Computer::handleNMI()
 *fill*         0x00000000c000703f        0x1 
 .text          0x00000000c0007040      0x1cf core/gdt.32
                0x00000000c0007040                GDTEntry::setBase(unsigned int)
                0x00000000c000705c                GDTEntry::setLimit(unsigned int)
                0x00000000c000707a                GDT::GDT()
                0x00000000c000707a                GDT::GDT()
                0x00000000c0007090                GDT::addEntry(GDTEntry)
                0x00000000c00070b2                GDT::getNumberOfEntries()
                0x00000000c00070ba                GDT::flush()
                0x00000000c00070dc                GDT::setup()
 .text          0x00000000c000720f       0x1d core/idle.32
                0x00000000c000720f                idleFunction(void*)
 .text          0x00000000c000722c      0x464 core/idt.32
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000729e                IDTEntry::setOffset(unsigned int)
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00072be                IDT::addEntry(IDTEntry, int)
                0x00000000c00072d8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007310                IDT::flush()
                0x00000000c000732a                IDT::setup()
 .text          0x00000000c0007690      0x183 core/kheap.32
                0x00000000c0007690                sbrk
                0x00000000c0007725                mmap
                0x00000000c000773b                munmap
                0x00000000c0007751                liballoc_lock()
                0x00000000c000775e                liballoc_unlock()
                0x00000000c0007772                liballoc_alloc(int)
                0x00000000c000778a                liballoc_free(void*, int)
                0x00000000c00077a5                realloc
                0x00000000c00077b9                malloc
                0x00000000c00077c9                free
                0x00000000c00077d9                rfree
                0x00000000c00077e9                calloc
 .text          0x00000000c0007813       0xc3 core/main.32
                0x00000000c0007813                KeEntryPoint
 .text          0x00000000c00078d6      0x5dc core/physmgr.32
                0x00000000c00078d6                Phys::allocateDMA(unsigned long)
                0x00000000c00079ad                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c00079e0                Phys::setPageState(unsigned long, bool)
                0x00000000c0007a12                Phys::getPageState(unsigned long)
                0x00000000c0007a33                Phys::freePage(unsigned long)
                0x00000000c0007a95                Phys::allocatePage()
                0x00000000c0007b53                Phys::allocateContiguousPages(int)
                0x00000000c0007baf                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007be7                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007eb2      0x273 core/pipe.32
                0x00000000c0007eb2                Pipe::isAtty()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eda                Pipe::~Pipe()
                0x00000000c0007f02                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007fc2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00080be                Pipe::Pipe(int)
                0x00000000c00080be                Pipe::Pipe(int)
 *fill*         0x00000000c0008125        0x1 
 .text          0x00000000c0008126      0xaa0 core/terminal.32
                0x00000000c0008126                VgaText::isAtty()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000814e                VgaText::~VgaText()
                0x00000000c0008178                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008198                setTerminalScrollLock(bool)
                0x00000000c0008199                doTerminalCycle()
                0x00000000c000819a                addToTerminalCycle(VgaText*)
                0x00000000c000819b                scrollTerminalScrollLock(int)
                0x00000000c000819c                VgaText::updateTitle()
                0x00000000c000819e                VgaText::load()
                0x00000000c00081a0                VgaText::updateCursor()
                0x00000000c00081b6                VgaText::doANSI_SGR(int)
                0x00000000c000822a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000823a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000824a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000826a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008276                VgaText::setTitleColour(VgaColour)
                0x00000000c0008282                VgaText::setTitle(char*)
                0x00000000c0008284                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008296                VgaText::scrollScreen()
                0x00000000c000832e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008340                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00083d0                VgaText::getCursorX()
                0x00000000c00083d8                VgaText::getCursorY()
                0x00000000c00083e0                VgaText::setCursor(int, int)
                0x00000000c00083f7                setActiveTerminal(VgaText*)
                0x00000000c0008442                VgaText::clearScreen()
                0x00000000c0008490                VgaText::setCursorX(int)
                0x00000000c00084a8                VgaText::setCursorY(int)
                0x00000000c00084c0                VgaText::incrementCursor(bool)
                0x00000000c0008514                VgaText::decrementCursor(bool)
                0x00000000c0008536                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008604                VgaText::putchar(char)
                0x00000000c00086f0                VgaText::putx(unsigned int)
                0x00000000c0008736                VgaText::puts(char const*)
                0x00000000c000875c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00087a8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c0008a46                VgaText::receiveKey(unsigned char)
                0x00000000c0008ba0                VgaText::doUpdate()
                0x00000000c0008ba1                newTerminal(char*)
 *fill*         0x00000000c0008bc6        0x2 
 .text          0x00000000c0008bc8      0x1a1 core/tss.32
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bd8                TSS::setESP(unsigned long)
                0x00000000c0008bec                TSS::flush()
                0x00000000c0008c0c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008d69        0x1 
 .text          0x00000000c0008d6a      0x4c2 core/unixfile.32
                0x00000000c0008d6a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008dc0                ReservedFilename::isAtty()
                0x00000000c0008ddc                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008e3a                UnixFile::getFileDescriptor()
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c00090bc                UnixFile::~UnixFile()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c0009108                ReservedFilename::~ReservedFilename()
                0x00000000c000912f                getFromFileDescriptor(int)
 .text          0x00000000c000922c     0x1166 core/virtmgr.32
                0x00000000c000922c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009261                Virt::getPageState(unsigned long)
                0x00000000c0009285                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009396                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00093b4                Virt::swapIDToSector(unsigned long)
                0x00000000c00093c6                Virt::allocateSwapfilePage()
                0x00000000c0009444                Virt::virtualMemorySetup()
                0x00000000c000948f                Virt::setupPageSwapping(int)
                0x00000000c0009500                VAS::VAS()
                0x00000000c0009500                VAS::VAS()
                0x00000000c000953c                VAS::VAS(VAS*)
                0x00000000c000953c                VAS::VAS(VAS*)
                0x00000000c000956a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009596                VAS::getPageTableEntry(unsigned long)
                0x00000000c00095b5                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00096da                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00096fe                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009718                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009758                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000978c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00097b6                VAS::~VAS()
                0x00000000c00097b6                VAS::~VAS()
                0x00000000c000991a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009a1e                VAS::allocatePages(int, int)
                0x00000000c0009bf6                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009c14                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009cda                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009dc8                VAS::VAS(bool)
                0x00000000c0009dc8                VAS::VAS(bool)
                0x00000000c000a048                VAS::evict(unsigned long)
                0x00000000c000a10a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a1f8                VAS::scanForEviction()
                0x00000000c000a2d8                mapVASFirstTime
 .text          0x00000000c000a392       0x5f coreobjs/c++.32
                0x00000000c000a392                __cxa_atexit
                0x00000000c000a395                __cxa_finalize
                0x00000000c000a396                __stack_chk_fail
                0x00000000c000a3cc                __cxa_pure_virtual
                0x00000000c000a3dd                operator new[](unsigned long)
                0x00000000c000a3e2                operator delete(void*, unsigned long)
                0x00000000c000a3e7                operator delete[](void*)
                0x00000000c000a3ec                operator delete[](void*, unsigned long)
 .text          0x00000000c000a3f1      0x21c dbg/kconsole.32
                0x00000000c000a3f1                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a45c                Dbg::logc(char)
                0x00000000c000a47c                Dbg::logs(char*)
                0x00000000c000a499                Dbg::logWriteInt(unsigned int)
                0x00000000c000a4b7                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a4d8                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a60d        0x1 
 .text          0x00000000c000a60e      0xc5c fs/vfs.32
                0x00000000c000a60e                File::read(unsigned long long, void*, int*)
                0x00000000c000a666                File::write(unsigned long long, void*, int*)
                0x00000000c000a6be                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a716                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a744                File::isAtty()
                0x00000000c000a748                Directory::isAtty()
                0x00000000c000a74c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a752                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a758                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a75e                File::~File()
                0x00000000c000a75e                File::~File()
                0x00000000c000a782                File::~File()
                0x00000000c000a7ac                Directory::~Directory()
                0x00000000c000a7ac                Directory::~Directory()
                0x00000000c000a7d0                Directory::~Directory()
                0x00000000c000a7fa                Filesystem::Filesystem()
                0x00000000c000a7fa                Filesystem::Filesystem()
                0x00000000c000a81e                Filesystem::~Filesystem()
                0x00000000c000a81e                Filesystem::~Filesystem()
                0x00000000c000a82c                Filesystem::~Filesystem()
                0x00000000c000a850                Fs::getcwd(Process*, char*, int)
                0x00000000c000a87a                Fs::initVFS()
                0x00000000c000a8a4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aa4e                File::File(char const*, Process*)
                0x00000000c000aa4e                File::File(char const*, Process*)
                0x00000000c000ab0e                File::open(FileOpenMode)
                0x00000000c000ab6c                File::close()
                0x00000000c000abcc                File::seek(unsigned long long)
                0x00000000c000ac22                File::tell(unsigned long long*)
                0x00000000c000ac72                File::rewind()
                0x00000000c000ac86                File::unlink()
                0x00000000c000acd2                File::rename(char const*)
                0x00000000c000ad20                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ad7c                File::exists()
                0x00000000c000adba                File::stat(unsigned long long*, bool*)
                0x00000000c000ae1b                Fs::setcwd(Process*, char*)
                0x00000000c000af78                Directory::Directory(char const*, Process*)
                0x00000000c000af78                Directory::Directory(char const*, Process*)
                0x00000000c000b038                Directory::open()
                0x00000000c000b094                Directory::close()
                0x00000000c000b0f4                Directory::unlink()
                0x00000000c000b140                Directory::rename(char const*)
                0x00000000c000b18e                Directory::exists()
                0x00000000c000b1cc                Directory::read(dirent*)
                0x00000000c000b218                Directory::create()
                0x00000000c000b264                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b26a        0x2 
 .text          0x00000000c000b26c       0x86 hal/bus.32
                0x00000000c000b26c                Bus::Bus(char const*)
                0x00000000c000b26c                Bus::Bus(char const*)
                0x00000000c000b2a4                Bus::~Bus()
                0x00000000c000b2a4                Bus::~Bus()
                0x00000000c000b2c8                Bus::~Bus()
 .text          0x00000000c000b2f2       0x96 hal/buzzer.32
                0x00000000c000b2f2                beepThread(void*)
                0x00000000c000b32f                Krnl::beep(int, int, bool)
 .text          0x00000000c000b388      0x46d hal/clock.32
                0x00000000c000b388                User::loadClockSettings(int)
                0x00000000c000b3da                Clock::Clock(char const*)
                0x00000000c000b3da                Clock::Clock(char const*)
                0x00000000c000b410                Clock::~Clock()
                0x00000000c000b410                Clock::~Clock()
                0x00000000c000b434                Clock::~Clock()
                0x00000000c000b45e                Clock::timeInSecondsLocal()
                0x00000000c000b4a6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b4ff                datetimeToSeconds(datetime_t)
                0x00000000c000b62c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b68c                secondsToDatetime(unsigned long long)
                0x00000000c000b7d0                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b7f5        0x1 
 .text          0x00000000c000b7f6      0x464 hal/device.32
                0x00000000c000b7f6                Device::hibernate()
                0x00000000c000b7f8                Device::wake()
                0x00000000c000b7fa                Device::detect()
                0x00000000c000b7fc                Device::disableLegacy()
                0x00000000c000b7fe                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b800                DriverlessDevice::close(int, int, void*)
                0x00000000c000b804                DriverlessDevice::detect()
                0x00000000c000b806                DriverlessDevice::open(int, int, void*)
                0x00000000c000b81a                Device::~Device()
                0x00000000c000b81a                Device::~Device()
                0x00000000c000b828                Device::~Device()
                0x00000000c000b850                Device::findAndLoadDriver()
                0x00000000c000b85e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b884                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000b8c4                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b8ee                Device::getParent()
                0x00000000c000b8fa                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b918                Device::addChild(Device*)
                0x00000000c000b95c                Device::removeAllChildren()
                0x00000000c000b9a2                Device::hibernateAll()
                0x00000000c000b9d2                Device::wakeAll()
                0x00000000c000ba02                Device::detectAll()
                0x00000000c000ba32                Device::disableLegacyAll()
                0x00000000c000ba34                Device::loadDriversForAll()
                0x00000000c000ba36                Device::closeAll()
                0x00000000c000ba6c                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000baa2                Device::setName(char const*)
                0x00000000c000bab0                Device::Device(char const*)
                0x00000000c000bab0                Device::Device(char const*)
                0x00000000c000bbac                Device::getName()
                0x00000000c000bbb6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbb6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbec                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bc30                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bc5a        0x2 
 .text          0x00000000c000bc5c       0x86 hal/diskctrl.32
                0x00000000c000bc5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc94                HardDiskController::~HardDiskController()
                0x00000000c000bc94                HardDiskController::~HardDiskController()
                0x00000000c000bcb8                HardDiskController::~HardDiskController()
 .text          0x00000000c000bce2       0xe2 hal/diskphys.32
                0x00000000c000bce2                PhysicalDisk::eject()
                0x00000000c000bce6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bce6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bd4e                PhysicalDisk::startCache()
                0x00000000c000bd76                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd76                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd9a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000bdc4        0x0 hal/fpu.32
 .text          0x00000000c000bdc4      0x35d hal/intctrl.32
                0x00000000c000bdc4                int_handler
                0x00000000c000be4c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000be94                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bfcc                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c000                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c07f                setupINTS()
                0x00000000c000c0dc                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c121        0x1 
 .text          0x00000000c000c122      0x7b4 hal/keybrd.32
                0x00000000c000c122                startGUI(void*)
                0x00000000c000c18e                startGUIVESA(void*)
                0x00000000c000c1fa                sendKeyToTerminal(unsigned char)
                0x00000000c000c2c3                sendKeyboardToken(KeyboardToken)
                0x00000000c000c703                clearInternalKeybuffer(VgaText*)
                0x00000000c000c738                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c84c                Keyboard::Keyboard(char const*)
                0x00000000c000c84c                Keyboard::Keyboard(char const*)
                0x00000000c000c888                Keyboard::~Keyboard()
                0x00000000c000c888                Keyboard::~Keyboard()
                0x00000000c000c8ac                Keyboard::~Keyboard()
 .text          0x00000000c000c8d6      0x3ea hal/logidisk.32
                0x00000000c000c8d6                LogicalDisk::close(int, int, void*)
                0x00000000c000c8da                LogicalDisk::~LogicalDisk()
                0x00000000c000c8da                LogicalDisk::~LogicalDisk()
                0x00000000c000c8fe                LogicalDisk::~LogicalDisk()
                0x00000000c000c928                LogicalDisk::open(int, int, void*)
                0x00000000c000c93c                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000c974                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000c9ba                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c9ba                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ca70                LogicalDisk::assignDriveLetter()
                0x00000000c000cb26                LogicalDisk::mount()
                0x00000000c000cb6e                LogicalDisk::unmount()
                0x00000000c000cb7e                LogicalDisk::eject()
                0x00000000c000cb92                LogicalDisk::unassignDriveLetter()
                0x00000000c000cbe8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000cc54                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ccc0       0x86 hal/mouse.32
                0x00000000c000ccc0                Mouse::Mouse(char const*)
                0x00000000c000ccc0                Mouse::Mouse(char const*)
                0x00000000c000ccf8                Mouse::~Mouse()
                0x00000000c000ccf8                Mouse::~Mouse()
                0x00000000c000cd1c                Mouse::~Mouse()
 .text          0x00000000c000cd46      0x339 hal/partition.32
                0x00000000c000cd46                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cdee                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d07f        0x1 
 .text          0x00000000c000d080       0x86 hal/serial.32
                0x00000000c000d080                Serial::Serial(char const*)
                0x00000000c000d080                Serial::Serial(char const*)
                0x00000000c000d0b8                Serial::~Serial()
                0x00000000c000d0b8                Serial::~Serial()
                0x00000000c000d0dc                Serial::~Serial()
 *fill*         0x00000000c000d106        0x2 
 .text          0x00000000c000d108      0x234 hal/timer.32
                0x00000000c000d108                Timer::Timer(char const*)
                0x00000000c000d108                Timer::Timer(char const*)
                0x00000000c000d140                Timer::~Timer()
                0x00000000c000d140                Timer::~Timer()
                0x00000000c000d164                Timer::~Timer()
                0x00000000c000d18e                Timer::read()
                0x00000000c000d199                setupTimer(int)
                0x00000000c000d1d4                timerHandler(unsigned int)
 .text          0x00000000c000d33c      0x3ce hal/vcache.32
                0x00000000c000d33c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d33c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d4a4                VCache::invalidateReadBuffer()
                0x00000000c000d4b4                VCache::writeWriteBuffer()
                0x00000000c000d500                VCache::~VCache()
                0x00000000c000d500                VCache::~VCache()
                0x00000000c000d554                VCache::~VCache()
                0x00000000c000d57c                VCache::write(unsigned long long, int, void*)
                0x00000000c000d692                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d70a      0x4b3 hal/video.32
                0x00000000c000d70a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d756                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000d7c6                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000d844                Video::clearScreen(unsigned int)
                0x00000000c000d878                Video::putpixel(int, int, unsigned int)
                0x00000000c000d886                Video::Video(char const*)
                0x00000000c000d886                Video::Video(char const*)
                0x00000000c000d8bc                Video::~Video()
                0x00000000c000d8bc                Video::~Video()
                0x00000000c000d8e0                Video::~Video()
                0x00000000c000d90a                Video::isMonochrome()
                0x00000000c000d916                Video::getWidth()
                0x00000000c000d922                Video::getHeight()
                0x00000000c000d92e                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000d9ea                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000db52                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000dbbd        0x3 
 .text          0x00000000c000dbc0     0x1307 hw/acpi.32
                0x00000000c000dbc0                ACPI::close(int, int, void*)
                0x00000000c000dc78                findRSDP()
                0x00000000c000dd08                loadACPITables(unsigned char*)
                0x00000000c000df6c                findRSDT(unsigned char*)
                0x00000000c000e0bc                findDataTable(unsigned char*, char*)
                0x00000000c000e134                scanMADT()
                0x00000000c000e608                ACPI::ACPI()
                0x00000000c000e608                ACPI::ACPI()
                0x00000000c000e65c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e744                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000e80c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000e814                ACPI::detectPCI()
                0x00000000c000ea1c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ea70                ACPI::sleep()
                0x00000000c000ea8c                ACPI::open(int, int, void*)
 *fill*         0x00000000c000eec7        0x1 
 .text          0x00000000c000eec8      0xb95 hw/cpu.32
                0x00000000c000eec8                CPU::close(int, int, void*)
                0x00000000c000eecc                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000eee8                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000ef00                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ef74                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000eff8                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f026                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f054                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f082                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f0b0                CPU::CPU()
                0x00000000c000f0b0                CPU::CPU()
                0x00000000c000f13e                CPU::displayFeatures()
                0x00000000c000f140                CPU::detectFeatures()
                0x00000000c000f804                CPU::setupSMEP()
                0x00000000c000f810                CPU::setupUMIP()
                0x00000000c000f81a                CPU::setupTSC()
                0x00000000c000f824                CPU::setupLargePages()
                0x00000000c000f82e                CPU::setupPAT()
                0x00000000c000f86a                CPU::setupMTRR()
                0x00000000c000f86c                CPU::setupGlobalPages()
                0x00000000c000f876                CPU::allowUsermodeDataAccess()
                0x00000000c000f888                CPU::prohibitUsermodeDataAccess()
                0x00000000c000f89a                CPU::setupSMAP()
                0x00000000c000f8a8                CPU::setupFeatures()
                0x00000000c000f974                CPU::open(int, int, void*)
 .text          0x00000000c000fa5d       0xd1 krnl/bootmsg.32
                0x00000000c000fa5d                KeDisplaySplashScreen()
                0x00000000c000facb                KeSetBootMessage(char const*)
 .text          0x00000000c000fb2e      0x581 krnl/env.32
                0x00000000c000fb2e                EnvVarContainer::getEnv(char const*)
                0x00000000c000fb6c                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fc2e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fc30                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000fe16                EnvVarContainer::__loadSystem()
                0x00000000c000fe30                EnvVarContainer::__loadUser()
                0x00000000c000fe32                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe32                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe54                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe54                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe84                Krnl::getEnv(Process*, char const*)
                0x00000000c000fee9                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000ff03                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000ff22                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000ff35                Krnl::deleteEnvSystem(char const*)
                0x00000000c000ff36                Krnl::deleteEnvUser(char const*)
                0x00000000c000ff37                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000ff38                Krnl::newProcessEnv(Process*)
                0x00000000c000ff5a                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000ffa6                Krnl::loadSystemEnv()
                0x00000000c000ffd4                Krnl::loadUserEnv()
                0x00000000c000fffa                Krnl::flushEnv()
                0x00000000c000fffb                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001001b                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00100af       0x94 krnl/inlines.32
                0x00000000c00100af                CPU::current()
                0x00000000c00100bb                operator new(unsigned long)
                0x00000000c00100c0                operator delete(void*)
                0x00000000c00100c5                disableIRQs()
                0x00000000c00100c7                enableIRQs()
                0x00000000c00100c9                lockScheduler()
                0x00000000c00100d1                unlockScheduler()
                0x00000000c00100e0                lockStuff()
                0x00000000c00100ee                unlockStuff()
                0x00000000c0010128                Virt::getAKernelVAS()
                0x00000000c001012e                __not_memcpy
 .text          0x00000000c0010143        0xc krnl/panic.32
                0x00000000c0010143                KePanic(char const*)
 .text          0x00000000c001014f      0x142 krnl/powctrl.32
                0x00000000c001014f                Krnl::powerThread(void*)
                0x00000000c001017d                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010193                Krnl::userIOReceived()
                0x00000000c001019e                Krnl::handlePowerButton()
                0x00000000c00101d3                Krnl::handleSleepButton()
                0x00000000c0010208                Krnl::setupPowerManager()
 *fill*         0x00000000c0010291        0x3 
 .text          0x00000000c0010294      0x190 krnl/resolve.32
                0x00000000c0010294                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010424      0x33f krnl/signal.32
                0x00000000c0010424                KiDefaultSignalHandlerAbort(int)
                0x00000000c0010431                KiDefaultSignalHandlerTerminate(int)
                0x00000000c001043e                KiSigKill(int)
                0x00000000c001044b                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001044c                KiDefaultSignalHandlerPause(int)
                0x00000000c0010459                KiDefaultSignalHandlerResume(int)
                0x00000000c0010466                KeInitSignals()
                0x00000000c00104c1                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010526                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00105a2                KeCheckSignal(SigHandlerBlock*)
                0x00000000c0010728                KeCompleteSignal(SigHandlerBlock*, int)
 .text          0x00000000c0010763      0xcfe krnl/syscalls.32
                0x00000000c0010763                SysSeekDir(regs*)
                0x00000000c0010768                SysTellDir(regs*)
                0x00000000c001076d                SysVerify(regs*)
                0x00000000c0010777                SysGetArgc(regs*)
                0x00000000c0010787                SysTTYName(regs*)
                0x00000000c001078f                SysFormatDisk(regs*)
                0x00000000c00107fc                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010846                SysGetDiskVolumeLabel(regs*)
                0x00000000c001089b                SysShutdown(regs*)
                0x00000000c00108f9                SysRealpath(regs*)
                0x00000000c001093c                SysReadDir(regs*)
                0x00000000c00109bc                SysIsATTY(regs*)
                0x00000000c0010a18                SysSeek(regs*)
                0x00000000c0010a71                SysTell(regs*)
                0x00000000c0010ae0                SysSize(regs*)
                0x00000000c0010b55                SysSizeFromFilename(regs*)
                0x00000000c0010c08                SysClose(regs*)
                0x00000000c0010c68                SysOpenDir(regs*)
                0x00000000c0010d79                SysCloseDir(regs*)
                0x00000000c0010dcd                SysMakeDir(regs*)
                0x00000000c0010e3f                SysWait(regs*)
                0x00000000c0010e5c                SysNotImpl(regs*)
                0x00000000c0010e77                SysPanic(regs*)
                0x00000000c0010e92                SysRmdir(regs*)
                0x00000000c0010ef9                SysUnlink(regs*)
                0x00000000c0010f60                SysGetArgv(regs*)
                0x00000000c0010fad                SysUSleep(regs*)
                0x00000000c0010fd6                SysSpawn(regs*)
                0x00000000c001103f                SysGetEnv(regs*)
                0x00000000c00110ee                SysSetFatAttrib(regs*)
                0x00000000c0011165                SysPipe(regs*)
                0x00000000c00111aa                SysGetUnixTime(regs*)
                0x00000000c00111be                string_ends_with(char const*, char const*)
                0x00000000c0011208                SysOpen(regs*)
                0x00000000c001140f                KeSystemCall(regs*, void*)
 .text          0x00000000c0011461      0x50e reg/registry.32
                0x00000000c0011461                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00115b9                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001170e                Reg::getLine(char*, char*, char*)
                0x00000000c0011745                Reg::readInt(char*, char*, int*)
                0x00000000c0011830                Reg::readString(char*, char*, char*, int)
                0x00000000c00118b1                Reg::readBool(char*, char*, bool*)
                0x00000000c00118d6                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0011902                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001192e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001196f       0x36 sys/eject.32
                0x00000000c001196f                SysEject(regs*)
 .text          0x00000000c00119a5       0x18 sys/exit.32
                0x00000000c00119a5                SysExit(regs*)
 .text          0x00000000c00119bd       0x1f sys/getcwd.32
                0x00000000c00119bd                SysGetCwd(regs*)
 .text          0x00000000c00119dc        0xc sys/getpid.32
                0x00000000c00119dc                SysGetPID(regs*)
 .text          0x00000000c00119e8       0x1a sys/getramdata.32
                0x00000000c00119e8                SysGetRAMData(regs*)
 .text          0x00000000c0011a02       0x82 sys/getvgaptr.32
                0x00000000c0011a02                SysGetVGAPtr(regs*)
 .text          0x00000000c0011a84       0xa8 sys/loaddll.32
                0x00000000c0011a84                SysLoadDLL(regs*)
 .text          0x00000000c0011b2c       0x68 sys/read.32
                0x00000000c0011b2c                SysRead(regs*)
 .text          0x00000000c0011b94       0x29 sys/registersignal.32
                0x00000000c0011b94                SysRegisterSignal(regs*)
 .text          0x00000000c0011bbd       0x55 sys/sbrk.32
                0x00000000c0011bbd                SysSbrk(regs*)
 .text          0x00000000c0011c12       0x1c sys/setcwd.32
                0x00000000c0011c12                SysSetCwd(regs*)
 .text          0x00000000c0011c2e       0x95 sys/settime.32
                0x00000000c0011c2e                SysSetTime(regs*)
 .text          0x00000000c0011cc3       0x4a sys/timezone.32
                0x00000000c0011cc3                SysTimezone(regs*)
 .text          0x00000000c0011d0d       0x68 sys/write.32
                0x00000000c0011d0d                SysWrite(regs*)
 .text          0x00000000c0011d75       0x62 sys/wsbe.32
                0x00000000c0011d75                SysWsbe(regs*)
 .text          0x00000000c0011dd7       0x25 sys/yield.32
                0x00000000c0011dd7                SysYield(regs*)
 .text          0x00000000c0011dfc     0x11e5 thr/elf.32
                0x00000000c0011dfc                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0012088                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001229e                Thr::runtimeReferenceHelper()
                0x00000000c00122b1                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0012300                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00125be                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012cf4                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012d26                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012d5d                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012d77                Thr::loadDLL(char const*, bool)
                0x00000000c0012fa8                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0012fe1        0x3 
 .text          0x00000000c0012fe4     0x1445 thr/prcssthr.32
                0x00000000c0012fe4                userModeEntryPoint(void*)
                0x00000000c001300c                changeTSS
                0x00000000c001303c                switchToThread(ThreadControlBlock*)
                0x00000000c00130f0                Process::addArgs(char**)
                0x00000000c0013150                Process::Process(char const*, Process*, char**)
                0x00000000c0013150                Process::Process(char const*, Process*, char**)
                0x00000000c0013404                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013404                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001367c                taskStartupFunction
                0x00000000c0013688                Semaphore::Semaphore(int)
                0x00000000c0013688                Semaphore::Semaphore(int)
                0x00000000c00136b8                Mutex::Mutex()
                0x00000000c00136b8                Mutex::Mutex()
                0x00000000c00136cc                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00137c4                Process::createUserThread()
                0x00000000c00137e4                setupMultitasking(void (*)())
                0x00000000c00138ec                schedule()
                0x00000000c001397c                Semaphore::tryAcquire()
                0x00000000c0013a48                Semaphore::assertLocked(char const*)
                0x00000000c0013ac0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013ae8                blockTask(TaskState)
                0x00000000c0013b18                waitTask(int, int*, int)
                0x00000000c0013b5c                milliTenthSleepUntil(unsigned int)
                0x00000000c0013bec                milliTenthSleep(unsigned int)
                0x00000000c0013bfc                sleep(unsigned int)
                0x00000000c0013c18                Semaphore::acquire()
                0x00000000c0013cd4                taskReturned
                0x00000000c0013d10                Thr::processFromPID(int)
                0x00000000c0013db0                unblockTask(ThreadControlBlock*)
                0x00000000c0013e54                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0014120                cleanerTaskFunction(void*)
                0x00000000c0014210                terminateTask(int)
                0x00000000c00142dc                Thr::terminateFromIRQ(int)
                0x00000000c00142ec                Semaphore::release()
 .text          0x00000000c0014429      0xb93 vm86/vm8086.32
                0x00000000c0014429                Vm::inbv(unsigned short)
                0x00000000c001443c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0014472                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0014482                Vm::getSegment(unsigned int)
                0x00000000c001448a                Vm::getOffset(unsigned int)
                0x00000000c001448f                Vm::mainloop2()
                0x00000000c00144c9                Vm::mainVm8086Loop(void*)
                0x00000000c00144d9                Vm::mainloop3(unsigned long)
                0x00000000c00144ff                Vm::initialise8086()
                0x00000000c0014542                Vm::finish8086()
                0x00000000c00145a3                Vm::getOutput8086(unsigned char*)
                0x00000000c00145c8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014681                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00147e9                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0014873                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0014884                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0014896                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00148a7                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00148bc                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00148d2                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00148e7                Vm::faultHandler(regs*)
 .text          0x00000000c0014fbc      0xa53 arch/i386/hal.32
                0x00000000c0014fbc                noCopro(unsigned long)
                0x00000000c0014fbd                nmiHandler(regs*, void*)
                0x00000000c0014fd6                doubleFault(regs*, void*)
                0x00000000c0014fef                displayDebugInfo(regs*)
                0x00000000c0015310                HalSystemIdle()
                0x00000000c0015386                displayProgramFault(char const*)
                0x00000000c00153d2                gpFault(regs*, void*)
                0x00000000c0015437                pgFault(regs*, void*)
                0x00000000c00154bd                otherISRHandler(regs*, void*)
                0x00000000c00154f1                opcodeFault(regs*, void*)
                0x00000000c0015571                i386SaveCoprocessor(void*)
                0x00000000c0015585                i386LoadCoprocessor(void*)
                0x00000000c0015599                x87EmulHandler(regs*, void*)
                0x00000000c0015636                HalInitialiseCoprocessor()
                0x00000000c00156e4                HalPanic(char const*)
                0x00000000c00157dd                HalQueryPerformanceCounter()
                0x00000000c00157f8                HalInitialise()
                0x00000000c001599e                HalMakeBeep(int)
                0x00000000c00159d8                HalGetRand()
                0x00000000c00159db                HalEndOfInterrupt(int)
                0x00000000c0015a0c                HalRestart()
                0x00000000c0015a0d                HalShutdown()
                0x00000000c0015a0e                HalSleep()
 *fill*         0x00000000c0015a0f        0x1 
 .text          0x00000000c0015a10      0x2f4 arch/i386/pic.32
                0x00000000c0015a10                picIoWait()
                0x00000000c0015a18                picDisable()
                0x00000000c0015a4c                picGetIRQReg(int)
                0x00000000c0015ad0                picOpen()
                0x00000000c0015c60                picEOI(int)
 .text          0x00000000c0015d04      0x64d arch/i386/rtc.32
                0x00000000c0015d04                RTC::open(int, int, void*)
                0x00000000c0015d08                RTC::close(int, int, void*)
                0x00000000c0015d0c                RTC::timeInSecondsUTC()
                0x00000000c0015d1e                RTC::timeInDatetimeUTC()
                0x00000000c0015d44                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015d82                RTC::~RTC()
                0x00000000c0015d82                RTC::~RTC()
                0x00000000c0015da6                RTC::~RTC()
                0x00000000c0015dd0                RTC::get_update_in_progress_flag()
                0x00000000c0015de8                RTC::completeRTCRefresh()
                0x00000000c00160a0                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0016253                rtcIRQHandler(regs*, void*)
                0x00000000c0016298                RTC::RTC()
                0x00000000c0016298                RTC::RTC()
 *fill*         0x00000000c0016351        0x3 
 .text          0x00000000c0016354      0x203 arch/i386/vga.32
                0x00000000c0016354                HalConsoleScroll(int, int)
                0x00000000c001645c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00164c8                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0016557        0x1 
 .text          0x00000000c0016558     0x13e7 fs/fat/vfslink.32
                0x00000000c0016558                FAT::getName()
                0x00000000c0016560                FAT::tell(void*, unsigned long long*)
                0x00000000c001659c                FAT::stat(void*, unsigned long long*)
                0x00000000c00165d8                FAT::~FAT()
                0x00000000c00165d8                FAT::~FAT()
                0x00000000c00165fc                FAT::~FAT()
                0x00000000c0016624                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00166c8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001678c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016960                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016b78                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016d38                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016ea4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016f04                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016f64                FAT::close(void*)
                0x00000000c0016fb8                FAT::closeDir(void*)
                0x00000000c001700c                FAT::seek(void*, unsigned long long)
                0x00000000c0017064                fatWrapperReadDisk
                0x00000000c00170a8                fatWrapperWriteDisk
                0x00000000c00170ec                fatWrapperIoctl
                0x00000000c0017208                FAT::FAT()
                0x00000000c0017208                FAT::FAT()
                0x00000000c001725c                FAT::fixFilepath(char*)
                0x00000000c0017298                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00173d0                FAT::openDir(char const*, void**)
                0x00000000c0017480                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017578                FAT::unlink(char const*)
                0x00000000c00175f8                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017784                FAT::rename(char const*, char const*)
                0x00000000c0017850                FAT::mkdir(char const*)
                0x00000000c00178d0                FAT::exists(char const*)
 *fill*         0x00000000c001793f        0x1 
 .text          0x00000000c0017940       0xc6 fs/iso9660/helper.32
                0x00000000c0017940                isoReadDiscSectorHelper
                0x00000000c001799c                iso_kprintf
                0x00000000c00179bc                iso_kprintfd
 .text          0x00000000c0017a06      0x586 fs/iso9660/vfslink.32
                0x00000000c0017a06                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017a0c                ISO9660::getName()
                0x00000000c0017a12                ISO9660::closeDir(void*)
                0x00000000c0017a1c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017a22                ISO9660::unlink(char const*)
                0x00000000c0017a28                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017a2e                ISO9660::rename(char const*, char const*)
                0x00000000c0017a34                ISO9660::mkdir(char const*)
                0x00000000c0017a3a                ISO9660::~ISO9660()
                0x00000000c0017a3a                ISO9660::~ISO9660()
                0x00000000c0017a5e                ISO9660::~ISO9660()
                0x00000000c0017a86                ISO9660::exists(char const*)
                0x00000000c0017a9a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017b3a                ISO9660::openDir(char const*, void**)
                0x00000000c0017bca                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017c0a                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017c42                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017c78                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017cb2                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017d84                ISO9660::close(void*)
                0x00000000c0017daa                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017e77                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017ef2                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017f64                ISO9660::ISO9660()
                0x00000000c0017f64                ISO9660::ISO9660()
 .text          0x00000000c0017f8c      0x26c hal/sound/sndcard.32
                0x00000000c0017f8c                SoundCard::beginPlayback()
                0x00000000c0017f9a                SoundCard::stopPlayback()
                0x00000000c0017fa8                SoundCard::SoundCard(char const*)
                0x00000000c0017fa8                SoundCard::SoundCard(char const*)
                0x00000000c0018046                SoundCard::~SoundCard()
                0x00000000c0018046                SoundCard::~SoundCard()
                0x00000000c001806a                SoundCard::~SoundCard()
                0x00000000c0018094                SoundCard::configureRates(int, int, int)
                0x00000000c00180c4                SoundCard::getSamples16(int, short*)
                0x00000000c0018120                SoundCard::getSamples32(int, int*)
                0x00000000c00181a6                SoundCard::addChannel(SoundPort*)
                0x00000000c00181e4                SoundCard::removeChannel(int)
 .text          0x00000000c00181f8      0x377 hal/sound/sndport.32
                0x00000000c00181f8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00181f8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018284                SoundPort::~SoundPort()
                0x00000000c0018284                SoundPort::~SoundPort()
                0x00000000c00182b8                SoundPort::unpause()
                0x00000000c00182c4                SoundPort::pause()
                0x00000000c00182d0                SoundPort::getBufferUsed()
                0x00000000c00182d8                SoundPort::getBufferSize()
                0x00000000c00182e0                SoundPort::buffer16(short*, int)
                0x00000000c001836c                SoundPort::buffer32(int*, int)
                0x00000000c00183f4                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00184b8                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001856f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001856f        0x1 
 .text          0x00000000c0018570      0xb49 hw/bus/pci.32
                0x00000000c0018570                PCI::open(int, int, void*)
                0x00000000c001858e                PCI::close(int, int, void*)
                0x00000000c0018592                PCI::PCI()
                0x00000000c0018592                PCI::PCI()
                0x00000000c001862c                PCI::readBAR8(unsigned int, int)
                0x00000000c0018648                PCI::readBAR16(unsigned int, int)
                0x00000000c0018666                PCI::readBAR32(unsigned int, int)
                0x00000000c0018682                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c00186a2                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c00186c4                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c00186e4                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018752                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00187fa                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001881e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0018846                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018890                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c00188b8                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c00188dc                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018900                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018928                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001898c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018a74                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018cee                PCI::checkBus(unsigned char)
                0x00000000c0018d14                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018e86                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018ffa                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0019066                PCI::detect()
 *fill*         0x00000000c00190b9        0x1 
 .text          0x00000000c00190ba      0xb5a hw/diskctrl/ide.32
                0x00000000c00190ba                IDE::close(int, int, void*)
                0x00000000c00190be                IDE::IDE()
                0x00000000c00190be                IDE::IDE()
                0x00000000c00190f2                IDE::prepareInterrupt(unsigned char)
                0x00000000c0019104                selectDrive(unsigned char, unsigned char)
                0x00000000c0019106                IDE::getBase(unsigned char)
                0x00000000c0019118                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c00191d8                IDE::read(unsigned char, unsigned char)
                0x00000000c0019286                IDE::waitInterrupt(unsigned char)
                0x00000000c00192ee                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001930a                ideChannel1IRQHandler(regs*, void*)
                0x00000000c0019326                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001936c                IDE::open(int, int, void*)
                0x00000000c001977a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0019846                IDE::detect()
                0x00000000c0019b06                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019bb6                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019c14      0x32a hw/diskctrl/satabus.32
                0x00000000c0019c14                SATABus::close(int, int, void*)
                0x00000000c0019c18                SATABus::detect()
                0x00000000c0019c1a                SATABus::SATABus()
                0x00000000c0019c1a                SATABus::SATABus()
                0x00000000c0019ca0                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019cd2                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d1a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d3a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d64                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019e74                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019f1e                SATABus::open(int, int, void*)
 .text          0x00000000c0019f3e      0x5f4 hw/diskphys/ata.32
                0x00000000c0019f3e                ATA::close(int, int, void*)
                0x00000000c0019f62                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019f64                ATA::ATA()
                0x00000000c0019f64                ATA::ATA()
                0x00000000c0019f92                ATA::flush(bool)
                0x00000000c0019fdc                ATA::readyForCommand()
                0x00000000c001a028                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a3a4                ATA::read(unsigned long long, int, void*)
                0x00000000c001a3f0                ATA::write(unsigned long long, int, void*)
                0x00000000c001a43c                ATA::detectCHS()
                0x00000000c001a466                ATA::open(int, int, void*)
 .text          0x00000000c001a532      0x60e hw/diskphys/atapi.32
                0x00000000c001a532                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a538                ATAPI::close(int, int, void*)
                0x00000000c001a55c                ATAPI::ATAPI()
                0x00000000c001a55c                ATAPI::ATAPI()
                0x00000000c001a58a                ATAPI::readyForCommand()
                0x00000000c001a5dc                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a89c                ATAPI::diskRemoved()
                0x00000000c001a8d6                ATAPI::eject()
                0x00000000c001a91e                ATAPI::diskInserted()
                0x00000000c001a92a                ATAPI::detectMedia()
                0x00000000c001a9e6                ATAPI::open(int, int, void*)
                0x00000000c001aac6                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ab40      0x402 hw/diskphys/sata.32
                0x00000000c001ab40                SATA::close(int, int, void*)
                0x00000000c001ab64                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ab66                SATA::open(int, int, void*)
                0x00000000c001ac10                SATA::SATA()
                0x00000000c001ac10                SATA::SATA()
                0x00000000c001ac3e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ae8a                SATA::read(unsigned long long, int, void*)
                0x00000000c001aed6                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001af42      0x5af hw/diskphys/satapi.32
                0x00000000c001af42                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001af48                SATAPI::close(int, int, void*)
                0x00000000c001af6c                SATAPI::SATAPI()
                0x00000000c001af6c                SATAPI::SATAPI()
                0x00000000c001af9a                SATAPI::diskRemoved()
                0x00000000c001af9c                SATAPI::diskInserted()
                0x00000000c001afb8                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b298                SATAPI::eject()
                0x00000000c001b2d4                SATAPI::detectMedia()
                0x00000000c001b2fa                SATAPI::open(int, int, void*)
                0x00000000c001b3fa                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b4f1        0x1 
 .text          0x00000000c001b4f2      0x455 hw/intctrl/apic.32
                0x00000000c001b4f2                IOAPIC::close(int, int, void*)
                0x00000000c001b4f8                apicGetBase()
                0x00000000c001b53a                IOAPIC::IOAPIC()
                0x00000000c001b53a                IOAPIC::IOAPIC()
                0x00000000c001b562                apicOpen()
                0x00000000c001b6c8                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b6fa                IOAPIC::read(int)
                0x00000000c001b722                IOAPIC::open(int, int, void*)
                0x00000000c001b816                IOAPIC::write(int, int)
                0x00000000c001b842                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b947        0x1 
 .text          0x00000000c001b948       0xf0 hw/timer/apictimer.32
                0x00000000c001b948                APICTimer::close(int, int, void*)
                0x00000000c001b950                apicTimerHandler(regs*, void*)
                0x00000000c001b978                APICTimer::open(int, int, void*)
                0x00000000c001b9e8                APICTimer::write(int)
                0x00000000c001ba10                APICTimer::APICTimer()
                0x00000000c001ba10                APICTimer::APICTimer()
 .text          0x00000000c001ba38      0x1aa hw/timer/pit.32
                0x00000000c001ba38                PIT::write(int)
                0x00000000c001babc                pitHandler(regs*, void*)
                0x00000000c001bae0                PIT::open(int, int, void*)
                0x00000000c001bb30                PIT::close(int, int, void*)
                0x00000000c001bb60                PIT::PIT()
                0x00000000c001bb60                PIT::PIT()
 *fill*         0x00000000c001bbe2        0xe 
 .text          0x00000000c001bbf0       0x83 arch/i386/avx.32
                0x00000000c001bbf0                avxDetect
                0x00000000c001bc1a                avxSave
                0x00000000c001bc2b                avxLoad
                0x00000000c001bc3c                avxInit
                0x00000000c001bc5e                avxClose
                0x00000000c001bc5f                wouldSheSayYes
 *fill*         0x00000000c001bc73        0xd 
 .text          0x00000000c001bc80      0x1d6 arch/i386/interrupt.32
                0x00000000c001bc80                isr0
                0x00000000c001bc90                isr1
                0x00000000c001bc9a                isr2
                0x00000000c001bca4                isr3
                0x00000000c001bcae                isr4
                0x00000000c001bcb8                isr5
                0x00000000c001bcc2                isr6
                0x00000000c001bccc                isr7
                0x00000000c001bcd6                isr8
                0x00000000c001bcde                isr9
                0x00000000c001bce8                isr10
                0x00000000c001bcf0                isr11
                0x00000000c001bcf8                isr12
                0x00000000c001bd00                isr13
                0x00000000c001bd08                isr14
                0x00000000c001bd10                isr15
                0x00000000c001bd1a                isr16
                0x00000000c001bd24                isr17
                0x00000000c001bd2e                isr18
                0x00000000c001bd38                irq3
                0x00000000c001bd42                irq4
                0x00000000c001bd4c                irq5
                0x00000000c001bd56                irq6
                0x00000000c001bd60                irq7
                0x00000000c001bd6a                irq8
                0x00000000c001bd74                irq9
                0x00000000c001bd7e                irq10
                0x00000000c001bd88                irq11
                0x00000000c001bd92                irq12
                0x00000000c001bd9c                irq13
                0x00000000c001bda6                irq14
                0x00000000c001bdb0                irq15
                0x00000000c001bdba                irq1
                0x00000000c001bdc1                irq2
                0x00000000c001bdc8                isr96
                0x00000000c001bdcf                irq0
                0x00000000c001bdd4                int_common_stub
                0x00000000c001bdd4                syscall_common_stub
                0x00000000c001be06                irq16
                0x00000000c001be10                irq17
                0x00000000c001be1a                irq18
                0x00000000c001be24                irq19
                0x00000000c001be2e                irq20
                0x00000000c001be38                irq21
                0x00000000c001be42                irq22
                0x00000000c001be4c                irq23
 *fill*         0x00000000c001be56        0xa 
 .text          0x00000000c001be60       0x10 arch/i386/rdrand.32
                0x00000000c001be60                i386GetRDRAND
 .text          0x00000000c001be70       0x39 arch/i386/sse.32
                0x00000000c001be70                absolutelyNoChanceInHell
                0x00000000c001be70                sseDetect
                0x00000000c001be88                sseSave
                0x00000000c001be90                sseLoad
                0x00000000c001be98                sseInit
                0x00000000c001bea8                sseClose
 *fill*         0x00000000c001bea9        0x7 
 .text          0x00000000c001beb0       0x49 arch/i386/x87.32
                0x00000000c001beb6                x87Detect
                0x00000000c001bed1                x87Save
                0x00000000c001bed8                x87Load
                0x00000000c001bedf                x87Init
                0x00000000c001bef8                x87Close
 *fill*         0x00000000c001bef9        0x3 
 .text          0x00000000c001befc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bf21        0x0 crtn.32
 *fill*         0x00000000c001bf21        0x3 
 .text          0x00000000c001bf24      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bf24                __divdi3
 *fill*         0x00000000c001c06f        0x1 
 .text          0x00000000c001c070      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c070                __moddi3
 *fill*         0x00000000c001c1ee        0x2 
 .text          0x00000000c001c1f0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c1f0                __udivdi3
 *fill*         0x00000000c001c2ef        0x1 
 .text          0x00000000c001c2f0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c2f0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c410        0x0
 .iplt          0x00000000c001c410        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c40a        0xf
 .init          0x00000000c001c40a        0x3 crti.32
                0x00000000c001c40a                _init
 .init          0x00000000c001c40d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c412        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c417        0x2 crtn.32

.fini           0x00000000c001c419        0xa
 .fini          0x00000000c001c419        0x3 crti.32
                0x00000000c001c419                _fini
 .fini          0x00000000c001c41c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c421        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c424       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c424       0x23 core/computer.32
                0x00000000c001c424                Computer::~Computer()
                0x00000000c001c424                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c448       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c448       0x2a core/computer.32
                0x00000000c001c448                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c472       0x21
 .text._Z10idleCommonv
                0x00000000c001c472       0x21 core/idle.32
                0x00000000c001c472                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c494        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c494        0x2 core/unixfile.32
                0x00000000c001c494                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c494                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c496       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c496       0x42 core/unixfile.32
                0x00000000c001c496                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c496                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c4d8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c4d8       0xd3 core/unixfile.32
                0x00000000c001c4d8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c5ac        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c5ac        0x7 core/unixfile.32
                0x00000000c001c5ac                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c5b4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c5b4       0xa1 core/unixfile.32
                0x00000000c001c5b4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c656        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c656        0x8 core/unixfile.32
                0x00000000c001c656                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c65e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c65e       0x1a hal/device.32
                0x00000000c001c65e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c65e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c678       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c678       0x2a hal/device.32
                0x00000000c001c678                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c6a2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c6a2       0xdc hal/device.32
                0x00000000c001c6a2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c77e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c77e       0x42 hal/device.32
                0x00000000c001c77e                LinkedList<Device>::LinkedList()
                0x00000000c001c77e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c7c0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c7c0       0x1c hal/timer.32
                0x00000000c001c7c0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c7dc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c7dc        0x7 hal/timer.32
                0x00000000c001c7dc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c7e4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c7e4       0xb8 hal/timer.32
                0x00000000c001c7e4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c89c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c89c       0xda hal/timer.32
                0x00000000c001c89c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c978       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c978       0x23 hw/acpi.32
                0x00000000c001c978                ACPI::~ACPI()
                0x00000000c001c978                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c99c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c99c       0x2a hw/acpi.32
                0x00000000c001c99c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c9c8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c9c8        0x2 hw/acpi.32
                0x00000000c001c9c8                LinkedList<Device>::~LinkedList()
                0x00000000c001c9c8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c9cc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c9cc       0x1c hw/acpi.32
                0x00000000c001c9cc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c9e8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c9e8        0x7 hw/acpi.32
                0x00000000c001c9e8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c9f0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c9f0       0xb8 hw/acpi.32
                0x00000000c001c9f0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001caa8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001caa8       0x23 hw/cpu.32
                0x00000000c001caa8                CPU::~CPU()
                0x00000000c001caa8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001cacc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001cacc       0x2a hw/cpu.32
                0x00000000c001cacc                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001caf8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001caf8        0x2 thr/prcssthr.32
                0x00000000c001caf8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001caf8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cafc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cafc       0x49 thr/prcssthr.32
                0x00000000c001cafc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001cafc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb48       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb48       0x42 thr/prcssthr.32
                0x00000000c001cb48                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001cb48                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cb8c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cb8c        0x8 thr/prcssthr.32
                0x00000000c001cb8c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cb94       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cb94       0x23 hw/bus/pci.32
                0x00000000c001cb94                PCI::~PCI()
                0x00000000c001cb94                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cbb8       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cbb8       0x2a hw/bus/pci.32
                0x00000000c001cbb8                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cbe2       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cbe2       0x23 hw/diskctrl/ide.32
                0x00000000c001cbe2                IDE::~IDE()
                0x00000000c001cbe2                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cc06       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cc06       0x2a hw/diskctrl/ide.32
                0x00000000c001cc06                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cc30       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cc30       0x23 hw/diskctrl/satabus.32
                0x00000000c001cc30                SATABus::~SATABus()
                0x00000000c001cc30                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cc54       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cc54       0x2a hw/diskctrl/satabus.32
                0x00000000c001cc54                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cc7e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cc7e       0x23 hw/diskphys/ata.32
                0x00000000c001cc7e                ATA::~ATA()
                0x00000000c001cc7e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cca2       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cca2       0x2a hw/diskphys/ata.32
                0x00000000c001cca2                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cccc       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cccc       0x23 hw/diskphys/atapi.32
                0x00000000c001cccc                ATAPI::~ATAPI()
                0x00000000c001cccc                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001ccf0       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001ccf0       0x2a hw/diskphys/atapi.32
                0x00000000c001ccf0                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cd1a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cd1a       0x23 hw/diskphys/sata.32
                0x00000000c001cd1a                SATA::~SATA()
                0x00000000c001cd1a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cd3e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cd3e       0x2a hw/diskphys/sata.32
                0x00000000c001cd3e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cd68       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cd68       0x23 hw/diskphys/satapi.32
                0x00000000c001cd68                SATAPI::~SATAPI()
                0x00000000c001cd68                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cd8c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cd8c       0x2a hw/diskphys/satapi.32
                0x00000000c001cd8c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cdb6       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cdb6       0x23 hw/intctrl/apic.32
                0x00000000c001cdb6                IOAPIC::~IOAPIC()
                0x00000000c001cdb6                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cdda       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cdda       0x2a hw/intctrl/apic.32
                0x00000000c001cdda                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ce04       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ce04       0x23 hw/timer/apictimer.32
                0x00000000c001ce04                APICTimer::~APICTimer()
                0x00000000c001ce04                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ce28       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ce28       0x2a hw/timer/apictimer.32
                0x00000000c001ce28                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ce54       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ce54       0x23 hw/timer/pit.32
                0x00000000c001ce54                PIT::~PIT()
                0x00000000c001ce54                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ce78       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ce78       0x2a hw/timer/pit.32
                0x00000000c001ce78                PIT::~PIT()

.rodata         0x00000000c001cea2     0x2a86
                0x00000000c001cea2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cea2        0x2 
 .ctors         0x00000000c001cea4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cea8        0x4 core/unixfile.32
 .ctors         0x00000000c001ceac        0x4 thr/prcssthr.32
 .ctors         0x00000000c001ceb0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ceb4                end_ctors = .
                0x00000000c001ceb4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ceb4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ceb8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ceb8                __DTOR_END__
                0x00000000c001cebc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cebc        0x4 
 .rodata        0x00000000c001cec0      0x101 acpica/utclib.32
                0x00000000c001cec0                AcpiGbl_Ctypes
 *fill*         0x00000000c001cfc1        0x3 
 .rodata        0x00000000c001cfc4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001cfdc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d026       0x1a 
 .rodata        0x00000000c001d040       0xed fs/fat/ff.32
 *fill*         0x00000000c001d12d       0x13 
 .rodata        0x00000000c001d140      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d540       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d551      0x115 core/computer.32
 *fill*         0x00000000c001d666        0x2 
 .rodata.str1.4
                0x00000000c001d668       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d6d0       0x2c core/computer.32
                0x00000000c001d6d0                vtable for Computer
 .rodata.str1.4
                0x00000000c001d6fc       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d72c        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d738       0x17 core/main.32
 *fill*         0x00000000c001d74f        0x1 
 .rodata.str1.4
                0x00000000c001d750       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d7f5       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d84d       0x39 core/pipe.32
 *fill*         0x00000000c001d886        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d888       0x1c core/pipe.32
                0x00000000c001d888                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d8a4       0x75 core/terminal.32
 *fill*         0x00000000c001d919        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d91c       0x1c core/terminal.32
                0x00000000c001d91c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d938       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d95a       0x15 core/unixfile.32
 *fill*         0x00000000c001d96f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d970       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d9bb        0x8 core/unixfile.32
 *fill*         0x00000000c001d9c3        0x1 
 .rodata.str1.4
                0x00000000c001d9c4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d9e4       0x1c core/unixfile.32
                0x00000000c001d9e4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001da00       0x1c core/unixfile.32
                0x00000000c001da00                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001da1c      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001db83      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dc8a       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dcbd       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dcbd        0x3 
 .rodata        0x00000000c001dcc0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001de10       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001de10       0x68 fs/vfs.32
                0x00000000c001de10                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001de78       0x1c fs/vfs.32
                0x00000000c001de78                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001de94       0x1c fs/vfs.32
                0x00000000c001de94                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001deb0       0x2c hal/bus.32
                0x00000000c001deb0                vtable for Bus
 .rodata.str1.1
                0x00000000c001dedc       0x1e hal/clock.32
 *fill*         0x00000000c001defa        0x2 
 .rodata._ZTV5Clock
                0x00000000c001defc       0x3c hal/clock.32
                0x00000000c001defc                vtable for Clock
 *fill*         0x00000000c001df38        0x8 
 .rodata        0x00000000c001df40       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001df70       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001dfc8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001dfc8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001dfc8       0x2c hal/device.32
                0x00000000c001dfc8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001dff4       0x2c hal/device.32
                0x00000000c001dff4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e020       0x2c hal/diskctrl.32
                0x00000000c001e020                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e04c       0x38 hal/diskphys.32
                0x00000000c001e04c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e084       0x3e hal/intctrl.32
 *fill*         0x00000000c001e0c2        0x2 
 .rodata.str1.4
                0x00000000c001e0c4       0x5d hal/intctrl.32
 .rodata        0x00000000c001e121       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e174       0x34 hal/keybrd.32
                0x00000000c001e174                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e1a8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e1ec       0x2c hal/logidisk.32
                0x00000000c001e1ec                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e218       0x2c hal/mouse.32
                0x00000000c001e218                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e244        0xb hal/partition.32
 *fill*         0x00000000c001e24f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e250       0x44 hal/serial.32
                0x00000000c001e250                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e294       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e294        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e294       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e294       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e294       0x30 hal/timer.32
                0x00000000c001e294                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e2c4       0x10 hal/vcache.32
                0x00000000c001e2c4                vtable for VCache
 .rodata.str1.1
                0x00000000c001e2d4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e33c       0x48 hal/video.32
                0x00000000c001e33c                vtable for Video
 .rodata.str1.4
                0x00000000c001e384       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e41f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e55b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e55b        0x8 hw/acpi.32
 *fill*         0x00000000c001e55b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e55c       0x2c hw/acpi.32
                0x00000000c001e55c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e588      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e6f5        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e6f8       0x2c hw/cpu.32
                0x00000000c001e6f8                vtable for CPU
 .rodata.str1.1
                0x00000000c001e724       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e760       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c001e7f1      0x1f1 krnl/signal.32
 *fill*         0x00000000c001e9e2        0x2 
 .rodata.str1.4
                0x00000000c001e9e4       0x26 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c001ea0a       0x97 krnl/syscalls.32
                                         0xa7 (size before relaxing)
 .rodata.str1.1
                0x00000000c001eaa1       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001eae6        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001eaf0       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001eb44       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001eb70      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001ed3c       0x57 thr/prcssthr.32
 *fill*         0x00000000c001ed93        0x1 
 .rodata.str1.4
                0x00000000c001ed94      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001eea0       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001eea0       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001eea0       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001eea0        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001eea0       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001ef40       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ef70      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001f0f2        0x2 
 .rodata.str1.4
                0x00000000c001f0f4       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001f167       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001f17c       0x3c arch/i386/rtc.32
                0x00000000c001f17c                vtable for RTC
 .rodata.str1.1
                0x00000000c001f1b8       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f1f9        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f1fc       0x68 fs/fat/vfslink.32
                0x00000000c001f1fc                vtable for FAT
 .rodata.str1.1
                0x00000000c001f264        0x3 fs/iso9660/helper.32
                                          0x5 (size before relaxing)
 .rodata.str1.1
                0x00000000c001f267       0x49 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001f2b0       0x68 fs/iso9660/vfslink.32
                0x00000000c001f2b0                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f318       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f35c       0x34 hal/sound/sndcard.32
                0x00000000c001f35c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f390       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f3cf       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f407       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f4a8       0x2c hw/bus/pci.32
                0x00000000c001f4a8                vtable for PCI
 .rodata.str1.1
                0x00000000c001f4d4       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f55b        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f55c       0x2c hw/diskctrl/ide.32
                0x00000000c001f55c                vtable for IDE
 .rodata.str1.4
                0x00000000c001f588       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f5ac       0x2c hw/diskctrl/satabus.32
                0x00000000c001f5ac                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f5d8       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f5ea        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f5ec       0x38 hw/diskphys/ata.32
                0x00000000c001f5ec                vtable for ATA
 .rodata.str1.1
                0x00000000c001f624        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f631        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f634       0x38 hw/diskphys/atapi.32
                0x00000000c001f634                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f66c       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f6e8       0x38 hw/diskphys/sata.32
                0x00000000c001f6e8                vtable for SATA
 .rodata.str1.1
                0x00000000c001f720      0x100 hw/diskphys/satapi.32
                                        0x10d (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f820       0x38 hw/diskphys/satapi.32
                0x00000000c001f820                vtable for SATAPI
 .rodata        0x00000000c001f858        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f860       0x2c hw/intctrl/apic.32
                0x00000000c001f860                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f88c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f8a7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f8a8       0x30 hw/timer/apictimer.32
                0x00000000c001f8a8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f8d8       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f8f5        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f8f8       0x30 hw/timer/pit.32
                0x00000000c001f8f8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f928      0x3a9
 *(.data)
 .data          0x00000000c001f928        0x0 crti.32
 .data          0x00000000c001f928        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f928                __dso_handle
 .data          0x00000000c001f92c        0x0 acpica/utclib.32
 .data          0x00000000c001f92c        0x0 core/malloc.32
 .data          0x00000000c001f92c        0x0 libk/ctype.32
 .data          0x00000000c001f92c        0x0 libk/string.32
 .data          0x00000000c001f92c        0x0 fs/fat/diskio.32
 .data          0x00000000c001f92c        0x0 fs/fat/ff.32
 .data          0x00000000c001f92c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f92c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f92c        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f92c        0x0 core/computer.32
 .data          0x00000000c001f92c        0x0 core/gdt.32
 .data          0x00000000c001f92c        0x0 core/idle.32
 .data          0x00000000c001f92c        0x0 core/idt.32
 .data          0x00000000c001f92c        0x4 core/kheap.32
 .data          0x00000000c001f930        0x0 core/main.32
 .data          0x00000000c001f930        0x4 core/physmgr.32
                0x00000000c001f930                Phys::bitmap
 .data          0x00000000c001f934        0x0 core/pipe.32
 *fill*         0x00000000c001f934        0xc 
 .data          0x00000000c001f940       0x60 core/terminal.32
                0x00000000c001f940                VgaText::hiddenOut
                0x00000000c001f960                ansiToVGAMappings
 .data          0x00000000c001f9a0        0x0 core/tss.32
 .data          0x00000000c001f9a0        0x4 core/unixfile.32
                0x00000000c001f9a0                UnixFile::nextFd
 .data          0x00000000c001f9a4       0x15 core/virtmgr.32
                0x00000000c001f9a4                Virt::pageAllocPtr
                0x00000000c001f9a8                Virt::bitmap
                0x00000000c001f9ac                Virt::swapfileSectorsPerPage
                0x00000000c001f9b0                Virt::swapfileLength
                0x00000000c001f9b4                Virt::swapfileSector
                0x00000000c001f9b8                Virt::swapfileDrive
 *fill*         0x00000000c001f9b9        0x3 
 .data          0x00000000c001f9bc        0x4 coreobjs/c++.32
                0x00000000c001f9bc                __stack_chk_guard
 .data          0x00000000c001f9c0        0x0 dbg/kconsole.32
 .data          0x00000000c001f9c0        0x0 fs/vfs.32
 .data          0x00000000c001f9c0        0x0 hal/bus.32
 .data          0x00000000c001f9c0        0x0 hal/buzzer.32
 .data          0x00000000c001f9c0        0x0 hal/clock.32
 .data          0x00000000c001f9c0        0x0 hal/device.32
 .data          0x00000000c001f9c0        0x0 hal/diskctrl.32
 .data          0x00000000c001f9c0        0x0 hal/diskphys.32
 .data          0x00000000c001f9c0        0x0 hal/fpu.32
 .data          0x00000000c001f9c0        0x0 hal/intctrl.32
 .data          0x00000000c001f9c0        0x0 hal/keybrd.32
 .data          0x00000000c001f9c0        0x0 hal/logidisk.32
 .data          0x00000000c001f9c0        0x0 hal/mouse.32
 .data          0x00000000c001f9c0        0x0 hal/partition.32
 .data          0x00000000c001f9c0        0x0 hal/serial.32
 .data          0x00000000c001f9c0        0x0 hal/timer.32
 .data          0x00000000c001f9c0        0x0 hal/vcache.32
 .data          0x00000000c001f9c0        0x0 hal/video.32
 .data          0x00000000c001f9c0       0x10 hw/acpi.32
                0x00000000c001f9c0                legacyIRQRemaps
 .data          0x00000000c001f9d0        0x4 hw/cpu.32
                0x00000000c001f9d0                lastCode
 *fill*         0x00000000c001f9d4        0xc 
 .data          0x00000000c001f9e0      0x142 krnl/bootmsg.32
                0x00000000c001f9e0                KiSplashScreen
 *fill*         0x00000000c001fb22       0x1e 
 .data          0x00000000c001fb40       0x4d krnl/env.32
                0x00000000c001fb40                defaultSysEnv
 .data          0x00000000c001fb8d        0x0 krnl/inlines.32
 .data          0x00000000c001fb8d        0x0 krnl/panic.32
 .data          0x00000000c001fb8d        0x0 krnl/powctrl.32
 .data          0x00000000c001fb8d        0x0 krnl/resolve.32
 *fill*         0x00000000c001fb8d       0x13 
 .data          0x00000000c001fba0       0x4c krnl/signal.32
                0x00000000c001fba0                KiDefaultSignalHandlers
 *fill*         0x00000000c001fbec       0x14 
 .data          0x00000000c001fc00       0xcc krnl/syscalls.32
                0x00000000c001fc00                systemCallHandlers
 .data          0x00000000c001fccc        0x0 reg/registry.32
 .data          0x00000000c001fccc        0x0 sys/eject.32
 .data          0x00000000c001fccc        0x0 sys/exit.32
 .data          0x00000000c001fccc        0x0 sys/getcwd.32
 .data          0x00000000c001fccc        0x0 sys/getpid.32
 .data          0x00000000c001fccc        0x0 sys/getramdata.32
 .data          0x00000000c001fccc        0x0 sys/getvgaptr.32
 .data          0x00000000c001fccc        0x0 sys/loaddll.32
 .data          0x00000000c001fccc        0x0 sys/read.32
 .data          0x00000000c001fccc        0x0 sys/registersignal.32
 .data          0x00000000c001fccc        0x0 sys/sbrk.32
 .data          0x00000000c001fccc        0x0 sys/setcwd.32
 .data          0x00000000c001fccc        0x0 sys/settime.32
 .data          0x00000000c001fccc        0x0 sys/timezone.32
 .data          0x00000000c001fccc        0x0 sys/write.32
 .data          0x00000000c001fccc        0x0 sys/wsbe.32
 .data          0x00000000c001fccc        0x0 sys/yield.32
 .data          0x00000000c001fccc        0x0 thr/elf.32
 .data          0x00000000c001fccc        0x4 thr/prcssthr.32
                0x00000000c001fccc                Thr::nextPID
 .data          0x00000000c001fcd0        0x0 vm86/vm8086.32
 .data          0x00000000c001fcd0        0x0 arch/i386/hal.32
 .data          0x00000000c001fcd0        0x0 arch/i386/pic.32
 .data          0x00000000c001fcd0        0x0 arch/i386/rtc.32
 .data          0x00000000c001fcd0        0x0 arch/i386/vga.32
 .data          0x00000000c001fcd0        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fcd0        0x0 fs/iso9660/helper.32
 .data          0x00000000c001fcd0        0x1 fs/iso9660/vfslink.32
                0x00000000c001fcd0                recentDriveletter
 .data          0x00000000c001fcd1        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fcd1        0x0 hal/sound/sndport.32
 .data          0x00000000c001fcd1        0x0 hw/bus/isa.32
 .data          0x00000000c001fcd1        0x0 hw/bus/pci.32
 .data          0x00000000c001fcd1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fcd1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fcd1        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fcd1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fcd1        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fcd1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fcd1        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fcd1        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fcd1        0x0 hw/timer/pit.32
 .data          0x00000000c001fcd1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fcd1        0x0 crtn.32
 .data          0x00000000c001fcd1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fcd1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fcd1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fcd1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fcd4        0x0
 .got           0x00000000c001fcd4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fcd4        0x0
 .got.plt       0x00000000c001fcd4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fcd4        0x0
 .igot.plt      0x00000000c001fcd4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fcd4        0x0
 .tm_clone_table
                0x00000000c001fcd4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fcd4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fcd1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fcd1        0x3 
 .eh_frame      0x00000000c001fcd4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fcd4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fcd4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fd2c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fd6c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fdd8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001fe5c        0x0
 .rel.got       0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001fe5c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001fe5c     0x4b8c
                0x00000000c001fe5c                sbss = .
 *(COMMON)
 *fill*         0x00000000c001fe5c        0x4 
 COMMON         0x00000000c001fe60       0xa0 fs/iso9660/iso9660.32
                0x00000000c001fe60                dcache
                0x00000000c001fea0                cdDriveLetter
                0x00000000c001fec0                icache
 *(.bss)
 .bss           0x00000000c001ff00        0x0 crti.32
 .bss           0x00000000c001ff00       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001ff20        0x4 acpica/utclib.32
 *fill*         0x00000000c001ff24       0x1c 
 .bss           0x00000000c001ff40      0x378 core/malloc.32
 .bss           0x00000000c00202b8        0x0 libk/ctype.32
 .bss           0x00000000c00202b8        0x0 libk/string.32
 .bss           0x00000000c00202b8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c00202b8        0x8 
 .bss           0x00000000c00202c0       0x88 fs/fat/ff.32
 .bss           0x00000000c0020348        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0020348        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0020348       0x18 
 .bss           0x00000000c0020360      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0020cf8        0x6 core/computer.32
                0x00000000c0020cf8                Krnl::computer
                0x00000000c0020cfc                KeIsPreemptionOn
                0x00000000c0020cfd                KeIsSchedulingOn
 *fill*         0x00000000c0020cfe        0x2 
 .bss           0x00000000c0020d00        0x6 core/gdt.32
                0x00000000c0020d00                gdtDescr
 .bss           0x00000000c0020d06        0x0 core/idle.32
 *fill*         0x00000000c0020d06        0x2 
 .bss           0x00000000c0020d08        0x6 core/idt.32
                0x00000000c0020d08                idtDescr
 .bss           0x00000000c0020d0e        0x0 core/kheap.32
 *fill*         0x00000000c0020d0e        0x2 
 .bss           0x00000000c0020d10        0x4 core/main.32
                0x00000000c0020d10                sysBootSettings
 .bss           0x00000000c0020d14       0x29 core/physmgr.32
                0x00000000c0020d14                Phys::forbidEvictions
                0x00000000c0020d18                Phys::currentPagePointer
                0x00000000c0020d1c                Phys::highestMem
                0x00000000c0020d20                Phys::oldPercent
                0x00000000c0020d24                Phys::usedPages
                0x00000000c0020d28                Phys::usablePages
                0x00000000c0020d2c                Phys::dmaUsage
 .bss           0x00000000c0020d3d        0x0 core/pipe.32
 *fill*         0x00000000c0020d3d        0x3 
 .bss           0x00000000c0020d40        0x9 core/terminal.32
                0x00000000c0020d40                terminalCycle
                0x00000000c0020d44                activeTerminal
                0x00000000c0020d48                VgaText::graphicMode
 *fill*         0x00000000c0020d49        0x1 
 .bss           0x00000000c0020d4a        0x2 core/tss.32
                0x00000000c0020d4a                doubleFaultSelector
 *fill*         0x00000000c0020d4c       0x14 
 .bss           0x00000000c0020d60       0x84 core/unixfile.32
                0x00000000c0020d60                sfileLpt
                0x00000000c0020da0                sfileCom
                0x00000000c0020dc4                sfileNul
                0x00000000c0020dc8                sfilePnt
                0x00000000c0020dcc                sfileAux
                0x00000000c0020dd0                sfileCon
                0x00000000c0020dd4                initialFilesAdded
                0x00000000c0020dd8                unixFileLinkedList
 .bss           0x00000000c0020de4       0x10 core/virtmgr.32
                0x00000000c0020de4                twswaps
                0x00000000c0020de8                swapBalance
                0x00000000c0020dec                Virt::swapfileBitmap
                0x00000000c0020df0                firstVAS
 .bss           0x00000000c0020df4        0x0 coreobjs/c++.32
 .bss           0x00000000c0020df4        0x0 dbg/kconsole.32
 .bss           0x00000000c0020df4        0x4 fs/vfs.32
                0x00000000c0020df4                installedFilesystems
 .bss           0x00000000c0020df8        0x0 hal/bus.32
 .bss           0x00000000c0020df8        0x0 hal/buzzer.32
 .bss           0x00000000c0020df8        0x8 hal/clock.32
                0x00000000c0020df8                User::dstOn
                0x00000000c0020df9                User::timezoneHalfHourOffset
                0x00000000c0020dfc                User::timezoneHourOffset
 .bss           0x00000000c0020e00        0x0 hal/device.32
 .bss           0x00000000c0020e00        0x0 hal/diskctrl.32
 .bss           0x00000000c0020e00        0x0 hal/diskphys.32
 .bss           0x00000000c0020e00        0x0 hal/fpu.32
 .bss           0x00000000c0020e00     0x2000 hal/intctrl.32
                0x00000000c0020e00                INT_contexts
                0x00000000c0021e00                INT_handlers
 .bss           0x00000000c0022e00      0x429 hal/keybrd.32
                0x00000000c0022e00                keyboardWaitingTaskList
                0x00000000c0022e04                keyboardSetupYet
                0x00000000c0022e08                guiKeyboardHandler
                0x00000000c0022e20                keystates
 *fill*         0x00000000c0023229       0x17 
 .bss           0x00000000c0023240       0x88 hal/logidisk.32
                0x00000000c0023240                diskAssignments
                0x00000000c0023260                disks
 .bss           0x00000000c00232c8        0x4 hal/mouse.32
                0x00000000c00232c8                guiMouseHandler
 .bss           0x00000000c00232cc        0x0 hal/partition.32
 .bss           0x00000000c00232cc        0x0 hal/serial.32
 .bss           0x00000000c00232cc        0x4 hal/timer.32
                0x00000000c00232cc                milliTenthsSinceBoot
 .bss           0x00000000c00232d0        0x0 hal/vcache.32
 .bss           0x00000000c00232d0        0x4 hal/video.32
                0x00000000c00232d0                screen
 *fill*         0x00000000c00232d4        0xc 
 .bss           0x00000000c00232e0      0x480 hw/acpi.32
                0x00000000c00232e0                systemSleepFunction
                0x00000000c00232e4                systemResetFunction
                0x00000000c00232e8                systemShutdownFunction
                0x00000000c00232ec                nextACPITable
                0x00000000c0023300                acpiTables
                0x00000000c0023500                usingXSDT
                0x00000000c0023504                MADTpointer
                0x00000000c0023508                RSDTpointer
                0x00000000c002350c                RSDPpointer
                0x00000000c0023510                nextAPICNMI
                0x00000000c0023520                apicNMIInfo
                0x00000000c00235a0                legacyIRQFlags
                0x00000000c00235c0                ioapicDiscoveryNumber
                0x00000000c00235e0                ioapicFoundInMADT
                0x00000000c0023600                ioapicAddresses
                0x00000000c0023680                ioapicGSIBase
                0x00000000c0023700                processorDiscoveryNumber
                0x00000000c0023720                matchingAPICID
                0x00000000c0023740                processorID
 .bss           0x00000000c0023760       0x10 hw/cpu.32
                0x00000000c0023760                lastD
                0x00000000c0023764                lastC
                0x00000000c0023768                lastB
                0x00000000c002376c                lastA
 .bss           0x00000000c0023770        0x0 krnl/bootmsg.32
 .bss           0x00000000c0023770        0x8 krnl/env.32
                0x00000000c0023770                Krnl::userEnv
                0x00000000c0023774                Krnl::systemEnv
 .bss           0x00000000c0023778        0x0 krnl/inlines.32
 .bss           0x00000000c0023778        0x1 krnl/panic.32
                0x00000000c0023778                KeIsKernelInPanic
 *fill*         0x00000000c0023779        0x7 
 .bss           0x00000000c0023780       0x48 krnl/powctrl.32
                0x00000000c0023780                Krnl::powCtrlOnBattery
                0x00000000c00237a0                Krnl::currentPowerSettings
                0x00000000c00237c4                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c00237c8        0x0 krnl/resolve.32
 .bss           0x00000000c00237c8        0x0 krnl/signal.32
 .bss           0x00000000c00237c8        0x0 krnl/syscalls.32
 .bss           0x00000000c00237c8        0x0 reg/registry.32
 .bss           0x00000000c00237c8        0x0 sys/eject.32
 .bss           0x00000000c00237c8        0x0 sys/exit.32
 .bss           0x00000000c00237c8        0x0 sys/getcwd.32
 .bss           0x00000000c00237c8        0x0 sys/getpid.32
 .bss           0x00000000c00237c8        0x0 sys/getramdata.32
 .bss           0x00000000c00237c8        0x0 sys/getvgaptr.32
 .bss           0x00000000c00237c8        0x0 sys/loaddll.32
 .bss           0x00000000c00237c8        0x0 sys/read.32
 .bss           0x00000000c00237c8        0x0 sys/registersignal.32
 .bss           0x00000000c00237c8        0x0 sys/sbrk.32
 .bss           0x00000000c00237c8        0x0 sys/setcwd.32
 .bss           0x00000000c00237c8        0x0 sys/settime.32
 .bss           0x00000000c00237c8        0x0 sys/timezone.32
 .bss           0x00000000c00237c8        0x0 sys/write.32
 .bss           0x00000000c00237c8        0x0 sys/wsbe.32
 .bss           0x00000000c00237c8        0x0 sys/yield.32
 *fill*         0x00000000c00237c8       0x18 
 .bss           0x00000000c00237e0      0x7a4 thr/elf.32
                0x00000000c00237e0                Thr::driverLookupNext
                0x00000000c0023800                Thr::driverLookupLen
                0x00000000c0023a00                Thr::driverLookupAddr
                0x00000000c0023c00                Thr::driverNameLookup
                0x00000000c0023e00                Thr::kernelSymbols
                0x00000000c0023e80                Thr::kernelStringTable
                0x00000000c0023f00                Thr::kernelSymbolTable
                0x00000000c0023f80                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023f84        0x4 
 .bss           0x00000000c0023f88       0x68 thr/prcssthr.32
                0x00000000c0023f88                cleanerThread
                0x00000000c0023f8c                weNeedTheCleanerToNotBlock
                0x00000000c0023f90                retValLockStuff
                0x00000000c0023f94                retValSchedLock
                0x00000000c0023f98                lockStuffLock
                0x00000000c0023f9c                schedulerLock
                0x00000000c0023fa0                taskSwitchesPostponedFlag
                0x00000000c0023fa4                postponeTaskSwitchesCounter
                0x00000000c0023fa8                irqDisableCounter
                0x00000000c0023fac                terminatedTaskList
                0x00000000c0023fb8                sleepingTaskList
                0x00000000c0023fc4                taskList
                0x00000000c0023fd0                kernelProcess
 *fill*         0x00000000c0023ff0       0x10 
 .bss           0x00000000c0024000       0x40 vm86/vm8086.32
                0x00000000c0024000                Vm::vmRetV
                0x00000000c0024004                Vm::vmDone
                0x00000000c0024005                Vm::vmReady
                0x00000000c0024008                Vm::vm86Thread
                0x00000000c002400c                Vm::vmToHostCommsPtr
                0x00000000c0024020                Vm::vmToHostComms
 .bss           0x00000000c0024040       0x14 arch/i386/hal.32
                0x00000000c0024040                apic
                0x00000000c0024044                fpuOwner
                0x00000000c0024048                coproLoadFunc
                0x00000000c002404c                coproSaveFunc
                0x00000000c0024050                gpFaultIntercept
 .bss           0x00000000c0024054        0x0 arch/i386/pic.32
 .bss           0x00000000c0024054        0x2 arch/i386/rtc.32
 .bss           0x00000000c0024056        0x0 arch/i386/vga.32
 *fill*         0x00000000c0024056        0xa 
 .bss           0x00000000c0024060       0xf0 fs/fat/vfslink.32
                0x00000000c0024060                FAT::fats
                0x00000000c0024080                FAT::vfsToFatRemaps
                0x00000000c0024100                fatToVFSRemaps
 .bss           0x00000000c0024150        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0024150       0x10 
 .bss           0x00000000c0024160      0x820 fs/iso9660/vfslink.32
                0x00000000c0024160                iso9660Owner
                0x00000000c0024164                recentSector
                0x00000000c0024180                recentBuffer
 .bss           0x00000000c0024980        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0024980        0x0 hal/sound/sndport.32
 .bss           0x00000000c0024980        0x0 hw/bus/isa.32
 .bss           0x00000000c0024980        0xd hw/bus/pci.32
                0x00000000c0024980                thePCI
 .bss           0x00000000c002498d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002498d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002498d        0x3 
 .bss           0x00000000c0024990        0x8 hw/diskphys/ata.32
                0x00000000c0024990                ataSectorsWritten
                0x00000000c0024994                ataSectorsRead
 .bss           0x00000000c0024998        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024998        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0024998        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0024998        0x8 
 .bss           0x00000000c00249a0       0x41 hw/intctrl/apic.32
                0x00000000c00249a0                noOfIOAPICs
                0x00000000c00249c0                ioapics
                0x00000000c00249e0                IOAPICsSetupYet
 .bss           0x00000000c00249e1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00249e1        0x3 
 .bss           0x00000000c00249e4        0x4 hw/timer/pit.32
                0x00000000c00249e4                pitFreq
 .bss           0x00000000c00249e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00249e8        0x0 crtn.32
 .bss           0x00000000c00249e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00249e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00249e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00249e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00249e8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0029574                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
