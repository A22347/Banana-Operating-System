Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e1da
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x807 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c0000580                memset
                0x00000000c00005b0                strlen
                0x00000000c00005e0                strpbrk
                0x00000000c0000630                strtok
                0x00000000c0000680                strcpy
                0x00000000c00006b0                strncpy
                0x00000000c0000740                strcmp
                0x00000000c0000790                strchr
                0x00000000c00007c0                strncmp
                0x00000000c0000820                strcat
                0x00000000c0000850                strncat
                0x00000000c00008b0                strstr
                0x00000000c0000910                toupper
                0x00000000c0000930                tolower
                0x00000000c0000950                simple_strtoul
 .text          0x00000000c0000b87      0xfa8 core/malloc.32
                0x00000000c0000cf5                dlfree
                0x00000000c0001053                dlmalloc
                0x00000000c0001584                dlrealloc
                0x00000000c0001728                dlmemalign
                0x00000000c000184b                dlcalloc
                0x00000000c00018e5                dlcfree
                0x00000000c00018ea                dlindependent_calloc
                0x00000000c000190f                dlindependent_comalloc
                0x00000000c0001926                dlvalloc
                0x00000000c0001951                dlpvalloc
                0x00000000c0001987                dlmalloc_trim
                0x00000000c0001994                dlmalloc_usable_size
                0x00000000c00019c5                dlmallinfo
                0x00000000c0001a94                dlmalloc_stats
                0x00000000c0001aa5                dlmallopt
 *fill*         0x00000000c0001b2f        0x1 
 .text          0x00000000c0001b30      0x1f2 libk/ctype.32
                0x00000000c0001b30                isblank
                0x00000000c0001b50                iscntrl
                0x00000000c0001b70                isdigit
                0x00000000c0001b8c                islower
                0x00000000c0001ba8                isspace
                0x00000000c0001bd0                isupper
                0x00000000c0001bec                isalpha
                0x00000000c0001c1c                isalnum
                0x00000000c0001c4c                ispunct
                0x00000000c0001c8c                isgraph
                0x00000000c0001cbc                isprint
                0x00000000c0001ce4                isxdigit
 .text          0x00000000c0001d22        0x0 libk/string.32
 .text          0x00000000c0001d22       0x51 fs/fat/diskio.32
                0x00000000c0001d22                disk_status
                0x00000000c0001d25                disk_initialize
                0x00000000c0001d28                disk_read
                0x00000000c0001d3e                disk_write
                0x00000000c0001d54                disk_ioctl
 .text          0x00000000c0001d73     0x3d2e fs/fat/ff.32
                0x00000000c0003b06                f_mount
                0x00000000c0003b68                f_open
                0x00000000c0003e3e                f_read
                0x00000000c000401a                f_write
                0x00000000c0004250                f_sync
                0x00000000c0004305                f_close
                0x00000000c0004334                f_lseek
                0x00000000c00044da                f_opendir
                0x00000000c00045a5                f_closedir
                0x00000000c00045c7                f_readdir
                0x00000000c0004659                f_stat
                0x00000000c00046d8                f_getfree
                0x00000000c00047da                f_truncate
                0x00000000c00048be                f_unlink
                0x00000000c00049de                f_mkdir
                0x00000000c0004b79                f_rename
                0x00000000c0004d32                f_chmod
                0x00000000c0004ddb                f_utime
                0x00000000c0004e89                f_getlabel
                0x00000000c0004fde                f_setlabel
                0x00000000c000516e                f_expand
                0x00000000c00052ce                f_mkfs
 *fill*         0x00000000c0005aa1        0x3 
 .text          0x00000000c0005aa4       0x2f fs/fat/ffsystem.32
                0x00000000c0005aa4                ff_memalloc
                0x00000000c0005abc                ff_memfree
 *fill*         0x00000000c0005ad3        0x1 
 .text          0x00000000c0005ad4      0x270 fs/fat/ffunicode.32
                0x00000000c0005ad4                ff_uni2oem
                0x00000000c0005b6c                ff_oem2uni
                0x00000000c0005bdc                ff_wtoupper
 .text          0x00000000c0005d44      0xd39 fs/iso9660/iso9660.32
                0x00000000c0005f89                isoReadDiscSector
                0x00000000c0006024                strnicmp
                0x00000000c00062cf                stricmp
                0x00000000c000631b                iso_open
                0x00000000c00063a5                iso_close
                0x00000000c00063c3                iso_read
                0x00000000c00064d9                iso_seek
                0x00000000c000655d                iso_tell
                0x00000000c000658e                iso_total
                0x00000000c00065b9                fn_postprocess
                0x00000000c00065df                iso_readdir
                0x00000000c0006848                iso_reset
                0x00000000c0006865                init_percd
                0x00000000c000695f                iso_ioctl
                0x00000000c0006977                fs_iso9660_init
                0x00000000c0006a0d                fs_iso9660_shutdown
 *fill*         0x00000000c0006a7d        0x1 
 .text          0x00000000c0006a7e      0x68d core/computer.32
                0x00000000c0006a7e                Computer::close(int, int, void*)
                0x00000000c0006ac2                Krnl::firstTask()
                0x00000000c0006bfc                Computer::Computer()
                0x00000000c0006bfc                Computer::Computer()
                0x00000000c0006caa                Computer::setBootMessage(char const*)
                0x00000000c0006cac                Computer::detectFeatures()
                0x00000000c0006eb8                Computer::displayFeatures()
                0x00000000c0006eba                Computer::rdmsr(unsigned int)
                0x00000000c0006ee6                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006f22                Computer::shutdown()
                0x00000000c0006f3a                Computer::restart()
                0x00000000c0006f52                Computer::sleep()
                0x00000000c0006f66                Computer::nmiEnabled()
                0x00000000c0006f72                Computer::readCMOS(unsigned char)
                0x00000000c0006f8c                Computer::enableNMI(bool)
                0x00000000c0006fa4                Computer::open(int, int, void*)
                0x00000000c0007076                Computer::disableNMI()
                0x00000000c0007084                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00070a2                Computer::handleNMI()
 *fill*         0x00000000c000710b        0x1 
 .text          0x00000000c000710c      0x1cd core/gdt.32
                0x00000000c000710c                GDTEntry::setBase(unsigned int)
                0x00000000c0007128                GDTEntry::setLimit(unsigned int)
                0x00000000c0007146                GDT::GDT()
                0x00000000c0007146                GDT::GDT()
                0x00000000c000715c                GDT::addEntry(GDTEntry)
                0x00000000c0007178                GDT::getNumberOfEntries()
                0x00000000c0007180                GDT::flush()
                0x00000000c00071a2                GDT::setup()
 .text          0x00000000c00072d9       0x1d core/idle.32
                0x00000000c00072d9                idleFunction(void*)
 *fill*         0x00000000c00072f6        0x2 
 .text          0x00000000c00072f8      0x45b core/idt.32
                0x00000000c00072f8                IDTEntry::IDTEntry(bool)
                0x00000000c00072f8                IDTEntry::IDTEntry(bool)
                0x00000000c000736a                IDTEntry::setOffset(unsigned int)
                0x00000000c0007380                IDT::IDT()
                0x00000000c0007380                IDT::IDT()
                0x00000000c0007382                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000738a                IDT::addEntry(IDTEntry, int)
                0x00000000c000739e                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00073d6                IDT::flush()
                0x00000000c00073f0                IDT::setup()
 .text          0x00000000c0007753      0x182 core/kheap.32
                0x00000000c0007753                sbrk
                0x00000000c00077e7                mmap
                0x00000000c00077fd                munmap
                0x00000000c0007813                liballoc_lock()
                0x00000000c0007820                liballoc_unlock()
                0x00000000c0007834                liballoc_alloc(int)
                0x00000000c000784c                liballoc_free(void*, int)
                0x00000000c0007867                realloc
                0x00000000c000787b                malloc
                0x00000000c000788b                free
                0x00000000c000789b                rfree
                0x00000000c00078ab                calloc
 .text          0x00000000c00078d5       0xc3 core/main.32
                0x00000000c00078d5                KeEntryPoint
 .text          0x00000000c0007998      0x65c core/physmgr.32
                0x00000000c0007998                Phys::allocateDMA(unsigned long)
                0x00000000c0007a74                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007aa7                Phys::setPageState(unsigned long, bool)
                0x00000000c0007adf                Phys::getPageState(unsigned long)
                0x00000000c0007afe                Phys::freePage(unsigned long)
                0x00000000c0007b60                Phys::allocatePage()
                0x00000000c0007c20                Phys::allocateContiguousPages(int)
                0x00000000c0007c7c                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007cb6                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007ff4      0x263 core/pipe.32
                0x00000000c0007ff4                Pipe::isAtty()
                0x00000000c0007ff8                Pipe::~Pipe()
                0x00000000c0007ff8                Pipe::~Pipe()
                0x00000000c000801c                Pipe::~Pipe()
                0x00000000c0008044                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00080fe                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00081f0                Pipe::Pipe(int)
                0x00000000c00081f0                Pipe::Pipe(int)
 *fill*         0x00000000c0008257        0x1 
 .text          0x00000000c0008258      0xaa8 core/terminal.32
                0x00000000c0008258                VgaText::isAtty()
                0x00000000c000825c                VgaText::~VgaText()
                0x00000000c000825c                VgaText::~VgaText()
                0x00000000c0008280                VgaText::~VgaText()
                0x00000000c00082aa                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00082ca                setTerminalScrollLock(bool)
                0x00000000c00082cb                doTerminalCycle()
                0x00000000c00082cc                addToTerminalCycle(VgaText*)
                0x00000000c00082cd                scrollTerminalScrollLock(int)
                0x00000000c00082ce                VgaText::updateTitle()
                0x00000000c00082d0                VgaText::load()
                0x00000000c00082d2                VgaText::updateCursor()
                0x00000000c00082e8                VgaText::doANSI_SGR(int)
                0x00000000c000835c                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000836c                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000837c                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000839c                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00083a8                VgaText::setTitleColour(VgaColour)
                0x00000000c00083b4                VgaText::setTitle(char*)
                0x00000000c00083b6                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00083c8                VgaText::scrollScreen()
                0x00000000c000845a                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000846c                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008504                VgaText::getCursorX()
                0x00000000c000850c                VgaText::getCursorY()
                0x00000000c0008514                VgaText::setCursor(int, int)
                0x00000000c000852b                setActiveTerminal(VgaText*)
                0x00000000c0008576                VgaText::clearScreen()
                0x00000000c00085c4                VgaText::setCursorX(int)
                0x00000000c00085dc                VgaText::setCursorY(int)
                0x00000000c00085f4                VgaText::incrementCursor(bool)
                0x00000000c0008648                VgaText::decrementCursor(bool)
                0x00000000c000866a                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008738                VgaText::putchar(char)
                0x00000000c000881c                VgaText::putx(unsigned int)
                0x00000000c0008862                VgaText::puts(char const*)
                0x00000000c0008888                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00088d4                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008a2c                VgaText::VgaText(char const*)
                0x00000000c0008a2c                VgaText::VgaText(char const*)
                0x00000000c0008b7c                VgaText::receiveKey(unsigned char)
                0x00000000c0008cdc                VgaText::doUpdate()
                0x00000000c0008cdd                newTerminal(char*)
 .text          0x00000000c0008d00      0x1a1 core/tss.32
                0x00000000c0008d00                TSS::TSS()
                0x00000000c0008d00                TSS::TSS()
                0x00000000c0008d10                TSS::setESP(unsigned long)
                0x00000000c0008d24                TSS::flush()
                0x00000000c0008d44                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008ea1        0x1 
 .text          0x00000000c0008ea2      0x4c2 core/unixfile.32
                0x00000000c0008ea2                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008ef8                ReservedFilename::isAtty()
                0x00000000c0008f14                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008f72                UnixFile::getFileDescriptor()
                0x00000000c0008f7a                UnixFile::UnixFile(int)
                0x00000000c0008f7a                UnixFile::UnixFile(int)
                0x00000000c000912a                ReservedFilename::ReservedFilename(int)
                0x00000000c000912a                ReservedFilename::ReservedFilename(int)
                0x00000000c000915c                UnixFile::~UnixFile()
                0x00000000c000915c                UnixFile::~UnixFile()
                0x00000000c00091f4                UnixFile::~UnixFile()
                0x00000000c000921c                ReservedFilename::~ReservedFilename()
                0x00000000c000921c                ReservedFilename::~ReservedFilename()
                0x00000000c0009240                ReservedFilename::~ReservedFilename()
                0x00000000c0009267                getFromFileDescriptor(int)
 .text          0x00000000c0009364     0x11c0 core/virtmgr.32
                0x00000000c0009364                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009399                Virt::getPageState(unsigned long)
                0x00000000c00093bf                Virt::allocateKernelVirtualPages(int)
                0x00000000c00094d7                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00094f8                Virt::swapIDToSector(unsigned long)
                0x00000000c000950a                Virt::allocateSwapfilePage()
                0x00000000c0009588                Virt::virtualMemorySetup()
                0x00000000c00095d3                Virt::setupPageSwapping(int)
                0x00000000c0009644                VAS::VAS(VAS*)
                0x00000000c0009644                VAS::VAS(VAS*)
                0x00000000c0009672                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000969e                VAS::getPageTableEntry(unsigned long)
                0x00000000c00096bf                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00097d2                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00097f6                VAS::virtualToPhysical(unsigned long)
                0x00000000c000980e                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009850                VAS::VAS()
                0x00000000c0009850                VAS::VAS()
                0x00000000c00098ba                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00098ec                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009916                VAS::~VAS()
                0x00000000c0009916                VAS::~VAS()
                0x00000000c0009a7a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009b80                VAS::allocatePages(int, int)
                0x00000000c0009d52                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009d6e                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009e30                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009f20                VAS::VAS(bool)
                0x00000000c0009f20                VAS::VAS(bool)
                0x00000000c000a198                VAS::evict(unsigned long)
                0x00000000c000a256                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a35a                VAS::scanForEviction()
                0x00000000c000a42c                mapVASFirstTime
 .text          0x00000000c000a524       0x5f coreobjs/c++.32
                0x00000000c000a524                __cxa_atexit
                0x00000000c000a527                __cxa_finalize
                0x00000000c000a528                __stack_chk_fail
                0x00000000c000a55e                __cxa_pure_virtual
                0x00000000c000a56f                operator new[](unsigned long)
                0x00000000c000a574                operator delete(void*, unsigned long)
                0x00000000c000a579                operator delete[](void*)
                0x00000000c000a57e                operator delete[](void*, unsigned long)
 .text          0x00000000c000a583      0x20f dbg/kconsole.32
                0x00000000c000a583                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a5f0                Dbg::logc(char)
                0x00000000c000a610                Dbg::logs(char*)
                0x00000000c000a62d                Dbg::logWriteInt(unsigned int)
                0x00000000c000a64a                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a669                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000a792      0xc50 fs/vfs.32
                0x00000000c000a792                File::read(unsigned long long, void*, int*)
                0x00000000c000a7ea                File::write(unsigned long long, void*, int*)
                0x00000000c000a842                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a89a                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a8c8                File::isAtty()
                0x00000000c000a8cc                Directory::isAtty()
                0x00000000c000a8d0                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a8d6                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a8dc                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a8e2                File::~File()
                0x00000000c000a8e2                File::~File()
                0x00000000c000a906                File::~File()
                0x00000000c000a930                Directory::~Directory()
                0x00000000c000a930                Directory::~Directory()
                0x00000000c000a954                Directory::~Directory()
                0x00000000c000a97e                Filesystem::Filesystem()
                0x00000000c000a97e                Filesystem::Filesystem()
                0x00000000c000a9a2                Filesystem::~Filesystem()
                0x00000000c000a9a2                Filesystem::~Filesystem()
                0x00000000c000a9b0                Filesystem::~Filesystem()
                0x00000000c000a9d4                Fs::getcwd(Process*, char*, int)
                0x00000000c000a9fe                Fs::initVFS()
                0x00000000c000aa28                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000abd2                File::File(char const*, Process*)
                0x00000000c000abd2                File::File(char const*, Process*)
                0x00000000c000ac8c                File::open(FileOpenMode)
                0x00000000c000acea                File::close()
                0x00000000c000ad4a                File::seek(unsigned long long)
                0x00000000c000ada0                File::tell(unsigned long long*)
                0x00000000c000adf0                File::rewind()
                0x00000000c000ae04                File::unlink()
                0x00000000c000ae50                File::rename(char const*)
                0x00000000c000ae9e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000aefa                File::exists()
                0x00000000c000af38                File::stat(unsigned long long*, bool*)
                0x00000000c000af99                Fs::setcwd(Process*, char*)
                0x00000000c000b0f6                Directory::Directory(char const*, Process*)
                0x00000000c000b0f6                Directory::Directory(char const*, Process*)
                0x00000000c000b1b0                Directory::open()
                0x00000000c000b20c                Directory::close()
                0x00000000c000b26c                Directory::unlink()
                0x00000000c000b2b8                Directory::rename(char const*)
                0x00000000c000b306                Directory::exists()
                0x00000000c000b344                Directory::read(dirent*)
                0x00000000c000b390                Directory::create()
                0x00000000c000b3dc                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b3e2        0x2 
 .text          0x00000000c000b3e4       0x86 hal/bus.32
                0x00000000c000b3e4                Bus::Bus(char const*)
                0x00000000c000b3e4                Bus::Bus(char const*)
                0x00000000c000b41c                Bus::~Bus()
                0x00000000c000b41c                Bus::~Bus()
                0x00000000c000b440                Bus::~Bus()
 .text          0x00000000c000b46a       0x96 hal/buzzer.32
                0x00000000c000b46a                beepThread(void*)
                0x00000000c000b4a7                Krnl::beep(int, int, bool)
 .text          0x00000000c000b500      0x495 hal/clock.32
                0x00000000c000b500                User::loadClockSettings(int)
                0x00000000c000b552                Clock::Clock(char const*)
                0x00000000c000b552                Clock::Clock(char const*)
                0x00000000c000b588                Clock::~Clock()
                0x00000000c000b588                Clock::~Clock()
                0x00000000c000b5ac                Clock::~Clock()
                0x00000000c000b5d6                Clock::timeInSecondsLocal()
                0x00000000c000b63a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b694                datetimeToSeconds(datetime_t)
                0x00000000c000b7ba                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b82b                secondsToDatetime(unsigned long long)
                0x00000000c000b970                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b995        0x1 
 .text          0x00000000c000b996      0x464 hal/device.32
                0x00000000c000b996                Device::hibernate()
                0x00000000c000b998                Device::wake()
                0x00000000c000b99a                Device::detect()
                0x00000000c000b99c                Device::disableLegacy()
                0x00000000c000b99e                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b9a0                DriverlessDevice::close(int, int, void*)
                0x00000000c000b9a4                DriverlessDevice::detect()
                0x00000000c000b9a6                DriverlessDevice::open(int, int, void*)
                0x00000000c000b9ba                Device::~Device()
                0x00000000c000b9ba                Device::~Device()
                0x00000000c000b9c8                Device::~Device()
                0x00000000c000b9f0                Device::findAndLoadDriver()
                0x00000000c000b9fe                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000ba24                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000ba64                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ba8e                Device::getParent()
                0x00000000c000ba9a                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bab8                Device::addChild(Device*)
                0x00000000c000bafc                Device::removeAllChildren()
                0x00000000c000bb42                Device::hibernateAll()
                0x00000000c000bb72                Device::wakeAll()
                0x00000000c000bba2                Device::detectAll()
                0x00000000c000bbd2                Device::disableLegacyAll()
                0x00000000c000bbd4                Device::loadDriversForAll()
                0x00000000c000bbd6                Device::closeAll()
                0x00000000c000bc0c                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bc42                Device::setName(char const*)
                0x00000000c000bc50                Device::Device(char const*)
                0x00000000c000bc50                Device::Device(char const*)
                0x00000000c000bd4c                Device::getName()
                0x00000000c000bd56                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bd56                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bd8c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bdd0                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bdfa        0x2 
 .text          0x00000000c000bdfc       0x86 hal/diskctrl.32
                0x00000000c000bdfc                HardDiskController::HardDiskController(char const*)
                0x00000000c000bdfc                HardDiskController::HardDiskController(char const*)
                0x00000000c000be34                HardDiskController::~HardDiskController()
                0x00000000c000be34                HardDiskController::~HardDiskController()
                0x00000000c000be58                HardDiskController::~HardDiskController()
 .text          0x00000000c000be82       0xe2 hal/diskphys.32
                0x00000000c000be82                PhysicalDisk::eject()
                0x00000000c000be86                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000be86                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000beee                PhysicalDisk::startCache()
                0x00000000c000bf16                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bf16                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bf3a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000bf64        0x0 hal/fpu.32
 .text          0x00000000c000bf64      0x348 hal/intctrl.32
                0x00000000c000bf64                int_handler
                0x00000000c000bfec                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c034                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c161                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c197                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c20d                setupINTS()
                0x00000000c000c26a                convertLegacyIRQNumber(int)
 .text          0x00000000c000c2ac      0x804 hal/keybrd.32
                0x00000000c000c2ac                startGUI(void*)
                0x00000000c000c318                startGUIVESA(void*)
                0x00000000c000c384                sendKeyToTerminal(unsigned char)
                0x00000000c000c44f                sendKeyboardToken(KeyboardToken)
                0x00000000c000c8ab                clearInternalKeybuffer(VgaText*)
                0x00000000c000c8e1                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000ca26                Keyboard::Keyboard(char const*)
                0x00000000c000ca26                Keyboard::Keyboard(char const*)
                0x00000000c000ca62                Keyboard::~Keyboard()
                0x00000000c000ca62                Keyboard::~Keyboard()
                0x00000000c000ca86                Keyboard::~Keyboard()
 .text          0x00000000c000cab0      0x427 hal/logidisk.32
                0x00000000c000cab0                LogicalDisk::close(int, int, void*)
                0x00000000c000cab4                LogicalDisk::~LogicalDisk()
                0x00000000c000cab4                LogicalDisk::~LogicalDisk()
                0x00000000c000cad8                LogicalDisk::~LogicalDisk()
                0x00000000c000cb02                LogicalDisk::open(int, int, void*)
                0x00000000c000cb16                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cb60                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cba8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cba8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cc68                LogicalDisk::assignDriveLetter()
                0x00000000c000cd02                LogicalDisk::mount()
                0x00000000c000cd4a                LogicalDisk::unmount()
                0x00000000c000cd5a                LogicalDisk::eject()
                0x00000000c000cd6e                LogicalDisk::unassignDriveLetter()
                0x00000000c000cdd8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ce58                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000ced7        0x1 
 .text          0x00000000c000ced8       0x86 hal/mouse.32
                0x00000000c000ced8                Mouse::Mouse(char const*)
                0x00000000c000ced8                Mouse::Mouse(char const*)
                0x00000000c000cf10                Mouse::~Mouse()
                0x00000000c000cf10                Mouse::~Mouse()
                0x00000000c000cf34                Mouse::~Mouse()
 .text          0x00000000c000cf5e       0x90 hal/nic.32
                0x00000000c000cf5e                NIC::getMAC()
                0x00000000c000cf64                NIC::write(int, unsigned char*, int*)
                0x00000000c000cf6a                NIC::NIC(char const*)
                0x00000000c000cf6a                NIC::NIC(char const*)
                0x00000000c000cfa0                NIC::~NIC()
                0x00000000c000cfa0                NIC::~NIC()
                0x00000000c000cfc4                NIC::~NIC()
 .text          0x00000000c000cfee      0x348 hal/partition.32
                0x00000000c000cfee                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d096                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d336        0x2 
 .text          0x00000000c000d338       0x86 hal/serial.32
                0x00000000c000d338                Serial::Serial(char const*)
                0x00000000c000d338                Serial::Serial(char const*)
                0x00000000c000d370                Serial::~Serial()
                0x00000000c000d370                Serial::~Serial()
                0x00000000c000d394                Serial::~Serial()
 *fill*         0x00000000c000d3be        0x2 
 .text          0x00000000c000d3c0      0x234 hal/timer.32
                0x00000000c000d3c0                Timer::Timer(char const*)
                0x00000000c000d3c0                Timer::Timer(char const*)
                0x00000000c000d3f8                Timer::~Timer()
                0x00000000c000d3f8                Timer::~Timer()
                0x00000000c000d41c                Timer::~Timer()
                0x00000000c000d446                Timer::read()
                0x00000000c000d451                setupTimer(int)
                0x00000000c000d48c                timerHandler(unsigned int)
 .text          0x00000000c000d5f4      0x454 hal/vcache.32
                0x00000000c000d5f4                VCache::VCache(PhysicalDisk*)
                0x00000000c000d5f4                VCache::VCache(PhysicalDisk*)
                0x00000000c000d764                VCache::invalidateReadBuffer()
                0x00000000c000d774                VCache::writeWriteBuffer()
                0x00000000c000d7c0                VCache::~VCache()
                0x00000000c000d7c0                VCache::~VCache()
                0x00000000c000d814                VCache::~VCache()
                0x00000000c000d83c                VCache::write(unsigned long long, int, void*)
                0x00000000c000d932                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000da48      0x4c7 hal/video.32
                0x00000000c000da48                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000da92                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000dafc                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000db82                Video::clearScreen(unsigned int)
                0x00000000c000dbb6                Video::putpixel(int, int, unsigned int)
                0x00000000c000dbc4                Video::readPixelApprox(int, int)
                0x00000000c000dbd8                Video::Video(char const*)
                0x00000000c000dbd8                Video::Video(char const*)
                0x00000000c000dc0e                Video::~Video()
                0x00000000c000dc0e                Video::~Video()
                0x00000000c000dc32                Video::~Video()
                0x00000000c000dc5c                Video::isMonochrome()
                0x00000000c000dc68                Video::getWidth()
                0x00000000c000dc74                Video::getHeight()
                0x00000000c000dc80                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000dd3c                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000dea4                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000df0f        0x1 
 .text          0x00000000c000df10     0x1305 hw/acpi.32
                0x00000000c000df10                ACPI::close(int, int, void*)
                0x00000000c000dfc4                findRSDP()
                0x00000000c000e054                loadACPITables(unsigned char*)
                0x00000000c000e2b8                findRSDT(unsigned char*)
                0x00000000c000e408                findDataTable(unsigned char*, char*)
                0x00000000c000e480                scanMADT()
                0x00000000c000e910                ACPI::ACPI()
                0x00000000c000e910                ACPI::ACPI()
                0x00000000c000e964                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ea50                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000eb1c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000eb24                ACPI::detectPCI()
                0x00000000c000ed2c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ed78                ACPI::sleep()
                0x00000000c000ed94                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f215        0x1 
 .text          0x00000000c000f216      0xb95 hw/cpu.32
                0x00000000c000f216                CPU::close(int, int, void*)
                0x00000000c000f21a                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f236                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f24e                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f2c2                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f346                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f374                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f3a2                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f3d0                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f3fe                CPU::CPU()
                0x00000000c000f3fe                CPU::CPU()
                0x00000000c000f48c                CPU::displayFeatures()
                0x00000000c000f48e                CPU::detectFeatures()
                0x00000000c000fb46                CPU::setupSMEP()
                0x00000000c000fb52                CPU::setupUMIP()
                0x00000000c000fb5c                CPU::setupTSC()
                0x00000000c000fb66                CPU::setupLargePages()
                0x00000000c000fb70                CPU::setupPAT()
                0x00000000c000fbb8                CPU::setupMTRR()
                0x00000000c000fbba                CPU::setupGlobalPages()
                0x00000000c000fbc4                CPU::allowUsermodeDataAccess()
                0x00000000c000fbd6                CPU::prohibitUsermodeDataAccess()
                0x00000000c000fbe8                CPU::setupSMAP()
                0x00000000c000fbf6                CPU::setupFeatures()
                0x00000000c000fcc2                CPU::open(int, int, void*)
 .text          0x00000000c000fdab       0xd1 krnl/bootmsg.32
                0x00000000c000fdab                KeDisplaySplashScreen()
                0x00000000c000fe19                KeSetBootMessage(char const*)
 .text          0x00000000c000fe7c      0x5ad krnl/env.32
                0x00000000c000fe7c                EnvVarContainer::getEnv(char const*)
                0x00000000c000feba                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000ff7c                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000ff7e                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010164                EnvVarContainer::__loadSystem()
                0x00000000c001017e                EnvVarContainer::__loadUser()
                0x00000000c0010180                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010180                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00101a2                EnvVarContainer::~EnvVarContainer()
                0x00000000c00101a2                EnvVarContainer::~EnvVarContainer()
                0x00000000c00101d2                Krnl::getEnv(Process*, char const*)
                0x00000000c0010237                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0010251                Krnl::setEnvUser(char const*, char const*)
                0x00000000c0010270                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0010283                Krnl::deleteEnvSystem(char const*)
                0x00000000c0010284                Krnl::deleteEnvUser(char const*)
                0x00000000c0010285                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0010286                Krnl::newProcessEnv(Process*)
                0x00000000c00102a6                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c00102f2                Krnl::loadSystemEnv()
                0x00000000c0010320                Krnl::loadUserEnv()
                0x00000000c0010346                Krnl::flushEnv()
                0x00000000c0010347                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0010367                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0010429       0x94 krnl/inlines.32
                0x00000000c0010429                CPU::current()
                0x00000000c0010435                operator new(unsigned long)
                0x00000000c001043a                operator delete(void*)
                0x00000000c001043f                disableIRQs()
                0x00000000c0010441                enableIRQs()
                0x00000000c0010443                lockScheduler()
                0x00000000c001044b                unlockScheduler()
                0x00000000c001045a                lockStuff()
                0x00000000c0010468                unlockStuff()
                0x00000000c00104a2                Virt::getAKernelVAS()
                0x00000000c00104a8                __not_memcpy
 .text          0x00000000c00104bd        0xc krnl/panic.32
                0x00000000c00104bd                KePanic(char const*)
 .text          0x00000000c00104c9      0x142 krnl/powctrl.32
                0x00000000c00104c9                Krnl::powerThread(void*)
                0x00000000c00104f7                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c001050d                Krnl::userIOReceived()
                0x00000000c0010518                Krnl::handlePowerButton()
                0x00000000c001054d                Krnl::handleSleepButton()
                0x00000000c0010582                Krnl::setupPowerManager()
 .text          0x00000000c001060b       0x9e krnl/random.32
                0x00000000c001060b                KeRand()
                0x00000000c001064e                KeSeedRand(unsigned int)
                0x00000000c0010677                KeInitRand()
 *fill*         0x00000000c00106a9        0x3 
 .text          0x00000000c00106ac      0x190 krnl/resolve.32
                0x00000000c00106ac                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c001083c      0x314 krnl/signal.32
                0x00000000c001083c                KiSigKill(int)
                0x00000000c0010850                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010851                KiDefaultSignalHandlerPause(int)
                0x00000000c001087d                KiDefaultSignalHandlerResume(int)
                0x00000000c00108a9                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00108ae                KeInitSignals()
                0x00000000c00108f6                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010928                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00109a5                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010a99                KiCheckSignalZ
                0x00000000c0010adb                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010b19                KiFinishSignalZ
 .text          0x00000000c0010b50      0xcc3 krnl/syscalls.32
                0x00000000c0010b50                SysSeekDir(regs*)
                0x00000000c0010b55                SysTellDir(regs*)
                0x00000000c0010b5a                SysVerify(regs*)
                0x00000000c0010b64                SysGetArgc(regs*)
                0x00000000c0010b74                SysTTYName(regs*)
                0x00000000c0010b7c                SysFormatDisk(regs*)
                0x00000000c0010c03                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010c49                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010ca2                SysShutdown(regs*)
                0x00000000c0010d3b                SysRealpath(regs*)
                0x00000000c0010d96                SysReadDir(regs*)
                0x00000000c0010e2a                SysIsATTY(regs*)
                0x00000000c0010e84                SysSeek(regs*)
                0x00000000c0010ede                SysTell(regs*)
                0x00000000c0010f46                SysSize(regs*)
                0x00000000c0010fb4                SysSizeFromFilename(regs*)
                0x00000000c0011051                SysClose(regs*)
                0x00000000c00110bb                SysOpenDir(regs*)
                0x00000000c0011144                SysMakeDir(regs*)
                0x00000000c00111b0                SysCloseDir(regs*)
                0x00000000c001120f                SysWait(regs*)
                0x00000000c0011229                SysNotImpl(regs*)
                0x00000000c0011244                SysPanic(regs*)
                0x00000000c001125e                SysRmdir(regs*)
                0x00000000c00112bb                SysUnlink(regs*)
                0x00000000c0011318                SysGetArgv(regs*)
                0x00000000c0011387                SysUSleep(regs*)
                0x00000000c00113be                SysSpawn(regs*)
                0x00000000c001142a                SysGetEnv(regs*)
                0x00000000c00114dd                SysSetFatAttrib(regs*)
                0x00000000c0011545                SysPipe(regs*)
                0x00000000c001158a                SysGetUnixTime(regs*)
                0x00000000c001159e                string_ends_with(char const*, char const*)
                0x00000000c00115e9                SysOpen(regs*)
                0x00000000c00117d1                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011813        0x1 
 .text          0x00000000c0011814      0x151 net/ethernet.32
                0x00000000c0011814                KeSwitchEndian16(unsigned short)
                0x00000000c0011838                KeSwitchEndian32(unsigned int)
                0x00000000c0011868                EthernetCRC32(unsigned char*, int)
                0x00000000c001190c                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0011965      0xd62 reg/cm.32
                0x00000000c0011965                CmOpen(char const*)
                0x00000000c0011a83                CmClose(Reghive_Tag*)
                0x00000000c0011a99                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011ad5                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011b4c                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011b8f                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011bc5                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011c01                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0011c29                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0011c4a                CmExpand(Reghive_Tag*, int)
                0x00000000c0011cc5                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0011d4b                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0011e3f                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0011f77                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0011fd8                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c001200b                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012048                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c001206f                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c00120af                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012153                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012181                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c001231e                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c001236b                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00123e7                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001243a                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012502                zStrtok(char*, char const*)
                0x00000000c0012571                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00125f2                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0012695                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00126c7      0x52f reg/registry.32
                0x00000000c00126c7                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012830                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012981                Reg::getLine(char*, char*, char*)
                0x00000000c00129b8                Reg::readInt(char*, char*, int*)
                0x00000000c0012ab7                Reg::readString(char*, char*, char*, int)
                0x00000000c0012b38                Reg::readBool(char*, char*, bool*)
                0x00000000c0012b5d                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012b89                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012bb5                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012bf6       0x36 sys/eject.32
                0x00000000c0012bf6                SysEject(regs*)
 .text          0x00000000c0012c2c       0x18 sys/exit.32
                0x00000000c0012c2c                SysExit(regs*)
 .text          0x00000000c0012c44       0x1f sys/getcwd.32
                0x00000000c0012c44                SysGetCwd(regs*)
 .text          0x00000000c0012c63        0xc sys/getpid.32
                0x00000000c0012c63                SysGetPID(regs*)
 .text          0x00000000c0012c6f       0x1a sys/getramdata.32
                0x00000000c0012c6f                SysGetRAMData(regs*)
 .text          0x00000000c0012c89       0x8f sys/getvgaptr.32
                0x00000000c0012c89                SysGetVGAPtr(regs*)
 .text          0x00000000c0012d18       0xbf sys/kill.32
                0x00000000c0012d18                SysKill(regs*)
 .text          0x00000000c0012dd7       0xc4 sys/loaddll.32
                0x00000000c0012dd7                SysLoadDLL(regs*)
 .text          0x00000000c0012e9b       0x68 sys/read.32
                0x00000000c0012e9b                SysRead(regs*)
 .text          0x00000000c0012f03       0x29 sys/registersignal.32
                0x00000000c0012f03                SysRegisterSignal(regs*)
 .text          0x00000000c0012f2c      0x1ae sys/registry.32
                0x00000000c0012f2c                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0012fa3                SysRegistryReadExtent(regs*)
                0x00000000c0012ffd                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013025                SysRegistryEnterDirectory(regs*)
                0x00000000c001304d                SysRegistryGetNext(regs*)
                0x00000000c0013075                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00130af                SysRegistryOpen(regs*)
                0x00000000c00130c3                SysRegistryClose(regs*)
 .text          0x00000000c00130da       0x55 sys/sbrk.32
                0x00000000c00130da                SysSbrk(regs*)
 .text          0x00000000c001312f       0x1c sys/setcwd.32
                0x00000000c001312f                SysSetCwd(regs*)
 .text          0x00000000c001314b       0x95 sys/settime.32
                0x00000000c001314b                SysSetTime(regs*)
 .text          0x00000000c00131e0       0x54 sys/timezone.32
                0x00000000c00131e0                SysTimezone(regs*)
 .text          0x00000000c0013234       0x68 sys/write.32
                0x00000000c0013234                SysWrite(regs*)
 .text          0x00000000c001329c       0x62 sys/wsbe.32
                0x00000000c001329c                SysWsbe(regs*)
 .text          0x00000000c00132fe       0x25 sys/yield.32
                0x00000000c00132fe                SysYield(regs*)
 .text          0x00000000c0013323     0x11f3 thr/elf.32
                0x00000000c0013323                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00135aa                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00137c9                Thr::runtimeReferenceHelper()
                0x00000000c00137dc                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001382b                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013ae9                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001421a                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001424c                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014283                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001429d                Thr::loadDLL(char const*, bool)
                0x00000000c00144dd                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0014516        0x2 
 .text          0x00000000c0014518     0x12ad thr/prcssthr.32
                0x00000000c0014518                userModeEntryPoint(void*)
                0x00000000c0014540                changeTSS
                0x00000000c0014570                switchToThread(ThreadControlBlock*)
                0x00000000c001460c                Process::addArgs(char**)
                0x00000000c001466c                Process::Process(char const*, Process*, char**)
                0x00000000c001466c                Process::Process(char const*, Process*, char**)
                0x00000000c0014874                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014874                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014a48                taskStartupFunction
                0x00000000c0014a54                Semaphore::Semaphore(int)
                0x00000000c0014a54                Semaphore::Semaphore(int)
                0x00000000c0014a84                Mutex::Mutex()
                0x00000000c0014a84                Mutex::Mutex()
                0x00000000c0014a98                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014b8c                Process::createUserThread()
                0x00000000c0014ba8                setupMultitasking(void (*)())
                0x00000000c0014cc0                schedule()
                0x00000000c0014d50                Semaphore::tryAcquire()
                0x00000000c0014e10                Semaphore::assertLocked(char const*)
                0x00000000c0014e88                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0014eb0                blockTask(TaskState)
                0x00000000c0014ee0                waitTask(int, int*, int)
                0x00000000c0014f24                milliTenthSleepUntil(unsigned int)
                0x00000000c0014fb0                milliTenthSleep(unsigned int)
                0x00000000c0014fc0                sleep(unsigned int)
                0x00000000c0014fd0                Semaphore::acquire()
                0x00000000c001508c                taskReturned
                0x00000000c00150c8                Thr::processFromPID(int)
                0x00000000c0015168                unblockTask(ThreadControlBlock*)
                0x00000000c001520c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00154c0                cleanerTaskFunction(void*)
                0x00000000c00155b0                terminateTask(int)
                0x00000000c001567c                Thr::terminateFromIRQ(int)
                0x00000000c0015688                Semaphore::release()
 .text          0x00000000c00157c5      0xba4 vm86/vm8086.32
                0x00000000c00157c5                Vm::inbv(unsigned short)
                0x00000000c00157d8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001580e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001581e                Vm::getSegment(unsigned int)
                0x00000000c0015828                Vm::getOffset(unsigned int)
                0x00000000c001582d                Vm::mainloop2()
                0x00000000c0015867                Vm::mainVm8086Loop(void*)
                0x00000000c0015877                Vm::mainloop3(unsigned long)
                0x00000000c001589d                Vm::initialise8086()
                0x00000000c00158e0                Vm::finish8086()
                0x00000000c0015941                Vm::getOutput8086(unsigned char*)
                0x00000000c0015966                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015a1f                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015b87                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0015c11                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0015c22                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0015c34                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0015c45                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0015c5a                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0015c70                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0015c85                Vm::faultHandler(regs*)
 .text          0x00000000c0016369      0xa9d arch/i386/hal.32
                0x00000000c0016369                noCopro(unsigned long)
                0x00000000c001636a                nmiHandler(regs*, void*)
                0x00000000c0016383                doubleFault(regs*, void*)
                0x00000000c001639c                displayDebugInfo(regs*)
                0x00000000c00166f8                HalSystemIdle()
                0x00000000c0016769                displayProgramFault(char const*)
                0x00000000c00167b5                gpFault(regs*, void*)
                0x00000000c001681a                pgFault(regs*, void*)
                0x00000000c00168a0                otherISRHandler(regs*, void*)
                0x00000000c00168d4                opcodeFault(regs*, void*)
                0x00000000c0016954                i386SaveCoprocessor(void*)
                0x00000000c0016968                i386LoadCoprocessor(void*)
                0x00000000c001697c                x87EmulHandler(regs*, void*)
                0x00000000c0016a19                HalInitialiseCoprocessor()
                0x00000000c0016ac7                HalPanic(char const*)
                0x00000000c0016bc0                HalQueryPerformanceCounter()
                0x00000000c0016bef                HalInitialise()
                0x00000000c0016d95                HalMakeBeep(int)
                0x00000000c0016dcf                HalGetRand()
                0x00000000c0016dd2                HalEndOfInterrupt(int)
                0x00000000c0016e03                HalRestart()
                0x00000000c0016e04                HalShutdown()
                0x00000000c0016e05                HalSleep()
 *fill*         0x00000000c0016e06        0x2 
 .text          0x00000000c0016e08      0x2ec arch/i386/pic.32
                0x00000000c0016e08                picIoWait()
                0x00000000c0016e10                picDisable()
                0x00000000c0016e44                picGetIRQReg(int)
                0x00000000c0016ec0                picOpen()
                0x00000000c0017054                picEOI(int)
 .text          0x00000000c00170f4      0x64b arch/i386/rtc.32
                0x00000000c00170f4                RTC::open(int, int, void*)
                0x00000000c00170f8                RTC::close(int, int, void*)
                0x00000000c00170fc                RTC::timeInSecondsUTC()
                0x00000000c001710e                RTC::timeInDatetimeUTC()
                0x00000000c0017134                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001716e                RTC::~RTC()
                0x00000000c001716e                RTC::~RTC()
                0x00000000c0017192                RTC::~RTC()
                0x00000000c00171bc                RTC::get_update_in_progress_flag()
                0x00000000c00171d4                RTC::completeRTCRefresh()
                0x00000000c0017490                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0017643                rtcIRQHandler(regs*, void*)
                0x00000000c0017688                RTC::RTC()
                0x00000000c0017688                RTC::RTC()
 *fill*         0x00000000c001773f        0x1 
 .text          0x00000000c0017740      0x1fb arch/i386/vga.32
                0x00000000c0017740                HalConsoleScroll(int, int)
                0x00000000c0017848                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00178ac                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c001793b        0x1 
 .text          0x00000000c001793c     0x139b fs/fat/vfslink.32
                0x00000000c001793c                FAT::getName()
                0x00000000c0017944                FAT::tell(void*, unsigned long long*)
                0x00000000c0017980                FAT::stat(void*, unsigned long long*)
                0x00000000c00179bc                FAT::~FAT()
                0x00000000c00179bc                FAT::~FAT()
                0x00000000c00179e0                FAT::~FAT()
                0x00000000c0017a08                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017aac                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0017b70                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017d44                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0017f5c                FAT::allocateSwapfile(char const*, int)
                0x00000000c001810c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0018278                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00182d8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0018338                FAT::close(void*)
                0x00000000c001838c                FAT::closeDir(void*)
                0x00000000c00183e0                FAT::seek(void*, unsigned long long)
                0x00000000c0018438                fatWrapperReadDisk
                0x00000000c0018478                fatWrapperWriteDisk
                0x00000000c00184b8                fatWrapperIoctl
                0x00000000c00185c8                FAT::FAT()
                0x00000000c00185c8                FAT::FAT()
                0x00000000c001861c                FAT::fixFilepath(char*)
                0x00000000c0018658                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001878c                FAT::openDir(char const*, void**)
                0x00000000c001883c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018934                FAT::unlink(char const*)
                0x00000000c00189b4                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0018b1c                FAT::rename(char const*, char const*)
                0x00000000c0018be8                FAT::mkdir(char const*)
                0x00000000c0018c68                FAT::exists(char const*)
 *fill*         0x00000000c0018cd7        0x1 
 .text          0x00000000c0018cd8       0x94 fs/iso9660/helper.32
                0x00000000c0018cd8                isoReadDiscSectorHelper
                0x00000000c0018d34                iso_kprintf
                0x00000000c0018d50                iso_kprintfd
 .text          0x00000000c0018d6c      0x72e fs/iso9660/vfslink.32
                0x00000000c0018d6c                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018d72                ISO9660::getName()
                0x00000000c0018d78                ISO9660::closeDir(void*)
                0x00000000c0018d82                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0018d88                ISO9660::unlink(char const*)
                0x00000000c0018d8e                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0018d94                ISO9660::rename(char const*, char const*)
                0x00000000c0018d9a                ISO9660::mkdir(char const*)
                0x00000000c0018da0                ISO9660::~ISO9660()
                0x00000000c0018da0                ISO9660::~ISO9660()
                0x00000000c0018dc4                ISO9660::~ISO9660()
                0x00000000c0018dec                ISO9660::exists(char const*)
                0x00000000c0018e00                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0018ede                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0018f26                ISO9660::seek(void*, unsigned long long)
                0x00000000c0018f96                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0018fde                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019030                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019168                ISO9660::close(void*)
                0x00000000c0019198                ISO9660::openDir(char const*, void**)
                0x00000000c001926a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019385                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0019400                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019472                ISO9660::ISO9660()
                0x00000000c0019472                ISO9660::ISO9660()
 .text          0x00000000c001949a      0x26a hal/sound/sndcard.32
                0x00000000c001949a                SoundCard::beginPlayback()
                0x00000000c00194a8                SoundCard::stopPlayback()
                0x00000000c00194b6                SoundCard::SoundCard(char const*)
                0x00000000c00194b6                SoundCard::SoundCard(char const*)
                0x00000000c0019554                SoundCard::~SoundCard()
                0x00000000c0019554                SoundCard::~SoundCard()
                0x00000000c0019578                SoundCard::~SoundCard()
                0x00000000c00195a2                SoundCard::configureRates(int, int, int)
                0x00000000c00195d2                SoundCard::getSamples16(int, short*)
                0x00000000c001962e                SoundCard::getSamples32(int, int*)
                0x00000000c00196b2                SoundCard::addChannel(SoundPort*)
                0x00000000c00196f0                SoundCard::removeChannel(int)
 .text          0x00000000c0019704      0x36e hal/sound/sndport.32
                0x00000000c0019704                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019704                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019790                SoundPort::~SoundPort()
                0x00000000c0019790                SoundPort::~SoundPort()
                0x00000000c00197c4                SoundPort::unpause()
                0x00000000c00197d0                SoundPort::pause()
                0x00000000c00197dc                SoundPort::getBufferUsed()
                0x00000000c00197e4                SoundPort::getBufferSize()
                0x00000000c00197ec                SoundPort::buffer16(short*, int)
                0x00000000c0019874                SoundPort::buffer32(int*, int)
                0x00000000c00198f8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00199bc                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0019a72        0x0 hw/bus/isa.32
 .text          0x00000000c0019a72      0xb97 hw/bus/pci.32
                0x00000000c0019a72                PCI::open(int, int, void*)
                0x00000000c0019a90                PCI::close(int, int, void*)
                0x00000000c0019a94                PCI::PCI()
                0x00000000c0019a94                PCI::PCI()
                0x00000000c0019b2a                PCI::readBAR8(unsigned int, int)
                0x00000000c0019b46                PCI::readBAR16(unsigned int, int)
                0x00000000c0019b64                PCI::readBAR32(unsigned int, int)
                0x00000000c0019b80                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0019ba0                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0019bc2                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0019be2                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019c50                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019cfe                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0019d22                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0019d4a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0019d94                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0019dbc                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0019de0                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0019e04                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0019e2c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019e90                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0019f7a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a224                PCI::checkBus(unsigned char)
                0x00000000c001a248                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a3ba                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001a54a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001a5b6                PCI::detect()
 *fill*         0x00000000c001a609        0x1 
 .text          0x00000000c001a60a      0xb5e hw/diskctrl/ide.32
                0x00000000c001a60a                IDE::close(int, int, void*)
                0x00000000c001a60e                IDE::IDE()
                0x00000000c001a60e                IDE::IDE()
                0x00000000c001a642                IDE::prepareInterrupt(unsigned char)
                0x00000000c001a654                selectDrive(unsigned char, unsigned char)
                0x00000000c001a656                IDE::getBase(unsigned char)
                0x00000000c001a668                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001a72a                IDE::read(unsigned char, unsigned char)
                0x00000000c001a7e0                IDE::waitInterrupt(unsigned char)
                0x00000000c001a842                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001a85e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001a87a                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001a8c0                IDE::open(int, int, void*)
                0x00000000c001acd0                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ad9c                IDE::detect()
                0x00000000c001b05e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b114                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b168      0x32e hw/diskctrl/satabus.32
                0x00000000c001b168                SATABus::close(int, int, void*)
                0x00000000c001b16c                SATABus::detect()
                0x00000000c001b16e                SATABus::SATABus()
                0x00000000c001b16e                SATABus::SATABus()
                0x00000000c001b1f4                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b226                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b26e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b28e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b2b8                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b3cc                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001b476                SATABus::open(int, int, void*)
 .text          0x00000000c001b496      0x957 hw/diskphys/ata.32
                0x00000000c001b496                ATA::close(int, int, void*)
                0x00000000c001b4ba                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001b4bc                ATA::ATA()
                0x00000000c001b4bc                ATA::ATA()
                0x00000000c001b4ea                ATA::flush(bool)
                0x00000000c001b534                ATA::readyForCommand()
                0x00000000c001b580                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001b928                ATA::detectCHS()
                0x00000000c001b954                ATA::open(int, int, void*)
                0x00000000c001ba28                combineCharAndColour(char, unsigned char)
                0x00000000c001ba39                combineColours(unsigned char, unsigned char)
                0x00000000c001ba46                ATA::read(unsigned long long, int, void*)
                0x00000000c001bc1c                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001bded        0x1 
 .text          0x00000000c001bdee      0x608 hw/diskphys/atapi.32
                0x00000000c001bdee                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001bdf4                ATAPI::close(int, int, void*)
                0x00000000c001be18                ATAPI::ATAPI()
                0x00000000c001be18                ATAPI::ATAPI()
                0x00000000c001be46                ATAPI::readyForCommand()
                0x00000000c001be98                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c154                ATAPI::diskRemoved()
                0x00000000c001c18e                ATAPI::eject()
                0x00000000c001c1d6                ATAPI::diskInserted()
                0x00000000c001c1e2                ATAPI::detectMedia()
                0x00000000c001c29e                ATAPI::open(int, int, void*)
                0x00000000c001c37e                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001c3f6      0x826 hw/diskphys/sata.32
                0x00000000c001c3f6                SATA::close(int, int, void*)
                0x00000000c001c41a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001c41c                SATA::open(int, int, void*)
                0x00000000c001c4c6                SATA::SATA()
                0x00000000c001c4c6                SATA::SATA()
                0x00000000c001c4f4                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c750                SATA::read(unsigned long long, int, void*)
                0x00000000c001c9a0                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001cc1c      0x5d4 hw/diskphys/satapi.32
                0x00000000c001cc1c                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001cc22                SATAPI::close(int, int, void*)
                0x00000000c001cc46                SATAPI::SATAPI()
                0x00000000c001cc46                SATAPI::SATAPI()
                0x00000000c001cc74                SATAPI::diskRemoved()
                0x00000000c001cc76                SATAPI::diskInserted()
                0x00000000c001cc92                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001cf74                SATAPI::eject()
                0x00000000c001cfb0                SATAPI::detectMedia()
                0x00000000c001d006                SATAPI::open(int, int, void*)
                0x00000000c001d106                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d1f0      0x41f hw/intctrl/apic.32
                0x00000000c001d1f0                IOAPIC::close(int, int, void*)
                0x00000000c001d1f6                apicGetBase()
                0x00000000c001d238                IOAPIC::IOAPIC()
                0x00000000c001d238                IOAPIC::IOAPIC()
                0x00000000c001d260                apicOpen()
                0x00000000c001d3ba                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d3ec                IOAPIC::read(int)
                0x00000000c001d414                IOAPIC::open(int, int, void*)
                0x00000000c001d4ea                IOAPIC::write(int, int)
                0x00000000c001d516                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001d60f        0x1 
 .text          0x00000000c001d610       0xf0 hw/timer/apictimer.32
                0x00000000c001d610                APICTimer::close(int, int, void*)
                0x00000000c001d618                apicTimerHandler(regs*, void*)
                0x00000000c001d640                APICTimer::open(int, int, void*)
                0x00000000c001d6b0                APICTimer::write(int)
                0x00000000c001d6d8                APICTimer::APICTimer()
                0x00000000c001d6d8                APICTimer::APICTimer()
 .text          0x00000000c001d700      0x1a3 hw/timer/pit.32
                0x00000000c001d700                PIT::write(int)
                0x00000000c001d780                pitHandler(regs*, void*)
                0x00000000c001d7a4                PIT::open(int, int, void*)
                0x00000000c001d7f4                PIT::close(int, int, void*)
                0x00000000c001d824                PIT::PIT()
                0x00000000c001d824                PIT::PIT()
 *fill*         0x00000000c001d8a3        0xd 
 .text          0x00000000c001d8b0       0x83 arch/i386/avx.32
                0x00000000c001d8b0                avxDetect
                0x00000000c001d8da                avxSave
                0x00000000c001d8eb                avxLoad
                0x00000000c001d8fc                avxInit
                0x00000000c001d91e                avxClose
                0x00000000c001d91f                wouldSheSayYes
 *fill*         0x00000000c001d933        0xd 
 .text          0x00000000c001d940      0x2ec arch/i386/interrupt.32
                0x00000000c001d940                isr0
                0x00000000c001d950                isr1
                0x00000000c001d95a                isr2
                0x00000000c001d964                isr3
                0x00000000c001d96e                isr4
                0x00000000c001d978                isr5
                0x00000000c001d982                isr6
                0x00000000c001d98c                isr7
                0x00000000c001d996                isr8
                0x00000000c001d99e                isr9
                0x00000000c001d9a8                isr10
                0x00000000c001d9b0                isr11
                0x00000000c001d9b8                isr12
                0x00000000c001d9c0                isr13
                0x00000000c001d9da                isr14
                0x00000000c001d9e2                isr15
                0x00000000c001d9ec                isr16
                0x00000000c001d9f6                isr17
                0x00000000c001da00                isr18
                0x00000000c001da0a                irq3
                0x00000000c001da14                irq4
                0x00000000c001da1e                irq5
                0x00000000c001da28                irq6
                0x00000000c001da32                irq7
                0x00000000c001da3c                irq8
                0x00000000c001da46                irq9
                0x00000000c001da50                irq10
                0x00000000c001da5a                irq11
                0x00000000c001da64                irq12
                0x00000000c001da6e                irq13
                0x00000000c001da78                irq14
                0x00000000c001da82                irq15
                0x00000000c001da8c                irq1
                0x00000000c001da93                irq2
                0x00000000c001da9a                isr96
                0x00000000c001daa1                irq0
                0x00000000c001daa6                int_common_stub
                0x00000000c001dad8                syscall_common_stub
                0x00000000c001dbdc                irq16
                0x00000000c001dbe6                irq17
                0x00000000c001dbf0                irq18
                0x00000000c001dbfa                irq19
                0x00000000c001dc04                irq20
                0x00000000c001dc0e                irq21
                0x00000000c001dc18                irq22
                0x00000000c001dc22                irq23
 *fill*         0x00000000c001dc2c        0x4 
 .text          0x00000000c001dc30       0x10 arch/i386/rdrand.32
                0x00000000c001dc30                i386GetRDRAND
 .text          0x00000000c001dc40       0x39 arch/i386/sse.32
                0x00000000c001dc40                absolutelyNoChanceInHell
                0x00000000c001dc40                sseDetect
                0x00000000c001dc58                sseSave
                0x00000000c001dc60                sseLoad
                0x00000000c001dc68                sseInit
                0x00000000c001dc78                sseClose
 *fill*         0x00000000c001dc79        0x7 
 .text          0x00000000c001dc80       0x49 arch/i386/x87.32
                0x00000000c001dc86                x87Detect
                0x00000000c001dca1                x87Save
                0x00000000c001dca8                x87Load
                0x00000000c001dcaf                x87Init
                0x00000000c001dcc8                x87Close
 *fill*         0x00000000c001dcc9        0x3 
 .text          0x00000000c001dccc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001dcf1        0x0 crtn.32
 *fill*         0x00000000c001dcf1        0x3 
 .text          0x00000000c001dcf4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001dcf4                __divdi3
 *fill*         0x00000000c001de3f        0x1 
 .text          0x00000000c001de40      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001de40                __moddi3
 *fill*         0x00000000c001dfbe        0x2 
 .text          0x00000000c001dfc0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001dfc0                __udivdi3
 *fill*         0x00000000c001e0bf        0x1 
 .text          0x00000000c001e0c0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001e0c0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e1e0        0x0
 .iplt          0x00000000c001e1e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e1da        0xf
 .init          0x00000000c001e1da        0x3 crti.32
                0x00000000c001e1da                _init
 .init          0x00000000c001e1dd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e1e2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e1e7        0x2 crtn.32

.fini           0x00000000c001e1e9        0xa
 .fini          0x00000000c001e1e9        0x3 crti.32
                0x00000000c001e1e9                _fini
 .fini          0x00000000c001e1ec        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e1f1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e1f4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e1f4       0x23 core/computer.32
                0x00000000c001e1f4                Computer::~Computer()
                0x00000000c001e1f4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e218       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e218       0x2a core/computer.32
                0x00000000c001e218                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e242       0x21
 .text._Z10idleCommonv
                0x00000000c001e242       0x21 core/idle.32
                0x00000000c001e242                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e264        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e264        0x2 core/unixfile.32
                0x00000000c001e264                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e264                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e266       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e266       0x42 core/unixfile.32
                0x00000000c001e266                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e266                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e2a8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e2a8       0xd3 core/unixfile.32
                0x00000000c001e2a8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e37c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e37c        0x7 core/unixfile.32
                0x00000000c001e37c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e384       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e384       0xa1 core/unixfile.32
                0x00000000c001e384                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e426        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e426        0x8 core/unixfile.32
                0x00000000c001e426                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e42e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e42e       0x1a hal/device.32
                0x00000000c001e42e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e42e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e448       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e448       0x2a hal/device.32
                0x00000000c001e448                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e472       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e472       0xdc hal/device.32
                0x00000000c001e472                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e54e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e54e       0x42 hal/device.32
                0x00000000c001e54e                LinkedList<Device>::LinkedList()
                0x00000000c001e54e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e590       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e590       0x1c hal/timer.32
                0x00000000c001e590                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e5ac        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e5ac        0x7 hal/timer.32
                0x00000000c001e5ac                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e5b4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e5b4       0xb8 hal/timer.32
                0x00000000c001e5b4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e66c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e66c       0xda hal/timer.32
                0x00000000c001e66c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001e748       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001e748       0x23 hw/acpi.32
                0x00000000c001e748                ACPI::~ACPI()
                0x00000000c001e748                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001e76c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001e76c       0x2a hw/acpi.32
                0x00000000c001e76c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001e798        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001e798        0x2 hw/acpi.32
                0x00000000c001e798                LinkedList<Device>::~LinkedList()
                0x00000000c001e798                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001e79c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001e79c       0x1c hw/acpi.32
                0x00000000c001e79c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001e7b8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001e7b8        0x7 hw/acpi.32
                0x00000000c001e7b8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001e7c0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001e7c0       0xb8 hw/acpi.32
                0x00000000c001e7c0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001e878       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001e878       0x23 hw/cpu.32
                0x00000000c001e878                CPU::~CPU()
                0x00000000c001e878                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001e89c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001e89c       0x2a hw/cpu.32
                0x00000000c001e89c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e8c8        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e8c8        0x8 sys/kill.32
                0x00000000c001e8c8                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e8d0        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e8d0        0x2 thr/prcssthr.32
                0x00000000c001e8d0                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001e8d0                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e8d4       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e8d4       0x49 thr/prcssthr.32
                0x00000000c001e8d4                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001e8d4                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e920       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e920       0x42 thr/prcssthr.32
                0x00000000c001e920                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001e920                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001e962       0x23
 .text._ZN3PCID2Ev
                0x00000000c001e962       0x23 hw/bus/pci.32
                0x00000000c001e962                PCI::~PCI()
                0x00000000c001e962                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001e986       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001e986       0x2a hw/bus/pci.32
                0x00000000c001e986                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001e9b0       0x23
 .text._ZN3IDED2Ev
                0x00000000c001e9b0       0x23 hw/diskctrl/ide.32
                0x00000000c001e9b0                IDE::~IDE()
                0x00000000c001e9b0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001e9d4       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001e9d4       0x2a hw/diskctrl/ide.32
                0x00000000c001e9d4                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001e9fe       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001e9fe       0x23 hw/diskctrl/satabus.32
                0x00000000c001e9fe                SATABus::~SATABus()
                0x00000000c001e9fe                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001ea22       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001ea22       0x2a hw/diskctrl/satabus.32
                0x00000000c001ea22                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001ea4c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001ea4c       0x23 hw/diskphys/ata.32
                0x00000000c001ea4c                ATA::~ATA()
                0x00000000c001ea4c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001ea70       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001ea70       0x2a hw/diskphys/ata.32
                0x00000000c001ea70                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001ea9a       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001ea9a       0x23 hw/diskphys/atapi.32
                0x00000000c001ea9a                ATAPI::~ATAPI()
                0x00000000c001ea9a                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001eabe       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001eabe       0x2a hw/diskphys/atapi.32
                0x00000000c001eabe                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001eae8       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001eae8       0x23 hw/diskphys/sata.32
                0x00000000c001eae8                SATA::~SATA()
                0x00000000c001eae8                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001eb0c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001eb0c       0x2a hw/diskphys/sata.32
                0x00000000c001eb0c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001eb36       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001eb36       0x23 hw/diskphys/satapi.32
                0x00000000c001eb36                SATAPI::~SATAPI()
                0x00000000c001eb36                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001eb5a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001eb5a       0x2a hw/diskphys/satapi.32
                0x00000000c001eb5a                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001eb84       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001eb84       0x23 hw/intctrl/apic.32
                0x00000000c001eb84                IOAPIC::~IOAPIC()
                0x00000000c001eb84                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001eba8       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001eba8       0x2a hw/intctrl/apic.32
                0x00000000c001eba8                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ebd4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ebd4       0x23 hw/timer/apictimer.32
                0x00000000c001ebd4                APICTimer::~APICTimer()
                0x00000000c001ebd4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ebf8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ebf8       0x2a hw/timer/apictimer.32
                0x00000000c001ebf8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ec24       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ec24       0x23 hw/timer/pit.32
                0x00000000c001ec24                PIT::~PIT()
                0x00000000c001ec24                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ec48       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ec48       0x2a hw/timer/pit.32
                0x00000000c001ec48                PIT::~PIT()

.rodata         0x00000000c001ec72     0x2c5e
                0x00000000c001ec72                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001ec72        0x2 
 .ctors         0x00000000c001ec74        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001ec78        0x4 core/unixfile.32
 .ctors         0x00000000c001ec7c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001ec80        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ec84                end_ctors = .
                0x00000000c001ec84                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ec84        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ec88        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ec88                __DTOR_END__
                0x00000000c001ec8c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001ec8c       0x14 
 .rodata        0x00000000c001eca0      0x101 acpica/utclib.32
                0x00000000c001eca0                AcpiGbl_Ctypes
 *fill*         0x00000000c001eda1        0x3 
 .rodata        0x00000000c001eda4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001edbc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001ee06       0x1a 
 .rodata        0x00000000c001ee20       0xed fs/fat/ff.32
 *fill*         0x00000000c001ef0d       0x13 
 .rodata        0x00000000c001ef20      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f320       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f38f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001f4a4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001f50c       0x2c core/computer.32
                0x00000000c001f50c                vtable for Computer
 .rodata.str1.4
                0x00000000c001f538       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001f568        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001f574       0x17 core/main.32
 *fill*         0x00000000c001f58b        0x1 
 .rodata.str1.4
                0x00000000c001f58c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001f631       0x58 core/physmgr.32
 *fill*         0x00000000c001f689        0x7 
 .rodata.cst16  0x00000000c001f690       0x20 core/physmgr.32
 .rodata.str1.1
                0x00000000c001f6b0       0x39 core/pipe.32
 *fill*         0x00000000c001f6e9        0x3 
 .rodata._ZTV4Pipe
                0x00000000c001f6ec       0x1c core/pipe.32
                0x00000000c001f6ec                vtable for Pipe
 .rodata.str1.1
                0x00000000c001f708       0x2b core/terminal.32
 *fill*         0x00000000c001f733        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001f734       0x1c core/terminal.32
                0x00000000c001f734                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001f750       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001f772       0x15 core/unixfile.32
 *fill*         0x00000000c001f787        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001f788       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001f7d3        0x8 core/unixfile.32
 *fill*         0x00000000c001f7db        0x1 
 .rodata.str1.4
                0x00000000c001f7dc       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001f7fc       0x1c core/unixfile.32
                0x00000000c001f7fc                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001f818       0x1c core/unixfile.32
                0x00000000c001f818                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001f834      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001f99b      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001faa2       0x33 coreobjs/c++.32
 *fill*         0x00000000c001fad5        0x3 
 .rodata        0x00000000c001fad8      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001fc28       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001fc28       0x68 fs/vfs.32
                0x00000000c001fc28                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001fc90       0x1c fs/vfs.32
                0x00000000c001fc90                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001fcac       0x1c fs/vfs.32
                0x00000000c001fcac                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001fcc8       0x2c hal/bus.32
                0x00000000c001fcc8                vtable for Bus
 .rodata.str1.1
                0x00000000c001fcf4       0x1e hal/clock.32
 *fill*         0x00000000c001fd12        0x2 
 .rodata._ZTV5Clock
                0x00000000c001fd14       0x3c hal/clock.32
                0x00000000c001fd14                vtable for Clock
 *fill*         0x00000000c001fd50       0x10 
 .rodata        0x00000000c001fd60       0x30 hal/clock.32
 .rodata.cst16  0x00000000c001fd90       0x10 hal/clock.32
 .rodata.str1.1
                0x00000000c001fda0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001fdf8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001fdf8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001fdf8       0x2c hal/device.32
                0x00000000c001fdf8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001fe24       0x2c hal/device.32
                0x00000000c001fe24                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001fe50       0x2c hal/diskctrl.32
                0x00000000c001fe50                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001fe7c       0x38 hal/diskphys.32
                0x00000000c001fe7c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001feb4       0x3e hal/intctrl.32
 *fill*         0x00000000c001fef2        0x2 
 .rodata.str1.4
                0x00000000c001fef4       0x5d hal/intctrl.32
 .rodata        0x00000000c001ff51       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001ffa4       0x34 hal/keybrd.32
                0x00000000c001ffa4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001ffd8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002001c       0x2c hal/logidisk.32
                0x00000000c002001c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0020048       0x2c hal/mouse.32
                0x00000000c0020048                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0020074       0x34 hal/nic.32
                0x00000000c0020074                vtable for NIC
 .rodata.str1.1
                0x00000000c00200a8        0xb hal/partition.32
 *fill*         0x00000000c00200b3        0x1 
 .rodata._ZTV6Serial
                0x00000000c00200b4       0x44 hal/serial.32
                0x00000000c00200b4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00200f8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00200f8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00200f8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00200f8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00200f8       0x30 hal/timer.32
                0x00000000c00200f8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020128       0x10 hal/vcache.32
                0x00000000c0020128                vtable for VCache
 .rodata.str1.1
                0x00000000c0020138       0x93 hal/video.32
 *fill*         0x00000000c00201cb        0x1 
 .rodata._ZTV5Video
                0x00000000c00201cc       0x4c hal/video.32
                0x00000000c00201cc                vtable for Video
 .rodata.str1.4
                0x00000000c0020218       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c00202b3      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00203ef       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00203ef        0x8 hw/acpi.32
 *fill*         0x00000000c00203ef        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00203f0       0x2c hw/acpi.32
                0x00000000c00203f0                vtable for ACPI
 .rodata.str1.1
                0x00000000c002041c      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020589        0x3 
 .rodata._ZTV3CPU
                0x00000000c002058c       0x2c hw/cpu.32
                0x00000000c002058c                vtable for CPU
 .rodata.str1.1
                0x00000000c00205b8       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00205f4       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020685       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c002074e       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 *fill*         0x00000000c0020796        0xa 
 .rodata.cst16  0x00000000c00207a0       0x30 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c00207d0       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00207fb       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020871       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00208b6        0xa sys/getvgaptr.32
 .rodata.cst16  0x00000000c00208c0       0x10 sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00208c0       0x21 sys/kill.32
 *fill*         0x00000000c00208e1        0xf 
 .rodata.cst16  0x00000000c00208f0       0x10 sys/loaddll.32
                                         0x40 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020900       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0020996       0x54 sys/timezone.32
 .rodata.cst16  0x00000000c00209ea       0x10 sys/timezone.32
 .rodata.str1.1
                0x00000000c00209ea       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0020a16      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 *fill*         0x00000000c0020be2        0xe 
 .rodata.cst16  0x00000000c0020bf0       0x10 thr/elf.32
 .rodata.str1.1
                0x00000000c0020c00       0x57 thr/prcssthr.32
 *fill*         0x00000000c0020c57        0x1 
 .rodata.str1.4
                0x00000000c0020c58      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020d64       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020d64       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020d64       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020d64        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0020d64       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0020e04       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0020e34      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c0020fc4       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0021037       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c002104c       0x3c arch/i386/rtc.32
                0x00000000c002104c                vtable for RTC
 .rodata.str1.1
                0x00000000c0021088       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00210c9        0x3 
 .rodata._ZTV3FAT
                0x00000000c00210cc       0x68 fs/fat/vfslink.32
                0x00000000c00210cc                vtable for FAT
 .rodata.str1.1
                0x00000000c0021134       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0021134      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002126c       0x68 fs/iso9660/vfslink.32
                0x00000000c002126c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00212d4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0021318       0x34 hal/sound/sndcard.32
                0x00000000c0021318                vtable for SoundCard
 .rodata.str1.4
                0x00000000c002134c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002138b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00213c3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0021464       0x2c hw/bus/pci.32
                0x00000000c0021464                vtable for PCI
 .rodata.str1.1
                0x00000000c0021490       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0021517        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021518       0x2c hw/diskctrl/ide.32
                0x00000000c0021518                vtable for IDE
 .rodata.str1.4
                0x00000000c0021544       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0021568       0x2c hw/diskctrl/satabus.32
                0x00000000c0021568                vtable for SATABus
 .rodata.str1.1
                0x00000000c0021594       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c00215a6        0x2 
 .rodata._ZTV3ATA
                0x00000000c00215a8       0x38 hw/diskphys/ata.32
                0x00000000c00215a8                vtable for ATA
 .rodata.str1.1
                0x00000000c00215e0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00215ed        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00215f0       0x38 hw/diskphys/atapi.32
                0x00000000c00215f0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021628       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00216a4       0x38 hw/diskphys/sata.32
                0x00000000c00216a4                vtable for SATA
 .rodata.cst16  0x00000000c00216dc       0x10 hw/diskphys/sata.32
 .rodata.str1.1
                0x00000000c00216dc       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00217c6        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00217c8       0x38 hw/diskphys/satapi.32
                0x00000000c00217c8                vtable for SATAPI
 .rodata        0x00000000c0021800        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021808       0x2c hw/intctrl/apic.32
                0x00000000c0021808                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0021834       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002184f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021850       0x30 hw/timer/apictimer.32
                0x00000000c0021850                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021880       0x1d hw/timer/pit.32
 *fill*         0x00000000c002189d        0x3 
 .rodata._ZTV3PIT
                0x00000000c00218a0       0x30 hw/timer/pit.32
                0x00000000c00218a0                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00218d0      0x4d5
 *(.data)
 .data          0x00000000c00218d0        0x0 crti.32
 .data          0x00000000c00218d0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00218d0                __dso_handle
 .data          0x00000000c00218d4        0x0 acpica/utclib.32
 .data          0x00000000c00218d4        0x0 core/malloc.32
 .data          0x00000000c00218d4        0x0 libk/ctype.32
 .data          0x00000000c00218d4        0x0 libk/string.32
 .data          0x00000000c00218d4        0x0 fs/fat/diskio.32
 .data          0x00000000c00218d4        0x0 fs/fat/ff.32
 .data          0x00000000c00218d4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00218d4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00218d4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00218d4        0x0 core/computer.32
 .data          0x00000000c00218d4        0x0 core/gdt.32
 .data          0x00000000c00218d4        0x0 core/idle.32
 .data          0x00000000c00218d4        0x0 core/idt.32
 .data          0x00000000c00218d4        0x4 core/kheap.32
 .data          0x00000000c00218d8        0x0 core/main.32
 .data          0x00000000c00218d8        0x4 core/physmgr.32
                0x00000000c00218d8                Phys::bitmap
 .data          0x00000000c00218dc        0x0 core/pipe.32
 *fill*         0x00000000c00218dc        0x4 
 .data          0x00000000c00218e0       0x60 core/terminal.32
                0x00000000c00218e0                VgaText::hiddenOut
                0x00000000c0021900                ansiToVGAMappings
 .data          0x00000000c0021940        0x0 core/tss.32
 .data          0x00000000c0021940        0x4 core/unixfile.32
                0x00000000c0021940                UnixFile::nextFd
 .data          0x00000000c0021944       0x15 core/virtmgr.32
                0x00000000c0021944                Virt::pageAllocPtr
                0x00000000c0021948                Virt::bitmap
                0x00000000c002194c                Virt::swapfileSectorsPerPage
                0x00000000c0021950                Virt::swapfileLength
                0x00000000c0021954                Virt::swapfileSector
                0x00000000c0021958                Virt::swapfileDrive
 *fill*         0x00000000c0021959        0x3 
 .data          0x00000000c002195c        0x4 coreobjs/c++.32
                0x00000000c002195c                __stack_chk_guard
 .data          0x00000000c0021960        0x0 dbg/kconsole.32
 .data          0x00000000c0021960        0x0 fs/vfs.32
 .data          0x00000000c0021960        0x0 hal/bus.32
 .data          0x00000000c0021960        0x0 hal/buzzer.32
 .data          0x00000000c0021960        0x0 hal/clock.32
 .data          0x00000000c0021960        0x0 hal/device.32
 .data          0x00000000c0021960        0x0 hal/diskctrl.32
 .data          0x00000000c0021960        0x0 hal/diskphys.32
 .data          0x00000000c0021960        0x0 hal/fpu.32
 .data          0x00000000c0021960        0x0 hal/intctrl.32
 .data          0x00000000c0021960        0x0 hal/keybrd.32
 .data          0x00000000c0021960        0x0 hal/logidisk.32
 .data          0x00000000c0021960        0x0 hal/mouse.32
 .data          0x00000000c0021960        0x0 hal/nic.32
 .data          0x00000000c0021960        0x0 hal/partition.32
 .data          0x00000000c0021960        0x0 hal/serial.32
 .data          0x00000000c0021960        0x0 hal/timer.32
 .data          0x00000000c0021960        0x0 hal/vcache.32
 .data          0x00000000c0021960        0x0 hal/video.32
 .data          0x00000000c0021960       0x10 hw/acpi.32
                0x00000000c0021960                legacyIRQRemaps
 .data          0x00000000c0021970        0x4 hw/cpu.32
                0x00000000c0021970                lastCode
 *fill*         0x00000000c0021974        0xc 
 .data          0x00000000c0021980      0x142 krnl/bootmsg.32
                0x00000000c0021980                KiSplashScreen
 *fill*         0x00000000c0021ac2       0x1e 
 .data          0x00000000c0021ae0       0x4d krnl/env.32
                0x00000000c0021ae0                defaultSysEnv
 .data          0x00000000c0021b2d        0x0 krnl/inlines.32
 .data          0x00000000c0021b2d        0x0 krnl/panic.32
 .data          0x00000000c0021b2d        0x0 krnl/powctrl.32
 .data          0x00000000c0021b2d        0x0 krnl/random.32
 .data          0x00000000c0021b2d        0x0 krnl/resolve.32
 *fill*         0x00000000c0021b2d       0x13 
 .data          0x00000000c0021b40       0x4c krnl/signal.32
                0x00000000c0021b40                KiDefaultSignalHandlers
 *fill*         0x00000000c0021b8c       0x14 
 .data          0x00000000c0021ba0       0xf0 krnl/syscalls.32
                0x00000000c0021ba0                systemCallHandlers
 .data          0x00000000c0021c90        0x0 net/ethernet.32
 *fill*         0x00000000c0021c90       0x10 
 .data          0x00000000c0021ca0      0x100 reg/cm.32
                0x00000000c0021ca0                CmComponents
 .data          0x00000000c0021da0        0x0 reg/registry.32
 .data          0x00000000c0021da0        0x0 sys/eject.32
 .data          0x00000000c0021da0        0x0 sys/exit.32
 .data          0x00000000c0021da0        0x0 sys/getcwd.32
 .data          0x00000000c0021da0        0x0 sys/getpid.32
 .data          0x00000000c0021da0        0x0 sys/getramdata.32
 .data          0x00000000c0021da0        0x0 sys/getvgaptr.32
 .data          0x00000000c0021da0        0x0 sys/kill.32
 .data          0x00000000c0021da0        0x0 sys/loaddll.32
 .data          0x00000000c0021da0        0x0 sys/read.32
 .data          0x00000000c0021da0        0x0 sys/registersignal.32
 .data          0x00000000c0021da0        0x0 sys/registry.32
 .data          0x00000000c0021da0        0x0 sys/sbrk.32
 .data          0x00000000c0021da0        0x0 sys/setcwd.32
 .data          0x00000000c0021da0        0x0 sys/settime.32
 .data          0x00000000c0021da0        0x0 sys/timezone.32
 .data          0x00000000c0021da0        0x0 sys/write.32
 .data          0x00000000c0021da0        0x0 sys/wsbe.32
 .data          0x00000000c0021da0        0x0 sys/yield.32
 .data          0x00000000c0021da0        0x0 thr/elf.32
 .data          0x00000000c0021da0        0x4 thr/prcssthr.32
                0x00000000c0021da0                Thr::nextPID
 .data          0x00000000c0021da4        0x0 vm86/vm8086.32
 .data          0x00000000c0021da4        0x0 arch/i386/hal.32
 .data          0x00000000c0021da4        0x0 arch/i386/pic.32
 .data          0x00000000c0021da4        0x0 arch/i386/rtc.32
 .data          0x00000000c0021da4        0x0 arch/i386/vga.32
 .data          0x00000000c0021da4        0x0 fs/fat/vfslink.32
 .data          0x00000000c0021da4        0x0 fs/iso9660/helper.32
 .data          0x00000000c0021da4        0x1 fs/iso9660/vfslink.32
                0x00000000c0021da4                recentDriveletter
 .data          0x00000000c0021da5        0x0 hal/sound/sndcard.32
 .data          0x00000000c0021da5        0x0 hal/sound/sndport.32
 .data          0x00000000c0021da5        0x0 hw/bus/isa.32
 .data          0x00000000c0021da5        0x0 hw/bus/pci.32
 .data          0x00000000c0021da5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0021da5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0021da5        0x0 hw/diskphys/ata.32
 .data          0x00000000c0021da5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0021da5        0x0 hw/diskphys/sata.32
 .data          0x00000000c0021da5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0021da5        0x0 hw/intctrl/apic.32
 .data          0x00000000c0021da5        0x0 hw/timer/apictimer.32
 .data          0x00000000c0021da5        0x0 hw/timer/pit.32
 .data          0x00000000c0021da5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0021da5        0x0 crtn.32
 .data          0x00000000c0021da5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0021da5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0021da5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0021da5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0021da8        0x0
 .got           0x00000000c0021da8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0021da8        0x0
 .got.plt       0x00000000c0021da8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0021da8        0x0
 .igot.plt      0x00000000c0021da8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0021da8        0x0
 .tm_clone_table
                0x00000000c0021da8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0021da8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0021da5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0021da5        0x3 
 .eh_frame      0x00000000c0021da8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0021da8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0021da8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0021e00       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0021e40       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0021eac       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0022000       0x8d
 *(userkernel)
 userkernel     0x00000000c0022000       0x52 krnl/signal.32
                0x00000000c0022000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002202c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0022052       0x3b krnl/syscalls.32
                0x00000000c0022052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0023000        0x1
 *(align_previous)
 align_previous
                0x00000000c0023000        0x1 krnl/signal.32
                0x00000000c0023000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0023004        0x0
 .rel.got       0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0023001     0x4ba7
                0x00000000c0023001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0023001       0x1f 
 COMMON         0x00000000c0023020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0023020                dcache
                0x00000000c0023060                cdDriveLetter
                0x00000000c0023080                icache
 *(.bss)
 .bss           0x00000000c00230c0        0x0 crti.32
 .bss           0x00000000c00230c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00230e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00230e4       0x1c 
 .bss           0x00000000c0023100      0x378 core/malloc.32
 .bss           0x00000000c0023478        0x0 libk/ctype.32
 .bss           0x00000000c0023478        0x0 libk/string.32
 .bss           0x00000000c0023478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0023478        0x8 
 .bss           0x00000000c0023480       0x88 fs/fat/ff.32
 .bss           0x00000000c0023508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0023508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0023508       0x18 
 .bss           0x00000000c0023520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0023eb8        0x6 core/computer.32
                0x00000000c0023eb8                Krnl::computer
                0x00000000c0023ebc                KeIsPreemptionOn
                0x00000000c0023ebd                KeIsSchedulingOn
 *fill*         0x00000000c0023ebe        0x2 
 .bss           0x00000000c0023ec0        0x6 core/gdt.32
                0x00000000c0023ec0                gdtDescr
 .bss           0x00000000c0023ec6        0x0 core/idle.32
 *fill*         0x00000000c0023ec6        0x2 
 .bss           0x00000000c0023ec8        0x6 core/idt.32
                0x00000000c0023ec8                idtDescr
 .bss           0x00000000c0023ece        0x0 core/kheap.32
 *fill*         0x00000000c0023ece        0x2 
 .bss           0x00000000c0023ed0        0x4 core/main.32
                0x00000000c0023ed0                sysBootSettings
 .bss           0x00000000c0023ed4       0x29 core/physmgr.32
                0x00000000c0023ed4                Phys::forbidEvictions
                0x00000000c0023ed8                Phys::currentPagePointer
                0x00000000c0023edc                Phys::highestMem
                0x00000000c0023ee0                Phys::oldPercent
                0x00000000c0023ee4                Phys::usedPages
                0x00000000c0023ee8                Phys::usablePages
                0x00000000c0023eec                Phys::dmaUsage
 .bss           0x00000000c0023efd        0x0 core/pipe.32
 *fill*         0x00000000c0023efd        0x3 
 .bss           0x00000000c0023f00        0x9 core/terminal.32
                0x00000000c0023f00                terminalCycle
                0x00000000c0023f04                activeTerminal
                0x00000000c0023f08                VgaText::graphicMode
 *fill*         0x00000000c0023f09        0x1 
 .bss           0x00000000c0023f0a        0x2 core/tss.32
                0x00000000c0023f0a                doubleFaultSelector
 *fill*         0x00000000c0023f0c       0x14 
 .bss           0x00000000c0023f20       0x84 core/unixfile.32
                0x00000000c0023f20                sfileLpt
                0x00000000c0023f60                sfileCom
                0x00000000c0023f84                sfileNul
                0x00000000c0023f88                sfilePnt
                0x00000000c0023f8c                sfileAux
                0x00000000c0023f90                sfileCon
                0x00000000c0023f94                initialFilesAdded
                0x00000000c0023f98                unixFileLinkedList
 .bss           0x00000000c0023fa4       0x10 core/virtmgr.32
                0x00000000c0023fa4                twswaps
                0x00000000c0023fa8                swapBalance
                0x00000000c0023fac                Virt::swapfileBitmap
                0x00000000c0023fb0                firstVAS
 .bss           0x00000000c0023fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0023fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0023fb4        0x4 fs/vfs.32
                0x00000000c0023fb4                installedFilesystems
 .bss           0x00000000c0023fb8        0x0 hal/bus.32
 .bss           0x00000000c0023fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0023fb8        0x8 hal/clock.32
                0x00000000c0023fb8                User::dstOn
                0x00000000c0023fb9                User::timezoneHalfHourOffset
                0x00000000c0023fbc                User::timezoneHourOffset
 .bss           0x00000000c0023fc0        0x0 hal/device.32
 .bss           0x00000000c0023fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0023fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0023fc0        0x0 hal/fpu.32
 .bss           0x00000000c0023fc0     0x2000 hal/intctrl.32
                0x00000000c0023fc0                INT_contexts
                0x00000000c0024fc0                INT_handlers
 .bss           0x00000000c0025fc0      0x429 hal/keybrd.32
                0x00000000c0025fc0                keyboardWaitingTaskList
                0x00000000c0025fc4                keyboardSetupYet
                0x00000000c0025fc8                guiKeyboardHandler
                0x00000000c0025fe0                keystates
 *fill*         0x00000000c00263e9       0x17 
 .bss           0x00000000c0026400       0x88 hal/logidisk.32
                0x00000000c0026400                diskAssignments
                0x00000000c0026420                disks
 .bss           0x00000000c0026488        0x4 hal/mouse.32
                0x00000000c0026488                guiMouseHandler
 .bss           0x00000000c002648c        0x0 hal/nic.32
 .bss           0x00000000c002648c        0x0 hal/partition.32
 .bss           0x00000000c002648c        0x0 hal/serial.32
 .bss           0x00000000c002648c        0x4 hal/timer.32
                0x00000000c002648c                milliTenthsSinceBoot
 .bss           0x00000000c0026490        0x0 hal/vcache.32
 .bss           0x00000000c0026490        0x4 hal/video.32
                0x00000000c0026490                screen
 *fill*         0x00000000c0026494        0xc 
 .bss           0x00000000c00264a0      0x480 hw/acpi.32
                0x00000000c00264a0                systemSleepFunction
                0x00000000c00264a4                systemResetFunction
                0x00000000c00264a8                systemShutdownFunction
                0x00000000c00264ac                nextACPITable
                0x00000000c00264c0                acpiTables
                0x00000000c00266c0                usingXSDT
                0x00000000c00266c4                MADTpointer
                0x00000000c00266c8                RSDTpointer
                0x00000000c00266cc                RSDPpointer
                0x00000000c00266d0                nextAPICNMI
                0x00000000c00266e0                apicNMIInfo
                0x00000000c0026760                legacyIRQFlags
                0x00000000c0026780                ioapicDiscoveryNumber
                0x00000000c00267a0                ioapicFoundInMADT
                0x00000000c00267c0                ioapicAddresses
                0x00000000c0026840                ioapicGSIBase
                0x00000000c00268c0                processorDiscoveryNumber
                0x00000000c00268e0                matchingAPICID
                0x00000000c0026900                processorID
 .bss           0x00000000c0026920       0x10 hw/cpu.32
                0x00000000c0026920                lastD
                0x00000000c0026924                lastC
                0x00000000c0026928                lastB
                0x00000000c002692c                lastA
 .bss           0x00000000c0026930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0026930        0x8 krnl/env.32
                0x00000000c0026930                Krnl::userEnv
                0x00000000c0026934                Krnl::systemEnv
 .bss           0x00000000c0026938        0x0 krnl/inlines.32
 .bss           0x00000000c0026938        0x1 krnl/panic.32
                0x00000000c0026938                KeIsKernelInPanic
 *fill*         0x00000000c0026939        0x7 
 .bss           0x00000000c0026940       0x48 krnl/powctrl.32
                0x00000000c0026940                Krnl::powCtrlOnBattery
                0x00000000c0026960                Krnl::currentPowerSettings
                0x00000000c0026984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0026988        0x8 krnl/random.32
                0x00000000c0026988                kiRandSeed
 .bss           0x00000000c0026990        0x0 krnl/resolve.32
 .bss           0x00000000c0026990        0x0 krnl/signal.32
 .bss           0x00000000c0026990        0x0 krnl/syscalls.32
 .bss           0x00000000c0026990        0x0 net/ethernet.32
 .bss           0x00000000c0026990        0x4 reg/cm.32
 .bss           0x00000000c0026994        0x0 reg/registry.32
 .bss           0x00000000c0026994        0x0 sys/eject.32
 .bss           0x00000000c0026994        0x0 sys/exit.32
 .bss           0x00000000c0026994        0x0 sys/getcwd.32
 .bss           0x00000000c0026994        0x0 sys/getpid.32
 .bss           0x00000000c0026994        0x0 sys/getramdata.32
 .bss           0x00000000c0026994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0026994        0x0 sys/kill.32
 .bss           0x00000000c0026994        0x0 sys/loaddll.32
 .bss           0x00000000c0026994        0x0 sys/read.32
 .bss           0x00000000c0026994        0x0 sys/registersignal.32
 .bss           0x00000000c0026994        0x0 sys/registry.32
 .bss           0x00000000c0026994        0x0 sys/sbrk.32
 .bss           0x00000000c0026994        0x0 sys/setcwd.32
 .bss           0x00000000c0026994        0x0 sys/settime.32
 .bss           0x00000000c0026994        0x0 sys/timezone.32
 .bss           0x00000000c0026994        0x0 sys/write.32
 .bss           0x00000000c0026994        0x0 sys/wsbe.32
 .bss           0x00000000c0026994        0x0 sys/yield.32
 *fill*         0x00000000c0026994        0xc 
 .bss           0x00000000c00269a0      0x7a4 thr/elf.32
                0x00000000c00269a0                Thr::driverLookupNext
                0x00000000c00269c0                Thr::driverLookupLen
                0x00000000c0026bc0                Thr::driverLookupAddr
                0x00000000c0026dc0                Thr::driverNameLookup
                0x00000000c0026fc0                Thr::kernelSymbols
                0x00000000c0027040                Thr::kernelStringTable
                0x00000000c00270c0                Thr::kernelSymbolTable
                0x00000000c0027140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0027144        0x4 
 .bss           0x00000000c0027148       0x68 thr/prcssthr.32
                0x00000000c0027148                cleanerThread
                0x00000000c002714c                weNeedTheCleanerToNotBlock
                0x00000000c0027150                retValLockStuff
                0x00000000c0027154                retValSchedLock
                0x00000000c0027158                lockStuffLock
                0x00000000c002715c                schedulerLock
                0x00000000c0027160                taskSwitchesPostponedFlag
                0x00000000c0027164                postponeTaskSwitchesCounter
                0x00000000c0027168                irqDisableCounter
                0x00000000c002716c                terminatedTaskList
                0x00000000c0027178                sleepingTaskList
                0x00000000c0027184                taskList
                0x00000000c0027190                kernelProcess
 *fill*         0x00000000c00271b0       0x10 
 .bss           0x00000000c00271c0       0x40 vm86/vm8086.32
                0x00000000c00271c0                Vm::vmRetV
                0x00000000c00271c4                Vm::vmDone
                0x00000000c00271c5                Vm::vmReady
                0x00000000c00271c8                Vm::vm86Thread
                0x00000000c00271cc                Vm::vmToHostCommsPtr
                0x00000000c00271e0                Vm::vmToHostComms
 .bss           0x00000000c0027200       0x14 arch/i386/hal.32
                0x00000000c0027200                apic
                0x00000000c0027204                fpuOwner
                0x00000000c0027208                coproLoadFunc
                0x00000000c002720c                coproSaveFunc
                0x00000000c0027210                gpFaultIntercept
 .bss           0x00000000c0027214        0x0 arch/i386/pic.32
 .bss           0x00000000c0027214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0027216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0027216        0xa 
 .bss           0x00000000c0027220       0xf0 fs/fat/vfslink.32
                0x00000000c0027220                FAT::fats
                0x00000000c0027240                FAT::vfsToFatRemaps
                0x00000000c00272c0                fatToVFSRemaps
 .bss           0x00000000c0027310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0027310       0x10 
 .bss           0x00000000c0027320      0x820 fs/iso9660/vfslink.32
                0x00000000c0027320                iso9660Owner
                0x00000000c0027324                recentSector
                0x00000000c0027340                recentBuffer
 .bss           0x00000000c0027b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0027b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0027b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0027b40        0xd hw/bus/pci.32
                0x00000000c0027b40                thePCI
 .bss           0x00000000c0027b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0027b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0027b4d        0x3 
 .bss           0x00000000c0027b50        0x8 hw/diskphys/ata.32
                0x00000000c0027b50                ataSectorsWritten
                0x00000000c0027b54                ataSectorsRead
 .bss           0x00000000c0027b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0027b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0027b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0027b58        0x8 
 .bss           0x00000000c0027b60       0x41 hw/intctrl/apic.32
                0x00000000c0027b60                noOfIOAPICs
                0x00000000c0027b80                ioapics
                0x00000000c0027ba0                IOAPICsSetupYet
 .bss           0x00000000c0027ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0027ba1        0x3 
 .bss           0x00000000c0027ba4        0x4 hw/timer/pit.32
                0x00000000c0027ba4                pitFreq
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0027ba8        0x0 crtn.32
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0027ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002c74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
