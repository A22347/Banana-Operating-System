Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1b94a
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 .text          0x00000000c0001afb        0x0 libk/string.32
 .text          0x00000000c0001afb       0x51 fs/fat/diskio.32
                0x00000000c0001afb                disk_status
                0x00000000c0001afe                disk_initialize
                0x00000000c0001b01                disk_read
                0x00000000c0001b17                disk_write
                0x00000000c0001b2d                disk_ioctl
 .text          0x00000000c0001b4c     0x3d4b fs/fat/ff.32
                0x00000000c00038e8                f_mount
                0x00000000c000394a                f_open
                0x00000000c0003c15                f_read
                0x00000000c0003e14                f_write
                0x00000000c0004048                f_sync
                0x00000000c00040fd                f_close
                0x00000000c000412c                f_lseek
                0x00000000c00042d3                f_opendir
                0x00000000c000439e                f_closedir
                0x00000000c00043c0                f_readdir
                0x00000000c0004452                f_stat
                0x00000000c00044d1                f_getfree
                0x00000000c00045d3                f_truncate
                0x00000000c00046b7                f_unlink
                0x00000000c00047d9                f_mkdir
                0x00000000c0004974                f_rename
                0x00000000c0004b2a                f_chmod
                0x00000000c0004bd3                f_utime
                0x00000000c0004c81                f_getlabel
                0x00000000c0004dd2                f_setlabel
                0x00000000c0004f62                f_expand
                0x00000000c00050c2                f_mkfs
 *fill*         0x00000000c0005897        0x1 
 .text          0x00000000c0005898       0x2f fs/fat/ffsystem.32
                0x00000000c0005898                ff_memalloc
                0x00000000c00058b0                ff_memfree
 *fill*         0x00000000c00058c7        0x1 
 .text          0x00000000c00058c8      0x2a8 fs/fat/ffunicode.32
                0x00000000c00058c8                ff_uni2oem
                0x00000000c0005968                ff_oem2uni
                0x00000000c00059e0                ff_wtoupper
 .text          0x00000000c0005b70       0x94 compat/inlines.32
                0x00000000c0005b70                CPU::current()
                0x00000000c0005b7c                operator new(unsigned long)
                0x00000000c0005b81                operator delete(void*)
                0x00000000c0005b86                disableIRQs()
                0x00000000c0005b88                enableIRQs()
                0x00000000c0005b8a                lockScheduler()
                0x00000000c0005b92                unlockScheduler()
                0x00000000c0005ba1                lockStuff()
                0x00000000c0005baf                unlockStuff()
                0x00000000c0005be9                Virt::getAKernelVAS()
                0x00000000c0005bef                __not_memcpy
 .text          0x00000000c0005c04      0x118 compat/resolve.32
                0x00000000c0005c04                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0005d1c      0x77b core/computer.32
                0x00000000c0005d1c                Computer::close(int, int, void*)
                0x00000000c0005d61                Krnl::firstTask()
                0x00000000c0005eaa                Computer::Computer()
                0x00000000c0005eaa                Computer::Computer()
                0x00000000c0006010                Computer::setBootMessage(char const*)
                0x00000000c0006012                Computer::detectFeatures()
                0x00000000c000621c                Computer::displayFeatures()
                0x00000000c000621e                Computer::rdmsr(unsigned int)
                0x00000000c000624a                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006282                Computer::shutdown()
                0x00000000c000629a                Computer::restart()
                0x00000000c00062b2                Computer::sleep()
                0x00000000c00062c6                Computer::nmiEnabled()
                0x00000000c00062d2                Computer::readCMOS(unsigned char)
                0x00000000c00062ec                Computer::enableNMI(bool)
                0x00000000c0006304                Computer::open(int, int, void*)
                0x00000000c00063d8                Computer::disableNMI()
                0x00000000c00063e8                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006406                Computer::handleNMI()
                0x00000000c000646c                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c0006497        0x1 
 .text          0x00000000c0006498      0x211 core/gdt.32
                0x00000000c0006498                GDTEntry::setBase(unsigned int)
                0x00000000c00064b4                GDTEntry::setLimit(unsigned int)
                0x00000000c00064d2                GDT::GDT()
                0x00000000c00064d2                GDT::GDT()
                0x00000000c00064e8                GDT::addEntry(GDTEntry)
                0x00000000c000650a                GDT::getNumberOfEntries()
                0x00000000c0006512                GDT::flush()
                0x00000000c0006534                GDT::setup()
 .text          0x00000000c00066a9       0x19 core/idle.32
                0x00000000c00066a9                idleFunction(void*)
 *fill*         0x00000000c00066c2        0x2 
 .text          0x00000000c00066c4      0x464 core/idt.32
                0x00000000c00066c4                IDTEntry::IDTEntry(bool)
                0x00000000c00066c4                IDTEntry::IDTEntry(bool)
                0x00000000c0006736                IDTEntry::setOffset(unsigned int)
                0x00000000c000674c                IDT::IDT()
                0x00000000c000674c                IDT::IDT()
                0x00000000c000674e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0006756                IDT::addEntry(IDTEntry, int)
                0x00000000c0006770                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00067a8                IDT::flush()
                0x00000000c00067c2                IDT::setup()
 .text          0x00000000c0006b28      0x183 core/kheap.32
                0x00000000c0006b28                sbrk
                0x00000000c0006bbd                mmap
                0x00000000c0006bd3                munmap
                0x00000000c0006be9                liballoc_lock()
                0x00000000c0006bf6                liballoc_unlock()
                0x00000000c0006c0a                liballoc_alloc(int)
                0x00000000c0006c22                liballoc_free(void*, int)
                0x00000000c0006c3d                realloc
                0x00000000c0006c51                malloc
                0x00000000c0006c61                free
                0x00000000c0006c71                rfree
                0x00000000c0006c81                calloc
 .text          0x00000000c0006cab      0x1b4 core/main.32
                0x00000000c0006cab                Krnl::setBootMessage(char const*)
                0x00000000c0006d17                kernel_main
 .text          0x00000000c0006e5f      0x5dc core/physmgr.32
                0x00000000c0006e5f                Phys::allocateDMA(unsigned long)
                0x00000000c0006f36                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0006f69                Phys::setPageState(unsigned long, bool)
                0x00000000c0006f9b                Phys::getPageState(unsigned long)
                0x00000000c0006fbc                Phys::freePage(unsigned long)
                0x00000000c000701e                Phys::allocatePage()
                0x00000000c00070dc                Phys::allocateContiguousPages(int)
                0x00000000c0007138                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007170                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000743b        0x1 
 .text          0x00000000c000743c      0x273 core/pipe.32
                0x00000000c000743c                Pipe::isAtty()
                0x00000000c0007440                Pipe::~Pipe()
                0x00000000c0007440                Pipe::~Pipe()
                0x00000000c0007464                Pipe::~Pipe()
                0x00000000c000748c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000754c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0007648                Pipe::Pipe(int)
                0x00000000c0007648                Pipe::Pipe(int)
 *fill*         0x00000000c00076af        0x1 
 .text          0x00000000c00076b0      0xa1e core/terminal.32
                0x00000000c00076b0                VgaText::isAtty()
                0x00000000c00076b4                VgaText::~VgaText()
                0x00000000c00076b4                VgaText::~VgaText()
                0x00000000c00076d8                VgaText::~VgaText()
                0x00000000c0007702                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0007722                setTerminalScrollLock(bool)
                0x00000000c0007723                doTerminalCycle()
                0x00000000c0007724                addToTerminalCycle(VgaText*)
                0x00000000c0007725                scrollTerminalScrollLock(int)
                0x00000000c0007726                VgaText::updateTitle()
                0x00000000c0007728                VgaText::load()
                0x00000000c000772a                VgaText::updateCursor()
                0x00000000c0007740                VgaText::doANSI_SGR(int)
                0x00000000c00077b4                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00077c4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00077d4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00077f4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0007800                VgaText::setTitleColour(VgaColour)
                0x00000000c000780c                VgaText::setTitle(char*)
                0x00000000c000780e                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0007820                VgaText::scrollScreen()
                0x00000000c00078b8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00078ca                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000795a                VgaText::getCursorX()
                0x00000000c0007962                VgaText::getCursorY()
                0x00000000c000796a                VgaText::setCursor(int, int)
                0x00000000c0007981                setActiveTerminal(VgaText*)
                0x00000000c00079cc                VgaText::clearScreen()
                0x00000000c0007a1a                VgaText::setCursorX(int)
                0x00000000c0007a32                VgaText::setCursorY(int)
                0x00000000c0007a4a                VgaText::incrementCursor(bool)
                0x00000000c0007a9e                VgaText::decrementCursor(bool)
                0x00000000c0007ac0                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0007b8e                VgaText::putchar(char)
                0x00000000c0007c7a                VgaText::putx(unsigned int)
                0x00000000c0007cc0                VgaText::puts(char const*)
                0x00000000c0007ce6                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0007d32                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0007e84                VgaText::VgaText(char const*)
                0x00000000c0007e84                VgaText::VgaText(char const*)
                0x00000000c0007fd0                VgaText::receiveKey(unsigned char)
                0x00000000c00080a8                VgaText::doUpdate()
                0x00000000c00080a9                newTerminal(char*)
 *fill*         0x00000000c00080ce        0x2 
 .text          0x00000000c00080d0      0x1a1 core/tss.32
                0x00000000c00080d0                TSS::TSS()
                0x00000000c00080d0                TSS::TSS()
                0x00000000c00080e0                TSS::setESP(unsigned long)
                0x00000000c00080f4                TSS::flush()
                0x00000000c0008114                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008271        0x1 
 .text          0x00000000c0008272      0x4c2 core/unixfile.32
                0x00000000c0008272                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00082c8                ReservedFilename::isAtty()
                0x00000000c00082e4                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008342                UnixFile::getFileDescriptor()
                0x00000000c000834a                UnixFile::UnixFile(int)
                0x00000000c000834a                UnixFile::UnixFile(int)
                0x00000000c00084fa                ReservedFilename::ReservedFilename(int)
                0x00000000c00084fa                ReservedFilename::ReservedFilename(int)
                0x00000000c000852c                UnixFile::~UnixFile()
                0x00000000c000852c                UnixFile::~UnixFile()
                0x00000000c00085c4                UnixFile::~UnixFile()
                0x00000000c00085ec                ReservedFilename::~ReservedFilename()
                0x00000000c00085ec                ReservedFilename::~ReservedFilename()
                0x00000000c0008610                ReservedFilename::~ReservedFilename()
                0x00000000c0008637                getFromFileDescriptor(int)
 .text          0x00000000c0008734     0x119a core/virtmgr.32
                0x00000000c0008734                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0008769                Virt::getPageState(unsigned long)
                0x00000000c000878d                Virt::allocateKernelVirtualPages(int)
                0x00000000c000889e                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00088bc                Virt::swapIDToSector(unsigned long)
                0x00000000c00088ce                Virt::allocateSwapfilePage()
                0x00000000c000894c                Virt::virtualMemorySetup()
                0x00000000c0008997                Virt::setupPageSwapping(int)
                0x00000000c0008a08                VAS::VAS(VAS*)
                0x00000000c0008a08                VAS::VAS(VAS*)
                0x00000000c0008a36                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0008a62                VAS::getPageTableEntry(unsigned long)
                0x00000000c0008a81                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0008ba6                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0008bca                VAS::virtualToPhysical(unsigned long)
                0x00000000c0008be4                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0008c24                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0008c58                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0008c82                VAS::~VAS()
                0x00000000c0008c82                VAS::~VAS()
                0x00000000c0008de6                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0008eea                VAS::allocatePages(int, int)
                0x00000000c00090c2                VAS::setCPUSpecific(unsigned long)
                0x00000000c00090e0                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c00091a6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009294                VAS::VAS(bool)
                0x00000000c0009294                VAS::VAS(bool)
                0x00000000c0009514                VAS::VAS()
                0x00000000c0009514                VAS::VAS()
                0x00000000c0009584                VAS::evict(unsigned long)
                0x00000000c0009646                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0009734                VAS::scanForEviction()
                0x00000000c0009814                mapVASFirstTime
 .text          0x00000000c00098ce       0x5f coreobjs/c++.32
                0x00000000c00098ce                __cxa_atexit
                0x00000000c00098d1                __cxa_finalize
                0x00000000c00098d2                __stack_chk_fail
                0x00000000c0009908                __cxa_pure_virtual
                0x00000000c0009919                operator new[](unsigned long)
                0x00000000c000991e                operator delete(void*, unsigned long)
                0x00000000c0009923                operator delete[](void*)
                0x00000000c0009928                operator delete[](void*, unsigned long)
 .text          0x00000000c000992d      0x21c dbg/kconsole.32
                0x00000000c000992d                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0009998                Dbg::logc(char)
                0x00000000c00099b8                Dbg::logs(char*)
                0x00000000c00099d5                Dbg::logWriteInt(unsigned int)
                0x00000000c00099f3                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0009a14                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c0009b49        0x1 
 .text          0x00000000c0009b4a      0xc5c fs/vfs.32
                0x00000000c0009b4a                File::read(unsigned long long, void*, int*)
                0x00000000c0009ba2                File::write(unsigned long long, void*, int*)
                0x00000000c0009bfa                Directory::read(unsigned long long, void*, int*)
                0x00000000c0009c52                Directory::write(unsigned long long, void*, int*)
                0x00000000c0009c80                File::isAtty()
                0x00000000c0009c84                Directory::isAtty()
                0x00000000c0009c88                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0009c8e                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0009c94                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0009c9a                File::~File()
                0x00000000c0009c9a                File::~File()
                0x00000000c0009cbe                File::~File()
                0x00000000c0009ce8                Directory::~Directory()
                0x00000000c0009ce8                Directory::~Directory()
                0x00000000c0009d0c                Directory::~Directory()
                0x00000000c0009d36                Filesystem::Filesystem()
                0x00000000c0009d36                Filesystem::Filesystem()
                0x00000000c0009d5a                Filesystem::~Filesystem()
                0x00000000c0009d5a                Filesystem::~Filesystem()
                0x00000000c0009d68                Filesystem::~Filesystem()
                0x00000000c0009d8c                Fs::getcwd(Process*, char*, int)
                0x00000000c0009db6                Fs::initVFS()
                0x00000000c0009de0                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c0009f8a                File::File(char const*, Process*)
                0x00000000c0009f8a                File::File(char const*, Process*)
                0x00000000c000a04a                File::open(FileOpenMode)
                0x00000000c000a0a8                File::close()
                0x00000000c000a108                File::seek(unsigned long long)
                0x00000000c000a15e                File::tell(unsigned long long*)
                0x00000000c000a1ae                File::rewind()
                0x00000000c000a1c2                File::unlink()
                0x00000000c000a20e                File::rename(char const*)
                0x00000000c000a25c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000a2b8                File::exists()
                0x00000000c000a2f6                File::stat(unsigned long long*, bool*)
                0x00000000c000a357                Fs::setcwd(Process*, char*)
                0x00000000c000a4b4                Directory::Directory(char const*, Process*)
                0x00000000c000a4b4                Directory::Directory(char const*, Process*)
                0x00000000c000a574                Directory::open()
                0x00000000c000a5d0                Directory::close()
                0x00000000c000a630                Directory::unlink()
                0x00000000c000a67c                Directory::rename(char const*)
                0x00000000c000a6ca                Directory::exists()
                0x00000000c000a708                Directory::read(dirent*)
                0x00000000c000a754                Directory::create()
                0x00000000c000a7a0                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000a7a6        0x2 
 .text          0x00000000c000a7a8       0x86 hal/bus.32
                0x00000000c000a7a8                Bus::Bus(char const*)
                0x00000000c000a7a8                Bus::Bus(char const*)
                0x00000000c000a7e0                Bus::~Bus()
                0x00000000c000a7e0                Bus::~Bus()
                0x00000000c000a804                Bus::~Bus()
 .text          0x00000000c000a82e       0x96 hal/buzzer.32
                0x00000000c000a82e                beepThread(void*)
                0x00000000c000a86b                Krnl::beep(int, int, bool)
 .text          0x00000000c000a8c4      0x46d hal/clock.32
                0x00000000c000a8c4                User::loadClockSettings(int)
                0x00000000c000a916                Clock::Clock(char const*)
                0x00000000c000a916                Clock::Clock(char const*)
                0x00000000c000a94c                Clock::~Clock()
                0x00000000c000a94c                Clock::~Clock()
                0x00000000c000a970                Clock::~Clock()
                0x00000000c000a99a                Clock::timeInSecondsLocal()
                0x00000000c000a9e2                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000aa3b                datetimeToSeconds(datetime_t)
                0x00000000c000ab68                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000abc8                secondsToDatetime(unsigned long long)
                0x00000000c000ad0c                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000ad31        0x1 
 .text          0x00000000c000ad32      0x464 hal/device.32
                0x00000000c000ad32                Device::hibernate()
                0x00000000c000ad34                Device::wake()
                0x00000000c000ad36                Device::detect()
                0x00000000c000ad38                Device::disableLegacy()
                0x00000000c000ad3a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000ad3c                DriverlessDevice::close(int, int, void*)
                0x00000000c000ad40                DriverlessDevice::detect()
                0x00000000c000ad42                DriverlessDevice::open(int, int, void*)
                0x00000000c000ad56                Device::~Device()
                0x00000000c000ad56                Device::~Device()
                0x00000000c000ad64                Device::~Device()
                0x00000000c000ad8c                Device::findAndLoadDriver()
                0x00000000c000ad9a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000adc0                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000ae00                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ae2a                Device::getParent()
                0x00000000c000ae36                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ae54                Device::addChild(Device*)
                0x00000000c000ae98                Device::removeAllChildren()
                0x00000000c000aede                Device::hibernateAll()
                0x00000000c000af0e                Device::wakeAll()
                0x00000000c000af3e                Device::detectAll()
                0x00000000c000af6e                Device::disableLegacyAll()
                0x00000000c000af70                Device::loadDriversForAll()
                0x00000000c000af72                Device::closeAll()
                0x00000000c000afa8                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000afde                Device::setName(char const*)
                0x00000000c000afec                Device::Device(char const*)
                0x00000000c000afec                Device::Device(char const*)
                0x00000000c000b0e8                Device::getName()
                0x00000000c000b0f2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000b0f2                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000b128                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000b16c                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000b196        0x2 
 .text          0x00000000c000b198       0x86 hal/diskctrl.32
                0x00000000c000b198                HardDiskController::HardDiskController(char const*)
                0x00000000c000b198                HardDiskController::HardDiskController(char const*)
                0x00000000c000b1d0                HardDiskController::~HardDiskController()
                0x00000000c000b1d0                HardDiskController::~HardDiskController()
                0x00000000c000b1f4                HardDiskController::~HardDiskController()
 .text          0x00000000c000b21e       0xe2 hal/diskphys.32
                0x00000000c000b21e                PhysicalDisk::eject()
                0x00000000c000b222                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b222                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b28a                PhysicalDisk::startCache()
                0x00000000c000b2b2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b2b2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b2d6                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000b300        0x0 hal/fpu.32
 .text          0x00000000c000b300      0x35d hal/intctrl.32
                0x00000000c000b300                int_handler
                0x00000000c000b388                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000b3d0                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b508                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000b53c                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b5bb                setupINTS()
                0x00000000c000b618                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000b65d        0x1 
 .text          0x00000000c000b65e      0x78c hal/keybrd.32
                0x00000000c000b65e                startGUI(void*)
                0x00000000c000b6ca                startGUIVESA(void*)
                0x00000000c000b736                sendKeyToTerminal(unsigned char)
                0x00000000c000b7f9                sendKeyboardToken(KeyboardToken)
                0x00000000c000bc39                clearInternalKeybuffer(VgaText*)
                0x00000000c000bc6e                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000bd60                Keyboard::Keyboard(char const*)
                0x00000000c000bd60                Keyboard::Keyboard(char const*)
                0x00000000c000bd9c                Keyboard::~Keyboard()
                0x00000000c000bd9c                Keyboard::~Keyboard()
                0x00000000c000bdc0                Keyboard::~Keyboard()
 .text          0x00000000c000bdea      0x3ea hal/logidisk.32
                0x00000000c000bdea                LogicalDisk::close(int, int, void*)
                0x00000000c000bdee                LogicalDisk::~LogicalDisk()
                0x00000000c000bdee                LogicalDisk::~LogicalDisk()
                0x00000000c000be12                LogicalDisk::~LogicalDisk()
                0x00000000c000be3c                LogicalDisk::open(int, int, void*)
                0x00000000c000be50                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000be88                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000bece                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bece                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bf84                LogicalDisk::assignDriveLetter()
                0x00000000c000c03a                LogicalDisk::mount()
                0x00000000c000c082                LogicalDisk::unmount()
                0x00000000c000c092                LogicalDisk::eject()
                0x00000000c000c0a6                LogicalDisk::unassignDriveLetter()
                0x00000000c000c0fc                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000c168                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000c1d4       0x86 hal/mouse.32
                0x00000000c000c1d4                Mouse::Mouse(char const*)
                0x00000000c000c1d4                Mouse::Mouse(char const*)
                0x00000000c000c20c                Mouse::~Mouse()
                0x00000000c000c20c                Mouse::~Mouse()
                0x00000000c000c230                Mouse::~Mouse()
 .text          0x00000000c000c25a      0x339 hal/partition.32
                0x00000000c000c25a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c302                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000c593        0x1 
 .text          0x00000000c000c594       0x86 hal/serial.32
                0x00000000c000c594                Serial::Serial(char const*)
                0x00000000c000c594                Serial::Serial(char const*)
                0x00000000c000c5cc                Serial::~Serial()
                0x00000000c000c5cc                Serial::~Serial()
                0x00000000c000c5f0                Serial::~Serial()
 *fill*         0x00000000c000c61a        0x2 
 .text          0x00000000c000c61c      0x234 hal/timer.32
                0x00000000c000c61c                Timer::Timer(char const*)
                0x00000000c000c61c                Timer::Timer(char const*)
                0x00000000c000c654                Timer::~Timer()
                0x00000000c000c654                Timer::~Timer()
                0x00000000c000c678                Timer::~Timer()
                0x00000000c000c6a2                Timer::read()
                0x00000000c000c6ad                setupTimer(int)
                0x00000000c000c6e8                timerHandler(unsigned int)
 .text          0x00000000c000c850      0x43e hal/vcache.32
                0x00000000c000c850                VCache::VCache(PhysicalDisk*)
                0x00000000c000c850                VCache::VCache(PhysicalDisk*)
                0x00000000c000c9b8                VCache::invalidateReadBuffer()
                0x00000000c000c9c8                VCache::writeWriteBuffer()
                0x00000000c000ca14                VCache::~VCache()
                0x00000000c000ca14                VCache::~VCache()
                0x00000000c000ca68                VCache::~VCache()
                0x00000000c000ca90                VCache::write(unsigned long long, int, void*)
                0x00000000c000cb8a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000cc8e      0x4b3 hal/video.32
                0x00000000c000cc8e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ccda                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000cd4a                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000cdc8                Video::clearScreen(unsigned int)
                0x00000000c000cdfc                Video::putpixel(int, int, unsigned int)
                0x00000000c000ce0a                Video::Video(char const*)
                0x00000000c000ce0a                Video::Video(char const*)
                0x00000000c000ce40                Video::~Video()
                0x00000000c000ce40                Video::~Video()
                0x00000000c000ce64                Video::~Video()
                0x00000000c000ce8e                Video::isMonochrome()
                0x00000000c000ce9a                Video::getWidth()
                0x00000000c000cea6                Video::getHeight()
                0x00000000c000ceb2                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000cf6e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000d0d6                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000d141        0x3 
 .text          0x00000000c000d144     0x1307 hw/acpi.32
                0x00000000c000d144                ACPI::close(int, int, void*)
                0x00000000c000d1fc                findRSDP()
                0x00000000c000d28c                loadACPITables(unsigned char*)
                0x00000000c000d4f0                findRSDT(unsigned char*)
                0x00000000c000d640                findDataTable(unsigned char*, char*)
                0x00000000c000d6b8                scanMADT()
                0x00000000c000db8c                ACPI::ACPI()
                0x00000000c000db8c                ACPI::ACPI()
                0x00000000c000dbe0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000dcc8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000dd90                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000dd98                ACPI::detectPCI()
                0x00000000c000dfa0                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000dff4                ACPI::sleep()
                0x00000000c000e010                ACPI::open(int, int, void*)
 *fill*         0x00000000c000e44b        0x1 
 .text          0x00000000c000e44c      0xb95 hw/cpu.32
                0x00000000c000e44c                CPU::close(int, int, void*)
                0x00000000c000e450                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000e46c                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000e484                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000e4f8                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000e57c                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000e5aa                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000e5d8                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000e606                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000e634                CPU::CPU()
                0x00000000c000e634                CPU::CPU()
                0x00000000c000e6c2                CPU::displayFeatures()
                0x00000000c000e6c4                CPU::detectFeatures()
                0x00000000c000ed88                CPU::setupSMEP()
                0x00000000c000ed94                CPU::setupUMIP()
                0x00000000c000ed9e                CPU::setupTSC()
                0x00000000c000eda8                CPU::setupLargePages()
                0x00000000c000edb2                CPU::setupPAT()
                0x00000000c000edee                CPU::setupMTRR()
                0x00000000c000edf0                CPU::setupGlobalPages()
                0x00000000c000edfa                CPU::allowUsermodeDataAccess()
                0x00000000c000ee0c                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ee1e                CPU::setupSMAP()
                0x00000000c000ee2c                CPU::setupFeatures()
                0x00000000c000eef8                CPU::open(int, int, void*)
 .text          0x00000000c000efe1        0x4 hw/smp.32
                0x00000000c000efe1                Krnl::smpEntry()
                0x00000000c000efe3                Krnl::startCPU(int)
                0x00000000c000efe4                Krnl::startCPUs()
 *fill*         0x00000000c000efe5        0x1 
 .text          0x00000000c000efe6      0x581 krnl/env.32
                0x00000000c000efe6                EnvVarContainer::getEnv(char const*)
                0x00000000c000f024                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000f0e6                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000f0e8                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000f2ce                EnvVarContainer::__loadSystem()
                0x00000000c000f2e8                EnvVarContainer::__loadUser()
                0x00000000c000f2ea                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f2ea                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f30c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f30c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f33c                Krnl::getEnv(Process*, char const*)
                0x00000000c000f3a1                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000f3bb                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000f3da                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000f3ed                Krnl::deleteEnvSystem(char const*)
                0x00000000c000f3ee                Krnl::deleteEnvUser(char const*)
                0x00000000c000f3ef                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000f3f0                Krnl::newProcessEnv(Process*)
                0x00000000c000f412                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000f45e                Krnl::loadSystemEnv()
                0x00000000c000f48c                Krnl::loadUserEnv()
                0x00000000c000f4b2                Krnl::flushEnv()
                0x00000000c000f4b3                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000f4d3                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c000f567      0x1ff krnl/panic.32
                0x00000000c000f567                Krnl::panic(char const*)
 .text          0x00000000c000f766      0x168 krnl/powctrl.32
                0x00000000c000f766                Krnl::powerThread(void*)
                0x00000000c000f7ba                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c000f7d0                Krnl::userIOReceived()
                0x00000000c000f7db                Krnl::handlePowerButton()
                0x00000000c000f810                Krnl::handleSleepButton()
                0x00000000c000f845                Krnl::setupPowerManager()
 .text          0x00000000c000f8ce      0x50e reg/registry.32
                0x00000000c000f8ce                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c000fa26                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c000fb7b                Reg::getLine(char*, char*, char*)
                0x00000000c000fbb2                Reg::readInt(char*, char*, int*)
                0x00000000c000fc9d                Reg::readString(char*, char*, char*, int)
                0x00000000c000fd1e                Reg::readBool(char*, char*, bool*)
                0x00000000c000fd43                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c000fd6f                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c000fd9b                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c000fddc       0x36 sys/sc_eject.32
                0x00000000c000fddc                Sys::eject(regs*)
 .text          0x00000000c000fe12       0x18 sys/sc_exit.32
                0x00000000c000fe12                Sys::exit(regs*)
 .text          0x00000000c000fe2a       0x1f sys/sc_getcwd.32
                0x00000000c000fe2a                Sys::getCwd(regs*)
 .text          0x00000000c000fe49        0xc sys/sc_getpid.32
                0x00000000c000fe49                Sys::getPID(regs*)
 .text          0x00000000c000fe55       0x1a sys/sc_getramdata.32
                0x00000000c000fe55                Sys::getRAMData(regs*)
 .text          0x00000000c000fe6f       0x82 sys/sc_getvgaptr.32
                0x00000000c000fe6f                Sys::getVGAPtr(regs*)
 .text          0x00000000c000fef1       0xa8 sys/sc_loaddll.32
                0x00000000c000fef1                Sys::loadDLL(regs*)
 .text          0x00000000c000ff99       0x68 sys/sc_read.32
                0x00000000c000ff99                Sys::read(regs*)
 .text          0x00000000c0010001       0x55 sys/sc_sbrk.32
                0x00000000c0010001                Sys::sbrk(regs*)
 .text          0x00000000c0010056       0x1c sys/sc_setcwd.32
                0x00000000c0010056                Sys::setCwd(regs*)
 .text          0x00000000c0010072       0x95 sys/sc_settime.32
                0x00000000c0010072                Sys::setTime(regs*)
 .text          0x00000000c0010107       0x4a sys/sc_timezone.32
                0x00000000c0010107                Sys::timezone(regs*)
 .text          0x00000000c0010151       0x68 sys/sc_write.32
                0x00000000c0010151                Sys::write(regs*)
 .text          0x00000000c00101b9       0x62 sys/sc_wsbe.32
                0x00000000c00101b9                Sys::wsbe(regs*)
 .text          0x00000000c001021b       0x25 sys/sc_yield.32
                0x00000000c001021b                Sys::yield(regs*)
 .text          0x00000000c0010240      0xe2c sys/syscalls.32
                0x00000000c0010240                sysCallSeekDir(regs*)
                0x00000000c0010245                sysCallTellDir(regs*)
                0x00000000c001024a                sysCallVerify(regs*)
                0x00000000c0010254                sysCallGetArgc(regs*)
                0x00000000c0010264                sysCallTTYName(regs*)
                0x00000000c001026c                sysFormatDisk(regs*)
                0x00000000c00102d9                sysSetDiskVolumeLabel(regs*)
                0x00000000c0010323                sysGetDiskVolumeLabel(regs*)
                0x00000000c0010378                sysShutdown(regs*)
                0x00000000c00103d6                sysCallRealpath(regs*)
                0x00000000c0010419                sysCallReadDir(regs*)
                0x00000000c0010499                sysCallIsATTY(regs*)
                0x00000000c00104f5                sysCallSeek(regs*)
                0x00000000c001054e                sysCallTell(regs*)
                0x00000000c00105bd                sysCallSize(regs*)
                0x00000000c0010632                sysCallSizeFromFilename(regs*)
                0x00000000c00106e5                sysCallClose(regs*)
                0x00000000c0010745                sysCallOpenDir(regs*)
                0x00000000c00107bc                sysCallCloseDir(regs*)
                0x00000000c0010810                sysCallMakeDir(regs*)
                0x00000000c0010882                sysCallWait(regs*)
                0x00000000c001089f                sysCallNotImpl(regs*)
                0x00000000c00108ba                sysPanic(regs*)
                0x00000000c00108d5                sysCallRmdir(regs*)
                0x00000000c001093c                sysCallUnlink(regs*)
                0x00000000c00109a3                sysCallGetArgv(regs*)
                0x00000000c00109f0                sysCallUSleep(regs*)
                0x00000000c0010a19                sysCallSpawn(regs*)
                0x00000000c0010a82                sysCallGetEnv(regs*)
                0x00000000c0010b31                sysSetFatAttrib(regs*)
                0x00000000c0010ba8                sysPipe(regs*)
                0x00000000c0010bed                sysGetUnixTime(regs*)
                0x00000000c0010c01                string_ends_with(char const*, char const*)
                0x00000000c0010c4b                sysCallOpen(regs*)
                0x00000000c0010e3f                Sys::loadSyscalls()
                0x00000000c001102a                Sys::systemCall(regs*, void*)
 .text          0x00000000c001106c     0x11e5 thr/elf.32
                0x00000000c001106c                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00112f8                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001150e                Thr::runtimeReferenceHelper()
                0x00000000c0011521                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0011570                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001182e                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0011f64                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0011f96                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0011fcd                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0011fe7                Thr::loadDLL(char const*, bool)
                0x00000000c0012218                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0012251        0x3 
 .text          0x00000000c0012254     0x12c5 thr/prcssthr.32
                0x00000000c0012254                userModeEntryPoint(void*)
                0x00000000c001227c                changeTSS
                0x00000000c00122ac                switchToThread(ThreadControlBlock*)
                0x00000000c0012360                Process::addArgs(char**)
                0x00000000c00123c0                Process::Process(char const*, Process*, char**)
                0x00000000c00123c0                Process::Process(char const*, Process*, char**)
                0x00000000c00125b0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00125b0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001276c                taskStartupFunction
                0x00000000c0012778                Semaphore::Semaphore(int)
                0x00000000c0012778                Semaphore::Semaphore(int)
                0x00000000c00127a8                Mutex::Mutex()
                0x00000000c00127a8                Mutex::Mutex()
                0x00000000c00127bc                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00128b4                Process::createUserThread()
                0x00000000c00128d4                setupMultitasking(void (*)())
                0x00000000c00129dc                schedule()
                0x00000000c0012a6c                Semaphore::tryAcquire()
                0x00000000c0012b38                Semaphore::assertLocked(char const*)
                0x00000000c0012bb0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0012bd8                blockTask(TaskState)
                0x00000000c0012c08                waitTask(int, int*, int)
                0x00000000c0012c4c                milliTenthSleepUntil(unsigned int)
                0x00000000c0012cdc                milliTenthSleep(unsigned int)
                0x00000000c0012cec                sleep(unsigned int)
                0x00000000c0012d08                Semaphore::acquire()
                0x00000000c0012dc4                taskReturned
                0x00000000c0012e00                Thr::processFromPID(int)
                0x00000000c0012ea0                unblockTask(ThreadControlBlock*)
                0x00000000c0012f44                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0013210                cleanerTaskFunction(void*)
                0x00000000c0013300                terminateTask(int)
                0x00000000c00133cc                Thr::terminateFromIRQ(int)
                0x00000000c00133dc                Semaphore::release()
 .text          0x00000000c0013519      0xb93 vm86/vm8086.32
                0x00000000c0013519                Vm::inbv(unsigned short)
                0x00000000c001352c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0013562                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0013572                Vm::getSegment(unsigned int)
                0x00000000c001357a                Vm::getOffset(unsigned int)
                0x00000000c001357f                Vm::mainloop2()
                0x00000000c00135b9                Vm::mainVm8086Loop(void*)
                0x00000000c00135c9                Vm::mainloop3(unsigned long)
                0x00000000c00135ef                Vm::initialise8086()
                0x00000000c0013632                Vm::finish8086()
                0x00000000c0013693                Vm::getOutput8086(unsigned char*)
                0x00000000c00136b8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0013771                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00138d9                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0013963                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0013974                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0013986                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0013997                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00139ac                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00139c2                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00139d7                Vm::faultHandler(regs*)
 .text          0x00000000c00140ac      0x8c5 arch/i386/hal.32
                0x00000000c00140ac                noCopro(unsigned long)
                0x00000000c00140ad                nmiHandler(regs*, void*)
                0x00000000c00140c6                doubleFault(regs*, void*)
                0x00000000c00140df                displayDebugInfo(regs*)
                0x00000000c0014400                displayProgramFault(char const*)
                0x00000000c001444c                gpFault(regs*, void*)
                0x00000000c00144b1                pgFault(regs*, void*)
                0x00000000c0014513                otherISRHandler(regs*, void*)
                0x00000000c0014547                opcodeFault(regs*, void*)
                0x00000000c00145c7                i386SaveCoprocessor(void*)
                0x00000000c00145db                i386LoadCoprocessor(void*)
                0x00000000c00145ef                x87EmulHandler(regs*, void*)
                0x00000000c001468c                HalInitialiseCoprocessor()
                0x00000000c001473a                HalPanic(char const*)
                0x00000000c001473f                HalQueryPerformanceCounter()
                0x00000000c001475a                HalInitialise()
                0x00000000c0014900                HalMakeBeep(int)
                0x00000000c001493a                HalGetRand()
                0x00000000c001493d                HalEndOfInterrupt(int)
                0x00000000c001496e                HalRestart()
                0x00000000c001496f                HalShutdown()
                0x00000000c0014970                HalSleep()
 *fill*         0x00000000c0014971        0x3 
 .text          0x00000000c0014974      0x2f4 arch/i386/pic.32
                0x00000000c0014974                picIoWait()
                0x00000000c001497c                picDisable()
                0x00000000c00149b0                picGetIRQReg(int)
                0x00000000c0014a34                picOpen()
                0x00000000c0014bc4                picEOI(int)
 .text          0x00000000c0014c68      0x64d arch/i386/rtc.32
                0x00000000c0014c68                RTC::open(int, int, void*)
                0x00000000c0014c6c                RTC::close(int, int, void*)
                0x00000000c0014c70                RTC::timeInSecondsUTC()
                0x00000000c0014c82                RTC::timeInDatetimeUTC()
                0x00000000c0014ca8                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0014ce6                RTC::~RTC()
                0x00000000c0014ce6                RTC::~RTC()
                0x00000000c0014d0a                RTC::~RTC()
                0x00000000c0014d34                RTC::get_update_in_progress_flag()
                0x00000000c0014d4c                RTC::completeRTCRefresh()
                0x00000000c0015004                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00151b7                rtcIRQHandler(regs*, void*)
                0x00000000c00151fc                RTC::RTC()
                0x00000000c00151fc                RTC::RTC()
 *fill*         0x00000000c00152b5        0x3 
 .text          0x00000000c00152b8      0x203 arch/i386/vga.32
                0x00000000c00152b8                HalConsoleScroll(int, int)
                0x00000000c00153c0                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001542c                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00154bb        0x1 
 .text          0x00000000c00154bc     0x13e7 fs/fat/vfslink.32
                0x00000000c00154bc                FAT::getName()
                0x00000000c00154c4                FAT::tell(void*, unsigned long long*)
                0x00000000c0015500                FAT::stat(void*, unsigned long long*)
                0x00000000c001553c                FAT::~FAT()
                0x00000000c001553c                FAT::~FAT()
                0x00000000c0015560                FAT::~FAT()
                0x00000000c0015588                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001562c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00156f0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00158c4                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0015adc                FAT::allocateSwapfile(char const*, int)
                0x00000000c0015c9c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0015e08                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0015e68                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0015ec8                FAT::close(void*)
                0x00000000c0015f1c                FAT::closeDir(void*)
                0x00000000c0015f70                FAT::seek(void*, unsigned long long)
                0x00000000c0015fc8                fatWrapperReadDisk
                0x00000000c001600c                fatWrapperWriteDisk
                0x00000000c0016050                fatWrapperIoctl
                0x00000000c001616c                FAT::FAT()
                0x00000000c001616c                FAT::FAT()
                0x00000000c00161c0                FAT::fixFilepath(char*)
                0x00000000c00161fc                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0016334                FAT::openDir(char const*, void**)
                0x00000000c00163e4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00164dc                FAT::unlink(char const*)
                0x00000000c001655c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00166e8                FAT::rename(char const*, char const*)
                0x00000000c00167b4                FAT::mkdir(char const*)
                0x00000000c0016834                FAT::exists(char const*)
 *fill*         0x00000000c00168a3        0x1 
 .text          0x00000000c00168a4      0xba5 fs/iso9660/vfslink.32
                0x00000000c00168a4                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00168aa                ISO9660::seek(void*, unsigned long long)
                0x00000000c00168da                ISO9660::tell(void*, unsigned long long*)
                0x00000000c00168fe                ISO9660::getName()
                0x00000000c0016904                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0016928                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001692e                ISO9660::unlink(char const*)
                0x00000000c0016934                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001693a                ISO9660::rename(char const*, char const*)
                0x00000000c0016940                ISO9660::mkdir(char const*)
                0x00000000c0016946                ISO9660::close(void*)
                0x00000000c0016968                ISO9660::closeDir(void*)
                0x00000000c001698a                ISO9660::~ISO9660()
                0x00000000c001698a                ISO9660::~ISO9660()
                0x00000000c00169ae                ISO9660::~ISO9660()
                0x00000000c00169d5                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0016a17                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0016a92                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0016af2                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0016cf6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016f6e                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0016fc2                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c0017198                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c0017226                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00172d4                ISO9660::exists(char const*)
                0x00000000c00172f8                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001738c                ISO9660::openDir(char const*, void**)
                0x00000000c0017426                ISO9660::ISO9660()
                0x00000000c0017426                ISO9660::ISO9660()
 *fill*         0x00000000c0017449        0x1 
 .text          0x00000000c001744a      0x26c hal/sound/sndcard.32
                0x00000000c001744a                SoundCard::beginPlayback()
                0x00000000c0017458                SoundCard::stopPlayback()
                0x00000000c0017466                SoundCard::SoundCard(char const*)
                0x00000000c0017466                SoundCard::SoundCard(char const*)
                0x00000000c0017504                SoundCard::~SoundCard()
                0x00000000c0017504                SoundCard::~SoundCard()
                0x00000000c0017528                SoundCard::~SoundCard()
                0x00000000c0017552                SoundCard::configureRates(int, int, int)
                0x00000000c0017582                SoundCard::getSamples16(int, short*)
                0x00000000c00175de                SoundCard::getSamples32(int, int*)
                0x00000000c0017664                SoundCard::addChannel(SoundPort*)
                0x00000000c00176a2                SoundCard::removeChannel(int)
 *fill*         0x00000000c00176b6        0x2 
 .text          0x00000000c00176b8      0x377 hal/sound/sndport.32
                0x00000000c00176b8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00176b8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017744                SoundPort::~SoundPort()
                0x00000000c0017744                SoundPort::~SoundPort()
                0x00000000c0017778                SoundPort::unpause()
                0x00000000c0017784                SoundPort::pause()
                0x00000000c0017790                SoundPort::getBufferUsed()
                0x00000000c0017798                SoundPort::getBufferSize()
                0x00000000c00177a0                SoundPort::buffer16(short*, int)
                0x00000000c001782c                SoundPort::buffer32(int*, int)
                0x00000000c00178b4                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0017978                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0017a2f        0x0 hw/bus/isa.32
 *fill*         0x00000000c0017a2f        0x1 
 .text          0x00000000c0017a30      0xb49 hw/bus/pci.32
                0x00000000c0017a30                PCI::open(int, int, void*)
                0x00000000c0017a4e                PCI::close(int, int, void*)
                0x00000000c0017a52                PCI::PCI()
                0x00000000c0017a52                PCI::PCI()
                0x00000000c0017aec                PCI::readBAR8(unsigned int, int)
                0x00000000c0017b08                PCI::readBAR16(unsigned int, int)
                0x00000000c0017b26                PCI::readBAR32(unsigned int, int)
                0x00000000c0017b42                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0017b62                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0017b84                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0017ba4                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017c12                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017cba                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017cde                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0017d06                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0017d50                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0017d78                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017d9c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0017dc0                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0017de8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017e4c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0017f34                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c00181ae                PCI::checkBus(unsigned char)
                0x00000000c00181d4                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018346                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c00184ba                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018526                PCI::detect()
 *fill*         0x00000000c0018579        0x1 
 .text          0x00000000c001857a      0xb5a hw/diskctrl/ide.32
                0x00000000c001857a                IDE::close(int, int, void*)
                0x00000000c001857e                IDE::IDE()
                0x00000000c001857e                IDE::IDE()
                0x00000000c00185b2                IDE::prepareInterrupt(unsigned char)
                0x00000000c00185c4                selectDrive(unsigned char, unsigned char)
                0x00000000c00185c6                IDE::getBase(unsigned char)
                0x00000000c00185d8                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0018698                IDE::read(unsigned char, unsigned char)
                0x00000000c0018746                IDE::waitInterrupt(unsigned char)
                0x00000000c00187ae                ideChannel0IRQHandler(regs*, void*)
                0x00000000c00187ca                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00187e6                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001882c                IDE::open(int, int, void*)
                0x00000000c0018c3a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0018d06                IDE::detect()
                0x00000000c0018fc6                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019076                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c00190d4      0x320 hw/diskctrl/satabus.32
                0x00000000c00190d4                SATABus::close(int, int, void*)
                0x00000000c00190d8                SATABus::detect()
                0x00000000c00190da                SATABus::SATABus()
                0x00000000c00190da                SATABus::SATABus()
                0x00000000c0019160                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019192                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c00191da                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c00191fa                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019224                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001932a                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c00193d4                SATABus::open(int, int, void*)
 .text          0x00000000c00193f4      0x5f4 hw/diskphys/ata.32
                0x00000000c00193f4                ATA::close(int, int, void*)
                0x00000000c0019418                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001941a                ATA::ATA()
                0x00000000c001941a                ATA::ATA()
                0x00000000c0019448                ATA::flush(bool)
                0x00000000c0019492                ATA::readyForCommand()
                0x00000000c00194de                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001985a                ATA::read(unsigned long long, int, void*)
                0x00000000c00198a6                ATA::write(unsigned long long, int, void*)
                0x00000000c00198f2                ATA::detectCHS()
                0x00000000c001991c                ATA::open(int, int, void*)
 .text          0x00000000c00199e8      0x60e hw/diskphys/atapi.32
                0x00000000c00199e8                ATAPI::write(unsigned long long, int, void*)
                0x00000000c00199ee                ATAPI::close(int, int, void*)
                0x00000000c0019a12                ATAPI::ATAPI()
                0x00000000c0019a12                ATAPI::ATAPI()
                0x00000000c0019a40                ATAPI::readyForCommand()
                0x00000000c0019a92                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0019d52                ATAPI::diskRemoved()
                0x00000000c0019d8c                ATAPI::eject()
                0x00000000c0019dd4                ATAPI::diskInserted()
                0x00000000c0019de0                ATAPI::detectMedia()
                0x00000000c0019e9c                ATAPI::open(int, int, void*)
                0x00000000c0019f7c                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0019ff6      0x402 hw/diskphys/sata.32
                0x00000000c0019ff6                SATA::close(int, int, void*)
                0x00000000c001a01a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001a01c                SATA::open(int, int, void*)
                0x00000000c001a0c6                SATA::SATA()
                0x00000000c001a0c6                SATA::SATA()
                0x00000000c001a0f4                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a340                SATA::read(unsigned long long, int, void*)
                0x00000000c001a38c                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001a3f8      0x63d hw/diskphys/satapi.32
                0x00000000c001a3f8                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001a3fe                SATAPI::close(int, int, void*)
                0x00000000c001a422                SATAPI::SATAPI()
                0x00000000c001a422                SATAPI::SATAPI()
                0x00000000c001a450                SATAPI::diskRemoved()
                0x00000000c001a452                SATAPI::diskInserted()
                0x00000000c001a46e                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001a6fc                SATAPI::eject()
                0x00000000c001a738                SATAPI::detectMedia()
                0x00000000c001a862                SATAPI::open(int, int, void*)
                0x00000000c001a962                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001aa35        0x1 
 .text          0x00000000c001aa36      0x455 hw/intctrl/apic.32
                0x00000000c001aa36                IOAPIC::close(int, int, void*)
                0x00000000c001aa3c                apicGetBase()
                0x00000000c001aa7e                IOAPIC::IOAPIC()
                0x00000000c001aa7e                IOAPIC::IOAPIC()
                0x00000000c001aaa6                apicOpen()
                0x00000000c001ac0c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ac3e                IOAPIC::read(int)
                0x00000000c001ac66                IOAPIC::open(int, int, void*)
                0x00000000c001ad5a                IOAPIC::write(int, int)
                0x00000000c001ad86                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ae8b        0x1 
 .text          0x00000000c001ae8c       0xf0 hw/timer/apictimer.32
                0x00000000c001ae8c                APICTimer::close(int, int, void*)
                0x00000000c001ae94                apicTimerHandler(regs*, void*)
                0x00000000c001aebc                APICTimer::open(int, int, void*)
                0x00000000c001af2c                APICTimer::write(int)
                0x00000000c001af54                APICTimer::APICTimer()
                0x00000000c001af54                APICTimer::APICTimer()
 .text          0x00000000c001af7c      0x1aa hw/timer/pit.32
                0x00000000c001af7c                PIT::write(int)
                0x00000000c001b000                pitHandler(regs*, void*)
                0x00000000c001b024                PIT::open(int, int, void*)
                0x00000000c001b074                PIT::close(int, int, void*)
                0x00000000c001b0a4                PIT::PIT()
                0x00000000c001b0a4                PIT::PIT()
 *fill*         0x00000000c001b126        0xa 
 .text          0x00000000c001b130       0x83 arch/i386/avx.32
                0x00000000c001b130                avxDetect
                0x00000000c001b15a                avxSave
                0x00000000c001b16b                avxLoad
                0x00000000c001b17c                avxInit
                0x00000000c001b19e                avxClose
                0x00000000c001b19f                wouldSheSayYes
 *fill*         0x00000000c001b1b3        0xd 
 .text          0x00000000c001b1c0      0x1d6 arch/i386/interrupt.32
                0x00000000c001b1c0                isr0
                0x00000000c001b1d0                isr1
                0x00000000c001b1da                isr2
                0x00000000c001b1e4                isr3
                0x00000000c001b1ee                isr4
                0x00000000c001b1f8                isr5
                0x00000000c001b202                isr6
                0x00000000c001b20c                isr7
                0x00000000c001b216                isr8
                0x00000000c001b21e                isr9
                0x00000000c001b228                isr10
                0x00000000c001b230                isr11
                0x00000000c001b238                isr12
                0x00000000c001b240                isr13
                0x00000000c001b248                isr14
                0x00000000c001b250                isr15
                0x00000000c001b25a                isr16
                0x00000000c001b264                isr17
                0x00000000c001b26e                isr18
                0x00000000c001b278                irq3
                0x00000000c001b282                irq4
                0x00000000c001b28c                irq5
                0x00000000c001b296                irq6
                0x00000000c001b2a0                irq7
                0x00000000c001b2aa                irq8
                0x00000000c001b2b4                irq9
                0x00000000c001b2be                irq10
                0x00000000c001b2c8                irq11
                0x00000000c001b2d2                irq12
                0x00000000c001b2dc                irq13
                0x00000000c001b2e6                irq14
                0x00000000c001b2f0                irq15
                0x00000000c001b2fa                irq1
                0x00000000c001b301                irq2
                0x00000000c001b308                isr96
                0x00000000c001b30f                irq0
                0x00000000c001b314                int_common_stub
                0x00000000c001b314                syscall_common_stub
                0x00000000c001b346                irq16
                0x00000000c001b350                irq17
                0x00000000c001b35a                irq18
                0x00000000c001b364                irq19
                0x00000000c001b36e                irq20
                0x00000000c001b378                irq21
                0x00000000c001b382                irq22
                0x00000000c001b38c                irq23
 *fill*         0x00000000c001b396        0xa 
 .text          0x00000000c001b3a0       0x10 arch/i386/rdrand.32
                0x00000000c001b3a0                i386GetRDRAND
 .text          0x00000000c001b3b0       0x39 arch/i386/sse.32
                0x00000000c001b3b0                absolutelyNoChanceInHell
                0x00000000c001b3b0                sseDetect
                0x00000000c001b3c8                sseSave
                0x00000000c001b3d0                sseLoad
                0x00000000c001b3d8                sseInit
                0x00000000c001b3e8                sseClose
 *fill*         0x00000000c001b3e9        0x7 
 .text          0x00000000c001b3f0       0x49 arch/i386/x87.32
                0x00000000c001b3f6                x87Detect
                0x00000000c001b411                x87Save
                0x00000000c001b418                x87Load
                0x00000000c001b41f                x87Init
                0x00000000c001b438                x87Close
 *fill*         0x00000000c001b439        0x3 
 .text          0x00000000c001b43c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001b461        0x0 crtn.32
 *fill*         0x00000000c001b461        0x3 
 .text          0x00000000c001b464      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001b464                __divdi3
 *fill*         0x00000000c001b5af        0x1 
 .text          0x00000000c001b5b0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001b5b0                __moddi3
 *fill*         0x00000000c001b72e        0x2 
 .text          0x00000000c001b730       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001b730                __udivdi3
 *fill*         0x00000000c001b82f        0x1 
 .text          0x00000000c001b830      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001b830                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001b950        0x0
 .iplt          0x00000000c001b950        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001b94a        0xf
 .init          0x00000000c001b94a        0x3 crti.32
                0x00000000c001b94a                _init
 .init          0x00000000c001b94d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001b952        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001b957        0x2 crtn.32

.fini           0x00000000c001b959        0xa
 .fini          0x00000000c001b959        0x3 crti.32
                0x00000000c001b959                _fini
 .fini          0x00000000c001b95c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001b961        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001b964       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001b964       0x23 core/computer.32
                0x00000000c001b964                Computer::~Computer()
                0x00000000c001b964                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001b988       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001b988       0x2a core/computer.32
                0x00000000c001b988                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001b9b2       0x21
 .text._Z10idleCommonv
                0x00000000c001b9b2       0x21 core/idle.32
                0x00000000c001b9b2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001b9d4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001b9d4        0x2 core/unixfile.32
                0x00000000c001b9d4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001b9d4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001b9d6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001b9d6       0x42 core/unixfile.32
                0x00000000c001b9d6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001b9d6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ba18       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ba18       0xd3 core/unixfile.32
                0x00000000c001ba18                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001baec        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001baec        0x7 core/unixfile.32
                0x00000000c001baec                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001baf4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001baf4       0xa1 core/unixfile.32
                0x00000000c001baf4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001bb96        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001bb96        0x8 core/unixfile.32
                0x00000000c001bb96                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001bb9e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001bb9e       0x1a hal/device.32
                0x00000000c001bb9e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001bb9e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001bbb8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001bbb8       0x2a hal/device.32
                0x00000000c001bbb8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001bbe2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001bbe2       0xdc hal/device.32
                0x00000000c001bbe2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001bcbe       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001bcbe       0x42 hal/device.32
                0x00000000c001bcbe                LinkedList<Device>::LinkedList()
                0x00000000c001bcbe                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001bd00       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001bd00       0x1c hal/timer.32
                0x00000000c001bd00                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001bd1c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001bd1c        0x7 hal/timer.32
                0x00000000c001bd1c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bd24       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bd24       0xb8 hal/timer.32
                0x00000000c001bd24                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001bddc       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001bddc       0xda hal/timer.32
                0x00000000c001bddc                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001beb8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001beb8       0x23 hw/acpi.32
                0x00000000c001beb8                ACPI::~ACPI()
                0x00000000c001beb8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001bedc       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001bedc       0x2a hw/acpi.32
                0x00000000c001bedc                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001bf08        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001bf08        0x2 hw/acpi.32
                0x00000000c001bf08                LinkedList<Device>::~LinkedList()
                0x00000000c001bf08                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001bf0c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001bf0c       0x1c hw/acpi.32
                0x00000000c001bf0c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001bf28        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001bf28        0x7 hw/acpi.32
                0x00000000c001bf28                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001bf30       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001bf30       0xb8 hw/acpi.32
                0x00000000c001bf30                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001bfe8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001bfe8       0x23 hw/cpu.32
                0x00000000c001bfe8                CPU::~CPU()
                0x00000000c001bfe8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001c00c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001c00c       0x2a hw/cpu.32
                0x00000000c001c00c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c038        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c038        0x2 thr/prcssthr.32
                0x00000000c001c038                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001c038                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c03c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c03c       0x49 thr/prcssthr.32
                0x00000000c001c03c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001c03c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c088       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c088       0x42 thr/prcssthr.32
                0x00000000c001c088                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001c088                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c0cc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c0cc        0x8 thr/prcssthr.32
                0x00000000c001c0cc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001c0d4       0x23
 .text._ZN3PCID2Ev
                0x00000000c001c0d4       0x23 hw/bus/pci.32
                0x00000000c001c0d4                PCI::~PCI()
                0x00000000c001c0d4                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001c0f8       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001c0f8       0x2a hw/bus/pci.32
                0x00000000c001c0f8                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001c122       0x23
 .text._ZN3IDED2Ev
                0x00000000c001c122       0x23 hw/diskctrl/ide.32
                0x00000000c001c122                IDE::~IDE()
                0x00000000c001c122                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001c146       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001c146       0x2a hw/diskctrl/ide.32
                0x00000000c001c146                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001c170       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001c170       0x23 hw/diskctrl/satabus.32
                0x00000000c001c170                SATABus::~SATABus()
                0x00000000c001c170                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001c194       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001c194       0x2a hw/diskctrl/satabus.32
                0x00000000c001c194                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001c1be       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001c1be       0x23 hw/diskphys/ata.32
                0x00000000c001c1be                ATA::~ATA()
                0x00000000c001c1be                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001c1e2       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001c1e2       0x2a hw/diskphys/ata.32
                0x00000000c001c1e2                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001c20c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001c20c       0x23 hw/diskphys/atapi.32
                0x00000000c001c20c                ATAPI::~ATAPI()
                0x00000000c001c20c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001c230       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001c230       0x2a hw/diskphys/atapi.32
                0x00000000c001c230                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001c25a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001c25a       0x23 hw/diskphys/sata.32
                0x00000000c001c25a                SATA::~SATA()
                0x00000000c001c25a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001c27e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001c27e       0x2a hw/diskphys/sata.32
                0x00000000c001c27e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001c2a8       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001c2a8       0x23 hw/diskphys/satapi.32
                0x00000000c001c2a8                SATAPI::~SATAPI()
                0x00000000c001c2a8                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001c2cc       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001c2cc       0x2a hw/diskphys/satapi.32
                0x00000000c001c2cc                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001c2f6       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001c2f6       0x23 hw/intctrl/apic.32
                0x00000000c001c2f6                IOAPIC::~IOAPIC()
                0x00000000c001c2f6                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001c31a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001c31a       0x2a hw/intctrl/apic.32
                0x00000000c001c31a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001c344       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001c344       0x23 hw/timer/apictimer.32
                0x00000000c001c344                APICTimer::~APICTimer()
                0x00000000c001c344                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001c368       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001c368       0x2a hw/timer/apictimer.32
                0x00000000c001c368                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001c394       0x23
 .text._ZN3PITD2Ev
                0x00000000c001c394       0x23 hw/timer/pit.32
                0x00000000c001c394                PIT::~PIT()
                0x00000000c001c394                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001c3b8       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001c3b8       0x2a hw/timer/pit.32
                0x00000000c001c3b8                PIT::~PIT()

.rodata         0x00000000c001c3e2     0x28a2
                0x00000000c001c3e2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001c3e2        0x2 
 .ctors         0x00000000c001c3e4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001c3e8        0x4 core/unixfile.32
 .ctors         0x00000000c001c3ec        0x4 thr/prcssthr.32
 .ctors         0x00000000c001c3f0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c3f4                end_ctors = .
                0x00000000c001c3f4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001c3f4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001c3f8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c3f8                __DTOR_END__
                0x00000000c001c3fc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001c3fc        0x4 
 .rodata        0x00000000c001c400      0x101 acpica/utclib.32
                0x00000000c001c400                AcpiGbl_Ctypes
 *fill*         0x00000000c001c501        0x3 
 .rodata        0x00000000c001c504       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001c51c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001c566       0x1a 
 .rodata        0x00000000c001c580       0xed fs/fat/ff.32
 *fill*         0x00000000c001c66d       0x13 
 .rodata        0x00000000c001c680      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001ca80       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001cac9      0x115 core/computer.32
 *fill*         0x00000000c001cbde        0x2 
 .rodata.str1.4
                0x00000000c001cbe0       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001cc48       0x2c core/computer.32
                0x00000000c001cc48                vtable for Computer
 .rodata.str1.4
                0x00000000c001cc74       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001cca4        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001ccb0       0x17 core/main.32
 *fill*         0x00000000c001ccc7        0x1 
 .rodata.str1.4
                0x00000000c001ccc8       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001cd6d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001cdc5       0x39 core/pipe.32
 *fill*         0x00000000c001cdfe        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001ce00       0x1c core/pipe.32
                0x00000000c001ce00                vtable for Pipe
 .rodata.str1.1
                0x00000000c001ce1c       0x69 core/terminal.32
 *fill*         0x00000000c001ce85        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001ce88       0x1c core/terminal.32
                0x00000000c001ce88                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001cea4       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001cec6       0x15 core/unixfile.32
 *fill*         0x00000000c001cedb        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001cedc       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001cf27        0x8 core/unixfile.32
 *fill*         0x00000000c001cf2f        0x1 
 .rodata.str1.4
                0x00000000c001cf30       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001cf50       0x1c core/unixfile.32
                0x00000000c001cf50                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001cf6c       0x1c core/unixfile.32
                0x00000000c001cf6c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001cf88      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d0ef      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d1f6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001d229       0x11 dbg/kconsole.32
 *fill*         0x00000000c001d229        0x3 
 .rodata        0x00000000c001d22c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001d37c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001d37c       0x68 fs/vfs.32
                0x00000000c001d37c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001d3e4       0x1c fs/vfs.32
                0x00000000c001d3e4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001d400       0x1c fs/vfs.32
                0x00000000c001d400                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001d41c       0x2c hal/bus.32
                0x00000000c001d41c                vtable for Bus
 .rodata.str1.1
                0x00000000c001d448       0x1e hal/clock.32
 *fill*         0x00000000c001d466        0x2 
 .rodata._ZTV5Clock
                0x00000000c001d468       0x3c hal/clock.32
                0x00000000c001d468                vtable for Clock
 *fill*         0x00000000c001d4a4       0x1c 
 .rodata        0x00000000c001d4c0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001d4f0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001d548       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001d548       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001d548       0x2c hal/device.32
                0x00000000c001d548                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001d574       0x2c hal/device.32
                0x00000000c001d574                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001d5a0       0x2c hal/diskctrl.32
                0x00000000c001d5a0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001d5cc       0x38 hal/diskphys.32
                0x00000000c001d5cc                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001d604       0x3e hal/intctrl.32
 *fill*         0x00000000c001d642        0x2 
 .rodata.str1.4
                0x00000000c001d644       0x5d hal/intctrl.32
 .rodata        0x00000000c001d6a1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001d6f4       0x34 hal/keybrd.32
                0x00000000c001d6f4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001d728       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001d76c       0x2c hal/logidisk.32
                0x00000000c001d76c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001d798       0x2c hal/mouse.32
                0x00000000c001d798                vtable for Mouse
 .rodata.str1.1
                0x00000000c001d7c4        0xb hal/partition.32
 *fill*         0x00000000c001d7cf        0x1 
 .rodata._ZTV6Serial
                0x00000000c001d7d0       0x44 hal/serial.32
                0x00000000c001d7d0                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001d814       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001d814        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001d814       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001d814       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001d814       0x30 hal/timer.32
                0x00000000c001d814                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001d844       0x10 hal/vcache.32
                0x00000000c001d844                vtable for VCache
 .rodata.str1.1
                0x00000000c001d854       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001d8bc       0x48 hal/video.32
                0x00000000c001d8bc                vtable for Video
 .rodata.str1.4
                0x00000000c001d904       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001d99f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001dadb       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001dadb        0x8 hw/acpi.32
 *fill*         0x00000000c001dadb        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001dadc       0x2c hw/acpi.32
                0x00000000c001dadc                vtable for ACPI
 .rodata.str1.1
                0x00000000c001db08      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001dc75        0x3 
 .rodata._ZTV3CPU
                0x00000000c001dc78       0x2c hw/cpu.32
                0x00000000c001dc78                vtable for CPU
 .rodata.str1.1
                0x00000000c001dca4       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001dce0       0x51 krnl/panic.32
                                         0x59 (size before relaxing)
 *fill*         0x00000000c001dd31        0x3 
 .rodata.str1.4
                0x00000000c001dd34      0x117 krnl/panic.32
 .rodata.str1.1
                0x00000000c001de4b       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001de90        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001de9a       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001deee       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001df1a       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001df62      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001e12e       0x57 thr/prcssthr.32
 *fill*         0x00000000c001e185        0x3 
 .rodata.str1.4
                0x00000000c001e188      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e294       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e294       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e294       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e294        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001e294       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001e334       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001e364      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001e472        0x2 
 .rodata.str1.4
                0x00000000c001e474       0x4b arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001e4bf       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001e4d4       0x3c arch/i386/rtc.32
                0x00000000c001e4d4                vtable for RTC
 .rodata.str1.1
                0x00000000c001e510       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001e551        0x3 
 .rodata._ZTV3FAT
                0x00000000c001e554       0x68 fs/fat/vfslink.32
                0x00000000c001e554                vtable for FAT
 .rodata.str1.1
                0x00000000c001e5bc       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c001e5d7        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c001e5d8       0x68 fs/iso9660/vfslink.32
                0x00000000c001e5d8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001e640       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001e684       0x34 hal/sound/sndcard.32
                0x00000000c001e684                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001e6b8       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e6f7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e72f       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001e7d0       0x2c hw/bus/pci.32
                0x00000000c001e7d0                vtable for PCI
 .rodata.str1.1
                0x00000000c001e7fc       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001e883        0x1 
 .rodata._ZTV3IDE
                0x00000000c001e884       0x2c hw/diskctrl/ide.32
                0x00000000c001e884                vtable for IDE
 .rodata.str1.4
                0x00000000c001e8b0       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001e8d4       0x2c hw/diskctrl/satabus.32
                0x00000000c001e8d4                vtable for SATABus
 .rodata.str1.1
                0x00000000c001e900       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001e912        0x2 
 .rodata._ZTV3ATA
                0x00000000c001e914       0x38 hw/diskphys/ata.32
                0x00000000c001e914                vtable for ATA
 .rodata.str1.1
                0x00000000c001e94c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001e959        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001e95c       0x38 hw/diskphys/atapi.32
                0x00000000c001e95c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001e994       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001ea10       0x38 hw/diskphys/sata.32
                0x00000000c001ea10                vtable for SATA
 .rodata.str1.1
                0x00000000c001ea48      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c001eb7a        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c001eb7c       0x38 hw/diskphys/satapi.32
                0x00000000c001eb7c                vtable for SATAPI
 .rodata        0x00000000c001ebb4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001ebbc       0x2c hw/intctrl/apic.32
                0x00000000c001ebbc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001ebe8       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001ec03        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001ec04       0x30 hw/timer/apictimer.32
                0x00000000c001ec04                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001ec34       0x1d hw/timer/pit.32
 *fill*         0x00000000c001ec51        0x3 
 .rodata._ZTV3PIT
                0x00000000c001ec54       0x30 hw/timer/pit.32
                0x00000000c001ec54                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001ec84      0x271
 *(.data)
 .data          0x00000000c001ec84        0x0 crti.32
 .data          0x00000000c001ec84        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001ec84                __dso_handle
 .data          0x00000000c001ec88        0x0 acpica/utclib.32
 .data          0x00000000c001ec88        0x0 core/malloc.32
 .data          0x00000000c001ec88        0x0 libk/string.32
 .data          0x00000000c001ec88        0x0 fs/fat/diskio.32
 .data          0x00000000c001ec88        0x0 fs/fat/ff.32
 .data          0x00000000c001ec88        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001ec88        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001ec88        0x0 compat/inlines.32
 .data          0x00000000c001ec88        0x0 compat/resolve.32
 .data          0x00000000c001ec88        0x0 core/computer.32
 .data          0x00000000c001ec88        0x0 core/gdt.32
 .data          0x00000000c001ec88        0x0 core/idle.32
 .data          0x00000000c001ec88        0x0 core/idt.32
 .data          0x00000000c001ec88        0x4 core/kheap.32
 *fill*         0x00000000c001ec8c       0x14 
 .data          0x00000000c001eca0      0x142 core/main.32
                0x00000000c001eca0                titleScreen
 *fill*         0x00000000c001ede2        0x2 
 .data          0x00000000c001ede4        0x4 core/physmgr.32
                0x00000000c001ede4                Phys::bitmap
 .data          0x00000000c001ede8        0x0 core/pipe.32
 *fill*         0x00000000c001ede8       0x18 
 .data          0x00000000c001ee00       0x60 core/terminal.32
                0x00000000c001ee00                VgaText::hiddenOut
                0x00000000c001ee20                ansiToVGAMappings
 .data          0x00000000c001ee60        0x0 core/tss.32
 .data          0x00000000c001ee60        0x4 core/unixfile.32
                0x00000000c001ee60                UnixFile::nextFd
 .data          0x00000000c001ee64       0x15 core/virtmgr.32
                0x00000000c001ee64                Virt::pageAllocPtr
                0x00000000c001ee68                Virt::bitmap
                0x00000000c001ee6c                Virt::swapfileSectorsPerPage
                0x00000000c001ee70                Virt::swapfileLength
                0x00000000c001ee74                Virt::swapfileSector
                0x00000000c001ee78                Virt::swapfileDrive
 *fill*         0x00000000c001ee79        0x3 
 .data          0x00000000c001ee7c        0x4 coreobjs/c++.32
                0x00000000c001ee7c                __stack_chk_guard
 .data          0x00000000c001ee80        0x0 dbg/kconsole.32
 .data          0x00000000c001ee80        0x0 fs/vfs.32
 .data          0x00000000c001ee80        0x0 hal/bus.32
 .data          0x00000000c001ee80        0x0 hal/buzzer.32
 .data          0x00000000c001ee80        0x0 hal/clock.32
 .data          0x00000000c001ee80        0x0 hal/device.32
 .data          0x00000000c001ee80        0x0 hal/diskctrl.32
 .data          0x00000000c001ee80        0x0 hal/diskphys.32
 .data          0x00000000c001ee80        0x0 hal/fpu.32
 .data          0x00000000c001ee80        0x0 hal/intctrl.32
 .data          0x00000000c001ee80        0x0 hal/keybrd.32
 .data          0x00000000c001ee80        0x0 hal/logidisk.32
 .data          0x00000000c001ee80        0x0 hal/mouse.32
 .data          0x00000000c001ee80        0x0 hal/partition.32
 .data          0x00000000c001ee80        0x0 hal/serial.32
 .data          0x00000000c001ee80        0x0 hal/timer.32
 .data          0x00000000c001ee80        0x0 hal/vcache.32
 .data          0x00000000c001ee80        0x0 hal/video.32
 .data          0x00000000c001ee80       0x10 hw/acpi.32
                0x00000000c001ee80                legacyIRQRemaps
 .data          0x00000000c001ee90        0x4 hw/cpu.32
                0x00000000c001ee90                lastCode
 .data          0x00000000c001ee94        0x0 hw/smp.32
 *fill*         0x00000000c001ee94        0xc 
 .data          0x00000000c001eea0       0x4d krnl/env.32
                0x00000000c001eea0                defaultSysEnv
 .data          0x00000000c001eeed        0x0 krnl/panic.32
 .data          0x00000000c001eeed        0x0 krnl/powctrl.32
 .data          0x00000000c001eeed        0x0 reg/registry.32
 .data          0x00000000c001eeed        0x0 sys/sc_eject.32
 .data          0x00000000c001eeed        0x0 sys/sc_exit.32
 .data          0x00000000c001eeed        0x0 sys/sc_getcwd.32
 .data          0x00000000c001eeed        0x0 sys/sc_getpid.32
 .data          0x00000000c001eeed        0x0 sys/sc_getramdata.32
 .data          0x00000000c001eeed        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001eeed        0x0 sys/sc_loaddll.32
 .data          0x00000000c001eeed        0x0 sys/sc_read.32
 .data          0x00000000c001eeed        0x0 sys/sc_sbrk.32
 .data          0x00000000c001eeed        0x0 sys/sc_setcwd.32
 .data          0x00000000c001eeed        0x0 sys/sc_settime.32
 .data          0x00000000c001eeed        0x0 sys/sc_timezone.32
 .data          0x00000000c001eeed        0x0 sys/sc_write.32
 .data          0x00000000c001eeed        0x0 sys/sc_wsbe.32
 .data          0x00000000c001eeed        0x0 sys/sc_yield.32
 .data          0x00000000c001eeed        0x0 sys/syscalls.32
 .data          0x00000000c001eeed        0x0 thr/elf.32
 *fill*         0x00000000c001eeed        0x3 
 .data          0x00000000c001eef0        0x4 thr/prcssthr.32
                0x00000000c001eef0                Thr::nextPID
 .data          0x00000000c001eef4        0x0 vm86/vm8086.32
 .data          0x00000000c001eef4        0x0 arch/i386/hal.32
 .data          0x00000000c001eef4        0x0 arch/i386/pic.32
 .data          0x00000000c001eef4        0x0 arch/i386/rtc.32
 .data          0x00000000c001eef4        0x0 arch/i386/vga.32
 .data          0x00000000c001eef4        0x0 fs/fat/vfslink.32
 .data          0x00000000c001eef4        0x1 fs/iso9660/vfslink.32
                0x00000000c001eef4                recentDriveletter
 .data          0x00000000c001eef5        0x0 hal/sound/sndcard.32
 .data          0x00000000c001eef5        0x0 hal/sound/sndport.32
 .data          0x00000000c001eef5        0x0 hw/bus/isa.32
 .data          0x00000000c001eef5        0x0 hw/bus/pci.32
 .data          0x00000000c001eef5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001eef5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001eef5        0x0 hw/diskphys/ata.32
 .data          0x00000000c001eef5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001eef5        0x0 hw/diskphys/sata.32
 .data          0x00000000c001eef5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001eef5        0x0 hw/intctrl/apic.32
 .data          0x00000000c001eef5        0x0 hw/timer/apictimer.32
 .data          0x00000000c001eef5        0x0 hw/timer/pit.32
 .data          0x00000000c001eef5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001eef5        0x0 crtn.32
 .data          0x00000000c001eef5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001eef5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001eef5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001eef5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001eef8        0x0
 .got           0x00000000c001eef8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001eef8        0x0
 .got.plt       0x00000000c001eef8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001eef8        0x0
 .igot.plt      0x00000000c001eef8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001eef8        0x0
 .tm_clone_table
                0x00000000c001eef8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001eef8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001eef5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001eef5        0x3 
 .eh_frame      0x00000000c001eef8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001eef8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001eef8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001ef50       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001ef90       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001effc       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001f080        0x0
 .rel.got       0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001f080        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001f080     0x4368
                0x00000000c001f080                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c001f080        0x0 crti.32
 .bss           0x00000000c001f080       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001f0a0        0x4 acpica/utclib.32
 *fill*         0x00000000c001f0a4       0x1c 
 .bss           0x00000000c001f0c0      0x378 core/malloc.32
 .bss           0x00000000c001f438        0x0 libk/string.32
 .bss           0x00000000c001f438        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001f438        0x8 
 .bss           0x00000000c001f440       0x88 fs/fat/ff.32
 .bss           0x00000000c001f4c8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001f4c8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c001f4c8        0x0 compat/inlines.32
 .bss           0x00000000c001f4c8        0x0 compat/resolve.32
 .bss           0x00000000c001f4c8        0x6 core/computer.32
                0x00000000c001f4c8                Krnl::computer
                0x00000000c001f4cc                Krnl::preemptionOn
                0x00000000c001f4cd                Krnl::schedulingOn
 *fill*         0x00000000c001f4ce        0x2 
 .bss           0x00000000c001f4d0        0x6 core/gdt.32
                0x00000000c001f4d0                gdtDescr
 .bss           0x00000000c001f4d6        0x0 core/idle.32
 *fill*         0x00000000c001f4d6        0x2 
 .bss           0x00000000c001f4d8        0x6 core/idt.32
                0x00000000c001f4d8                idtDescr
 .bss           0x00000000c001f4de        0x0 core/kheap.32
 *fill*         0x00000000c001f4de        0x2 
 .bss           0x00000000c001f4e0        0x4 core/main.32
                0x00000000c001f4e0                sysBootSettings
 .bss           0x00000000c001f4e4       0x29 core/physmgr.32
                0x00000000c001f4e4                Phys::forbidEvictions
                0x00000000c001f4e8                Phys::currentPagePointer
                0x00000000c001f4ec                Phys::highestMem
                0x00000000c001f4f0                Phys::oldPercent
                0x00000000c001f4f4                Phys::usedPages
                0x00000000c001f4f8                Phys::usablePages
                0x00000000c001f4fc                Phys::dmaUsage
 .bss           0x00000000c001f50d        0x0 core/pipe.32
 *fill*         0x00000000c001f50d        0x3 
 .bss           0x00000000c001f510        0x9 core/terminal.32
                0x00000000c001f510                terminalCycle
                0x00000000c001f514                activeTerminal
                0x00000000c001f518                VgaText::graphicMode
 *fill*         0x00000000c001f519        0x1 
 .bss           0x00000000c001f51a        0x2 core/tss.32
                0x00000000c001f51a                doubleFaultSelector
 *fill*         0x00000000c001f51c        0x4 
 .bss           0x00000000c001f520       0x84 core/unixfile.32
                0x00000000c001f520                sfileLpt
                0x00000000c001f560                sfileCom
                0x00000000c001f584                sfileNul
                0x00000000c001f588                sfilePnt
                0x00000000c001f58c                sfileAux
                0x00000000c001f590                sfileCon
                0x00000000c001f594                initialFilesAdded
                0x00000000c001f598                unixFileLinkedList
 .bss           0x00000000c001f5a4       0x14 core/virtmgr.32
                0x00000000c001f5a4                twswaps
                0x00000000c001f5a8                swapBalance
                0x00000000c001f5ac                panicVAS
                0x00000000c001f5b0                Virt::swapfileBitmap
                0x00000000c001f5b4                firstVAS
 .bss           0x00000000c001f5b8        0x0 coreobjs/c++.32
 .bss           0x00000000c001f5b8        0x0 dbg/kconsole.32
 .bss           0x00000000c001f5b8        0x4 fs/vfs.32
                0x00000000c001f5b8                installedFilesystems
 .bss           0x00000000c001f5bc        0x0 hal/bus.32
 .bss           0x00000000c001f5bc        0x0 hal/buzzer.32
 .bss           0x00000000c001f5bc        0x8 hal/clock.32
                0x00000000c001f5bc                User::dstOn
                0x00000000c001f5bd                User::timezoneHalfHourOffset
                0x00000000c001f5c0                User::timezoneHourOffset
 .bss           0x00000000c001f5c4        0x0 hal/device.32
 .bss           0x00000000c001f5c4        0x0 hal/diskctrl.32
 .bss           0x00000000c001f5c4        0x0 hal/diskphys.32
 .bss           0x00000000c001f5c4        0x0 hal/fpu.32
 *fill*         0x00000000c001f5c4       0x1c 
 .bss           0x00000000c001f5e0     0x2000 hal/intctrl.32
                0x00000000c001f5e0                INT_contexts
                0x00000000c00205e0                INT_handlers
 .bss           0x00000000c00215e0      0x429 hal/keybrd.32
                0x00000000c00215e0                keyboardWaitingTaskList
                0x00000000c00215e4                keyboardSetupYet
                0x00000000c00215e8                guiKeyboardHandler
                0x00000000c0021600                keystates
 *fill*         0x00000000c0021a09       0x17 
 .bss           0x00000000c0021a20       0x88 hal/logidisk.32
                0x00000000c0021a20                diskAssignments
                0x00000000c0021a40                disks
 .bss           0x00000000c0021aa8        0x4 hal/mouse.32
                0x00000000c0021aa8                guiMouseHandler
 .bss           0x00000000c0021aac        0x0 hal/partition.32
 .bss           0x00000000c0021aac        0x0 hal/serial.32
 .bss           0x00000000c0021aac        0x4 hal/timer.32
                0x00000000c0021aac                milliTenthsSinceBoot
 .bss           0x00000000c0021ab0        0x0 hal/vcache.32
 .bss           0x00000000c0021ab0        0x4 hal/video.32
                0x00000000c0021ab0                screen
 *fill*         0x00000000c0021ab4        0xc 
 .bss           0x00000000c0021ac0      0x480 hw/acpi.32
                0x00000000c0021ac0                systemSleepFunction
                0x00000000c0021ac4                systemResetFunction
                0x00000000c0021ac8                systemShutdownFunction
                0x00000000c0021acc                nextACPITable
                0x00000000c0021ae0                acpiTables
                0x00000000c0021ce0                usingXSDT
                0x00000000c0021ce4                MADTpointer
                0x00000000c0021ce8                RSDTpointer
                0x00000000c0021cec                RSDPpointer
                0x00000000c0021cf0                nextAPICNMI
                0x00000000c0021d00                apicNMIInfo
                0x00000000c0021d80                legacyIRQFlags
                0x00000000c0021da0                ioapicDiscoveryNumber
                0x00000000c0021dc0                ioapicFoundInMADT
                0x00000000c0021de0                ioapicAddresses
                0x00000000c0021e60                ioapicGSIBase
                0x00000000c0021ee0                processorDiscoveryNumber
                0x00000000c0021f00                matchingAPICID
                0x00000000c0021f20                processorID
 .bss           0x00000000c0021f40       0x10 hw/cpu.32
                0x00000000c0021f40                lastD
                0x00000000c0021f44                lastC
                0x00000000c0021f48                lastB
                0x00000000c0021f4c                lastA
 .bss           0x00000000c0021f50        0x1 hw/smp.32
                0x00000000c0021f50                Krnl::bspID
 *fill*         0x00000000c0021f51        0x3 
 .bss           0x00000000c0021f54        0x8 krnl/env.32
                0x00000000c0021f54                Krnl::userEnv
                0x00000000c0021f58                Krnl::systemEnv
 .bss           0x00000000c0021f5c        0x9 krnl/panic.32
                0x00000000c0021f5c                Krnl::guiProgramFaultHandler
                0x00000000c0021f60                Krnl::guiPanicHandler
                0x00000000c0021f64                Krnl::kernelInPanic
 *fill*         0x00000000c0021f65       0x1b 
 .bss           0x00000000c0021f80       0x48 krnl/powctrl.32
                0x00000000c0021f80                Krnl::powCtrlOnBattery
                0x00000000c0021fa0                Krnl::currentPowerSettings
                0x00000000c0021fc4                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0021fc8        0x0 reg/registry.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_eject.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_exit.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_getpid.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_read.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_settime.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_timezone.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_write.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0021fc8        0x0 sys/sc_yield.32
 *fill*         0x00000000c0021fc8       0x18 
 .bss           0x00000000c0021fe0      0x200 sys/syscalls.32
                0x00000000c0021fe0                systemCallHandlers
 .bss           0x00000000c00221e0      0x7a4 thr/elf.32
                0x00000000c00221e0                Thr::driverLookupNext
                0x00000000c0022200                Thr::driverLookupLen
                0x00000000c0022400                Thr::driverLookupAddr
                0x00000000c0022600                Thr::driverNameLookup
                0x00000000c0022800                Thr::kernelSymbols
                0x00000000c0022880                Thr::kernelStringTable
                0x00000000c0022900                Thr::kernelSymbolTable
                0x00000000c0022980                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0022984        0x4 
 .bss           0x00000000c0022988       0x68 thr/prcssthr.32
                0x00000000c0022988                cleanerThread
                0x00000000c002298c                weNeedTheCleanerToNotBlock
                0x00000000c0022990                retValLockStuff
                0x00000000c0022994                retValSchedLock
                0x00000000c0022998                lockStuffLock
                0x00000000c002299c                schedulerLock
                0x00000000c00229a0                taskSwitchesPostponedFlag
                0x00000000c00229a4                postponeTaskSwitchesCounter
                0x00000000c00229a8                irqDisableCounter
                0x00000000c00229ac                terminatedTaskList
                0x00000000c00229b8                sleepingTaskList
                0x00000000c00229c4                taskList
                0x00000000c00229d0                kernelProcess
 *fill*         0x00000000c00229f0       0x10 
 .bss           0x00000000c0022a00       0x40 vm86/vm8086.32
                0x00000000c0022a00                Vm::vmRetV
                0x00000000c0022a04                Vm::vmDone
                0x00000000c0022a05                Vm::vmReady
                0x00000000c0022a08                Vm::vm86Thread
                0x00000000c0022a0c                Vm::vmToHostCommsPtr
                0x00000000c0022a20                Vm::vmToHostComms
 .bss           0x00000000c0022a40       0x14 arch/i386/hal.32
                0x00000000c0022a40                apic
                0x00000000c0022a44                fpuOwner
                0x00000000c0022a48                coproLoadFunc
                0x00000000c0022a4c                coproSaveFunc
                0x00000000c0022a50                gpFaultIntercept
 .bss           0x00000000c0022a54        0x0 arch/i386/pic.32
 .bss           0x00000000c0022a54        0x2 arch/i386/rtc.32
 .bss           0x00000000c0022a56        0x0 arch/i386/vga.32
 *fill*         0x00000000c0022a56        0xa 
 .bss           0x00000000c0022a60       0xf0 fs/fat/vfslink.32
                0x00000000c0022a60                FAT::fats
                0x00000000c0022a80                FAT::vfsToFatRemaps
                0x00000000c0022b00                fatToVFSRemaps
 *fill*         0x00000000c0022b50       0x10 
 .bss           0x00000000c0022b60      0x820 fs/iso9660/vfslink.32
                0x00000000c0022b60                recentSector
                0x00000000c0022b80                recentBuffer
 .bss           0x00000000c0023380        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0023380        0x0 hal/sound/sndport.32
 .bss           0x00000000c0023380        0x0 hw/bus/isa.32
 .bss           0x00000000c0023380        0xd hw/bus/pci.32
                0x00000000c0023380                thePCI
 .bss           0x00000000c002338d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002338d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002338d        0x3 
 .bss           0x00000000c0023390        0x8 hw/diskphys/ata.32
                0x00000000c0023390                ataSectorsWritten
                0x00000000c0023394                ataSectorsRead
 .bss           0x00000000c0023398        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0023398        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0023398        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0023398        0x8 
 .bss           0x00000000c00233a0       0x41 hw/intctrl/apic.32
                0x00000000c00233a0                noOfIOAPICs
                0x00000000c00233c0                ioapics
                0x00000000c00233e0                IOAPICsSetupYet
 .bss           0x00000000c00233e1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00233e1        0x3 
 .bss           0x00000000c00233e4        0x4 hw/timer/pit.32
                0x00000000c00233e4                pitFreq
 .bss           0x00000000c00233e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00233e8        0x0 crtn.32
 .bss           0x00000000c00233e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00233e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00233e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00233e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00233e8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0027750                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
