Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f39a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6c3 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca8                Krnl::firstTask()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006e96                Computer::setBootMessage(char const*)
                0x00000000c0006e98                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070ec                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007128                Computer::shutdown()
                0x00000000c0007140                Computer::restart()
                0x00000000c0007158                Computer::sleep()
                0x00000000c000716c                Computer::nmiEnabled()
                0x00000000c0007178                Computer::readCMOS(unsigned char)
                0x00000000c0007196                Computer::enableNMI(bool)
                0x00000000c00071ae                Computer::open(int, int, void*)
                0x00000000c0007282                Computer::disableNMI()
                0x00000000c0007292                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072b6                Computer::handleNMI()
 *fill*         0x00000000c0007321        0x1 
 .text          0x00000000c0007322      0x1db core/gdt.32
                0x00000000c0007322                GDTEntry::setBase(unsigned int)
                0x00000000c000733e                GDTEntry::setLimit(unsigned int)
                0x00000000c000735c                GDT::GDT()
                0x00000000c000735c                GDT::GDT()
                0x00000000c0007372                GDT::addEntry(GDTEntry)
                0x00000000c0007394                GDT::getNumberOfEntries()
                0x00000000c000739c                GDT::flush()
                0x00000000c00073be                GDT::setup()
 .text          0x00000000c00074fd       0x1d core/idle.32
                0x00000000c00074fd                idleFunction(void*)
 *fill*         0x00000000c000751a        0x2 
 .text          0x00000000c000751c      0x46c core/idt.32
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c0007596                IDTEntry::setOffset(unsigned int)
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ae                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075b6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007608                IDT::flush()
                0x00000000c0007622                IDT::setup()
 .text          0x00000000c0007988      0x188 core/kheap.32
                0x00000000c0007988                sbrk
                0x00000000c0007a1f                mmap
                0x00000000c0007a35                munmap
                0x00000000c0007a4b                liballoc_lock()
                0x00000000c0007a59                liballoc_unlock()
                0x00000000c0007a6f                liballoc_alloc(int)
                0x00000000c0007a87                liballoc_free(void*, int)
                0x00000000c0007aa2                realloc
                0x00000000c0007ab6                malloc
                0x00000000c0007ac6                free
                0x00000000c0007ad6                rfree
                0x00000000c0007ae6                calloc
 .text          0x00000000c0007b10       0xc7 core/main.32
                0x00000000c0007b10                KeEntryPoint
 .text          0x00000000c0007bd7      0x644 core/physmgr.32
                0x00000000c0007bd7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cbf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfa                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3a                Phys::getPageState(unsigned long)
                0x00000000c0007d56                Phys::freePage(unsigned long)
                0x00000000c0007dbf                Phys::allocatePage()
                0x00000000c0007e8e                Phys::allocateContiguousPages(int)
                0x00000000c0007ef5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f2d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000821b        0x1 
 .text          0x00000000c000821c      0x273 core/pipe.32
                0x00000000c000821c                Pipe::isAtty()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008244                Pipe::~Pipe()
                0x00000000c000826c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000832c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xab3 core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a60                VgaText::putx(unsigned int)
                0x00000000c0008aa6                VgaText::puts(char const*)
                0x00000000c0008acc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b18                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008db6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f42                VgaText::doUpdate()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x1a1 core/tss.32
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f54                TSS::setESP(unsigned long)
                0x00000000c0008f68                TSS::flush()
                0x00000000c0008f88                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090e5        0x1 
 .text          0x00000000c00090e6      0x4ca core/unixfile.32
                0x00000000c00090e6                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000913c                ReservedFilename::isAtty()
                0x00000000c0009158                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091b6                UnixFile::getFileDescriptor()
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c0009440                UnixFile::~UnixFile()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c000948c                ReservedFilename::~ReservedFilename()
                0x00000000c00094b3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b0     0x1218 core/virtmgr.32
                0x00000000c00095b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ea                Virt::getPageState(unsigned long)
                0x00000000c000960d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009732                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009755                Virt::swapIDToSector(unsigned long)
                0x00000000c000976b                Virt::allocateSwapfilePage()
                0x00000000c00097eb                Virt::virtualMemorySetup()
                0x00000000c000983c                Virt::setupPageSwapping(int)
                0x00000000c00098ae                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098de                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000992b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a68                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a8c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aa6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009b52                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b86                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009d20                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e24                VAS::allocatePages(int, int)
                0x00000000c0009f1a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f72                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a2b2                VAS::evict(unsigned long)
                0x00000000c000a390                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a52a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a59e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ca                VAS::scanForEviction()
                0x00000000c000a6cd                mapVASFirstTime
 .text          0x00000000c000a7c8       0x5f coreobjs/c++.32
                0x00000000c000a7c8                __cxa_atexit
                0x00000000c000a7cb                __cxa_finalize
                0x00000000c000a7cc                __stack_chk_fail
                0x00000000c000a802                __cxa_pure_virtual
                0x00000000c000a813                operator new[](unsigned long)
                0x00000000c000a818                operator delete(void*, unsigned long)
                0x00000000c000a81d                operator delete[](void*)
                0x00000000c000a822                operator delete[](void*, unsigned long)
 .text          0x00000000c000a827      0x254 dbg/kconsole.32
                0x00000000c000a827                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8c7                Dbg::logc(char)
                0x00000000c000a8e7                Dbg::logs(char*)
                0x00000000c000a906                Dbg::logWriteInt(unsigned int)
                0x00000000c000a924                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a945                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa7b        0x1 
 .text          0x00000000c000aa7c      0x2d4 dbg/usban.32
                0x00000000c000aa7c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aae8                __ubsan_handle_type_mismatch_v1
                0x00000000c000abc4                __ubsan_handle_pointer_overflow
                0x00000000c000abf0                __ubsan_handle_out_of_bounds
                0x00000000c000ac1c                __ubsan_handle_add_overflow
                0x00000000c000ac48                __ubsan_handle_load_invalid_value
                0x00000000c000ac74                __ubsan_handle_divrem_overflow
                0x00000000c000aca0                __ubsan_handle_mul_overflow
                0x00000000c000accc                __ubsan_handle_sub_overflow
                0x00000000c000acf8                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad24                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad50      0x57c fs/symlink.32
                0x00000000c000ad50                KiCreateSymlinkID()
                0x00000000c000adbd                KiFlushSymlinkChanges()
                0x00000000c000ae90                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae95                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000af04                KiIsSymlinkRegistered(char const*)
                0x00000000c000af4b                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b0d9                KeCreateSymlink(char const*, char const*)
                0x00000000c000b216                KeInitialiseSymlinks()
 .text          0x00000000c000b2cc      0xcb6 fs/vfs.32
                0x00000000c000b2cc                File::read(unsigned long long, void*, int*)
                0x00000000c000b324                File::write(unsigned long long, void*, int*)
                0x00000000c000b37c                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b3d4                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b402                File::isAtty()
                0x00000000c000b406                Directory::isAtty()
                0x00000000c000b40a                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b410                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b416                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b41c                File::~File()
                0x00000000c000b41c                File::~File()
                0x00000000c000b440                File::~File()
                0x00000000c000b46a                Directory::~Directory()
                0x00000000c000b46a                Directory::~Directory()
                0x00000000c000b48e                Directory::~Directory()
                0x00000000c000b4b8                Filesystem::Filesystem()
                0x00000000c000b4b8                Filesystem::Filesystem()
                0x00000000c000b4dc                Filesystem::~Filesystem()
                0x00000000c000b4dc                Filesystem::~Filesystem()
                0x00000000c000b4ea                Filesystem::~Filesystem()
                0x00000000c000b50e                Fs::getcwd(Process*, char*, int)
                0x00000000c000b538                Fs::initVFS()
                0x00000000c000b562                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b718                File::File(char const*, Process*)
                0x00000000c000b718                File::File(char const*, Process*)
                0x00000000c000b7d4                File::open(FileOpenMode)
                0x00000000c000b832                File::close()
                0x00000000c000b892                File::seek(unsigned long long)
                0x00000000c000b8e8                File::truncate(unsigned long long)
                0x00000000c000b93e                File::tell(unsigned long long*)
                0x00000000c000b98e                File::rewind()
                0x00000000c000b9a2                File::unlink()
                0x00000000c000b9ee                File::rename(char const*)
                0x00000000c000ba3c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ba98                File::exists()
                0x00000000c000bad6                File::stat(unsigned long long*, bool*)
                0x00000000c000bb37                Fs::setcwd(Process*, char*)
                0x00000000c000bc94                Directory::Directory(char const*, Process*)
                0x00000000c000bc94                Directory::Directory(char const*, Process*)
                0x00000000c000bd50                Directory::open()
                0x00000000c000bdac                Directory::close()
                0x00000000c000be0c                Directory::unlink()
                0x00000000c000be58                Directory::rename(char const*)
                0x00000000c000bea6                Directory::exists()
                0x00000000c000bee4                Directory::read(dirent*)
                0x00000000c000bf30                Directory::create()
                0x00000000c000bf7c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000bf82        0x2 
 .text          0x00000000c000bf84       0x86 hal/bus.32
                0x00000000c000bf84                Bus::Bus(char const*)
                0x00000000c000bf84                Bus::Bus(char const*)
                0x00000000c000bfbc                Bus::~Bus()
                0x00000000c000bfbc                Bus::~Bus()
                0x00000000c000bfe0                Bus::~Bus()
 .text          0x00000000c000c00a       0x96 hal/buzzer.32
                0x00000000c000c00a                beepThread(void*)
                0x00000000c000c047                Krnl::beep(int, int, bool)
 .text          0x00000000c000c0a0      0x45f hal/clock.32
                0x00000000c000c0a0                User::loadClockSettings(int)
                0x00000000c000c0f2                Clock::Clock(char const*)
                0x00000000c000c0f2                Clock::Clock(char const*)
                0x00000000c000c128                Clock::~Clock()
                0x00000000c000c128                Clock::~Clock()
                0x00000000c000c14c                Clock::~Clock()
                0x00000000c000c176                Clock::timeInSecondsLocal()
                0x00000000c000c1be                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c217                datetimeToSeconds(datetime_t)
                0x00000000c000c336                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c396                secondsToDatetime(unsigned long long)
                0x00000000c000c4da                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c4ff        0x1 
 .text          0x00000000c000c500      0x464 hal/device.32
                0x00000000c000c500                Device::hibernate()
                0x00000000c000c502                Device::wake()
                0x00000000c000c504                Device::detect()
                0x00000000c000c506                Device::disableLegacy()
                0x00000000c000c508                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c50a                DriverlessDevice::close(int, int, void*)
                0x00000000c000c50e                DriverlessDevice::detect()
                0x00000000c000c510                DriverlessDevice::open(int, int, void*)
                0x00000000c000c524                Device::~Device()
                0x00000000c000c524                Device::~Device()
                0x00000000c000c532                Device::~Device()
                0x00000000c000c55a                Device::findAndLoadDriver()
                0x00000000c000c568                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c58e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c5ce                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c5f8                Device::getParent()
                0x00000000c000c604                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c622                Device::addChild(Device*)
                0x00000000c000c666                Device::removeAllChildren()
                0x00000000c000c6ac                Device::hibernateAll()
                0x00000000c000c6dc                Device::wakeAll()
                0x00000000c000c70c                Device::detectAll()
                0x00000000c000c73c                Device::disableLegacyAll()
                0x00000000c000c73e                Device::loadDriversForAll()
                0x00000000c000c740                Device::closeAll()
                0x00000000c000c776                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c7ac                Device::setName(char const*)
                0x00000000c000c7ba                Device::Device(char const*)
                0x00000000c000c7ba                Device::Device(char const*)
                0x00000000c000c8b6                Device::getName()
                0x00000000c000c8c0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c8c0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c8f6                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c93a                getDevicesOfType(DeviceType)
 .text          0x00000000c000c964       0x86 hal/diskctrl.32
                0x00000000c000c964                HardDiskController::HardDiskController(char const*)
                0x00000000c000c964                HardDiskController::HardDiskController(char const*)
                0x00000000c000c99c                HardDiskController::~HardDiskController()
                0x00000000c000c99c                HardDiskController::~HardDiskController()
                0x00000000c000c9c0                HardDiskController::~HardDiskController()
 .text          0x00000000c000c9ea       0xe2 hal/diskphys.32
                0x00000000c000c9ea                PhysicalDisk::eject()
                0x00000000c000c9ee                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c9ee                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ca56                PhysicalDisk::startCache()
                0x00000000c000ca7e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ca7e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000caa2                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cacc        0x0 hal/fpu.32
 .text          0x00000000c000cacc      0x359 hal/intctrl.32
                0x00000000c000cacc                int_handler
                0x00000000c000cb56                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cba0                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ccd4                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000cd08                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000cd86                setupINTS()
                0x00000000c000cde3                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000ce25        0x1 
 .text          0x00000000c000ce26      0x8be hal/keybrd.32
                0x00000000c000ce26                startGUI(void*)
                0x00000000c000ce94                startGUIVESA(void*)
                0x00000000c000cf02                sendKeyToTerminal(unsigned char)
                0x00000000c000cfdd                sendKeyboardToken(KeyboardToken)
                0x00000000c000d4c7                clearInternalKeybuffer(VgaText*)
                0x00000000c000d4fc                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d65a                Keyboard::Keyboard(char const*)
                0x00000000c000d65a                Keyboard::Keyboard(char const*)
                0x00000000c000d696                Keyboard::~Keyboard()
                0x00000000c000d696                Keyboard::~Keyboard()
                0x00000000c000d6ba                Keyboard::~Keyboard()
 .text          0x00000000c000d6e4      0x3f8 hal/logidisk.32
                0x00000000c000d6e4                LogicalDisk::close(int, int, void*)
                0x00000000c000d6e8                LogicalDisk::~LogicalDisk()
                0x00000000c000d6e8                LogicalDisk::~LogicalDisk()
                0x00000000c000d70c                LogicalDisk::~LogicalDisk()
                0x00000000c000d736                LogicalDisk::open(int, int, void*)
                0x00000000c000d74a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d782                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d7c8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d7c8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d888                LogicalDisk::assignDriveLetter()
                0x00000000c000d942                LogicalDisk::mount()
                0x00000000c000d98a                LogicalDisk::unmount()
                0x00000000c000d99a                LogicalDisk::eject()
                0x00000000c000d9ae                LogicalDisk::unassignDriveLetter()
                0x00000000c000da04                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000da70                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000dadc       0x86 hal/mouse.32
                0x00000000c000dadc                Mouse::Mouse(char const*)
                0x00000000c000dadc                Mouse::Mouse(char const*)
                0x00000000c000db14                Mouse::~Mouse()
                0x00000000c000db14                Mouse::~Mouse()
                0x00000000c000db38                Mouse::~Mouse()
 .text          0x00000000c000db62       0x90 hal/nic.32
                0x00000000c000db62                NIC::getMAC()
                0x00000000c000db68                NIC::write(int, unsigned char*, int*)
                0x00000000c000db6e                NIC::NIC(char const*)
                0x00000000c000db6e                NIC::NIC(char const*)
                0x00000000c000dba4                NIC::~NIC()
                0x00000000c000dba4                NIC::~NIC()
                0x00000000c000dbc8                NIC::~NIC()
 .text          0x00000000c000dbf2      0x33b hal/partition.32
                0x00000000c000dbf2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc9a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000df2d        0x3 
 .text          0x00000000c000df30       0x86 hal/serial.32
                0x00000000c000df30                Serial::Serial(char const*)
                0x00000000c000df30                Serial::Serial(char const*)
                0x00000000c000df68                Serial::~Serial()
                0x00000000c000df68                Serial::~Serial()
                0x00000000c000df8c                Serial::~Serial()
 *fill*         0x00000000c000dfb6        0x2 
 .text          0x00000000c000dfb8      0x234 hal/timer.32
                0x00000000c000dfb8                Timer::Timer(char const*)
                0x00000000c000dfb8                Timer::Timer(char const*)
                0x00000000c000dff0                Timer::~Timer()
                0x00000000c000dff0                Timer::~Timer()
                0x00000000c000e014                Timer::~Timer()
                0x00000000c000e03e                Timer::read()
                0x00000000c000e049                setupTimer(int)
                0x00000000c000e084                timerHandler(unsigned int)
 .text          0x00000000c000e1ec      0x444 hal/vcache.32
                0x00000000c000e1ec                VCache::VCache(PhysicalDisk*)
                0x00000000c000e1ec                VCache::VCache(PhysicalDisk*)
                0x00000000c000e35c                VCache::invalidateReadBuffer()
                0x00000000c000e36c                VCache::writeWriteBuffer()
                0x00000000c000e3b8                VCache::~VCache()
                0x00000000c000e3b8                VCache::~VCache()
                0x00000000c000e410                VCache::~VCache()
                0x00000000c000e438                VCache::write(unsigned long long, int, void*)
                0x00000000c000e526                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e630      0x4c7 hal/video.32
                0x00000000c000e630                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e67c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e6ec                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e76a                Video::clearScreen(unsigned int)
                0x00000000c000e79e                Video::putpixel(int, int, unsigned int)
                0x00000000c000e7ac                Video::readPixelApprox(int, int)
                0x00000000c000e7c0                Video::Video(char const*)
                0x00000000c000e7c0                Video::Video(char const*)
                0x00000000c000e7f6                Video::~Video()
                0x00000000c000e7f6                Video::~Video()
                0x00000000c000e81a                Video::~Video()
                0x00000000c000e844                Video::isMonochrome()
                0x00000000c000e850                Video::getWidth()
                0x00000000c000e85c                Video::getHeight()
                0x00000000c000e868                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e924                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ea8c                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eaf7        0x1 
 .text          0x00000000c000eaf8     0x138b hw/acpi.32
                0x00000000c000eaf8                ACPI::close(int, int, void*)
                0x00000000c000ebac                findRSDP()
                0x00000000c000ec44                loadACPITables(unsigned char*)
                0x00000000c000eeb0                findRSDT(unsigned char*)
                0x00000000c000f008                findDataTable(unsigned char*, char*)
                0x00000000c000f088                scanMADT()
                0x00000000c000f540                ACPI::ACPI()
                0x00000000c000f540                ACPI::ACPI()
                0x00000000c000f594                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f690                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f75c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f764                ACPI::detectPCI()
                0x00000000c000f984                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f9cc                ACPI::sleep()
                0x00000000c000f9e8                ACPI::open(int, int, void*)
 *fill*         0x00000000c000fe83        0x1 
 .text          0x00000000c000fe84      0xbc5 hw/cpu.32
                0x00000000c000fe84                CPU::close(int, int, void*)
                0x00000000c000fe88                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000fea4                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000febc                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ff30                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000ffb4                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000ffe2                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0010010                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001003e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c001006c                CPU::CPU()
                0x00000000c001006c                CPU::CPU()
                0x00000000c00100fa                CPU::displayFeatures()
                0x00000000c00100fc                CPU::detectFeatures()
                0x00000000c00107d0                CPU::setupSMEP()
                0x00000000c00107dc                CPU::setupUMIP()
                0x00000000c00107e6                CPU::setupTSC()
                0x00000000c00107f0                CPU::setupLargePages()
                0x00000000c00107fa                CPU::setupPAT()
                0x00000000c0010836                CPU::setupMTRR()
                0x00000000c0010838                CPU::setupGlobalPages()
                0x00000000c0010842                CPU::allowUsermodeDataAccess()
                0x00000000c0010854                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010866                CPU::setupSMAP()
                0x00000000c0010874                CPU::setupFeatures()
                0x00000000c0010940                CPU::open(int, int, void*)
 .text          0x00000000c0010a49       0xb6 krnl/atexit.32
                0x00000000c0010a49                KeInitialiseAtexit()
                0x00000000c0010a68                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010a9c                KeExecuteAtexit()
 .text          0x00000000c0010aff       0xdf krnl/bootmsg.32
                0x00000000c0010aff                KeDisplaySplashScreen()
                0x00000000c0010b7b                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010bde        0x2 
 .text          0x00000000c0010be0       0x1d krnl/compat.32
                0x00000000c0010be0                Krnl::handlePowerButton()
                0x00000000c0010bf0                Krnl::handleSleepButton()
 *fill*         0x00000000c0010bfd        0x1 
 .text          0x00000000c0010bfe      0x5bf krnl/env.32
                0x00000000c0010bfe                EnvVarContainer::getEnv(char const*)
                0x00000000c0010c3c                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010cfe                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010d00                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010f24                EnvVarContainer::__loadSystem()
                0x00000000c0010f3e                EnvVarContainer::__loadUser()
                0x00000000c0010f40                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010f40                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010f62                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010f62                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010f92                KeGetEnv(Process*, char const*)
                0x00000000c0010ff7                KeSetEnvSystem(char const*, char const*)
                0x00000000c0011011                KeSetEnvUser(char const*, char const*)
                0x00000000c0011030                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0011043                KeDeleteEnvSystem(char const*)
                0x00000000c0011044                KeDeleteEnvUser(char const*)
                0x00000000c0011045                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0011046                KeNewProcessEnv(Process*)
                0x00000000c0011068                KeCopyProcessEnv(Process*, Process*)
                0x00000000c00110b4                KeLoadSystemEnv()
                0x00000000c00110e2                KeLoadUserEnv()
                0x00000000c0011108                KeFlushEnv()
                0x00000000c0011109                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011129                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c00111bd       0x94 krnl/inlines.32
                0x00000000c00111bd                CPU::current()
                0x00000000c00111c9                operator new(unsigned long)
                0x00000000c00111ce                operator delete(void*)
                0x00000000c00111d3                disableIRQs()
                0x00000000c00111d5                enableIRQs()
                0x00000000c00111d7                lockScheduler()
                0x00000000c00111df                unlockScheduler()
                0x00000000c00111ee                lockStuff()
                0x00000000c00111fc                unlockStuff()
                0x00000000c0011236                Virt::getAKernelVAS()
                0x00000000c001123c                __not_memcpy
 .text          0x00000000c0011251        0xc krnl/panic.32
                0x00000000c0011251                KePanic(char const*)
 .text          0x00000000c001125d      0x142 krnl/powctrl.32
                0x00000000c001125d                KePowerThread(void*)
                0x00000000c001128b                KeChangePowerSettings(PowerSettings)
                0x00000000c00112a1                KeUserIOReceived()
                0x00000000c00112ac                KeHandlePowerButton()
                0x00000000c00112e1                KeHandleSleepButton()
                0x00000000c0011316                KeSetupPowerManager()
 .text          0x00000000c001139f       0x9d krnl/random.32
                0x00000000c001139f                KeRand()
                0x00000000c00113e1                KeSeedRand(unsigned int)
                0x00000000c001140a                KeInitRand()
 .text          0x00000000c001143c      0x1bc krnl/resolve.32
                0x00000000c001143c                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00115f8      0x322 krnl/signal.32
                0x00000000c00115f8                KiSigKill(int)
                0x00000000c001160c                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001160d                KiDefaultSignalHandlerPause(int)
                0x00000000c0011639                KiDefaultSignalHandlerResume(int)
                0x00000000c0011665                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001166a                KeInitSignals()
                0x00000000c00116bc                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00116f2                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001176f                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011866                KiCheckSignalZ
                0x00000000c00118a8                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00118e3                KiFinishSignalZ
 .text          0x00000000c001191a      0xc61 krnl/syscalls.32
                0x00000000c001191a                SysSeekDir(regs*)
                0x00000000c001191f                SysTellDir(regs*)
                0x00000000c0011924                SysVerify(regs*)
                0x00000000c001192e                SysGetArgc(regs*)
                0x00000000c0011942                SysTTYName(regs*)
                0x00000000c001194a                SysFormatDisk(regs*)
                0x00000000c00119c1                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011a15                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011a6e                SysShutdown(regs*)
                0x00000000c0011acc                SysRealpath(regs*)
                0x00000000c0011b11                SysReadDir(regs*)
                0x00000000c0011b91                SysIsATTY(regs*)
                0x00000000c0011beb                SysSeek(regs*)
                0x00000000c0011c42                SysTell(regs*)
                0x00000000c0011caf                SysSize(regs*)
                0x00000000c0011d22                SysSizeFromFilename(regs*)
                0x00000000c0011dd3                SysClose(regs*)
                0x00000000c0011e33                SysOpenDir(regs*)
                0x00000000c0011eb0                SysMakeDir(regs*)
                0x00000000c0011f1e                SysCloseDir(regs*)
                0x00000000c0011f72                SysWait(regs*)
                0x00000000c0011f93                SysNotImpl(regs*)
                0x00000000c0011fae                SysPanic(regs*)
                0x00000000c0011fc9                SysRmdir(regs*)
                0x00000000c001202e                SysUnlink(regs*)
                0x00000000c0012093                SysGetArgv(regs*)
                0x00000000c00120e0                SysUSleep(regs*)
                0x00000000c0012109                SysSpawn(regs*)
                0x00000000c001217c                SysGetEnv(regs*)
                0x00000000c001222d                SysSetFatAttrib(regs*)
                0x00000000c00122a0                SysPipe(regs*)
                0x00000000c00122e5                SysGetUnixTime(regs*)
                0x00000000c00122f9                string_ends_with(char const*, char const*)
                0x00000000c0012341                SysOpen(regs*)
                0x00000000c0012539                KeSystemCall(regs*, void*)
 *fill*         0x00000000c001257b        0x1 
 .text          0x00000000c001257c      0x159 net/ethernet.32
                0x00000000c001257c                KeSwitchEndian16(unsigned short)
                0x00000000c00125a0                KeSwitchEndian32(unsigned int)
                0x00000000c00125d0                EthernetCRC32(unsigned char*, int)
                0x00000000c0012674                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c00126d5      0xd56 reg/cm.32
                0x00000000c00126d5                CmOpen(char const*)
                0x00000000c00127f3                CmClose(Reghive_Tag*)
                0x00000000c0012809                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012845                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c00128bc                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c00128fb                CmGetNext(Reghive_Tag*, int)
                0x00000000c001292d                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012969                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012991                CmUpdateHeader(Reghive_Tag*)
                0x00000000c00129b2                CmExpand(Reghive_Tag*, int)
                0x00000000c0012a2d                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012ab3                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012ba7                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012ce3                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012d44                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012d74                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012dab                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012dd5                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012e15                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012eb9                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012ee7                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013085                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00130d2                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001314c                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001319f                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013263                zStrtok(char*, char const*)
                0x00000000c00132d5                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013356                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c00133f9                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001342b      0x52a reg/registry.32
                0x00000000c001342b                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c001359c                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00136f1                Reg::getLine(char*, char*, char*)
                0x00000000c0013728                Reg::readInt(char*, char*, int*)
                0x00000000c0013816                Reg::readString(char*, char*, char*, int)
                0x00000000c0013897                Reg::readBool(char*, char*, bool*)
                0x00000000c00138bc                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00138e8                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013914                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013955       0x36 sys/eject.32
                0x00000000c0013955                SysEject(regs*)
 .text          0x00000000c001398b       0x18 sys/exit.32
                0x00000000c001398b                SysExit(regs*)
 .text          0x00000000c00139a3       0x1f sys/getcwd.32
                0x00000000c00139a3                SysGetCwd(regs*)
 .text          0x00000000c00139c2        0xc sys/getpid.32
                0x00000000c00139c2                SysGetPID(regs*)
 .text          0x00000000c00139ce       0x1a sys/getramdata.32
                0x00000000c00139ce                SysGetRAMData(regs*)
 .text          0x00000000c00139e8       0x82 sys/getvgaptr.32
                0x00000000c00139e8                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013a6a        0x2 
 .text          0x00000000c0013a6c       0xb9 sys/kill.32
                0x00000000c0013a6c                SysKill(regs*)
 .text          0x00000000c0013b25       0xa8 sys/loaddll.32
                0x00000000c0013b25                SysLoadDLL(regs*)
 .text          0x00000000c0013bcd       0x68 sys/read.32
                0x00000000c0013bcd                SysRead(regs*)
 .text          0x00000000c0013c35       0x29 sys/registersignal.32
                0x00000000c0013c35                SysRegisterSignal(regs*)
 .text          0x00000000c0013c5e      0x19c sys/registry.32
                0x00000000c0013c5e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013cd5                SysRegistryReadExtent(regs*)
                0x00000000c0013d1d                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013d45                SysRegistryEnterDirectory(regs*)
                0x00000000c0013d6d                SysRegistryGetNext(regs*)
                0x00000000c0013d95                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013dcf                SysRegistryOpen(regs*)
                0x00000000c0013de3                SysRegistryClose(regs*)
 .text          0x00000000c0013dfa       0x55 sys/sbrk.32
                0x00000000c0013dfa                SysSbrk(regs*)
 .text          0x00000000c0013e4f       0x1c sys/setcwd.32
                0x00000000c0013e4f                SysSetCwd(regs*)
 .text          0x00000000c0013e6b       0x96 sys/settime.32
                0x00000000c0013e6b                SysSetTime(regs*)
 .text          0x00000000c0013f01       0x4a sys/timezone.32
                0x00000000c0013f01                SysTimezone(regs*)
 .text          0x00000000c0013f4b       0xfc sys/truncate.32
                0x00000000c0013f4b                SysTruncate(regs*)
 .text          0x00000000c0014047       0x68 sys/write.32
                0x00000000c0014047                SysWrite(regs*)
 .text          0x00000000c00140af       0x62 sys/wsbe.32
                0x00000000c00140af                SysWsbe(regs*)
 .text          0x00000000c0014111       0x25 sys/yield.32
                0x00000000c0014111                SysYield(regs*)
 .text          0x00000000c0014136     0x11e6 thr/elf.32
                0x00000000c0014136                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00143c4                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00145d6                Thr::runtimeReferenceHelper()
                0x00000000c00145e9                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014638                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00148f6                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001502f                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015061                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015098                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00150b2                Thr::loadDLL(char const*, bool)
                0x00000000c00152e3                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001531c     0x13d9 thr/prcssthr.32
                0x00000000c001531c                userModeEntryPoint(void*)
                0x00000000c0015344                changeTSS
                0x00000000c0015374                switchToThread(ThreadControlBlock*)
                0x00000000c0015424                Process::addArgs(char**)
                0x00000000c0015490                Process::Process(char const*, Process*, char**)
                0x00000000c0015490                Process::Process(char const*, Process*, char**)
                0x00000000c001569c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001569c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015870                taskStartupFunction
                0x00000000c001587c                Semaphore::Semaphore(int)
                0x00000000c001587c                Semaphore::Semaphore(int)
                0x00000000c00158ac                Mutex::Mutex()
                0x00000000c00158ac                Mutex::Mutex()
                0x00000000c00158c0                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00159cc                Process::createUserThread()
                0x00000000c00159ec                setupMultitasking(void (*)())
                0x00000000c0015b10                schedule()
                0x00000000c0015ba4                Semaphore::tryAcquire()
                0x00000000c0015c78                Semaphore::assertLocked(char const*)
                0x00000000c0015cfc                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015d24                blockTask(TaskState)
                0x00000000c0015d5c                waitTask(int, int*, int)
                0x00000000c0015da0                milliTenthSleepUntil(unsigned int)
                0x00000000c0015e40                milliTenthSleep(unsigned int)
                0x00000000c0015e54                sleep(unsigned int)
                0x00000000c0015e70                Semaphore::acquire()
                0x00000000c0015f38                taskReturned
                0x00000000c0015f7c                Thr::processFromPID(int)
                0x00000000c0016028                unblockTask(ThreadControlBlock*)
                0x00000000c00160d4                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00163a8                cleanerTaskFunction(void*)
                0x00000000c00164b0                terminateTask(int)
                0x00000000c001659c                Thr::terminateFromIRQ(int)
                0x00000000c00165ac                Semaphore::release()
 .text          0x00000000c00166f5      0xc27 vm86/vm8086.32
                0x00000000c00166f5                Vm::inbv(unsigned short)
                0x00000000c0016708                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001673e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001674e                Vm::getSegment(unsigned int)
                0x00000000c0016756                Vm::getOffset(unsigned int)
                0x00000000c001675b                Vm::mainloop2()
                0x00000000c0016795                Vm::mainVm8086Loop(void*)
                0x00000000c00167a5                Vm::mainloop3(unsigned long)
                0x00000000c00167cb                Vm::initialise8086()
                0x00000000c001680e                Vm::finish8086()
                0x00000000c001686f                Vm::getOutput8086(unsigned char*)
                0x00000000c0016894                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001694d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016aeb                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016b84                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016b95                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016ba7                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016bb8                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016bcd                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016be3                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016bf8                Vm::faultHandler(regs*)
 .text          0x00000000c001731c      0xaf0 arch/i386/hal.32
                0x00000000c001731c                noCopro(unsigned long)
                0x00000000c001731d                nmiHandler(regs*, void*)
                0x00000000c0017336                doubleFault(regs*, void*)
                0x00000000c001734f                displayDebugInfo(regs*)
                0x00000000c00176d4                HalSystemIdle()
                0x00000000c0017750                displayProgramFault(char const*)
                0x00000000c001779c                gpFault(regs*, void*)
                0x00000000c0017803                pgFault(regs*, void*)
                0x00000000c001788c                otherISRHandler(regs*, void*)
                0x00000000c00178c0                opcodeFault(regs*, void*)
                0x00000000c0017943                i386SaveCoprocessor(void*)
                0x00000000c0017957                i386LoadCoprocessor(void*)
                0x00000000c001796b                x87EmulHandler(regs*, void*)
                0x00000000c0017a08                HalInitialiseCoprocessor()
                0x00000000c0017ab6                HalPanic(char const*)
                0x00000000c0017bca                HalQueryPerformanceCounter()
                0x00000000c0017be5                HalInitialise()
                0x00000000c0017d9b                HalMakeBeep(int)
                0x00000000c0017dd5                HalGetRand()
                0x00000000c0017dd8                HalEndOfInterrupt(int)
                0x00000000c0017e09                HalRestart()
                0x00000000c0017e0a                HalShutdown()
                0x00000000c0017e0b                HalSleep()
 .text          0x00000000c0017e0c      0x2dc arch/i386/pic.32
                0x00000000c0017e0c                picIoWait()
                0x00000000c0017e14                picDisable()
                0x00000000c0017e48                picGetIRQReg(int)
                0x00000000c0017ec4                picOpen()
                0x00000000c0018048                picEOI(int)
 .text          0x00000000c00180e8      0x674 arch/i386/rtc.32
                0x00000000c00180e8                RTC::open(int, int, void*)
                0x00000000c00180ec                RTC::close(int, int, void*)
                0x00000000c00180f0                RTC::timeInSecondsUTC()
                0x00000000c0018102                RTC::timeInDatetimeUTC()
                0x00000000c0018128                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018166                RTC::~RTC()
                0x00000000c0018166                RTC::~RTC()
                0x00000000c001818a                RTC::~RTC()
                0x00000000c00181b4                RTC::get_update_in_progress_flag()
                0x00000000c00181ce                RTC::completeRTCRefresh()
                0x00000000c00184ae                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001865c                rtcIRQHandler(regs*, void*)
                0x00000000c00186a2                RTC::RTC()
                0x00000000c00186a2                RTC::RTC()
 .text          0x00000000c001875c      0x1f4 arch/i386/vga.32
                0x00000000c001875c                HalConsoleScroll(int, int)
                0x00000000c0018864                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00188c8                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018950     0x14cf fs/fat/vfslink.32
                0x00000000c0018950                FAT::getName()
                0x00000000c0018958                FAT::tell(void*, unsigned long long*)
                0x00000000c0018994                FAT::stat(void*, unsigned long long*)
                0x00000000c00189d0                FAT::~FAT()
                0x00000000c00189d0                FAT::~FAT()
                0x00000000c00189f4                FAT::~FAT()
                0x00000000c0018a1c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018ac0                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018b84                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018d68                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018f84                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019144                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00192b4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019314                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019374                FAT::close(void*)
                0x00000000c00193c8                FAT::closeDir(void*)
                0x00000000c001941c                FAT::truncate(void*, unsigned long long)
                0x00000000c0019488                FAT::seek(void*, unsigned long long)
                0x00000000c00194e0                fatWrapperReadDisk
                0x00000000c0019520                fatWrapperWriteDisk
                0x00000000c0019560                fatWrapperIoctl
                0x00000000c001967c                FAT::FAT()
                0x00000000c001967c                FAT::FAT()
                0x00000000c00196d4                FAT::fixFilepath(char*)
                0x00000000c0019714                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019888                FAT::openDir(char const*, void**)
                0x00000000c0019938                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019a30                FAT::unlink(char const*)
                0x00000000c0019ab0                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019c64                FAT::rename(char const*, char const*)
                0x00000000c0019d30                FAT::mkdir(char const*)
                0x00000000c0019db0                FAT::exists(char const*)
 *fill*         0x00000000c0019e1f        0x1 
 .text          0x00000000c0019e20       0x94 fs/iso9660/helper.32
                0x00000000c0019e20                isoReadDiscSectorHelper
                0x00000000c0019e7c                iso_kprintf
                0x00000000c0019e98                iso_kprintfd
 .text          0x00000000c0019eb4      0x71c fs/iso9660/vfslink.32
                0x00000000c0019eb4                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019eba                ISO9660::truncate(void*, unsigned long long)
                0x00000000c0019ec0                ISO9660::getName()
                0x00000000c0019ec6                ISO9660::closeDir(void*)
                0x00000000c0019ed0                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019ed6                ISO9660::unlink(char const*)
                0x00000000c0019edc                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019ee2                ISO9660::rename(char const*, char const*)
                0x00000000c0019ee8                ISO9660::mkdir(char const*)
                0x00000000c0019eee                ISO9660::~ISO9660()
                0x00000000c0019eee                ISO9660::~ISO9660()
                0x00000000c0019f12                ISO9660::~ISO9660()
                0x00000000c0019f3a                ISO9660::exists(char const*)
                0x00000000c0019f4e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a034                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a07c                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a0be                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a0fc                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a14e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a290                ISO9660::close(void*)
                0x00000000c001a2c0                ISO9660::openDir(char const*, void**)
                0x00000000c001a39a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a4b7                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a536                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a5a8                ISO9660::ISO9660()
                0x00000000c001a5a8                ISO9660::ISO9660()
 .text          0x00000000c001a5d0      0x26c hal/sound/sndcard.32
                0x00000000c001a5d0                SoundCard::beginPlayback()
                0x00000000c001a5de                SoundCard::stopPlayback()
                0x00000000c001a5ec                SoundCard::SoundCard(char const*)
                0x00000000c001a5ec                SoundCard::SoundCard(char const*)
                0x00000000c001a68a                SoundCard::~SoundCard()
                0x00000000c001a68a                SoundCard::~SoundCard()
                0x00000000c001a6ae                SoundCard::~SoundCard()
                0x00000000c001a6d8                SoundCard::configureRates(int, int, int)
                0x00000000c001a708                SoundCard::getSamples16(int, short*)
                0x00000000c001a764                SoundCard::getSamples32(int, int*)
                0x00000000c001a7ea                SoundCard::addChannel(SoundPort*)
                0x00000000c001a828                SoundCard::removeChannel(int)
 .text          0x00000000c001a83c      0x38a hal/sound/sndport.32
                0x00000000c001a83c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a83c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a8c8                SoundPort::~SoundPort()
                0x00000000c001a8c8                SoundPort::~SoundPort()
                0x00000000c001a8fc                SoundPort::unpause()
                0x00000000c001a908                SoundPort::pause()
                0x00000000c001a914                SoundPort::getBufferUsed()
                0x00000000c001a91c                SoundPort::getBufferSize()
                0x00000000c001a924                SoundPort::buffer16(short*, int)
                0x00000000c001a9b0                SoundPort::buffer32(int*, int)
                0x00000000c001aa3c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001ab08                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001abc6        0x0 hw/bus/isa.32
 .text          0x00000000c001abc6      0xbb7 hw/bus/pci.32
                0x00000000c001abc6                PCI::open(int, int, void*)
                0x00000000c001abe4                PCI::close(int, int, void*)
                0x00000000c001abe8                PCI::PCI()
                0x00000000c001abe8                PCI::PCI()
                0x00000000c001ac80                PCI::readBAR8(unsigned int, int)
                0x00000000c001ac9c                PCI::readBAR16(unsigned int, int)
                0x00000000c001acba                PCI::readBAR32(unsigned int, int)
                0x00000000c001acd6                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001acf6                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001ad18                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001ad38                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001adae                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ae58                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae7c                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001aea4                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001aeee                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001af16                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001af3a                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001af5e                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001af86                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001afea                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b0d2                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b398                PCI::checkBus(unsigned char)
                0x00000000c001b3bc                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b536                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b6b2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b724                PCI::detect()
 *fill*         0x00000000c001b77d        0x1 
 .text          0x00000000c001b77e      0xb9a hw/diskctrl/ide.32
                0x00000000c001b77e                IDE::close(int, int, void*)
                0x00000000c001b782                IDE::IDE()
                0x00000000c001b782                IDE::IDE()
                0x00000000c001b7b6                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b7c8                selectDrive(unsigned char, unsigned char)
                0x00000000c001b7ca                IDE::getBase(unsigned char)
                0x00000000c001b7dc                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b89c                IDE::read(unsigned char, unsigned char)
                0x00000000c001b94a                IDE::waitInterrupt(unsigned char)
                0x00000000c001b9ac                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b9c8                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001b9e4                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ba2e                IDE::open(int, int, void*)
                0x00000000c001be6c                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001bf3c                IDE::detect()
                0x00000000c001c20a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c2c4                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c318      0x32a hw/diskctrl/satabus.32
                0x00000000c001c318                SATABus::close(int, int, void*)
                0x00000000c001c31c                SATABus::detect()
                0x00000000c001c31e                SATABus::SATABus()
                0x00000000c001c31e                SATABus::SATABus()
                0x00000000c001c3a4                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c3d6                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c41e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c43e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c468                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c578                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c622                SATABus::open(int, int, void*)
 .text          0x00000000c001c642      0x93f hw/diskphys/ata.32
                0x00000000c001c642                ATA::close(int, int, void*)
                0x00000000c001c666                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c668                ATA::ATA()
                0x00000000c001c668                ATA::ATA()
                0x00000000c001c696                ATA::flush(bool)
                0x00000000c001c6e4                ATA::readyForCommand()
                0x00000000c001c730                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cac6                ATA::detectCHS()
                0x00000000c001caf0                ATA::open(int, int, void*)
                0x00000000c001cbbc                combineCharAndColour(char, unsigned char)
                0x00000000c001cbcd                combineColours(unsigned char, unsigned char)
                0x00000000c001cbda                ATA::read(unsigned long long, int, void*)
                0x00000000c001cdb0                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001cf81        0x1 
 .text          0x00000000c001cf82      0x618 hw/diskphys/atapi.32
                0x00000000c001cf82                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001cf88                ATAPI::close(int, int, void*)
                0x00000000c001cfac                ATAPI::ATAPI()
                0x00000000c001cfac                ATAPI::ATAPI()
                0x00000000c001cfda                ATAPI::readyForCommand()
                0x00000000c001d02c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d2f4                ATAPI::diskRemoved()
                0x00000000c001d32e                ATAPI::eject()
                0x00000000c001d376                ATAPI::diskInserted()
                0x00000000c001d382                ATAPI::detectMedia()
                0x00000000c001d440                ATAPI::open(int, int, void*)
                0x00000000c001d520                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d59a      0x807 hw/diskphys/sata.32
                0x00000000c001d59a                SATA::close(int, int, void*)
                0x00000000c001d5be                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d5c0                SATA::open(int, int, void*)
                0x00000000c001d66a                SATA::SATA()
                0x00000000c001d66a                SATA::SATA()
                0x00000000c001d698                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d8ec                SATA::read(unsigned long long, int, void*)
                0x00000000c001db3c                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001dda1        0x1 
 .text          0x00000000c001dda2      0x5d0 hw/diskphys/satapi.32
                0x00000000c001dda2                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001dda8                SATAPI::close(int, int, void*)
                0x00000000c001ddcc                SATAPI::SATAPI()
                0x00000000c001ddcc                SATAPI::SATAPI()
                0x00000000c001ddfa                SATAPI::diskRemoved()
                0x00000000c001ddfc                SATAPI::diskInserted()
                0x00000000c001de18                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e0f6                SATAPI::eject()
                0x00000000c001e132                SATAPI::detectMedia()
                0x00000000c001e188                SATAPI::open(int, int, void*)
                0x00000000c001e288                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e372      0x45b hw/intctrl/apic.32
                0x00000000c001e372                IOAPIC::close(int, int, void*)
                0x00000000c001e378                apicGetBase()
                0x00000000c001e3be                IOAPIC::IOAPIC()
                0x00000000c001e3be                IOAPIC::IOAPIC()
                0x00000000c001e3e6                apicOpen()
                0x00000000c001e562                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e594                IOAPIC::read(int)
                0x00000000c001e5bc                IOAPIC::open(int, int, void*)
                0x00000000c001e6a2                IOAPIC::write(int, int)
                0x00000000c001e6ce                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e7cd        0x3 
 .text          0x00000000c001e7d0       0xf0 hw/timer/apictimer.32
                0x00000000c001e7d0                APICTimer::close(int, int, void*)
                0x00000000c001e7d8                apicTimerHandler(regs*, void*)
                0x00000000c001e800                APICTimer::open(int, int, void*)
                0x00000000c001e870                APICTimer::write(int)
                0x00000000c001e898                APICTimer::APICTimer()
                0x00000000c001e898                APICTimer::APICTimer()
 .text          0x00000000c001e8c0      0x1ad hw/timer/pit.32
                0x00000000c001e8c0                PIT::write(int)
                0x00000000c001e944                pitHandler(regs*, void*)
                0x00000000c001e96c                PIT::open(int, int, void*)
                0x00000000c001e9bc                PIT::close(int, int, void*)
                0x00000000c001e9ec                PIT::PIT()
                0x00000000c001e9ec                PIT::PIT()
 *fill*         0x00000000c001ea6d        0x3 
 .text          0x00000000c001ea70       0x83 arch/i386/avx.32
                0x00000000c001ea70                avxDetect
                0x00000000c001ea9a                avxSave
                0x00000000c001eaab                avxLoad
                0x00000000c001eabc                avxInit
                0x00000000c001eade                avxClose
                0x00000000c001eadf                wouldSheSayYes
 *fill*         0x00000000c001eaf3        0xd 
 .text          0x00000000c001eb00      0x2ec arch/i386/interrupt.32
                0x00000000c001eb00                isr0
                0x00000000c001eb10                isr1
                0x00000000c001eb1a                isr2
                0x00000000c001eb24                isr3
                0x00000000c001eb2e                isr4
                0x00000000c001eb38                isr5
                0x00000000c001eb42                isr6
                0x00000000c001eb4c                isr7
                0x00000000c001eb56                isr8
                0x00000000c001eb5e                isr9
                0x00000000c001eb68                isr10
                0x00000000c001eb70                isr11
                0x00000000c001eb78                isr12
                0x00000000c001eb80                isr13
                0x00000000c001eb9a                isr14
                0x00000000c001eba2                isr15
                0x00000000c001ebac                isr16
                0x00000000c001ebb6                isr17
                0x00000000c001ebc0                isr18
                0x00000000c001ebca                irq3
                0x00000000c001ebd4                irq4
                0x00000000c001ebde                irq5
                0x00000000c001ebe8                irq6
                0x00000000c001ebf2                irq7
                0x00000000c001ebfc                irq8
                0x00000000c001ec06                irq9
                0x00000000c001ec10                irq10
                0x00000000c001ec1a                irq11
                0x00000000c001ec24                irq12
                0x00000000c001ec2e                irq13
                0x00000000c001ec38                irq14
                0x00000000c001ec42                irq15
                0x00000000c001ec4c                irq1
                0x00000000c001ec53                irq2
                0x00000000c001ec5a                isr96
                0x00000000c001ec61                irq0
                0x00000000c001ec66                int_common_stub
                0x00000000c001ec98                syscall_common_stub
                0x00000000c001ed9c                irq16
                0x00000000c001eda6                irq17
                0x00000000c001edb0                irq18
                0x00000000c001edba                irq19
                0x00000000c001edc4                irq20
                0x00000000c001edce                irq21
                0x00000000c001edd8                irq22
                0x00000000c001ede2                irq23
 *fill*         0x00000000c001edec        0x4 
 .text          0x00000000c001edf0       0x10 arch/i386/rdrand.32
                0x00000000c001edf0                i386GetRDRAND
 .text          0x00000000c001ee00       0x39 arch/i386/sse.32
                0x00000000c001ee00                absolutelyNoChanceInHell
                0x00000000c001ee00                sseDetect
                0x00000000c001ee18                sseSave
                0x00000000c001ee20                sseLoad
                0x00000000c001ee28                sseInit
                0x00000000c001ee38                sseClose
 *fill*         0x00000000c001ee39        0x7 
 .text          0x00000000c001ee40       0x49 arch/i386/x87.32
                0x00000000c001ee46                x87Detect
                0x00000000c001ee61                x87Save
                0x00000000c001ee68                x87Load
                0x00000000c001ee6f                x87Init
                0x00000000c001ee88                x87Close
 *fill*         0x00000000c001ee89        0x3 
 .text          0x00000000c001ee8c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001eeb1        0x0 crtn.32
 *fill*         0x00000000c001eeb1        0x3 
 .text          0x00000000c001eeb4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001eeb4                __divdi3
 *fill*         0x00000000c001efff        0x1 
 .text          0x00000000c001f000      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f000                __moddi3
 *fill*         0x00000000c001f17e        0x2 
 .text          0x00000000c001f180       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f180                __udivdi3
 *fill*         0x00000000c001f27f        0x1 
 .text          0x00000000c001f280      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f280                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f3a0        0x0
 .iplt          0x00000000c001f3a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f39a        0xf
 .init          0x00000000c001f39a        0x3 crti.32
                0x00000000c001f39a                _init
 .init          0x00000000c001f39d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f3a2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f3a7        0x2 crtn.32

.fini           0x00000000c001f3a9        0xa
 .fini          0x00000000c001f3a9        0x3 crti.32
                0x00000000c001f3a9                _fini
 .fini          0x00000000c001f3ac        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f3b1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f3b4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f3b4       0x23 core/computer.32
                0x00000000c001f3b4                Computer::~Computer()
                0x00000000c001f3b4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f3d8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f3d8       0x2a core/computer.32
                0x00000000c001f3d8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f402       0x21
 .text._Z10idleCommonv
                0x00000000c001f402       0x21 core/idle.32
                0x00000000c001f402                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f424        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f424        0x2 core/unixfile.32
                0x00000000c001f424                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f424                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f426       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f426       0x42 core/unixfile.32
                0x00000000c001f426                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f426                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f468       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f468       0xd3 core/unixfile.32
                0x00000000c001f468                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f53c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f53c        0x7 core/unixfile.32
                0x00000000c001f53c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f544       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f544       0xa1 core/unixfile.32
                0x00000000c001f544                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f5e6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f5e6        0x8 core/unixfile.32
                0x00000000c001f5e6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f5ee       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f5ee       0x1a hal/device.32
                0x00000000c001f5ee                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f5ee                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f608       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f608       0x2a hal/device.32
                0x00000000c001f608                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f632       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f632       0xdc hal/device.32
                0x00000000c001f632                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f70e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f70e       0x42 hal/device.32
                0x00000000c001f70e                LinkedList<Device>::LinkedList()
                0x00000000c001f70e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f750       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f750       0x1c hal/timer.32
                0x00000000c001f750                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f76c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f76c        0x7 hal/timer.32
                0x00000000c001f76c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f774       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f774       0xbc hal/timer.32
                0x00000000c001f774                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f830       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f830       0xda hal/timer.32
                0x00000000c001f830                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f90c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f90c       0x23 hw/acpi.32
                0x00000000c001f90c                ACPI::~ACPI()
                0x00000000c001f90c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f930       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f930       0x2a hw/acpi.32
                0x00000000c001f930                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f95c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f95c        0x2 hw/acpi.32
                0x00000000c001f95c                LinkedList<Device>::~LinkedList()
                0x00000000c001f95c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f960       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f960       0x1c hw/acpi.32
                0x00000000c001f960                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f97c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f97c        0x7 hw/acpi.32
                0x00000000c001f97c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f984       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f984       0xb8 hw/acpi.32
                0x00000000c001f984                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001fa3c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fa3c       0x23 hw/cpu.32
                0x00000000c001fa3c                CPU::~CPU()
                0x00000000c001fa3c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fa60       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fa60       0x2a hw/cpu.32
                0x00000000c001fa60                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fa8c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fa8c        0x8 sys/kill.32
                0x00000000c001fa8c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fa94        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fa94        0x2 thr/prcssthr.32
                0x00000000c001fa94                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fa94                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fa98       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fa98       0x49 thr/prcssthr.32
                0x00000000c001fa98                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fa98                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fae4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fae4       0x42 thr/prcssthr.32
                0x00000000c001fae4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fae4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fb26       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fb26       0x23 hw/bus/pci.32
                0x00000000c001fb26                PCI::~PCI()
                0x00000000c001fb26                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fb4a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fb4a       0x2a hw/bus/pci.32
                0x00000000c001fb4a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fb74       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fb74       0x23 hw/diskctrl/ide.32
                0x00000000c001fb74                IDE::~IDE()
                0x00000000c001fb74                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fb98       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fb98       0x2a hw/diskctrl/ide.32
                0x00000000c001fb98                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fbc2       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fbc2       0x23 hw/diskctrl/satabus.32
                0x00000000c001fbc2                SATABus::~SATABus()
                0x00000000c001fbc2                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fbe6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fbe6       0x2a hw/diskctrl/satabus.32
                0x00000000c001fbe6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fc10       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fc10       0x23 hw/diskphys/ata.32
                0x00000000c001fc10                ATA::~ATA()
                0x00000000c001fc10                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fc34       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fc34       0x2a hw/diskphys/ata.32
                0x00000000c001fc34                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fc5e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fc5e       0x23 hw/diskphys/atapi.32
                0x00000000c001fc5e                ATAPI::~ATAPI()
                0x00000000c001fc5e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fc82       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fc82       0x2a hw/diskphys/atapi.32
                0x00000000c001fc82                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001fcac       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001fcac       0x23 hw/diskphys/sata.32
                0x00000000c001fcac                SATA::~SATA()
                0x00000000c001fcac                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001fcd0       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001fcd0       0x2a hw/diskphys/sata.32
                0x00000000c001fcd0                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001fcfa       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001fcfa       0x23 hw/diskphys/satapi.32
                0x00000000c001fcfa                SATAPI::~SATAPI()
                0x00000000c001fcfa                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001fd1e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001fd1e       0x2a hw/diskphys/satapi.32
                0x00000000c001fd1e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001fd48       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001fd48       0x23 hw/intctrl/apic.32
                0x00000000c001fd48                IOAPIC::~IOAPIC()
                0x00000000c001fd48                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001fd6c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001fd6c       0x2a hw/intctrl/apic.32
                0x00000000c001fd6c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001fd98       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001fd98       0x23 hw/timer/apictimer.32
                0x00000000c001fd98                APICTimer::~APICTimer()
                0x00000000c001fd98                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001fdbc       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001fdbc       0x2a hw/timer/apictimer.32
                0x00000000c001fdbc                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001fde8       0x23
 .text._ZN3PITD2Ev
                0x00000000c001fde8       0x23 hw/timer/pit.32
                0x00000000c001fde8                PIT::~PIT()
                0x00000000c001fde8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001fe0c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001fe0c       0x2a hw/timer/pit.32
                0x00000000c001fe0c                PIT::~PIT()

.rodata         0x00000000c001fe36     0x311a
                0x00000000c001fe36                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001fe36        0x2 
 .ctors         0x00000000c001fe38        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001fe3c        0x4 core/unixfile.32
 .ctors         0x00000000c001fe40        0x4 thr/prcssthr.32
 .ctors         0x00000000c001fe44        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fe48                end_ctors = .
                0x00000000c001fe48                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001fe48        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001fe4c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fe4c                __DTOR_END__
                0x00000000c001fe50                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001fe50       0x10 
 .rodata        0x00000000c001fe60      0x101 acpica/utclib.32
                0x00000000c001fe60                AcpiGbl_Ctypes
 *fill*         0x00000000c001ff61        0x3 
 .rodata        0x00000000c001ff64       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001ff7c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001ffc6       0x1a 
 .rodata        0x00000000c001ffe0       0xed fs/fat/ff.32
 *fill*         0x00000000c00200cd       0x13 
 .rodata        0x00000000c00200e0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00204e0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002054f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020664       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c00206cc       0x2c core/computer.32
                0x00000000c00206cc                vtable for Computer
 .rodata.str1.4
                0x00000000c00206f8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020728        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020734       0x17 core/main.32
 *fill*         0x00000000c002074b        0x1 
 .rodata.str1.4
                0x00000000c002074c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c00207f1       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020849       0x39 core/pipe.32
 *fill*         0x00000000c0020882        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020884       0x1c core/pipe.32
                0x00000000c0020884                vtable for Pipe
 .rodata.str1.1
                0x00000000c00208a0       0x2b core/terminal.32
 *fill*         0x00000000c00208cb        0x1 
 .rodata._ZTV7VgaText
                0x00000000c00208cc       0x1c core/terminal.32
                0x00000000c00208cc                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00208e8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002090a       0x15 core/unixfile.32
 *fill*         0x00000000c002091f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020920       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002096b        0x8 core/unixfile.32
 *fill*         0x00000000c0020973        0x1 
 .rodata.str1.4
                0x00000000c0020974       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020994       0x1c core/unixfile.32
                0x00000000c0020994                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00209b0       0x1c core/unixfile.32
                0x00000000c00209b0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00209cc      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020c60      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020d86       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0020db9       0x11 dbg/kconsole.32
 *fill*         0x00000000c0020db9        0x3 
 .rodata        0x00000000c0020dbc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020f0c      0x169 dbg/usban.32
 *fill*         0x00000000c0021075        0x3 
 .rodata.str1.4
                0x00000000c0021078      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00211af       0xe4 fs/symlink.32
 .rodata.str1.1
                0x00000000c0021293       0xe4 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c0021293        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021294       0x6c fs/vfs.32
                0x00000000c0021294                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021300       0x1c fs/vfs.32
                0x00000000c0021300                vtable for File
 .rodata._ZTV9Directory
                0x00000000c002131c       0x1c fs/vfs.32
                0x00000000c002131c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021338       0x2c hal/bus.32
                0x00000000c0021338                vtable for Bus
 .rodata.str1.1
                0x00000000c0021364       0x1e hal/clock.32
 *fill*         0x00000000c0021382        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021384       0x3c hal/clock.32
                0x00000000c0021384                vtable for Clock
 .rodata        0x00000000c00213c0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00213f0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021448       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021448       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021448       0x2c hal/device.32
                0x00000000c0021448                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021474       0x2c hal/device.32
                0x00000000c0021474                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00214a0       0x2c hal/diskctrl.32
                0x00000000c00214a0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00214cc       0x38 hal/diskphys.32
                0x00000000c00214cc                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021504       0x3e hal/intctrl.32
 *fill*         0x00000000c0021542        0x2 
 .rodata.str1.4
                0x00000000c0021544       0x5d hal/intctrl.32
 .rodata        0x00000000c00215a1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c00215f4       0x34 hal/keybrd.32
                0x00000000c00215f4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021628       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002166c       0x2c hal/logidisk.32
                0x00000000c002166c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021698       0x2c hal/mouse.32
                0x00000000c0021698                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00216c4       0x34 hal/nic.32
                0x00000000c00216c4                vtable for NIC
 .rodata.str1.1
                0x00000000c00216f8        0xb hal/partition.32
 *fill*         0x00000000c0021703        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021704       0x44 hal/serial.32
                0x00000000c0021704                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021748       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021748        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021748       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021748       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021748       0x30 hal/timer.32
                0x00000000c0021748                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021778       0x10 hal/vcache.32
                0x00000000c0021778                vtable for VCache
 .rodata.str1.1
                0x00000000c0021788       0x93 hal/video.32
 *fill*         0x00000000c002181b        0x1 
 .rodata._ZTV5Video
                0x00000000c002181c       0x4c hal/video.32
                0x00000000c002181c                vtable for Video
 .rodata.str1.4
                0x00000000c0021868       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021903      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021a59       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021a59        0x8 hw/acpi.32
 *fill*         0x00000000c0021a59        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021a5c       0x2c hw/acpi.32
                0x00000000c0021a5c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021a88      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021c03        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021c04       0x2c hw/cpu.32
                0x00000000c0021c04                vtable for CPU
 .rodata.str1.1
                0x00000000c0021c30       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021c70       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021cac       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021d3d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0021e06       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021e4e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0021e79       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0021eef       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021f34        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0021f3e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0021f5f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0021ff5       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022049       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022075      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022241       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022298      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00223a8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00223a8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00223a8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00223a8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00223a8       0xc2 vm86/vm8086.32
 *fill*         0x00000000c002246a        0x2 
 .rodata        0x00000000c002246c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002249c      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c002263b        0x1 
 .rodata.str1.4
                0x00000000c002263c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c00226af       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00226c4       0x3c arch/i386/rtc.32
                0x00000000c00226c4                vtable for RTC
 .rodata.str1.1
                0x00000000c0022700       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022741        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022744       0x6c fs/fat/vfslink.32
                0x00000000c0022744                vtable for FAT
 .rodata.str1.1
                0x00000000c00227b0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00227b0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00228e8       0x6c fs/iso9660/vfslink.32
                0x00000000c00228e8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022954       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022998       0x34 hal/sound/sndcard.32
                0x00000000c0022998                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00229cc       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022a0b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022a43       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022ae4       0x2c hw/bus/pci.32
                0x00000000c0022ae4                vtable for PCI
 .rodata.str1.1
                0x00000000c0022b10       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022b97        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022b98       0x2c hw/diskctrl/ide.32
                0x00000000c0022b98                vtable for IDE
 .rodata.str1.4
                0x00000000c0022bc4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022be8       0x2c hw/diskctrl/satabus.32
                0x00000000c0022be8                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022c14       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022c26        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022c28       0x38 hw/diskphys/ata.32
                0x00000000c0022c28                vtable for ATA
 .rodata.str1.1
                0x00000000c0022c60        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022c6d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022c70       0x38 hw/diskphys/atapi.32
                0x00000000c0022c70                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022ca8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022d24       0x38 hw/diskphys/sata.32
                0x00000000c0022d24                vtable for SATA
 .rodata.str1.1
                0x00000000c0022d5c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0022e46        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0022e48       0x38 hw/diskphys/satapi.32
                0x00000000c0022e48                vtable for SATAPI
 .rodata        0x00000000c0022e80        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0022e88       0x2c hw/intctrl/apic.32
                0x00000000c0022e88                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0022eb4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0022ecf        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022ed0       0x30 hw/timer/apictimer.32
                0x00000000c0022ed0                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0022f00       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022f1d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0022f20       0x30 hw/timer/pit.32
                0x00000000c0022f20                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0022f50      0x7b1
 *(.data)
 .data          0x00000000c0022f50        0x0 crti.32
 .data          0x00000000c0022f50        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0022f50                __dso_handle
 .data          0x00000000c0022f54        0x0 acpica/utclib.32
 .data          0x00000000c0022f54        0x0 core/malloc.32
 .data          0x00000000c0022f54        0x0 libk/ctype.32
 .data          0x00000000c0022f54        0x0 libk/string.32
 .data          0x00000000c0022f54        0x0 fs/fat/diskio.32
 .data          0x00000000c0022f54        0x0 fs/fat/ff.32
 .data          0x00000000c0022f54        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022f54        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022f54        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0022f54        0x0 core/computer.32
 .data          0x00000000c0022f54        0x0 core/gdt.32
 .data          0x00000000c0022f54        0x0 core/idle.32
 .data          0x00000000c0022f54        0x0 core/idt.32
 .data          0x00000000c0022f54        0x4 core/kheap.32
 .data          0x00000000c0022f58        0x0 core/main.32
 .data          0x00000000c0022f58        0x4 core/physmgr.32
                0x00000000c0022f58                Phys::bitmap
 .data          0x00000000c0022f5c        0x0 core/pipe.32
 *fill*         0x00000000c0022f5c        0x4 
 .data          0x00000000c0022f60       0x60 core/terminal.32
                0x00000000c0022f60                VgaText::hiddenOut
                0x00000000c0022f80                ansiToVGAMappings
 .data          0x00000000c0022fc0        0x0 core/tss.32
 .data          0x00000000c0022fc0        0x4 core/unixfile.32
                0x00000000c0022fc0                UnixFile::nextFd
 .data          0x00000000c0022fc4       0x15 core/virtmgr.32
                0x00000000c0022fc4                Virt::pageAllocPtr
                0x00000000c0022fc8                Virt::bitmap
                0x00000000c0022fcc                Virt::swapfileSectorsPerPage
                0x00000000c0022fd0                Virt::swapfileLength
                0x00000000c0022fd4                Virt::swapfileSector
                0x00000000c0022fd8                Virt::swapfileDrive
 *fill*         0x00000000c0022fd9        0x3 
 .data          0x00000000c0022fdc        0x4 coreobjs/c++.32
                0x00000000c0022fdc                __stack_chk_guard
 .data          0x00000000c0022fe0        0x0 dbg/kconsole.32
 .data          0x00000000c0022fe0       0x28 dbg/usban.32
                0x00000000c0022fe0                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023008        0x0 fs/symlink.32
 .data          0x00000000c0023008        0x0 fs/vfs.32
 .data          0x00000000c0023008        0x0 hal/bus.32
 .data          0x00000000c0023008        0x0 hal/buzzer.32
 .data          0x00000000c0023008        0x0 hal/clock.32
 .data          0x00000000c0023008        0x0 hal/device.32
 .data          0x00000000c0023008        0x0 hal/diskctrl.32
 .data          0x00000000c0023008        0x0 hal/diskphys.32
 .data          0x00000000c0023008        0x0 hal/fpu.32
 .data          0x00000000c0023008        0x0 hal/intctrl.32
 .data          0x00000000c0023008        0x0 hal/keybrd.32
 .data          0x00000000c0023008        0x0 hal/logidisk.32
 .data          0x00000000c0023008        0x0 hal/mouse.32
 .data          0x00000000c0023008        0x0 hal/nic.32
 .data          0x00000000c0023008        0x0 hal/partition.32
 .data          0x00000000c0023008        0x0 hal/serial.32
 .data          0x00000000c0023008        0x0 hal/timer.32
 .data          0x00000000c0023008        0x0 hal/vcache.32
 .data          0x00000000c0023008        0x0 hal/video.32
 .data          0x00000000c0023008       0x10 hw/acpi.32
                0x00000000c0023008                legacyIRQRemaps
 .data          0x00000000c0023018        0x4 hw/cpu.32
                0x00000000c0023018                lastCode
 .data          0x00000000c002301c        0x0 krnl/atexit.32
 *fill*         0x00000000c002301c        0x4 
 .data          0x00000000c0023020      0x142 krnl/bootmsg.32
                0x00000000c0023020                KiSplashScreen
 .data          0x00000000c0023162        0x0 krnl/compat.32
 *fill*         0x00000000c0023162       0x1e 
 .data          0x00000000c0023180       0x4d krnl/env.32
                0x00000000c0023180                defaultSysEnv
 .data          0x00000000c00231cd        0x0 krnl/inlines.32
 .data          0x00000000c00231cd        0x0 krnl/panic.32
 .data          0x00000000c00231cd        0x0 krnl/powctrl.32
 .data          0x00000000c00231cd        0x0 krnl/random.32
 .data          0x00000000c00231cd        0x0 krnl/resolve.32
 *fill*         0x00000000c00231cd       0x13 
 .data          0x00000000c00231e0       0x4c krnl/signal.32
                0x00000000c00231e0                KiDefaultSignalHandlers
 *fill*         0x00000000c002322c       0x14 
 .data          0x00000000c0023240       0xf0 krnl/syscalls.32
                0x00000000c0023240                systemCallHandlers
 .data          0x00000000c0023330        0x0 net/ethernet.32
 *fill*         0x00000000c0023330       0x10 
 .data          0x00000000c0023340      0x100 reg/cm.32
                0x00000000c0023340                CmComponents
 .data          0x00000000c0023440        0x0 reg/registry.32
 .data          0x00000000c0023440        0x0 sys/eject.32
 .data          0x00000000c0023440        0x0 sys/exit.32
 .data          0x00000000c0023440        0x0 sys/getcwd.32
 .data          0x00000000c0023440        0x0 sys/getpid.32
 .data          0x00000000c0023440        0x0 sys/getramdata.32
 .data          0x00000000c0023440        0x0 sys/getvgaptr.32
 .data          0x00000000c0023440        0x0 sys/kill.32
 .data          0x00000000c0023440        0x0 sys/loaddll.32
 .data          0x00000000c0023440        0x0 sys/read.32
 .data          0x00000000c0023440        0x0 sys/registersignal.32
 .data          0x00000000c0023440        0x0 sys/registry.32
 .data          0x00000000c0023440        0x0 sys/sbrk.32
 .data          0x00000000c0023440        0x0 sys/setcwd.32
 .data          0x00000000c0023440        0x0 sys/settime.32
 .data          0x00000000c0023440        0x0 sys/timezone.32
 .data          0x00000000c0023440        0x0 sys/truncate.32
 .data          0x00000000c0023440        0x0 sys/write.32
 .data          0x00000000c0023440        0x0 sys/wsbe.32
 .data          0x00000000c0023440        0x0 sys/yield.32
 .data          0x00000000c0023440        0x0 thr/elf.32
 .data          0x00000000c0023440        0x4 thr/prcssthr.32
                0x00000000c0023440                Thr::nextPID
 .data          0x00000000c0023444        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023444       0x1c 
 .data          0x00000000c0023460      0x2a0 arch/i386/hal.32
                0x00000000c0023460                exceptionNames
 .data          0x00000000c0023700        0x0 arch/i386/pic.32
 .data          0x00000000c0023700        0x0 arch/i386/rtc.32
 .data          0x00000000c0023700        0x0 arch/i386/vga.32
 .data          0x00000000c0023700        0x0 fs/fat/vfslink.32
 .data          0x00000000c0023700        0x0 fs/iso9660/helper.32
 .data          0x00000000c0023700        0x1 fs/iso9660/vfslink.32
                0x00000000c0023700                recentDriveletter
 .data          0x00000000c0023701        0x0 hal/sound/sndcard.32
 .data          0x00000000c0023701        0x0 hal/sound/sndport.32
 .data          0x00000000c0023701        0x0 hw/bus/isa.32
 .data          0x00000000c0023701        0x0 hw/bus/pci.32
 .data          0x00000000c0023701        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0023701        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0023701        0x0 hw/diskphys/ata.32
 .data          0x00000000c0023701        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0023701        0x0 hw/diskphys/sata.32
 .data          0x00000000c0023701        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0023701        0x0 hw/intctrl/apic.32
 .data          0x00000000c0023701        0x0 hw/timer/apictimer.32
 .data          0x00000000c0023701        0x0 hw/timer/pit.32
 .data          0x00000000c0023701        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0023701        0x0 crtn.32
 .data          0x00000000c0023701        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0023701        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0023701        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0023701        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0023704        0x0
 .got           0x00000000c0023704        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0023704        0x0
 .got.plt       0x00000000c0023704        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0023704        0x0
 .igot.plt      0x00000000c0023704        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0023704        0x0
 .tm_clone_table
                0x00000000c0023704        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0023704        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0023701      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0023701        0x3 
 .eh_frame      0x00000000c0023704        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0023704        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0023704       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002375c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002379c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0023808       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5107
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0      0x444 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026000                KiNewlyCreatedSymlinks
                0x00000000c0026400                KiBaseSymlinkID
 .bss           0x00000000c0026404        0x4 fs/vfs.32
                0x00000000c0026404                installedFilesystems
 .bss           0x00000000c0026408        0x0 hal/bus.32
 .bss           0x00000000c0026408        0x0 hal/buzzer.32
 .bss           0x00000000c0026408        0x8 hal/clock.32
                0x00000000c0026408                User::dstOn
                0x00000000c0026409                User::timezoneHalfHourOffset
                0x00000000c002640c                User::timezoneHourOffset
 .bss           0x00000000c0026410        0x0 hal/device.32
 .bss           0x00000000c0026410        0x0 hal/diskctrl.32
 .bss           0x00000000c0026410        0x0 hal/diskphys.32
 .bss           0x00000000c0026410        0x0 hal/fpu.32
 *fill*         0x00000000c0026410       0x10 
 .bss           0x00000000c0026420     0x2000 hal/intctrl.32
                0x00000000c0026420                INT_contexts
                0x00000000c0027420                INT_handlers
 .bss           0x00000000c0028420      0x429 hal/keybrd.32
                0x00000000c0028420                keyboardWaitingTaskList
                0x00000000c0028424                keyboardSetupYet
                0x00000000c0028428                guiKeyboardHandler
                0x00000000c0028440                keystates
 *fill*         0x00000000c0028849       0x17 
 .bss           0x00000000c0028860       0x88 hal/logidisk.32
                0x00000000c0028860                diskAssignments
                0x00000000c0028880                disks
 .bss           0x00000000c00288e8        0x4 hal/mouse.32
                0x00000000c00288e8                guiMouseHandler
 .bss           0x00000000c00288ec        0x0 hal/nic.32
 .bss           0x00000000c00288ec        0x0 hal/partition.32
 .bss           0x00000000c00288ec        0x0 hal/serial.32
 .bss           0x00000000c00288ec        0x4 hal/timer.32
                0x00000000c00288ec                milliTenthsSinceBoot
 .bss           0x00000000c00288f0        0x0 hal/vcache.32
 .bss           0x00000000c00288f0        0x4 hal/video.32
                0x00000000c00288f0                screen
 *fill*         0x00000000c00288f4        0xc 
 .bss           0x00000000c0028900      0x480 hw/acpi.32
                0x00000000c0028900                systemSleepFunction
                0x00000000c0028904                systemResetFunction
                0x00000000c0028908                systemShutdownFunction
                0x00000000c002890c                nextACPITable
                0x00000000c0028920                acpiTables
                0x00000000c0028b20                usingXSDT
                0x00000000c0028b24                MADTpointer
                0x00000000c0028b28                RSDTpointer
                0x00000000c0028b2c                RSDPpointer
                0x00000000c0028b30                nextAPICNMI
                0x00000000c0028b40                apicNMIInfo
                0x00000000c0028bc0                legacyIRQFlags
                0x00000000c0028be0                ioapicDiscoveryNumber
                0x00000000c0028c00                ioapicFoundInMADT
                0x00000000c0028c20                ioapicAddresses
                0x00000000c0028ca0                ioapicGSIBase
                0x00000000c0028d20                processorDiscoveryNumber
                0x00000000c0028d40                matchingAPICID
                0x00000000c0028d60                processorID
 .bss           0x00000000c0028d80       0x10 hw/cpu.32
                0x00000000c0028d80                lastD
                0x00000000c0028d84                lastC
                0x00000000c0028d88                lastB
                0x00000000c0028d8c                lastA
 *fill*         0x00000000c0028d90       0x10 
 .bss           0x00000000c0028da0       0xe0 krnl/atexit.32
                0x00000000c0028da0                KiNextAtexitHandler
                0x00000000c0028dc0                KiAtexitContexts
                0x00000000c0028e20                KiAtexitHandlers
 .bss           0x00000000c0028e80        0x0 krnl/bootmsg.32
 .bss           0x00000000c0028e80        0x0 krnl/compat.32
 .bss           0x00000000c0028e80        0x8 krnl/env.32
                0x00000000c0028e80                KeUserEnv
                0x00000000c0028e84                KeSystemEnv
 .bss           0x00000000c0028e88        0x0 krnl/inlines.32
 .bss           0x00000000c0028e88        0x1 krnl/panic.32
                0x00000000c0028e88                KeIsKernelInPanic
 *fill*         0x00000000c0028e89       0x17 
 .bss           0x00000000c0028ea0       0x48 krnl/powctrl.32
                0x00000000c0028ea0                powCtrlOnBattery
                0x00000000c0028ec0                currentPowerSettings
                0x00000000c0028ee4                secondsSinceLastUserIO
 .bss           0x00000000c0028ee8        0x8 krnl/random.32
                0x00000000c0028ee8                kiRandSeed
 .bss           0x00000000c0028ef0        0x0 krnl/resolve.32
 .bss           0x00000000c0028ef0        0x0 krnl/signal.32
 .bss           0x00000000c0028ef0        0x0 krnl/syscalls.32
 .bss           0x00000000c0028ef0        0x0 net/ethernet.32
 .bss           0x00000000c0028ef0        0x4 reg/cm.32
 .bss           0x00000000c0028ef4        0x0 reg/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/eject.32
 .bss           0x00000000c0028ef4        0x0 sys/exit.32
 .bss           0x00000000c0028ef4        0x0 sys/getcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/getpid.32
 .bss           0x00000000c0028ef4        0x0 sys/getramdata.32
 .bss           0x00000000c0028ef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c0028ef4        0x0 sys/kill.32
 .bss           0x00000000c0028ef4        0x0 sys/loaddll.32
 .bss           0x00000000c0028ef4        0x0 sys/read.32
 .bss           0x00000000c0028ef4        0x0 sys/registersignal.32
 .bss           0x00000000c0028ef4        0x0 sys/registry.32
 .bss           0x00000000c0028ef4        0x0 sys/sbrk.32
 .bss           0x00000000c0028ef4        0x0 sys/setcwd.32
 .bss           0x00000000c0028ef4        0x0 sys/settime.32
 .bss           0x00000000c0028ef4        0x0 sys/timezone.32
 .bss           0x00000000c0028ef4        0x0 sys/truncate.32
 .bss           0x00000000c0028ef4        0x0 sys/write.32
 .bss           0x00000000c0028ef4        0x0 sys/wsbe.32
 .bss           0x00000000c0028ef4        0x0 sys/yield.32
 *fill*         0x00000000c0028ef4        0xc 
 .bss           0x00000000c0028f00      0x7a4 thr/elf.32
                0x00000000c0028f00                Thr::driverLookupNext
                0x00000000c0028f20                Thr::driverLookupLen
                0x00000000c0029120                Thr::driverLookupAddr
                0x00000000c0029320                Thr::driverNameLookup
                0x00000000c0029520                Thr::kernelSymbols
                0x00000000c00295a0                Thr::kernelStringTable
                0x00000000c0029620                Thr::kernelSymbolTable
                0x00000000c00296a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00296a4        0x4 
 .bss           0x00000000c00296a8       0x68 thr/prcssthr.32
                0x00000000c00296a8                cleanerThread
                0x00000000c00296ac                weNeedTheCleanerToNotBlock
                0x00000000c00296b0                retValLockStuff
                0x00000000c00296b4                retValSchedLock
                0x00000000c00296b8                lockStuffLock
                0x00000000c00296bc                schedulerLock
                0x00000000c00296c0                taskSwitchesPostponedFlag
                0x00000000c00296c4                postponeTaskSwitchesCounter
                0x00000000c00296c8                irqDisableCounter
                0x00000000c00296cc                terminatedTaskList
                0x00000000c00296d8                sleepingTaskList
                0x00000000c00296e4                taskList
                0x00000000c00296f0                kernelProcess
 *fill*         0x00000000c0029710       0x10 
 .bss           0x00000000c0029720       0x40 vm86/vm8086.32
                0x00000000c0029720                Vm::vmRetV
                0x00000000c0029724                Vm::vmDone
                0x00000000c0029725                Vm::vmReady
                0x00000000c0029728                Vm::vm86Thread
                0x00000000c002972c                Vm::vmToHostCommsPtr
                0x00000000c0029740                Vm::vmToHostComms
 .bss           0x00000000c0029760       0x18 arch/i386/hal.32
                0x00000000c0029760                apic
                0x00000000c0029764                guiPanicHandler
                0x00000000c0029768                fpuOwner
                0x00000000c002976c                coproLoadFunc
                0x00000000c0029770                coproSaveFunc
                0x00000000c0029774                gpFaultIntercept
 .bss           0x00000000c0029778        0x0 arch/i386/pic.32
 .bss           0x00000000c0029778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002977a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002977a        0x6 
 .bss           0x00000000c0029780       0xf0 fs/fat/vfslink.32
                0x00000000c0029780                FAT::fats
                0x00000000c00297a0                FAT::vfsToFatRemaps
                0x00000000c0029820                fatToVFSRemaps
 .bss           0x00000000c0029870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0029870       0x10 
 .bss           0x00000000c0029880      0x820 fs/iso9660/vfslink.32
                0x00000000c0029880                iso9660Owner
                0x00000000c0029884                recentSector
                0x00000000c00298a0                recentBuffer
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002a0a0        0xd hw/bus/pci.32
                0x00000000c002a0a0                thePCI
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a0ad        0x3 
 .bss           0x00000000c002a0b0        0x8 hw/diskphys/ata.32
                0x00000000c002a0b0                ataSectorsWritten
                0x00000000c002a0b4                ataSectorsRead
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a0b8        0x8 
 .bss           0x00000000c002a0c0       0x41 hw/intctrl/apic.32
                0x00000000c002a0c0                noOfIOAPICs
                0x00000000c002a0e0                ioapics
                0x00000000c002a100                IOAPICsSetupYet
 .bss           0x00000000c002a101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a101        0x3 
 .bss           0x00000000c002a104        0x4 hw/timer/pit.32
                0x00000000c002a104                pitFreq
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a108        0x0 crtn.32
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002f20f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
