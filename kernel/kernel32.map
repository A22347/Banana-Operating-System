Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2027e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x254 dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f06                Dbg::logs(char*)
                0x00000000c0006f25                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f43                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f64                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000709a        0x2 
 .text          0x00000000c000709c      0x2d4 dbg/usban.32
                0x00000000c000709c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007108                __ubsan_handle_type_mismatch_v1
                0x00000000c00071e4                __ubsan_handle_pointer_overflow
                0x00000000c0007210                __ubsan_handle_out_of_bounds
                0x00000000c000723c                __ubsan_handle_add_overflow
                0x00000000c0007268                __ubsan_handle_load_invalid_value
                0x00000000c0007294                __ubsan_handle_divrem_overflow
                0x00000000c00072c0                __ubsan_handle_mul_overflow
                0x00000000c00072ec                __ubsan_handle_sub_overflow
                0x00000000c0007318                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007344                __ubsan_handle_negate_overflow
 .text          0x00000000c0007370      0x814 fs/symlink.32
                0x00000000c00074bf                KiDeinitialiseSymlinks(void*)
                0x00000000c0007552                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075d5                KeInitialiseSymlinks()
                0x00000000c0007737                KiIsSymlinkRegistered(char const*)
                0x00000000c00078a1                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a48                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b84      0xd88 fs/vfs.32
                0x00000000c0007b84                File::read(unsigned long long, void*, int*)
                0x00000000c0007bdc                File::write(unsigned long long, void*, int*)
                0x00000000c0007c34                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cba                File::isAtty()
                0x00000000c0007cbe                Directory::isAtty()
                0x00000000c0007cc2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cc8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cce                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cf8                File::~File()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d46                Directory::~Directory()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007da2                Filesystem::~Filesystem()
                0x00000000c0007dc6                Fs::getcwd(Process*, char*, int)
                0x00000000c0007df0                Fs::initVFS()
                0x00000000c0007e1a                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008150                File::open(FileOpenMode)
                0x00000000c00081ae                File::close()
                0x00000000c000820e                File::seek(unsigned long long)
                0x00000000c0008264                File::truncate(unsigned long long)
                0x00000000c00082ba                File::tell(unsigned long long*)
                0x00000000c000830a                File::rewind()
                0x00000000c000831e                File::unlink()
                0x00000000c000836a                File::rename(char const*)
                0x00000000c00083b8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0008414                File::exists()
                0x00000000c0008452                File::stat(unsigned long long*, bool*)
                0x00000000c00084b3                Fs::setcwd(Process*, char*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c00086da                Directory::open()
                0x00000000c0008736                Directory::close()
                0x00000000c0008796                Directory::unlink()
                0x00000000c00087e2                Directory::rename(char const*)
                0x00000000c0008830                Directory::exists()
                0x00000000c000886e                Directory::read(dirent*)
                0x00000000c00088ba                Directory::create()
                0x00000000c0008906                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000890c       0x86 hal/bus.32
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008968                Bus::~Bus()
 .text          0x00000000c0008992       0x99 hal/buzzer.32
                0x00000000c0008992                KeBeepThread(void*)
                0x00000000c00089d2                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a2b        0x1 
 .text          0x00000000c0008a2c      0x513 hal/clock.32
                0x00000000c0008a2c                KeLoadClockSettings()
                0x00000000c0008b32                Clock::Clock(char const*)
                0x00000000c0008b32                Clock::Clock(char const*)
                0x00000000c0008b68                Clock::~Clock()
                0x00000000c0008b68                Clock::~Clock()
                0x00000000c0008b8c                Clock::~Clock()
                0x00000000c0008bb6                Clock::timeInSecondsLocal()
                0x00000000c0008bfe                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0008c57                KeDatetimeToSeconds(datetime_t)
                0x00000000c0008d76                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0008dd6                KeSecondsToDatetime(unsigned long long)
                0x00000000c0008f1a                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0008f3f        0x1 
 .text          0x00000000c0008f40      0x47a hal/device.32
                0x00000000c0008f40                Device::hibernate()
                0x00000000c0008f42                Device::wake()
                0x00000000c0008f44                Device::detect()
                0x00000000c0008f46                Device::disableLegacy()
                0x00000000c0008f48                Device::powerSaving(PowerSavingLevel)
                0x00000000c0008f4a                DriverlessDevice::close(int, int, void*)
                0x00000000c0008f4e                DriverlessDevice::detect()
                0x00000000c0008f50                DriverlessDevice::open(int, int, void*)
                0x00000000c0008f64                Device::~Device()
                0x00000000c0008f64                Device::~Device()
                0x00000000c0008f72                Device::~Device()
                0x00000000c0008f9a                Device::findAndLoadDriver()
                0x00000000c0008fa8                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0008fce                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000900e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009038                Device::getParent()
                0x00000000c0009044                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009062                Device::addChild(Device*)
                0x00000000c00090a6                Device::removeAllChildren()
                0x00000000c00090ec                Device::hibernateAll()
                0x00000000c000911c                Device::wakeAll()
                0x00000000c000914c                Device::detectAll()
                0x00000000c000917c                Device::disableLegacyAll()
                0x00000000c000917e                Device::loadDriversForAll()
                0x00000000c0009180                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00091b6                Device::setName(char const*)
                0x00000000c00091c4                Device::Device(char const*)
                0x00000000c00091c4                Device::Device(char const*)
                0x00000000c00092c0                Device::getName()
                0x00000000c00092ca                Device::closeAll()
                0x00000000c0009316                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009316                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000934c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009390                getDevicesOfType(DeviceType)
 *fill*         0x00000000c00093ba        0x2 
 .text          0x00000000c00093bc       0x86 hal/diskctrl.32
                0x00000000c00093bc                HardDiskController::HardDiskController(char const*)
                0x00000000c00093bc                HardDiskController::HardDiskController(char const*)
                0x00000000c00093f4                HardDiskController::~HardDiskController()
                0x00000000c00093f4                HardDiskController::~HardDiskController()
                0x00000000c0009418                HardDiskController::~HardDiskController()
 .text          0x00000000c0009442       0xe2 hal/diskphys.32
                0x00000000c0009442                PhysicalDisk::eject()
                0x00000000c0009446                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009446                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00094ae                PhysicalDisk::startCache()
                0x00000000c00094d6                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094d6                PhysicalDisk::~PhysicalDisk()
                0x00000000c00094fa                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009524        0x0 hal/fpu.32
 .text          0x00000000c0009524        0x0 hal/intctrl.32
 .text          0x00000000c0009524      0x874 hal/keybrd.32
                0x00000000c0009524                startGUI(void*)
                0x00000000c0009589                startGUIVESA(void*)
                0x00000000c00095ee                sendKeyToTerminal(unsigned char)
                0x00000000c00096c4                sendKeyboardToken(KeyboardToken)
                0x00000000c0009b80                clearInternalKeybuffer(VgaText*)
                0x00000000c0009bb5                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0009d0e                Keyboard::Keyboard(char const*)
                0x00000000c0009d0e                Keyboard::Keyboard(char const*)
                0x00000000c0009d4a                Keyboard::~Keyboard()
                0x00000000c0009d4a                Keyboard::~Keyboard()
                0x00000000c0009d6e                Keyboard::~Keyboard()
 .text          0x00000000c0009d98      0x3f8 hal/logidisk.32
                0x00000000c0009d98                LogicalDisk::close(int, int, void*)
                0x00000000c0009d9c                LogicalDisk::~LogicalDisk()
                0x00000000c0009d9c                LogicalDisk::~LogicalDisk()
                0x00000000c0009dc0                LogicalDisk::~LogicalDisk()
                0x00000000c0009dea                LogicalDisk::open(int, int, void*)
                0x00000000c0009dfe                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0009e36                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0009e7c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009e7c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009f3c                LogicalDisk::assignDriveLetter()
                0x00000000c0009ff6                LogicalDisk::mount()
                0x00000000c000a03e                LogicalDisk::unmount()
                0x00000000c000a04e                LogicalDisk::eject()
                0x00000000c000a062                LogicalDisk::unassignDriveLetter()
                0x00000000c000a0b8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000a124                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000a190       0x86 hal/mouse.32
                0x00000000c000a190                Mouse::Mouse(char const*)
                0x00000000c000a190                Mouse::Mouse(char const*)
                0x00000000c000a1c8                Mouse::~Mouse()
                0x00000000c000a1c8                Mouse::~Mouse()
                0x00000000c000a1ec                Mouse::~Mouse()
 .text          0x00000000c000a216       0x90 hal/nic.32
                0x00000000c000a216                NIC::getMAC()
                0x00000000c000a21c                NIC::write(int, unsigned char*, int*)
                0x00000000c000a222                NIC::NIC(char const*)
                0x00000000c000a222                NIC::NIC(char const*)
                0x00000000c000a258                NIC::~NIC()
                0x00000000c000a258                NIC::~NIC()
                0x00000000c000a27c                NIC::~NIC()
 .text          0x00000000c000a2a6      0x33b hal/partition.32
                0x00000000c000a2a6                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a34e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000a5e1        0x3 
 .text          0x00000000c000a5e4       0x86 hal/serial.32
                0x00000000c000a5e4                Serial::Serial(char const*)
                0x00000000c000a5e4                Serial::Serial(char const*)
                0x00000000c000a61c                Serial::~Serial()
                0x00000000c000a61c                Serial::~Serial()
                0x00000000c000a640                Serial::~Serial()
 *fill*         0x00000000c000a66a        0x2 
 .text          0x00000000c000a66c      0x1ec hal/timer.32
                0x00000000c000a66c                Timer::Timer(char const*)
                0x00000000c000a66c                Timer::Timer(char const*)
                0x00000000c000a6a4                Timer::~Timer()
                0x00000000c000a6a4                Timer::~Timer()
                0x00000000c000a6c8                Timer::~Timer()
                0x00000000c000a6f2                Timer::read()
                0x00000000c000a6fd                setupTimer(int)
                0x00000000c000a738                timerHandler(unsigned int)
 .text          0x00000000c000a858      0x468 hal/vcache.32
                0x00000000c000a858                VCache::VCache(PhysicalDisk*)
                0x00000000c000a858                VCache::VCache(PhysicalDisk*)
                0x00000000c000a9c8                VCache::invalidateReadBuffer()
                0x00000000c000a9d8                VCache::writeWriteBuffer()
                0x00000000c000aa24                VCache::~VCache()
                0x00000000c000aa24                VCache::~VCache()
                0x00000000c000aa7c                VCache::~VCache()
                0x00000000c000aaa4                VCache::write(unsigned long long, int, void*)
                0x00000000c000aba6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000acc0      0x70e hal/video.32
                0x00000000c000acc0                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ad0c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ad7c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000adfa                Video::clearScreen(unsigned int)
                0x00000000c000ae2e                Video::putpixel(int, int, unsigned int)
                0x00000000c000ae3c                Video::readPixelApprox(int, int)
                0x00000000c000ae50                Video::Video(char const*)
                0x00000000c000ae50                Video::Video(char const*)
                0x00000000c000ae86                Video::~Video()
                0x00000000c000ae86                Video::~Video()
                0x00000000c000aeaa                Video::~Video()
                0x00000000c000aed4                Video::isMonochrome()
                0x00000000c000aee0                Video::getWidth()
                0x00000000c000aeec                Video::getHeight()
                0x00000000c000aef8                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000afb4                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000b35e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000b3ce        0x2 
 .text          0x00000000c000b3d0     0x114f hw/acpi.32
                0x00000000c000b3d0                ACPI::close(int, int, void*)
                0x00000000c000b3d8                loadACPITables(unsigned char*)
                0x00000000c000b638                findRSDT(unsigned char*)
                0x00000000c000b784                findDataTable(unsigned char*, char*)
                0x00000000c000b7f8                scanMADT()
                0x00000000c000bc50                ACPI::ACPI()
                0x00000000c000bc50                ACPI::ACPI()
                0x00000000c000bca4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000bda0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000be6c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000be74                ACPI::detectPCI()
                0x00000000c000c080                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000c098                ACPI::open(int, int, void*)
 .text          0x00000000c000c51f       0xb6 krnl/atexit.32
                0x00000000c000c51f                KeInitialiseAtexit()
                0x00000000c000c53e                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000c572                KeExecuteAtexit()
 .text          0x00000000c000c5d5       0x9f krnl/bootmsg.32
                0x00000000c000c5d5                KeDisplaySplashScreen()
                0x00000000c000c604                KeSetBootMessage(char const*)
 .text          0x00000000c000c674       0x5f krnl/c++.32
                0x00000000c000c674                __cxa_atexit
                0x00000000c000c677                __cxa_finalize
                0x00000000c000c678                __stack_chk_fail
                0x00000000c000c6ae                __cxa_pure_virtual
                0x00000000c000c6bf                operator new[](unsigned long)
                0x00000000c000c6c4                operator delete(void*, unsigned long)
                0x00000000c000c6c9                operator delete[](void*)
                0x00000000c000c6ce                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000c6d3        0x1 
 .text          0x00000000c000c6d4       0x44 krnl/cdefs.32
                0x00000000c000c6d4                CUnlockScheduler
                0x00000000c000c6ec                CLockScheduler
                0x00000000c000c6fc                CPrintf
 .text          0x00000000c000c718      0xd56 krnl/cm.32
                0x00000000c000c718                CmOpen(char const*)
                0x00000000c000c836                CmClose(Reghive_Tag*)
                0x00000000c000c84c                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000c888                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000c8ff                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000c93e                CmGetNext(Reghive_Tag*, int)
                0x00000000c000c970                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000c9ac                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000c9d4                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000c9f5                CmExpand(Reghive_Tag*, int)
                0x00000000c000ca70                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000caf6                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000cbea                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000cd26                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000cd87                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000cdb7                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000cdee                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000ce18                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000ce58                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000cefc                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000cf2a                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000d0c8                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000d115                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d18f                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000d1e2                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d2a6                zStrtok(char*, char const*)
                0x00000000c000d318                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000d399                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000d43c                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000d46e        0x2 
 .text          0x00000000c000d470       0x1d krnl/compat.32
                0x00000000c000d470                Krnl::handlePowerButton()
                0x00000000c000d480                Krnl::handleSleepButton()
 *fill*         0x00000000c000d48d        0x1 
 .text          0x00000000c000d48e      0x2c3 krnl/computer.32
                0x00000000c000d48e                Computer::close(int, int, void*)
                0x00000000c000d494                Computer::open(int, int, void*)
                0x00000000c000d57a                KeFirstTask()
                0x00000000c000d69c                Computer::Computer()
                0x00000000c000d69c                Computer::Computer()
                0x00000000c000d6e0                KePrepareShutdown()
                0x00000000c000d700                KeShutdown()
                0x00000000c000d724                KeSleep()
                0x00000000c000d730                KeRestart()
 .text          0x00000000c000d751       0x2b krnl/crc32.32
                0x00000000c000d751                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000d77c      0x5bf krnl/env.32
                0x00000000c000d77c                EnvVarContainer::getEnv(char const*)
                0x00000000c000d7ba                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000d87c                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000d87e                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000daa2                EnvVarContainer::__loadSystem()
                0x00000000c000dabc                EnvVarContainer::__loadUser()
                0x00000000c000dabe                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000dabe                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000dae0                EnvVarContainer::~EnvVarContainer()
                0x00000000c000dae0                EnvVarContainer::~EnvVarContainer()
                0x00000000c000db10                KeGetEnv(Process*, char const*)
                0x00000000c000db75                KeSetEnvSystem(char const*, char const*)
                0x00000000c000db8f                KeSetEnvUser(char const*, char const*)
                0x00000000c000dbae                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000dbc1                KeDeleteEnvSystem(char const*)
                0x00000000c000dbc2                KeDeleteEnvUser(char const*)
                0x00000000c000dbc3                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000dbc4                KeNewProcessEnv(Process*)
                0x00000000c000dbe6                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000dc32                KeLoadSystemEnv()
                0x00000000c000dc60                KeLoadUserEnv()
                0x00000000c000dc86                KeFlushEnv()
                0x00000000c000dc87                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000dca7                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000dd3b        0x1 
 .text          0x00000000c000dd3c      0x371 krnl/fault.32
                0x00000000c000dd3c                KeSetupInterrupts()
                0x00000000c000ddb4                int_handler
                0x00000000c000def4                KeDisplayProgramFault(char const*)
                0x00000000c000df44                KeGeneralProtectionFault(void*, void*)
                0x00000000c000df98                KePageFault(void*, void*)
                0x00000000c000dffc                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e00c                KeOtherFault(void*, void*)
                0x00000000c000e040                KeOpcodeFault(void*, void*)
                0x00000000c000e094                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000e0ad        0x1 
 .text          0x00000000c000e0ae      0x1db krnl/gdt.32
                0x00000000c000e0ae                GDTEntry::setBase(unsigned int)
                0x00000000c000e0ca                GDTEntry::setLimit(unsigned int)
                0x00000000c000e0e8                GDT::GDT()
                0x00000000c000e0e8                GDT::GDT()
                0x00000000c000e0fe                GDT::addEntry(GDTEntry)
                0x00000000c000e120                GDT::getNumberOfEntries()
                0x00000000c000e128                GDT::flush()
                0x00000000c000e14a                GDT::setup()
 .text          0x00000000c000e289       0x20 krnl/idle.32
                0x00000000c000e289                idleFunction(void*)
 *fill*         0x00000000c000e2a9        0x3 
 .text          0x00000000c000e2ac      0x46c krnl/idt.32
                0x00000000c000e2ac                IDTEntry::IDTEntry(bool)
                0x00000000c000e2ac                IDTEntry::IDTEntry(bool)
                0x00000000c000e326                IDTEntry::setOffset(unsigned int)
                0x00000000c000e33c                IDT::IDT()
                0x00000000c000e33c                IDT::IDT()
                0x00000000c000e33e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000e346                IDT::addEntry(IDTEntry, int)
                0x00000000c000e360                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000e398                IDT::flush()
                0x00000000c000e3b2                IDT::setup()
 .text          0x00000000c000e718       0x9a krnl/inlines.32
                0x00000000c000e718                CPU::current()
                0x00000000c000e724                operator new(unsigned long)
                0x00000000c000e729                operator delete(void*)
                0x00000000c000e72e                disableIRQs()
                0x00000000c000e730                enableIRQs()
                0x00000000c000e732                lockScheduler()
                0x00000000c000e73a                unlockScheduler()
                0x00000000c000e74c                lockStuff()
                0x00000000c000e75a                unlockStuff()
                0x00000000c000e797                Virt::getAKernelVAS()
                0x00000000c000e79d                __not_memcpy
 .text          0x00000000c000e7b2      0x207 krnl/kheap.32
                0x00000000c000e7b2                sbrk
                0x00000000c000e849                sbrk_thunk
                0x00000000c000e87f                mmap
                0x00000000c000e8dd                munmap
                0x00000000c000e8f2                liballoc_lock()
                0x00000000c000e900                liballoc_unlock()
                0x00000000c000e918                liballoc_alloc(int)
                0x00000000c000e930                liballoc_free(void*, int)
                0x00000000c000e94b                realloc
                0x00000000c000e95f                malloc
                0x00000000c000e96f                free
                0x00000000c000e97f                rfree
                0x00000000c000e98f                calloc
 *fill*         0x00000000c000e9b9        0x3 
 .text          0x00000000c000e9bc      0x1d3 krnl/mailbox.32
                0x00000000c000e9bc                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000ea1c                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000ea7c                KeMailboxCreate()
                0x00000000c000eab0                KeMailboxPost(Mailbox*, void*)
                0x00000000c000eb14                KeMailboxGet(Mailbox*, void**)
                0x00000000c000eb78                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000eb8f       0xfd krnl/main.32
                0x00000000c000eb8f                KeEntryPoint
 .text          0x00000000c000ec8c       0x1a krnl/mutex.32
                0x00000000c000ec8c                Mutex::Mutex()
                0x00000000c000ec8c                Mutex::Mutex()
 .text          0x00000000c000eca6        0xc krnl/panic.32
                0x00000000c000eca6                KePanic(char const*)
 .text          0x00000000c000ecb2      0x667 krnl/physmgr.32
                0x00000000c000ecb2                Phys::allocateDMA(unsigned long)
                0x00000000c000ed9a                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000edd5                Phys::setPageState(unsigned long, bool)
                0x00000000c000ee15                Phys::getPageState(unsigned long)
                0x00000000c000ee31                Phys::freePage(unsigned long)
                0x00000000c000ee9a                Phys::allocatePage()
                0x00000000c000ef78                Phys::allocateContiguousPages(int)
                0x00000000c000eff3                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000f02b                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000f319        0x1 
 .text          0x00000000c000f31a      0x275 krnl/pipe.32
                0x00000000c000f31a                Pipe::isAtty()
                0x00000000c000f31e                Pipe::~Pipe()
                0x00000000c000f31e                Pipe::~Pipe()
                0x00000000c000f342                Pipe::~Pipe()
                0x00000000c000f36a                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000f42a                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000f528                Pipe::Pipe(int)
                0x00000000c000f528                Pipe::Pipe(int)
 .text          0x00000000c000f58f      0x10b krnl/powctrl.32
                0x00000000c000f58f                KePowerThread(void*)
                0x00000000c000f5c0                KeChangePowerSettings(PowerSettings)
                0x00000000c000f5d6                KeUserIOReceived()
                0x00000000c000f5e1                KeHandlePowerButton()
                0x00000000c000f5f9                KeHandleSleepButton()
                0x00000000c000f611                KeSetupPowerManager()
 .text          0x00000000c000f69a       0x9d krnl/random.32
                0x00000000c000f69a                KeRand()
                0x00000000c000f6dc                KeSeedRand(unsigned int)
                0x00000000c000f705                KeInitRand()
 *fill*         0x00000000c000f737        0x1 
 .text          0x00000000c000f738      0x1bc krnl/resolve.32
                0x00000000c000f738                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c000f8f4      0x401 krnl/semaphore.32
                0x00000000c000f8f4                Semaphore::Semaphore(int)
                0x00000000c000f8f4                Semaphore::Semaphore(int)
                0x00000000c000f924                Semaphore::tryAcquire()
                0x00000000c000f9f8                Semaphore::assertLocked(char const*)
                0x00000000c000fa84                Semaphore::acquire(int)
                0x00000000c000fc28                Semaphore::acquire()
                0x00000000c000fc44                Semaphore::release()
 .text          0x00000000c000fcf5      0x322 krnl/signal.32
                0x00000000c000fcf5                KiSigKill(int)
                0x00000000c000fd09                KiDefaultSignalHandlerIgnore(int)
                0x00000000c000fd0a                KiDefaultSignalHandlerPause(int)
                0x00000000c000fd36                KiDefaultSignalHandlerResume(int)
                0x00000000c000fd62                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c000fd67                KeInitSignals()
                0x00000000c000fdb9                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c000fdef                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c000fe6c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c000ff63                KiCheckSignalZ
                0x00000000c000ffa5                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c000ffe0                KiFinishSignalZ
 .text          0x00000000c0010017      0xe77 krnl/syscalls.32
                0x00000000c0010017                SysSeekDir(regs*)
                0x00000000c001001c                SysTellDir(regs*)
                0x00000000c0010021                SysVerify(regs*)
                0x00000000c001002b                SysGetArgc(regs*)
                0x00000000c001003f                SysTTYName(regs*)
                0x00000000c0010047                SysFormatDisk(regs*)
                0x00000000c00100be                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010112                SysGetDiskVolumeLabel(regs*)
                0x00000000c001016b                SysRealpath(regs*)
                0x00000000c00101af                SysReadDir(regs*)
                0x00000000c001022f                SysIsATTY(regs*)
                0x00000000c0010289                SysSeek(regs*)
                0x00000000c00102e0                SysTell(regs*)
                0x00000000c001034d                SysSize(regs*)
                0x00000000c00103c7                SysSizeFromFilename(regs*)
                0x00000000c00104f8                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0010629                SysClose(regs*)
                0x00000000c00106b0                SysOpenDir(regs*)
                0x00000000c001072d                SysMakeDir(regs*)
                0x00000000c001079b                SysCloseDir(regs*)
                0x00000000c0010816                SysWait(regs*)
                0x00000000c0010837                SysNotImpl(regs*)
                0x00000000c0010852                SysPanic(regs*)
                0x00000000c001086d                SysRmdir(regs*)
                0x00000000c00108d2                SysUnlink(regs*)
                0x00000000c0010937                SysGetArgv(regs*)
                0x00000000c0010984                SysUSleep(regs*)
                0x00000000c00109ad                SysSpawn(regs*)
                0x00000000c0010a20                SysGetEnv(regs*)
                0x00000000c0010ad1                SysSetFatAttrib(regs*)
                0x00000000c0010b44                SysShutdown(regs*)
                0x00000000c0010ba1                SysPipe(regs*)
                0x00000000c0010be6                SysGetUnixTime(regs*)
                0x00000000c0010bfa                string_ends_with(char const*, char const*)
                0x00000000c0010c42                SysOpen(regs*)
                0x00000000c0010e39                KeSystemCall(regs*, void*)
 .text          0x00000000c0010e8e      0xab3 krnl/terminal.32
                0x00000000c0010e8e                VgaText::isAtty()
                0x00000000c0010e92                VgaText::~VgaText()
                0x00000000c0010e92                VgaText::~VgaText()
                0x00000000c0010eb6                VgaText::~VgaText()
                0x00000000c0010ee0                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0010f00                setTerminalScrollLock(bool)
                0x00000000c0010f01                doTerminalCycle()
                0x00000000c0010f02                addToTerminalCycle(VgaText*)
                0x00000000c0010f03                scrollTerminalScrollLock(int)
                0x00000000c0010f04                VgaText::updateTitle()
                0x00000000c0010f06                VgaText::load()
                0x00000000c0010f08                VgaText::updateCursor()
                0x00000000c0010f1e                VgaText::doANSI_SGR(int)
                0x00000000c0010f92                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0010fa2                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0010fb2                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0010fd2                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0010fde                VgaText::setTitleColour(VgaColour)
                0x00000000c0010fea                VgaText::setTitle(char*)
                0x00000000c0010fec                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0010ffe                VgaText::scrollScreen()
                0x00000000c0011090                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00110a0                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0011130                VgaText::getCursorX()
                0x00000000c0011138                VgaText::getCursorY()
                0x00000000c0011140                VgaText::setCursor(int, int)
                0x00000000c0011157                setActiveTerminal(VgaText*)
                0x00000000c00111a2                VgaText::clearScreen()
                0x00000000c00111f0                VgaText::setCursorX(int)
                0x00000000c0011208                VgaText::setCursorY(int)
                0x00000000c0011220                VgaText::incrementCursor(bool)
                0x00000000c0011274                VgaText::decrementCursor(bool)
                0x00000000c0011296                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0011366                VgaText::putchar(char)
                0x00000000c001145e                VgaText::putx(unsigned int)
                0x00000000c00114a4                VgaText::puts(char const*)
                0x00000000c00114ca                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0011516                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0011664                VgaText::VgaText(char const*)
                0x00000000c0011664                VgaText::VgaText(char const*)
                0x00000000c00117b4                VgaText::receiveKey(unsigned char)
                0x00000000c0011940                VgaText::doUpdate()
 *fill*         0x00000000c0011941        0x3 
 .text          0x00000000c0011944      0x224 krnl/tss.32
                0x00000000c0011944                TSS::TSS()
                0x00000000c0011944                TSS::TSS()
                0x00000000c0011954                TSS::setESP(unsigned long)
                0x00000000c0011968                TSS::flush()
                0x00000000c0011988                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0011b68      0x513 krnl/unixfile.32
                0x00000000c0011b68                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0011bbe                ReservedFilename::isAtty()
                0x00000000c0011bda                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011c38                UnixFile::getFileDescriptor()
                0x00000000c0011c40                UnixFile::UnixFile(int)
                0x00000000c0011c40                UnixFile::UnixFile(int)
                0x00000000c0011df4                ReservedFilename::ReservedFilename(int)
                0x00000000c0011df4                ReservedFilename::ReservedFilename(int)
                0x00000000c0011e26                UnixFile::~UnixFile()
                0x00000000c0011e26                UnixFile::~UnixFile()
                0x00000000c0011ec2                UnixFile::~UnixFile()
                0x00000000c0011eea                ReservedFilename::~ReservedFilename()
                0x00000000c0011eea                ReservedFilename::~ReservedFilename()
                0x00000000c0011f0e                ReservedFilename::~ReservedFilename()
                0x00000000c0011f35                KeGetFileFromDescriptor(int)
 *fill*         0x00000000c001207b        0x1 
 .text          0x00000000c001207c     0x1348 krnl/virtmgr.32
                0x00000000c001207c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00120b6                Virt::getPageState(unsigned long)
                0x00000000c00120d9                Virt::allocateKernelVirtualPages(int)
                0x00000000c00121fe                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0012221                Virt::swapIDToSector(unsigned long)
                0x00000000c0012237                Virt::allocateSwapfilePage()
                0x00000000c00122b7                Virt::virtualMemorySetup()
                0x00000000c0012308                Virt::setupPageSwapping(int)
                0x00000000c001237a                VAS::setCPUSpecific(unsigned long)
                0x00000000c001237c                VAS::VAS(VAS*)
                0x00000000c001237c                VAS::VAS(VAS*)
                0x00000000c0012394                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00123c2                VAS::getPageTableEntry(unsigned long)
                0x00000000c00123e1                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001251e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0012542                VAS::virtualToPhysical(unsigned long)
                0x00000000c001255c                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c001259e                VAS::VAS()
                0x00000000c001259e                VAS::VAS()
                0x00000000c0012608                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0012628                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0012654                VAS::~VAS()
                0x00000000c0012654                VAS::~VAS()
                0x00000000c00127bc                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00128c0                VAS::allocatePages(int, int)
                0x00000000c00129a6                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c00129fe                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0012af4                VAS::VAS(bool)
                0x00000000c0012af4                VAS::VAS(bool)
                0x00000000c0012cdc                VAS::evict(unsigned long)
                0x00000000c0012de0                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c00130f0                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0013164                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0013190                VAS::scanForEviction()
                0x00000000c00132c9                mapVASFirstTime
 .text          0x00000000c00133c4       0x36 sys/eject.32
                0x00000000c00133c4                SysEject(regs*)
 .text          0x00000000c00133fa       0x18 sys/exit.32
                0x00000000c00133fa                SysExit(regs*)
 .text          0x00000000c0013412       0x1f sys/getcwd.32
                0x00000000c0013412                SysGetCwd(regs*)
 .text          0x00000000c0013431       0x26 sys/getpid.32
                0x00000000c0013431                SysGetPID(regs*)
 .text          0x00000000c0013457       0x21 sys/getramdata.32
                0x00000000c0013457                SysGetRAMData(regs*)
 .text          0x00000000c0013478       0x97 sys/getvgaptr.32
                0x00000000c0013478                SysGetVGAPtr(regs*)
 *fill*         0x00000000c001350f        0x1 
 .text          0x00000000c0013510       0xb9 sys/kill.32
                0x00000000c0013510                SysKill(regs*)
 .text          0x00000000c00135c9       0xa8 sys/loaddll.32
                0x00000000c00135c9                SysLoadDLL(regs*)
 .text          0x00000000c0013671       0x68 sys/read.32
                0x00000000c0013671                SysRead(regs*)
 .text          0x00000000c00136d9       0x29 sys/registersignal.32
                0x00000000c00136d9                SysRegisterSignal(regs*)
 .text          0x00000000c0013702      0x1cc sys/registry.32
                0x00000000c0013702                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013746                SysRegistryReadExtent(regs*)
                0x00000000c001378e                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00137a5                SysRegistryEnterDirectory(regs*)
                0x00000000c00137bc                SysRegistryGetNext(regs*)
                0x00000000c00137d3                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001380d                SysRegistryOpen(regs*)
                0x00000000c0013821                SysRegistryClose(regs*)
                0x00000000c0013838                SysRegistryEasyReadString(regs*)
                0x00000000c0013884                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c00138ce       0x55 sys/sbrk.32
                0x00000000c00138ce                SysSbrk(regs*)
 .text          0x00000000c0013923       0x1c sys/setcwd.32
                0x00000000c0013923                SysSetCwd(regs*)
 .text          0x00000000c001393f       0x96 sys/settime.32
                0x00000000c001393f                SysSetTime(regs*)
 .text          0x00000000c00139d5       0x73 sys/symlink.32
                0x00000000c00139d5                SysSymlink(regs*)
 .text          0x00000000c0013a48       0x3f sys/timezone.32
                0x00000000c0013a48                SysTimezone(regs*)
 .text          0x00000000c0013a87       0xfc sys/truncate.32
                0x00000000c0013a87                SysTruncate(regs*)
 .text          0x00000000c0013b83       0x68 sys/write.32
                0x00000000c0013b83                SysWrite(regs*)
 .text          0x00000000c0013beb       0x9d sys/wsbe.32
                0x00000000c0013beb                SysWsbe(regs*)
 .text          0x00000000c0013c88       0x28 sys/yield.32
                0x00000000c0013c88                SysYield(regs*)
 .text          0x00000000c0013cb0     0x120b thr/elf.32
                0x00000000c0013cb0                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0013f42                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014154                Thr::runtimeReferenceHelper()
                0x00000000c0014167                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00141b6                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014474                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014bad                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014bdf                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014c16                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014c30                Thr::loadDLL(char const*, bool)
                0x00000000c0014e82                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0014ebb       0x5a thr/exec.32
                0x00000000c0014ebb                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0014f15        0x3 
 .text          0x00000000c0014f18     0x11a5 thr/prcssthr.32
                0x00000000c0014f18                userModeEntryPoint(void*)
                0x00000000c0014f44                changeTSS
                0x00000000c0014f74                switchToThread(ThreadControlBlock*)
                0x00000000c0015024                Process::addArgs(char**)
                0x00000000c0015090                Process::Process(char const*, Process*, char**)
                0x00000000c0015090                Process::Process(char const*, Process*, char**)
                0x00000000c001529c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001529c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015470                taskStartupFunction
                0x00000000c001547c                KeDisablePreemption()
                0x00000000c00154a4                KeRestorePreemption()
                0x00000000c00154c4                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00155d0                Process::createUserThread()
                0x00000000c00155f0                setupMultitasking(void (*)())
                0x00000000c0015714                schedule()
                0x00000000c00157a8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00157d4                blockTask(TaskState)
                0x00000000c0015820                waitTask(int, int*, int)
                0x00000000c0015864                milliTenthSleepUntil(unsigned int)
                0x00000000c001590c                milliTenthSleep(unsigned int)
                0x00000000c0015920                sleep(unsigned int)
                0x00000000c001593c                taskReturned
                0x00000000c0015984                Thr::processFromPID(int)
                0x00000000c0015a34                unblockTask(ThreadControlBlock*)
                0x00000000c0015ae8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015dbc                cleanerTaskFunction(void*)
                0x00000000c0015ed4                terminateTask(int)
                0x00000000c0015ff0                Thr::terminateFromIRQ(int)
 .text          0x00000000c00160bd      0xd10 vm86/vm8086.32
                0x00000000c00160bd                Vm::inbv(unsigned short)
                0x00000000c00160d0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016106                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016116                Vm::getSegment(unsigned int)
                0x00000000c001611e                Vm::getOffset(unsigned int)
                0x00000000c0016123                Vm::mainloop2()
                0x00000000c001615d                Vm::mainVm8086Loop(void*)
                0x00000000c0016170                Vm::mainloop3(unsigned long)
                0x00000000c0016196                Vm::initialise8086()
                0x00000000c00161d9                Vm::resetConventionalMemory8086()
                0x00000000c00161da                Vm::finish8086()
                0x00000000c001623c                Vm::getOutput8086(unsigned char*)
                0x00000000c0016261                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001638e                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001659c                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016635                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016646                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016658                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016669                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001667e                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016694                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00166a9                Vm::faultHandler(regs*)
 *fill*         0x00000000c0016dcd        0x1 
 .text          0x00000000c0016dce     0x1ee7 arch/i386/hal.32
                0x00000000c0016dce                noCopro(unsigned long)
                0x00000000c0016dd0                CPU::close(int, int, void*)
                0x00000000c0016dd3                x86ReadCMOS(unsigned char)
                0x00000000c0016e27                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0016e87                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0016ea6                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0016ec3                AMD_K6_writeback(int, int, int)
                0x00000000c0016f83                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0017021                cpuidCheckEDX(unsigned int)
                0x00000000c001704e                cpuidCheckECX(unsigned int)
                0x00000000c001707c                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00170aa                cpuidCheckExtendedECX(unsigned int)
                0x00000000c00170d8                HalDetectFeatures()
                0x00000000c0017ea3                HalEnableNMI()
                0x00000000c0017eb6                HalDisableNMI()
                0x00000000c0017ec9                HalGetNMIState()
                0x00000000c0017ecf                x86rdmsr(unsigned int)
                0x00000000c0017f0d                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0017f52                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0017f68                HalFindRSDP()
                0x00000000c0017ffd                HalHandlePageFault(void*, void*)
                0x00000000c00180aa                HalHandleOpcodeFault(void*, void*)
                0x00000000c00180ec                HalDisplayDebugInfo(void*)
                0x00000000c001847a                HalReceivedNMI()
                0x00000000c0018515                HalSystemIdle()
                0x00000000c0018574                i386SaveCoprocessor(void*)
                0x00000000c0018588                i386LoadCoprocessor(void*)
                0x00000000c001859c                x87EmulHandler(regs*, void*)
                0x00000000c0018639                HalInitialiseCoprocessor()
                0x00000000c00186bd                HalPanic(char const*)
                0x00000000c00187d1                HalQueryPerformanceCounter()
                0x00000000c00187e1                HalInitialise()
                0x00000000c0018973                HalMakeBeep(int)
                0x00000000c00189ad                HalGetRand()
                0x00000000c00189b0                HalEndOfInterrupt(int)
                0x00000000c00189db                HalRestart()
                0x00000000c00189dc                HalShutdown()
                0x00000000c00189dd                HalSleep()
                0x00000000c00189de                CPU::CPU()
                0x00000000c00189de                CPU::CPU()
                0x00000000c0018a62                CPU::setupSMEP()
                0x00000000c0018a6e                CPU::setupUMIP()
                0x00000000c0018a78                CPU::setupTSC()
                0x00000000c0018a82                CPU::setupLargePages()
                0x00000000c0018a8c                CPU::setupPAT()
                0x00000000c0018abe                CPU::setupMTRR()
                0x00000000c0018ac0                CPU::setupGlobalPages()
                0x00000000c0018aca                CPU::allowUsermodeDataAccess()
                0x00000000c0018ad8                CPU::prohibitUsermodeDataAccess()
                0x00000000c0018ae6                CPU::setupSMAP()
                0x00000000c0018af4                CPU::setupFeatures()
                0x00000000c0018bc0                CPU::open(int, int, void*)
 .text          0x00000000c0018cb5      0x261 arch/i386/intctrl.32
                0x00000000c0018cb5                convertLegacyIRQNumber(int)
                0x00000000c0018cf1                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0018d3b                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0018e69                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0018e9d                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c0018f16        0x2 
 .text          0x00000000c0018f18      0x2dc arch/i386/pic.32
                0x00000000c0018f18                picIoWait()
                0x00000000c0018f20                picDisable()
                0x00000000c0018f54                picGetIRQReg(int)
                0x00000000c0018fd0                picOpen()
                0x00000000c0019154                picEOI(int)
 .text          0x00000000c00191f4      0x5f3 arch/i386/rtc.32
                0x00000000c00191f4                RTC::open(int, int, void*)
                0x00000000c00191f8                RTC::close(int, int, void*)
                0x00000000c00191fc                RTC::timeInSecondsUTC()
                0x00000000c001920e                RTC::timeInDatetimeUTC()
                0x00000000c0019234                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0019272                RTC::~RTC()
                0x00000000c0019272                RTC::~RTC()
                0x00000000c0019296                RTC::~RTC()
                0x00000000c00192c0                RTC::get_update_in_progress_flag()
                0x00000000c00192d4                RTC::completeRTCRefresh()
                0x00000000c0019588                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00196fe                rtcIRQHandler(regs*, void*)
                0x00000000c001973e                RTC::RTC()
                0x00000000c001973e                RTC::RTC()
 *fill*         0x00000000c00197e7        0x1 
 .text          0x00000000c00197e8      0x1f4 arch/i386/vga.32
                0x00000000c00197e8                HalConsoleScroll(int, int)
                0x00000000c00198f0                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0019954                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c00199dc     0x14cf fs/fat/vfslink.32
                0x00000000c00199dc                FAT::getName()
                0x00000000c00199e4                FAT::tell(void*, unsigned long long*)
                0x00000000c0019a20                FAT::stat(void*, unsigned long long*)
                0x00000000c0019a5c                FAT::~FAT()
                0x00000000c0019a5c                FAT::~FAT()
                0x00000000c0019a80                FAT::~FAT()
                0x00000000c0019aa8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019b4c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019c10                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019df4                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001a010                FAT::allocateSwapfile(char const*, int)
                0x00000000c001a1d0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a340                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001a3a0                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a400                FAT::close(void*)
                0x00000000c001a454                FAT::closeDir(void*)
                0x00000000c001a4a8                FAT::truncate(void*, unsigned long long)
                0x00000000c001a514                FAT::seek(void*, unsigned long long)
                0x00000000c001a56c                fatWrapperReadDisk
                0x00000000c001a5ac                fatWrapperWriteDisk
                0x00000000c001a5ec                fatWrapperIoctl
                0x00000000c001a708                FAT::FAT()
                0x00000000c001a708                FAT::FAT()
                0x00000000c001a760                FAT::fixFilepath(char*)
                0x00000000c001a7a0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a914                FAT::openDir(char const*, void**)
                0x00000000c001a9c4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001aabc                FAT::unlink(char const*)
                0x00000000c001ab3c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001acf0                FAT::rename(char const*, char const*)
                0x00000000c001adbc                FAT::mkdir(char const*)
                0x00000000c001ae3c                FAT::exists(char const*)
 *fill*         0x00000000c001aeab        0x1 
 .text          0x00000000c001aeac       0x94 fs/iso9660/helper.32
                0x00000000c001aeac                isoReadDiscSectorHelper
                0x00000000c001af08                iso_kprintf
                0x00000000c001af24                iso_kprintfd
 .text          0x00000000c001af40      0x71c fs/iso9660/vfslink.32
                0x00000000c001af40                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001af46                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001af4c                ISO9660::getName()
                0x00000000c001af52                ISO9660::closeDir(void*)
                0x00000000c001af5c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001af62                ISO9660::unlink(char const*)
                0x00000000c001af68                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001af6e                ISO9660::rename(char const*, char const*)
                0x00000000c001af74                ISO9660::mkdir(char const*)
                0x00000000c001af7a                ISO9660::~ISO9660()
                0x00000000c001af7a                ISO9660::~ISO9660()
                0x00000000c001af9e                ISO9660::~ISO9660()
                0x00000000c001afc6                ISO9660::exists(char const*)
                0x00000000c001afda                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001b0c0                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001b108                ISO9660::seek(void*, unsigned long long)
                0x00000000c001b14a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001b188                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001b1da                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b31c                ISO9660::close(void*)
                0x00000000c001b34c                ISO9660::openDir(char const*, void**)
                0x00000000c001b426                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b543                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b5c2                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b634                ISO9660::ISO9660()
                0x00000000c001b634                ISO9660::ISO9660()
 .text          0x00000000c001b65c      0x26c hal/sound/sndcard.32
                0x00000000c001b65c                SoundCard::beginPlayback()
                0x00000000c001b66a                SoundCard::stopPlayback()
                0x00000000c001b678                SoundCard::SoundCard(char const*)
                0x00000000c001b678                SoundCard::SoundCard(char const*)
                0x00000000c001b716                SoundCard::~SoundCard()
                0x00000000c001b716                SoundCard::~SoundCard()
                0x00000000c001b73a                SoundCard::~SoundCard()
                0x00000000c001b764                SoundCard::configureRates(int, int, int)
                0x00000000c001b794                SoundCard::getSamples16(int, short*)
                0x00000000c001b7f0                SoundCard::getSamples32(int, int*)
                0x00000000c001b876                SoundCard::addChannel(SoundPort*)
                0x00000000c001b8b4                SoundCard::removeChannel(int)
 .text          0x00000000c001b8c8      0x426 hal/sound/sndport.32
                0x00000000c001b8c8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b8c8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001b954                SoundPort::~SoundPort()
                0x00000000c001b954                SoundPort::~SoundPort()
                0x00000000c001b988                SoundPort::unpause()
                0x00000000c001b994                SoundPort::pause()
                0x00000000c001b9a0                SoundPort::getBufferUsed()
                0x00000000c001b9a8                SoundPort::getBufferSize()
                0x00000000c001b9b0                SoundPort::buffer8(signed char*, int)
                0x00000000c001ba44                SoundPort::buffer16(short*, int)
                0x00000000c001bad8                SoundPort::buffer32(int*, int)
                0x00000000c001bb64                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001bc30                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001bcee        0x0 hw/bus/isa.32
 .text          0x00000000c001bcee      0xc23 hw/bus/pci.32
                0x00000000c001bcee                PCI::open(int, int, void*)
                0x00000000c001bd0c                PCI::close(int, int, void*)
                0x00000000c001bd10                PCI::PCI()
                0x00000000c001bd10                PCI::PCI()
                0x00000000c001bda8                PCI::readBAR8(unsigned int, int)
                0x00000000c001bdc4                PCI::readBAR16(unsigned int, int)
                0x00000000c001bde2                PCI::readBAR32(unsigned int, int)
                0x00000000c001bdfe                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001be1e                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001be40                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001be60                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bed6                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bf80                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001bfa4                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001bfcc                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001c016                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001c03e                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c062                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001c086                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001c0ae                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c112                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001c1fa                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001c4c0                PCI::checkBus(unsigned char)
                0x00000000c001c4e4                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001c6ca                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001c846                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001c8b8                PCI::detect()
 *fill*         0x00000000c001c911        0x1 
 .text          0x00000000c001c912      0xe56 hw/diskctrl/ide.32
                0x00000000c001c912                IDE::close(int, int, void*)
                0x00000000c001c916                IDE::IDE()
                0x00000000c001c916                IDE::IDE()
                0x00000000c001c94a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001c95c                selectDrive(unsigned char, unsigned char)
                0x00000000c001c95e                IDE::getBase(unsigned char)
                0x00000000c001c970                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ca30                IDE::read(unsigned char, unsigned char)
                0x00000000c001cade                IDE::waitInterrupt(unsigned char)
                0x00000000c001cb40                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001cb5c                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001cb78                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001cbc2                IDE::open(int, int, void*)
                0x00000000c001d11c                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001d1ec                IDE::detect()
                0x00000000c001d65a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001d714                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001d768      0x33d hw/diskctrl/satabus.32
                0x00000000c001d768                SATABus::close(int, int, void*)
                0x00000000c001d76c                SATABus::detect()
                0x00000000c001d76e                SATABus::SATABus()
                0x00000000c001d76e                SATABus::SATABus()
                0x00000000c001d7f4                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d826                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d86e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d88e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001d8b8                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001d9c8                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001da72                SATABus::open(int, int, void*)
 *fill*         0x00000000c001daa5        0x1 
 .text          0x00000000c001daa6      0x7a9 hw/diskphys/ata.32
                0x00000000c001daa6                ATA::close(int, int, void*)
                0x00000000c001daca                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001dacc                ATA::ATA()
                0x00000000c001dacc                ATA::ATA()
                0x00000000c001dafa                ATA::flush(bool)
                0x00000000c001db48                ATA::readyForCommand()
                0x00000000c001db94                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001df84                ATA::read(unsigned long long, int, void*)
                0x00000000c001dfd0                ATA::write(unsigned long long, int, void*)
                0x00000000c001e01c                ATA::detectCHS()
                0x00000000c001e046                ATA::open(int, int, void*)
                0x00000000c001e231                combineCharAndColour(char, unsigned char)
                0x00000000c001e242                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001e24f        0x1 
 .text          0x00000000c001e250      0x618 hw/diskphys/atapi.32
                0x00000000c001e250                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001e256                ATAPI::close(int, int, void*)
                0x00000000c001e27a                ATAPI::ATAPI()
                0x00000000c001e27a                ATAPI::ATAPI()
                0x00000000c001e2a8                ATAPI::readyForCommand()
                0x00000000c001e2fa                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001e5c2                ATAPI::diskRemoved()
                0x00000000c001e5fc                ATAPI::eject()
                0x00000000c001e644                ATAPI::diskInserted()
                0x00000000c001e650                ATAPI::detectMedia()
                0x00000000c001e70e                ATAPI::open(int, int, void*)
                0x00000000c001e7ee                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e868      0x44c hw/diskphys/sata.32
                0x00000000c001e868                SATA::close(int, int, void*)
                0x00000000c001e88c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001e88e                SATA::open(int, int, void*)
                0x00000000c001e946                SATA::SATA()
                0x00000000c001e946                SATA::SATA()
                0x00000000c001e974                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ebfc                SATA::read(unsigned long long, int, void*)
                0x00000000c001ec48                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001ecb4      0x5d0 hw/diskphys/satapi.32
                0x00000000c001ecb4                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ecba                SATAPI::close(int, int, void*)
                0x00000000c001ecde                SATAPI::SATAPI()
                0x00000000c001ecde                SATAPI::SATAPI()
                0x00000000c001ed0c                SATAPI::diskRemoved()
                0x00000000c001ed0e                SATAPI::diskInserted()
                0x00000000c001ed2a                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001f008                SATAPI::eject()
                0x00000000c001f044                SATAPI::detectMedia()
                0x00000000c001f09a                SATAPI::open(int, int, void*)
                0x00000000c001f19a                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f284      0x443 hw/intctrl/apic.32
                0x00000000c001f284                IOAPIC::close(int, int, void*)
                0x00000000c001f28a                apicGetBase()
                0x00000000c001f2a8                IOAPIC::IOAPIC()
                0x00000000c001f2a8                IOAPIC::IOAPIC()
                0x00000000c001f2d0                apicOpen()
                0x00000000c001f45c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001f48e                IOAPIC::read(int)
                0x00000000c001f4b6                IOAPIC::open(int, int, void*)
                0x00000000c001f59c                IOAPIC::write(int, int)
                0x00000000c001f5c8                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001f6c7        0x1 
 .text          0x00000000c001f6c8       0xf0 hw/timer/apictimer.32
                0x00000000c001f6c8                APICTimer::close(int, int, void*)
                0x00000000c001f6d0                apicTimerHandler(regs*, void*)
                0x00000000c001f6f8                APICTimer::open(int, int, void*)
                0x00000000c001f768                APICTimer::write(int)
                0x00000000c001f790                APICTimer::APICTimer()
                0x00000000c001f790                APICTimer::APICTimer()
 .text          0x00000000c001f7b8      0x1ad hw/timer/pit.32
                0x00000000c001f7b8                PIT::write(int)
                0x00000000c001f83c                pitHandler(regs*, void*)
                0x00000000c001f864                PIT::open(int, int, void*)
                0x00000000c001f8b4                PIT::close(int, int, void*)
                0x00000000c001f8e4                PIT::PIT()
                0x00000000c001f8e4                PIT::PIT()
 *fill*         0x00000000c001f965        0xb 
 .text          0x00000000c001f970       0x6f arch/i386/avx.32
                0x00000000c001f970                avxDetect
                0x00000000c001f99a                avxSave
                0x00000000c001f9ab                avxLoad
                0x00000000c001f9bc                avxInit
                0x00000000c001f9de                avxClose
 *fill*         0x00000000c001f9df        0x1 
 .text          0x00000000c001f9e0      0x2ec arch/i386/interrupt.32
                0x00000000c001f9e0                isr0
                0x00000000c001f9f0                isr1
                0x00000000c001f9fa                isr2
                0x00000000c001fa04                isr3
                0x00000000c001fa0e                isr4
                0x00000000c001fa18                isr5
                0x00000000c001fa22                isr6
                0x00000000c001fa2c                isr7
                0x00000000c001fa36                isr8
                0x00000000c001fa3e                isr9
                0x00000000c001fa48                isr10
                0x00000000c001fa50                isr11
                0x00000000c001fa58                isr12
                0x00000000c001fa60                isr13
                0x00000000c001fa7a                isr14
                0x00000000c001fa82                isr15
                0x00000000c001fa8c                isr16
                0x00000000c001fa96                isr17
                0x00000000c001faa0                isr18
                0x00000000c001faaa                irq3
                0x00000000c001fab4                irq4
                0x00000000c001fabe                irq5
                0x00000000c001fac8                irq6
                0x00000000c001fad2                irq7
                0x00000000c001fadc                irq8
                0x00000000c001fae6                irq9
                0x00000000c001faf0                irq10
                0x00000000c001fafa                irq11
                0x00000000c001fb04                irq12
                0x00000000c001fb0e                irq13
                0x00000000c001fb18                irq14
                0x00000000c001fb22                irq15
                0x00000000c001fb2c                irq1
                0x00000000c001fb33                irq2
                0x00000000c001fb3a                isr96
                0x00000000c001fb41                irq0
                0x00000000c001fb46                int_common_stub
                0x00000000c001fb78                syscall_common_stub
                0x00000000c001fc7c                irq16
                0x00000000c001fc86                irq17
                0x00000000c001fc90                irq18
                0x00000000c001fc9a                irq19
                0x00000000c001fca4                irq20
                0x00000000c001fcae                irq21
                0x00000000c001fcb8                irq22
                0x00000000c001fcc2                irq23
 *fill*         0x00000000c001fccc        0x4 
 .text          0x00000000c001fcd0       0x10 arch/i386/rdrand.32
                0x00000000c001fcd0                i386GetRDRAND
 .text          0x00000000c001fce0       0x39 arch/i386/sse.32
                0x00000000c001fce0                sseDetect
                0x00000000c001fcf8                sseSave
                0x00000000c001fd00                sseLoad
                0x00000000c001fd08                sseInit
                0x00000000c001fd18                sseClose
 *fill*         0x00000000c001fd19        0x7 
 .text          0x00000000c001fd20       0x4f arch/i386/x87.32
                0x00000000c001fd26                x87Detect
                0x00000000c001fd47                x87Save
                0x00000000c001fd4e                x87Load
                0x00000000c001fd55                x87Init
                0x00000000c001fd6e                x87Close
 *fill*         0x00000000c001fd6f        0x1 
 .text          0x00000000c001fd70       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001fd95        0x0 crtn.32
 *fill*         0x00000000c001fd95        0x3 
 .text          0x00000000c001fd98      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001fd98                __divdi3
 *fill*         0x00000000c001fee3        0x1 
 .text          0x00000000c001fee4      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001fee4                __moddi3
 *fill*         0x00000000c0020062        0x2 
 .text          0x00000000c0020064       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0020064                __udivdi3
 *fill*         0x00000000c0020163        0x1 
 .text          0x00000000c0020164      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0020164                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0020280        0x0
 .iplt          0x00000000c0020280        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002027e        0xf
 .init          0x00000000c002027e        0x3 crti.32
                0x00000000c002027e                _init
 .init          0x00000000c0020281        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0020286        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c002028b        0x2 crtn.32

.fini           0x00000000c002028d        0xa
 .fini          0x00000000c002028d        0x3 crti.32
                0x00000000c002028d                _fini
 .fini          0x00000000c0020290        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0020295        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020298       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020298       0x1a hal/device.32
                0x00000000c0020298                DriverlessDevice::~DriverlessDevice()
                0x00000000c0020298                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c00202b2       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c00202b2       0x2a hal/device.32
                0x00000000c00202b2                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00202dc       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00202dc       0xdc hal/device.32
                0x00000000c00202dc                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c00203b8       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c00203b8       0x42 hal/device.32
                0x00000000c00203b8                LinkedList<Device>::LinkedList()
                0x00000000c00203b8                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00203fc       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00203fc       0x1c hal/timer.32
                0x00000000c00203fc                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020418        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020418        0x7 hal/timer.32
                0x00000000c0020418                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020420       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020420       0xbc hal/timer.32
                0x00000000c0020420                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00204dc       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00204dc       0xda hal/timer.32
                0x00000000c00204dc                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c00205b8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c00205b8       0x23 hw/acpi.32
                0x00000000c00205b8                ACPI::~ACPI()
                0x00000000c00205b8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c00205dc       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c00205dc       0x2a hw/acpi.32
                0x00000000c00205dc                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020608        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020608        0x2 hw/acpi.32
                0x00000000c0020608                LinkedList<Device>::~LinkedList()
                0x00000000c0020608                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002060c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002060c       0x1c hw/acpi.32
                0x00000000c002060c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0020628        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0020628        0x7 hw/acpi.32
                0x00000000c0020628                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020630       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020630       0xb8 hw/acpi.32
                0x00000000c0020630                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c00206e8       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c00206e8       0x23 krnl/computer.32
                0x00000000c00206e8                Computer::~Computer()
                0x00000000c00206e8                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002070c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002070c       0x2a krnl/computer.32
                0x00000000c002070c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0020736       0x24
 .text._Z10idleCommonv
                0x00000000c0020736       0x24 krnl/idle.32
                0x00000000c0020736                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002075a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002075a        0x2 krnl/unixfile.32
                0x00000000c002075a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c002075a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002075c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002075c       0x42 krnl/unixfile.32
                0x00000000c002075c                LinkedList<UnixFile>::LinkedList()
                0x00000000c002075c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002079e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002079e       0xd3 krnl/unixfile.32
                0x00000000c002079e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0020872        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0020872        0x7 krnl/unixfile.32
                0x00000000c0020872                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002087a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002087a       0xa1 krnl/unixfile.32
                0x00000000c002087a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002091c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002091c        0x8 krnl/unixfile.32
                0x00000000c002091c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020924        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020924        0x8 sys/kill.32
                0x00000000c0020924                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002092c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002092c        0x2 thr/prcssthr.32
                0x00000000c002092c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002092c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020930       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020930       0x49 thr/prcssthr.32
                0x00000000c0020930                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020930                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002097c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002097c       0x42 thr/prcssthr.32
                0x00000000c002097c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c002097c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c00209be       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00209be       0x23 arch/i386/hal.32
                0x00000000c00209be                CPU::~CPU()
                0x00000000c00209be                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00209e2       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00209e2       0x2a arch/i386/hal.32
                0x00000000c00209e2                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c0020a0c       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020a0c       0x23 hw/bus/pci.32
                0x00000000c0020a0c                PCI::~PCI()
                0x00000000c0020a0c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0020a30       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0020a30       0x2a hw/bus/pci.32
                0x00000000c0020a30                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020a5a       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020a5a       0x23 hw/diskctrl/ide.32
                0x00000000c0020a5a                IDE::~IDE()
                0x00000000c0020a5a                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020a7e       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020a7e       0x2a hw/diskctrl/ide.32
                0x00000000c0020a7e                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020aa8       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020aa8       0x23 hw/diskctrl/satabus.32
                0x00000000c0020aa8                SATABus::~SATABus()
                0x00000000c0020aa8                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020acc       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020acc       0x2a hw/diskctrl/satabus.32
                0x00000000c0020acc                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020af6       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020af6       0x23 hw/diskphys/ata.32
                0x00000000c0020af6                ATA::~ATA()
                0x00000000c0020af6                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020b1a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020b1a       0x2a hw/diskphys/ata.32
                0x00000000c0020b1a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0020b44       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0020b44       0x23 hw/diskphys/atapi.32
                0x00000000c0020b44                ATAPI::~ATAPI()
                0x00000000c0020b44                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020b68       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020b68       0x2a hw/diskphys/atapi.32
                0x00000000c0020b68                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0020b92       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0020b92       0x23 hw/diskphys/sata.32
                0x00000000c0020b92                SATA::~SATA()
                0x00000000c0020b92                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020bb6       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020bb6       0x2a hw/diskphys/sata.32
                0x00000000c0020bb6                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0020be0       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0020be0       0x23 hw/diskphys/satapi.32
                0x00000000c0020be0                SATAPI::~SATAPI()
                0x00000000c0020be0                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0020c04       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0020c04       0x2a hw/diskphys/satapi.32
                0x00000000c0020c04                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020c2e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020c2e       0x23 hw/intctrl/apic.32
                0x00000000c0020c2e                IOAPIC::~IOAPIC()
                0x00000000c0020c2e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0020c52       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0020c52       0x2a hw/intctrl/apic.32
                0x00000000c0020c52                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020c7c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020c7c       0x23 hw/timer/apictimer.32
                0x00000000c0020c7c                APICTimer::~APICTimer()
                0x00000000c0020c7c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0020ca0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0020ca0       0x2a hw/timer/apictimer.32
                0x00000000c0020ca0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020ccc       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020ccc       0x23 hw/timer/pit.32
                0x00000000c0020ccc                PIT::~PIT()
                0x00000000c0020ccc                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0020cf0       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0020cf0       0x2a hw/timer/pit.32
                0x00000000c0020cf0                PIT::~PIT()

.rodata         0x00000000c0020d1a     0x3926
                0x00000000c0020d1a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020d1a        0x2 
 .ctors         0x00000000c0020d1c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0020d20        0x4 krnl/unixfile.32
 .ctors         0x00000000c0020d24        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020d28        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020d2c                end_ctors = .
                0x00000000c0020d2c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020d2c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0020d30        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020d30                __DTOR_END__
                0x00000000c0020d34                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020d34        0xc 
 .rodata        0x00000000c0020d40      0x101 acpica/utclib.32
                0x00000000c0020d40                AcpiGbl_Ctypes
 *fill*         0x00000000c0020e41        0x3 
 .rodata        0x00000000c0020e44       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0020e5c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020ea6       0x1a 
 .rodata        0x00000000c0020ec0       0xed fs/fat/ff.32
 *fill*         0x00000000c0020fad       0x13 
 .rodata        0x00000000c0020fc0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00213c0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002142f       0x11 dbg/kconsole.32
 .rodata        0x00000000c0021440      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021590      0x169 dbg/usban.32
 *fill*         0x00000000c00216f9        0x3 
 .rodata.str1.4
                0x00000000c00216fc      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0021833      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c0021956       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c00219af        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c00219b0       0x6c fs/vfs.32
                0x00000000c00219b0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021a1c       0x1c fs/vfs.32
                0x00000000c0021a1c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021a38       0x1c fs/vfs.32
                0x00000000c0021a38                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021a54       0x2c hal/bus.32
                0x00000000c0021a54                vtable for Bus
 .rodata.str1.1
                0x00000000c0021a80       0x70 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0021af0       0x3c hal/clock.32
                0x00000000c0021af0                vtable for Clock
 *fill*         0x00000000c0021b2c       0x14 
 .rodata        0x00000000c0021b40       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021b70       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021bd4       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021bf6       0x15 hal/device.32
 *fill*         0x00000000c0021c0b        0x1 
 .rodata._ZTV6Device
                0x00000000c0021c0c       0x2c hal/device.32
                0x00000000c0021c0c                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021c38       0x2c hal/device.32
                0x00000000c0021c38                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021c64       0x2c hal/diskctrl.32
                0x00000000c0021c64                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021c90       0x38 hal/diskphys.32
                0x00000000c0021c90                vtable for PhysicalDisk
 .rodata        0x00000000c0021cc8       0x53 hal/keybrd.32
 *fill*         0x00000000c0021d1b        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0021d1c       0x34 hal/keybrd.32
                0x00000000c0021d1c                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021d50       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021d94       0x2c hal/logidisk.32
                0x00000000c0021d94                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021dc0       0x2c hal/mouse.32
                0x00000000c0021dc0                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021dec       0x34 hal/nic.32
                0x00000000c0021dec                vtable for NIC
 .rodata.str1.1
                0x00000000c0021e20        0xb hal/partition.32
 *fill*         0x00000000c0021e2b        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021e2c       0x44 hal/serial.32
                0x00000000c0021e2c                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021e70       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021ebb        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021ec3       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021ec3       0x15 hal/timer.32
 *fill*         0x00000000c0021ec3        0x1 
 .rodata._ZTV5Timer
                0x00000000c0021ec4       0x30 hal/timer.32
                0x00000000c0021ec4                vtable for Timer
 .rodata.str1.1
                0x00000000c0021ef4       0x3e hal/vcache.32
 *fill*         0x00000000c0021f32        0x2 
 .rodata._ZTV6VCache
                0x00000000c0021f34       0x10 hal/vcache.32
                0x00000000c0021f34                vtable for VCache
 .rodata.str1.1
                0x00000000c0021f44       0xba hal/video.32
 *fill*         0x00000000c0021ffe        0x2 
 .rodata._ZTV5Video
                0x00000000c0022000       0x4c hal/video.32
                0x00000000c0022000                vtable for Video
 .rodata.str1.1
                0x00000000c002204c      0x17e hw/acpi.32
 *fill*         0x00000000c00221ca        0x2 
 .rodata.str1.4
                0x00000000c00221cc       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0022243       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0022243        0x8 hw/acpi.32
 *fill*         0x00000000c0022243        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0022244       0x2c hw/acpi.32
                0x00000000c0022244                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022270       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00222b0       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c00222d1       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0022304        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0022307       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c002237d        0x3 
 .rodata.str1.4
                0x00000000c0022380       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c0022438       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c00224e1        0x3 
 .rodata._ZTV8Computer
                0x00000000c00224e4       0x2c krnl/computer.32
                0x00000000c00224e4                vtable for Computer
 .rodata.str1.1
                0x00000000c0022510       0x3c krnl/env.32
 .rodata        0x00000000c002254c       0x76 krnl/fault.32
 *fill*         0x00000000c00225c2        0x2 
 .rodata.str1.4
                0x00000000c00225c4       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c00225f4        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0022603       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c0022664      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0022769       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00227c1       0x39 krnl/pipe.32
 *fill*         0x00000000c00227fa        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00227fc       0x1c krnl/pipe.32
                0x00000000c00227fc                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022818       0x91 krnl/resolve.32
 *fill*         0x00000000c00228a9        0x3 
 .rodata.str1.4
                0x00000000c00228ac       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c00228cb       0xc9 krnl/signal.32
 .rodata.str1.4
                0x00000000c0022994       0x72 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c0022a06       0x7e krnl/syscalls.32
                                         0x86 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022a84       0x1a krnl/terminal.32
                                         0x2b (size before relaxing)
 *fill*         0x00000000c0022a9e        0x2 
 .rodata._ZTV7VgaText
                0x00000000c0022aa0       0x1c krnl/terminal.32
                0x00000000c0022aa0                vtable for VgaText
 .rodata        0x00000000c0022abc       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0022af7       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0022af7       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0022af7       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0022af7        0x8 krnl/unixfile.32
 *fill*         0x00000000c0022af7        0x1 
 .rodata.str1.4
                0x00000000c0022af8       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0022b18       0x46 krnl/unixfile.32
 *fill*         0x00000000c0022b5e        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c0022b60       0x1c krnl/unixfile.32
                0x00000000c0022b60                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0022b7c       0x1c krnl/unixfile.32
                0x00000000c0022b7c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0022b98      0x523 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c00230bb      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c002321c        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c002322b        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0023235       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0023256       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00232aa       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00232d6      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c00234e0       0x7c thr/prcssthr.32
 .rodata.str1.4
                0x00000000c002355c       0xf0 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002364c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002364c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002364c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002364c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002364c       0xdd vm86/vm8086.32
 *fill*         0x00000000c0023729        0x3 
 .rodata        0x00000000c002372c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002375c      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c0023aa7        0x1 
 .rodata.str1.4
                0x00000000c0023aa8       0x57 arch/i386/hal.32
 *fill*         0x00000000c0023aff        0x1 
 .rodata._ZTV3CPU
                0x00000000c0023b00       0x2c arch/i386/hal.32
                0x00000000c0023b00                vtable for CPU
 .rodata.str1.4
                0x00000000c0023b2c       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023b8d       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023bcb       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0023be0       0x3c arch/i386/rtc.32
                0x00000000c0023be0                vtable for RTC
 .rodata.str1.1
                0x00000000c0023c1c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0023c5d        0x3 
 .rodata._ZTV3FAT
                0x00000000c0023c60       0x6c fs/fat/vfslink.32
                0x00000000c0023c60                vtable for FAT
 .rodata.str1.1
                0x00000000c0023ccc       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0023ccc      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0023e04       0x6c fs/iso9660/vfslink.32
                0x00000000c0023e04                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023e70       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0023eb4       0x34 hal/sound/sndcard.32
                0x00000000c0023eb4                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023ee8       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023f27       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023f5f       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0024000       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0024064       0x2c hw/bus/pci.32
                0x00000000c0024064                vtable for PCI
 .rodata.str1.1
                0x00000000c0024090      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c00241b4       0x2c hw/diskctrl/ide.32
                0x00000000c00241b4                vtable for IDE
 .rodata.str1.4
                0x00000000c00241e0       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0024204       0x2c hw/diskctrl/satabus.32
                0x00000000c0024204                vtable for SATABus
 .rodata.str1.1
                0x00000000c0024230       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c00242eb        0x1 
 .rodata._ZTV3ATA
                0x00000000c00242ec       0x38 hw/diskphys/ata.32
                0x00000000c00242ec                vtable for ATA
 .rodata.str1.1
                0x00000000c0024324        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0024331        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0024334       0x38 hw/diskphys/atapi.32
                0x00000000c0024334                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002436c       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00243f4       0x38 hw/diskphys/sata.32
                0x00000000c00243f4                vtable for SATA
 .rodata.str1.1
                0x00000000c002442c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0024516        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0024518       0x38 hw/diskphys/satapi.32
                0x00000000c0024518                vtable for SATAPI
 .rodata        0x00000000c0024550       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c0024576        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c0024578       0x2c hw/intctrl/apic.32
                0x00000000c0024578                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00245a4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00245bf        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00245c0       0x30 hw/timer/apictimer.32
                0x00000000c00245c0                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00245f0       0x1d hw/timer/pit.32
 *fill*         0x00000000c002460d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0024610       0x30 hw/timer/pit.32
                0x00000000c0024610                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0024640      0xa65
 *(.data)
 .data          0x00000000c0024640        0x0 crti.32
 .data          0x00000000c0024640        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0024640                __dso_handle
 .data          0x00000000c0024644        0x0 acpica/utclib.32
 .data          0x00000000c0024644        0x0 krnl/malloc.32
 .data          0x00000000c0024644        0x0 libk/ctype.32
 .data          0x00000000c0024644        0x0 libk/string.32
 .data          0x00000000c0024644        0x0 arch/i386/cc.32
 .data          0x00000000c0024644        0x0 fs/fat/diskio.32
 .data          0x00000000c0024644        0x0 fs/fat/ff.32
 .data          0x00000000c0024644        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0024644        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0024644        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0024644        0x0 dbg/kconsole.32
 *fill*         0x00000000c0024644       0x1c 
 .data          0x00000000c0024660       0x28 dbg/usban.32
                0x00000000c0024660                KiUsbanTypeMismatchTypes
 .data          0x00000000c0024688        0x0 fs/symlink.32
 .data          0x00000000c0024688        0x0 fs/vfs.32
 .data          0x00000000c0024688        0x0 hal/bus.32
 .data          0x00000000c0024688        0x0 hal/buzzer.32
 .data          0x00000000c0024688        0x0 hal/clock.32
 .data          0x00000000c0024688        0x0 hal/device.32
 .data          0x00000000c0024688        0x0 hal/diskctrl.32
 .data          0x00000000c0024688        0x0 hal/diskphys.32
 .data          0x00000000c0024688        0x0 hal/fpu.32
 .data          0x00000000c0024688        0x0 hal/intctrl.32
 .data          0x00000000c0024688        0x0 hal/keybrd.32
 .data          0x00000000c0024688        0x0 hal/logidisk.32
 .data          0x00000000c0024688        0x0 hal/mouse.32
 .data          0x00000000c0024688        0x0 hal/nic.32
 .data          0x00000000c0024688        0x0 hal/partition.32
 .data          0x00000000c0024688        0x0 hal/serial.32
 .data          0x00000000c0024688        0x0 hal/timer.32
 .data          0x00000000c0024688        0x0 hal/vcache.32
 .data          0x00000000c0024688        0x0 hal/video.32
 .data          0x00000000c0024688       0x10 hw/acpi.32
                0x00000000c0024688                legacyIRQRemaps
 .data          0x00000000c0024698        0x0 krnl/atexit.32
 .data          0x00000000c0024698        0x0 krnl/bootmsg.32
 .data          0x00000000c0024698        0x4 krnl/c++.32
                0x00000000c0024698                __stack_chk_guard
 .data          0x00000000c002469c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002469c        0x4 
 .data          0x00000000c00246a0      0x100 krnl/cm.32
                0x00000000c00246a0                CmComponents
 .data          0x00000000c00247a0        0x0 krnl/compat.32
 .data          0x00000000c00247a0        0x0 krnl/computer.32
 .data          0x00000000c00247a0      0x400 krnl/crc32.32
                0x00000000c00247a0                KiPolyLookupCRC32
 .data          0x00000000c0024ba0       0x4d krnl/env.32
                0x00000000c0024ba0                defaultSysEnv
 .data          0x00000000c0024bed        0x0 krnl/fault.32
 .data          0x00000000c0024bed        0x0 krnl/gdt.32
 .data          0x00000000c0024bed        0x0 krnl/idle.32
 .data          0x00000000c0024bed        0x0 krnl/idt.32
 .data          0x00000000c0024bed        0x0 krnl/inlines.32
 *fill*         0x00000000c0024bed        0x3 
 .data          0x00000000c0024bf0        0x4 krnl/kheap.32
 .data          0x00000000c0024bf4        0x0 krnl/mailbox.32
 .data          0x00000000c0024bf4        0x0 krnl/main.32
 .data          0x00000000c0024bf4        0x0 krnl/mutex.32
 .data          0x00000000c0024bf4        0x0 krnl/panic.32
 .data          0x00000000c0024bf4        0x4 krnl/physmgr.32
                0x00000000c0024bf4                Phys::bitmap
 .data          0x00000000c0024bf8        0x0 krnl/pipe.32
 .data          0x00000000c0024bf8        0x0 krnl/powctrl.32
 .data          0x00000000c0024bf8        0x0 krnl/random.32
 .data          0x00000000c0024bf8        0x0 krnl/resolve.32
 .data          0x00000000c0024bf8        0x0 krnl/semaphore.32
 *fill*         0x00000000c0024bf8        0x8 
 .data          0x00000000c0024c00       0x4c krnl/signal.32
                0x00000000c0024c00                KiDefaultSignalHandlers
 *fill*         0x00000000c0024c4c       0x14 
 .data          0x00000000c0024c60      0x104 krnl/syscalls.32
                0x00000000c0024c60                systemCallHandlers
 *fill*         0x00000000c0024d64       0x1c 
 .data          0x00000000c0024d80       0x60 krnl/terminal.32
                0x00000000c0024d80                VgaText::hiddenOut
                0x00000000c0024da0                ansiToVGAMappings
 .data          0x00000000c0024de0        0x0 krnl/tss.32
 .data          0x00000000c0024de0        0x4 krnl/unixfile.32
                0x00000000c0024de0                UnixFile::nextFd
 .data          0x00000000c0024de4       0x15 krnl/virtmgr.32
                0x00000000c0024de4                Virt::pageAllocPtr
                0x00000000c0024de8                Virt::bitmap
                0x00000000c0024dec                Virt::swapfileSectorsPerPage
                0x00000000c0024df0                Virt::swapfileLength
                0x00000000c0024df4                Virt::swapfileSector
                0x00000000c0024df8                Virt::swapfileDrive
 .data          0x00000000c0024df9        0x0 sys/eject.32
 .data          0x00000000c0024df9        0x0 sys/exit.32
 .data          0x00000000c0024df9        0x0 sys/getcwd.32
 .data          0x00000000c0024df9        0x0 sys/getpid.32
 .data          0x00000000c0024df9        0x0 sys/getramdata.32
 .data          0x00000000c0024df9        0x0 sys/getvgaptr.32
 .data          0x00000000c0024df9        0x0 sys/kill.32
 .data          0x00000000c0024df9        0x0 sys/loaddll.32
 .data          0x00000000c0024df9        0x0 sys/read.32
 .data          0x00000000c0024df9        0x0 sys/registersignal.32
 .data          0x00000000c0024df9        0x0 sys/registry.32
 .data          0x00000000c0024df9        0x0 sys/sbrk.32
 .data          0x00000000c0024df9        0x0 sys/setcwd.32
 .data          0x00000000c0024df9        0x0 sys/settime.32
 .data          0x00000000c0024df9        0x0 sys/symlink.32
 .data          0x00000000c0024df9        0x0 sys/timezone.32
 .data          0x00000000c0024df9        0x0 sys/truncate.32
 .data          0x00000000c0024df9        0x0 sys/write.32
 .data          0x00000000c0024df9        0x0 sys/wsbe.32
 .data          0x00000000c0024df9        0x0 sys/yield.32
 .data          0x00000000c0024df9        0x0 thr/elf.32
 .data          0x00000000c0024df9        0x0 thr/exec.32
 *fill*         0x00000000c0024df9        0x3 
 .data          0x00000000c0024dfc        0x4 thr/prcssthr.32
                0x00000000c0024dfc                Thr::nextPID
 .data          0x00000000c0024e00        0x0 vm86/vm8086.32
 .data          0x00000000c0024e00      0x2a4 arch/i386/hal.32
                0x00000000c0024e00                exceptionNames
                0x00000000c00250a0                lastCode
 .data          0x00000000c00250a4        0x0 arch/i386/intctrl.32
 .data          0x00000000c00250a4        0x0 arch/i386/pic.32
 .data          0x00000000c00250a4        0x0 arch/i386/rtc.32
 .data          0x00000000c00250a4        0x0 arch/i386/vga.32
 .data          0x00000000c00250a4        0x0 fs/fat/vfslink.32
 .data          0x00000000c00250a4        0x0 fs/iso9660/helper.32
 .data          0x00000000c00250a4        0x1 fs/iso9660/vfslink.32
                0x00000000c00250a4                recentDriveletter
 .data          0x00000000c00250a5        0x0 hal/sound/sndcard.32
 .data          0x00000000c00250a5        0x0 hal/sound/sndport.32
 .data          0x00000000c00250a5        0x0 hw/bus/isa.32
 .data          0x00000000c00250a5        0x0 hw/bus/pci.32
 .data          0x00000000c00250a5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00250a5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00250a5        0x0 hw/diskphys/ata.32
 .data          0x00000000c00250a5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00250a5        0x0 hw/diskphys/sata.32
 .data          0x00000000c00250a5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00250a5        0x0 hw/intctrl/apic.32
 .data          0x00000000c00250a5        0x0 hw/timer/apictimer.32
 .data          0x00000000c00250a5        0x0 hw/timer/pit.32
 .data          0x00000000c00250a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00250a5        0x0 crtn.32
 .data          0x00000000c00250a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00250a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00250a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00250a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00250a8        0x0
 .got           0x00000000c00250a8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00250a8        0x0
 .got.plt       0x00000000c00250a8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00250a8        0x0
 .igot.plt      0x00000000c00250a8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00250a8        0x0
 .tm_clone_table
                0x00000000c00250a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00250a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00250a5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00250a5        0x3 
 .eh_frame      0x00000000c00250a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00250a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00250a8       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0025100       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0025140       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00251ac       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0026000       0x7d
 *(userkernel)
 userkernel     0x00000000c0026000       0x52 krnl/signal.32
                0x00000000c0026000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002602c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0026052       0x2b krnl/syscalls.32
                0x00000000c0026052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0027000        0x1
 *(align_previous)
 align_previous
                0x00000000c0027000        0x1 krnl/signal.32
                0x00000000c0027000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0027004        0x0
 .rel.got       0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0027001     0x7127
                0x00000000c0027001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0027001       0x1f 
 COMMON         0x00000000c0027020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0027020                dcache
                0x00000000c0027060                cdDriveLetter
                0x00000000c0027080                icache
 *(.bss)
 .bss           0x00000000c00270c0        0x0 crti.32
 .bss           0x00000000c00270c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00270e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00270e4       0x1c 
 .bss           0x00000000c0027100      0x378 krnl/malloc.32
 .bss           0x00000000c0027478        0x0 libk/ctype.32
 .bss           0x00000000c0027478        0x0 libk/string.32
 .bss           0x00000000c0027478        0x0 arch/i386/cc.32
 .bss           0x00000000c0027478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0027478        0x8 
 .bss           0x00000000c0027480       0x88 fs/fat/ff.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0027508       0x18 
 .bss           0x00000000c0027520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0027eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0027eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0027eb8        0x8 
 .bss           0x00000000c0027ec0     0x2444 fs/symlink.32
                0x00000000c0027ec0                kiNumWaitingRoomSymlinks
                0x00000000c0027ee0                kiNewlyCreatedIDs
                0x00000000c0027f00                kiNewlyCreatedSymlinks
                0x00000000c0028300                kiSymlinkHashTable
                0x00000000c002a300                kiBaseSymlinkID
 .bss           0x00000000c002a304        0x4 fs/vfs.32
                0x00000000c002a304                installedFilesystems
 .bss           0x00000000c002a308        0x0 hal/bus.32
 .bss           0x00000000c002a308        0x0 hal/buzzer.32
 .bss           0x00000000c002a308        0x8 hal/clock.32
                0x00000000c002a308                keDstOn
                0x00000000c002a309                keTimezoneHalfHourOffset
                0x00000000c002a30c                keTimezoneHourOffset
 .bss           0x00000000c002a310        0x0 hal/device.32
 .bss           0x00000000c002a310        0x0 hal/diskctrl.32
 .bss           0x00000000c002a310        0x0 hal/diskphys.32
 .bss           0x00000000c002a310        0x0 hal/fpu.32
 .bss           0x00000000c002a310        0x0 hal/intctrl.32
 *fill*         0x00000000c002a310       0x10 
 .bss           0x00000000c002a320      0x428 hal/keybrd.32
                0x00000000c002a320                keyboardWaitingTaskList
                0x00000000c002a324                keyboardSetupYet
                0x00000000c002a328                guiKeyboardHandler
                0x00000000c002a340                keystates
 *fill*         0x00000000c002a748       0x18 
 .bss           0x00000000c002a760       0x88 hal/logidisk.32
                0x00000000c002a760                diskAssignments
                0x00000000c002a780                disks
 .bss           0x00000000c002a7e8        0x4 hal/mouse.32
                0x00000000c002a7e8                guiMouseHandler
 .bss           0x00000000c002a7ec        0x0 hal/nic.32
 .bss           0x00000000c002a7ec        0x0 hal/partition.32
 .bss           0x00000000c002a7ec        0x0 hal/serial.32
 .bss           0x00000000c002a7ec        0x4 hal/timer.32
                0x00000000c002a7ec                milliTenthsSinceBoot
 .bss           0x00000000c002a7f0        0x0 hal/vcache.32
 .bss           0x00000000c002a7f0        0x4 hal/video.32
                0x00000000c002a7f0                screen
 *fill*         0x00000000c002a7f4        0xc 
 .bss           0x00000000c002a800      0x480 hw/acpi.32
                0x00000000c002a800                nextACPITable
                0x00000000c002a820                acpiTables
                0x00000000c002aa20                usingXSDT
                0x00000000c002aa24                RSDTpointer
                0x00000000c002aa28                RSDPpointer
                0x00000000c002aa2c                nextAPICNMI
                0x00000000c002aa40                apicNMIInfo
                0x00000000c002aac0                legacyIRQFlags
                0x00000000c002aae0                ioapicDiscoveryNumber
                0x00000000c002ab00                ioapicFoundInMADT
                0x00000000c002ab20                ioapicAddresses
                0x00000000c002aba0                ioapicGSIBase
                0x00000000c002ac20                processorDiscoveryNumber
                0x00000000c002ac40                matchingAPICID
                0x00000000c002ac60                processorID
 .bss           0x00000000c002ac80       0xe0 krnl/atexit.32
                0x00000000c002ac80                KiNextAtexitHandler
                0x00000000c002aca0                KiAtexitContexts
                0x00000000c002ad00                KiAtexitHandlers
 .bss           0x00000000c002ad60        0x0 krnl/bootmsg.32
 .bss           0x00000000c002ad60        0x0 krnl/c++.32
 .bss           0x00000000c002ad60        0x0 krnl/cdefs.32
 .bss           0x00000000c002ad60        0x4 krnl/cm.32
 .bss           0x00000000c002ad64        0x0 krnl/compat.32
 .bss           0x00000000c002ad64       0x12 krnl/computer.32
                0x00000000c002ad64                systemSleepFunction
                0x00000000c002ad68                systemResetFunction
                0x00000000c002ad6c                systemShutdownFunction
                0x00000000c002ad70                Krnl::computer
                0x00000000c002ad74                KeIsPreemptionOn
                0x00000000c002ad75                KeIsSchedulingOn
 .bss           0x00000000c002ad76        0x0 krnl/crc32.32
 *fill*         0x00000000c002ad76        0x2 
 .bss           0x00000000c002ad78        0x8 krnl/env.32
                0x00000000c002ad78                KeUserEnv
                0x00000000c002ad7c                KeSystemEnv
 .bss           0x00000000c002ad80     0x2000 krnl/fault.32
                0x00000000c002ad80                keInterruptContexts
                0x00000000c002bd80                keInterruptHandlers
 .bss           0x00000000c002cd80        0x6 krnl/gdt.32
                0x00000000c002cd80                gdtDescr
 .bss           0x00000000c002cd86        0x0 krnl/idle.32
 *fill*         0x00000000c002cd86        0x2 
 .bss           0x00000000c002cd88        0x6 krnl/idt.32
                0x00000000c002cd88                idtDescr
 .bss           0x00000000c002cd8e        0x0 krnl/inlines.32
 .bss           0x00000000c002cd8e        0x0 krnl/kheap.32
 .bss           0x00000000c002cd8e        0x0 krnl/mailbox.32
 *fill*         0x00000000c002cd8e        0x2 
 .bss           0x00000000c002cd90        0x4 krnl/main.32
                0x00000000c002cd90                keBootSettings
 .bss           0x00000000c002cd94        0x0 krnl/mutex.32
 .bss           0x00000000c002cd94        0x1 krnl/panic.32
                0x00000000c002cd94                KeIsKernelInPanic
 *fill*         0x00000000c002cd95        0x3 
 .bss           0x00000000c002cd98       0x29 krnl/physmgr.32
                0x00000000c002cd98                Phys::forbidEvictions
                0x00000000c002cd9c                Phys::currentPagePointer
                0x00000000c002cda0                Phys::highestMem
                0x00000000c002cda4                Phys::oldPercent
                0x00000000c002cda8                Phys::usedPages
                0x00000000c002cdac                Phys::usablePages
                0x00000000c002cdb0                Phys::dmaUsage
 .bss           0x00000000c002cdc1        0x0 krnl/pipe.32
 *fill*         0x00000000c002cdc1       0x1f 
 .bss           0x00000000c002cde0       0x48 krnl/powctrl.32
                0x00000000c002cde0                powCtrlOnBattery
                0x00000000c002ce00                currentPowerSettings
                0x00000000c002ce24                secondsSinceLastUserIO
 .bss           0x00000000c002ce28        0x8 krnl/random.32
                0x00000000c002ce28                kiRandSeed
 .bss           0x00000000c002ce30        0x0 krnl/resolve.32
 .bss           0x00000000c002ce30        0x0 krnl/semaphore.32
 .bss           0x00000000c002ce30        0x0 krnl/signal.32
 .bss           0x00000000c002ce30        0x0 krnl/syscalls.32
 .bss           0x00000000c002ce30        0x9 krnl/terminal.32
                0x00000000c002ce30                terminalCycle
                0x00000000c002ce34                activeTerminal
                0x00000000c002ce38                VgaText::graphicMode
 *fill*         0x00000000c002ce39        0x1 
 .bss           0x00000000c002ce3a        0x2 krnl/tss.32
                0x00000000c002ce3a                doubleFaultSelector
 *fill*         0x00000000c002ce3c        0x4 
 .bss           0x00000000c002ce40       0x84 krnl/unixfile.32
                0x00000000c002ce40                sfileLpt
                0x00000000c002ce80                sfileCom
                0x00000000c002cea4                sfileNul
                0x00000000c002cea8                sfilePnt
                0x00000000c002ceac                sfileAux
                0x00000000c002ceb0                sfileCon
                0x00000000c002ceb4                initialFilesAdded
                0x00000000c002ceb8                unixFileLinkedList
 .bss           0x00000000c002cec4       0x10 krnl/virtmgr.32
                0x00000000c002cec4                twswaps
                0x00000000c002cec8                swapBalance
                0x00000000c002cecc                Virt::swapfileBitmap
                0x00000000c002ced0                keFirstVAS
 .bss           0x00000000c002ced4        0x0 sys/eject.32
 .bss           0x00000000c002ced4        0x0 sys/exit.32
 .bss           0x00000000c002ced4        0x0 sys/getcwd.32
 .bss           0x00000000c002ced4        0x0 sys/getpid.32
 .bss           0x00000000c002ced4        0x0 sys/getramdata.32
 .bss           0x00000000c002ced4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002ced4        0x0 sys/kill.32
 .bss           0x00000000c002ced4        0x0 sys/loaddll.32
 .bss           0x00000000c002ced4        0x0 sys/read.32
 .bss           0x00000000c002ced4        0x0 sys/registersignal.32
 .bss           0x00000000c002ced4        0x0 sys/registry.32
 .bss           0x00000000c002ced4        0x0 sys/sbrk.32
 .bss           0x00000000c002ced4        0x0 sys/setcwd.32
 .bss           0x00000000c002ced4        0x0 sys/settime.32
 .bss           0x00000000c002ced4        0x0 sys/symlink.32
 .bss           0x00000000c002ced4        0x0 sys/timezone.32
 .bss           0x00000000c002ced4        0x0 sys/truncate.32
 .bss           0x00000000c002ced4        0x0 sys/write.32
 .bss           0x00000000c002ced4        0x0 sys/wsbe.32
 .bss           0x00000000c002ced4        0x0 sys/yield.32
 *fill*         0x00000000c002ced4        0xc 
 .bss           0x00000000c002cee0      0x7a4 thr/elf.32
                0x00000000c002cee0                Thr::driverLookupNext
                0x00000000c002cf00                Thr::driverLookupLen
                0x00000000c002d100                Thr::driverLookupAddr
                0x00000000c002d300                Thr::driverNameLookup
                0x00000000c002d500                Thr::kernelSymbols
                0x00000000c002d580                Thr::kernelStringTable
                0x00000000c002d600                Thr::kernelSymbolTable
                0x00000000c002d680                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002d684        0x0 thr/exec.32
 *fill*         0x00000000c002d684        0x4 
 .bss           0x00000000c002d688       0x70 thr/prcssthr.32
                0x00000000c002d688                KiRestorePreemptionValue
                0x00000000c002d68c                KiPreemptionDisableCounter
                0x00000000c002d690                cleanerThread
                0x00000000c002d694                weNeedTheCleanerToNotBlock
                0x00000000c002d698                retValLockStuff
                0x00000000c002d69c                retValSchedLock
                0x00000000c002d6a0                lockStuffLock
                0x00000000c002d6a4                schedulerLock
                0x00000000c002d6a8                taskSwitchesPostponedFlag
                0x00000000c002d6ac                postponeTaskSwitchesCounter
                0x00000000c002d6b0                irqDisableCounter
                0x00000000c002d6b4                terminatedTaskList
                0x00000000c002d6c0                sleepingTaskList
                0x00000000c002d6cc                taskList
                0x00000000c002d6d8                kernelProcess
 *fill*         0x00000000c002d6f8        0x8 
 .bss           0x00000000c002d700       0x40 vm86/vm8086.32
                0x00000000c002d700                Vm::started8086Yet
                0x00000000c002d704                Vm::vmRetV
                0x00000000c002d708                Vm::vmDone
                0x00000000c002d709                Vm::vmReady
                0x00000000c002d70c                Vm::vm86Thread
                0x00000000c002d710                Vm::vmToHostCommsPtr
                0x00000000c002d720                Vm::vmToHostComms
 .bss           0x00000000c002d740       0x54 arch/i386/hal.32
                0x00000000c002d740                apic
                0x00000000c002d744                guiPanicHandler
                0x00000000c002d748                fpuOwner
                0x00000000c002d74c                coproLoadFunc
                0x00000000c002d750                coproSaveFunc
                0x00000000c002d754                lastD
                0x00000000c002d758                lastC
                0x00000000c002d75c                lastB
                0x00000000c002d760                lastA
                0x00000000c002d764                HalPageWriteCombiningFlag
                0x00000000c002d768                HalPageGlobalFlag
                0x00000000c002d76c                nmi
                0x00000000c002d770                vendorIDString
                0x00000000c002d77d                familyID
                0x00000000c002d77e                model
                0x00000000c002d77f                processorType
                0x00000000c002d780                steppingID
                0x00000000c002d784                vendor
                0x00000000c002d788                opcodeDetectionMode
                0x00000000c002d78c                features
 .bss           0x00000000c002d794        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002d794        0x0 arch/i386/pic.32
 .bss           0x00000000c002d794        0x2 arch/i386/rtc.32
 .bss           0x00000000c002d796        0x0 arch/i386/vga.32
 *fill*         0x00000000c002d796        0xa 
 .bss           0x00000000c002d7a0       0xf0 fs/fat/vfslink.32
                0x00000000c002d7a0                FAT::fats
                0x00000000c002d7c0                FAT::vfsToFatRemaps
                0x00000000c002d840                fatToVFSRemaps
 .bss           0x00000000c002d890        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002d890       0x10 
 .bss           0x00000000c002d8a0      0x820 fs/iso9660/vfslink.32
                0x00000000c002d8a0                iso9660Owner
                0x00000000c002d8a4                recentSector
                0x00000000c002d8c0                recentBuffer
 .bss           0x00000000c002e0c0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002e0c0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002e0c0        0x0 hw/bus/isa.32
 .bss           0x00000000c002e0c0        0xd hw/bus/pci.32
                0x00000000c002e0c0                thePCI
 .bss           0x00000000c002e0cd        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002e0cd        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002e0cd        0x3 
 .bss           0x00000000c002e0d0        0x8 hw/diskphys/ata.32
                0x00000000c002e0d0                ataSectorsWritten
                0x00000000c002e0d4                ataSectorsRead
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002e0d8        0x8 
 .bss           0x00000000c002e0e0       0x41 hw/intctrl/apic.32
                0x00000000c002e0e0                noOfIOAPICs
                0x00000000c002e100                ioapics
                0x00000000c002e120                IOAPICsSetupYet
 .bss           0x00000000c002e121        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002e121        0x3 
 .bss           0x00000000c002e124        0x4 hw/timer/pit.32
                0x00000000c002e124                pitFreq
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002e128        0x0 crtn.32
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002e128                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003524f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
