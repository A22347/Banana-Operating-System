Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f9da
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6c3 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca8                Krnl::firstTask()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006e96                Computer::setBootMessage(char const*)
                0x00000000c0006e98                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070ec                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007128                Computer::shutdown()
                0x00000000c0007140                Computer::restart()
                0x00000000c0007158                Computer::sleep()
                0x00000000c000716c                Computer::nmiEnabled()
                0x00000000c0007178                Computer::readCMOS(unsigned char)
                0x00000000c0007196                Computer::enableNMI(bool)
                0x00000000c00071ae                Computer::open(int, int, void*)
                0x00000000c0007282                Computer::disableNMI()
                0x00000000c0007292                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072b6                Computer::handleNMI()
 *fill*         0x00000000c0007321        0x1 
 .text          0x00000000c0007322      0x1db core/gdt.32
                0x00000000c0007322                GDTEntry::setBase(unsigned int)
                0x00000000c000733e                GDTEntry::setLimit(unsigned int)
                0x00000000c000735c                GDT::GDT()
                0x00000000c000735c                GDT::GDT()
                0x00000000c0007372                GDT::addEntry(GDTEntry)
                0x00000000c0007394                GDT::getNumberOfEntries()
                0x00000000c000739c                GDT::flush()
                0x00000000c00073be                GDT::setup()
 .text          0x00000000c00074fd       0x1d core/idle.32
                0x00000000c00074fd                idleFunction(void*)
 *fill*         0x00000000c000751a        0x2 
 .text          0x00000000c000751c      0x46c core/idt.32
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c0007596                IDTEntry::setOffset(unsigned int)
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ae                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075b6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007608                IDT::flush()
                0x00000000c0007622                IDT::setup()
 .text          0x00000000c0007988      0x188 core/kheap.32
                0x00000000c0007988                sbrk
                0x00000000c0007a1f                mmap
                0x00000000c0007a35                munmap
                0x00000000c0007a4b                liballoc_lock()
                0x00000000c0007a59                liballoc_unlock()
                0x00000000c0007a6f                liballoc_alloc(int)
                0x00000000c0007a87                liballoc_free(void*, int)
                0x00000000c0007aa2                realloc
                0x00000000c0007ab6                malloc
                0x00000000c0007ac6                free
                0x00000000c0007ad6                rfree
                0x00000000c0007ae6                calloc
 .text          0x00000000c0007b10       0xc7 core/main.32
                0x00000000c0007b10                KeEntryPoint
 .text          0x00000000c0007bd7      0x644 core/physmgr.32
                0x00000000c0007bd7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cbf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfa                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3a                Phys::getPageState(unsigned long)
                0x00000000c0007d56                Phys::freePage(unsigned long)
                0x00000000c0007dbf                Phys::allocatePage()
                0x00000000c0007e8e                Phys::allocateContiguousPages(int)
                0x00000000c0007ef5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f2d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000821b        0x1 
 .text          0x00000000c000821c      0x273 core/pipe.32
                0x00000000c000821c                Pipe::isAtty()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008244                Pipe::~Pipe()
                0x00000000c000826c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000832c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xab3 core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a60                VgaText::putx(unsigned int)
                0x00000000c0008aa6                VgaText::puts(char const*)
                0x00000000c0008acc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b18                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008db6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f42                VgaText::doUpdate()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x1a1 core/tss.32
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f54                TSS::setESP(unsigned long)
                0x00000000c0008f68                TSS::flush()
                0x00000000c0008f88                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090e5        0x1 
 .text          0x00000000c00090e6      0x4ca core/unixfile.32
                0x00000000c00090e6                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000913c                ReservedFilename::isAtty()
                0x00000000c0009158                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091b6                UnixFile::getFileDescriptor()
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c0009440                UnixFile::~UnixFile()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c000948c                ReservedFilename::~ReservedFilename()
                0x00000000c00094b3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b0     0x1218 core/virtmgr.32
                0x00000000c00095b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ea                Virt::getPageState(unsigned long)
                0x00000000c000960d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009732                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009755                Virt::swapIDToSector(unsigned long)
                0x00000000c000976b                Virt::allocateSwapfilePage()
                0x00000000c00097eb                Virt::virtualMemorySetup()
                0x00000000c000983c                Virt::setupPageSwapping(int)
                0x00000000c00098ae                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098de                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000992b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a68                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a8c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aa6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009b52                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b86                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009d20                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e24                VAS::allocatePages(int, int)
                0x00000000c0009f1a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f72                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a2b2                VAS::evict(unsigned long)
                0x00000000c000a390                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a52a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a59e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ca                VAS::scanForEviction()
                0x00000000c000a6cd                mapVASFirstTime
 .text          0x00000000c000a7c8       0x5f coreobjs/c++.32
                0x00000000c000a7c8                __cxa_atexit
                0x00000000c000a7cb                __cxa_finalize
                0x00000000c000a7cc                __stack_chk_fail
                0x00000000c000a802                __cxa_pure_virtual
                0x00000000c000a813                operator new[](unsigned long)
                0x00000000c000a818                operator delete(void*, unsigned long)
                0x00000000c000a81d                operator delete[](void*)
                0x00000000c000a822                operator delete[](void*, unsigned long)
 .text          0x00000000c000a827      0x254 dbg/kconsole.32
                0x00000000c000a827                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8c7                Dbg::logc(char)
                0x00000000c000a8e7                Dbg::logs(char*)
                0x00000000c000a906                Dbg::logWriteInt(unsigned int)
                0x00000000c000a924                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a945                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa7b        0x1 
 .text          0x00000000c000aa7c      0x2d4 dbg/usban.32
                0x00000000c000aa7c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aae8                __ubsan_handle_type_mismatch_v1
                0x00000000c000abc4                __ubsan_handle_pointer_overflow
                0x00000000c000abf0                __ubsan_handle_out_of_bounds
                0x00000000c000ac1c                __ubsan_handle_add_overflow
                0x00000000c000ac48                __ubsan_handle_load_invalid_value
                0x00000000c000ac74                __ubsan_handle_divrem_overflow
                0x00000000c000aca0                __ubsan_handle_mul_overflow
                0x00000000c000accc                __ubsan_handle_sub_overflow
                0x00000000c000acf8                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad24                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad50      0x8fe fs/symlink.32
                0x00000000c000af18                KiDeinitialiseSymlinks(void*)
                0x00000000c000afab                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000b02e                KiIsSymlinkRegistered(char const*)
                0x00000000c000b198                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b33f                KeCreateSymlink(char const*, char const*)
                0x00000000c000b47b                KeInitialiseSymlinks()
 .text          0x00000000c000b64e      0xd68 fs/vfs.32
                0x00000000c000b64e                File::read(unsigned long long, void*, int*)
                0x00000000c000b6a6                File::write(unsigned long long, void*, int*)
                0x00000000c000b6fe                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b756                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b784                File::isAtty()
                0x00000000c000b788                Directory::isAtty()
                0x00000000c000b78c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b792                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b798                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b79e                File::~File()
                0x00000000c000b79e                File::~File()
                0x00000000c000b7c2                File::~File()
                0x00000000c000b7ec                Directory::~Directory()
                0x00000000c000b7ec                Directory::~Directory()
                0x00000000c000b810                Directory::~Directory()
                0x00000000c000b83a                Filesystem::Filesystem()
                0x00000000c000b83a                Filesystem::Filesystem()
                0x00000000c000b85e                Filesystem::~Filesystem()
                0x00000000c000b85e                Filesystem::~Filesystem()
                0x00000000c000b86c                Filesystem::~Filesystem()
                0x00000000c000b890                Fs::getcwd(Process*, char*, int)
                0x00000000c000b8ba                Fs::initVFS()
                0x00000000c000b8e4                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000bafe                File::File(char const*, Process*, bool)
                0x00000000c000bafe                File::File(char const*, Process*, bool)
                0x00000000c000bbdc                File::File(char const*, Process*)
                0x00000000c000bbdc                File::File(char const*, Process*)
                0x00000000c000bbfa                File::open(FileOpenMode)
                0x00000000c000bc58                File::close()
                0x00000000c000bcb8                File::seek(unsigned long long)
                0x00000000c000bd0e                File::truncate(unsigned long long)
                0x00000000c000bd64                File::tell(unsigned long long*)
                0x00000000c000bdb4                File::rewind()
                0x00000000c000bdc8                File::unlink()
                0x00000000c000be14                File::rename(char const*)
                0x00000000c000be62                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bebe                File::exists()
                0x00000000c000befc                File::stat(unsigned long long*, bool*)
                0x00000000c000bf5d                Fs::setcwd(Process*, char*)
                0x00000000c000c0bc                Directory::Directory(char const*, Process*)
                0x00000000c000c0bc                Directory::Directory(char const*, Process*)
                0x00000000c000c184                Directory::open()
                0x00000000c000c1e0                Directory::close()
                0x00000000c000c240                Directory::unlink()
                0x00000000c000c28c                Directory::rename(char const*)
                0x00000000c000c2da                Directory::exists()
                0x00000000c000c318                Directory::read(dirent*)
                0x00000000c000c364                Directory::create()
                0x00000000c000c3b0                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c3b6        0x2 
 .text          0x00000000c000c3b8       0x86 hal/bus.32
                0x00000000c000c3b8                Bus::Bus(char const*)
                0x00000000c000c3b8                Bus::Bus(char const*)
                0x00000000c000c3f0                Bus::~Bus()
                0x00000000c000c3f0                Bus::~Bus()
                0x00000000c000c414                Bus::~Bus()
 .text          0x00000000c000c43e       0x96 hal/buzzer.32
                0x00000000c000c43e                beepThread(void*)
                0x00000000c000c47b                Krnl::beep(int, int, bool)
 .text          0x00000000c000c4d4      0x45f hal/clock.32
                0x00000000c000c4d4                User::loadClockSettings(int)
                0x00000000c000c526                Clock::Clock(char const*)
                0x00000000c000c526                Clock::Clock(char const*)
                0x00000000c000c55c                Clock::~Clock()
                0x00000000c000c55c                Clock::~Clock()
                0x00000000c000c580                Clock::~Clock()
                0x00000000c000c5aa                Clock::timeInSecondsLocal()
                0x00000000c000c5f2                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c64b                datetimeToSeconds(datetime_t)
                0x00000000c000c76a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c7ca                secondsToDatetime(unsigned long long)
                0x00000000c000c90e                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c933        0x1 
 .text          0x00000000c000c934      0x464 hal/device.32
                0x00000000c000c934                Device::hibernate()
                0x00000000c000c936                Device::wake()
                0x00000000c000c938                Device::detect()
                0x00000000c000c93a                Device::disableLegacy()
                0x00000000c000c93c                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c93e                DriverlessDevice::close(int, int, void*)
                0x00000000c000c942                DriverlessDevice::detect()
                0x00000000c000c944                DriverlessDevice::open(int, int, void*)
                0x00000000c000c958                Device::~Device()
                0x00000000c000c958                Device::~Device()
                0x00000000c000c966                Device::~Device()
                0x00000000c000c98e                Device::findAndLoadDriver()
                0x00000000c000c99c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c9c2                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000ca02                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ca2c                Device::getParent()
                0x00000000c000ca38                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ca56                Device::addChild(Device*)
                0x00000000c000ca9a                Device::removeAllChildren()
                0x00000000c000cae0                Device::hibernateAll()
                0x00000000c000cb10                Device::wakeAll()
                0x00000000c000cb40                Device::detectAll()
                0x00000000c000cb70                Device::disableLegacyAll()
                0x00000000c000cb72                Device::loadDriversForAll()
                0x00000000c000cb74                Device::closeAll()
                0x00000000c000cbaa                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cbe0                Device::setName(char const*)
                0x00000000c000cbee                Device::Device(char const*)
                0x00000000c000cbee                Device::Device(char const*)
                0x00000000c000ccea                Device::getName()
                0x00000000c000ccf4                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ccf4                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cd2a                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cd6e                getDevicesOfType(DeviceType)
 .text          0x00000000c000cd98       0x86 hal/diskctrl.32
                0x00000000c000cd98                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd98                HardDiskController::HardDiskController(char const*)
                0x00000000c000cdd0                HardDiskController::~HardDiskController()
                0x00000000c000cdd0                HardDiskController::~HardDiskController()
                0x00000000c000cdf4                HardDiskController::~HardDiskController()
 .text          0x00000000c000ce1e       0xe2 hal/diskphys.32
                0x00000000c000ce1e                PhysicalDisk::eject()
                0x00000000c000ce22                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ce22                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ce8a                PhysicalDisk::startCache()
                0x00000000c000ceb2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ceb2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ced6                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cf00        0x0 hal/fpu.32
 .text          0x00000000c000cf00      0x359 hal/intctrl.32
                0x00000000c000cf00                int_handler
                0x00000000c000cf8a                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cfd4                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d108                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d13c                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d1ba                setupINTS()
                0x00000000c000d217                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000d259        0x1 
 .text          0x00000000c000d25a      0x8be hal/keybrd.32
                0x00000000c000d25a                startGUI(void*)
                0x00000000c000d2c8                startGUIVESA(void*)
                0x00000000c000d336                sendKeyToTerminal(unsigned char)
                0x00000000c000d411                sendKeyboardToken(KeyboardToken)
                0x00000000c000d8fb                clearInternalKeybuffer(VgaText*)
                0x00000000c000d930                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000da8e                Keyboard::Keyboard(char const*)
                0x00000000c000da8e                Keyboard::Keyboard(char const*)
                0x00000000c000daca                Keyboard::~Keyboard()
                0x00000000c000daca                Keyboard::~Keyboard()
                0x00000000c000daee                Keyboard::~Keyboard()
 .text          0x00000000c000db18      0x3f8 hal/logidisk.32
                0x00000000c000db18                LogicalDisk::close(int, int, void*)
                0x00000000c000db1c                LogicalDisk::~LogicalDisk()
                0x00000000c000db1c                LogicalDisk::~LogicalDisk()
                0x00000000c000db40                LogicalDisk::~LogicalDisk()
                0x00000000c000db6a                LogicalDisk::open(int, int, void*)
                0x00000000c000db7e                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000dbb6                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000dbfc                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dbfc                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dcbc                LogicalDisk::assignDriveLetter()
                0x00000000c000dd76                LogicalDisk::mount()
                0x00000000c000ddbe                LogicalDisk::unmount()
                0x00000000c000ddce                LogicalDisk::eject()
                0x00000000c000dde2                LogicalDisk::unassignDriveLetter()
                0x00000000c000de38                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000dea4                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000df10       0x86 hal/mouse.32
                0x00000000c000df10                Mouse::Mouse(char const*)
                0x00000000c000df10                Mouse::Mouse(char const*)
                0x00000000c000df48                Mouse::~Mouse()
                0x00000000c000df48                Mouse::~Mouse()
                0x00000000c000df6c                Mouse::~Mouse()
 .text          0x00000000c000df96       0x90 hal/nic.32
                0x00000000c000df96                NIC::getMAC()
                0x00000000c000df9c                NIC::write(int, unsigned char*, int*)
                0x00000000c000dfa2                NIC::NIC(char const*)
                0x00000000c000dfa2                NIC::NIC(char const*)
                0x00000000c000dfd8                NIC::~NIC()
                0x00000000c000dfd8                NIC::~NIC()
                0x00000000c000dffc                NIC::~NIC()
 .text          0x00000000c000e026      0x33b hal/partition.32
                0x00000000c000e026                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e0ce                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e361        0x3 
 .text          0x00000000c000e364       0x86 hal/serial.32
                0x00000000c000e364                Serial::Serial(char const*)
                0x00000000c000e364                Serial::Serial(char const*)
                0x00000000c000e39c                Serial::~Serial()
                0x00000000c000e39c                Serial::~Serial()
                0x00000000c000e3c0                Serial::~Serial()
 *fill*         0x00000000c000e3ea        0x2 
 .text          0x00000000c000e3ec      0x234 hal/timer.32
                0x00000000c000e3ec                Timer::Timer(char const*)
                0x00000000c000e3ec                Timer::Timer(char const*)
                0x00000000c000e424                Timer::~Timer()
                0x00000000c000e424                Timer::~Timer()
                0x00000000c000e448                Timer::~Timer()
                0x00000000c000e472                Timer::read()
                0x00000000c000e47d                setupTimer(int)
                0x00000000c000e4b8                timerHandler(unsigned int)
 .text          0x00000000c000e620      0x444 hal/vcache.32
                0x00000000c000e620                VCache::VCache(PhysicalDisk*)
                0x00000000c000e620                VCache::VCache(PhysicalDisk*)
                0x00000000c000e790                VCache::invalidateReadBuffer()
                0x00000000c000e7a0                VCache::writeWriteBuffer()
                0x00000000c000e7ec                VCache::~VCache()
                0x00000000c000e7ec                VCache::~VCache()
                0x00000000c000e844                VCache::~VCache()
                0x00000000c000e86c                VCache::write(unsigned long long, int, void*)
                0x00000000c000e95a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ea64      0x4c7 hal/video.32
                0x00000000c000ea64                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000eab0                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000eb20                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb9e                Video::clearScreen(unsigned int)
                0x00000000c000ebd2                Video::putpixel(int, int, unsigned int)
                0x00000000c000ebe0                Video::readPixelApprox(int, int)
                0x00000000c000ebf4                Video::Video(char const*)
                0x00000000c000ebf4                Video::Video(char const*)
                0x00000000c000ec2a                Video::~Video()
                0x00000000c000ec2a                Video::~Video()
                0x00000000c000ec4e                Video::~Video()
                0x00000000c000ec78                Video::isMonochrome()
                0x00000000c000ec84                Video::getWidth()
                0x00000000c000ec90                Video::getHeight()
                0x00000000c000ec9c                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ed58                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000eec0                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ef2b        0x1 
 .text          0x00000000c000ef2c     0x138b hw/acpi.32
                0x00000000c000ef2c                ACPI::close(int, int, void*)
                0x00000000c000efe0                findRSDP()
                0x00000000c000f078                loadACPITables(unsigned char*)
                0x00000000c000f2e4                findRSDT(unsigned char*)
                0x00000000c000f43c                findDataTable(unsigned char*, char*)
                0x00000000c000f4bc                scanMADT()
                0x00000000c000f974                ACPI::ACPI()
                0x00000000c000f974                ACPI::ACPI()
                0x00000000c000f9c8                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fac4                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fb90                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fb98                ACPI::detectPCI()
                0x00000000c000fdb8                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fe00                ACPI::sleep()
                0x00000000c000fe1c                ACPI::open(int, int, void*)
 *fill*         0x00000000c00102b7        0x1 
 .text          0x00000000c00102b8      0xbc5 hw/cpu.32
                0x00000000c00102b8                CPU::close(int, int, void*)
                0x00000000c00102bc                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c00102d8                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c00102f0                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0010364                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00103e8                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010416                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0010444                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0010472                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00104a0                CPU::CPU()
                0x00000000c00104a0                CPU::CPU()
                0x00000000c001052e                CPU::displayFeatures()
                0x00000000c0010530                CPU::detectFeatures()
                0x00000000c0010c04                CPU::setupSMEP()
                0x00000000c0010c10                CPU::setupUMIP()
                0x00000000c0010c1a                CPU::setupTSC()
                0x00000000c0010c24                CPU::setupLargePages()
                0x00000000c0010c2e                CPU::setupPAT()
                0x00000000c0010c6a                CPU::setupMTRR()
                0x00000000c0010c6c                CPU::setupGlobalPages()
                0x00000000c0010c76                CPU::allowUsermodeDataAccess()
                0x00000000c0010c88                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010c9a                CPU::setupSMAP()
                0x00000000c0010ca8                CPU::setupFeatures()
                0x00000000c0010d74                CPU::open(int, int, void*)
 .text          0x00000000c0010e7d       0xb6 krnl/atexit.32
                0x00000000c0010e7d                KeInitialiseAtexit()
                0x00000000c0010e9c                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010ed0                KeExecuteAtexit()
 .text          0x00000000c0010f33       0xdf krnl/bootmsg.32
                0x00000000c0010f33                KeDisplaySplashScreen()
                0x00000000c0010faf                KeSetBootMessage(char const*)
 *fill*         0x00000000c0011012        0x2 
 .text          0x00000000c0011014       0x1d krnl/compat.32
                0x00000000c0011014                Krnl::handlePowerButton()
                0x00000000c0011024                Krnl::handleSleepButton()
 .text          0x00000000c0011031       0x2b krnl/crc32.32
                0x00000000c0011031                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c001105c      0x5bf krnl/env.32
                0x00000000c001105c                EnvVarContainer::getEnv(char const*)
                0x00000000c001109a                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001115c                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001115e                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0011382                EnvVarContainer::__loadSystem()
                0x00000000c001139c                EnvVarContainer::__loadUser()
                0x00000000c001139e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001139e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00113c0                EnvVarContainer::~EnvVarContainer()
                0x00000000c00113c0                EnvVarContainer::~EnvVarContainer()
                0x00000000c00113f0                KeGetEnv(Process*, char const*)
                0x00000000c0011455                KeSetEnvSystem(char const*, char const*)
                0x00000000c001146f                KeSetEnvUser(char const*, char const*)
                0x00000000c001148e                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00114a1                KeDeleteEnvSystem(char const*)
                0x00000000c00114a2                KeDeleteEnvUser(char const*)
                0x00000000c00114a3                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00114a4                KeNewProcessEnv(Process*)
                0x00000000c00114c6                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0011512                KeLoadSystemEnv()
                0x00000000c0011540                KeLoadUserEnv()
                0x00000000c0011566                KeFlushEnv()
                0x00000000c0011567                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011587                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c001161b       0x94 krnl/inlines.32
                0x00000000c001161b                CPU::current()
                0x00000000c0011627                operator new(unsigned long)
                0x00000000c001162c                operator delete(void*)
                0x00000000c0011631                disableIRQs()
                0x00000000c0011633                enableIRQs()
                0x00000000c0011635                lockScheduler()
                0x00000000c001163d                unlockScheduler()
                0x00000000c001164c                lockStuff()
                0x00000000c001165a                unlockStuff()
                0x00000000c0011694                Virt::getAKernelVAS()
                0x00000000c001169a                __not_memcpy
 .text          0x00000000c00116af        0xc krnl/panic.32
                0x00000000c00116af                KePanic(char const*)
 .text          0x00000000c00116bb      0x142 krnl/powctrl.32
                0x00000000c00116bb                KePowerThread(void*)
                0x00000000c00116e9                KeChangePowerSettings(PowerSettings)
                0x00000000c00116ff                KeUserIOReceived()
                0x00000000c001170a                KeHandlePowerButton()
                0x00000000c001173f                KeHandleSleepButton()
                0x00000000c0011774                KeSetupPowerManager()
 .text          0x00000000c00117fd       0x9d krnl/random.32
                0x00000000c00117fd                KeRand()
                0x00000000c001183f                KeSeedRand(unsigned int)
                0x00000000c0011868                KeInitRand()
 *fill*         0x00000000c001189a        0x2 
 .text          0x00000000c001189c      0x1bc krnl/resolve.32
                0x00000000c001189c                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011a58      0x322 krnl/signal.32
                0x00000000c0011a58                KiSigKill(int)
                0x00000000c0011a6c                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011a6d                KiDefaultSignalHandlerPause(int)
                0x00000000c0011a99                KiDefaultSignalHandlerResume(int)
                0x00000000c0011ac5                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011aca                KeInitSignals()
                0x00000000c0011b1c                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011b52                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011bcf                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011cc6                KiCheckSignalZ
                0x00000000c0011d08                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011d43                KiFinishSignalZ
 .text          0x00000000c0011d7a      0xe10 krnl/syscalls.32
                0x00000000c0011d7a                SysSeekDir(regs*)
                0x00000000c0011d7f                SysTellDir(regs*)
                0x00000000c0011d84                SysVerify(regs*)
                0x00000000c0011d8e                SysGetArgc(regs*)
                0x00000000c0011da2                SysTTYName(regs*)
                0x00000000c0011daa                SysFormatDisk(regs*)
                0x00000000c0011e21                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011e75                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011ece                SysShutdown(regs*)
                0x00000000c0011f2c                SysRealpath(regs*)
                0x00000000c0011f70                SysReadDir(regs*)
                0x00000000c0011ff0                SysIsATTY(regs*)
                0x00000000c001204a                SysSeek(regs*)
                0x00000000c00120a1                SysTell(regs*)
                0x00000000c001210e                SysSize(regs*)
                0x00000000c0012181                SysSizeFromFilename(regs*)
                0x00000000c00122b2                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00123e3                SysClose(regs*)
                0x00000000c0012443                SysOpenDir(regs*)
                0x00000000c00124c0                SysMakeDir(regs*)
                0x00000000c001252e                SysCloseDir(regs*)
                0x00000000c0012582                SysWait(regs*)
                0x00000000c00125a3                SysNotImpl(regs*)
                0x00000000c00125be                SysPanic(regs*)
                0x00000000c00125d9                SysRmdir(regs*)
                0x00000000c001263e                SysUnlink(regs*)
                0x00000000c00126a3                SysGetArgv(regs*)
                0x00000000c00126f0                SysUSleep(regs*)
                0x00000000c0012719                SysSpawn(regs*)
                0x00000000c001278c                SysGetEnv(regs*)
                0x00000000c001283d                SysSetFatAttrib(regs*)
                0x00000000c00128b0                SysPipe(regs*)
                0x00000000c00128f5                SysGetUnixTime(regs*)
                0x00000000c0012909                string_ends_with(char const*, char const*)
                0x00000000c0012951                SysOpen(regs*)
                0x00000000c0012b48                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012b8a        0x2 
 .text          0x00000000c0012b8c      0x159 net/ethernet.32
                0x00000000c0012b8c                KeSwitchEndian16(unsigned short)
                0x00000000c0012bb0                KeSwitchEndian32(unsigned int)
                0x00000000c0012be0                EthernetCRC32(unsigned char*, int)
                0x00000000c0012c84                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012ce5      0xd56 reg/cm.32
                0x00000000c0012ce5                CmOpen(char const*)
                0x00000000c0012e03                CmClose(Reghive_Tag*)
                0x00000000c0012e19                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012e55                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012ecc                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012f0b                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012f3d                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012f79                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012fa1                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012fc2                CmExpand(Reghive_Tag*, int)
                0x00000000c001303d                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c00130c3                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c00131b7                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c00132f3                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0013354                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0013384                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c00133bb                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00133e5                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013425                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00134c9                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c00134f7                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013695                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00136e2                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001375c                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00137af                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013873                zStrtok(char*, char const*)
                0x00000000c00138e5                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0013966                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013a09                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0013a3b      0x52a reg/registry.32
                0x00000000c0013a3b                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013bac                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013d01                Reg::getLine(char*, char*, char*)
                0x00000000c0013d38                Reg::readInt(char*, char*, int*)
                0x00000000c0013e26                Reg::readString(char*, char*, char*, int)
                0x00000000c0013ea7                Reg::readBool(char*, char*, bool*)
                0x00000000c0013ecc                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013ef8                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013f24                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013f65       0x36 sys/eject.32
                0x00000000c0013f65                SysEject(regs*)
 .text          0x00000000c0013f9b       0x18 sys/exit.32
                0x00000000c0013f9b                SysExit(regs*)
 .text          0x00000000c0013fb3       0x1f sys/getcwd.32
                0x00000000c0013fb3                SysGetCwd(regs*)
 .text          0x00000000c0013fd2        0xc sys/getpid.32
                0x00000000c0013fd2                SysGetPID(regs*)
 .text          0x00000000c0013fde       0x1a sys/getramdata.32
                0x00000000c0013fde                SysGetRAMData(regs*)
 .text          0x00000000c0013ff8       0x82 sys/getvgaptr.32
                0x00000000c0013ff8                SysGetVGAPtr(regs*)
 *fill*         0x00000000c001407a        0x2 
 .text          0x00000000c001407c       0xb9 sys/kill.32
                0x00000000c001407c                SysKill(regs*)
 .text          0x00000000c0014135       0xa8 sys/loaddll.32
                0x00000000c0014135                SysLoadDLL(regs*)
 .text          0x00000000c00141dd       0x68 sys/read.32
                0x00000000c00141dd                SysRead(regs*)
 .text          0x00000000c0014245       0x29 sys/registersignal.32
                0x00000000c0014245                SysRegisterSignal(regs*)
 .text          0x00000000c001426e      0x19c sys/registry.32
                0x00000000c001426e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00142e5                SysRegistryReadExtent(regs*)
                0x00000000c001432d                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014355                SysRegistryEnterDirectory(regs*)
                0x00000000c001437d                SysRegistryGetNext(regs*)
                0x00000000c00143a5                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00143df                SysRegistryOpen(regs*)
                0x00000000c00143f3                SysRegistryClose(regs*)
 .text          0x00000000c001440a       0x55 sys/sbrk.32
                0x00000000c001440a                SysSbrk(regs*)
 .text          0x00000000c001445f       0x1c sys/setcwd.32
                0x00000000c001445f                SysSetCwd(regs*)
 .text          0x00000000c001447b       0x96 sys/settime.32
                0x00000000c001447b                SysSetTime(regs*)
 .text          0x00000000c0014511       0x2d sys/symlink.32
                0x00000000c0014511                SysSymlink(regs*)
 .text          0x00000000c001453e       0x4a sys/timezone.32
                0x00000000c001453e                SysTimezone(regs*)
 .text          0x00000000c0014588       0xfc sys/truncate.32
                0x00000000c0014588                SysTruncate(regs*)
 .text          0x00000000c0014684       0x68 sys/write.32
                0x00000000c0014684                SysWrite(regs*)
 .text          0x00000000c00146ec       0x62 sys/wsbe.32
                0x00000000c00146ec                SysWsbe(regs*)
 .text          0x00000000c001474e       0x25 sys/yield.32
                0x00000000c001474e                SysYield(regs*)
 .text          0x00000000c0014773     0x11e6 thr/elf.32
                0x00000000c0014773                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014a01                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014c13                Thr::runtimeReferenceHelper()
                0x00000000c0014c26                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014c75                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014f33                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001566c                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001569e                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00156d5                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00156ef                Thr::loadDLL(char const*, bool)
                0x00000000c0015920                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0015959        0x3 
 .text          0x00000000c001595c     0x13d9 thr/prcssthr.32
                0x00000000c001595c                userModeEntryPoint(void*)
                0x00000000c0015984                changeTSS
                0x00000000c00159b4                switchToThread(ThreadControlBlock*)
                0x00000000c0015a64                Process::addArgs(char**)
                0x00000000c0015ad0                Process::Process(char const*, Process*, char**)
                0x00000000c0015ad0                Process::Process(char const*, Process*, char**)
                0x00000000c0015cdc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015cdc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015eb0                taskStartupFunction
                0x00000000c0015ebc                Semaphore::Semaphore(int)
                0x00000000c0015ebc                Semaphore::Semaphore(int)
                0x00000000c0015eec                Mutex::Mutex()
                0x00000000c0015eec                Mutex::Mutex()
                0x00000000c0015f00                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001600c                Process::createUserThread()
                0x00000000c001602c                setupMultitasking(void (*)())
                0x00000000c0016150                schedule()
                0x00000000c00161e4                Semaphore::tryAcquire()
                0x00000000c00162b8                Semaphore::assertLocked(char const*)
                0x00000000c001633c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016364                blockTask(TaskState)
                0x00000000c001639c                waitTask(int, int*, int)
                0x00000000c00163e0                milliTenthSleepUntil(unsigned int)
                0x00000000c0016480                milliTenthSleep(unsigned int)
                0x00000000c0016494                sleep(unsigned int)
                0x00000000c00164b0                Semaphore::acquire()
                0x00000000c0016578                taskReturned
                0x00000000c00165bc                Thr::processFromPID(int)
                0x00000000c0016668                unblockTask(ThreadControlBlock*)
                0x00000000c0016714                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00169e8                cleanerTaskFunction(void*)
                0x00000000c0016af0                terminateTask(int)
                0x00000000c0016bdc                Thr::terminateFromIRQ(int)
                0x00000000c0016bec                Semaphore::release()
 .text          0x00000000c0016d35      0xc27 vm86/vm8086.32
                0x00000000c0016d35                Vm::inbv(unsigned short)
                0x00000000c0016d48                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016d7e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016d8e                Vm::getSegment(unsigned int)
                0x00000000c0016d96                Vm::getOffset(unsigned int)
                0x00000000c0016d9b                Vm::mainloop2()
                0x00000000c0016dd5                Vm::mainVm8086Loop(void*)
                0x00000000c0016de5                Vm::mainloop3(unsigned long)
                0x00000000c0016e0b                Vm::initialise8086()
                0x00000000c0016e4e                Vm::finish8086()
                0x00000000c0016eaf                Vm::getOutput8086(unsigned char*)
                0x00000000c0016ed4                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016f8d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001712b                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00171c4                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00171d5                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00171e7                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00171f8                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001720d                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017223                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017238                Vm::faultHandler(regs*)
 .text          0x00000000c001795c      0xaf0 arch/i386/hal.32
                0x00000000c001795c                noCopro(unsigned long)
                0x00000000c001795d                nmiHandler(regs*, void*)
                0x00000000c0017976                doubleFault(regs*, void*)
                0x00000000c001798f                displayDebugInfo(regs*)
                0x00000000c0017d14                HalSystemIdle()
                0x00000000c0017d90                displayProgramFault(char const*)
                0x00000000c0017ddc                gpFault(regs*, void*)
                0x00000000c0017e43                pgFault(regs*, void*)
                0x00000000c0017ecc                otherISRHandler(regs*, void*)
                0x00000000c0017f00                opcodeFault(regs*, void*)
                0x00000000c0017f83                i386SaveCoprocessor(void*)
                0x00000000c0017f97                i386LoadCoprocessor(void*)
                0x00000000c0017fab                x87EmulHandler(regs*, void*)
                0x00000000c0018048                HalInitialiseCoprocessor()
                0x00000000c00180f6                HalPanic(char const*)
                0x00000000c001820a                HalQueryPerformanceCounter()
                0x00000000c0018225                HalInitialise()
                0x00000000c00183db                HalMakeBeep(int)
                0x00000000c0018415                HalGetRand()
                0x00000000c0018418                HalEndOfInterrupt(int)
                0x00000000c0018449                HalRestart()
                0x00000000c001844a                HalShutdown()
                0x00000000c001844b                HalSleep()
 .text          0x00000000c001844c      0x2dc arch/i386/pic.32
                0x00000000c001844c                picIoWait()
                0x00000000c0018454                picDisable()
                0x00000000c0018488                picGetIRQReg(int)
                0x00000000c0018504                picOpen()
                0x00000000c0018688                picEOI(int)
 .text          0x00000000c0018728      0x674 arch/i386/rtc.32
                0x00000000c0018728                RTC::open(int, int, void*)
                0x00000000c001872c                RTC::close(int, int, void*)
                0x00000000c0018730                RTC::timeInSecondsUTC()
                0x00000000c0018742                RTC::timeInDatetimeUTC()
                0x00000000c0018768                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00187a6                RTC::~RTC()
                0x00000000c00187a6                RTC::~RTC()
                0x00000000c00187ca                RTC::~RTC()
                0x00000000c00187f4                RTC::get_update_in_progress_flag()
                0x00000000c001880e                RTC::completeRTCRefresh()
                0x00000000c0018aee                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018c9c                rtcIRQHandler(regs*, void*)
                0x00000000c0018ce2                RTC::RTC()
                0x00000000c0018ce2                RTC::RTC()
 .text          0x00000000c0018d9c      0x1f4 arch/i386/vga.32
                0x00000000c0018d9c                HalConsoleScroll(int, int)
                0x00000000c0018ea4                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018f08                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018f90     0x14cf fs/fat/vfslink.32
                0x00000000c0018f90                FAT::getName()
                0x00000000c0018f98                FAT::tell(void*, unsigned long long*)
                0x00000000c0018fd4                FAT::stat(void*, unsigned long long*)
                0x00000000c0019010                FAT::~FAT()
                0x00000000c0019010                FAT::~FAT()
                0x00000000c0019034                FAT::~FAT()
                0x00000000c001905c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019100                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00191c4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00193a8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00195c4                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019784                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00198f4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019954                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00199b4                FAT::close(void*)
                0x00000000c0019a08                FAT::closeDir(void*)
                0x00000000c0019a5c                FAT::truncate(void*, unsigned long long)
                0x00000000c0019ac8                FAT::seek(void*, unsigned long long)
                0x00000000c0019b20                fatWrapperReadDisk
                0x00000000c0019b60                fatWrapperWriteDisk
                0x00000000c0019ba0                fatWrapperIoctl
                0x00000000c0019cbc                FAT::FAT()
                0x00000000c0019cbc                FAT::FAT()
                0x00000000c0019d14                FAT::fixFilepath(char*)
                0x00000000c0019d54                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019ec8                FAT::openDir(char const*, void**)
                0x00000000c0019f78                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a070                FAT::unlink(char const*)
                0x00000000c001a0f0                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a2a4                FAT::rename(char const*, char const*)
                0x00000000c001a370                FAT::mkdir(char const*)
                0x00000000c001a3f0                FAT::exists(char const*)
 *fill*         0x00000000c001a45f        0x1 
 .text          0x00000000c001a460       0x94 fs/iso9660/helper.32
                0x00000000c001a460                isoReadDiscSectorHelper
                0x00000000c001a4bc                iso_kprintf
                0x00000000c001a4d8                iso_kprintfd
 .text          0x00000000c001a4f4      0x71c fs/iso9660/vfslink.32
                0x00000000c001a4f4                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a4fa                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a500                ISO9660::getName()
                0x00000000c001a506                ISO9660::closeDir(void*)
                0x00000000c001a510                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a516                ISO9660::unlink(char const*)
                0x00000000c001a51c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a522                ISO9660::rename(char const*, char const*)
                0x00000000c001a528                ISO9660::mkdir(char const*)
                0x00000000c001a52e                ISO9660::~ISO9660()
                0x00000000c001a52e                ISO9660::~ISO9660()
                0x00000000c001a552                ISO9660::~ISO9660()
                0x00000000c001a57a                ISO9660::exists(char const*)
                0x00000000c001a58e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a674                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a6bc                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a6fe                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a73c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a78e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a8d0                ISO9660::close(void*)
                0x00000000c001a900                ISO9660::openDir(char const*, void**)
                0x00000000c001a9da                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001aaf7                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001ab76                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001abe8                ISO9660::ISO9660()
                0x00000000c001abe8                ISO9660::ISO9660()
 .text          0x00000000c001ac10      0x26c hal/sound/sndcard.32
                0x00000000c001ac10                SoundCard::beginPlayback()
                0x00000000c001ac1e                SoundCard::stopPlayback()
                0x00000000c001ac2c                SoundCard::SoundCard(char const*)
                0x00000000c001ac2c                SoundCard::SoundCard(char const*)
                0x00000000c001acca                SoundCard::~SoundCard()
                0x00000000c001acca                SoundCard::~SoundCard()
                0x00000000c001acee                SoundCard::~SoundCard()
                0x00000000c001ad18                SoundCard::configureRates(int, int, int)
                0x00000000c001ad48                SoundCard::getSamples16(int, short*)
                0x00000000c001ada4                SoundCard::getSamples32(int, int*)
                0x00000000c001ae2a                SoundCard::addChannel(SoundPort*)
                0x00000000c001ae68                SoundCard::removeChannel(int)
 .text          0x00000000c001ae7c      0x38a hal/sound/sndport.32
                0x00000000c001ae7c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ae7c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001af08                SoundPort::~SoundPort()
                0x00000000c001af08                SoundPort::~SoundPort()
                0x00000000c001af3c                SoundPort::unpause()
                0x00000000c001af48                SoundPort::pause()
                0x00000000c001af54                SoundPort::getBufferUsed()
                0x00000000c001af5c                SoundPort::getBufferSize()
                0x00000000c001af64                SoundPort::buffer16(short*, int)
                0x00000000c001aff0                SoundPort::buffer32(int*, int)
                0x00000000c001b07c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b148                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b206        0x0 hw/bus/isa.32
 .text          0x00000000c001b206      0xbb7 hw/bus/pci.32
                0x00000000c001b206                PCI::open(int, int, void*)
                0x00000000c001b224                PCI::close(int, int, void*)
                0x00000000c001b228                PCI::PCI()
                0x00000000c001b228                PCI::PCI()
                0x00000000c001b2c0                PCI::readBAR8(unsigned int, int)
                0x00000000c001b2dc                PCI::readBAR16(unsigned int, int)
                0x00000000c001b2fa                PCI::readBAR32(unsigned int, int)
                0x00000000c001b316                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b336                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b358                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b378                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b3ee                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b498                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4bc                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4e4                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b52e                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b556                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b57a                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b59e                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5c6                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b62a                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b712                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b9d8                PCI::checkBus(unsigned char)
                0x00000000c001b9fc                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bb76                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bcf2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bd64                PCI::detect()
 *fill*         0x00000000c001bdbd        0x1 
 .text          0x00000000c001bdbe      0xb9a hw/diskctrl/ide.32
                0x00000000c001bdbe                IDE::close(int, int, void*)
                0x00000000c001bdc2                IDE::IDE()
                0x00000000c001bdc2                IDE::IDE()
                0x00000000c001bdf6                IDE::prepareInterrupt(unsigned char)
                0x00000000c001be08                selectDrive(unsigned char, unsigned char)
                0x00000000c001be0a                IDE::getBase(unsigned char)
                0x00000000c001be1c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bedc                IDE::read(unsigned char, unsigned char)
                0x00000000c001bf8a                IDE::waitInterrupt(unsigned char)
                0x00000000c001bfec                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c008                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c024                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c06e                IDE::open(int, int, void*)
                0x00000000c001c4ac                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c57c                IDE::detect()
                0x00000000c001c84a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c904                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c958      0x32a hw/diskctrl/satabus.32
                0x00000000c001c958                SATABus::close(int, int, void*)
                0x00000000c001c95c                SATABus::detect()
                0x00000000c001c95e                SATABus::SATABus()
                0x00000000c001c95e                SATABus::SATABus()
                0x00000000c001c9e4                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca16                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca5e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca7e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001caa8                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cbb8                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cc62                SATABus::open(int, int, void*)
 .text          0x00000000c001cc82      0x93f hw/diskphys/ata.32
                0x00000000c001cc82                ATA::close(int, int, void*)
                0x00000000c001cca6                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cca8                ATA::ATA()
                0x00000000c001cca8                ATA::ATA()
                0x00000000c001ccd6                ATA::flush(bool)
                0x00000000c001cd24                ATA::readyForCommand()
                0x00000000c001cd70                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d106                ATA::detectCHS()
                0x00000000c001d130                ATA::open(int, int, void*)
                0x00000000c001d1fc                combineCharAndColour(char, unsigned char)
                0x00000000c001d20d                combineColours(unsigned char, unsigned char)
                0x00000000c001d21a                ATA::read(unsigned long long, int, void*)
                0x00000000c001d3f0                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d5c1        0x1 
 .text          0x00000000c001d5c2      0x618 hw/diskphys/atapi.32
                0x00000000c001d5c2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d5c8                ATAPI::close(int, int, void*)
                0x00000000c001d5ec                ATAPI::ATAPI()
                0x00000000c001d5ec                ATAPI::ATAPI()
                0x00000000c001d61a                ATAPI::readyForCommand()
                0x00000000c001d66c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d934                ATAPI::diskRemoved()
                0x00000000c001d96e                ATAPI::eject()
                0x00000000c001d9b6                ATAPI::diskInserted()
                0x00000000c001d9c2                ATAPI::detectMedia()
                0x00000000c001da80                ATAPI::open(int, int, void*)
                0x00000000c001db60                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dbda      0x807 hw/diskphys/sata.32
                0x00000000c001dbda                SATA::close(int, int, void*)
                0x00000000c001dbfe                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001dc00                SATA::open(int, int, void*)
                0x00000000c001dcaa                SATA::SATA()
                0x00000000c001dcaa                SATA::SATA()
                0x00000000c001dcd8                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001df2c                SATA::read(unsigned long long, int, void*)
                0x00000000c001e17c                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e3e1        0x1 
 .text          0x00000000c001e3e2      0x5d0 hw/diskphys/satapi.32
                0x00000000c001e3e2                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e3e8                SATAPI::close(int, int, void*)
                0x00000000c001e40c                SATAPI::SATAPI()
                0x00000000c001e40c                SATAPI::SATAPI()
                0x00000000c001e43a                SATAPI::diskRemoved()
                0x00000000c001e43c                SATAPI::diskInserted()
                0x00000000c001e458                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e736                SATAPI::eject()
                0x00000000c001e772                SATAPI::detectMedia()
                0x00000000c001e7c8                SATAPI::open(int, int, void*)
                0x00000000c001e8c8                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e9b2      0x45b hw/intctrl/apic.32
                0x00000000c001e9b2                IOAPIC::close(int, int, void*)
                0x00000000c001e9b8                apicGetBase()
                0x00000000c001e9fe                IOAPIC::IOAPIC()
                0x00000000c001e9fe                IOAPIC::IOAPIC()
                0x00000000c001ea26                apicOpen()
                0x00000000c001eba2                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ebd4                IOAPIC::read(int)
                0x00000000c001ebfc                IOAPIC::open(int, int, void*)
                0x00000000c001ece2                IOAPIC::write(int, int)
                0x00000000c001ed0e                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ee0d        0x3 
 .text          0x00000000c001ee10       0xf0 hw/timer/apictimer.32
                0x00000000c001ee10                APICTimer::close(int, int, void*)
                0x00000000c001ee18                apicTimerHandler(regs*, void*)
                0x00000000c001ee40                APICTimer::open(int, int, void*)
                0x00000000c001eeb0                APICTimer::write(int)
                0x00000000c001eed8                APICTimer::APICTimer()
                0x00000000c001eed8                APICTimer::APICTimer()
 .text          0x00000000c001ef00      0x1ad hw/timer/pit.32
                0x00000000c001ef00                PIT::write(int)
                0x00000000c001ef84                pitHandler(regs*, void*)
                0x00000000c001efac                PIT::open(int, int, void*)
                0x00000000c001effc                PIT::close(int, int, void*)
                0x00000000c001f02c                PIT::PIT()
                0x00000000c001f02c                PIT::PIT()
 *fill*         0x00000000c001f0ad        0x3 
 .text          0x00000000c001f0b0       0x83 arch/i386/avx.32
                0x00000000c001f0b0                avxDetect
                0x00000000c001f0da                avxSave
                0x00000000c001f0eb                avxLoad
                0x00000000c001f0fc                avxInit
                0x00000000c001f11e                avxClose
                0x00000000c001f11f                wouldSheSayYes
 *fill*         0x00000000c001f133        0xd 
 .text          0x00000000c001f140      0x2ec arch/i386/interrupt.32
                0x00000000c001f140                isr0
                0x00000000c001f150                isr1
                0x00000000c001f15a                isr2
                0x00000000c001f164                isr3
                0x00000000c001f16e                isr4
                0x00000000c001f178                isr5
                0x00000000c001f182                isr6
                0x00000000c001f18c                isr7
                0x00000000c001f196                isr8
                0x00000000c001f19e                isr9
                0x00000000c001f1a8                isr10
                0x00000000c001f1b0                isr11
                0x00000000c001f1b8                isr12
                0x00000000c001f1c0                isr13
                0x00000000c001f1da                isr14
                0x00000000c001f1e2                isr15
                0x00000000c001f1ec                isr16
                0x00000000c001f1f6                isr17
                0x00000000c001f200                isr18
                0x00000000c001f20a                irq3
                0x00000000c001f214                irq4
                0x00000000c001f21e                irq5
                0x00000000c001f228                irq6
                0x00000000c001f232                irq7
                0x00000000c001f23c                irq8
                0x00000000c001f246                irq9
                0x00000000c001f250                irq10
                0x00000000c001f25a                irq11
                0x00000000c001f264                irq12
                0x00000000c001f26e                irq13
                0x00000000c001f278                irq14
                0x00000000c001f282                irq15
                0x00000000c001f28c                irq1
                0x00000000c001f293                irq2
                0x00000000c001f29a                isr96
                0x00000000c001f2a1                irq0
                0x00000000c001f2a6                int_common_stub
                0x00000000c001f2d8                syscall_common_stub
                0x00000000c001f3dc                irq16
                0x00000000c001f3e6                irq17
                0x00000000c001f3f0                irq18
                0x00000000c001f3fa                irq19
                0x00000000c001f404                irq20
                0x00000000c001f40e                irq21
                0x00000000c001f418                irq22
                0x00000000c001f422                irq23
 *fill*         0x00000000c001f42c        0x4 
 .text          0x00000000c001f430       0x10 arch/i386/rdrand.32
                0x00000000c001f430                i386GetRDRAND
 .text          0x00000000c001f440       0x39 arch/i386/sse.32
                0x00000000c001f440                absolutelyNoChanceInHell
                0x00000000c001f440                sseDetect
                0x00000000c001f458                sseSave
                0x00000000c001f460                sseLoad
                0x00000000c001f468                sseInit
                0x00000000c001f478                sseClose
 *fill*         0x00000000c001f479        0x7 
 .text          0x00000000c001f480       0x49 arch/i386/x87.32
                0x00000000c001f486                x87Detect
                0x00000000c001f4a1                x87Save
                0x00000000c001f4a8                x87Load
                0x00000000c001f4af                x87Init
                0x00000000c001f4c8                x87Close
 *fill*         0x00000000c001f4c9        0x3 
 .text          0x00000000c001f4cc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f4f1        0x0 crtn.32
 *fill*         0x00000000c001f4f1        0x3 
 .text          0x00000000c001f4f4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f4f4                __divdi3
 *fill*         0x00000000c001f63f        0x1 
 .text          0x00000000c001f640      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f640                __moddi3
 *fill*         0x00000000c001f7be        0x2 
 .text          0x00000000c001f7c0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f7c0                __udivdi3
 *fill*         0x00000000c001f8bf        0x1 
 .text          0x00000000c001f8c0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f8c0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f9e0        0x0
 .iplt          0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f9da        0xf
 .init          0x00000000c001f9da        0x3 crti.32
                0x00000000c001f9da                _init
 .init          0x00000000c001f9dd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f9e2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f9e7        0x2 crtn.32

.fini           0x00000000c001f9e9        0xa
 .fini          0x00000000c001f9e9        0x3 crti.32
                0x00000000c001f9e9                _fini
 .fini          0x00000000c001f9ec        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f9f1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f9f4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f9f4       0x23 core/computer.32
                0x00000000c001f9f4                Computer::~Computer()
                0x00000000c001f9f4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001fa18       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001fa18       0x2a core/computer.32
                0x00000000c001fa18                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001fa42       0x21
 .text._Z10idleCommonv
                0x00000000c001fa42       0x21 core/idle.32
                0x00000000c001fa42                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fa64        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fa64        0x2 core/unixfile.32
                0x00000000c001fa64                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001fa64                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fa66       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fa66       0x42 core/unixfile.32
                0x00000000c001fa66                LinkedList<UnixFile>::LinkedList()
                0x00000000c001fa66                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001faa8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001faa8       0xd3 core/unixfile.32
                0x00000000c001faa8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fb7c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fb7c        0x7 core/unixfile.32
                0x00000000c001fb7c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fb84       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fb84       0xa1 core/unixfile.32
                0x00000000c001fb84                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc26        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc26        0x8 core/unixfile.32
                0x00000000c001fc26                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc2e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc2e       0x1a hal/device.32
                0x00000000c001fc2e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fc2e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fc48       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fc48       0x2a hal/device.32
                0x00000000c001fc48                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fc72       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fc72       0xdc hal/device.32
                0x00000000c001fc72                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fd4e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fd4e       0x42 hal/device.32
                0x00000000c001fd4e                LinkedList<Device>::LinkedList()
                0x00000000c001fd4e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fd90       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fd90       0x1c hal/timer.32
                0x00000000c001fd90                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fdac        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fdac        0x7 hal/timer.32
                0x00000000c001fdac                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fdb4       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fdb4       0xbc hal/timer.32
                0x00000000c001fdb4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fe70       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fe70       0xda hal/timer.32
                0x00000000c001fe70                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ff4c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ff4c       0x23 hw/acpi.32
                0x00000000c001ff4c                ACPI::~ACPI()
                0x00000000c001ff4c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ff70       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ff70       0x2a hw/acpi.32
                0x00000000c001ff70                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ff9c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ff9c        0x2 hw/acpi.32
                0x00000000c001ff9c                LinkedList<Device>::~LinkedList()
                0x00000000c001ff9c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ffa0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ffa0       0x1c hw/acpi.32
                0x00000000c001ffa0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ffbc        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ffbc        0x7 hw/acpi.32
                0x00000000c001ffbc                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ffc4       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ffc4       0xb8 hw/acpi.32
                0x00000000c001ffc4                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c002007c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002007c       0x23 hw/cpu.32
                0x00000000c002007c                CPU::~CPU()
                0x00000000c002007c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00200a0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00200a0       0x2a hw/cpu.32
                0x00000000c00200a0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00200cc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00200cc        0x8 sys/kill.32
                0x00000000c00200cc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00200d4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00200d4        0x2 thr/prcssthr.32
                0x00000000c00200d4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00200d4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00200d8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00200d8       0x49 thr/prcssthr.32
                0x00000000c00200d8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00200d8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020124       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020124       0x42 thr/prcssthr.32
                0x00000000c0020124                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020124                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c0020166       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020166       0x23 hw/bus/pci.32
                0x00000000c0020166                PCI::~PCI()
                0x00000000c0020166                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002018a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002018a       0x2a hw/bus/pci.32
                0x00000000c002018a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00201b4       0x23
 .text._ZN3IDED2Ev
                0x00000000c00201b4       0x23 hw/diskctrl/ide.32
                0x00000000c00201b4                IDE::~IDE()
                0x00000000c00201b4                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00201d8       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00201d8       0x2a hw/diskctrl/ide.32
                0x00000000c00201d8                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020202       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020202       0x23 hw/diskctrl/satabus.32
                0x00000000c0020202                SATABus::~SATABus()
                0x00000000c0020202                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020226       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020226       0x2a hw/diskctrl/satabus.32
                0x00000000c0020226                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020250       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020250       0x23 hw/diskphys/ata.32
                0x00000000c0020250                ATA::~ATA()
                0x00000000c0020250                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020274       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020274       0x2a hw/diskphys/ata.32
                0x00000000c0020274                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c002029e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c002029e       0x23 hw/diskphys/atapi.32
                0x00000000c002029e                ATAPI::~ATAPI()
                0x00000000c002029e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00202c2       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00202c2       0x2a hw/diskphys/atapi.32
                0x00000000c00202c2                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00202ec       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00202ec       0x23 hw/diskphys/sata.32
                0x00000000c00202ec                SATA::~SATA()
                0x00000000c00202ec                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020310       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020310       0x2a hw/diskphys/sata.32
                0x00000000c0020310                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002033a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002033a       0x23 hw/diskphys/satapi.32
                0x00000000c002033a                SATAPI::~SATAPI()
                0x00000000c002033a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002035e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002035e       0x2a hw/diskphys/satapi.32
                0x00000000c002035e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020388       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020388       0x23 hw/intctrl/apic.32
                0x00000000c0020388                IOAPIC::~IOAPIC()
                0x00000000c0020388                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00203ac       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00203ac       0x2a hw/intctrl/apic.32
                0x00000000c00203ac                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00203d8       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00203d8       0x23 hw/timer/apictimer.32
                0x00000000c00203d8                APICTimer::~APICTimer()
                0x00000000c00203d8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00203fc       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00203fc       0x2a hw/timer/apictimer.32
                0x00000000c00203fc                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020428       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020428       0x23 hw/timer/pit.32
                0x00000000c0020428                PIT::~PIT()
                0x00000000c0020428                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002044c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002044c       0x2a hw/timer/pit.32
                0x00000000c002044c                PIT::~PIT()

.rodata         0x00000000c0020476     0x323a
                0x00000000c0020476                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020476        0x2 
 .ctors         0x00000000c0020478        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c002047c        0x4 core/unixfile.32
 .ctors         0x00000000c0020480        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020484        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020488                end_ctors = .
                0x00000000c0020488                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020488        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002048c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002048c                __DTOR_END__
                0x00000000c0020490                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020490       0x10 
 .rodata        0x00000000c00204a0      0x101 acpica/utclib.32
                0x00000000c00204a0                AcpiGbl_Ctypes
 *fill*         0x00000000c00205a1        0x3 
 .rodata        0x00000000c00205a4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c00205bc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020606       0x1a 
 .rodata        0x00000000c0020620       0xed fs/fat/ff.32
 *fill*         0x00000000c002070d       0x13 
 .rodata        0x00000000c0020720      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020b20       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020b8f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020ca4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020d0c       0x2c core/computer.32
                0x00000000c0020d0c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020d38       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020d68        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020d74       0x17 core/main.32
 *fill*         0x00000000c0020d8b        0x1 
 .rodata.str1.4
                0x00000000c0020d8c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020e31       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020e89       0x39 core/pipe.32
 *fill*         0x00000000c0020ec2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020ec4       0x1c core/pipe.32
                0x00000000c0020ec4                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020ee0       0x2b core/terminal.32
 *fill*         0x00000000c0020f0b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020f0c       0x1c core/terminal.32
                0x00000000c0020f0c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020f28       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020f4a       0x15 core/unixfile.32
 *fill*         0x00000000c0020f5f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020f60       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020fab        0x8 core/unixfile.32
 *fill*         0x00000000c0020fb3        0x1 
 .rodata.str1.4
                0x00000000c0020fb4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020fd4       0x1c core/unixfile.32
                0x00000000c0020fd4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020ff0       0x1c core/unixfile.32
                0x00000000c0020ff0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002100c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00212a0      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00213c6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c00213f9       0x11 dbg/kconsole.32
 *fill*         0x00000000c00213f9        0x3 
 .rodata        0x00000000c00213fc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002154c      0x169 dbg/usban.32
 *fill*         0x00000000c00216b5        0x3 
 .rodata.str1.4
                0x00000000c00216b8      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00217ef      0x1ad fs/symlink.32
                                        0x1bb (size before relaxing)
 .rodata.str1.1
                0x00000000c002199c       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c00219dd        0x3 
 .rodata._ZTV10Filesystem
                0x00000000c00219e0       0x6c fs/vfs.32
                0x00000000c00219e0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021a4c       0x1c fs/vfs.32
                0x00000000c0021a4c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021a68       0x1c fs/vfs.32
                0x00000000c0021a68                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021a84       0x2c hal/bus.32
                0x00000000c0021a84                vtable for Bus
 .rodata.str1.1
                0x00000000c0021ab0       0x1e hal/clock.32
 *fill*         0x00000000c0021ace        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021ad0       0x3c hal/clock.32
                0x00000000c0021ad0                vtable for Clock
 *fill*         0x00000000c0021b0c       0x14 
 .rodata        0x00000000c0021b20       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021b50       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021ba8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021ba8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021ba8       0x2c hal/device.32
                0x00000000c0021ba8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021bd4       0x2c hal/device.32
                0x00000000c0021bd4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021c00       0x2c hal/diskctrl.32
                0x00000000c0021c00                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021c2c       0x38 hal/diskphys.32
                0x00000000c0021c2c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021c64       0x3e hal/intctrl.32
 *fill*         0x00000000c0021ca2        0x2 
 .rodata.str1.4
                0x00000000c0021ca4       0x5d hal/intctrl.32
 .rodata        0x00000000c0021d01       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021d54       0x34 hal/keybrd.32
                0x00000000c0021d54                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021d88       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021dcc       0x2c hal/logidisk.32
                0x00000000c0021dcc                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021df8       0x2c hal/mouse.32
                0x00000000c0021df8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021e24       0x34 hal/nic.32
                0x00000000c0021e24                vtable for NIC
 .rodata.str1.1
                0x00000000c0021e58        0xb hal/partition.32
 *fill*         0x00000000c0021e63        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021e64       0x44 hal/serial.32
                0x00000000c0021e64                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021ea8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021ea8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021ea8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021ea8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021ea8       0x30 hal/timer.32
                0x00000000c0021ea8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021ed8       0x10 hal/vcache.32
                0x00000000c0021ed8                vtable for VCache
 .rodata.str1.1
                0x00000000c0021ee8       0x93 hal/video.32
 *fill*         0x00000000c0021f7b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021f7c       0x4c hal/video.32
                0x00000000c0021f7c                vtable for Video
 .rodata.str1.4
                0x00000000c0021fc8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0022063      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00221b9       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00221b9        0x8 hw/acpi.32
 *fill*         0x00000000c00221b9        0x3 
 .rodata._ZTV4ACPI
                0x00000000c00221bc       0x2c hw/acpi.32
                0x00000000c00221bc                vtable for ACPI
 .rodata.str1.1
                0x00000000c00221e8      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022363        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022364       0x2c hw/cpu.32
                0x00000000c0022364                vtable for CPU
 .rodata.str1.1
                0x00000000c0022390       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00223d0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c002240c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c002249d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022566       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00225ae       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00225d9       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002264f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022694        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002269e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00226bf       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022755       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00227a9       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00227d5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00229a1       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00229f8      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022b08       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022b08       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022b08       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022b08        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022b08       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022bca        0x2 
 .rodata        0x00000000c0022bcc       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022bfc      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022d9b        0x1 
 .rodata.str1.4
                0x00000000c0022d9c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022e0f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022e24       0x3c arch/i386/rtc.32
                0x00000000c0022e24                vtable for RTC
 .rodata.str1.1
                0x00000000c0022e60       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022ea1        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022ea4       0x6c fs/fat/vfslink.32
                0x00000000c0022ea4                vtable for FAT
 .rodata.str1.1
                0x00000000c0022f10       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022f10      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0023048       0x6c fs/iso9660/vfslink.32
                0x00000000c0023048                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00230b4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00230f8       0x34 hal/sound/sndcard.32
                0x00000000c00230f8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c002312c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002316b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00231a3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023244       0x2c hw/bus/pci.32
                0x00000000c0023244                vtable for PCI
 .rodata.str1.1
                0x00000000c0023270       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c00232f7        0x1 
 .rodata._ZTV3IDE
                0x00000000c00232f8       0x2c hw/diskctrl/ide.32
                0x00000000c00232f8                vtable for IDE
 .rodata.str1.4
                0x00000000c0023324       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023348       0x2c hw/diskctrl/satabus.32
                0x00000000c0023348                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023374       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023386        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023388       0x38 hw/diskphys/ata.32
                0x00000000c0023388                vtable for ATA
 .rodata.str1.1
                0x00000000c00233c0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00233cd        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00233d0       0x38 hw/diskphys/atapi.32
                0x00000000c00233d0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0023408       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023484       0x38 hw/diskphys/sata.32
                0x00000000c0023484                vtable for SATA
 .rodata.str1.1
                0x00000000c00234bc       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00235a6        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00235a8       0x38 hw/diskphys/satapi.32
                0x00000000c00235a8                vtable for SATAPI
 .rodata        0x00000000c00235e0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00235e8       0x2c hw/intctrl/apic.32
                0x00000000c00235e8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023614       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002362f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023630       0x30 hw/timer/apictimer.32
                0x00000000c0023630                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023660       0x1d hw/timer/pit.32
 *fill*         0x00000000c002367d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023680       0x30 hw/timer/pit.32
                0x00000000c0023680                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00236b0      0xbb1
 *(.data)
 .data          0x00000000c00236b0        0x0 crti.32
 .data          0x00000000c00236b0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00236b0                __dso_handle
 .data          0x00000000c00236b4        0x0 acpica/utclib.32
 .data          0x00000000c00236b4        0x0 core/malloc.32
 .data          0x00000000c00236b4        0x0 libk/ctype.32
 .data          0x00000000c00236b4        0x0 libk/string.32
 .data          0x00000000c00236b4        0x0 fs/fat/diskio.32
 .data          0x00000000c00236b4        0x0 fs/fat/ff.32
 .data          0x00000000c00236b4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00236b4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00236b4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00236b4        0x0 core/computer.32
 .data          0x00000000c00236b4        0x0 core/gdt.32
 .data          0x00000000c00236b4        0x0 core/idle.32
 .data          0x00000000c00236b4        0x0 core/idt.32
 .data          0x00000000c00236b4        0x4 core/kheap.32
 .data          0x00000000c00236b8        0x0 core/main.32
 .data          0x00000000c00236b8        0x4 core/physmgr.32
                0x00000000c00236b8                Phys::bitmap
 .data          0x00000000c00236bc        0x0 core/pipe.32
 *fill*         0x00000000c00236bc        0x4 
 .data          0x00000000c00236c0       0x60 core/terminal.32
                0x00000000c00236c0                VgaText::hiddenOut
                0x00000000c00236e0                ansiToVGAMappings
 .data          0x00000000c0023720        0x0 core/tss.32
 .data          0x00000000c0023720        0x4 core/unixfile.32
                0x00000000c0023720                UnixFile::nextFd
 .data          0x00000000c0023724       0x15 core/virtmgr.32
                0x00000000c0023724                Virt::pageAllocPtr
                0x00000000c0023728                Virt::bitmap
                0x00000000c002372c                Virt::swapfileSectorsPerPage
                0x00000000c0023730                Virt::swapfileLength
                0x00000000c0023734                Virt::swapfileSector
                0x00000000c0023738                Virt::swapfileDrive
 *fill*         0x00000000c0023739        0x3 
 .data          0x00000000c002373c        0x4 coreobjs/c++.32
                0x00000000c002373c                __stack_chk_guard
 .data          0x00000000c0023740        0x0 dbg/kconsole.32
 .data          0x00000000c0023740       0x28 dbg/usban.32
                0x00000000c0023740                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023768        0x0 fs/symlink.32
 .data          0x00000000c0023768        0x0 fs/vfs.32
 .data          0x00000000c0023768        0x0 hal/bus.32
 .data          0x00000000c0023768        0x0 hal/buzzer.32
 .data          0x00000000c0023768        0x0 hal/clock.32
 .data          0x00000000c0023768        0x0 hal/device.32
 .data          0x00000000c0023768        0x0 hal/diskctrl.32
 .data          0x00000000c0023768        0x0 hal/diskphys.32
 .data          0x00000000c0023768        0x0 hal/fpu.32
 .data          0x00000000c0023768        0x0 hal/intctrl.32
 .data          0x00000000c0023768        0x0 hal/keybrd.32
 .data          0x00000000c0023768        0x0 hal/logidisk.32
 .data          0x00000000c0023768        0x0 hal/mouse.32
 .data          0x00000000c0023768        0x0 hal/nic.32
 .data          0x00000000c0023768        0x0 hal/partition.32
 .data          0x00000000c0023768        0x0 hal/serial.32
 .data          0x00000000c0023768        0x0 hal/timer.32
 .data          0x00000000c0023768        0x0 hal/vcache.32
 .data          0x00000000c0023768        0x0 hal/video.32
 .data          0x00000000c0023768       0x10 hw/acpi.32
                0x00000000c0023768                legacyIRQRemaps
 .data          0x00000000c0023778        0x4 hw/cpu.32
                0x00000000c0023778                lastCode
 .data          0x00000000c002377c        0x0 krnl/atexit.32
 *fill*         0x00000000c002377c        0x4 
 .data          0x00000000c0023780      0x142 krnl/bootmsg.32
                0x00000000c0023780                KiSplashScreen
 .data          0x00000000c00238c2        0x0 krnl/compat.32
 *fill*         0x00000000c00238c2       0x1e 
 .data          0x00000000c00238e0      0x400 krnl/crc32.32
                0x00000000c00238e0                KiPolyLookupCRC32
 .data          0x00000000c0023ce0       0x4d krnl/env.32
                0x00000000c0023ce0                defaultSysEnv
 .data          0x00000000c0023d2d        0x0 krnl/inlines.32
 .data          0x00000000c0023d2d        0x0 krnl/panic.32
 .data          0x00000000c0023d2d        0x0 krnl/powctrl.32
 .data          0x00000000c0023d2d        0x0 krnl/random.32
 .data          0x00000000c0023d2d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023d2d       0x13 
 .data          0x00000000c0023d40       0x4c krnl/signal.32
                0x00000000c0023d40                KiDefaultSignalHandlers
 *fill*         0x00000000c0023d8c       0x14 
 .data          0x00000000c0023da0       0xfc krnl/syscalls.32
                0x00000000c0023da0                systemCallHandlers
 .data          0x00000000c0023e9c        0x0 net/ethernet.32
 *fill*         0x00000000c0023e9c        0x4 
 .data          0x00000000c0023ea0      0x100 reg/cm.32
                0x00000000c0023ea0                CmComponents
 .data          0x00000000c0023fa0        0x0 reg/registry.32
 .data          0x00000000c0023fa0        0x0 sys/eject.32
 .data          0x00000000c0023fa0        0x0 sys/exit.32
 .data          0x00000000c0023fa0        0x0 sys/getcwd.32
 .data          0x00000000c0023fa0        0x0 sys/getpid.32
 .data          0x00000000c0023fa0        0x0 sys/getramdata.32
 .data          0x00000000c0023fa0        0x0 sys/getvgaptr.32
 .data          0x00000000c0023fa0        0x0 sys/kill.32
 .data          0x00000000c0023fa0        0x0 sys/loaddll.32
 .data          0x00000000c0023fa0        0x0 sys/read.32
 .data          0x00000000c0023fa0        0x0 sys/registersignal.32
 .data          0x00000000c0023fa0        0x0 sys/registry.32
 .data          0x00000000c0023fa0        0x0 sys/sbrk.32
 .data          0x00000000c0023fa0        0x0 sys/setcwd.32
 .data          0x00000000c0023fa0        0x0 sys/settime.32
 .data          0x00000000c0023fa0        0x0 sys/symlink.32
 .data          0x00000000c0023fa0        0x0 sys/timezone.32
 .data          0x00000000c0023fa0        0x0 sys/truncate.32
 .data          0x00000000c0023fa0        0x0 sys/write.32
 .data          0x00000000c0023fa0        0x0 sys/wsbe.32
 .data          0x00000000c0023fa0        0x0 sys/yield.32
 .data          0x00000000c0023fa0        0x0 thr/elf.32
 .data          0x00000000c0023fa0        0x4 thr/prcssthr.32
                0x00000000c0023fa0                Thr::nextPID
 .data          0x00000000c0023fa4        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023fa4       0x1c 
 .data          0x00000000c0023fc0      0x2a0 arch/i386/hal.32
                0x00000000c0023fc0                exceptionNames
 .data          0x00000000c0024260        0x0 arch/i386/pic.32
 .data          0x00000000c0024260        0x0 arch/i386/rtc.32
 .data          0x00000000c0024260        0x0 arch/i386/vga.32
 .data          0x00000000c0024260        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024260        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024260        0x1 fs/iso9660/vfslink.32
                0x00000000c0024260                recentDriveletter
 .data          0x00000000c0024261        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024261        0x0 hal/sound/sndport.32
 .data          0x00000000c0024261        0x0 hw/bus/isa.32
 .data          0x00000000c0024261        0x0 hw/bus/pci.32
 .data          0x00000000c0024261        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024261        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024261        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024261        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024261        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024261        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024261        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024261        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024261        0x0 hw/timer/pit.32
 .data          0x00000000c0024261        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024261        0x0 crtn.32
 .data          0x00000000c0024261        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024261        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024261        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024261        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024264        0x0
 .got           0x00000000c0024264        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024264        0x0
 .got.plt       0x00000000c0024264        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024264        0x0
 .igot.plt      0x00000000c0024264        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024264        0x0
 .tm_clone_table
                0x00000000c0024264        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024264        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024261      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024261        0x3 
 .eh_frame      0x00000000c0024264        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024264        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024264       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00242bc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00242fc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024368       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
