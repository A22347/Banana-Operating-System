Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x20dce
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x254 dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f06                Dbg::logs(char*)
                0x00000000c0006f25                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f43                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f64                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000709a        0x2 
 .text          0x00000000c000709c      0x2d4 dbg/usban.32
                0x00000000c000709c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007108                __ubsan_handle_type_mismatch_v1
                0x00000000c00071e4                __ubsan_handle_pointer_overflow
                0x00000000c0007210                __ubsan_handle_out_of_bounds
                0x00000000c000723c                __ubsan_handle_add_overflow
                0x00000000c0007268                __ubsan_handle_load_invalid_value
                0x00000000c0007294                __ubsan_handle_divrem_overflow
                0x00000000c00072c0                __ubsan_handle_mul_overflow
                0x00000000c00072ec                __ubsan_handle_sub_overflow
                0x00000000c0007318                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007344                __ubsan_handle_negate_overflow
 .text          0x00000000c0007370      0x814 fs/symlink.32
                0x00000000c00074bf                KiDeinitialiseSymlinks(void*)
                0x00000000c0007552                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075d5                KeInitialiseSymlinks()
                0x00000000c0007737                KiIsSymlinkRegistered(char const*)
                0x00000000c00078a1                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a48                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b84      0xd88 fs/vfs.32
                0x00000000c0007b84                File::read(unsigned long long, void*, int*)
                0x00000000c0007bdc                File::write(unsigned long long, void*, int*)
                0x00000000c0007c34                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cba                File::isAtty()
                0x00000000c0007cbe                Directory::isAtty()
                0x00000000c0007cc2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cc8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cce                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cf8                File::~File()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d46                Directory::~Directory()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007da2                Filesystem::~Filesystem()
                0x00000000c0007dc6                Fs::getcwd(Process*, char*, int)
                0x00000000c0007df0                Fs::initVFS()
                0x00000000c0007e1a                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008150                File::open(FileOpenMode)
                0x00000000c00081ae                File::close()
                0x00000000c000820e                File::seek(unsigned long long)
                0x00000000c0008264                File::truncate(unsigned long long)
                0x00000000c00082ba                File::tell(unsigned long long*)
                0x00000000c000830a                File::rewind()
                0x00000000c000831e                File::unlink()
                0x00000000c000836a                File::rename(char const*)
                0x00000000c00083b8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0008414                File::exists()
                0x00000000c0008452                File::stat(unsigned long long*, bool*)
                0x00000000c00084b3                Fs::setcwd(Process*, char*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c00086da                Directory::open()
                0x00000000c0008736                Directory::close()
                0x00000000c0008796                Directory::unlink()
                0x00000000c00087e2                Directory::rename(char const*)
                0x00000000c0008830                Directory::exists()
                0x00000000c000886e                Directory::read(dirent*)
                0x00000000c00088ba                Directory::create()
                0x00000000c0008906                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000890c       0x86 hal/bus.32
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008968                Bus::~Bus()
 .text          0x00000000c0008992       0x99 hal/buzzer.32
                0x00000000c0008992                KeBeepThread(void*)
                0x00000000c00089d2                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a2b        0x1 
 .text          0x00000000c0008a2c      0x543 hal/clock.32
                0x00000000c0008a2c                KeLoadClockSettings()
                0x00000000c0008b32                Clock::Clock(char const*)
                0x00000000c0008b32                Clock::Clock(char const*)
                0x00000000c0008b68                Clock::~Clock()
                0x00000000c0008b68                Clock::~Clock()
                0x00000000c0008b8c                Clock::~Clock()
                0x00000000c0008bb6                Clock::timeInSecondsLocal()
                0x00000000c0008bfe                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0008c57                KeDatetimeToSeconds(datetime_t)
                0x00000000c0008d76                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0008e03                KeSecondsToDatetime(unsigned long long)
                0x00000000c0008f4a                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0008f6f        0x1 
 .text          0x00000000c0008f70      0x47a hal/device.32
                0x00000000c0008f70                Device::hibernate()
                0x00000000c0008f72                Device::wake()
                0x00000000c0008f74                Device::detect()
                0x00000000c0008f76                Device::disableLegacy()
                0x00000000c0008f78                Device::powerSaving(PowerSavingLevel)
                0x00000000c0008f7a                DriverlessDevice::close(int, int, void*)
                0x00000000c0008f7e                DriverlessDevice::detect()
                0x00000000c0008f80                DriverlessDevice::open(int, int, void*)
                0x00000000c0008f94                Device::~Device()
                0x00000000c0008f94                Device::~Device()
                0x00000000c0008fa2                Device::~Device()
                0x00000000c0008fca                Device::findAndLoadDriver()
                0x00000000c0008fd8                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0008ffe                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000903e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009068                Device::getParent()
                0x00000000c0009074                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009092                Device::addChild(Device*)
                0x00000000c00090d6                Device::removeAllChildren()
                0x00000000c000911c                Device::hibernateAll()
                0x00000000c000914c                Device::wakeAll()
                0x00000000c000917c                Device::detectAll()
                0x00000000c00091ac                Device::disableLegacyAll()
                0x00000000c00091ae                Device::loadDriversForAll()
                0x00000000c00091b0                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00091e6                Device::setName(char const*)
                0x00000000c00091f4                Device::Device(char const*)
                0x00000000c00091f4                Device::Device(char const*)
                0x00000000c00092f0                Device::getName()
                0x00000000c00092fa                Device::closeAll()
                0x00000000c0009346                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009346                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000937c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00093c0                getDevicesOfType(DeviceType)
 *fill*         0x00000000c00093ea        0x2 
 .text          0x00000000c00093ec       0x86 hal/diskctrl.32
                0x00000000c00093ec                HardDiskController::HardDiskController(char const*)
                0x00000000c00093ec                HardDiskController::HardDiskController(char const*)
                0x00000000c0009424                HardDiskController::~HardDiskController()
                0x00000000c0009424                HardDiskController::~HardDiskController()
                0x00000000c0009448                HardDiskController::~HardDiskController()
 .text          0x00000000c0009472       0xe2 hal/diskphys.32
                0x00000000c0009472                PhysicalDisk::eject()
                0x00000000c0009476                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009476                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00094de                PhysicalDisk::startCache()
                0x00000000c0009506                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009506                PhysicalDisk::~PhysicalDisk()
                0x00000000c000952a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009554        0x0 hal/fpu.32
 .text          0x00000000c0009554        0x0 hal/intctrl.32
 .text          0x00000000c0009554      0x874 hal/keybrd.32
                0x00000000c0009554                startGUI(void*)
                0x00000000c00095b9                startGUIVESA(void*)
                0x00000000c000961e                sendKeyToTerminal(unsigned char)
                0x00000000c00096f4                sendKeyboardToken(KeyboardToken)
                0x00000000c0009bb0                clearInternalKeybuffer(VgaText*)
                0x00000000c0009be5                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0009d3e                Keyboard::Keyboard(char const*)
                0x00000000c0009d3e                Keyboard::Keyboard(char const*)
                0x00000000c0009d7a                Keyboard::~Keyboard()
                0x00000000c0009d7a                Keyboard::~Keyboard()
                0x00000000c0009d9e                Keyboard::~Keyboard()
 .text          0x00000000c0009dc8      0x3f8 hal/logidisk.32
                0x00000000c0009dc8                LogicalDisk::close(int, int, void*)
                0x00000000c0009dcc                LogicalDisk::~LogicalDisk()
                0x00000000c0009dcc                LogicalDisk::~LogicalDisk()
                0x00000000c0009df0                LogicalDisk::~LogicalDisk()
                0x00000000c0009e1a                LogicalDisk::open(int, int, void*)
                0x00000000c0009e2e                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0009e66                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0009eac                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009eac                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009f6c                LogicalDisk::assignDriveLetter()
                0x00000000c000a026                LogicalDisk::mount()
                0x00000000c000a06e                LogicalDisk::unmount()
                0x00000000c000a07e                LogicalDisk::eject()
                0x00000000c000a092                LogicalDisk::unassignDriveLetter()
                0x00000000c000a0e8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000a154                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000a1c0       0x86 hal/mouse.32
                0x00000000c000a1c0                Mouse::Mouse(char const*)
                0x00000000c000a1c0                Mouse::Mouse(char const*)
                0x00000000c000a1f8                Mouse::~Mouse()
                0x00000000c000a1f8                Mouse::~Mouse()
                0x00000000c000a21c                Mouse::~Mouse()
 .text          0x00000000c000a246       0x90 hal/nic.32
                0x00000000c000a246                NIC::getMAC()
                0x00000000c000a24c                NIC::write(int, unsigned char*, int*)
                0x00000000c000a252                NIC::NIC(char const*)
                0x00000000c000a252                NIC::NIC(char const*)
                0x00000000c000a288                NIC::~NIC()
                0x00000000c000a288                NIC::~NIC()
                0x00000000c000a2ac                NIC::~NIC()
 .text          0x00000000c000a2d6      0x33b hal/partition.32
                0x00000000c000a2d6                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a37e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000a611        0x3 
 .text          0x00000000c000a614       0x86 hal/serial.32
                0x00000000c000a614                Serial::Serial(char const*)
                0x00000000c000a614                Serial::Serial(char const*)
                0x00000000c000a64c                Serial::~Serial()
                0x00000000c000a64c                Serial::~Serial()
                0x00000000c000a670                Serial::~Serial()
 *fill*         0x00000000c000a69a        0x2 
 .text          0x00000000c000a69c      0x204 hal/timer.32
                0x00000000c000a69c                Timer::Timer(char const*)
                0x00000000c000a69c                Timer::Timer(char const*)
                0x00000000c000a6d4                Timer::~Timer()
                0x00000000c000a6d4                Timer::~Timer()
                0x00000000c000a6f8                Timer::~Timer()
                0x00000000c000a722                Timer::read()
                0x00000000c000a72d                setupTimer(int)
                0x00000000c000a768                timerHandler(unsigned int)
 .text          0x00000000c000a8a0      0x5fe hal/vcache.32
                0x00000000c000a8a0                VCache::VCache(PhysicalDisk*)
                0x00000000c000a8a0                VCache::VCache(PhysicalDisk*)
                0x00000000c000aa10                VCache::invalidateReadBuffer()
                0x00000000c000aa20                VCache::writeWriteBuffer()
                0x00000000c000aa6c                VCache::~VCache()
                0x00000000c000aa6c                VCache::~VCache()
                0x00000000c000aac4                VCache::~VCache()
                0x00000000c000aaec                VCache::write(unsigned long long, int, void*)
                0x00000000c000acba                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ae9e      0x70e hal/video.32
                0x00000000c000ae9e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000aeea                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000af5a                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000afd8                Video::clearScreen(unsigned int)
                0x00000000c000b00c                Video::putpixel(int, int, unsigned int)
                0x00000000c000b01a                Video::readPixelApprox(int, int)
                0x00000000c000b02e                Video::Video(char const*)
                0x00000000c000b02e                Video::Video(char const*)
                0x00000000c000b064                Video::~Video()
                0x00000000c000b064                Video::~Video()
                0x00000000c000b088                Video::~Video()
                0x00000000c000b0b2                Video::isMonochrome()
                0x00000000c000b0be                Video::getWidth()
                0x00000000c000b0ca                Video::getHeight()
                0x00000000c000b0d6                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000b192                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000b53c                Video::putTGA(int, int, unsigned char*, int)
 .text          0x00000000c000b5ac     0x114f hw/acpi.32
                0x00000000c000b5ac                ACPI::close(int, int, void*)
                0x00000000c000b5b4                loadACPITables(unsigned char*)
                0x00000000c000b814                findRSDT(unsigned char*)
                0x00000000c000b960                findDataTable(unsigned char*, char*)
                0x00000000c000b9d4                scanMADT()
                0x00000000c000be2c                ACPI::ACPI()
                0x00000000c000be2c                ACPI::ACPI()
                0x00000000c000be80                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000bf7c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000c048                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000c050                ACPI::detectPCI()
                0x00000000c000c25c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000c274                ACPI::open(int, int, void*)
 *fill*         0x00000000c000c6fb        0x1 
 .text          0x00000000c000c6fc       0xea krnl/assert.32
                0x00000000c000c6fc                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000c7e6       0xb6 krnl/atexit.32
                0x00000000c000c7e6                KeInitialiseAtexit()
                0x00000000c000c805                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000c839                KeExecuteAtexit()
 .text          0x00000000c000c89c       0x9f krnl/bootmsg.32
                0x00000000c000c89c                KeDisplaySplashScreen()
                0x00000000c000c8cb                KeSetBootMessage(char const*)
 .text          0x00000000c000c93b       0x5f krnl/c++.32
                0x00000000c000c93b                __cxa_atexit
                0x00000000c000c93e                __cxa_finalize
                0x00000000c000c93f                __stack_chk_fail
                0x00000000c000c975                __cxa_pure_virtual
                0x00000000c000c986                operator new[](unsigned long)
                0x00000000c000c98b                operator delete(void*, unsigned long)
                0x00000000c000c990                operator delete[](void*)
                0x00000000c000c995                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000c99a        0x2 
 .text          0x00000000c000c99c       0x44 krnl/cdefs.32
                0x00000000c000c99c                CUnlockScheduler
                0x00000000c000c9b4                CLockScheduler
                0x00000000c000c9c4                CPrintf
 .text          0x00000000c000c9e0      0xd56 krnl/cm.32
                0x00000000c000c9e0                CmOpen(char const*)
                0x00000000c000cafe                CmClose(Reghive_Tag*)
                0x00000000c000cb14                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000cb50                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000cbc7                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000cc06                CmGetNext(Reghive_Tag*, int)
                0x00000000c000cc38                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000cc74                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000cc9c                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000ccbd                CmExpand(Reghive_Tag*, int)
                0x00000000c000cd38                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000cdbe                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000ceb2                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000cfee                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d04f                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d07f                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000d0b6                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000d0e0                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000d120                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000d1c4                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000d1f2                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000d390                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000d3dd                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d457                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000d4aa                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d56e                zStrtok(char*, char const*)
                0x00000000c000d5e0                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000d661                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000d704                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000d736        0x2 
 .text          0x00000000c000d738       0x1d krnl/compat.32
                0x00000000c000d738                Krnl::handlePowerButton()
                0x00000000c000d748                Krnl::handleSleepButton()
 *fill*         0x00000000c000d755        0x1 
 .text          0x00000000c000d756      0x2c3 krnl/computer.32
                0x00000000c000d756                Computer::close(int, int, void*)
                0x00000000c000d75c                Computer::open(int, int, void*)
                0x00000000c000d842                KeFirstTask()
                0x00000000c000d964                Computer::Computer()
                0x00000000c000d964                Computer::Computer()
                0x00000000c000d9a8                KePrepareShutdown()
                0x00000000c000d9c8                KeShutdown()
                0x00000000c000d9ec                KeSleep()
                0x00000000c000d9f8                KeRestart()
 .text          0x00000000c000da19       0x2b krnl/crc32.32
                0x00000000c000da19                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000da44      0x5bf krnl/env.32
                0x00000000c000da44                EnvVarContainer::getEnv(char const*)
                0x00000000c000da82                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000db44                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000db46                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000dd6a                EnvVarContainer::__loadSystem()
                0x00000000c000dd84                EnvVarContainer::__loadUser()
                0x00000000c000dd86                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000dd86                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000dda8                EnvVarContainer::~EnvVarContainer()
                0x00000000c000dda8                EnvVarContainer::~EnvVarContainer()
                0x00000000c000ddd8                KeGetEnv(Process*, char const*)
                0x00000000c000de3d                KeSetEnvSystem(char const*, char const*)
                0x00000000c000de57                KeSetEnvUser(char const*, char const*)
                0x00000000c000de76                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000de89                KeDeleteEnvSystem(char const*)
                0x00000000c000de8a                KeDeleteEnvUser(char const*)
                0x00000000c000de8b                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000de8c                KeNewProcessEnv(Process*)
                0x00000000c000deae                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000defa                KeLoadSystemEnv()
                0x00000000c000df28                KeLoadUserEnv()
                0x00000000c000df4e                KeFlushEnv()
                0x00000000c000df4f                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000df6f                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e003        0x1 
 .text          0x00000000c000e004      0x361 krnl/fault.32
                0x00000000c000e004                KeSetupInterrupts()
                0x00000000c000e07c                int_handler
                0x00000000c000e1ac                KeDisplayProgramFault(char const*)
                0x00000000c000e1fc                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e250                KePageFault(void*, void*)
                0x00000000c000e2b4                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e2c4                KeOtherFault(void*, void*)
                0x00000000c000e2f8                KeOpcodeFault(void*, void*)
                0x00000000c000e34c                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000e365        0x1 
 .text          0x00000000c000e366      0x1db krnl/gdt.32
                0x00000000c000e366                GDTEntry::setBase(unsigned int)
                0x00000000c000e382                GDTEntry::setLimit(unsigned int)
                0x00000000c000e3a0                GDT::GDT()
                0x00000000c000e3a0                GDT::GDT()
                0x00000000c000e3b6                GDT::addEntry(GDTEntry)
                0x00000000c000e3d8                GDT::getNumberOfEntries()
                0x00000000c000e3e0                GDT::flush()
                0x00000000c000e402                GDT::setup()
 .text          0x00000000c000e541       0x20 krnl/idle.32
                0x00000000c000e541                idleFunction(void*)
 *fill*         0x00000000c000e561        0x3 
 .text          0x00000000c000e564      0x46c krnl/idt.32
                0x00000000c000e564                IDTEntry::IDTEntry(bool)
                0x00000000c000e564                IDTEntry::IDTEntry(bool)
                0x00000000c000e5de                IDTEntry::setOffset(unsigned int)
                0x00000000c000e5f4                IDT::IDT()
                0x00000000c000e5f4                IDT::IDT()
                0x00000000c000e5f6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000e5fe                IDT::addEntry(IDTEntry, int)
                0x00000000c000e618                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000e650                IDT::flush()
                0x00000000c000e66a                IDT::setup()
 .text          0x00000000c000e9d0       0x9a krnl/inlines.32
                0x00000000c000e9d0                CPU::current()
                0x00000000c000e9dc                operator new(unsigned long)
                0x00000000c000e9e1                operator delete(void*)
                0x00000000c000e9e6                disableIRQs()
                0x00000000c000e9e8                enableIRQs()
                0x00000000c000e9ea                lockScheduler()
                0x00000000c000e9f2                unlockScheduler()
                0x00000000c000ea04                lockStuff()
                0x00000000c000ea12                unlockStuff()
                0x00000000c000ea4f                Virt::getAKernelVAS()
                0x00000000c000ea55                __not_memcpy
 .text          0x00000000c000ea6a      0x2bc krnl/intlformat.32
                0x00000000c000ea6a                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000ec5a                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000ec7c                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000ec9e                KeSetLocale(klocale_t)
                0x00000000c000ecb4                KeInitialiseLocale()
                0x00000000c000ed22                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000ed23                KeFormatCurrency(char*, int, double)
                0x00000000c000ed24                KeFormatNumber(char*, long long, long long)
                0x00000000c000ed25                KeFormatNumber(char*, double)
 *fill*         0x00000000c000ed26        0x2 
 .text          0x00000000c000ed28      0x42e krnl/intops.32
                0x00000000c000ed28                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000eeb0                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f05c                KeGetDigitsInNumber(long long)
                0x00000000c000f0c8                KeItoa(unsigned long long, char*)
                0x00000000c000f0f8                KeItoa(long long, char*)
                0x00000000c000f128                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f156      0x207 krnl/kheap.32
                0x00000000c000f156                sbrk
                0x00000000c000f1ed                sbrk_thunk
                0x00000000c000f223                mmap
                0x00000000c000f281                munmap
                0x00000000c000f296                liballoc_lock()
                0x00000000c000f2a4                liballoc_unlock()
                0x00000000c000f2bc                liballoc_alloc(int)
                0x00000000c000f2d4                liballoc_free(void*, int)
                0x00000000c000f2ef                realloc
                0x00000000c000f303                malloc
                0x00000000c000f313                free
                0x00000000c000f323                rfree
                0x00000000c000f333                calloc
 *fill*         0x00000000c000f35d        0x3 
 .text          0x00000000c000f360      0x1d3 krnl/mailbox.32
                0x00000000c000f360                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000f3c0                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000f420                KeMailboxCreate()
                0x00000000c000f454                KeMailboxPost(Mailbox*, void*)
                0x00000000c000f4b8                KeMailboxGet(Mailbox*, void**)
                0x00000000c000f51c                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000f533       0xfd krnl/main.32
                0x00000000c000f533                KeEntryPoint
 .text          0x00000000c000f630       0x1a krnl/mutex.32
                0x00000000c000f630                Mutex::Mutex()
                0x00000000c000f630                Mutex::Mutex()
 .text          0x00000000c000f64a        0xc krnl/panic.32
                0x00000000c000f64a                KePanic(char const*)
 .text          0x00000000c000f656      0x667 krnl/physmgr.32
                0x00000000c000f656                Phys::allocateDMA(unsigned long)
                0x00000000c000f73e                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000f779                Phys::setPageState(unsigned long, bool)
                0x00000000c000f7b9                Phys::getPageState(unsigned long)
                0x00000000c000f7d5                Phys::freePage(unsigned long)
                0x00000000c000f83e                Phys::allocatePage()
                0x00000000c000f91c                Phys::allocateContiguousPages(int)
                0x00000000c000f997                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000f9cf                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000fcbd        0x1 
 .text          0x00000000c000fcbe      0x275 krnl/pipe.32
                0x00000000c000fcbe                Pipe::isAtty()
                0x00000000c000fcc2                Pipe::~Pipe()
                0x00000000c000fcc2                Pipe::~Pipe()
                0x00000000c000fce6                Pipe::~Pipe()
                0x00000000c000fd0e                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000fdce                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000fecc                Pipe::Pipe(int)
                0x00000000c000fecc                Pipe::Pipe(int)
 .text          0x00000000c000ff33      0x10b krnl/powctrl.32
                0x00000000c000ff33                KePowerThread(void*)
                0x00000000c000ff64                KeChangePowerSettings(PowerSettings)
                0x00000000c000ff7a                KeUserIOReceived()
                0x00000000c000ff85                KeHandlePowerButton()
                0x00000000c000ff9d                KeHandleSleepButton()
                0x00000000c000ffb5                KeSetupPowerManager()
 .text          0x00000000c001003e       0x9d krnl/random.32
                0x00000000c001003e                KeRand()
                0x00000000c0010080                KeSeedRand(unsigned int)
                0x00000000c00100a9                KeInitRand()
 *fill*         0x00000000c00100db        0x1 
 .text          0x00000000c00100dc      0x1bc krnl/resolve.32
                0x00000000c00100dc                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010298      0x401 krnl/semaphore.32
                0x00000000c0010298                Semaphore::Semaphore(int)
                0x00000000c0010298                Semaphore::Semaphore(int)
                0x00000000c00102c8                Semaphore::tryAcquire()
                0x00000000c001039c                Semaphore::assertLocked(char const*)
                0x00000000c0010428                Semaphore::acquire(int)
                0x00000000c00105cc                Semaphore::acquire()
                0x00000000c00105e8                Semaphore::release()
 .text          0x00000000c0010699      0x322 krnl/signal.32
                0x00000000c0010699                KiSigKill(int)
                0x00000000c00106ad                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00106ae                KiDefaultSignalHandlerPause(int)
                0x00000000c00106da                KiDefaultSignalHandlerResume(int)
                0x00000000c0010706                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001070b                KeInitSignals()
                0x00000000c001075d                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010793                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010810                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010907                KiCheckSignalZ
                0x00000000c0010949                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010984                KiFinishSignalZ
 .text          0x00000000c00109bb      0xe33 krnl/syscalls.32
                0x00000000c00109bb                SysSeekDir(regs*)
                0x00000000c00109c0                SysTellDir(regs*)
                0x00000000c00109c5                SysVerify(regs*)
                0x00000000c00109cf                SysGetArgc(regs*)
                0x00000000c00109e3                SysTTYName(regs*)
                0x00000000c00109eb                SysFormatDisk(regs*)
                0x00000000c0010a62                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010ab6                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010b0f                SysRealpath(regs*)
                0x00000000c0010b53                SysReadDir(regs*)
                0x00000000c0010bd3                SysIsATTY(regs*)
                0x00000000c0010c2d                SysSeek(regs*)
                0x00000000c0010c8b                SysTell(regs*)
                0x00000000c0010d00                SysSize(regs*)
                0x00000000c0010d7a                SysSizeFromFilename(regs*)
                0x00000000c0010ea4                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0010fce                SysClose(regs*)
                0x00000000c001102e                SysOpenDir(regs*)
                0x00000000c00110ab                SysMakeDir(regs*)
                0x00000000c0011119                SysCloseDir(regs*)
                0x00000000c001116d                SysWait(regs*)
                0x00000000c001118e                SysNotImpl(regs*)
                0x00000000c00111a9                SysPanic(regs*)
                0x00000000c00111c4                SysRmdir(regs*)
                0x00000000c0011229                SysUnlink(regs*)
                0x00000000c001128e                SysGetArgv(regs*)
                0x00000000c00112db                SysUSleep(regs*)
                0x00000000c0011304                SysSpawn(regs*)
                0x00000000c0011377                SysGetEnv(regs*)
                0x00000000c0011428                SysSetFatAttrib(regs*)
                0x00000000c001149b                SysShutdown(regs*)
                0x00000000c00114f8                SysPipe(regs*)
                0x00000000c001153d                SysGetUnixTime(regs*)
                0x00000000c0011551                string_ends_with(char const*, char const*)
                0x00000000c0011599                SysOpen(regs*)
                0x00000000c0011790                KeSystemCall(regs*, void*)
 .text          0x00000000c00117ee      0xb0b krnl/terminal.32
                0x00000000c00117ee                VgaText::isAtty()
                0x00000000c00117f2                VgaText::~VgaText()
                0x00000000c00117f2                VgaText::~VgaText()
                0x00000000c0011816                VgaText::~VgaText()
                0x00000000c0011840                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0011860                setTerminalScrollLock(bool)
                0x00000000c0011861                doTerminalCycle()
                0x00000000c0011862                addToTerminalCycle(VgaText*)
                0x00000000c0011863                scrollTerminalScrollLock(int)
                0x00000000c0011864                VgaText::updateTitle()
                0x00000000c0011866                VgaText::load()
                0x00000000c0011868                VgaText::updateCursor()
                0x00000000c001187e                VgaText::doANSI_SGR(int)
                0x00000000c00118f2                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0011902                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0011912                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0011932                VgaText::setTitleTextColour(VgaColour)
                0x00000000c001193e                VgaText::setTitleColour(VgaColour)
                0x00000000c001194a                VgaText::setTitle(char*)
                0x00000000c001194c                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c001195e                VgaText::scrollScreen()
                0x00000000c00119f0                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0011a00                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0011aac                VgaText::getCursorX()
                0x00000000c0011ab4                VgaText::getCursorY()
                0x00000000c0011abc                VgaText::setCursor(int, int)
                0x00000000c0011ad3                setActiveTerminal(VgaText*)
                0x00000000c0011b1e                VgaText::clearScreen()
                0x00000000c0011b6c                VgaText::setCursorX(int)
                0x00000000c0011b84                VgaText::setCursorY(int)
                0x00000000c0011b9c                VgaText::incrementCursor(bool)
                0x00000000c0011bf0                VgaText::decrementCursor(bool)
                0x00000000c0011c12                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0011ce2                VgaText::putchar(char)
                0x00000000c0011dda                VgaText::putx(unsigned int)
                0x00000000c0011e20                VgaText::puts(char const*)
                0x00000000c0011e46                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0011e92                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c001200c                VgaText::VgaText(char const*)
                0x00000000c001200c                VgaText::VgaText(char const*)
                0x00000000c001216c                VgaText::receiveKey(unsigned char)
                0x00000000c00122f8                VgaText::doUpdate()
 *fill*         0x00000000c00122f9        0x3 
 .text          0x00000000c00122fc      0x224 krnl/tss.32
                0x00000000c00122fc                TSS::TSS()
                0x00000000c00122fc                TSS::TSS()
                0x00000000c001230c                TSS::setESP(unsigned long)
                0x00000000c0012320                TSS::flush()
                0x00000000c0012340                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012520      0x4dc krnl/unixfile.32
                0x00000000c0012520                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012576                ReservedFilename::isAtty()
                0x00000000c0012592                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00125f0                UnixFile::getFileDescriptor()
                0x00000000c00125f8                UnixFile::UnixFile(int)
                0x00000000c00125f8                UnixFile::UnixFile(int)
                0x00000000c00127ac                ReservedFilename::ReservedFilename(int)
                0x00000000c00127ac                ReservedFilename::ReservedFilename(int)
                0x00000000c00127de                UnixFile::~UnixFile()
                0x00000000c00127de                UnixFile::~UnixFile()
                0x00000000c001287a                UnixFile::~UnixFile()
                0x00000000c00128a2                ReservedFilename::~ReservedFilename()
                0x00000000c00128a2                ReservedFilename::~ReservedFilename()
                0x00000000c00128c6                ReservedFilename::~ReservedFilename()
                0x00000000c00128ed                KeGetFileFromDescriptor(int)
 .text          0x00000000c00129fc     0x14bc krnl/virtmgr.32
                0x00000000c00129fc                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0012a36                Virt::getPageState(unsigned long)
                0x00000000c0012a59                Virt::allocateKernelVirtualPages(int)
                0x00000000c0012b7e                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0012ba1                Virt::swapIDToSector(unsigned long)
                0x00000000c0012bb7                Virt::allocateSwapfilePage()
                0x00000000c0012c37                Virt::virtualMemorySetup()
                0x00000000c0012c88                Virt::setupPageSwapping(int)
                0x00000000c0012cfa                VAS::setCPUSpecific(unsigned long)
                0x00000000c0012cfc                VAS::VAS(VAS*)
                0x00000000c0012cfc                VAS::VAS(VAS*)
                0x00000000c0012d14                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0012d42                VAS::getPageTableEntry(unsigned long)
                0x00000000c0012d61                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0012e9e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0012ec2                VAS::virtualToPhysical(unsigned long)
                0x00000000c0012edc                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0012f1e                VAS::VAS()
                0x00000000c0012f1e                VAS::VAS()
                0x00000000c0012f88                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0012fa8                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0012fd4                VAS::~VAS()
                0x00000000c0012fd4                VAS::~VAS()
                0x00000000c001313c                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013240                VAS::allocatePages(int, int)
                0x00000000c0013326                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c001337e                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013474                VAS::VAS(bool)
                0x00000000c0013474                VAS::VAS(bool)
                0x00000000c001365c                VAS::evict(unsigned long)
                0x00000000c0013760                VAS::canLockPage(unsigned long)
                0x00000000c001377a                VAS::unlockPage(unsigned long)
                0x00000000c00137ae                VAS::canLockPages(unsigned long, int)
                0x00000000c00137ea                VAS::unlockPages(unsigned long, int)
                0x00000000c0013826                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0013b36                VAS::lockPage(unsigned long)
                0x00000000c0013ba8                VAS::lockPages(unsigned long, int)
                0x00000000c0013be4                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0013c58                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0013c84                VAS::scanForEviction()
                0x00000000c0013dbd                mapVASFirstTime
 .text          0x00000000c0013eb8       0x36 sys/eject.32
                0x00000000c0013eb8                SysEject(regs*)
 .text          0x00000000c0013eee       0x18 sys/exit.32
                0x00000000c0013eee                SysExit(regs*)
 .text          0x00000000c0013f06       0x1f sys/getcwd.32
                0x00000000c0013f06                SysGetCwd(regs*)
 .text          0x00000000c0013f25       0x26 sys/getpid.32
                0x00000000c0013f25                SysGetPID(regs*)
 .text          0x00000000c0013f4b       0x21 sys/getramdata.32
                0x00000000c0013f4b                SysGetRAMData(regs*)
 .text          0x00000000c0013f6c       0x97 sys/getvgaptr.32
                0x00000000c0013f6c                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014003        0x1 
 .text          0x00000000c0014004       0xb9 sys/kill.32
                0x00000000c0014004                SysKill(regs*)
 .text          0x00000000c00140bd       0xa8 sys/loaddll.32
                0x00000000c00140bd                SysLoadDLL(regs*)
 .text          0x00000000c0014165       0x68 sys/read.32
                0x00000000c0014165                SysRead(regs*)
 .text          0x00000000c00141cd       0x29 sys/registersignal.32
                0x00000000c00141cd                SysRegisterSignal(regs*)
 .text          0x00000000c00141f6      0x1cc sys/registry.32
                0x00000000c00141f6                SysRegistryGetTypeFromPath(regs*)
                0x00000000c001423a                SysRegistryReadExtent(regs*)
                0x00000000c0014282                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014299                SysRegistryEnterDirectory(regs*)
                0x00000000c00142b0                SysRegistryGetNext(regs*)
                0x00000000c00142c7                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014301                SysRegistryOpen(regs*)
                0x00000000c0014315                SysRegistryClose(regs*)
                0x00000000c001432c                SysRegistryEasyReadString(regs*)
                0x00000000c0014378                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c00143c2       0x55 sys/sbrk.32
                0x00000000c00143c2                SysSbrk(regs*)
 .text          0x00000000c0014417       0x1c sys/setcwd.32
                0x00000000c0014417                SysSetCwd(regs*)
 .text          0x00000000c0014433       0xd7 sys/settime.32
                0x00000000c0014433                SysSetTime(regs*)
 .text          0x00000000c001450a       0x73 sys/symlink.32
                0x00000000c001450a                SysSymlink(regs*)
 .text          0x00000000c001457d       0x3f sys/timezone.32
                0x00000000c001457d                SysTimezone(regs*)
 .text          0x00000000c00145bc       0xfc sys/truncate.32
                0x00000000c00145bc                SysTruncate(regs*)
 .text          0x00000000c00146b8       0x68 sys/write.32
                0x00000000c00146b8                SysWrite(regs*)
 .text          0x00000000c0014720       0x9d sys/wsbe.32
                0x00000000c0014720                SysWsbe(regs*)
 .text          0x00000000c00147bd       0x28 sys/yield.32
                0x00000000c00147bd                SysYield(regs*)
 .text          0x00000000c00147e5     0x120b thr/elf.32
                0x00000000c00147e5                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014a77                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014c89                Thr::runtimeReferenceHelper()
                0x00000000c0014c9c                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014ceb                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014fa9                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00156e2                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015714                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001574b                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015765                Thr::loadDLL(char const*, bool)
                0x00000000c00159b7                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00159f0       0x5a thr/exec.32
                0x00000000c00159f0                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0015a4a        0x2 
 .text          0x00000000c0015a4c     0x11c5 thr/prcssthr.32
                0x00000000c0015a4c                userModeEntryPoint(void*)
                0x00000000c0015a78                changeTSS
                0x00000000c0015aa8                switchToThread(ThreadControlBlock*)
                0x00000000c0015b58                Process::addArgs(char**)
                0x00000000c0015bc4                Process::Process(char const*, Process*, char**)
                0x00000000c0015bc4                Process::Process(char const*, Process*, char**)
                0x00000000c0015dec                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015dec                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015fd8                taskStartupFunction
                0x00000000c0015fe4                KeDisablePreemption()
                0x00000000c001600c                KeRestorePreemption()
                0x00000000c001602c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016140                Process::createUserThread()
                0x00000000c0016160                setupMultitasking(void (*)())
                0x00000000c0016284                schedule()
                0x00000000c0016318                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016344                blockTask(TaskState)
                0x00000000c0016380                waitTask(int, int*, int)
                0x00000000c00163c4                milliTenthSleepUntil(unsigned int)
                0x00000000c001646c                milliTenthSleep(unsigned int)
                0x00000000c0016480                sleep(unsigned int)
                0x00000000c001649c                taskReturned
                0x00000000c00164e4                Thr::processFromPID(int)
                0x00000000c0016594                unblockTask(ThreadControlBlock*)
                0x00000000c0016648                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001691c                cleanerTaskFunction(void*)
                0x00000000c0016a34                terminateTask(int)
                0x00000000c0016b44                Thr::terminateFromIRQ(int)
 .text          0x00000000c0016c11      0xd10 vm86/vm8086.32
                0x00000000c0016c11                Vm::inbv(unsigned short)
                0x00000000c0016c24                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016c5a                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016c6a                Vm::getSegment(unsigned int)
                0x00000000c0016c72                Vm::getOffset(unsigned int)
                0x00000000c0016c77                Vm::mainloop2()
                0x00000000c0016cb1                Vm::mainVm8086Loop(void*)
                0x00000000c0016cc4                Vm::mainloop3(unsigned long)
                0x00000000c0016cea                Vm::initialise8086()
                0x00000000c0016d2d                Vm::resetConventionalMemory8086()
                0x00000000c0016d2e                Vm::finish8086()
                0x00000000c0016d90                Vm::getOutput8086(unsigned char*)
                0x00000000c0016db5                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016ee2                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00170f0                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017189                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001719a                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00171ac                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00171bd                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00171d2                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00171e8                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00171fd                Vm::faultHandler(regs*)
 *fill*         0x00000000c0017921        0x1 
 .text          0x00000000c0017922     0x1ee7 arch/i386/hal.32
                0x00000000c0017922                noCopro(unsigned long)
                0x00000000c0017924                CPU::close(int, int, void*)
                0x00000000c0017927                x86ReadCMOS(unsigned char)
                0x00000000c001797b                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c00179db                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c00179fa                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0017a17                AMD_K6_writeback(int, int, int)
                0x00000000c0017ad7                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0017b75                cpuidCheckEDX(unsigned int)
                0x00000000c0017ba2                cpuidCheckECX(unsigned int)
                0x00000000c0017bd0                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0017bfe                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0017c2c                HalDetectFeatures()
                0x00000000c00189f7                HalEnableNMI()
                0x00000000c0018a0a                HalDisableNMI()
                0x00000000c0018a1d                HalGetNMIState()
                0x00000000c0018a23                x86rdmsr(unsigned int)
                0x00000000c0018a61                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0018aa6                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0018abc                HalFindRSDP()
                0x00000000c0018b51                HalHandlePageFault(void*, void*)
                0x00000000c0018bfe                HalHandleOpcodeFault(void*, void*)
                0x00000000c0018c40                HalDisplayDebugInfo(void*)
                0x00000000c0018fce                HalReceivedNMI()
                0x00000000c0019069                HalSystemIdle()
                0x00000000c00190c8                i386SaveCoprocessor(void*)
                0x00000000c00190dc                i386LoadCoprocessor(void*)
                0x00000000c00190f0                x87EmulHandler(regs*, void*)
                0x00000000c001918d                HalInitialiseCoprocessor()
                0x00000000c0019211                HalPanic(char const*)
                0x00000000c0019325                HalQueryPerformanceCounter()
                0x00000000c0019335                HalInitialise()
                0x00000000c00194c7                HalMakeBeep(int)
                0x00000000c0019501                HalGetRand()
                0x00000000c0019504                HalEndOfInterrupt(int)
                0x00000000c001952f                HalRestart()
                0x00000000c0019530                HalShutdown()
                0x00000000c0019531                HalSleep()
                0x00000000c0019532                CPU::CPU()
                0x00000000c0019532                CPU::CPU()
                0x00000000c00195b6                CPU::setupSMEP()
                0x00000000c00195c2                CPU::setupUMIP()
                0x00000000c00195cc                CPU::setupTSC()
                0x00000000c00195d6                CPU::setupLargePages()
                0x00000000c00195e0                CPU::setupPAT()
                0x00000000c0019612                CPU::setupMTRR()
                0x00000000c0019614                CPU::setupGlobalPages()
                0x00000000c001961e                CPU::allowUsermodeDataAccess()
                0x00000000c001962c                CPU::prohibitUsermodeDataAccess()
                0x00000000c001963a                CPU::setupSMAP()
                0x00000000c0019648                CPU::setupFeatures()
                0x00000000c0019714                CPU::open(int, int, void*)
 .text          0x00000000c0019809      0x261 arch/i386/intctrl.32
                0x00000000c0019809                convertLegacyIRQNumber(int)
                0x00000000c0019845                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001988f                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00199bd                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c00199f1                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c0019a6a        0x2 
 .text          0x00000000c0019a6c      0x2dc arch/i386/pic.32
                0x00000000c0019a6c                picIoWait()
                0x00000000c0019a74                picDisable()
                0x00000000c0019aa8                picGetIRQReg(int)
                0x00000000c0019b24                picOpen()
                0x00000000c0019ca8                picEOI(int)
 .text          0x00000000c0019d48      0x5f3 arch/i386/rtc.32
                0x00000000c0019d48                RTC::open(int, int, void*)
                0x00000000c0019d4c                RTC::close(int, int, void*)
                0x00000000c0019d50                RTC::timeInSecondsUTC()
                0x00000000c0019d62                RTC::timeInDatetimeUTC()
                0x00000000c0019d88                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0019dc6                RTC::~RTC()
                0x00000000c0019dc6                RTC::~RTC()
                0x00000000c0019dea                RTC::~RTC()
                0x00000000c0019e14                RTC::get_update_in_progress_flag()
                0x00000000c0019e28                RTC::completeRTCRefresh()
                0x00000000c001a0dc                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001a252                rtcIRQHandler(regs*, void*)
                0x00000000c001a292                RTC::RTC()
                0x00000000c001a292                RTC::RTC()
 *fill*         0x00000000c001a33b        0x1 
 .text          0x00000000c001a33c      0x1f4 arch/i386/vga.32
                0x00000000c001a33c                HalConsoleScroll(int, int)
                0x00000000c001a444                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001a4a8                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001a530     0x14cf fs/fat/vfslink.32
                0x00000000c001a530                FAT::getName()
                0x00000000c001a538                FAT::tell(void*, unsigned long long*)
                0x00000000c001a574                FAT::stat(void*, unsigned long long*)
                0x00000000c001a5b0                FAT::~FAT()
                0x00000000c001a5b0                FAT::~FAT()
                0x00000000c001a5d4                FAT::~FAT()
                0x00000000c001a5fc                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001a6a0                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001a764                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a948                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001ab64                FAT::allocateSwapfile(char const*, int)
                0x00000000c001ad24                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001ae94                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001aef4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001af54                FAT::close(void*)
                0x00000000c001afa8                FAT::closeDir(void*)
                0x00000000c001affc                FAT::truncate(void*, unsigned long long)
                0x00000000c001b068                FAT::seek(void*, unsigned long long)
                0x00000000c001b0c0                fatWrapperReadDisk
                0x00000000c001b100                fatWrapperWriteDisk
                0x00000000c001b140                fatWrapperIoctl
                0x00000000c001b25c                FAT::FAT()
                0x00000000c001b25c                FAT::FAT()
                0x00000000c001b2b4                FAT::fixFilepath(char*)
                0x00000000c001b2f4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001b468                FAT::openDir(char const*, void**)
                0x00000000c001b518                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b610                FAT::unlink(char const*)
                0x00000000c001b690                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b844                FAT::rename(char const*, char const*)
                0x00000000c001b910                FAT::mkdir(char const*)
                0x00000000c001b990                FAT::exists(char const*)
 *fill*         0x00000000c001b9ff        0x1 
 .text          0x00000000c001ba00       0x94 fs/iso9660/helper.32
                0x00000000c001ba00                isoReadDiscSectorHelper
                0x00000000c001ba5c                iso_kprintf
                0x00000000c001ba78                iso_kprintfd
 .text          0x00000000c001ba94      0x71c fs/iso9660/vfslink.32
                0x00000000c001ba94                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001ba9a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001baa0                ISO9660::getName()
                0x00000000c001baa6                ISO9660::closeDir(void*)
                0x00000000c001bab0                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001bab6                ISO9660::unlink(char const*)
                0x00000000c001babc                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001bac2                ISO9660::rename(char const*, char const*)
                0x00000000c001bac8                ISO9660::mkdir(char const*)
                0x00000000c001bace                ISO9660::~ISO9660()
                0x00000000c001bace                ISO9660::~ISO9660()
                0x00000000c001baf2                ISO9660::~ISO9660()
                0x00000000c001bb1a                ISO9660::exists(char const*)
                0x00000000c001bb2e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001bc14                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001bc5c                ISO9660::seek(void*, unsigned long long)
                0x00000000c001bc9e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001bcdc                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001bd2e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001be70                ISO9660::close(void*)
                0x00000000c001bea0                ISO9660::openDir(char const*, void**)
                0x00000000c001bf7a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c097                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001c116                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001c188                ISO9660::ISO9660()
                0x00000000c001c188                ISO9660::ISO9660()
 .text          0x00000000c001c1b0      0x26c hal/sound/sndcard.32
                0x00000000c001c1b0                SoundCard::beginPlayback()
                0x00000000c001c1be                SoundCard::stopPlayback()
                0x00000000c001c1cc                SoundCard::SoundCard(char const*)
                0x00000000c001c1cc                SoundCard::SoundCard(char const*)
                0x00000000c001c26a                SoundCard::~SoundCard()
                0x00000000c001c26a                SoundCard::~SoundCard()
                0x00000000c001c28e                SoundCard::~SoundCard()
                0x00000000c001c2b8                SoundCard::configureRates(int, int, int)
                0x00000000c001c2e8                SoundCard::getSamples16(int, short*)
                0x00000000c001c344                SoundCard::getSamples32(int, int*)
                0x00000000c001c3ca                SoundCard::addChannel(SoundPort*)
                0x00000000c001c408                SoundCard::removeChannel(int)
 .text          0x00000000c001c41c      0x426 hal/sound/sndport.32
                0x00000000c001c41c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c41c                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c4a8                SoundPort::~SoundPort()
                0x00000000c001c4a8                SoundPort::~SoundPort()
                0x00000000c001c4dc                SoundPort::unpause()
                0x00000000c001c4e8                SoundPort::pause()
                0x00000000c001c4f4                SoundPort::getBufferUsed()
                0x00000000c001c4fc                SoundPort::getBufferSize()
                0x00000000c001c504                SoundPort::buffer8(signed char*, int)
                0x00000000c001c598                SoundPort::buffer16(short*, int)
                0x00000000c001c62c                SoundPort::buffer32(int*, int)
                0x00000000c001c6b8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001c784                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001c842        0x0 hw/bus/isa.32
 .text          0x00000000c001c842      0xc23 hw/bus/pci.32
                0x00000000c001c842                PCI::open(int, int, void*)
                0x00000000c001c860                PCI::close(int, int, void*)
                0x00000000c001c864                PCI::PCI()
                0x00000000c001c864                PCI::PCI()
                0x00000000c001c8fc                PCI::readBAR8(unsigned int, int)
                0x00000000c001c918                PCI::readBAR16(unsigned int, int)
                0x00000000c001c936                PCI::readBAR32(unsigned int, int)
                0x00000000c001c952                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001c972                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001c994                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001c9b4                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ca2a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cad4                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001caf8                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001cb20                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001cb6a                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001cb92                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001cbb6                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001cbda                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001cc02                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cc66                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001cd4e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001d014                PCI::checkBus(unsigned char)
                0x00000000c001d038                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001d21e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001d39a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001d40c                PCI::detect()
 *fill*         0x00000000c001d465        0x1 
 .text          0x00000000c001d466      0xe56 hw/diskctrl/ide.32
                0x00000000c001d466                IDE::close(int, int, void*)
                0x00000000c001d46a                IDE::IDE()
                0x00000000c001d46a                IDE::IDE()
                0x00000000c001d49e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001d4b0                selectDrive(unsigned char, unsigned char)
                0x00000000c001d4b2                IDE::getBase(unsigned char)
                0x00000000c001d4c4                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001d584                IDE::read(unsigned char, unsigned char)
                0x00000000c001d632                IDE::waitInterrupt(unsigned char)
                0x00000000c001d694                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001d6b0                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001d6cc                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001d716                IDE::open(int, int, void*)
                0x00000000c001dc70                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001dd40                IDE::detect()
                0x00000000c001e1ae                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001e268                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001e2bc      0x33d hw/diskctrl/satabus.32
                0x00000000c001e2bc                SATABus::close(int, int, void*)
                0x00000000c001e2c0                SATABus::detect()
                0x00000000c001e2c2                SATABus::SATABus()
                0x00000000c001e2c2                SATABus::SATABus()
                0x00000000c001e348                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e37a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e3c2                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e3e2                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e40c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001e51c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001e5c6                SATABus::open(int, int, void*)
 *fill*         0x00000000c001e5f9        0x1 
 .text          0x00000000c001e5fa      0x7a9 hw/diskphys/ata.32
                0x00000000c001e5fa                ATA::close(int, int, void*)
                0x00000000c001e61e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001e620                ATA::ATA()
                0x00000000c001e620                ATA::ATA()
                0x00000000c001e64e                ATA::flush(bool)
                0x00000000c001e69c                ATA::readyForCommand()
                0x00000000c001e6e8                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ead8                ATA::read(unsigned long long, int, void*)
                0x00000000c001eb24                ATA::write(unsigned long long, int, void*)
                0x00000000c001eb70                ATA::detectCHS()
                0x00000000c001eb9a                ATA::open(int, int, void*)
                0x00000000c001ed85                combineCharAndColour(char, unsigned char)
                0x00000000c001ed96                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001eda3        0x1 
 .text          0x00000000c001eda4      0x618 hw/diskphys/atapi.32
                0x00000000c001eda4                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001edaa                ATAPI::close(int, int, void*)
                0x00000000c001edce                ATAPI::ATAPI()
                0x00000000c001edce                ATAPI::ATAPI()
                0x00000000c001edfc                ATAPI::readyForCommand()
                0x00000000c001ee4e                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001f116                ATAPI::diskRemoved()
                0x00000000c001f150                ATAPI::eject()
                0x00000000c001f198                ATAPI::diskInserted()
                0x00000000c001f1a4                ATAPI::detectMedia()
                0x00000000c001f262                ATAPI::open(int, int, void*)
                0x00000000c001f342                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f3bc      0x44c hw/diskphys/sata.32
                0x00000000c001f3bc                SATA::close(int, int, void*)
                0x00000000c001f3e0                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001f3e2                SATA::open(int, int, void*)
                0x00000000c001f49a                SATA::SATA()
                0x00000000c001f49a                SATA::SATA()
                0x00000000c001f4c8                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f750                SATA::read(unsigned long long, int, void*)
                0x00000000c001f79c                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001f808      0x5d0 hw/diskphys/satapi.32
                0x00000000c001f808                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001f80e                SATAPI::close(int, int, void*)
                0x00000000c001f832                SATAPI::SATAPI()
                0x00000000c001f832                SATAPI::SATAPI()
                0x00000000c001f860                SATAPI::diskRemoved()
                0x00000000c001f862                SATAPI::diskInserted()
                0x00000000c001f87e                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001fb5c                SATAPI::eject()
                0x00000000c001fb98                SATAPI::detectMedia()
                0x00000000c001fbee                SATAPI::open(int, int, void*)
                0x00000000c001fcee                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001fdd8      0x443 hw/intctrl/apic.32
                0x00000000c001fdd8                IOAPIC::close(int, int, void*)
                0x00000000c001fdde                apicGetBase()
                0x00000000c001fdfc                IOAPIC::IOAPIC()
                0x00000000c001fdfc                IOAPIC::IOAPIC()
                0x00000000c001fe24                apicOpen()
                0x00000000c001ffb0                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ffe2                IOAPIC::read(int)
                0x00000000c002000a                IOAPIC::open(int, int, void*)
                0x00000000c00200f0                IOAPIC::write(int, int)
                0x00000000c002011c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c002021b        0x1 
 .text          0x00000000c002021c       0xf0 hw/timer/apictimer.32
                0x00000000c002021c                APICTimer::close(int, int, void*)
                0x00000000c0020224                apicTimerHandler(regs*, void*)
                0x00000000c002024c                APICTimer::open(int, int, void*)
                0x00000000c00202bc                APICTimer::write(int)
                0x00000000c00202e4                APICTimer::APICTimer()
                0x00000000c00202e4                APICTimer::APICTimer()
 .text          0x00000000c002030c      0x1ad hw/timer/pit.32
                0x00000000c002030c                PIT::write(int)
                0x00000000c0020390                pitHandler(regs*, void*)
                0x00000000c00203b8                PIT::open(int, int, void*)
                0x00000000c0020408                PIT::close(int, int, void*)
                0x00000000c0020438                PIT::PIT()
                0x00000000c0020438                PIT::PIT()
 *fill*         0x00000000c00204b9        0x7 
 .text          0x00000000c00204c0       0x6f arch/i386/avx.32
                0x00000000c00204c0                avxDetect
                0x00000000c00204ea                avxSave
                0x00000000c00204fb                avxLoad
                0x00000000c002050c                avxInit
                0x00000000c002052e                avxClose
 *fill*         0x00000000c002052f        0x1 
 .text          0x00000000c0020530      0x2ec arch/i386/interrupt.32
                0x00000000c0020530                isr0
                0x00000000c0020540                isr1
                0x00000000c002054a                isr2
                0x00000000c0020554                isr3
                0x00000000c002055e                isr4
                0x00000000c0020568                isr5
                0x00000000c0020572                isr6
                0x00000000c002057c                isr7
                0x00000000c0020586                isr8
                0x00000000c002058e                isr9
                0x00000000c0020598                isr10
                0x00000000c00205a0                isr11
                0x00000000c00205a8                isr12
                0x00000000c00205b0                isr13
                0x00000000c00205ca                isr14
                0x00000000c00205d2                isr15
                0x00000000c00205dc                isr16
                0x00000000c00205e6                isr17
                0x00000000c00205f0                isr18
                0x00000000c00205fa                irq3
                0x00000000c0020604                irq4
                0x00000000c002060e                irq5
                0x00000000c0020618                irq6
                0x00000000c0020622                irq7
                0x00000000c002062c                irq8
                0x00000000c0020636                irq9
                0x00000000c0020640                irq10
                0x00000000c002064a                irq11
                0x00000000c0020654                irq12
                0x00000000c002065e                irq13
                0x00000000c0020668                irq14
                0x00000000c0020672                irq15
                0x00000000c002067c                irq1
                0x00000000c0020683                irq2
                0x00000000c002068a                isr96
                0x00000000c0020691                irq0
                0x00000000c0020696                int_common_stub
                0x00000000c00206c8                syscall_common_stub
                0x00000000c00207cc                irq16
                0x00000000c00207d6                irq17
                0x00000000c00207e0                irq18
                0x00000000c00207ea                irq19
                0x00000000c00207f4                irq20
                0x00000000c00207fe                irq21
                0x00000000c0020808                irq22
                0x00000000c0020812                irq23
 *fill*         0x00000000c002081c        0x4 
 .text          0x00000000c0020820       0x10 arch/i386/rdrand.32
                0x00000000c0020820                i386GetRDRAND
 .text          0x00000000c0020830       0x39 arch/i386/sse.32
                0x00000000c0020830                sseDetect
                0x00000000c0020848                sseSave
                0x00000000c0020850                sseLoad
                0x00000000c0020858                sseInit
                0x00000000c0020868                sseClose
 *fill*         0x00000000c0020869        0x7 
 .text          0x00000000c0020870       0x4f arch/i386/x87.32
                0x00000000c0020876                x87Detect
                0x00000000c0020897                x87Save
                0x00000000c002089e                x87Load
                0x00000000c00208a5                x87Init
                0x00000000c00208be                x87Close
 *fill*         0x00000000c00208bf        0x1 
 .text          0x00000000c00208c0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00208e5        0x0 crtn.32
 *fill*         0x00000000c00208e5        0x3 
 .text          0x00000000c00208e8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00208e8                __divdi3
 *fill*         0x00000000c0020a33        0x1 
 .text          0x00000000c0020a34      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0020a34                __moddi3
 *fill*         0x00000000c0020bb2        0x2 
 .text          0x00000000c0020bb4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0020bb4                __udivdi3
 *fill*         0x00000000c0020cb3        0x1 
 .text          0x00000000c0020cb4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0020cb4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0020dd0        0x0
 .iplt          0x00000000c0020dd0        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0020dce        0xf
 .init          0x00000000c0020dce        0x3 crti.32
                0x00000000c0020dce                _init
 .init          0x00000000c0020dd1        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0020dd6        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0020ddb        0x2 crtn.32

.fini           0x00000000c0020ddd        0xa
 .fini          0x00000000c0020ddd        0x3 crti.32
                0x00000000c0020ddd                _fini
 .fini          0x00000000c0020de0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0020de5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020de8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0020de8       0x1a hal/device.32
                0x00000000c0020de8                DriverlessDevice::~DriverlessDevice()
                0x00000000c0020de8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020e02       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020e02       0x2a hal/device.32
                0x00000000c0020e02                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0020e2c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0020e2c       0xdc hal/device.32
                0x00000000c0020e2c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020f08       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020f08       0x42 hal/device.32
                0x00000000c0020f08                LinkedList<Device>::LinkedList()
                0x00000000c0020f08                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0020f4c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0020f4c       0x1c hal/timer.32
                0x00000000c0020f4c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020f68        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020f68        0x7 hal/timer.32
                0x00000000c0020f68                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020f70       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020f70       0xbc hal/timer.32
                0x00000000c0020f70                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002102c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002102c       0xda hal/timer.32
                0x00000000c002102c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021108       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021108       0x23 hw/acpi.32
                0x00000000c0021108                ACPI::~ACPI()
                0x00000000c0021108                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002112c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002112c       0x2a hw/acpi.32
                0x00000000c002112c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021158        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021158        0x2 hw/acpi.32
                0x00000000c0021158                LinkedList<Device>::~LinkedList()
                0x00000000c0021158                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002115c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002115c       0x1c hw/acpi.32
                0x00000000c002115c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021178        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021178        0x7 hw/acpi.32
                0x00000000c0021178                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021180       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021180       0xb8 hw/acpi.32
                0x00000000c0021180                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0021238       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0021238       0x23 krnl/computer.32
                0x00000000c0021238                Computer::~Computer()
                0x00000000c0021238                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002125c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002125c       0x2a krnl/computer.32
                0x00000000c002125c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021286       0x24
 .text._Z10idleCommonv
                0x00000000c0021286       0x24 krnl/idle.32
                0x00000000c0021286                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00212aa        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00212aa        0x2 krnl/unixfile.32
                0x00000000c00212aa                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00212aa                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00212ac       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00212ac       0x42 krnl/unixfile.32
                0x00000000c00212ac                LinkedList<UnixFile>::LinkedList()
                0x00000000c00212ac                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00212ee       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00212ee       0xd3 krnl/unixfile.32
                0x00000000c00212ee                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00213c2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00213c2        0x7 krnl/unixfile.32
                0x00000000c00213c2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00213ca       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00213ca       0xa1 krnl/unixfile.32
                0x00000000c00213ca                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002146c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002146c        0x8 krnl/unixfile.32
                0x00000000c002146c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021474        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021474        0x8 sys/kill.32
                0x00000000c0021474                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002147c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002147c        0x2 thr/prcssthr.32
                0x00000000c002147c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002147c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021480       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021480       0x49 thr/prcssthr.32
                0x00000000c0021480                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0021480                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00214cc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00214cc       0x42 thr/prcssthr.32
                0x00000000c00214cc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00214cc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c002150e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002150e       0x23 arch/i386/hal.32
                0x00000000c002150e                CPU::~CPU()
                0x00000000c002150e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0021532       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0021532       0x2a arch/i386/hal.32
                0x00000000c0021532                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002155c       0x23
 .text._ZN3PCID2Ev
                0x00000000c002155c       0x23 hw/bus/pci.32
                0x00000000c002155c                PCI::~PCI()
                0x00000000c002155c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0021580       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0021580       0x2a hw/bus/pci.32
                0x00000000c0021580                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00215aa       0x23
 .text._ZN3IDED2Ev
                0x00000000c00215aa       0x23 hw/diskctrl/ide.32
                0x00000000c00215aa                IDE::~IDE()
                0x00000000c00215aa                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00215ce       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00215ce       0x2a hw/diskctrl/ide.32
                0x00000000c00215ce                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00215f8       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00215f8       0x23 hw/diskctrl/satabus.32
                0x00000000c00215f8                SATABus::~SATABus()
                0x00000000c00215f8                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002161c       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002161c       0x2a hw/diskctrl/satabus.32
                0x00000000c002161c                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0021646       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0021646       0x23 hw/diskphys/ata.32
                0x00000000c0021646                ATA::~ATA()
                0x00000000c0021646                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c002166a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c002166a       0x2a hw/diskphys/ata.32
                0x00000000c002166a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0021694       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0021694       0x23 hw/diskphys/atapi.32
                0x00000000c0021694                ATAPI::~ATAPI()
                0x00000000c0021694                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00216b8       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00216b8       0x2a hw/diskphys/atapi.32
                0x00000000c00216b8                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00216e2       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00216e2       0x23 hw/diskphys/sata.32
                0x00000000c00216e2                SATA::~SATA()
                0x00000000c00216e2                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0021706       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0021706       0x2a hw/diskphys/sata.32
                0x00000000c0021706                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0021730       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0021730       0x23 hw/diskphys/satapi.32
                0x00000000c0021730                SATAPI::~SATAPI()
                0x00000000c0021730                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0021754       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0021754       0x2a hw/diskphys/satapi.32
                0x00000000c0021754                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c002177e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002177e       0x23 hw/intctrl/apic.32
                0x00000000c002177e                IOAPIC::~IOAPIC()
                0x00000000c002177e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00217a2       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00217a2       0x2a hw/intctrl/apic.32
                0x00000000c00217a2                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00217cc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00217cc       0x23 hw/timer/apictimer.32
                0x00000000c00217cc                APICTimer::~APICTimer()
                0x00000000c00217cc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00217f0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00217f0       0x2a hw/timer/apictimer.32
                0x00000000c00217f0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002181c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002181c       0x23 hw/timer/pit.32
                0x00000000c002181c                PIT::~PIT()
                0x00000000c002181c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0021840       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0021840       0x2a hw/timer/pit.32
                0x00000000c0021840                PIT::~PIT()

.rodata         0x00000000c002186a     0x397a
                0x00000000c002186a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002186a        0x2 
 .ctors         0x00000000c002186c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0021870        0x4 krnl/unixfile.32
 .ctors         0x00000000c0021874        0x4 thr/prcssthr.32
 .ctors         0x00000000c0021878        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002187c                end_ctors = .
                0x00000000c002187c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c002187c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0021880        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0021880                __DTOR_END__
                0x00000000c0021884                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0021884       0x1c 
 .rodata        0x00000000c00218a0      0x101 acpica/utclib.32
                0x00000000c00218a0                AcpiGbl_Ctypes
 *fill*         0x00000000c00219a1        0x3 
 .rodata        0x00000000c00219a4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c00219bc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0021a06       0x1a 
 .rodata        0x00000000c0021a20       0xed fs/fat/ff.32
 *fill*         0x00000000c0021b0d       0x13 
 .rodata        0x00000000c0021b20      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0021f20       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0021f8f       0x11 dbg/kconsole.32
 .rodata        0x00000000c0021fa0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00220f0      0x169 dbg/usban.32
 *fill*         0x00000000c0022259        0x3 
 .rodata.str1.4
                0x00000000c002225c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0022393      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c00224b6       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c002250f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0022510       0x6c fs/vfs.32
                0x00000000c0022510                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002257c       0x1c fs/vfs.32
                0x00000000c002257c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0022598       0x1c fs/vfs.32
                0x00000000c0022598                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00225b4       0x2c hal/bus.32
                0x00000000c00225b4                vtable for Bus
 .rodata.str1.1
                0x00000000c00225e0       0x80 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0022660       0x3c hal/clock.32
                0x00000000c0022660                vtable for Clock
 *fill*         0x00000000c002269c        0x4 
 .rodata        0x00000000c00226a0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00226d0       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0022734       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0022756       0x15 hal/device.32
 *fill*         0x00000000c002276b        0x1 
 .rodata._ZTV6Device
                0x00000000c002276c       0x2c hal/device.32
                0x00000000c002276c                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0022798       0x2c hal/device.32
                0x00000000c0022798                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00227c4       0x2c hal/diskctrl.32
                0x00000000c00227c4                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00227f0       0x38 hal/diskphys.32
                0x00000000c00227f0                vtable for PhysicalDisk
 .rodata        0x00000000c0022828       0x53 hal/keybrd.32
 *fill*         0x00000000c002287b        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c002287c       0x34 hal/keybrd.32
                0x00000000c002287c                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00228b0       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00228f4       0x2c hal/logidisk.32
                0x00000000c00228f4                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0022920       0x2c hal/mouse.32
                0x00000000c0022920                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c002294c       0x34 hal/nic.32
                0x00000000c002294c                vtable for NIC
 .rodata.str1.1
                0x00000000c0022980        0xb hal/partition.32
 *fill*         0x00000000c002298b        0x1 
 .rodata._ZTV6Serial
                0x00000000c002298c       0x44 hal/serial.32
                0x00000000c002298c                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00229d0       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022a1b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022a23       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022a23       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0022a23       0x1e hal/timer.32
 *fill*         0x00000000c0022a41        0x3 
 .rodata._ZTV5Timer
                0x00000000c0022a44       0x30 hal/timer.32
                0x00000000c0022a44                vtable for Timer
 .rodata.str1.1
                0x00000000c0022a74       0x3e hal/vcache.32
 *fill*         0x00000000c0022ab2        0x2 
 .rodata._ZTV6VCache
                0x00000000c0022ab4       0x10 hal/vcache.32
                0x00000000c0022ab4                vtable for VCache
 .rodata.str1.1
                0x00000000c0022ac4       0xba hal/video.32
 *fill*         0x00000000c0022b7e        0x2 
 .rodata._ZTV5Video
                0x00000000c0022b80       0x4c hal/video.32
                0x00000000c0022b80                vtable for Video
 .rodata.str1.1
                0x00000000c0022bcc      0x17e hw/acpi.32
 *fill*         0x00000000c0022d4a        0x2 
 .rodata.str1.4
                0x00000000c0022d4c       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0022dc3       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0022dc3        0x8 hw/acpi.32
 *fill*         0x00000000c0022dc3        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0022dc4       0x2c hw/acpi.32
                0x00000000c0022dc4                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022df0       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0022e03       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022e43       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0022e64       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0022e97        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0022e9a       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.4
                0x00000000c0022f10       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c0022fc8       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0023071        0x3 
 .rodata._ZTV8Computer
                0x00000000c0023074       0x2c krnl/computer.32
                0x00000000c0023074                vtable for Computer
 .rodata.str1.1
                0x00000000c00230a0       0x3c krnl/env.32
 .rodata        0x00000000c00230dc       0x76 krnl/fault.32
 .rodata.str1.1
                0x00000000c0023152        0x4 krnl/intlformat.32
 .rodata.str1.1
                0x00000000c0023156       0x11 krnl/intops.32
 *fill*         0x00000000c0023156        0x2 
 .rodata.str1.4
                0x00000000c0023158       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023188        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023197       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c00231f8      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00232fd       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0023355       0x39 krnl/pipe.32
 *fill*         0x00000000c002338e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0023390       0x1c krnl/pipe.32
                0x00000000c0023390                vtable for Pipe
 .rodata.str1.1
                0x00000000c00233ac       0x91 krnl/resolve.32
 *fill*         0x00000000c002343d        0x3 
 .rodata.str1.4
                0x00000000c0023440       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c002345f       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0023528       0x5a krnl/syscalls.32
                                         0x64 (size before relaxing)
 *fill*         0x00000000c0023582        0x2 
 .rodata        0x00000000c0023584        0xd krnl/syscalls.32
 .rodata.str1.1
                0x00000000c0023591       0x4d krnl/terminal.32
                                         0x5e (size before relaxing)
 *fill*         0x00000000c00235de        0x2 
 .rodata._ZTV7VgaText
                0x00000000c00235e0       0x1c krnl/terminal.32
                0x00000000c00235e0                vtable for VgaText
 .rodata        0x00000000c00235fc       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0023637       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0023637       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0023637       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0023637        0x8 krnl/unixfile.32
 *fill*         0x00000000c0023637        0x1 
 .rodata.str1.4
                0x00000000c0023638       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0023658       0x22 krnl/unixfile.32
 *fill*         0x00000000c002367a        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c002367c       0x1c krnl/unixfile.32
                0x00000000c002367c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0023698       0x1c krnl/unixfile.32
                0x00000000c0023698                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00236b4      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0023c37      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0023d98        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0023da7        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0023db1       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0023dd2       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0023e16       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0023e6a       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0023e96      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c00240a0       0x57 thr/prcssthr.32
 *fill*         0x00000000c00240f7        0x1 
 .rodata.str1.4
                0x00000000c00240f8       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00241f0       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00241f0       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00241f0       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00241f0        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00241f0       0xdd vm86/vm8086.32
 *fill*         0x00000000c00242cd        0x3 
 .rodata        0x00000000c00242d0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0024300      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c002464b        0x1 
 .rodata.str1.4
                0x00000000c002464c       0x57 arch/i386/hal.32
 *fill*         0x00000000c00246a3        0x1 
 .rodata._ZTV3CPU
                0x00000000c00246a4       0x2c arch/i386/hal.32
                0x00000000c00246a4                vtable for CPU
 .rodata.str1.4
                0x00000000c00246d0       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0024731       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c002476f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0024784       0x3c arch/i386/rtc.32
                0x00000000c0024784                vtable for RTC
 .rodata.str1.1
                0x00000000c00247c0       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0024801        0x3 
 .rodata._ZTV3FAT
                0x00000000c0024804       0x6c fs/fat/vfslink.32
                0x00000000c0024804                vtable for FAT
 .rodata.str1.1
                0x00000000c0024870       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0024870      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00249a8       0x6c fs/iso9660/vfslink.32
                0x00000000c00249a8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0024a14       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0024a58       0x34 hal/sound/sndcard.32
                0x00000000c0024a58                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0024a8c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0024acb       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0024b03       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0024ba4       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0024c08       0x2c hw/bus/pci.32
                0x00000000c0024c08                vtable for PCI
 .rodata.str1.1
                0x00000000c0024c34      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0024d58       0x2c hw/diskctrl/ide.32
                0x00000000c0024d58                vtable for IDE
 .rodata.str1.4
                0x00000000c0024d84       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0024da8       0x2c hw/diskctrl/satabus.32
                0x00000000c0024da8                vtable for SATABus
 .rodata.str1.1
                0x00000000c0024dd4       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0024e8f        0x1 
 .rodata._ZTV3ATA
                0x00000000c0024e90       0x38 hw/diskphys/ata.32
                0x00000000c0024e90                vtable for ATA
 .rodata.str1.1
                0x00000000c0024ec8        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0024ed5        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0024ed8       0x38 hw/diskphys/atapi.32
                0x00000000c0024ed8                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0024f10       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0024f98       0x38 hw/diskphys/sata.32
                0x00000000c0024f98                vtable for SATA
 .rodata.str1.1
                0x00000000c0024fd0       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00250ba        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00250bc       0x38 hw/diskphys/satapi.32
                0x00000000c00250bc                vtable for SATAPI
 .rodata        0x00000000c00250f4       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c002511a        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c002511c       0x2c hw/intctrl/apic.32
                0x00000000c002511c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025148       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0025163        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0025164       0x30 hw/timer/apictimer.32
                0x00000000c0025164                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0025194       0x1d hw/timer/pit.32
 *fill*         0x00000000c00251b1        0x3 
 .rodata._ZTV3PIT
                0x00000000c00251b4       0x30 hw/timer/pit.32
                0x00000000c00251b4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00251e4      0xa61
 *(.data)
 .data          0x00000000c00251e4        0x0 crti.32
 .data          0x00000000c00251e4        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00251e4                __dso_handle
 .data          0x00000000c00251e8        0x0 acpica/utclib.32
 .data          0x00000000c00251e8        0x0 krnl/malloc.32
 .data          0x00000000c00251e8        0x0 libk/ctype.32
 .data          0x00000000c00251e8        0x0 libk/string.32
 .data          0x00000000c00251e8        0x0 arch/i386/cc.32
 .data          0x00000000c00251e8        0x0 fs/fat/diskio.32
 .data          0x00000000c00251e8        0x0 fs/fat/ff.32
 .data          0x00000000c00251e8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00251e8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00251e8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00251e8        0x0 dbg/kconsole.32
 *fill*         0x00000000c00251e8       0x18 
 .data          0x00000000c0025200       0x28 dbg/usban.32
                0x00000000c0025200                KiUsbanTypeMismatchTypes
 .data          0x00000000c0025228        0x0 fs/symlink.32
 .data          0x00000000c0025228        0x0 fs/vfs.32
 .data          0x00000000c0025228        0x0 hal/bus.32
 .data          0x00000000c0025228        0x0 hal/buzzer.32
 .data          0x00000000c0025228        0x0 hal/clock.32
 .data          0x00000000c0025228        0x0 hal/device.32
 .data          0x00000000c0025228        0x0 hal/diskctrl.32
 .data          0x00000000c0025228        0x0 hal/diskphys.32
 .data          0x00000000c0025228        0x0 hal/fpu.32
 .data          0x00000000c0025228        0x0 hal/intctrl.32
 .data          0x00000000c0025228        0x0 hal/keybrd.32
 .data          0x00000000c0025228        0x0 hal/logidisk.32
 .data          0x00000000c0025228        0x0 hal/mouse.32
 .data          0x00000000c0025228        0x0 hal/nic.32
 .data          0x00000000c0025228        0x0 hal/partition.32
 .data          0x00000000c0025228        0x0 hal/serial.32
 .data          0x00000000c0025228        0x0 hal/timer.32
 .data          0x00000000c0025228        0x0 hal/vcache.32
 .data          0x00000000c0025228        0x0 hal/video.32
 .data          0x00000000c0025228       0x10 hw/acpi.32
                0x00000000c0025228                legacyIRQRemaps
 .data          0x00000000c0025238        0x0 krnl/assert.32
 .data          0x00000000c0025238        0x0 krnl/atexit.32
 .data          0x00000000c0025238        0x0 krnl/bootmsg.32
 .data          0x00000000c0025238        0x4 krnl/c++.32
                0x00000000c0025238                __stack_chk_guard
 .data          0x00000000c002523c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002523c        0x4 
 .data          0x00000000c0025240      0x100 krnl/cm.32
                0x00000000c0025240                CmComponents
 .data          0x00000000c0025340        0x0 krnl/compat.32
 .data          0x00000000c0025340        0x0 krnl/computer.32
 .data          0x00000000c0025340      0x400 krnl/crc32.32
                0x00000000c0025340                KiPolyLookupCRC32
 .data          0x00000000c0025740       0x4d krnl/env.32
                0x00000000c0025740                defaultSysEnv
 .data          0x00000000c002578d        0x0 krnl/fault.32
 .data          0x00000000c002578d        0x0 krnl/gdt.32
 .data          0x00000000c002578d        0x0 krnl/idle.32
 .data          0x00000000c002578d        0x0 krnl/idt.32
 .data          0x00000000c002578d        0x0 krnl/inlines.32
 .data          0x00000000c002578d        0x0 krnl/intlformat.32
 .data          0x00000000c002578d        0x0 krnl/intops.32
 *fill*         0x00000000c002578d        0x3 
 .data          0x00000000c0025790        0x4 krnl/kheap.32
 .data          0x00000000c0025794        0x0 krnl/mailbox.32
 .data          0x00000000c0025794        0x0 krnl/main.32
 .data          0x00000000c0025794        0x0 krnl/mutex.32
 .data          0x00000000c0025794        0x0 krnl/panic.32
 .data          0x00000000c0025794        0x4 krnl/physmgr.32
                0x00000000c0025794                Phys::bitmap
 .data          0x00000000c0025798        0x0 krnl/pipe.32
 .data          0x00000000c0025798        0x0 krnl/powctrl.32
 .data          0x00000000c0025798        0x0 krnl/random.32
 .data          0x00000000c0025798        0x0 krnl/resolve.32
 .data          0x00000000c0025798        0x0 krnl/semaphore.32
 *fill*         0x00000000c0025798        0x8 
 .data          0x00000000c00257a0       0x4c krnl/signal.32
                0x00000000c00257a0                KiDefaultSignalHandlers
 *fill*         0x00000000c00257ec       0x14 
 .data          0x00000000c0025800      0x104 krnl/syscalls.32
                0x00000000c0025800                systemCallHandlers
 *fill*         0x00000000c0025904       0x1c 
 .data          0x00000000c0025920       0x60 krnl/terminal.32
                0x00000000c0025920                VgaText::hiddenOut
                0x00000000c0025940                ansiToVGAMappings
 .data          0x00000000c0025980        0x0 krnl/tss.32
 .data          0x00000000c0025980        0x4 krnl/unixfile.32
                0x00000000c0025980                UnixFile::nextFd
 .data          0x00000000c0025984       0x15 krnl/virtmgr.32
                0x00000000c0025984                Virt::pageAllocPtr
                0x00000000c0025988                Virt::bitmap
                0x00000000c002598c                Virt::swapfileSectorsPerPage
                0x00000000c0025990                Virt::swapfileLength
                0x00000000c0025994                Virt::swapfileSector
                0x00000000c0025998                Virt::swapfileDrive
 .data          0x00000000c0025999        0x0 sys/eject.32
 .data          0x00000000c0025999        0x0 sys/exit.32
 .data          0x00000000c0025999        0x0 sys/getcwd.32
 .data          0x00000000c0025999        0x0 sys/getpid.32
 .data          0x00000000c0025999        0x0 sys/getramdata.32
 .data          0x00000000c0025999        0x0 sys/getvgaptr.32
 .data          0x00000000c0025999        0x0 sys/kill.32
 .data          0x00000000c0025999        0x0 sys/loaddll.32
 .data          0x00000000c0025999        0x0 sys/read.32
 .data          0x00000000c0025999        0x0 sys/registersignal.32
 .data          0x00000000c0025999        0x0 sys/registry.32
 .data          0x00000000c0025999        0x0 sys/sbrk.32
 .data          0x00000000c0025999        0x0 sys/setcwd.32
 .data          0x00000000c0025999        0x0 sys/settime.32
 .data          0x00000000c0025999        0x0 sys/symlink.32
 .data          0x00000000c0025999        0x0 sys/timezone.32
 .data          0x00000000c0025999        0x0 sys/truncate.32
 .data          0x00000000c0025999        0x0 sys/write.32
 .data          0x00000000c0025999        0x0 sys/wsbe.32
 .data          0x00000000c0025999        0x0 sys/yield.32
 .data          0x00000000c0025999        0x0 thr/elf.32
 .data          0x00000000c0025999        0x0 thr/exec.32
 *fill*         0x00000000c0025999        0x3 
 .data          0x00000000c002599c        0x4 thr/prcssthr.32
                0x00000000c002599c                Thr::nextPID
 .data          0x00000000c00259a0        0x0 vm86/vm8086.32
 .data          0x00000000c00259a0      0x2a4 arch/i386/hal.32
                0x00000000c00259a0                exceptionNames
                0x00000000c0025c40                lastCode
 .data          0x00000000c0025c44        0x0 arch/i386/intctrl.32
 .data          0x00000000c0025c44        0x0 arch/i386/pic.32
 .data          0x00000000c0025c44        0x0 arch/i386/rtc.32
 .data          0x00000000c0025c44        0x0 arch/i386/vga.32
 .data          0x00000000c0025c44        0x0 fs/fat/vfslink.32
 .data          0x00000000c0025c44        0x0 fs/iso9660/helper.32
 .data          0x00000000c0025c44        0x1 fs/iso9660/vfslink.32
                0x00000000c0025c44                recentDriveletter
 .data          0x00000000c0025c45        0x0 hal/sound/sndcard.32
 .data          0x00000000c0025c45        0x0 hal/sound/sndport.32
 .data          0x00000000c0025c45        0x0 hw/bus/isa.32
 .data          0x00000000c0025c45        0x0 hw/bus/pci.32
 .data          0x00000000c0025c45        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0025c45        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0025c45        0x0 hw/diskphys/ata.32
 .data          0x00000000c0025c45        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0025c45        0x0 hw/diskphys/sata.32
 .data          0x00000000c0025c45        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0025c45        0x0 hw/intctrl/apic.32
 .data          0x00000000c0025c45        0x0 hw/timer/apictimer.32
 .data          0x00000000c0025c45        0x0 hw/timer/pit.32
 .data          0x00000000c0025c45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0025c45        0x0 crtn.32
 .data          0x00000000c0025c45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0025c45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0025c45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0025c45        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0025c48        0x0
 .got           0x00000000c0025c48        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0025c48        0x0
 .got.plt       0x00000000c0025c48        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0025c48        0x0
 .igot.plt      0x00000000c0025c48        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0025c48        0x0
 .tm_clone_table
                0x00000000c0025c48        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0025c48        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0025c45      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0025c45        0x3 
 .eh_frame      0x00000000c0025c48        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0025c48        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0025c48       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0025ca0       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0025ce0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0025d4c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0026000       0x7d
 *(userkernel)
 userkernel     0x00000000c0026000       0x52 krnl/signal.32
                0x00000000c0026000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002602c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0026052       0x2b krnl/syscalls.32
                0x00000000c0026052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0027000        0x1
 *(align_previous)
 align_previous
                0x00000000c0027000        0x1 krnl/signal.32
                0x00000000c0027000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0027004        0x0
 .rel.got       0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0027001     0x7147
                0x00000000c0027001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0027001       0x1f 
 COMMON         0x00000000c0027020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0027020                dcache
                0x00000000c0027060                cdDriveLetter
                0x00000000c0027080                icache
 *(.bss)
 .bss           0x00000000c00270c0        0x0 crti.32
 .bss           0x00000000c00270c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00270e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00270e4       0x1c 
 .bss           0x00000000c0027100      0x378 krnl/malloc.32
 .bss           0x00000000c0027478        0x0 libk/ctype.32
 .bss           0x00000000c0027478        0x0 libk/string.32
 .bss           0x00000000c0027478        0x0 arch/i386/cc.32
 .bss           0x00000000c0027478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0027478        0x8 
 .bss           0x00000000c0027480       0x88 fs/fat/ff.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0027508       0x18 
 .bss           0x00000000c0027520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0027eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0027eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0027eb8        0x8 
 .bss           0x00000000c0027ec0     0x2444 fs/symlink.32
                0x00000000c0027ec0                kiNumWaitingRoomSymlinks
                0x00000000c0027ee0                kiNewlyCreatedIDs
                0x00000000c0027f00                kiNewlyCreatedSymlinks
                0x00000000c0028300                kiSymlinkHashTable
                0x00000000c002a300                kiBaseSymlinkID
 .bss           0x00000000c002a304        0x4 fs/vfs.32
                0x00000000c002a304                installedFilesystems
 .bss           0x00000000c002a308        0x0 hal/bus.32
 .bss           0x00000000c002a308        0x0 hal/buzzer.32
 .bss           0x00000000c002a308        0x8 hal/clock.32
                0x00000000c002a308                keDstOn
                0x00000000c002a309                keTimezoneHalfHourOffset
                0x00000000c002a30c                keTimezoneHourOffset
 .bss           0x00000000c002a310        0x0 hal/device.32
 .bss           0x00000000c002a310        0x0 hal/diskctrl.32
 .bss           0x00000000c002a310        0x0 hal/diskphys.32
 .bss           0x00000000c002a310        0x0 hal/fpu.32
 .bss           0x00000000c002a310        0x0 hal/intctrl.32
 *fill*         0x00000000c002a310       0x10 
 .bss           0x00000000c002a320      0x428 hal/keybrd.32
                0x00000000c002a320                keyboardWaitingTaskList
                0x00000000c002a324                keyboardSetupYet
                0x00000000c002a328                guiKeyboardHandler
                0x00000000c002a340                keystates
 *fill*         0x00000000c002a748       0x18 
 .bss           0x00000000c002a760       0x88 hal/logidisk.32
                0x00000000c002a760                diskAssignments
                0x00000000c002a780                disks
 .bss           0x00000000c002a7e8        0x4 hal/mouse.32
                0x00000000c002a7e8                guiMouseHandler
 .bss           0x00000000c002a7ec        0x0 hal/nic.32
 .bss           0x00000000c002a7ec        0x0 hal/partition.32
 .bss           0x00000000c002a7ec        0x0 hal/serial.32
 .bss           0x00000000c002a7ec        0x4 hal/timer.32
                0x00000000c002a7ec                milliTenthsSinceBoot
 .bss           0x00000000c002a7f0        0x0 hal/vcache.32
 .bss           0x00000000c002a7f0        0x4 hal/video.32
                0x00000000c002a7f0                screen
 *fill*         0x00000000c002a7f4        0xc 
 .bss           0x00000000c002a800      0x480 hw/acpi.32
                0x00000000c002a800                nextACPITable
                0x00000000c002a820                acpiTables
                0x00000000c002aa20                usingXSDT
                0x00000000c002aa24                RSDTpointer
                0x00000000c002aa28                RSDPpointer
                0x00000000c002aa2c                nextAPICNMI
                0x00000000c002aa40                apicNMIInfo
                0x00000000c002aac0                legacyIRQFlags
                0x00000000c002aae0                ioapicDiscoveryNumber
                0x00000000c002ab00                ioapicFoundInMADT
                0x00000000c002ab20                ioapicAddresses
                0x00000000c002aba0                ioapicGSIBase
                0x00000000c002ac20                processorDiscoveryNumber
                0x00000000c002ac40                matchingAPICID
                0x00000000c002ac60                processorID
 .bss           0x00000000c002ac80        0x0 krnl/assert.32
 .bss           0x00000000c002ac80       0xe0 krnl/atexit.32
                0x00000000c002ac80                KiNextAtexitHandler
                0x00000000c002aca0                KiAtexitContexts
                0x00000000c002ad00                KiAtexitHandlers
 .bss           0x00000000c002ad60        0x0 krnl/bootmsg.32
 .bss           0x00000000c002ad60        0x0 krnl/c++.32
 .bss           0x00000000c002ad60        0x0 krnl/cdefs.32
 .bss           0x00000000c002ad60        0x4 krnl/cm.32
 .bss           0x00000000c002ad64        0x0 krnl/compat.32
 .bss           0x00000000c002ad64       0x12 krnl/computer.32
                0x00000000c002ad64                systemSleepFunction
                0x00000000c002ad68                systemResetFunction
                0x00000000c002ad6c                systemShutdownFunction
                0x00000000c002ad70                Krnl::computer
                0x00000000c002ad74                KeIsPreemptionOn
                0x00000000c002ad75                KeIsSchedulingOn
 .bss           0x00000000c002ad76        0x0 krnl/crc32.32
 *fill*         0x00000000c002ad76        0x2 
 .bss           0x00000000c002ad78        0x8 krnl/env.32
                0x00000000c002ad78                KeUserEnv
                0x00000000c002ad7c                KeSystemEnv
 .bss           0x00000000c002ad80     0x2000 krnl/fault.32
                0x00000000c002ad80                keInterruptContexts
                0x00000000c002bd80                keInterruptHandlers
 .bss           0x00000000c002cd80        0x6 krnl/gdt.32
                0x00000000c002cd80                gdtDescr
 .bss           0x00000000c002cd86        0x0 krnl/idle.32
 *fill*         0x00000000c002cd86        0x2 
 .bss           0x00000000c002cd88        0x6 krnl/idt.32
                0x00000000c002cd88                idtDescr
 .bss           0x00000000c002cd8e        0x0 krnl/inlines.32
 *fill*         0x00000000c002cd8e       0x12 
 .bss           0x00000000c002cda0       0x24 krnl/intlformat.32
                0x00000000c002cda0                keLocale
 .bss           0x00000000c002cdc4        0x0 krnl/intops.32
 .bss           0x00000000c002cdc4        0x0 krnl/kheap.32
 .bss           0x00000000c002cdc4        0x0 krnl/mailbox.32
 .bss           0x00000000c002cdc4        0x4 krnl/main.32
                0x00000000c002cdc4                keBootSettings
 .bss           0x00000000c002cdc8        0x0 krnl/mutex.32
 .bss           0x00000000c002cdc8        0x1 krnl/panic.32
                0x00000000c002cdc8                KeIsKernelInPanic
 *fill*         0x00000000c002cdc9        0x3 
 .bss           0x00000000c002cdcc       0x29 krnl/physmgr.32
                0x00000000c002cdcc                Phys::forbidEvictions
                0x00000000c002cdd0                Phys::currentPagePointer
                0x00000000c002cdd4                Phys::highestMem
                0x00000000c002cdd8                Phys::oldPercent
                0x00000000c002cddc                Phys::usedPages
                0x00000000c002cde0                Phys::usablePages
                0x00000000c002cde4                Phys::dmaUsage
 .bss           0x00000000c002cdf5        0x0 krnl/pipe.32
 *fill*         0x00000000c002cdf5        0xb 
 .bss           0x00000000c002ce00       0x48 krnl/powctrl.32
                0x00000000c002ce00                powCtrlOnBattery
                0x00000000c002ce20                currentPowerSettings
                0x00000000c002ce44                secondsSinceLastUserIO
 .bss           0x00000000c002ce48        0x8 krnl/random.32
                0x00000000c002ce48                kiRandSeed
 .bss           0x00000000c002ce50        0x0 krnl/resolve.32
 .bss           0x00000000c002ce50        0x0 krnl/semaphore.32
 .bss           0x00000000c002ce50        0x0 krnl/signal.32
 .bss           0x00000000c002ce50        0x0 krnl/syscalls.32
 .bss           0x00000000c002ce50        0x9 krnl/terminal.32
                0x00000000c002ce50                terminalCycle
                0x00000000c002ce54                activeTerminal
                0x00000000c002ce58                VgaText::graphicMode
 *fill*         0x00000000c002ce59        0x1 
 .bss           0x00000000c002ce5a        0x2 krnl/tss.32
                0x00000000c002ce5a                doubleFaultSelector
 *fill*         0x00000000c002ce5c        0x4 
 .bss           0x00000000c002ce60       0x84 krnl/unixfile.32
                0x00000000c002ce60                sfileLpt
                0x00000000c002cea0                sfileCom
                0x00000000c002cec4                sfileNul
                0x00000000c002cec8                sfilePnt
                0x00000000c002cecc                sfileAux
                0x00000000c002ced0                sfileCon
                0x00000000c002ced4                initialFilesAdded
                0x00000000c002ced8                unixFileLinkedList
 .bss           0x00000000c002cee4       0x10 krnl/virtmgr.32
                0x00000000c002cee4                twswaps
                0x00000000c002cee8                swapBalance
                0x00000000c002ceec                Virt::swapfileBitmap
                0x00000000c002cef0                keFirstVAS
 .bss           0x00000000c002cef4        0x0 sys/eject.32
 .bss           0x00000000c002cef4        0x0 sys/exit.32
 .bss           0x00000000c002cef4        0x0 sys/getcwd.32
 .bss           0x00000000c002cef4        0x0 sys/getpid.32
 .bss           0x00000000c002cef4        0x0 sys/getramdata.32
 .bss           0x00000000c002cef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002cef4        0x0 sys/kill.32
 .bss           0x00000000c002cef4        0x0 sys/loaddll.32
 .bss           0x00000000c002cef4        0x0 sys/read.32
 .bss           0x00000000c002cef4        0x0 sys/registersignal.32
 .bss           0x00000000c002cef4        0x0 sys/registry.32
 .bss           0x00000000c002cef4        0x0 sys/sbrk.32
 .bss           0x00000000c002cef4        0x0 sys/setcwd.32
 .bss           0x00000000c002cef4        0x0 sys/settime.32
 .bss           0x00000000c002cef4        0x0 sys/symlink.32
 .bss           0x00000000c002cef4        0x0 sys/timezone.32
 .bss           0x00000000c002cef4        0x0 sys/truncate.32
 .bss           0x00000000c002cef4        0x0 sys/write.32
 .bss           0x00000000c002cef4        0x0 sys/wsbe.32
 .bss           0x00000000c002cef4        0x0 sys/yield.32
 *fill*         0x00000000c002cef4        0xc 
 .bss           0x00000000c002cf00      0x7a4 thr/elf.32
                0x00000000c002cf00                Thr::driverLookupNext
                0x00000000c002cf20                Thr::driverLookupLen
                0x00000000c002d120                Thr::driverLookupAddr
                0x00000000c002d320                Thr::driverNameLookup
                0x00000000c002d520                Thr::kernelSymbols
                0x00000000c002d5a0                Thr::kernelStringTable
                0x00000000c002d620                Thr::kernelSymbolTable
                0x00000000c002d6a0                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002d6a4        0x0 thr/exec.32
 *fill*         0x00000000c002d6a4        0x4 
 .bss           0x00000000c002d6a8       0x70 thr/prcssthr.32
                0x00000000c002d6a8                KiRestorePreemptionValue
                0x00000000c002d6ac                KiPreemptionDisableCounter
                0x00000000c002d6b0                cleanerThread
                0x00000000c002d6b4                weNeedTheCleanerToNotBlock
                0x00000000c002d6b8                retValLockStuff
                0x00000000c002d6bc                retValSchedLock
                0x00000000c002d6c0                lockStuffLock
                0x00000000c002d6c4                schedulerLock
                0x00000000c002d6c8                taskSwitchesPostponedFlag
                0x00000000c002d6cc                postponeTaskSwitchesCounter
                0x00000000c002d6d0                irqDisableCounter
                0x00000000c002d6d4                terminatedTaskList
                0x00000000c002d6e0                sleepingTaskList
                0x00000000c002d6ec                taskList
                0x00000000c002d6f8                kernelProcess
 *fill*         0x00000000c002d718        0x8 
 .bss           0x00000000c002d720       0x40 vm86/vm8086.32
                0x00000000c002d720                Vm::started8086Yet
                0x00000000c002d724                Vm::vmRetV
                0x00000000c002d728                Vm::vmDone
                0x00000000c002d729                Vm::vmReady
                0x00000000c002d72c                Vm::vm86Thread
                0x00000000c002d730                Vm::vmToHostCommsPtr
                0x00000000c002d740                Vm::vmToHostComms
 .bss           0x00000000c002d760       0x54 arch/i386/hal.32
                0x00000000c002d760                apic
                0x00000000c002d764                guiPanicHandler
                0x00000000c002d768                fpuOwner
                0x00000000c002d76c                coproLoadFunc
                0x00000000c002d770                coproSaveFunc
                0x00000000c002d774                lastD
                0x00000000c002d778                lastC
                0x00000000c002d77c                lastB
                0x00000000c002d780                lastA
                0x00000000c002d784                HalPageWriteCombiningFlag
                0x00000000c002d788                HalPageGlobalFlag
                0x00000000c002d78c                nmi
                0x00000000c002d790                vendorIDString
                0x00000000c002d79d                familyID
                0x00000000c002d79e                model
                0x00000000c002d79f                processorType
                0x00000000c002d7a0                steppingID
                0x00000000c002d7a4                vendor
                0x00000000c002d7a8                opcodeDetectionMode
                0x00000000c002d7ac                features
 .bss           0x00000000c002d7b4        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002d7b4        0x0 arch/i386/pic.32
 .bss           0x00000000c002d7b4        0x2 arch/i386/rtc.32
 .bss           0x00000000c002d7b6        0x0 arch/i386/vga.32
 *fill*         0x00000000c002d7b6        0xa 
 .bss           0x00000000c002d7c0       0xf0 fs/fat/vfslink.32
                0x00000000c002d7c0                FAT::fats
                0x00000000c002d7e0                FAT::vfsToFatRemaps
                0x00000000c002d860                fatToVFSRemaps
 .bss           0x00000000c002d8b0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002d8b0       0x10 
 .bss           0x00000000c002d8c0      0x820 fs/iso9660/vfslink.32
                0x00000000c002d8c0                iso9660Owner
                0x00000000c002d8c4                recentSector
                0x00000000c002d8e0                recentBuffer
 .bss           0x00000000c002e0e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002e0e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002e0e0        0x0 hw/bus/isa.32
 .bss           0x00000000c002e0e0        0xd hw/bus/pci.32
                0x00000000c002e0e0                thePCI
 .bss           0x00000000c002e0ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002e0ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002e0ed        0x3 
 .bss           0x00000000c002e0f0        0x8 hw/diskphys/ata.32
                0x00000000c002e0f0                ataSectorsWritten
                0x00000000c002e0f4                ataSectorsRead
 .bss           0x00000000c002e0f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002e0f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002e0f8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002e0f8        0x8 
 .bss           0x00000000c002e100       0x41 hw/intctrl/apic.32
                0x00000000c002e100                noOfIOAPICs
                0x00000000c002e120                ioapics
                0x00000000c002e140                IOAPICsSetupYet
 .bss           0x00000000c002e141        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002e141        0x3 
 .bss           0x00000000c002e144        0x4 hw/timer/pit.32
                0x00000000c002e144                pitFreq
 .bss           0x00000000c002e148        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002e148        0x0 crtn.32
 .bss           0x00000000c002e148        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002e148        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002e148        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002e148        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002e148                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003528f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
