Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1b87a
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 .text          0x00000000c0001afb        0x0 libk/string.32
 .text          0x00000000c0001afb       0x51 fs/fat/diskio.32
                0x00000000c0001afb                disk_status
                0x00000000c0001afe                disk_initialize
                0x00000000c0001b01                disk_read
                0x00000000c0001b17                disk_write
                0x00000000c0001b2d                disk_ioctl
 .text          0x00000000c0001b4c     0x3d4b fs/fat/ff.32
                0x00000000c00038e8                f_mount
                0x00000000c000394a                f_open
                0x00000000c0003c15                f_read
                0x00000000c0003e14                f_write
                0x00000000c0004048                f_sync
                0x00000000c00040fd                f_close
                0x00000000c000412c                f_lseek
                0x00000000c00042d3                f_opendir
                0x00000000c000439e                f_closedir
                0x00000000c00043c0                f_readdir
                0x00000000c0004452                f_stat
                0x00000000c00044d1                f_getfree
                0x00000000c00045d3                f_truncate
                0x00000000c00046b7                f_unlink
                0x00000000c00047d9                f_mkdir
                0x00000000c0004974                f_rename
                0x00000000c0004b2a                f_chmod
                0x00000000c0004bd3                f_utime
                0x00000000c0004c81                f_getlabel
                0x00000000c0004dd2                f_setlabel
                0x00000000c0004f62                f_expand
                0x00000000c00050c2                f_mkfs
 *fill*         0x00000000c0005897        0x1 
 .text          0x00000000c0005898       0x2f fs/fat/ffsystem.32
                0x00000000c0005898                ff_memalloc
                0x00000000c00058b0                ff_memfree
 *fill*         0x00000000c00058c7        0x1 
 .text          0x00000000c00058c8      0x2a8 fs/fat/ffunicode.32
                0x00000000c00058c8                ff_uni2oem
                0x00000000c0005968                ff_oem2uni
                0x00000000c00059e0                ff_wtoupper
 .text          0x00000000c0005b70       0x94 compat/inlines.32
                0x00000000c0005b70                CPU::current()
                0x00000000c0005b7c                operator new(unsigned long)
                0x00000000c0005b81                operator delete(void*)
                0x00000000c0005b86                disableIRQs()
                0x00000000c0005b88                enableIRQs()
                0x00000000c0005b8a                lockScheduler()
                0x00000000c0005b92                unlockScheduler()
                0x00000000c0005ba1                lockStuff()
                0x00000000c0005baf                unlockStuff()
                0x00000000c0005be9                Virt::getAKernelVAS()
                0x00000000c0005bef                __not_memcpy
 .text          0x00000000c0005c04      0x118 compat/resolve.32
                0x00000000c0005c04                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0005d1c      0x68b core/computer.32
                0x00000000c0005d1c                Computer::close(int, int, void*)
                0x00000000c0005d61                Krnl::firstTask()
                0x00000000c0005e9a                Computer::Computer()
                0x00000000c0005e9a                Computer::Computer()
                0x00000000c0005f4c                Computer::setBootMessage(char const*)
                0x00000000c0005f4e                Computer::detectFeatures()
                0x00000000c0006158                Computer::displayFeatures()
                0x00000000c000615a                Computer::rdmsr(unsigned int)
                0x00000000c0006186                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00061be                Computer::shutdown()
                0x00000000c00061d6                Computer::restart()
                0x00000000c00061ee                Computer::sleep()
                0x00000000c0006202                Computer::nmiEnabled()
                0x00000000c000620e                Computer::readCMOS(unsigned char)
                0x00000000c0006228                Computer::enableNMI(bool)
                0x00000000c0006240                Computer::open(int, int, void*)
                0x00000000c0006314                Computer::disableNMI()
                0x00000000c0006324                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006342                Computer::handleNMI()
 *fill*         0x00000000c00063a7        0x1 
 .text          0x00000000c00063a8      0x211 core/gdt.32
                0x00000000c00063a8                GDTEntry::setBase(unsigned int)
                0x00000000c00063c4                GDTEntry::setLimit(unsigned int)
                0x00000000c00063e2                GDT::GDT()
                0x00000000c00063e2                GDT::GDT()
                0x00000000c00063f8                GDT::addEntry(GDTEntry)
                0x00000000c000641a                GDT::getNumberOfEntries()
                0x00000000c0006422                GDT::flush()
                0x00000000c0006444                GDT::setup()
 .text          0x00000000c00065b9       0x19 core/idle.32
                0x00000000c00065b9                idleFunction(void*)
 *fill*         0x00000000c00065d2        0x2 
 .text          0x00000000c00065d4      0x464 core/idt.32
                0x00000000c00065d4                IDTEntry::IDTEntry(bool)
                0x00000000c00065d4                IDTEntry::IDTEntry(bool)
                0x00000000c0006646                IDTEntry::setOffset(unsigned int)
                0x00000000c000665c                IDT::IDT()
                0x00000000c000665c                IDT::IDT()
                0x00000000c000665e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0006666                IDT::addEntry(IDTEntry, int)
                0x00000000c0006680                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00066b8                IDT::flush()
                0x00000000c00066d2                IDT::setup()
 .text          0x00000000c0006a38      0x183 core/kheap.32
                0x00000000c0006a38                sbrk
                0x00000000c0006acd                mmap
                0x00000000c0006ae3                munmap
                0x00000000c0006af9                liballoc_lock()
                0x00000000c0006b06                liballoc_unlock()
                0x00000000c0006b1a                liballoc_alloc(int)
                0x00000000c0006b32                liballoc_free(void*, int)
                0x00000000c0006b4d                realloc
                0x00000000c0006b61                malloc
                0x00000000c0006b71                free
                0x00000000c0006b81                rfree
                0x00000000c0006b91                calloc
 .text          0x00000000c0006bbb      0x1b4 core/main.32
                0x00000000c0006bbb                Krnl::setBootMessage(char const*)
                0x00000000c0006c27                kernel_main
 .text          0x00000000c0006d6f      0x5dc core/physmgr.32
                0x00000000c0006d6f                Phys::allocateDMA(unsigned long)
                0x00000000c0006e46                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0006e79                Phys::setPageState(unsigned long, bool)
                0x00000000c0006eab                Phys::getPageState(unsigned long)
                0x00000000c0006ecc                Phys::freePage(unsigned long)
                0x00000000c0006f2e                Phys::allocatePage()
                0x00000000c0006fec                Phys::allocateContiguousPages(int)
                0x00000000c0007048                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007080                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000734b        0x1 
 .text          0x00000000c000734c      0x273 core/pipe.32
                0x00000000c000734c                Pipe::isAtty()
                0x00000000c0007350                Pipe::~Pipe()
                0x00000000c0007350                Pipe::~Pipe()
                0x00000000c0007374                Pipe::~Pipe()
                0x00000000c000739c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000745c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0007558                Pipe::Pipe(int)
                0x00000000c0007558                Pipe::Pipe(int)
 *fill*         0x00000000c00075bf        0x1 
 .text          0x00000000c00075c0      0xa1e core/terminal.32
                0x00000000c00075c0                VgaText::isAtty()
                0x00000000c00075c4                VgaText::~VgaText()
                0x00000000c00075c4                VgaText::~VgaText()
                0x00000000c00075e8                VgaText::~VgaText()
                0x00000000c0007612                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0007632                setTerminalScrollLock(bool)
                0x00000000c0007633                doTerminalCycle()
                0x00000000c0007634                addToTerminalCycle(VgaText*)
                0x00000000c0007635                scrollTerminalScrollLock(int)
                0x00000000c0007636                VgaText::updateTitle()
                0x00000000c0007638                VgaText::load()
                0x00000000c000763a                VgaText::updateCursor()
                0x00000000c0007650                VgaText::doANSI_SGR(int)
                0x00000000c00076c4                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00076d4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00076e4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0007704                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0007710                VgaText::setTitleColour(VgaColour)
                0x00000000c000771c                VgaText::setTitle(char*)
                0x00000000c000771e                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0007730                VgaText::scrollScreen()
                0x00000000c00077c8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00077da                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000786a                VgaText::getCursorX()
                0x00000000c0007872                VgaText::getCursorY()
                0x00000000c000787a                VgaText::setCursor(int, int)
                0x00000000c0007891                setActiveTerminal(VgaText*)
                0x00000000c00078dc                VgaText::clearScreen()
                0x00000000c000792a                VgaText::setCursorX(int)
                0x00000000c0007942                VgaText::setCursorY(int)
                0x00000000c000795a                VgaText::incrementCursor(bool)
                0x00000000c00079ae                VgaText::decrementCursor(bool)
                0x00000000c00079d0                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0007a9e                VgaText::putchar(char)
                0x00000000c0007b8a                VgaText::putx(unsigned int)
                0x00000000c0007bd0                VgaText::puts(char const*)
                0x00000000c0007bf6                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0007c42                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0007d94                VgaText::VgaText(char const*)
                0x00000000c0007d94                VgaText::VgaText(char const*)
                0x00000000c0007ee0                VgaText::receiveKey(unsigned char)
                0x00000000c0007fb8                VgaText::doUpdate()
                0x00000000c0007fb9                newTerminal(char*)
 *fill*         0x00000000c0007fde        0x2 
 .text          0x00000000c0007fe0      0x1a1 core/tss.32
                0x00000000c0007fe0                TSS::TSS()
                0x00000000c0007fe0                TSS::TSS()
                0x00000000c0007ff0                TSS::setESP(unsigned long)
                0x00000000c0008004                TSS::flush()
                0x00000000c0008024                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008181        0x1 
 .text          0x00000000c0008182      0x4c2 core/unixfile.32
                0x00000000c0008182                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00081d8                ReservedFilename::isAtty()
                0x00000000c00081f4                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008252                UnixFile::getFileDescriptor()
                0x00000000c000825a                UnixFile::UnixFile(int)
                0x00000000c000825a                UnixFile::UnixFile(int)
                0x00000000c000840a                ReservedFilename::ReservedFilename(int)
                0x00000000c000840a                ReservedFilename::ReservedFilename(int)
                0x00000000c000843c                UnixFile::~UnixFile()
                0x00000000c000843c                UnixFile::~UnixFile()
                0x00000000c00084d4                UnixFile::~UnixFile()
                0x00000000c00084fc                ReservedFilename::~ReservedFilename()
                0x00000000c00084fc                ReservedFilename::~ReservedFilename()
                0x00000000c0008520                ReservedFilename::~ReservedFilename()
                0x00000000c0008547                getFromFileDescriptor(int)
 .text          0x00000000c0008644     0x119a core/virtmgr.32
                0x00000000c0008644                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0008679                Virt::getPageState(unsigned long)
                0x00000000c000869d                Virt::allocateKernelVirtualPages(int)
                0x00000000c00087ae                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00087cc                Virt::swapIDToSector(unsigned long)
                0x00000000c00087de                Virt::allocateSwapfilePage()
                0x00000000c000885c                Virt::virtualMemorySetup()
                0x00000000c00088a7                Virt::setupPageSwapping(int)
                0x00000000c0008918                VAS::VAS(VAS*)
                0x00000000c0008918                VAS::VAS(VAS*)
                0x00000000c0008946                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0008972                VAS::getPageTableEntry(unsigned long)
                0x00000000c0008991                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0008ab6                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0008ada                VAS::virtualToPhysical(unsigned long)
                0x00000000c0008af4                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0008b34                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0008b68                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0008b92                VAS::~VAS()
                0x00000000c0008b92                VAS::~VAS()
                0x00000000c0008cf6                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0008dfa                VAS::allocatePages(int, int)
                0x00000000c0008fd2                VAS::setCPUSpecific(unsigned long)
                0x00000000c0008ff0                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c00090b6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c00091a4                VAS::VAS(bool)
                0x00000000c00091a4                VAS::VAS(bool)
                0x00000000c0009424                VAS::VAS()
                0x00000000c0009424                VAS::VAS()
                0x00000000c0009494                VAS::evict(unsigned long)
                0x00000000c0009556                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0009644                VAS::scanForEviction()
                0x00000000c0009724                mapVASFirstTime
 .text          0x00000000c00097de       0x5f coreobjs/c++.32
                0x00000000c00097de                __cxa_atexit
                0x00000000c00097e1                __cxa_finalize
                0x00000000c00097e2                __stack_chk_fail
                0x00000000c0009818                __cxa_pure_virtual
                0x00000000c0009829                operator new[](unsigned long)
                0x00000000c000982e                operator delete(void*, unsigned long)
                0x00000000c0009833                operator delete[](void*)
                0x00000000c0009838                operator delete[](void*, unsigned long)
 .text          0x00000000c000983d      0x21c dbg/kconsole.32
                0x00000000c000983d                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c00098a8                Dbg::logc(char)
                0x00000000c00098c8                Dbg::logs(char*)
                0x00000000c00098e5                Dbg::logWriteInt(unsigned int)
                0x00000000c0009903                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0009924                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c0009a59        0x1 
 .text          0x00000000c0009a5a      0xc5c fs/vfs.32
                0x00000000c0009a5a                File::read(unsigned long long, void*, int*)
                0x00000000c0009ab2                File::write(unsigned long long, void*, int*)
                0x00000000c0009b0a                Directory::read(unsigned long long, void*, int*)
                0x00000000c0009b62                Directory::write(unsigned long long, void*, int*)
                0x00000000c0009b90                File::isAtty()
                0x00000000c0009b94                Directory::isAtty()
                0x00000000c0009b98                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0009b9e                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0009ba4                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0009baa                File::~File()
                0x00000000c0009baa                File::~File()
                0x00000000c0009bce                File::~File()
                0x00000000c0009bf8                Directory::~Directory()
                0x00000000c0009bf8                Directory::~Directory()
                0x00000000c0009c1c                Directory::~Directory()
                0x00000000c0009c46                Filesystem::Filesystem()
                0x00000000c0009c46                Filesystem::Filesystem()
                0x00000000c0009c6a                Filesystem::~Filesystem()
                0x00000000c0009c6a                Filesystem::~Filesystem()
                0x00000000c0009c78                Filesystem::~Filesystem()
                0x00000000c0009c9c                Fs::getcwd(Process*, char*, int)
                0x00000000c0009cc6                Fs::initVFS()
                0x00000000c0009cf0                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c0009e9a                File::File(char const*, Process*)
                0x00000000c0009e9a                File::File(char const*, Process*)
                0x00000000c0009f5a                File::open(FileOpenMode)
                0x00000000c0009fb8                File::close()
                0x00000000c000a018                File::seek(unsigned long long)
                0x00000000c000a06e                File::tell(unsigned long long*)
                0x00000000c000a0be                File::rewind()
                0x00000000c000a0d2                File::unlink()
                0x00000000c000a11e                File::rename(char const*)
                0x00000000c000a16c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000a1c8                File::exists()
                0x00000000c000a206                File::stat(unsigned long long*, bool*)
                0x00000000c000a267                Fs::setcwd(Process*, char*)
                0x00000000c000a3c4                Directory::Directory(char const*, Process*)
                0x00000000c000a3c4                Directory::Directory(char const*, Process*)
                0x00000000c000a484                Directory::open()
                0x00000000c000a4e0                Directory::close()
                0x00000000c000a540                Directory::unlink()
                0x00000000c000a58c                Directory::rename(char const*)
                0x00000000c000a5da                Directory::exists()
                0x00000000c000a618                Directory::read(dirent*)
                0x00000000c000a664                Directory::create()
                0x00000000c000a6b0                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000a6b6        0x2 
 .text          0x00000000c000a6b8       0x86 hal/bus.32
                0x00000000c000a6b8                Bus::Bus(char const*)
                0x00000000c000a6b8                Bus::Bus(char const*)
                0x00000000c000a6f0                Bus::~Bus()
                0x00000000c000a6f0                Bus::~Bus()
                0x00000000c000a714                Bus::~Bus()
 .text          0x00000000c000a73e       0x96 hal/buzzer.32
                0x00000000c000a73e                beepThread(void*)
                0x00000000c000a77b                Krnl::beep(int, int, bool)
 .text          0x00000000c000a7d4      0x46d hal/clock.32
                0x00000000c000a7d4                User::loadClockSettings(int)
                0x00000000c000a826                Clock::Clock(char const*)
                0x00000000c000a826                Clock::Clock(char const*)
                0x00000000c000a85c                Clock::~Clock()
                0x00000000c000a85c                Clock::~Clock()
                0x00000000c000a880                Clock::~Clock()
                0x00000000c000a8aa                Clock::timeInSecondsLocal()
                0x00000000c000a8f2                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000a94b                datetimeToSeconds(datetime_t)
                0x00000000c000aa78                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000aad8                secondsToDatetime(unsigned long long)
                0x00000000c000ac1c                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000ac41        0x1 
 .text          0x00000000c000ac42      0x464 hal/device.32
                0x00000000c000ac42                Device::hibernate()
                0x00000000c000ac44                Device::wake()
                0x00000000c000ac46                Device::detect()
                0x00000000c000ac48                Device::disableLegacy()
                0x00000000c000ac4a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000ac4c                DriverlessDevice::close(int, int, void*)
                0x00000000c000ac50                DriverlessDevice::detect()
                0x00000000c000ac52                DriverlessDevice::open(int, int, void*)
                0x00000000c000ac66                Device::~Device()
                0x00000000c000ac66                Device::~Device()
                0x00000000c000ac74                Device::~Device()
                0x00000000c000ac9c                Device::findAndLoadDriver()
                0x00000000c000acaa                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000acd0                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000ad10                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ad3a                Device::getParent()
                0x00000000c000ad46                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ad64                Device::addChild(Device*)
                0x00000000c000ada8                Device::removeAllChildren()
                0x00000000c000adee                Device::hibernateAll()
                0x00000000c000ae1e                Device::wakeAll()
                0x00000000c000ae4e                Device::detectAll()
                0x00000000c000ae7e                Device::disableLegacyAll()
                0x00000000c000ae80                Device::loadDriversForAll()
                0x00000000c000ae82                Device::closeAll()
                0x00000000c000aeb8                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000aeee                Device::setName(char const*)
                0x00000000c000aefc                Device::Device(char const*)
                0x00000000c000aefc                Device::Device(char const*)
                0x00000000c000aff8                Device::getName()
                0x00000000c000b002                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000b002                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000b038                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000b07c                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000b0a6        0x2 
 .text          0x00000000c000b0a8       0x86 hal/diskctrl.32
                0x00000000c000b0a8                HardDiskController::HardDiskController(char const*)
                0x00000000c000b0a8                HardDiskController::HardDiskController(char const*)
                0x00000000c000b0e0                HardDiskController::~HardDiskController()
                0x00000000c000b0e0                HardDiskController::~HardDiskController()
                0x00000000c000b104                HardDiskController::~HardDiskController()
 .text          0x00000000c000b12e       0xe2 hal/diskphys.32
                0x00000000c000b12e                PhysicalDisk::eject()
                0x00000000c000b132                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b132                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000b19a                PhysicalDisk::startCache()
                0x00000000c000b1c2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b1c2                PhysicalDisk::~PhysicalDisk()
                0x00000000c000b1e6                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000b210        0x0 hal/fpu.32
 .text          0x00000000c000b210      0x35d hal/intctrl.32
                0x00000000c000b210                int_handler
                0x00000000c000b298                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000b2e0                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b418                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000b44c                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b4cb                setupINTS()
                0x00000000c000b528                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000b56d        0x1 
 .text          0x00000000c000b56e      0x78c hal/keybrd.32
                0x00000000c000b56e                startGUI(void*)
                0x00000000c000b5da                startGUIVESA(void*)
                0x00000000c000b646                sendKeyToTerminal(unsigned char)
                0x00000000c000b709                sendKeyboardToken(KeyboardToken)
                0x00000000c000bb49                clearInternalKeybuffer(VgaText*)
                0x00000000c000bb7e                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000bc70                Keyboard::Keyboard(char const*)
                0x00000000c000bc70                Keyboard::Keyboard(char const*)
                0x00000000c000bcac                Keyboard::~Keyboard()
                0x00000000c000bcac                Keyboard::~Keyboard()
                0x00000000c000bcd0                Keyboard::~Keyboard()
 .text          0x00000000c000bcfa      0x3ea hal/logidisk.32
                0x00000000c000bcfa                LogicalDisk::close(int, int, void*)
                0x00000000c000bcfe                LogicalDisk::~LogicalDisk()
                0x00000000c000bcfe                LogicalDisk::~LogicalDisk()
                0x00000000c000bd22                LogicalDisk::~LogicalDisk()
                0x00000000c000bd4c                LogicalDisk::open(int, int, void*)
                0x00000000c000bd60                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000bd98                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000bdde                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000bdde                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000be94                LogicalDisk::assignDriveLetter()
                0x00000000c000bf4a                LogicalDisk::mount()
                0x00000000c000bf92                LogicalDisk::unmount()
                0x00000000c000bfa2                LogicalDisk::eject()
                0x00000000c000bfb6                LogicalDisk::unassignDriveLetter()
                0x00000000c000c00c                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000c078                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000c0e4       0x86 hal/mouse.32
                0x00000000c000c0e4                Mouse::Mouse(char const*)
                0x00000000c000c0e4                Mouse::Mouse(char const*)
                0x00000000c000c11c                Mouse::~Mouse()
                0x00000000c000c11c                Mouse::~Mouse()
                0x00000000c000c140                Mouse::~Mouse()
 .text          0x00000000c000c16a      0x339 hal/partition.32
                0x00000000c000c16a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c212                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000c4a3        0x1 
 .text          0x00000000c000c4a4       0x86 hal/serial.32
                0x00000000c000c4a4                Serial::Serial(char const*)
                0x00000000c000c4a4                Serial::Serial(char const*)
                0x00000000c000c4dc                Serial::~Serial()
                0x00000000c000c4dc                Serial::~Serial()
                0x00000000c000c500                Serial::~Serial()
 *fill*         0x00000000c000c52a        0x2 
 .text          0x00000000c000c52c      0x234 hal/timer.32
                0x00000000c000c52c                Timer::Timer(char const*)
                0x00000000c000c52c                Timer::Timer(char const*)
                0x00000000c000c564                Timer::~Timer()
                0x00000000c000c564                Timer::~Timer()
                0x00000000c000c588                Timer::~Timer()
                0x00000000c000c5b2                Timer::read()
                0x00000000c000c5bd                setupTimer(int)
                0x00000000c000c5f8                timerHandler(unsigned int)
 .text          0x00000000c000c760      0x43e hal/vcache.32
                0x00000000c000c760                VCache::VCache(PhysicalDisk*)
                0x00000000c000c760                VCache::VCache(PhysicalDisk*)
                0x00000000c000c8c8                VCache::invalidateReadBuffer()
                0x00000000c000c8d8                VCache::writeWriteBuffer()
                0x00000000c000c924                VCache::~VCache()
                0x00000000c000c924                VCache::~VCache()
                0x00000000c000c978                VCache::~VCache()
                0x00000000c000c9a0                VCache::write(unsigned long long, int, void*)
                0x00000000c000ca9a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000cb9e      0x4b3 hal/video.32
                0x00000000c000cb9e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000cbea                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000cc5a                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000ccd8                Video::clearScreen(unsigned int)
                0x00000000c000cd0c                Video::putpixel(int, int, unsigned int)
                0x00000000c000cd1a                Video::Video(char const*)
                0x00000000c000cd1a                Video::Video(char const*)
                0x00000000c000cd50                Video::~Video()
                0x00000000c000cd50                Video::~Video()
                0x00000000c000cd74                Video::~Video()
                0x00000000c000cd9e                Video::isMonochrome()
                0x00000000c000cdaa                Video::getWidth()
                0x00000000c000cdb6                Video::getHeight()
                0x00000000c000cdc2                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000ce7e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000cfe6                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000d051        0x3 
 .text          0x00000000c000d054     0x1307 hw/acpi.32
                0x00000000c000d054                ACPI::close(int, int, void*)
                0x00000000c000d10c                findRSDP()
                0x00000000c000d19c                loadACPITables(unsigned char*)
                0x00000000c000d400                findRSDT(unsigned char*)
                0x00000000c000d550                findDataTable(unsigned char*, char*)
                0x00000000c000d5c8                scanMADT()
                0x00000000c000da9c                ACPI::ACPI()
                0x00000000c000da9c                ACPI::ACPI()
                0x00000000c000daf0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000dbd8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000dca0                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000dca8                ACPI::detectPCI()
                0x00000000c000deb0                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000df04                ACPI::sleep()
                0x00000000c000df20                ACPI::open(int, int, void*)
 *fill*         0x00000000c000e35b        0x1 
 .text          0x00000000c000e35c      0xb95 hw/cpu.32
                0x00000000c000e35c                CPU::close(int, int, void*)
                0x00000000c000e360                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000e37c                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000e394                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000e408                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000e48c                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000e4ba                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000e4e8                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000e516                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000e544                CPU::CPU()
                0x00000000c000e544                CPU::CPU()
                0x00000000c000e5d2                CPU::displayFeatures()
                0x00000000c000e5d4                CPU::detectFeatures()
                0x00000000c000ec98                CPU::setupSMEP()
                0x00000000c000eca4                CPU::setupUMIP()
                0x00000000c000ecae                CPU::setupTSC()
                0x00000000c000ecb8                CPU::setupLargePages()
                0x00000000c000ecc2                CPU::setupPAT()
                0x00000000c000ecfe                CPU::setupMTRR()
                0x00000000c000ed00                CPU::setupGlobalPages()
                0x00000000c000ed0a                CPU::allowUsermodeDataAccess()
                0x00000000c000ed1c                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ed2e                CPU::setupSMAP()
                0x00000000c000ed3c                CPU::setupFeatures()
                0x00000000c000ee08                CPU::open(int, int, void*)
 *fill*         0x00000000c000eef1        0x1 
 .text          0x00000000c000eef2      0x581 krnl/env.32
                0x00000000c000eef2                EnvVarContainer::getEnv(char const*)
                0x00000000c000ef30                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000eff2                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000eff4                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000f1da                EnvVarContainer::__loadSystem()
                0x00000000c000f1f4                EnvVarContainer::__loadUser()
                0x00000000c000f1f6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f1f6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000f218                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f218                EnvVarContainer::~EnvVarContainer()
                0x00000000c000f248                Krnl::getEnv(Process*, char const*)
                0x00000000c000f2ad                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000f2c7                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000f2e6                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000f2f9                Krnl::deleteEnvSystem(char const*)
                0x00000000c000f2fa                Krnl::deleteEnvUser(char const*)
                0x00000000c000f2fb                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000f2fc                Krnl::newProcessEnv(Process*)
                0x00000000c000f31e                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000f36a                Krnl::loadSystemEnv()
                0x00000000c000f398                Krnl::loadUserEnv()
                0x00000000c000f3be                Krnl::flushEnv()
                0x00000000c000f3bf                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000f3df                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c000f473      0x1ff krnl/panic.32
                0x00000000c000f473                Krnl::panic(char const*)
 .text          0x00000000c000f672      0x168 krnl/powctrl.32
                0x00000000c000f672                Krnl::powerThread(void*)
                0x00000000c000f6c6                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c000f6dc                Krnl::userIOReceived()
                0x00000000c000f6e7                Krnl::handlePowerButton()
                0x00000000c000f71c                Krnl::handleSleepButton()
                0x00000000c000f751                Krnl::setupPowerManager()
 .text          0x00000000c000f7da      0x50e reg/registry.32
                0x00000000c000f7da                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c000f932                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c000fa87                Reg::getLine(char*, char*, char*)
                0x00000000c000fabe                Reg::readInt(char*, char*, int*)
                0x00000000c000fba9                Reg::readString(char*, char*, char*, int)
                0x00000000c000fc2a                Reg::readBool(char*, char*, bool*)
                0x00000000c000fc4f                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c000fc7b                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c000fca7                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c000fce8       0x36 sys/sc_eject.32
                0x00000000c000fce8                Sys::eject(regs*)
 .text          0x00000000c000fd1e       0x18 sys/sc_exit.32
                0x00000000c000fd1e                Sys::exit(regs*)
 .text          0x00000000c000fd36       0x1f sys/sc_getcwd.32
                0x00000000c000fd36                Sys::getCwd(regs*)
 .text          0x00000000c000fd55        0xc sys/sc_getpid.32
                0x00000000c000fd55                Sys::getPID(regs*)
 .text          0x00000000c000fd61       0x1a sys/sc_getramdata.32
                0x00000000c000fd61                Sys::getRAMData(regs*)
 .text          0x00000000c000fd7b       0x82 sys/sc_getvgaptr.32
                0x00000000c000fd7b                Sys::getVGAPtr(regs*)
 .text          0x00000000c000fdfd       0xa8 sys/sc_loaddll.32
                0x00000000c000fdfd                Sys::loadDLL(regs*)
 .text          0x00000000c000fea5       0x68 sys/sc_read.32
                0x00000000c000fea5                Sys::read(regs*)
 .text          0x00000000c000ff0d       0x55 sys/sc_sbrk.32
                0x00000000c000ff0d                Sys::sbrk(regs*)
 .text          0x00000000c000ff62       0x1c sys/sc_setcwd.32
                0x00000000c000ff62                Sys::setCwd(regs*)
 .text          0x00000000c000ff7e       0x95 sys/sc_settime.32
                0x00000000c000ff7e                Sys::setTime(regs*)
 .text          0x00000000c0010013       0x4a sys/sc_timezone.32
                0x00000000c0010013                Sys::timezone(regs*)
 .text          0x00000000c001005d       0x68 sys/sc_write.32
                0x00000000c001005d                Sys::write(regs*)
 .text          0x00000000c00100c5       0x62 sys/sc_wsbe.32
                0x00000000c00100c5                Sys::wsbe(regs*)
 .text          0x00000000c0010127       0x25 sys/sc_yield.32
                0x00000000c0010127                Sys::yield(regs*)
 .text          0x00000000c001014c      0xe2c sys/syscalls.32
                0x00000000c001014c                sysCallSeekDir(regs*)
                0x00000000c0010151                sysCallTellDir(regs*)
                0x00000000c0010156                sysCallVerify(regs*)
                0x00000000c0010160                sysCallGetArgc(regs*)
                0x00000000c0010170                sysCallTTYName(regs*)
                0x00000000c0010178                sysFormatDisk(regs*)
                0x00000000c00101e5                sysSetDiskVolumeLabel(regs*)
                0x00000000c001022f                sysGetDiskVolumeLabel(regs*)
                0x00000000c0010284                sysShutdown(regs*)
                0x00000000c00102e2                sysCallRealpath(regs*)
                0x00000000c0010325                sysCallReadDir(regs*)
                0x00000000c00103a5                sysCallIsATTY(regs*)
                0x00000000c0010401                sysCallSeek(regs*)
                0x00000000c001045a                sysCallTell(regs*)
                0x00000000c00104c9                sysCallSize(regs*)
                0x00000000c001053e                sysCallSizeFromFilename(regs*)
                0x00000000c00105f1                sysCallClose(regs*)
                0x00000000c0010651                sysCallOpenDir(regs*)
                0x00000000c00106c8                sysCallCloseDir(regs*)
                0x00000000c001071c                sysCallMakeDir(regs*)
                0x00000000c001078e                sysCallWait(regs*)
                0x00000000c00107ab                sysCallNotImpl(regs*)
                0x00000000c00107c6                sysPanic(regs*)
                0x00000000c00107e1                sysCallRmdir(regs*)
                0x00000000c0010848                sysCallUnlink(regs*)
                0x00000000c00108af                sysCallGetArgv(regs*)
                0x00000000c00108fc                sysCallUSleep(regs*)
                0x00000000c0010925                sysCallSpawn(regs*)
                0x00000000c001098e                sysCallGetEnv(regs*)
                0x00000000c0010a3d                sysSetFatAttrib(regs*)
                0x00000000c0010ab4                sysPipe(regs*)
                0x00000000c0010af9                sysGetUnixTime(regs*)
                0x00000000c0010b0d                string_ends_with(char const*, char const*)
                0x00000000c0010b57                sysCallOpen(regs*)
                0x00000000c0010d4b                Sys::loadSyscalls()
                0x00000000c0010f36                Sys::systemCall(regs*, void*)
 .text          0x00000000c0010f78     0x11e5 thr/elf.32
                0x00000000c0010f78                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0011204                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001141a                Thr::runtimeReferenceHelper()
                0x00000000c001142d                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001147c                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001173a                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0011e70                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0011ea2                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0011ed9                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0011ef3                Thr::loadDLL(char const*, bool)
                0x00000000c0012124                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001215d        0x3 
 .text          0x00000000c0012160     0x12c5 thr/prcssthr.32
                0x00000000c0012160                userModeEntryPoint(void*)
                0x00000000c0012188                changeTSS
                0x00000000c00121b8                switchToThread(ThreadControlBlock*)
                0x00000000c001226c                Process::addArgs(char**)
                0x00000000c00122cc                Process::Process(char const*, Process*, char**)
                0x00000000c00122cc                Process::Process(char const*, Process*, char**)
                0x00000000c00124bc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00124bc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0012678                taskStartupFunction
                0x00000000c0012684                Semaphore::Semaphore(int)
                0x00000000c0012684                Semaphore::Semaphore(int)
                0x00000000c00126b4                Mutex::Mutex()
                0x00000000c00126b4                Mutex::Mutex()
                0x00000000c00126c8                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00127c0                Process::createUserThread()
                0x00000000c00127e0                setupMultitasking(void (*)())
                0x00000000c00128e8                schedule()
                0x00000000c0012978                Semaphore::tryAcquire()
                0x00000000c0012a44                Semaphore::assertLocked(char const*)
                0x00000000c0012abc                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0012ae4                blockTask(TaskState)
                0x00000000c0012b14                waitTask(int, int*, int)
                0x00000000c0012b58                milliTenthSleepUntil(unsigned int)
                0x00000000c0012be8                milliTenthSleep(unsigned int)
                0x00000000c0012bf8                sleep(unsigned int)
                0x00000000c0012c14                Semaphore::acquire()
                0x00000000c0012cd0                taskReturned
                0x00000000c0012d0c                Thr::processFromPID(int)
                0x00000000c0012dac                unblockTask(ThreadControlBlock*)
                0x00000000c0012e50                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001311c                cleanerTaskFunction(void*)
                0x00000000c001320c                terminateTask(int)
                0x00000000c00132d8                Thr::terminateFromIRQ(int)
                0x00000000c00132e8                Semaphore::release()
 .text          0x00000000c0013425      0xb93 vm86/vm8086.32
                0x00000000c0013425                Vm::inbv(unsigned short)
                0x00000000c0013438                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001346e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001347e                Vm::getSegment(unsigned int)
                0x00000000c0013486                Vm::getOffset(unsigned int)
                0x00000000c001348b                Vm::mainloop2()
                0x00000000c00134c5                Vm::mainVm8086Loop(void*)
                0x00000000c00134d5                Vm::mainloop3(unsigned long)
                0x00000000c00134fb                Vm::initialise8086()
                0x00000000c001353e                Vm::finish8086()
                0x00000000c001359f                Vm::getOutput8086(unsigned char*)
                0x00000000c00135c4                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001367d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00137e5                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001386f                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0013880                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0013892                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00138a3                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00138b8                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00138ce                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00138e3                Vm::faultHandler(regs*)
 .text          0x00000000c0013fb8      0x8e9 arch/i386/hal.32
                0x00000000c0013fb8                noCopro(unsigned long)
                0x00000000c0013fb9                nmiHandler(regs*, void*)
                0x00000000c0013fd2                doubleFault(regs*, void*)
                0x00000000c0013feb                displayDebugInfo(regs*)
                0x00000000c001430c                displayProgramFault(char const*)
                0x00000000c0014358                gpFault(regs*, void*)
                0x00000000c00143bd                pgFault(regs*, void*)
                0x00000000c0014443                otherISRHandler(regs*, void*)
                0x00000000c0014477                opcodeFault(regs*, void*)
                0x00000000c00144f7                i386SaveCoprocessor(void*)
                0x00000000c001450b                i386LoadCoprocessor(void*)
                0x00000000c001451f                x87EmulHandler(regs*, void*)
                0x00000000c00145bc                HalInitialiseCoprocessor()
                0x00000000c001466a                HalPanic(char const*)
                0x00000000c001466f                HalQueryPerformanceCounter()
                0x00000000c001468a                HalInitialise()
                0x00000000c0014830                HalMakeBeep(int)
                0x00000000c001486a                HalGetRand()
                0x00000000c001486d                HalEndOfInterrupt(int)
                0x00000000c001489e                HalRestart()
                0x00000000c001489f                HalShutdown()
                0x00000000c00148a0                HalSleep()
 *fill*         0x00000000c00148a1        0x3 
 .text          0x00000000c00148a4      0x2f4 arch/i386/pic.32
                0x00000000c00148a4                picIoWait()
                0x00000000c00148ac                picDisable()
                0x00000000c00148e0                picGetIRQReg(int)
                0x00000000c0014964                picOpen()
                0x00000000c0014af4                picEOI(int)
 .text          0x00000000c0014b98      0x64d arch/i386/rtc.32
                0x00000000c0014b98                RTC::open(int, int, void*)
                0x00000000c0014b9c                RTC::close(int, int, void*)
                0x00000000c0014ba0                RTC::timeInSecondsUTC()
                0x00000000c0014bb2                RTC::timeInDatetimeUTC()
                0x00000000c0014bd8                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0014c16                RTC::~RTC()
                0x00000000c0014c16                RTC::~RTC()
                0x00000000c0014c3a                RTC::~RTC()
                0x00000000c0014c64                RTC::get_update_in_progress_flag()
                0x00000000c0014c7c                RTC::completeRTCRefresh()
                0x00000000c0014f34                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00150e7                rtcIRQHandler(regs*, void*)
                0x00000000c001512c                RTC::RTC()
                0x00000000c001512c                RTC::RTC()
 *fill*         0x00000000c00151e5        0x3 
 .text          0x00000000c00151e8      0x203 arch/i386/vga.32
                0x00000000c00151e8                HalConsoleScroll(int, int)
                0x00000000c00152f0                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001535c                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00153eb        0x1 
 .text          0x00000000c00153ec     0x13e7 fs/fat/vfslink.32
                0x00000000c00153ec                FAT::getName()
                0x00000000c00153f4                FAT::tell(void*, unsigned long long*)
                0x00000000c0015430                FAT::stat(void*, unsigned long long*)
                0x00000000c001546c                FAT::~FAT()
                0x00000000c001546c                FAT::~FAT()
                0x00000000c0015490                FAT::~FAT()
                0x00000000c00154b8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001555c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0015620                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00157f4                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0015a0c                FAT::allocateSwapfile(char const*, int)
                0x00000000c0015bcc                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0015d38                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0015d98                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0015df8                FAT::close(void*)
                0x00000000c0015e4c                FAT::closeDir(void*)
                0x00000000c0015ea0                FAT::seek(void*, unsigned long long)
                0x00000000c0015ef8                fatWrapperReadDisk
                0x00000000c0015f3c                fatWrapperWriteDisk
                0x00000000c0015f80                fatWrapperIoctl
                0x00000000c001609c                FAT::FAT()
                0x00000000c001609c                FAT::FAT()
                0x00000000c00160f0                FAT::fixFilepath(char*)
                0x00000000c001612c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0016264                FAT::openDir(char const*, void**)
                0x00000000c0016314                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001640c                FAT::unlink(char const*)
                0x00000000c001648c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0016618                FAT::rename(char const*, char const*)
                0x00000000c00166e4                FAT::mkdir(char const*)
                0x00000000c0016764                FAT::exists(char const*)
 *fill*         0x00000000c00167d3        0x1 
 .text          0x00000000c00167d4      0xba5 fs/iso9660/vfslink.32
                0x00000000c00167d4                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00167da                ISO9660::seek(void*, unsigned long long)
                0x00000000c001680a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001682e                ISO9660::getName()
                0x00000000c0016834                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0016858                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001685e                ISO9660::unlink(char const*)
                0x00000000c0016864                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001686a                ISO9660::rename(char const*, char const*)
                0x00000000c0016870                ISO9660::mkdir(char const*)
                0x00000000c0016876                ISO9660::close(void*)
                0x00000000c0016898                ISO9660::closeDir(void*)
                0x00000000c00168ba                ISO9660::~ISO9660()
                0x00000000c00168ba                ISO9660::~ISO9660()
                0x00000000c00168de                ISO9660::~ISO9660()
                0x00000000c0016905                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0016947                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c00169c2                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0016a22                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0016c26                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016e9e                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0016ef2                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c00170c8                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c0017156                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017204                ISO9660::exists(char const*)
                0x00000000c0017228                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c00172bc                ISO9660::openDir(char const*, void**)
                0x00000000c0017356                ISO9660::ISO9660()
                0x00000000c0017356                ISO9660::ISO9660()
 *fill*         0x00000000c0017379        0x1 
 .text          0x00000000c001737a      0x26c hal/sound/sndcard.32
                0x00000000c001737a                SoundCard::beginPlayback()
                0x00000000c0017388                SoundCard::stopPlayback()
                0x00000000c0017396                SoundCard::SoundCard(char const*)
                0x00000000c0017396                SoundCard::SoundCard(char const*)
                0x00000000c0017434                SoundCard::~SoundCard()
                0x00000000c0017434                SoundCard::~SoundCard()
                0x00000000c0017458                SoundCard::~SoundCard()
                0x00000000c0017482                SoundCard::configureRates(int, int, int)
                0x00000000c00174b2                SoundCard::getSamples16(int, short*)
                0x00000000c001750e                SoundCard::getSamples32(int, int*)
                0x00000000c0017594                SoundCard::addChannel(SoundPort*)
                0x00000000c00175d2                SoundCard::removeChannel(int)
 *fill*         0x00000000c00175e6        0x2 
 .text          0x00000000c00175e8      0x377 hal/sound/sndport.32
                0x00000000c00175e8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00175e8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017674                SoundPort::~SoundPort()
                0x00000000c0017674                SoundPort::~SoundPort()
                0x00000000c00176a8                SoundPort::unpause()
                0x00000000c00176b4                SoundPort::pause()
                0x00000000c00176c0                SoundPort::getBufferUsed()
                0x00000000c00176c8                SoundPort::getBufferSize()
                0x00000000c00176d0                SoundPort::buffer16(short*, int)
                0x00000000c001775c                SoundPort::buffer32(int*, int)
                0x00000000c00177e4                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00178a8                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001795f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001795f        0x1 
 .text          0x00000000c0017960      0xb49 hw/bus/pci.32
                0x00000000c0017960                PCI::open(int, int, void*)
                0x00000000c001797e                PCI::close(int, int, void*)
                0x00000000c0017982                PCI::PCI()
                0x00000000c0017982                PCI::PCI()
                0x00000000c0017a1c                PCI::readBAR8(unsigned int, int)
                0x00000000c0017a38                PCI::readBAR16(unsigned int, int)
                0x00000000c0017a56                PCI::readBAR32(unsigned int, int)
                0x00000000c0017a72                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0017a92                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0017ab4                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0017ad4                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017b42                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017bea                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017c0e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0017c36                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0017c80                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0017ca8                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0017ccc                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0017cf0                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0017d18                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0017d7c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0017e64                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c00180de                PCI::checkBus(unsigned char)
                0x00000000c0018104                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018276                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c00183ea                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018456                PCI::detect()
 *fill*         0x00000000c00184a9        0x1 
 .text          0x00000000c00184aa      0xb5a hw/diskctrl/ide.32
                0x00000000c00184aa                IDE::close(int, int, void*)
                0x00000000c00184ae                IDE::IDE()
                0x00000000c00184ae                IDE::IDE()
                0x00000000c00184e2                IDE::prepareInterrupt(unsigned char)
                0x00000000c00184f4                selectDrive(unsigned char, unsigned char)
                0x00000000c00184f6                IDE::getBase(unsigned char)
                0x00000000c0018508                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c00185c8                IDE::read(unsigned char, unsigned char)
                0x00000000c0018676                IDE::waitInterrupt(unsigned char)
                0x00000000c00186de                ideChannel0IRQHandler(regs*, void*)
                0x00000000c00186fa                ideChannel1IRQHandler(regs*, void*)
                0x00000000c0018716                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001875c                IDE::open(int, int, void*)
                0x00000000c0018b6a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0018c36                IDE::detect()
                0x00000000c0018ef6                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0018fa6                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019004      0x320 hw/diskctrl/satabus.32
                0x00000000c0019004                SATABus::close(int, int, void*)
                0x00000000c0019008                SATABus::detect()
                0x00000000c001900a                SATABus::SATABus()
                0x00000000c001900a                SATABus::SATABus()
                0x00000000c0019090                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c00190c2                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001910a                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001912a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019154                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001925a                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019304                SATABus::open(int, int, void*)
 .text          0x00000000c0019324      0x5f4 hw/diskphys/ata.32
                0x00000000c0019324                ATA::close(int, int, void*)
                0x00000000c0019348                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001934a                ATA::ATA()
                0x00000000c001934a                ATA::ATA()
                0x00000000c0019378                ATA::flush(bool)
                0x00000000c00193c2                ATA::readyForCommand()
                0x00000000c001940e                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001978a                ATA::read(unsigned long long, int, void*)
                0x00000000c00197d6                ATA::write(unsigned long long, int, void*)
                0x00000000c0019822                ATA::detectCHS()
                0x00000000c001984c                ATA::open(int, int, void*)
 .text          0x00000000c0019918      0x60e hw/diskphys/atapi.32
                0x00000000c0019918                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001991e                ATAPI::close(int, int, void*)
                0x00000000c0019942                ATAPI::ATAPI()
                0x00000000c0019942                ATAPI::ATAPI()
                0x00000000c0019970                ATAPI::readyForCommand()
                0x00000000c00199c2                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0019c82                ATAPI::diskRemoved()
                0x00000000c0019cbc                ATAPI::eject()
                0x00000000c0019d04                ATAPI::diskInserted()
                0x00000000c0019d10                ATAPI::detectMedia()
                0x00000000c0019dcc                ATAPI::open(int, int, void*)
                0x00000000c0019eac                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0019f26      0x402 hw/diskphys/sata.32
                0x00000000c0019f26                SATA::close(int, int, void*)
                0x00000000c0019f4a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0019f4c                SATA::open(int, int, void*)
                0x00000000c0019ff6                SATA::SATA()
                0x00000000c0019ff6                SATA::SATA()
                0x00000000c001a024                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a270                SATA::read(unsigned long long, int, void*)
                0x00000000c001a2bc                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001a328      0x63d hw/diskphys/satapi.32
                0x00000000c001a328                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001a32e                SATAPI::close(int, int, void*)
                0x00000000c001a352                SATAPI::SATAPI()
                0x00000000c001a352                SATAPI::SATAPI()
                0x00000000c001a380                SATAPI::diskRemoved()
                0x00000000c001a382                SATAPI::diskInserted()
                0x00000000c001a39e                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001a62c                SATAPI::eject()
                0x00000000c001a668                SATAPI::detectMedia()
                0x00000000c001a792                SATAPI::open(int, int, void*)
                0x00000000c001a892                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001a965        0x1 
 .text          0x00000000c001a966      0x455 hw/intctrl/apic.32
                0x00000000c001a966                IOAPIC::close(int, int, void*)
                0x00000000c001a96c                apicGetBase()
                0x00000000c001a9ae                IOAPIC::IOAPIC()
                0x00000000c001a9ae                IOAPIC::IOAPIC()
                0x00000000c001a9d6                apicOpen()
                0x00000000c001ab3c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ab6e                IOAPIC::read(int)
                0x00000000c001ab96                IOAPIC::open(int, int, void*)
                0x00000000c001ac8a                IOAPIC::write(int, int)
                0x00000000c001acb6                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001adbb        0x1 
 .text          0x00000000c001adbc       0xf0 hw/timer/apictimer.32
                0x00000000c001adbc                APICTimer::close(int, int, void*)
                0x00000000c001adc4                apicTimerHandler(regs*, void*)
                0x00000000c001adec                APICTimer::open(int, int, void*)
                0x00000000c001ae5c                APICTimer::write(int)
                0x00000000c001ae84                APICTimer::APICTimer()
                0x00000000c001ae84                APICTimer::APICTimer()
 .text          0x00000000c001aeac      0x1aa hw/timer/pit.32
                0x00000000c001aeac                PIT::write(int)
                0x00000000c001af30                pitHandler(regs*, void*)
                0x00000000c001af54                PIT::open(int, int, void*)
                0x00000000c001afa4                PIT::close(int, int, void*)
                0x00000000c001afd4                PIT::PIT()
                0x00000000c001afd4                PIT::PIT()
 *fill*         0x00000000c001b056        0xa 
 .text          0x00000000c001b060       0x83 arch/i386/avx.32
                0x00000000c001b060                avxDetect
                0x00000000c001b08a                avxSave
                0x00000000c001b09b                avxLoad
                0x00000000c001b0ac                avxInit
                0x00000000c001b0ce                avxClose
                0x00000000c001b0cf                wouldSheSayYes
 *fill*         0x00000000c001b0e3        0xd 
 .text          0x00000000c001b0f0      0x1d6 arch/i386/interrupt.32
                0x00000000c001b0f0                isr0
                0x00000000c001b100                isr1
                0x00000000c001b10a                isr2
                0x00000000c001b114                isr3
                0x00000000c001b11e                isr4
                0x00000000c001b128                isr5
                0x00000000c001b132                isr6
                0x00000000c001b13c                isr7
                0x00000000c001b146                isr8
                0x00000000c001b14e                isr9
                0x00000000c001b158                isr10
                0x00000000c001b160                isr11
                0x00000000c001b168                isr12
                0x00000000c001b170                isr13
                0x00000000c001b178                isr14
                0x00000000c001b180                isr15
                0x00000000c001b18a                isr16
                0x00000000c001b194                isr17
                0x00000000c001b19e                isr18
                0x00000000c001b1a8                irq3
                0x00000000c001b1b2                irq4
                0x00000000c001b1bc                irq5
                0x00000000c001b1c6                irq6
                0x00000000c001b1d0                irq7
                0x00000000c001b1da                irq8
                0x00000000c001b1e4                irq9
                0x00000000c001b1ee                irq10
                0x00000000c001b1f8                irq11
                0x00000000c001b202                irq12
                0x00000000c001b20c                irq13
                0x00000000c001b216                irq14
                0x00000000c001b220                irq15
                0x00000000c001b22a                irq1
                0x00000000c001b231                irq2
                0x00000000c001b238                isr96
                0x00000000c001b23f                irq0
                0x00000000c001b244                int_common_stub
                0x00000000c001b244                syscall_common_stub
                0x00000000c001b276                irq16
                0x00000000c001b280                irq17
                0x00000000c001b28a                irq18
                0x00000000c001b294                irq19
                0x00000000c001b29e                irq20
                0x00000000c001b2a8                irq21
                0x00000000c001b2b2                irq22
                0x00000000c001b2bc                irq23
 *fill*         0x00000000c001b2c6        0xa 
 .text          0x00000000c001b2d0       0x10 arch/i386/rdrand.32
                0x00000000c001b2d0                i386GetRDRAND
 .text          0x00000000c001b2e0       0x39 arch/i386/sse.32
                0x00000000c001b2e0                absolutelyNoChanceInHell
                0x00000000c001b2e0                sseDetect
                0x00000000c001b2f8                sseSave
                0x00000000c001b300                sseLoad
                0x00000000c001b308                sseInit
                0x00000000c001b318                sseClose
 *fill*         0x00000000c001b319        0x7 
 .text          0x00000000c001b320       0x49 arch/i386/x87.32
                0x00000000c001b326                x87Detect
                0x00000000c001b341                x87Save
                0x00000000c001b348                x87Load
                0x00000000c001b34f                x87Init
                0x00000000c001b368                x87Close
 *fill*         0x00000000c001b369        0x3 
 .text          0x00000000c001b36c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001b391        0x0 crtn.32
 *fill*         0x00000000c001b391        0x3 
 .text          0x00000000c001b394      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001b394                __divdi3
 *fill*         0x00000000c001b4df        0x1 
 .text          0x00000000c001b4e0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001b4e0                __moddi3
 *fill*         0x00000000c001b65e        0x2 
 .text          0x00000000c001b660       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001b660                __udivdi3
 *fill*         0x00000000c001b75f        0x1 
 .text          0x00000000c001b760      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001b760                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001b880        0x0
 .iplt          0x00000000c001b880        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001b87a        0xf
 .init          0x00000000c001b87a        0x3 crti.32
                0x00000000c001b87a                _init
 .init          0x00000000c001b87d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001b882        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001b887        0x2 crtn.32

.fini           0x00000000c001b889        0xa
 .fini          0x00000000c001b889        0x3 crti.32
                0x00000000c001b889                _fini
 .fini          0x00000000c001b88c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001b891        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001b894       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001b894       0x23 core/computer.32
                0x00000000c001b894                Computer::~Computer()
                0x00000000c001b894                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001b8b8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001b8b8       0x2a core/computer.32
                0x00000000c001b8b8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001b8e2       0x21
 .text._Z10idleCommonv
                0x00000000c001b8e2       0x21 core/idle.32
                0x00000000c001b8e2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001b904        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001b904        0x2 core/unixfile.32
                0x00000000c001b904                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001b904                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001b906       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001b906       0x42 core/unixfile.32
                0x00000000c001b906                LinkedList<UnixFile>::LinkedList()
                0x00000000c001b906                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001b948       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001b948       0xd3 core/unixfile.32
                0x00000000c001b948                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ba1c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ba1c        0x7 core/unixfile.32
                0x00000000c001ba1c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ba24       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ba24       0xa1 core/unixfile.32
                0x00000000c001ba24                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001bac6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001bac6        0x8 core/unixfile.32
                0x00000000c001bac6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001bace       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001bace       0x1a hal/device.32
                0x00000000c001bace                DriverlessDevice::~DriverlessDevice()
                0x00000000c001bace                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001bae8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001bae8       0x2a hal/device.32
                0x00000000c001bae8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001bb12       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001bb12       0xdc hal/device.32
                0x00000000c001bb12                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001bbee       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001bbee       0x42 hal/device.32
                0x00000000c001bbee                LinkedList<Device>::LinkedList()
                0x00000000c001bbee                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001bc30       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001bc30       0x1c hal/timer.32
                0x00000000c001bc30                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001bc4c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001bc4c        0x7 hal/timer.32
                0x00000000c001bc4c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bc54       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001bc54       0xb8 hal/timer.32
                0x00000000c001bc54                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001bd0c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001bd0c       0xda hal/timer.32
                0x00000000c001bd0c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001bde8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001bde8       0x23 hw/acpi.32
                0x00000000c001bde8                ACPI::~ACPI()
                0x00000000c001bde8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001be0c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001be0c       0x2a hw/acpi.32
                0x00000000c001be0c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001be38        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001be38        0x2 hw/acpi.32
                0x00000000c001be38                LinkedList<Device>::~LinkedList()
                0x00000000c001be38                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001be3c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001be3c       0x1c hw/acpi.32
                0x00000000c001be3c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001be58        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001be58        0x7 hw/acpi.32
                0x00000000c001be58                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001be60       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001be60       0xb8 hw/acpi.32
                0x00000000c001be60                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001bf18       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001bf18       0x23 hw/cpu.32
                0x00000000c001bf18                CPU::~CPU()
                0x00000000c001bf18                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001bf3c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001bf3c       0x2a hw/cpu.32
                0x00000000c001bf3c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001bf68        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001bf68        0x2 thr/prcssthr.32
                0x00000000c001bf68                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001bf68                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001bf6c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001bf6c       0x49 thr/prcssthr.32
                0x00000000c001bf6c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001bf6c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001bfb8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001bfb8       0x42 thr/prcssthr.32
                0x00000000c001bfb8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001bfb8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001bffc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001bffc        0x8 thr/prcssthr.32
                0x00000000c001bffc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001c004       0x23
 .text._ZN3PCID2Ev
                0x00000000c001c004       0x23 hw/bus/pci.32
                0x00000000c001c004                PCI::~PCI()
                0x00000000c001c004                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001c028       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001c028       0x2a hw/bus/pci.32
                0x00000000c001c028                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001c052       0x23
 .text._ZN3IDED2Ev
                0x00000000c001c052       0x23 hw/diskctrl/ide.32
                0x00000000c001c052                IDE::~IDE()
                0x00000000c001c052                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001c076       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001c076       0x2a hw/diskctrl/ide.32
                0x00000000c001c076                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001c0a0       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001c0a0       0x23 hw/diskctrl/satabus.32
                0x00000000c001c0a0                SATABus::~SATABus()
                0x00000000c001c0a0                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001c0c4       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001c0c4       0x2a hw/diskctrl/satabus.32
                0x00000000c001c0c4                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001c0ee       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001c0ee       0x23 hw/diskphys/ata.32
                0x00000000c001c0ee                ATA::~ATA()
                0x00000000c001c0ee                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001c112       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001c112       0x2a hw/diskphys/ata.32
                0x00000000c001c112                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001c13c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001c13c       0x23 hw/diskphys/atapi.32
                0x00000000c001c13c                ATAPI::~ATAPI()
                0x00000000c001c13c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001c160       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001c160       0x2a hw/diskphys/atapi.32
                0x00000000c001c160                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001c18a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001c18a       0x23 hw/diskphys/sata.32
                0x00000000c001c18a                SATA::~SATA()
                0x00000000c001c18a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001c1ae       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001c1ae       0x2a hw/diskphys/sata.32
                0x00000000c001c1ae                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001c1d8       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001c1d8       0x23 hw/diskphys/satapi.32
                0x00000000c001c1d8                SATAPI::~SATAPI()
                0x00000000c001c1d8                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001c1fc       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001c1fc       0x2a hw/diskphys/satapi.32
                0x00000000c001c1fc                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001c226       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001c226       0x23 hw/intctrl/apic.32
                0x00000000c001c226                IOAPIC::~IOAPIC()
                0x00000000c001c226                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001c24a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001c24a       0x2a hw/intctrl/apic.32
                0x00000000c001c24a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001c274       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001c274       0x23 hw/timer/apictimer.32
                0x00000000c001c274                APICTimer::~APICTimer()
                0x00000000c001c274                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001c298       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001c298       0x2a hw/timer/apictimer.32
                0x00000000c001c298                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001c2c4       0x23
 .text._ZN3PITD2Ev
                0x00000000c001c2c4       0x23 hw/timer/pit.32
                0x00000000c001c2c4                PIT::~PIT()
                0x00000000c001c2c4                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001c2e8       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001c2e8       0x2a hw/timer/pit.32
                0x00000000c001c2e8                PIT::~PIT()

.rodata         0x00000000c001c312     0x28da
                0x00000000c001c312                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001c312        0x2 
 .ctors         0x00000000c001c314        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001c318        0x4 core/unixfile.32
 .ctors         0x00000000c001c31c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001c320        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c324                end_ctors = .
                0x00000000c001c324                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001c324        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001c328        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001c328                __DTOR_END__
                0x00000000c001c32c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001c32c       0x14 
 .rodata        0x00000000c001c340      0x101 acpica/utclib.32
                0x00000000c001c340                AcpiGbl_Ctypes
 *fill*         0x00000000c001c441        0x3 
 .rodata        0x00000000c001c444       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001c45c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001c4a6       0x1a 
 .rodata        0x00000000c001c4c0       0xed fs/fat/ff.32
 *fill*         0x00000000c001c5ad       0x13 
 .rodata        0x00000000c001c5c0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001c9c0       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001ca09      0x115 core/computer.32
 *fill*         0x00000000c001cb1e        0x2 
 .rodata.str1.4
                0x00000000c001cb20       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001cb88       0x2c core/computer.32
                0x00000000c001cb88                vtable for Computer
 .rodata.str1.4
                0x00000000c001cbb4       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001cbe4        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001cbf0       0x17 core/main.32
 *fill*         0x00000000c001cc07        0x1 
 .rodata.str1.4
                0x00000000c001cc08       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001ccad       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001cd05       0x39 core/pipe.32
 *fill*         0x00000000c001cd3e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001cd40       0x1c core/pipe.32
                0x00000000c001cd40                vtable for Pipe
 .rodata.str1.1
                0x00000000c001cd5c       0x69 core/terminal.32
 *fill*         0x00000000c001cdc5        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001cdc8       0x1c core/terminal.32
                0x00000000c001cdc8                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001cde4       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001ce06       0x15 core/unixfile.32
 *fill*         0x00000000c001ce1b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001ce1c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001ce67        0x8 core/unixfile.32
 *fill*         0x00000000c001ce6f        0x1 
 .rodata.str1.4
                0x00000000c001ce70       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001ce90       0x1c core/unixfile.32
                0x00000000c001ce90                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001ceac       0x1c core/unixfile.32
                0x00000000c001ceac                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001cec8      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d02f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d136       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001d169       0x11 dbg/kconsole.32
 *fill*         0x00000000c001d169        0x3 
 .rodata        0x00000000c001d16c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001d2bc       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001d2bc       0x68 fs/vfs.32
                0x00000000c001d2bc                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001d324       0x1c fs/vfs.32
                0x00000000c001d324                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001d340       0x1c fs/vfs.32
                0x00000000c001d340                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001d35c       0x2c hal/bus.32
                0x00000000c001d35c                vtable for Bus
 .rodata.str1.1
                0x00000000c001d388       0x1e hal/clock.32
 *fill*         0x00000000c001d3a6        0x2 
 .rodata._ZTV5Clock
                0x00000000c001d3a8       0x3c hal/clock.32
                0x00000000c001d3a8                vtable for Clock
 *fill*         0x00000000c001d3e4       0x1c 
 .rodata        0x00000000c001d400       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001d430       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001d488       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001d488       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001d488       0x2c hal/device.32
                0x00000000c001d488                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001d4b4       0x2c hal/device.32
                0x00000000c001d4b4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001d4e0       0x2c hal/diskctrl.32
                0x00000000c001d4e0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001d50c       0x38 hal/diskphys.32
                0x00000000c001d50c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001d544       0x3e hal/intctrl.32
 *fill*         0x00000000c001d582        0x2 
 .rodata.str1.4
                0x00000000c001d584       0x5d hal/intctrl.32
 .rodata        0x00000000c001d5e1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001d634       0x34 hal/keybrd.32
                0x00000000c001d634                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001d668       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001d6ac       0x2c hal/logidisk.32
                0x00000000c001d6ac                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001d6d8       0x2c hal/mouse.32
                0x00000000c001d6d8                vtable for Mouse
 .rodata.str1.1
                0x00000000c001d704        0xb hal/partition.32
 *fill*         0x00000000c001d70f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001d710       0x44 hal/serial.32
                0x00000000c001d710                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001d754       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001d754        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001d754       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001d754       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001d754       0x30 hal/timer.32
                0x00000000c001d754                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001d784       0x10 hal/vcache.32
                0x00000000c001d784                vtable for VCache
 .rodata.str1.1
                0x00000000c001d794       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001d7fc       0x48 hal/video.32
                0x00000000c001d7fc                vtable for Video
 .rodata.str1.4
                0x00000000c001d844       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001d8df      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001da1b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001da1b        0x8 hw/acpi.32
 *fill*         0x00000000c001da1b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001da1c       0x2c hw/acpi.32
                0x00000000c001da1c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001da48      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001dbb5        0x3 
 .rodata._ZTV3CPU
                0x00000000c001dbb8       0x2c hw/cpu.32
                0x00000000c001dbb8                vtable for CPU
 .rodata.str1.1
                0x00000000c001dbe4       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001dc20       0x52 krnl/panic.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001dc72        0x2 
 .rodata.str1.4
                0x00000000c001dc74      0x117 krnl/panic.32
 .rodata.str1.1
                0x00000000c001dd8b       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001ddd0        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001ddda       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001de2e       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001de5a       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001dea2      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001e06e       0x57 thr/prcssthr.32
 *fill*         0x00000000c001e0c5        0x3 
 .rodata.str1.4
                0x00000000c001e0c8      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e1d4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e1d4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e1d4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e1d4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001e1d4       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001e274       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001e2a4      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001e3b2        0x2 
 .rodata.str1.4
                0x00000000c001e3b4       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001e427       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001e43c       0x3c arch/i386/rtc.32
                0x00000000c001e43c                vtable for RTC
 .rodata.str1.1
                0x00000000c001e478       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001e4b9        0x3 
 .rodata._ZTV3FAT
                0x00000000c001e4bc       0x68 fs/fat/vfslink.32
                0x00000000c001e4bc                vtable for FAT
 .rodata.str1.1
                0x00000000c001e524       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c001e53f        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c001e540       0x68 fs/iso9660/vfslink.32
                0x00000000c001e540                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001e5a8       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001e5ec       0x34 hal/sound/sndcard.32
                0x00000000c001e5ec                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001e620       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e65f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001e697       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001e738       0x2c hw/bus/pci.32
                0x00000000c001e738                vtable for PCI
 .rodata.str1.1
                0x00000000c001e764       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001e7eb        0x1 
 .rodata._ZTV3IDE
                0x00000000c001e7ec       0x2c hw/diskctrl/ide.32
                0x00000000c001e7ec                vtable for IDE
 .rodata.str1.4
                0x00000000c001e818       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001e83c       0x2c hw/diskctrl/satabus.32
                0x00000000c001e83c                vtable for SATABus
 .rodata.str1.1
                0x00000000c001e868       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001e87a        0x2 
 .rodata._ZTV3ATA
                0x00000000c001e87c       0x38 hw/diskphys/ata.32
                0x00000000c001e87c                vtable for ATA
 .rodata.str1.1
                0x00000000c001e8b4        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001e8c1        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001e8c4       0x38 hw/diskphys/atapi.32
                0x00000000c001e8c4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001e8fc       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001e978       0x38 hw/diskphys/sata.32
                0x00000000c001e978                vtable for SATA
 .rodata.str1.1
                0x00000000c001e9b0      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c001eae2        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c001eae4       0x38 hw/diskphys/satapi.32
                0x00000000c001eae4                vtable for SATAPI
 .rodata        0x00000000c001eb1c        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001eb24       0x2c hw/intctrl/apic.32
                0x00000000c001eb24                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001eb50       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001eb6b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001eb6c       0x30 hw/timer/apictimer.32
                0x00000000c001eb6c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001eb9c       0x1d hw/timer/pit.32
 *fill*         0x00000000c001ebb9        0x3 
 .rodata._ZTV3PIT
                0x00000000c001ebbc       0x30 hw/timer/pit.32
                0x00000000c001ebbc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001ebec      0x269
 *(.data)
 .data          0x00000000c001ebec        0x0 crti.32
 .data          0x00000000c001ebec        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001ebec                __dso_handle
 .data          0x00000000c001ebf0        0x0 acpica/utclib.32
 .data          0x00000000c001ebf0        0x0 core/malloc.32
 .data          0x00000000c001ebf0        0x0 libk/string.32
 .data          0x00000000c001ebf0        0x0 fs/fat/diskio.32
 .data          0x00000000c001ebf0        0x0 fs/fat/ff.32
 .data          0x00000000c001ebf0        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001ebf0        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001ebf0        0x0 compat/inlines.32
 .data          0x00000000c001ebf0        0x0 compat/resolve.32
 .data          0x00000000c001ebf0        0x0 core/computer.32
 .data          0x00000000c001ebf0        0x0 core/gdt.32
 .data          0x00000000c001ebf0        0x0 core/idle.32
 .data          0x00000000c001ebf0        0x0 core/idt.32
 .data          0x00000000c001ebf0        0x4 core/kheap.32
 *fill*         0x00000000c001ebf4        0xc 
 .data          0x00000000c001ec00      0x142 core/main.32
                0x00000000c001ec00                titleScreen
 *fill*         0x00000000c001ed42        0x2 
 .data          0x00000000c001ed44        0x4 core/physmgr.32
                0x00000000c001ed44                Phys::bitmap
 .data          0x00000000c001ed48        0x0 core/pipe.32
 *fill*         0x00000000c001ed48       0x18 
 .data          0x00000000c001ed60       0x60 core/terminal.32
                0x00000000c001ed60                VgaText::hiddenOut
                0x00000000c001ed80                ansiToVGAMappings
 .data          0x00000000c001edc0        0x0 core/tss.32
 .data          0x00000000c001edc0        0x4 core/unixfile.32
                0x00000000c001edc0                UnixFile::nextFd
 .data          0x00000000c001edc4       0x15 core/virtmgr.32
                0x00000000c001edc4                Virt::pageAllocPtr
                0x00000000c001edc8                Virt::bitmap
                0x00000000c001edcc                Virt::swapfileSectorsPerPage
                0x00000000c001edd0                Virt::swapfileLength
                0x00000000c001edd4                Virt::swapfileSector
                0x00000000c001edd8                Virt::swapfileDrive
 *fill*         0x00000000c001edd9        0x3 
 .data          0x00000000c001eddc        0x4 coreobjs/c++.32
                0x00000000c001eddc                __stack_chk_guard
 .data          0x00000000c001ede0        0x0 dbg/kconsole.32
 .data          0x00000000c001ede0        0x0 fs/vfs.32
 .data          0x00000000c001ede0        0x0 hal/bus.32
 .data          0x00000000c001ede0        0x0 hal/buzzer.32
 .data          0x00000000c001ede0        0x0 hal/clock.32
 .data          0x00000000c001ede0        0x0 hal/device.32
 .data          0x00000000c001ede0        0x0 hal/diskctrl.32
 .data          0x00000000c001ede0        0x0 hal/diskphys.32
 .data          0x00000000c001ede0        0x0 hal/fpu.32
 .data          0x00000000c001ede0        0x0 hal/intctrl.32
 .data          0x00000000c001ede0        0x0 hal/keybrd.32
 .data          0x00000000c001ede0        0x0 hal/logidisk.32
 .data          0x00000000c001ede0        0x0 hal/mouse.32
 .data          0x00000000c001ede0        0x0 hal/partition.32
 .data          0x00000000c001ede0        0x0 hal/serial.32
 .data          0x00000000c001ede0        0x0 hal/timer.32
 .data          0x00000000c001ede0        0x0 hal/vcache.32
 .data          0x00000000c001ede0        0x0 hal/video.32
 .data          0x00000000c001ede0       0x10 hw/acpi.32
                0x00000000c001ede0                legacyIRQRemaps
 .data          0x00000000c001edf0        0x4 hw/cpu.32
                0x00000000c001edf0                lastCode
 *fill*         0x00000000c001edf4        0xc 
 .data          0x00000000c001ee00       0x4d krnl/env.32
                0x00000000c001ee00                defaultSysEnv
 .data          0x00000000c001ee4d        0x0 krnl/panic.32
 .data          0x00000000c001ee4d        0x0 krnl/powctrl.32
 .data          0x00000000c001ee4d        0x0 reg/registry.32
 .data          0x00000000c001ee4d        0x0 sys/sc_eject.32
 .data          0x00000000c001ee4d        0x0 sys/sc_exit.32
 .data          0x00000000c001ee4d        0x0 sys/sc_getcwd.32
 .data          0x00000000c001ee4d        0x0 sys/sc_getpid.32
 .data          0x00000000c001ee4d        0x0 sys/sc_getramdata.32
 .data          0x00000000c001ee4d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001ee4d        0x0 sys/sc_loaddll.32
 .data          0x00000000c001ee4d        0x0 sys/sc_read.32
 .data          0x00000000c001ee4d        0x0 sys/sc_sbrk.32
 .data          0x00000000c001ee4d        0x0 sys/sc_setcwd.32
 .data          0x00000000c001ee4d        0x0 sys/sc_settime.32
 .data          0x00000000c001ee4d        0x0 sys/sc_timezone.32
 .data          0x00000000c001ee4d        0x0 sys/sc_write.32
 .data          0x00000000c001ee4d        0x0 sys/sc_wsbe.32
 .data          0x00000000c001ee4d        0x0 sys/sc_yield.32
 .data          0x00000000c001ee4d        0x0 sys/syscalls.32
 .data          0x00000000c001ee4d        0x0 thr/elf.32
 *fill*         0x00000000c001ee4d        0x3 
 .data          0x00000000c001ee50        0x4 thr/prcssthr.32
                0x00000000c001ee50                Thr::nextPID
 .data          0x00000000c001ee54        0x0 vm86/vm8086.32
 .data          0x00000000c001ee54        0x0 arch/i386/hal.32
 .data          0x00000000c001ee54        0x0 arch/i386/pic.32
 .data          0x00000000c001ee54        0x0 arch/i386/rtc.32
 .data          0x00000000c001ee54        0x0 arch/i386/vga.32
 .data          0x00000000c001ee54        0x0 fs/fat/vfslink.32
 .data          0x00000000c001ee54        0x1 fs/iso9660/vfslink.32
                0x00000000c001ee54                recentDriveletter
 .data          0x00000000c001ee55        0x0 hal/sound/sndcard.32
 .data          0x00000000c001ee55        0x0 hal/sound/sndport.32
 .data          0x00000000c001ee55        0x0 hw/bus/isa.32
 .data          0x00000000c001ee55        0x0 hw/bus/pci.32
 .data          0x00000000c001ee55        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001ee55        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001ee55        0x0 hw/diskphys/ata.32
 .data          0x00000000c001ee55        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001ee55        0x0 hw/diskphys/sata.32
 .data          0x00000000c001ee55        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001ee55        0x0 hw/intctrl/apic.32
 .data          0x00000000c001ee55        0x0 hw/timer/apictimer.32
 .data          0x00000000c001ee55        0x0 hw/timer/pit.32
 .data          0x00000000c001ee55        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001ee55        0x0 crtn.32
 .data          0x00000000c001ee55        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001ee55        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001ee55        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001ee55        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001ee58        0x0
 .got           0x00000000c001ee58        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001ee58        0x0
 .got.plt       0x00000000c001ee58        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001ee58        0x0
 .igot.plt      0x00000000c001ee58        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001ee58        0x0
 .tm_clone_table
                0x00000000c001ee58        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001ee58        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001ee55      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001ee55        0x3 
 .eh_frame      0x00000000c001ee58        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001ee58        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001ee58       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001eeb0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001eef0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001ef5c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001efe0        0x0
 .rel.got       0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001efe0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001efe0     0x4368
                0x00000000c001efe0                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c001efe0        0x0 crti.32
 .bss           0x00000000c001efe0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001f000        0x4 acpica/utclib.32
 *fill*         0x00000000c001f004       0x1c 
 .bss           0x00000000c001f020      0x378 core/malloc.32
 .bss           0x00000000c001f398        0x0 libk/string.32
 .bss           0x00000000c001f398        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001f398        0x8 
 .bss           0x00000000c001f3a0       0x88 fs/fat/ff.32
 .bss           0x00000000c001f428        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001f428        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c001f428        0x0 compat/inlines.32
 .bss           0x00000000c001f428        0x0 compat/resolve.32
 .bss           0x00000000c001f428        0x6 core/computer.32
                0x00000000c001f428                Krnl::computer
                0x00000000c001f42c                Krnl::preemptionOn
                0x00000000c001f42d                Krnl::schedulingOn
 *fill*         0x00000000c001f42e        0x2 
 .bss           0x00000000c001f430        0x6 core/gdt.32
                0x00000000c001f430                gdtDescr
 .bss           0x00000000c001f436        0x0 core/idle.32
 *fill*         0x00000000c001f436        0x2 
 .bss           0x00000000c001f438        0x6 core/idt.32
                0x00000000c001f438                idtDescr
 .bss           0x00000000c001f43e        0x0 core/kheap.32
 *fill*         0x00000000c001f43e        0x2 
 .bss           0x00000000c001f440        0x4 core/main.32
                0x00000000c001f440                sysBootSettings
 .bss           0x00000000c001f444       0x29 core/physmgr.32
                0x00000000c001f444                Phys::forbidEvictions
                0x00000000c001f448                Phys::currentPagePointer
                0x00000000c001f44c                Phys::highestMem
                0x00000000c001f450                Phys::oldPercent
                0x00000000c001f454                Phys::usedPages
                0x00000000c001f458                Phys::usablePages
                0x00000000c001f45c                Phys::dmaUsage
 .bss           0x00000000c001f46d        0x0 core/pipe.32
 *fill*         0x00000000c001f46d        0x3 
 .bss           0x00000000c001f470        0x9 core/terminal.32
                0x00000000c001f470                terminalCycle
                0x00000000c001f474                activeTerminal
                0x00000000c001f478                VgaText::graphicMode
 *fill*         0x00000000c001f479        0x1 
 .bss           0x00000000c001f47a        0x2 core/tss.32
                0x00000000c001f47a                doubleFaultSelector
 *fill*         0x00000000c001f47c        0x4 
 .bss           0x00000000c001f480       0x84 core/unixfile.32
                0x00000000c001f480                sfileLpt
                0x00000000c001f4c0                sfileCom
                0x00000000c001f4e4                sfileNul
                0x00000000c001f4e8                sfilePnt
                0x00000000c001f4ec                sfileAux
                0x00000000c001f4f0                sfileCon
                0x00000000c001f4f4                initialFilesAdded
                0x00000000c001f4f8                unixFileLinkedList
 .bss           0x00000000c001f504       0x14 core/virtmgr.32
                0x00000000c001f504                twswaps
                0x00000000c001f508                swapBalance
                0x00000000c001f50c                panicVAS
                0x00000000c001f510                Virt::swapfileBitmap
                0x00000000c001f514                firstVAS
 .bss           0x00000000c001f518        0x0 coreobjs/c++.32
 .bss           0x00000000c001f518        0x0 dbg/kconsole.32
 .bss           0x00000000c001f518        0x4 fs/vfs.32
                0x00000000c001f518                installedFilesystems
 .bss           0x00000000c001f51c        0x0 hal/bus.32
 .bss           0x00000000c001f51c        0x0 hal/buzzer.32
 .bss           0x00000000c001f51c        0x8 hal/clock.32
                0x00000000c001f51c                User::dstOn
                0x00000000c001f51d                User::timezoneHalfHourOffset
                0x00000000c001f520                User::timezoneHourOffset
 .bss           0x00000000c001f524        0x0 hal/device.32
 .bss           0x00000000c001f524        0x0 hal/diskctrl.32
 .bss           0x00000000c001f524        0x0 hal/diskphys.32
 .bss           0x00000000c001f524        0x0 hal/fpu.32
 *fill*         0x00000000c001f524       0x1c 
 .bss           0x00000000c001f540     0x2000 hal/intctrl.32
                0x00000000c001f540                INT_contexts
                0x00000000c0020540                INT_handlers
 .bss           0x00000000c0021540      0x429 hal/keybrd.32
                0x00000000c0021540                keyboardWaitingTaskList
                0x00000000c0021544                keyboardSetupYet
                0x00000000c0021548                guiKeyboardHandler
                0x00000000c0021560                keystates
 *fill*         0x00000000c0021969       0x17 
 .bss           0x00000000c0021980       0x88 hal/logidisk.32
                0x00000000c0021980                diskAssignments
                0x00000000c00219a0                disks
 .bss           0x00000000c0021a08        0x4 hal/mouse.32
                0x00000000c0021a08                guiMouseHandler
 .bss           0x00000000c0021a0c        0x0 hal/partition.32
 .bss           0x00000000c0021a0c        0x0 hal/serial.32
 .bss           0x00000000c0021a0c        0x4 hal/timer.32
                0x00000000c0021a0c                milliTenthsSinceBoot
 .bss           0x00000000c0021a10        0x0 hal/vcache.32
 .bss           0x00000000c0021a10        0x4 hal/video.32
                0x00000000c0021a10                screen
 *fill*         0x00000000c0021a14        0xc 
 .bss           0x00000000c0021a20      0x480 hw/acpi.32
                0x00000000c0021a20                systemSleepFunction
                0x00000000c0021a24                systemResetFunction
                0x00000000c0021a28                systemShutdownFunction
                0x00000000c0021a2c                nextACPITable
                0x00000000c0021a40                acpiTables
                0x00000000c0021c40                usingXSDT
                0x00000000c0021c44                MADTpointer
                0x00000000c0021c48                RSDTpointer
                0x00000000c0021c4c                RSDPpointer
                0x00000000c0021c50                nextAPICNMI
                0x00000000c0021c60                apicNMIInfo
                0x00000000c0021ce0                legacyIRQFlags
                0x00000000c0021d00                ioapicDiscoveryNumber
                0x00000000c0021d20                ioapicFoundInMADT
                0x00000000c0021d40                ioapicAddresses
                0x00000000c0021dc0                ioapicGSIBase
                0x00000000c0021e40                processorDiscoveryNumber
                0x00000000c0021e60                matchingAPICID
                0x00000000c0021e80                processorID
 .bss           0x00000000c0021ea0       0x10 hw/cpu.32
                0x00000000c0021ea0                lastD
                0x00000000c0021ea4                lastC
                0x00000000c0021ea8                lastB
                0x00000000c0021eac                lastA
 .bss           0x00000000c0021eb0        0x8 krnl/env.32
                0x00000000c0021eb0                Krnl::userEnv
                0x00000000c0021eb4                Krnl::systemEnv
 .bss           0x00000000c0021eb8        0x9 krnl/panic.32
                0x00000000c0021eb8                Krnl::guiProgramFaultHandler
                0x00000000c0021ebc                Krnl::guiPanicHandler
                0x00000000c0021ec0                Krnl::kernelInPanic
 *fill*         0x00000000c0021ec1       0x1f 
 .bss           0x00000000c0021ee0       0x48 krnl/powctrl.32
                0x00000000c0021ee0                Krnl::powCtrlOnBattery
                0x00000000c0021f00                Krnl::currentPowerSettings
                0x00000000c0021f24                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0021f28        0x0 reg/registry.32
 .bss           0x00000000c0021f28        0x0 sys/sc_eject.32
 .bss           0x00000000c0021f28        0x0 sys/sc_exit.32
 .bss           0x00000000c0021f28        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0021f28        0x0 sys/sc_getpid.32
 .bss           0x00000000c0021f28        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0021f28        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0021f28        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0021f28        0x0 sys/sc_read.32
 .bss           0x00000000c0021f28        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0021f28        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0021f28        0x0 sys/sc_settime.32
 .bss           0x00000000c0021f28        0x0 sys/sc_timezone.32
 .bss           0x00000000c0021f28        0x0 sys/sc_write.32
 .bss           0x00000000c0021f28        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0021f28        0x0 sys/sc_yield.32
 *fill*         0x00000000c0021f28       0x18 
 .bss           0x00000000c0021f40      0x200 sys/syscalls.32
                0x00000000c0021f40                systemCallHandlers
 .bss           0x00000000c0022140      0x7a4 thr/elf.32
                0x00000000c0022140                Thr::driverLookupNext
                0x00000000c0022160                Thr::driverLookupLen
                0x00000000c0022360                Thr::driverLookupAddr
                0x00000000c0022560                Thr::driverNameLookup
                0x00000000c0022760                Thr::kernelSymbols
                0x00000000c00227e0                Thr::kernelStringTable
                0x00000000c0022860                Thr::kernelSymbolTable
                0x00000000c00228e0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00228e4        0x4 
 .bss           0x00000000c00228e8       0x68 thr/prcssthr.32
                0x00000000c00228e8                cleanerThread
                0x00000000c00228ec                weNeedTheCleanerToNotBlock
                0x00000000c00228f0                retValLockStuff
                0x00000000c00228f4                retValSchedLock
                0x00000000c00228f8                lockStuffLock
                0x00000000c00228fc                schedulerLock
                0x00000000c0022900                taskSwitchesPostponedFlag
                0x00000000c0022904                postponeTaskSwitchesCounter
                0x00000000c0022908                irqDisableCounter
                0x00000000c002290c                terminatedTaskList
                0x00000000c0022918                sleepingTaskList
                0x00000000c0022924                taskList
                0x00000000c0022930                kernelProcess
 *fill*         0x00000000c0022950       0x10 
 .bss           0x00000000c0022960       0x40 vm86/vm8086.32
                0x00000000c0022960                Vm::vmRetV
                0x00000000c0022964                Vm::vmDone
                0x00000000c0022965                Vm::vmReady
                0x00000000c0022968                Vm::vm86Thread
                0x00000000c002296c                Vm::vmToHostCommsPtr
                0x00000000c0022980                Vm::vmToHostComms
 .bss           0x00000000c00229a0       0x14 arch/i386/hal.32
                0x00000000c00229a0                apic
                0x00000000c00229a4                fpuOwner
                0x00000000c00229a8                coproLoadFunc
                0x00000000c00229ac                coproSaveFunc
                0x00000000c00229b0                gpFaultIntercept
 .bss           0x00000000c00229b4        0x0 arch/i386/pic.32
 .bss           0x00000000c00229b4        0x2 arch/i386/rtc.32
 .bss           0x00000000c00229b6        0x0 arch/i386/vga.32
 *fill*         0x00000000c00229b6        0xa 
 .bss           0x00000000c00229c0       0xf0 fs/fat/vfslink.32
                0x00000000c00229c0                FAT::fats
                0x00000000c00229e0                FAT::vfsToFatRemaps
                0x00000000c0022a60                fatToVFSRemaps
 *fill*         0x00000000c0022ab0       0x10 
 .bss           0x00000000c0022ac0      0x820 fs/iso9660/vfslink.32
                0x00000000c0022ac0                recentSector
                0x00000000c0022ae0                recentBuffer
 .bss           0x00000000c00232e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00232e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00232e0        0x0 hw/bus/isa.32
 .bss           0x00000000c00232e0        0xd hw/bus/pci.32
                0x00000000c00232e0                thePCI
 .bss           0x00000000c00232ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00232ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00232ed        0x3 
 .bss           0x00000000c00232f0        0x8 hw/diskphys/ata.32
                0x00000000c00232f0                ataSectorsWritten
                0x00000000c00232f4                ataSectorsRead
 .bss           0x00000000c00232f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00232f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00232f8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c00232f8        0x8 
 .bss           0x00000000c0023300       0x41 hw/intctrl/apic.32
                0x00000000c0023300                noOfIOAPICs
                0x00000000c0023320                ioapics
                0x00000000c0023340                IOAPICsSetupYet
 .bss           0x00000000c0023341        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0023341        0x3 
 .bss           0x00000000c0023344        0x4 hw/timer/pit.32
                0x00000000c0023344                pitFreq
 .bss           0x00000000c0023348        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0023348        0x0 crtn.32
 .bss           0x00000000c0023348        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0023348        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0023348        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0023348        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0023348                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00276b0                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
