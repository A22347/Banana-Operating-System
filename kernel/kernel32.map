Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f33a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6c5 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca8                Krnl::firstTask()
                0x00000000c0006de8                Computer::Computer()
                0x00000000c0006de8                Computer::Computer()
                0x00000000c0006e98                Computer::setBootMessage(char const*)
                0x00000000c0006e9a                Computer::detectFeatures()
                0x00000000c00070c0                Computer::displayFeatures()
                0x00000000c00070c2                Computer::rdmsr(unsigned int)
                0x00000000c00070ee                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000712a                Computer::shutdown()
                0x00000000c0007142                Computer::restart()
                0x00000000c000715a                Computer::sleep()
                0x00000000c000716e                Computer::nmiEnabled()
                0x00000000c000717a                Computer::readCMOS(unsigned char)
                0x00000000c0007198                Computer::enableNMI(bool)
                0x00000000c00071b0                Computer::open(int, int, void*)
                0x00000000c0007284                Computer::disableNMI()
                0x00000000c0007294                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072b8                Computer::handleNMI()
 *fill*         0x00000000c0007323        0x1 
 .text          0x00000000c0007324      0x1db core/gdt.32
                0x00000000c0007324                GDTEntry::setBase(unsigned int)
                0x00000000c0007340                GDTEntry::setLimit(unsigned int)
                0x00000000c000735e                GDT::GDT()
                0x00000000c000735e                GDT::GDT()
                0x00000000c0007374                GDT::addEntry(GDTEntry)
                0x00000000c0007396                GDT::getNumberOfEntries()
                0x00000000c000739e                GDT::flush()
                0x00000000c00073c0                GDT::setup()
 .text          0x00000000c00074ff       0x1d core/idle.32
                0x00000000c00074ff                idleFunction(void*)
 .text          0x00000000c000751c      0x46c core/idt.32
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c0007596                IDTEntry::setOffset(unsigned int)
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ae                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075b6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007608                IDT::flush()
                0x00000000c0007622                IDT::setup()
 .text          0x00000000c0007988      0x188 core/kheap.32
                0x00000000c0007988                sbrk
                0x00000000c0007a1f                mmap
                0x00000000c0007a35                munmap
                0x00000000c0007a4b                liballoc_lock()
                0x00000000c0007a59                liballoc_unlock()
                0x00000000c0007a6f                liballoc_alloc(int)
                0x00000000c0007a87                liballoc_free(void*, int)
                0x00000000c0007aa2                realloc
                0x00000000c0007ab6                malloc
                0x00000000c0007ac6                free
                0x00000000c0007ad6                rfree
                0x00000000c0007ae6                calloc
 .text          0x00000000c0007b10       0xc7 core/main.32
                0x00000000c0007b10                KeEntryPoint
 .text          0x00000000c0007bd7      0x644 core/physmgr.32
                0x00000000c0007bd7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cbf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfa                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3a                Phys::getPageState(unsigned long)
                0x00000000c0007d56                Phys::freePage(unsigned long)
                0x00000000c0007dbf                Phys::allocatePage()
                0x00000000c0007e8e                Phys::allocateContiguousPages(int)
                0x00000000c0007ef5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f2d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000821b        0x1 
 .text          0x00000000c000821c      0x273 core/pipe.32
                0x00000000c000821c                Pipe::isAtty()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008244                Pipe::~Pipe()
                0x00000000c000826c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000832c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xab3 core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a60                VgaText::putx(unsigned int)
                0x00000000c0008aa6                VgaText::puts(char const*)
                0x00000000c0008acc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b18                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008db6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f42                VgaText::doUpdate()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x1a1 core/tss.32
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f54                TSS::setESP(unsigned long)
                0x00000000c0008f68                TSS::flush()
                0x00000000c0008f88                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090e5        0x1 
 .text          0x00000000c00090e6      0x4ca core/unixfile.32
                0x00000000c00090e6                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000913c                ReservedFilename::isAtty()
                0x00000000c0009158                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091b6                UnixFile::getFileDescriptor()
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c0009440                UnixFile::~UnixFile()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c000948c                ReservedFilename::~ReservedFilename()
                0x00000000c00094b3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b0     0x1218 core/virtmgr.32
                0x00000000c00095b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ea                Virt::getPageState(unsigned long)
                0x00000000c000960d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009732                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009755                Virt::swapIDToSector(unsigned long)
                0x00000000c000976b                Virt::allocateSwapfilePage()
                0x00000000c00097eb                Virt::virtualMemorySetup()
                0x00000000c000983c                Virt::setupPageSwapping(int)
                0x00000000c00098ae                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098de                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000992b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a68                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a8c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aa6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009b52                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b86                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009d20                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e24                VAS::allocatePages(int, int)
                0x00000000c0009f1a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f72                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a2b2                VAS::evict(unsigned long)
                0x00000000c000a390                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a52a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a59e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ca                VAS::scanForEviction()
                0x00000000c000a6cd                mapVASFirstTime
 .text          0x00000000c000a7c8       0x5f coreobjs/c++.32
                0x00000000c000a7c8                __cxa_atexit
                0x00000000c000a7cb                __cxa_finalize
                0x00000000c000a7cc                __stack_chk_fail
                0x00000000c000a802                __cxa_pure_virtual
                0x00000000c000a813                operator new[](unsigned long)
                0x00000000c000a818                operator delete(void*, unsigned long)
                0x00000000c000a81d                operator delete[](void*)
                0x00000000c000a822                operator delete[](void*, unsigned long)
 .text          0x00000000c000a827      0x254 dbg/kconsole.32
                0x00000000c000a827                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8c7                Dbg::logc(char)
                0x00000000c000a8e7                Dbg::logs(char*)
                0x00000000c000a906                Dbg::logWriteInt(unsigned int)
                0x00000000c000a924                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a945                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa7b        0x1 
 .text          0x00000000c000aa7c      0x2d4 dbg/usban.32
                0x00000000c000aa7c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aae8                __ubsan_handle_type_mismatch_v1
                0x00000000c000abc4                __ubsan_handle_pointer_overflow
                0x00000000c000abf0                __ubsan_handle_out_of_bounds
                0x00000000c000ac1c                __ubsan_handle_add_overflow
                0x00000000c000ac48                __ubsan_handle_load_invalid_value
                0x00000000c000ac74                __ubsan_handle_divrem_overflow
                0x00000000c000aca0                __ubsan_handle_mul_overflow
                0x00000000c000accc                __ubsan_handle_sub_overflow
                0x00000000c000acf8                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad24                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad50      0x53c fs/symlink.32
                0x00000000c000ad50                KiCreateLinkID()
                0x00000000c000adbd                KiFlushSymlinkChanges()
                0x00000000c000ae90                KiDeinitialiseSymlinks(void*)
                0x00000000c000ae95                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000af04                KeInitialiseSymlinks()
                0x00000000c000afa9                KiIsSymlinkRegistered(char const*)
                0x00000000c000afae                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b160                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c000b28c      0xcb6 fs/vfs.32
                0x00000000c000b28c                File::read(unsigned long long, void*, int*)
                0x00000000c000b2e4                File::write(unsigned long long, void*, int*)
                0x00000000c000b33c                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b394                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b3c2                File::isAtty()
                0x00000000c000b3c6                Directory::isAtty()
                0x00000000c000b3ca                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b3d0                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b3d6                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b3dc                File::~File()
                0x00000000c000b3dc                File::~File()
                0x00000000c000b400                File::~File()
                0x00000000c000b42a                Directory::~Directory()
                0x00000000c000b42a                Directory::~Directory()
                0x00000000c000b44e                Directory::~Directory()
                0x00000000c000b478                Filesystem::Filesystem()
                0x00000000c000b478                Filesystem::Filesystem()
                0x00000000c000b49c                Filesystem::~Filesystem()
                0x00000000c000b49c                Filesystem::~Filesystem()
                0x00000000c000b4aa                Filesystem::~Filesystem()
                0x00000000c000b4ce                Fs::getcwd(Process*, char*, int)
                0x00000000c000b4f8                Fs::initVFS()
                0x00000000c000b522                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b6d8                File::File(char const*, Process*)
                0x00000000c000b6d8                File::File(char const*, Process*)
                0x00000000c000b794                File::open(FileOpenMode)
                0x00000000c000b7f2                File::close()
                0x00000000c000b852                File::seek(unsigned long long)
                0x00000000c000b8a8                File::truncate(unsigned long long)
                0x00000000c000b8fe                File::tell(unsigned long long*)
                0x00000000c000b94e                File::rewind()
                0x00000000c000b962                File::unlink()
                0x00000000c000b9ae                File::rename(char const*)
                0x00000000c000b9fc                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ba58                File::exists()
                0x00000000c000ba96                File::stat(unsigned long long*, bool*)
                0x00000000c000baf7                Fs::setcwd(Process*, char*)
                0x00000000c000bc54                Directory::Directory(char const*, Process*)
                0x00000000c000bc54                Directory::Directory(char const*, Process*)
                0x00000000c000bd10                Directory::open()
                0x00000000c000bd6c                Directory::close()
                0x00000000c000bdcc                Directory::unlink()
                0x00000000c000be18                Directory::rename(char const*)
                0x00000000c000be66                Directory::exists()
                0x00000000c000bea4                Directory::read(dirent*)
                0x00000000c000bef0                Directory::create()
                0x00000000c000bf3c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000bf42        0x2 
 .text          0x00000000c000bf44       0x86 hal/bus.32
                0x00000000c000bf44                Bus::Bus(char const*)
                0x00000000c000bf44                Bus::Bus(char const*)
                0x00000000c000bf7c                Bus::~Bus()
                0x00000000c000bf7c                Bus::~Bus()
                0x00000000c000bfa0                Bus::~Bus()
 .text          0x00000000c000bfca       0x96 hal/buzzer.32
                0x00000000c000bfca                beepThread(void*)
                0x00000000c000c007                Krnl::beep(int, int, bool)
 .text          0x00000000c000c060      0x45f hal/clock.32
                0x00000000c000c060                User::loadClockSettings(int)
                0x00000000c000c0b2                Clock::Clock(char const*)
                0x00000000c000c0b2                Clock::Clock(char const*)
                0x00000000c000c0e8                Clock::~Clock()
                0x00000000c000c0e8                Clock::~Clock()
                0x00000000c000c10c                Clock::~Clock()
                0x00000000c000c136                Clock::timeInSecondsLocal()
                0x00000000c000c17e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c1d7                datetimeToSeconds(datetime_t)
                0x00000000c000c2f6                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c356                secondsToDatetime(unsigned long long)
                0x00000000c000c49a                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c4bf        0x1 
 .text          0x00000000c000c4c0      0x464 hal/device.32
                0x00000000c000c4c0                Device::hibernate()
                0x00000000c000c4c2                Device::wake()
                0x00000000c000c4c4                Device::detect()
                0x00000000c000c4c6                Device::disableLegacy()
                0x00000000c000c4c8                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c4ca                DriverlessDevice::close(int, int, void*)
                0x00000000c000c4ce                DriverlessDevice::detect()
                0x00000000c000c4d0                DriverlessDevice::open(int, int, void*)
                0x00000000c000c4e4                Device::~Device()
                0x00000000c000c4e4                Device::~Device()
                0x00000000c000c4f2                Device::~Device()
                0x00000000c000c51a                Device::findAndLoadDriver()
                0x00000000c000c528                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c54e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c58e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c5b8                Device::getParent()
                0x00000000c000c5c4                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c5e2                Device::addChild(Device*)
                0x00000000c000c626                Device::removeAllChildren()
                0x00000000c000c66c                Device::hibernateAll()
                0x00000000c000c69c                Device::wakeAll()
                0x00000000c000c6cc                Device::detectAll()
                0x00000000c000c6fc                Device::disableLegacyAll()
                0x00000000c000c6fe                Device::loadDriversForAll()
                0x00000000c000c700                Device::closeAll()
                0x00000000c000c736                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c76c                Device::setName(char const*)
                0x00000000c000c77a                Device::Device(char const*)
                0x00000000c000c77a                Device::Device(char const*)
                0x00000000c000c876                Device::getName()
                0x00000000c000c880                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c880                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c8b6                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c8fa                getDevicesOfType(DeviceType)
 .text          0x00000000c000c924       0x86 hal/diskctrl.32
                0x00000000c000c924                HardDiskController::HardDiskController(char const*)
                0x00000000c000c924                HardDiskController::HardDiskController(char const*)
                0x00000000c000c95c                HardDiskController::~HardDiskController()
                0x00000000c000c95c                HardDiskController::~HardDiskController()
                0x00000000c000c980                HardDiskController::~HardDiskController()
 .text          0x00000000c000c9aa       0xe2 hal/diskphys.32
                0x00000000c000c9aa                PhysicalDisk::eject()
                0x00000000c000c9ae                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c9ae                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ca16                PhysicalDisk::startCache()
                0x00000000c000ca3e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ca3e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ca62                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ca8c        0x0 hal/fpu.32
 .text          0x00000000c000ca8c      0x359 hal/intctrl.32
                0x00000000c000ca8c                int_handler
                0x00000000c000cb16                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cb60                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000cc94                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000ccc8                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000cd46                setupINTS()
                0x00000000c000cda3                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000cde5        0x1 
 .text          0x00000000c000cde6      0x8be hal/keybrd.32
                0x00000000c000cde6                startGUI(void*)
                0x00000000c000ce54                startGUIVESA(void*)
                0x00000000c000cec2                sendKeyToTerminal(unsigned char)
                0x00000000c000cf9d                sendKeyboardToken(KeyboardToken)
                0x00000000c000d487                clearInternalKeybuffer(VgaText*)
                0x00000000c000d4bc                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d61a                Keyboard::Keyboard(char const*)
                0x00000000c000d61a                Keyboard::Keyboard(char const*)
                0x00000000c000d656                Keyboard::~Keyboard()
                0x00000000c000d656                Keyboard::~Keyboard()
                0x00000000c000d67a                Keyboard::~Keyboard()
 .text          0x00000000c000d6a4      0x3f8 hal/logidisk.32
                0x00000000c000d6a4                LogicalDisk::close(int, int, void*)
                0x00000000c000d6a8                LogicalDisk::~LogicalDisk()
                0x00000000c000d6a8                LogicalDisk::~LogicalDisk()
                0x00000000c000d6cc                LogicalDisk::~LogicalDisk()
                0x00000000c000d6f6                LogicalDisk::open(int, int, void*)
                0x00000000c000d70a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d742                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d788                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d788                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d848                LogicalDisk::assignDriveLetter()
                0x00000000c000d902                LogicalDisk::mount()
                0x00000000c000d94a                LogicalDisk::unmount()
                0x00000000c000d95a                LogicalDisk::eject()
                0x00000000c000d96e                LogicalDisk::unassignDriveLetter()
                0x00000000c000d9c4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000da30                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000da9c       0x86 hal/mouse.32
                0x00000000c000da9c                Mouse::Mouse(char const*)
                0x00000000c000da9c                Mouse::Mouse(char const*)
                0x00000000c000dad4                Mouse::~Mouse()
                0x00000000c000dad4                Mouse::~Mouse()
                0x00000000c000daf8                Mouse::~Mouse()
 .text          0x00000000c000db22       0x90 hal/nic.32
                0x00000000c000db22                NIC::getMAC()
                0x00000000c000db28                NIC::write(int, unsigned char*, int*)
                0x00000000c000db2e                NIC::NIC(char const*)
                0x00000000c000db2e                NIC::NIC(char const*)
                0x00000000c000db64                NIC::~NIC()
                0x00000000c000db64                NIC::~NIC()
                0x00000000c000db88                NIC::~NIC()
 .text          0x00000000c000dbb2      0x33b hal/partition.32
                0x00000000c000dbb2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc5a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000deed        0x3 
 .text          0x00000000c000def0       0x86 hal/serial.32
                0x00000000c000def0                Serial::Serial(char const*)
                0x00000000c000def0                Serial::Serial(char const*)
                0x00000000c000df28                Serial::~Serial()
                0x00000000c000df28                Serial::~Serial()
                0x00000000c000df4c                Serial::~Serial()
 *fill*         0x00000000c000df76        0x2 
 .text          0x00000000c000df78      0x234 hal/timer.32
                0x00000000c000df78                Timer::Timer(char const*)
                0x00000000c000df78                Timer::Timer(char const*)
                0x00000000c000dfb0                Timer::~Timer()
                0x00000000c000dfb0                Timer::~Timer()
                0x00000000c000dfd4                Timer::~Timer()
                0x00000000c000dffe                Timer::read()
                0x00000000c000e009                setupTimer(int)
                0x00000000c000e044                timerHandler(unsigned int)
 .text          0x00000000c000e1ac      0x444 hal/vcache.32
                0x00000000c000e1ac                VCache::VCache(PhysicalDisk*)
                0x00000000c000e1ac                VCache::VCache(PhysicalDisk*)
                0x00000000c000e31c                VCache::invalidateReadBuffer()
                0x00000000c000e32c                VCache::writeWriteBuffer()
                0x00000000c000e378                VCache::~VCache()
                0x00000000c000e378                VCache::~VCache()
                0x00000000c000e3d0                VCache::~VCache()
                0x00000000c000e3f8                VCache::write(unsigned long long, int, void*)
                0x00000000c000e4e6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e5f0      0x4c7 hal/video.32
                0x00000000c000e5f0                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e63c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e6ac                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e72a                Video::clearScreen(unsigned int)
                0x00000000c000e75e                Video::putpixel(int, int, unsigned int)
                0x00000000c000e76c                Video::readPixelApprox(int, int)
                0x00000000c000e780                Video::Video(char const*)
                0x00000000c000e780                Video::Video(char const*)
                0x00000000c000e7b6                Video::~Video()
                0x00000000c000e7b6                Video::~Video()
                0x00000000c000e7da                Video::~Video()
                0x00000000c000e804                Video::isMonochrome()
                0x00000000c000e810                Video::getWidth()
                0x00000000c000e81c                Video::getHeight()
                0x00000000c000e828                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e8e4                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ea4c                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eab7        0x1 
 .text          0x00000000c000eab8     0x138b hw/acpi.32
                0x00000000c000eab8                ACPI::close(int, int, void*)
                0x00000000c000eb6c                findRSDP()
                0x00000000c000ec04                loadACPITables(unsigned char*)
                0x00000000c000ee70                findRSDT(unsigned char*)
                0x00000000c000efc8                findDataTable(unsigned char*, char*)
                0x00000000c000f048                scanMADT()
                0x00000000c000f500                ACPI::ACPI()
                0x00000000c000f500                ACPI::ACPI()
                0x00000000c000f554                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f650                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f71c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f724                ACPI::detectPCI()
                0x00000000c000f944                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f98c                ACPI::sleep()
                0x00000000c000f9a8                ACPI::open(int, int, void*)
 *fill*         0x00000000c000fe43        0x1 
 .text          0x00000000c000fe44      0xbc5 hw/cpu.32
                0x00000000c000fe44                CPU::close(int, int, void*)
                0x00000000c000fe48                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000fe64                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000fe7c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000fef0                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000ff74                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000ffa2                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000ffd0                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000fffe                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c001002c                CPU::CPU()
                0x00000000c001002c                CPU::CPU()
                0x00000000c00100ba                CPU::displayFeatures()
                0x00000000c00100bc                CPU::detectFeatures()
                0x00000000c0010790                CPU::setupSMEP()
                0x00000000c001079c                CPU::setupUMIP()
                0x00000000c00107a6                CPU::setupTSC()
                0x00000000c00107b0                CPU::setupLargePages()
                0x00000000c00107ba                CPU::setupPAT()
                0x00000000c00107f6                CPU::setupMTRR()
                0x00000000c00107f8                CPU::setupGlobalPages()
                0x00000000c0010802                CPU::allowUsermodeDataAccess()
                0x00000000c0010814                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010826                CPU::setupSMAP()
                0x00000000c0010834                CPU::setupFeatures()
                0x00000000c0010900                CPU::open(int, int, void*)
 .text          0x00000000c0010a09       0x91 krnl/atexit.32
                0x00000000c0010a09                KeInitialiseAtexit()
                0x00000000c0010a2b                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010a5f                KeExecuteAtexit()
 .text          0x00000000c0010a9a       0xdf krnl/bootmsg.32
                0x00000000c0010a9a                KeDisplaySplashScreen()
                0x00000000c0010b16                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010b79        0x3 
 .text          0x00000000c0010b7c       0x1d krnl/compat.32
                0x00000000c0010b7c                Krnl::handlePowerButton()
                0x00000000c0010b8c                Krnl::handleSleepButton()
 *fill*         0x00000000c0010b99        0x1 
 .text          0x00000000c0010b9a      0x5bf krnl/env.32
                0x00000000c0010b9a                EnvVarContainer::getEnv(char const*)
                0x00000000c0010bd8                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010c9a                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010c9c                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010ec0                EnvVarContainer::__loadSystem()
                0x00000000c0010eda                EnvVarContainer::__loadUser()
                0x00000000c0010edc                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010edc                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010efe                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010efe                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010f2e                KeGetEnv(Process*, char const*)
                0x00000000c0010f93                KeSetEnvSystem(char const*, char const*)
                0x00000000c0010fad                KeSetEnvUser(char const*, char const*)
                0x00000000c0010fcc                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0010fdf                KeDeleteEnvSystem(char const*)
                0x00000000c0010fe0                KeDeleteEnvUser(char const*)
                0x00000000c0010fe1                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0010fe2                KeNewProcessEnv(Process*)
                0x00000000c0011004                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0011050                KeLoadSystemEnv()
                0x00000000c001107e                KeLoadUserEnv()
                0x00000000c00110a4                KeFlushEnv()
                0x00000000c00110a5                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00110c5                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011159       0x94 krnl/inlines.32
                0x00000000c0011159                CPU::current()
                0x00000000c0011165                operator new(unsigned long)
                0x00000000c001116a                operator delete(void*)
                0x00000000c001116f                disableIRQs()
                0x00000000c0011171                enableIRQs()
                0x00000000c0011173                lockScheduler()
                0x00000000c001117b                unlockScheduler()
                0x00000000c001118a                lockStuff()
                0x00000000c0011198                unlockStuff()
                0x00000000c00111d2                Virt::getAKernelVAS()
                0x00000000c00111d8                __not_memcpy
 .text          0x00000000c00111ed        0xc krnl/panic.32
                0x00000000c00111ed                KePanic(char const*)
 .text          0x00000000c00111f9      0x142 krnl/powctrl.32
                0x00000000c00111f9                KePowerThread(void*)
                0x00000000c0011227                KeChangePowerSettings(PowerSettings)
                0x00000000c001123d                KeUserIOReceived()
                0x00000000c0011248                KeHandlePowerButton()
                0x00000000c001127d                KeHandleSleepButton()
                0x00000000c00112b2                KeSetupPowerManager()
 .text          0x00000000c001133b       0x9d krnl/random.32
                0x00000000c001133b                KeRand()
                0x00000000c001137d                KeSeedRand(unsigned int)
                0x00000000c00113a6                KeInitRand()
 .text          0x00000000c00113d8      0x1bc krnl/resolve.32
                0x00000000c00113d8                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011594      0x322 krnl/signal.32
                0x00000000c0011594                KiSigKill(int)
                0x00000000c00115a8                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00115a9                KiDefaultSignalHandlerPause(int)
                0x00000000c00115d5                KiDefaultSignalHandlerResume(int)
                0x00000000c0011601                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011606                KeInitSignals()
                0x00000000c0011658                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001168e                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001170b                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011802                KiCheckSignalZ
                0x00000000c0011844                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c001187f                KiFinishSignalZ
 .text          0x00000000c00118b6      0xc61 krnl/syscalls.32
                0x00000000c00118b6                SysSeekDir(regs*)
                0x00000000c00118bb                SysTellDir(regs*)
                0x00000000c00118c0                SysVerify(regs*)
                0x00000000c00118ca                SysGetArgc(regs*)
                0x00000000c00118de                SysTTYName(regs*)
                0x00000000c00118e6                SysFormatDisk(regs*)
                0x00000000c001195d                SysSetDiskVolumeLabel(regs*)
                0x00000000c00119b1                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011a0a                SysShutdown(regs*)
                0x00000000c0011a68                SysRealpath(regs*)
                0x00000000c0011aad                SysReadDir(regs*)
                0x00000000c0011b2d                SysIsATTY(regs*)
                0x00000000c0011b87                SysSeek(regs*)
                0x00000000c0011bde                SysTell(regs*)
                0x00000000c0011c4b                SysSize(regs*)
                0x00000000c0011cbe                SysSizeFromFilename(regs*)
                0x00000000c0011d6f                SysClose(regs*)
                0x00000000c0011dcf                SysOpenDir(regs*)
                0x00000000c0011e4c                SysMakeDir(regs*)
                0x00000000c0011eba                SysCloseDir(regs*)
                0x00000000c0011f0e                SysWait(regs*)
                0x00000000c0011f2f                SysNotImpl(regs*)
                0x00000000c0011f4a                SysPanic(regs*)
                0x00000000c0011f65                SysRmdir(regs*)
                0x00000000c0011fca                SysUnlink(regs*)
                0x00000000c001202f                SysGetArgv(regs*)
                0x00000000c001207c                SysUSleep(regs*)
                0x00000000c00120a5                SysSpawn(regs*)
                0x00000000c0012118                SysGetEnv(regs*)
                0x00000000c00121c9                SysSetFatAttrib(regs*)
                0x00000000c001223c                SysPipe(regs*)
                0x00000000c0012281                SysGetUnixTime(regs*)
                0x00000000c0012295                string_ends_with(char const*, char const*)
                0x00000000c00122dd                SysOpen(regs*)
                0x00000000c00124d5                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012517        0x1 
 .text          0x00000000c0012518      0x159 net/ethernet.32
                0x00000000c0012518                KeSwitchEndian16(unsigned short)
                0x00000000c001253c                KeSwitchEndian32(unsigned int)
                0x00000000c001256c                EthernetCRC32(unsigned char*, int)
                0x00000000c0012610                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012671      0xd56 reg/cm.32
                0x00000000c0012671                CmOpen(char const*)
                0x00000000c001278f                CmClose(Reghive_Tag*)
                0x00000000c00127a5                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c00127e1                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012858                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012897                CmGetNext(Reghive_Tag*, int)
                0x00000000c00128c9                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012905                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c001292d                CmUpdateHeader(Reghive_Tag*)
                0x00000000c001294e                CmExpand(Reghive_Tag*, int)
                0x00000000c00129c9                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012a4f                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012b43                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012c7f                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012ce0                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012d10                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012d47                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012d71                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012db1                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012e55                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012e83                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013021                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c001306e                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00130e8                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001313b                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00131ff                zStrtok(char*, char const*)
                0x00000000c0013271                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00132f2                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013395                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00133c7      0x52a reg/registry.32
                0x00000000c00133c7                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013538                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001368d                Reg::getLine(char*, char*, char*)
                0x00000000c00136c4                Reg::readInt(char*, char*, int*)
                0x00000000c00137b2                Reg::readString(char*, char*, char*, int)
                0x00000000c0013833                Reg::readBool(char*, char*, bool*)
                0x00000000c0013858                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013884                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00138b0                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00138f1       0x36 sys/eject.32
                0x00000000c00138f1                SysEject(regs*)
 .text          0x00000000c0013927       0x18 sys/exit.32
                0x00000000c0013927                SysExit(regs*)
 .text          0x00000000c001393f       0x1f sys/getcwd.32
                0x00000000c001393f                SysGetCwd(regs*)
 .text          0x00000000c001395e        0xc sys/getpid.32
                0x00000000c001395e                SysGetPID(regs*)
 .text          0x00000000c001396a       0x1a sys/getramdata.32
                0x00000000c001396a                SysGetRAMData(regs*)
 .text          0x00000000c0013984       0x82 sys/getvgaptr.32
                0x00000000c0013984                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013a06        0x2 
 .text          0x00000000c0013a08       0xb9 sys/kill.32
                0x00000000c0013a08                SysKill(regs*)
 .text          0x00000000c0013ac1       0xa8 sys/loaddll.32
                0x00000000c0013ac1                SysLoadDLL(regs*)
 .text          0x00000000c0013b69       0x68 sys/read.32
                0x00000000c0013b69                SysRead(regs*)
 .text          0x00000000c0013bd1       0x29 sys/registersignal.32
                0x00000000c0013bd1                SysRegisterSignal(regs*)
 .text          0x00000000c0013bfa      0x19c sys/registry.32
                0x00000000c0013bfa                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013c71                SysRegistryReadExtent(regs*)
                0x00000000c0013cb9                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013ce1                SysRegistryEnterDirectory(regs*)
                0x00000000c0013d09                SysRegistryGetNext(regs*)
                0x00000000c0013d31                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013d6b                SysRegistryOpen(regs*)
                0x00000000c0013d7f                SysRegistryClose(regs*)
 .text          0x00000000c0013d96       0x55 sys/sbrk.32
                0x00000000c0013d96                SysSbrk(regs*)
 .text          0x00000000c0013deb       0x1c sys/setcwd.32
                0x00000000c0013deb                SysSetCwd(regs*)
 .text          0x00000000c0013e07       0x96 sys/settime.32
                0x00000000c0013e07                SysSetTime(regs*)
 .text          0x00000000c0013e9d       0x4a sys/timezone.32
                0x00000000c0013e9d                SysTimezone(regs*)
 .text          0x00000000c0013ee7       0xfc sys/truncate.32
                0x00000000c0013ee7                SysTruncate(regs*)
 .text          0x00000000c0013fe3       0x68 sys/write.32
                0x00000000c0013fe3                SysWrite(regs*)
 .text          0x00000000c001404b       0x62 sys/wsbe.32
                0x00000000c001404b                SysWsbe(regs*)
 .text          0x00000000c00140ad       0x25 sys/yield.32
                0x00000000c00140ad                SysYield(regs*)
 .text          0x00000000c00140d2     0x11e6 thr/elf.32
                0x00000000c00140d2                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014360                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014572                Thr::runtimeReferenceHelper()
                0x00000000c0014585                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00145d4                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014892                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014fcb                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014ffd                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015034                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001504e                Thr::loadDLL(char const*, bool)
                0x00000000c001527f                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00152b8     0x13d9 thr/prcssthr.32
                0x00000000c00152b8                userModeEntryPoint(void*)
                0x00000000c00152e0                changeTSS
                0x00000000c0015310                switchToThread(ThreadControlBlock*)
                0x00000000c00153c0                Process::addArgs(char**)
                0x00000000c001542c                Process::Process(char const*, Process*, char**)
                0x00000000c001542c                Process::Process(char const*, Process*, char**)
                0x00000000c0015638                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015638                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001580c                taskStartupFunction
                0x00000000c0015818                Semaphore::Semaphore(int)
                0x00000000c0015818                Semaphore::Semaphore(int)
                0x00000000c0015848                Mutex::Mutex()
                0x00000000c0015848                Mutex::Mutex()
                0x00000000c001585c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015968                Process::createUserThread()
                0x00000000c0015988                setupMultitasking(void (*)())
                0x00000000c0015aac                schedule()
                0x00000000c0015b40                Semaphore::tryAcquire()
                0x00000000c0015c14                Semaphore::assertLocked(char const*)
                0x00000000c0015c98                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015cc0                blockTask(TaskState)
                0x00000000c0015cf8                waitTask(int, int*, int)
                0x00000000c0015d3c                milliTenthSleepUntil(unsigned int)
                0x00000000c0015ddc                milliTenthSleep(unsigned int)
                0x00000000c0015df0                sleep(unsigned int)
                0x00000000c0015e0c                Semaphore::acquire()
                0x00000000c0015ed4                taskReturned
                0x00000000c0015f18                Thr::processFromPID(int)
                0x00000000c0015fc4                unblockTask(ThreadControlBlock*)
                0x00000000c0016070                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016344                cleanerTaskFunction(void*)
                0x00000000c001644c                terminateTask(int)
                0x00000000c0016538                Thr::terminateFromIRQ(int)
                0x00000000c0016548                Semaphore::release()
 .text          0x00000000c0016691      0xc27 vm86/vm8086.32
                0x00000000c0016691                Vm::inbv(unsigned short)
                0x00000000c00166a4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00166da                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00166ea                Vm::getSegment(unsigned int)
                0x00000000c00166f2                Vm::getOffset(unsigned int)
                0x00000000c00166f7                Vm::mainloop2()
                0x00000000c0016731                Vm::mainVm8086Loop(void*)
                0x00000000c0016741                Vm::mainloop3(unsigned long)
                0x00000000c0016767                Vm::initialise8086()
                0x00000000c00167aa                Vm::finish8086()
                0x00000000c001680b                Vm::getOutput8086(unsigned char*)
                0x00000000c0016830                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00168e9                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016a87                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016b20                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016b31                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016b43                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016b54                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016b69                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016b7f                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016b94                Vm::faultHandler(regs*)
 .text          0x00000000c00172b8      0xaf0 arch/i386/hal.32
                0x00000000c00172b8                noCopro(unsigned long)
                0x00000000c00172b9                nmiHandler(regs*, void*)
                0x00000000c00172d2                doubleFault(regs*, void*)
                0x00000000c00172eb                displayDebugInfo(regs*)
                0x00000000c0017670                HalSystemIdle()
                0x00000000c00176ec                displayProgramFault(char const*)
                0x00000000c0017738                gpFault(regs*, void*)
                0x00000000c001779f                pgFault(regs*, void*)
                0x00000000c0017828                otherISRHandler(regs*, void*)
                0x00000000c001785c                opcodeFault(regs*, void*)
                0x00000000c00178df                i386SaveCoprocessor(void*)
                0x00000000c00178f3                i386LoadCoprocessor(void*)
                0x00000000c0017907                x87EmulHandler(regs*, void*)
                0x00000000c00179a4                HalInitialiseCoprocessor()
                0x00000000c0017a52                HalPanic(char const*)
                0x00000000c0017b66                HalQueryPerformanceCounter()
                0x00000000c0017b81                HalInitialise()
                0x00000000c0017d37                HalMakeBeep(int)
                0x00000000c0017d71                HalGetRand()
                0x00000000c0017d74                HalEndOfInterrupt(int)
                0x00000000c0017da5                HalRestart()
                0x00000000c0017da6                HalShutdown()
                0x00000000c0017da7                HalSleep()
 .text          0x00000000c0017da8      0x2dc arch/i386/pic.32
                0x00000000c0017da8                picIoWait()
                0x00000000c0017db0                picDisable()
                0x00000000c0017de4                picGetIRQReg(int)
                0x00000000c0017e60                picOpen()
                0x00000000c0017fe4                picEOI(int)
 .text          0x00000000c0018084      0x674 arch/i386/rtc.32
                0x00000000c0018084                RTC::open(int, int, void*)
                0x00000000c0018088                RTC::close(int, int, void*)
                0x00000000c001808c                RTC::timeInSecondsUTC()
                0x00000000c001809e                RTC::timeInDatetimeUTC()
                0x00000000c00180c4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018102                RTC::~RTC()
                0x00000000c0018102                RTC::~RTC()
                0x00000000c0018126                RTC::~RTC()
                0x00000000c0018150                RTC::get_update_in_progress_flag()
                0x00000000c001816a                RTC::completeRTCRefresh()
                0x00000000c001844a                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00185f8                rtcIRQHandler(regs*, void*)
                0x00000000c001863e                RTC::RTC()
                0x00000000c001863e                RTC::RTC()
 .text          0x00000000c00186f8      0x1f4 arch/i386/vga.32
                0x00000000c00186f8                HalConsoleScroll(int, int)
                0x00000000c0018800                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018864                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c00188ec     0x14cf fs/fat/vfslink.32
                0x00000000c00188ec                FAT::getName()
                0x00000000c00188f4                FAT::tell(void*, unsigned long long*)
                0x00000000c0018930                FAT::stat(void*, unsigned long long*)
                0x00000000c001896c                FAT::~FAT()
                0x00000000c001896c                FAT::~FAT()
                0x00000000c0018990                FAT::~FAT()
                0x00000000c00189b8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018a5c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018b20                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018d04                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018f20                FAT::allocateSwapfile(char const*, int)
                0x00000000c00190e0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019250                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00192b0                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019310                FAT::close(void*)
                0x00000000c0019364                FAT::closeDir(void*)
                0x00000000c00193b8                FAT::truncate(void*, unsigned long long)
                0x00000000c0019424                FAT::seek(void*, unsigned long long)
                0x00000000c001947c                fatWrapperReadDisk
                0x00000000c00194bc                fatWrapperWriteDisk
                0x00000000c00194fc                fatWrapperIoctl
                0x00000000c0019618                FAT::FAT()
                0x00000000c0019618                FAT::FAT()
                0x00000000c0019670                FAT::fixFilepath(char*)
                0x00000000c00196b0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019824                FAT::openDir(char const*, void**)
                0x00000000c00198d4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00199cc                FAT::unlink(char const*)
                0x00000000c0019a4c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019c00                FAT::rename(char const*, char const*)
                0x00000000c0019ccc                FAT::mkdir(char const*)
                0x00000000c0019d4c                FAT::exists(char const*)
 *fill*         0x00000000c0019dbb        0x1 
 .text          0x00000000c0019dbc       0x94 fs/iso9660/helper.32
                0x00000000c0019dbc                isoReadDiscSectorHelper
                0x00000000c0019e18                iso_kprintf
                0x00000000c0019e34                iso_kprintfd
 .text          0x00000000c0019e50      0x71c fs/iso9660/vfslink.32
                0x00000000c0019e50                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019e56                ISO9660::truncate(void*, unsigned long long)
                0x00000000c0019e5c                ISO9660::getName()
                0x00000000c0019e62                ISO9660::closeDir(void*)
                0x00000000c0019e6c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019e72                ISO9660::unlink(char const*)
                0x00000000c0019e78                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019e7e                ISO9660::rename(char const*, char const*)
                0x00000000c0019e84                ISO9660::mkdir(char const*)
                0x00000000c0019e8a                ISO9660::~ISO9660()
                0x00000000c0019e8a                ISO9660::~ISO9660()
                0x00000000c0019eae                ISO9660::~ISO9660()
                0x00000000c0019ed6                ISO9660::exists(char const*)
                0x00000000c0019eea                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0019fd0                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a018                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a05a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a098                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a0ea                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a22c                ISO9660::close(void*)
                0x00000000c001a25c                ISO9660::openDir(char const*, void**)
                0x00000000c001a336                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a453                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a4d2                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a544                ISO9660::ISO9660()
                0x00000000c001a544                ISO9660::ISO9660()
 .text          0x00000000c001a56c      0x26c hal/sound/sndcard.32
                0x00000000c001a56c                SoundCard::beginPlayback()
                0x00000000c001a57a                SoundCard::stopPlayback()
                0x00000000c001a588                SoundCard::SoundCard(char const*)
                0x00000000c001a588                SoundCard::SoundCard(char const*)
                0x00000000c001a626                SoundCard::~SoundCard()
                0x00000000c001a626                SoundCard::~SoundCard()
                0x00000000c001a64a                SoundCard::~SoundCard()
                0x00000000c001a674                SoundCard::configureRates(int, int, int)
                0x00000000c001a6a4                SoundCard::getSamples16(int, short*)
                0x00000000c001a700                SoundCard::getSamples32(int, int*)
                0x00000000c001a786                SoundCard::addChannel(SoundPort*)
                0x00000000c001a7c4                SoundCard::removeChannel(int)
 .text          0x00000000c001a7d8      0x38a hal/sound/sndport.32
                0x00000000c001a7d8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a7d8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a864                SoundPort::~SoundPort()
                0x00000000c001a864                SoundPort::~SoundPort()
                0x00000000c001a898                SoundPort::unpause()
                0x00000000c001a8a4                SoundPort::pause()
                0x00000000c001a8b0                SoundPort::getBufferUsed()
                0x00000000c001a8b8                SoundPort::getBufferSize()
                0x00000000c001a8c0                SoundPort::buffer16(short*, int)
                0x00000000c001a94c                SoundPort::buffer32(int*, int)
                0x00000000c001a9d8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001aaa4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001ab62        0x0 hw/bus/isa.32
 .text          0x00000000c001ab62      0xbb7 hw/bus/pci.32
                0x00000000c001ab62                PCI::open(int, int, void*)
                0x00000000c001ab80                PCI::close(int, int, void*)
                0x00000000c001ab84                PCI::PCI()
                0x00000000c001ab84                PCI::PCI()
                0x00000000c001ac1c                PCI::readBAR8(unsigned int, int)
                0x00000000c001ac38                PCI::readBAR16(unsigned int, int)
                0x00000000c001ac56                PCI::readBAR32(unsigned int, int)
                0x00000000c001ac72                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001ac92                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001acb4                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001acd4                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ad4a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001adf4                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae18                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae40                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001ae8a                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001aeb2                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001aed6                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001aefa                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001af22                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001af86                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b06e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b334                PCI::checkBus(unsigned char)
                0x00000000c001b358                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b4d2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b64e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b6c0                PCI::detect()
 *fill*         0x00000000c001b719        0x1 
 .text          0x00000000c001b71a      0xb9a hw/diskctrl/ide.32
                0x00000000c001b71a                IDE::close(int, int, void*)
                0x00000000c001b71e                IDE::IDE()
                0x00000000c001b71e                IDE::IDE()
                0x00000000c001b752                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b764                selectDrive(unsigned char, unsigned char)
                0x00000000c001b766                IDE::getBase(unsigned char)
                0x00000000c001b778                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b838                IDE::read(unsigned char, unsigned char)
                0x00000000c001b8e6                IDE::waitInterrupt(unsigned char)
                0x00000000c001b948                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b964                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001b980                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001b9ca                IDE::open(int, int, void*)
                0x00000000c001be08                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001bed8                IDE::detect()
                0x00000000c001c1a6                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c260                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c2b4      0x32a hw/diskctrl/satabus.32
                0x00000000c001c2b4                SATABus::close(int, int, void*)
                0x00000000c001c2b8                SATABus::detect()
                0x00000000c001c2ba                SATABus::SATABus()
                0x00000000c001c2ba                SATABus::SATABus()
                0x00000000c001c340                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c372                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c3ba                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c3da                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c404                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c514                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c5be                SATABus::open(int, int, void*)
 .text          0x00000000c001c5de      0x93f hw/diskphys/ata.32
                0x00000000c001c5de                ATA::close(int, int, void*)
                0x00000000c001c602                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c604                ATA::ATA()
                0x00000000c001c604                ATA::ATA()
                0x00000000c001c632                ATA::flush(bool)
                0x00000000c001c680                ATA::readyForCommand()
                0x00000000c001c6cc                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ca62                ATA::detectCHS()
                0x00000000c001ca8c                ATA::open(int, int, void*)
                0x00000000c001cb58                combineCharAndColour(char, unsigned char)
                0x00000000c001cb69                combineColours(unsigned char, unsigned char)
                0x00000000c001cb76                ATA::read(unsigned long long, int, void*)
                0x00000000c001cd4c                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001cf1d        0x1 
 .text          0x00000000c001cf1e      0x618 hw/diskphys/atapi.32
                0x00000000c001cf1e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001cf24                ATAPI::close(int, int, void*)
                0x00000000c001cf48                ATAPI::ATAPI()
                0x00000000c001cf48                ATAPI::ATAPI()
                0x00000000c001cf76                ATAPI::readyForCommand()
                0x00000000c001cfc8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d290                ATAPI::diskRemoved()
                0x00000000c001d2ca                ATAPI::eject()
                0x00000000c001d312                ATAPI::diskInserted()
                0x00000000c001d31e                ATAPI::detectMedia()
                0x00000000c001d3dc                ATAPI::open(int, int, void*)
                0x00000000c001d4bc                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d536      0x807 hw/diskphys/sata.32
                0x00000000c001d536                SATA::close(int, int, void*)
                0x00000000c001d55a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d55c                SATA::open(int, int, void*)
                0x00000000c001d606                SATA::SATA()
                0x00000000c001d606                SATA::SATA()
                0x00000000c001d634                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d888                SATA::read(unsigned long long, int, void*)
                0x00000000c001dad8                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001dd3d        0x1 
 .text          0x00000000c001dd3e      0x5d0 hw/diskphys/satapi.32
                0x00000000c001dd3e                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001dd44                SATAPI::close(int, int, void*)
                0x00000000c001dd68                SATAPI::SATAPI()
                0x00000000c001dd68                SATAPI::SATAPI()
                0x00000000c001dd96                SATAPI::diskRemoved()
                0x00000000c001dd98                SATAPI::diskInserted()
                0x00000000c001ddb4                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e092                SATAPI::eject()
                0x00000000c001e0ce                SATAPI::detectMedia()
                0x00000000c001e124                SATAPI::open(int, int, void*)
                0x00000000c001e224                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e30e      0x45b hw/intctrl/apic.32
                0x00000000c001e30e                IOAPIC::close(int, int, void*)
                0x00000000c001e314                apicGetBase()
                0x00000000c001e35a                IOAPIC::IOAPIC()
                0x00000000c001e35a                IOAPIC::IOAPIC()
                0x00000000c001e382                apicOpen()
                0x00000000c001e4fe                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e530                IOAPIC::read(int)
                0x00000000c001e558                IOAPIC::open(int, int, void*)
                0x00000000c001e63e                IOAPIC::write(int, int)
                0x00000000c001e66a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e769        0x3 
 .text          0x00000000c001e76c       0xf0 hw/timer/apictimer.32
                0x00000000c001e76c                APICTimer::close(int, int, void*)
                0x00000000c001e774                apicTimerHandler(regs*, void*)
                0x00000000c001e79c                APICTimer::open(int, int, void*)
                0x00000000c001e80c                APICTimer::write(int)
                0x00000000c001e834                APICTimer::APICTimer()
                0x00000000c001e834                APICTimer::APICTimer()
 .text          0x00000000c001e85c      0x1ad hw/timer/pit.32
                0x00000000c001e85c                PIT::write(int)
                0x00000000c001e8e0                pitHandler(regs*, void*)
                0x00000000c001e908                PIT::open(int, int, void*)
                0x00000000c001e958                PIT::close(int, int, void*)
                0x00000000c001e988                PIT::PIT()
                0x00000000c001e988                PIT::PIT()
 *fill*         0x00000000c001ea09        0x7 
 .text          0x00000000c001ea10       0x83 arch/i386/avx.32
                0x00000000c001ea10                avxDetect
                0x00000000c001ea3a                avxSave
                0x00000000c001ea4b                avxLoad
                0x00000000c001ea5c                avxInit
                0x00000000c001ea7e                avxClose
                0x00000000c001ea7f                wouldSheSayYes
 *fill*         0x00000000c001ea93        0xd 
 .text          0x00000000c001eaa0      0x2ec arch/i386/interrupt.32
                0x00000000c001eaa0                isr0
                0x00000000c001eab0                isr1
                0x00000000c001eaba                isr2
                0x00000000c001eac4                isr3
                0x00000000c001eace                isr4
                0x00000000c001ead8                isr5
                0x00000000c001eae2                isr6
                0x00000000c001eaec                isr7
                0x00000000c001eaf6                isr8
                0x00000000c001eafe                isr9
                0x00000000c001eb08                isr10
                0x00000000c001eb10                isr11
                0x00000000c001eb18                isr12
                0x00000000c001eb20                isr13
                0x00000000c001eb3a                isr14
                0x00000000c001eb42                isr15
                0x00000000c001eb4c                isr16
                0x00000000c001eb56                isr17
                0x00000000c001eb60                isr18
                0x00000000c001eb6a                irq3
                0x00000000c001eb74                irq4
                0x00000000c001eb7e                irq5
                0x00000000c001eb88                irq6
                0x00000000c001eb92                irq7
                0x00000000c001eb9c                irq8
                0x00000000c001eba6                irq9
                0x00000000c001ebb0                irq10
                0x00000000c001ebba                irq11
                0x00000000c001ebc4                irq12
                0x00000000c001ebce                irq13
                0x00000000c001ebd8                irq14
                0x00000000c001ebe2                irq15
                0x00000000c001ebec                irq1
                0x00000000c001ebf3                irq2
                0x00000000c001ebfa                isr96
                0x00000000c001ec01                irq0
                0x00000000c001ec06                int_common_stub
                0x00000000c001ec38                syscall_common_stub
                0x00000000c001ed3c                irq16
                0x00000000c001ed46                irq17
                0x00000000c001ed50                irq18
                0x00000000c001ed5a                irq19
                0x00000000c001ed64                irq20
                0x00000000c001ed6e                irq21
                0x00000000c001ed78                irq22
                0x00000000c001ed82                irq23
 *fill*         0x00000000c001ed8c        0x4 
 .text          0x00000000c001ed90       0x10 arch/i386/rdrand.32
                0x00000000c001ed90                i386GetRDRAND
 .text          0x00000000c001eda0       0x39 arch/i386/sse.32
                0x00000000c001eda0                absolutelyNoChanceInHell
                0x00000000c001eda0                sseDetect
                0x00000000c001edb8                sseSave
                0x00000000c001edc0                sseLoad
                0x00000000c001edc8                sseInit
                0x00000000c001edd8                sseClose
 *fill*         0x00000000c001edd9        0x7 
 .text          0x00000000c001ede0       0x49 arch/i386/x87.32
                0x00000000c001ede6                x87Detect
                0x00000000c001ee01                x87Save
                0x00000000c001ee08                x87Load
                0x00000000c001ee0f                x87Init
                0x00000000c001ee28                x87Close
 *fill*         0x00000000c001ee29        0x3 
 .text          0x00000000c001ee2c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001ee51        0x0 crtn.32
 *fill*         0x00000000c001ee51        0x3 
 .text          0x00000000c001ee54      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001ee54                __divdi3
 *fill*         0x00000000c001ef9f        0x1 
 .text          0x00000000c001efa0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001efa0                __moddi3
 *fill*         0x00000000c001f11e        0x2 
 .text          0x00000000c001f120       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f120                __udivdi3
 *fill*         0x00000000c001f21f        0x1 
 .text          0x00000000c001f220      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f220                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f340        0x0
 .iplt          0x00000000c001f340        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f33a        0xf
 .init          0x00000000c001f33a        0x3 crti.32
                0x00000000c001f33a                _init
 .init          0x00000000c001f33d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f342        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f347        0x2 crtn.32

.fini           0x00000000c001f349        0xa
 .fini          0x00000000c001f349        0x3 crti.32
                0x00000000c001f349                _fini
 .fini          0x00000000c001f34c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f351        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f354       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f354       0x23 core/computer.32
                0x00000000c001f354                Computer::~Computer()
                0x00000000c001f354                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f378       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f378       0x2a core/computer.32
                0x00000000c001f378                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f3a2       0x21
 .text._Z10idleCommonv
                0x00000000c001f3a2       0x21 core/idle.32
                0x00000000c001f3a2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f3c4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f3c4        0x2 core/unixfile.32
                0x00000000c001f3c4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f3c4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f3c6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f3c6       0x42 core/unixfile.32
                0x00000000c001f3c6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f3c6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f408       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f408       0xd3 core/unixfile.32
                0x00000000c001f408                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f4dc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f4dc        0x7 core/unixfile.32
                0x00000000c001f4dc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f4e4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f4e4       0xa1 core/unixfile.32
                0x00000000c001f4e4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f586        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f586        0x8 core/unixfile.32
                0x00000000c001f586                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f58e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f58e       0x1a hal/device.32
                0x00000000c001f58e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f58e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f5a8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f5a8       0x2a hal/device.32
                0x00000000c001f5a8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f5d2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f5d2       0xdc hal/device.32
                0x00000000c001f5d2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f6ae       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f6ae       0x42 hal/device.32
                0x00000000c001f6ae                LinkedList<Device>::LinkedList()
                0x00000000c001f6ae                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f6f0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f6f0       0x1c hal/timer.32
                0x00000000c001f6f0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f70c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f70c        0x7 hal/timer.32
                0x00000000c001f70c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f714       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f714       0xbc hal/timer.32
                0x00000000c001f714                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f7d0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f7d0       0xda hal/timer.32
                0x00000000c001f7d0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f8ac       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f8ac       0x23 hw/acpi.32
                0x00000000c001f8ac                ACPI::~ACPI()
                0x00000000c001f8ac                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f8d0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f8d0       0x2a hw/acpi.32
                0x00000000c001f8d0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f8fc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f8fc        0x2 hw/acpi.32
                0x00000000c001f8fc                LinkedList<Device>::~LinkedList()
                0x00000000c001f8fc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f900       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f900       0x1c hw/acpi.32
                0x00000000c001f900                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f91c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f91c        0x7 hw/acpi.32
                0x00000000c001f91c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f924       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f924       0xb8 hw/acpi.32
                0x00000000c001f924                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001f9dc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001f9dc       0x23 hw/cpu.32
                0x00000000c001f9dc                CPU::~CPU()
                0x00000000c001f9dc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fa00       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fa00       0x2a hw/cpu.32
                0x00000000c001fa00                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fa2c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fa2c        0x8 sys/kill.32
                0x00000000c001fa2c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fa34        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fa34        0x2 thr/prcssthr.32
                0x00000000c001fa34                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fa34                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fa38       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fa38       0x49 thr/prcssthr.32
                0x00000000c001fa38                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fa38                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fa84       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fa84       0x42 thr/prcssthr.32
                0x00000000c001fa84                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fa84                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fac6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fac6       0x23 hw/bus/pci.32
                0x00000000c001fac6                PCI::~PCI()
                0x00000000c001fac6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001faea       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001faea       0x2a hw/bus/pci.32
                0x00000000c001faea                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fb14       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fb14       0x23 hw/diskctrl/ide.32
                0x00000000c001fb14                IDE::~IDE()
                0x00000000c001fb14                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fb38       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fb38       0x2a hw/diskctrl/ide.32
                0x00000000c001fb38                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001fb62       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001fb62       0x23 hw/diskctrl/satabus.32
                0x00000000c001fb62                SATABus::~SATABus()
                0x00000000c001fb62                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001fb86       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001fb86       0x2a hw/diskctrl/satabus.32
                0x00000000c001fb86                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001fbb0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fbb0       0x23 hw/diskphys/ata.32
                0x00000000c001fbb0                ATA::~ATA()
                0x00000000c001fbb0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fbd4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fbd4       0x2a hw/diskphys/ata.32
                0x00000000c001fbd4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fbfe       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fbfe       0x23 hw/diskphys/atapi.32
                0x00000000c001fbfe                ATAPI::~ATAPI()
                0x00000000c001fbfe                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fc22       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fc22       0x2a hw/diskphys/atapi.32
                0x00000000c001fc22                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001fc4c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001fc4c       0x23 hw/diskphys/sata.32
                0x00000000c001fc4c                SATA::~SATA()
                0x00000000c001fc4c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001fc70       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001fc70       0x2a hw/diskphys/sata.32
                0x00000000c001fc70                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001fc9a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001fc9a       0x23 hw/diskphys/satapi.32
                0x00000000c001fc9a                SATAPI::~SATAPI()
                0x00000000c001fc9a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001fcbe       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001fcbe       0x2a hw/diskphys/satapi.32
                0x00000000c001fcbe                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001fce8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001fce8       0x23 hw/intctrl/apic.32
                0x00000000c001fce8                IOAPIC::~IOAPIC()
                0x00000000c001fce8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001fd0c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001fd0c       0x2a hw/intctrl/apic.32
                0x00000000c001fd0c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001fd38       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001fd38       0x23 hw/timer/apictimer.32
                0x00000000c001fd38                APICTimer::~APICTimer()
                0x00000000c001fd38                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001fd5c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001fd5c       0x2a hw/timer/apictimer.32
                0x00000000c001fd5c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001fd88       0x23
 .text._ZN3PITD2Ev
                0x00000000c001fd88       0x23 hw/timer/pit.32
                0x00000000c001fd88                PIT::~PIT()
                0x00000000c001fd88                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001fdac       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001fdac       0x2a hw/timer/pit.32
                0x00000000c001fdac                PIT::~PIT()

.rodata         0x00000000c001fdd6     0x30d2
                0x00000000c001fdd6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001fdd6        0x2 
 .ctors         0x00000000c001fdd8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001fddc        0x4 core/unixfile.32
 .ctors         0x00000000c001fde0        0x4 thr/prcssthr.32
 .ctors         0x00000000c001fde4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fde8                end_ctors = .
                0x00000000c001fde8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001fde8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001fdec        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001fdec                __DTOR_END__
                0x00000000c001fdf0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001fdf0       0x10 
 .rodata        0x00000000c001fe00      0x101 acpica/utclib.32
                0x00000000c001fe00                AcpiGbl_Ctypes
 *fill*         0x00000000c001ff01        0x3 
 .rodata        0x00000000c001ff04       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001ff1c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001ff66       0x1a 
 .rodata        0x00000000c001ff80       0xed fs/fat/ff.32
 *fill*         0x00000000c002006d       0x13 
 .rodata        0x00000000c0020080      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020480       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c00204ef      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020604       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c002066c       0x2c core/computer.32
                0x00000000c002066c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020698       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00206c8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00206d4       0x17 core/main.32
 *fill*         0x00000000c00206eb        0x1 
 .rodata.str1.4
                0x00000000c00206ec       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020791       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c00207e9       0x39 core/pipe.32
 *fill*         0x00000000c0020822        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020824       0x1c core/pipe.32
                0x00000000c0020824                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020840       0x2b core/terminal.32
 *fill*         0x00000000c002086b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c002086c       0x1c core/terminal.32
                0x00000000c002086c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020888       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00208aa       0x15 core/unixfile.32
 *fill*         0x00000000c00208bf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00208c0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002090b        0x8 core/unixfile.32
 *fill*         0x00000000c0020913        0x1 
 .rodata.str1.4
                0x00000000c0020914       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020934       0x1c core/unixfile.32
                0x00000000c0020934                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020950       0x1c core/unixfile.32
                0x00000000c0020950                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002096c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020c00      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020d26       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0020d59       0x11 dbg/kconsole.32
 *fill*         0x00000000c0020d59        0x3 
 .rodata        0x00000000c0020d5c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020eac      0x169 dbg/usban.32
 *fill*         0x00000000c0021015        0x3 
 .rodata.str1.4
                0x00000000c0021018      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002114f       0x98 fs/symlink.32
 .rodata        0x00000000c00211e7        0x9 fs/symlink.32
 .rodata.str1.1
                0x00000000c00211f0       0x98 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c00211f0       0x6c fs/vfs.32
                0x00000000c00211f0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002125c       0x1c fs/vfs.32
                0x00000000c002125c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021278       0x1c fs/vfs.32
                0x00000000c0021278                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021294       0x2c hal/bus.32
                0x00000000c0021294                vtable for Bus
 .rodata.str1.1
                0x00000000c00212c0       0x1e hal/clock.32
 *fill*         0x00000000c00212de        0x2 
 .rodata._ZTV5Clock
                0x00000000c00212e0       0x3c hal/clock.32
                0x00000000c00212e0                vtable for Clock
 *fill*         0x00000000c002131c        0x4 
 .rodata        0x00000000c0021320       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021350       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00213a8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00213a8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c00213a8       0x2c hal/device.32
                0x00000000c00213a8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00213d4       0x2c hal/device.32
                0x00000000c00213d4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021400       0x2c hal/diskctrl.32
                0x00000000c0021400                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002142c       0x38 hal/diskphys.32
                0x00000000c002142c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021464       0x3e hal/intctrl.32
 *fill*         0x00000000c00214a2        0x2 
 .rodata.str1.4
                0x00000000c00214a4       0x5d hal/intctrl.32
 .rodata        0x00000000c0021501       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021554       0x34 hal/keybrd.32
                0x00000000c0021554                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021588       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00215cc       0x2c hal/logidisk.32
                0x00000000c00215cc                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00215f8       0x2c hal/mouse.32
                0x00000000c00215f8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021624       0x34 hal/nic.32
                0x00000000c0021624                vtable for NIC
 .rodata.str1.1
                0x00000000c0021658        0xb hal/partition.32
 *fill*         0x00000000c0021663        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021664       0x44 hal/serial.32
                0x00000000c0021664                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00216a8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00216a8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00216a8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00216a8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00216a8       0x30 hal/timer.32
                0x00000000c00216a8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00216d8       0x10 hal/vcache.32
                0x00000000c00216d8                vtable for VCache
 .rodata.str1.1
                0x00000000c00216e8       0x93 hal/video.32
 *fill*         0x00000000c002177b        0x1 
 .rodata._ZTV5Video
                0x00000000c002177c       0x4c hal/video.32
                0x00000000c002177c                vtable for Video
 .rodata.str1.4
                0x00000000c00217c8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021863      0x174 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00219d7       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00219d7        0x8 hw/acpi.32
 *fill*         0x00000000c00219d7        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00219d8       0x2c hw/acpi.32
                0x00000000c00219d8                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021a04      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0021b7f        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021b80       0x2c hw/cpu.32
                0x00000000c0021b80                vtable for CPU
 .rodata.str1.1
                0x00000000c0021bac       0x19 krnl/atexit.32
 .rodata.str1.1
                0x00000000c0021bc5       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021c01       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0021c92       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0021d5b       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021da3       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0021dce       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0021e44       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021e89        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0021e93       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0021eb4       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0021f4a       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0021f9e       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0021fca      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022196       0x57 thr/prcssthr.32
 *fill*         0x00000000c00221ed        0x3 
 .rodata.str1.4
                0x00000000c00221f0      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022300       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022300       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022300       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022300        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022300       0xc2 vm86/vm8086.32
 *fill*         0x00000000c00223c2        0x2 
 .rodata        0x00000000c00223c4       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00223f4      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022593        0x1 
 .rodata.str1.4
                0x00000000c0022594       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022607       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c002261c       0x3c arch/i386/rtc.32
                0x00000000c002261c                vtable for RTC
 .rodata.str1.1
                0x00000000c0022658       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022699        0x3 
 .rodata._ZTV3FAT
                0x00000000c002269c       0x6c fs/fat/vfslink.32
                0x00000000c002269c                vtable for FAT
 .rodata.str1.1
                0x00000000c0022708       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022708      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022840       0x6c fs/iso9660/vfslink.32
                0x00000000c0022840                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00228ac       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00228f0       0x34 hal/sound/sndcard.32
                0x00000000c00228f0                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022924       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022963       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002299b       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022a3c       0x2c hw/bus/pci.32
                0x00000000c0022a3c                vtable for PCI
 .rodata.str1.1
                0x00000000c0022a68       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022aef        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022af0       0x2c hw/diskctrl/ide.32
                0x00000000c0022af0                vtable for IDE
 .rodata.str1.4
                0x00000000c0022b1c       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0022b40       0x2c hw/diskctrl/satabus.32
                0x00000000c0022b40                vtable for SATABus
 .rodata.str1.1
                0x00000000c0022b6c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0022b7e        0x2 
 .rodata._ZTV3ATA
                0x00000000c0022b80       0x38 hw/diskphys/ata.32
                0x00000000c0022b80                vtable for ATA
 .rodata.str1.1
                0x00000000c0022bb8        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022bc5        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0022bc8       0x38 hw/diskphys/atapi.32
                0x00000000c0022bc8                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022c00       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0022c7c       0x38 hw/diskphys/sata.32
                0x00000000c0022c7c                vtable for SATA
 .rodata.str1.1
                0x00000000c0022cb4       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0022d9e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0022da0       0x38 hw/diskphys/satapi.32
                0x00000000c0022da0                vtable for SATAPI
 .rodata        0x00000000c0022dd8        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0022de0       0x2c hw/intctrl/apic.32
                0x00000000c0022de0                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0022e0c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0022e27        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022e28       0x30 hw/timer/apictimer.32
                0x00000000c0022e28                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0022e58       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022e75        0x3 
 .rodata._ZTV3PIT
                0x00000000c0022e78       0x30 hw/timer/pit.32
                0x00000000c0022e78                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0022ea8      0x7b9
 *(.data)
 .data          0x00000000c0022ea8        0x0 crti.32
 .data          0x00000000c0022ea8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0022ea8                __dso_handle
 .data          0x00000000c0022eac        0x0 acpica/utclib.32
 .data          0x00000000c0022eac        0x0 core/malloc.32
 .data          0x00000000c0022eac        0x0 libk/ctype.32
 .data          0x00000000c0022eac        0x0 libk/string.32
 .data          0x00000000c0022eac        0x0 fs/fat/diskio.32
 .data          0x00000000c0022eac        0x0 fs/fat/ff.32
 .data          0x00000000c0022eac        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022eac        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022eac        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0022eac        0x0 core/computer.32
 .data          0x00000000c0022eac        0x0 core/gdt.32
 .data          0x00000000c0022eac        0x0 core/idle.32
 .data          0x00000000c0022eac        0x0 core/idt.32
 .data          0x00000000c0022eac        0x4 core/kheap.32
 .data          0x00000000c0022eb0        0x0 core/main.32
 .data          0x00000000c0022eb0        0x4 core/physmgr.32
                0x00000000c0022eb0                Phys::bitmap
 .data          0x00000000c0022eb4        0x0 core/pipe.32
 *fill*         0x00000000c0022eb4        0xc 
 .data          0x00000000c0022ec0       0x60 core/terminal.32
                0x00000000c0022ec0                VgaText::hiddenOut
                0x00000000c0022ee0                ansiToVGAMappings
 .data          0x00000000c0022f20        0x0 core/tss.32
 .data          0x00000000c0022f20        0x4 core/unixfile.32
                0x00000000c0022f20                UnixFile::nextFd
 .data          0x00000000c0022f24       0x15 core/virtmgr.32
                0x00000000c0022f24                Virt::pageAllocPtr
                0x00000000c0022f28                Virt::bitmap
                0x00000000c0022f2c                Virt::swapfileSectorsPerPage
                0x00000000c0022f30                Virt::swapfileLength
                0x00000000c0022f34                Virt::swapfileSector
                0x00000000c0022f38                Virt::swapfileDrive
 *fill*         0x00000000c0022f39        0x3 
 .data          0x00000000c0022f3c        0x4 coreobjs/c++.32
                0x00000000c0022f3c                __stack_chk_guard
 .data          0x00000000c0022f40        0x0 dbg/kconsole.32
 .data          0x00000000c0022f40       0x28 dbg/usban.32
                0x00000000c0022f40                KiUsbanTypeMismatchTypes
 .data          0x00000000c0022f68        0x0 fs/symlink.32
 .data          0x00000000c0022f68        0x0 fs/vfs.32
 .data          0x00000000c0022f68        0x0 hal/bus.32
 .data          0x00000000c0022f68        0x0 hal/buzzer.32
 .data          0x00000000c0022f68        0x0 hal/clock.32
 .data          0x00000000c0022f68        0x0 hal/device.32
 .data          0x00000000c0022f68        0x0 hal/diskctrl.32
 .data          0x00000000c0022f68        0x0 hal/diskphys.32
 .data          0x00000000c0022f68        0x0 hal/fpu.32
 .data          0x00000000c0022f68        0x0 hal/intctrl.32
 .data          0x00000000c0022f68        0x0 hal/keybrd.32
 .data          0x00000000c0022f68        0x0 hal/logidisk.32
 .data          0x00000000c0022f68        0x0 hal/mouse.32
 .data          0x00000000c0022f68        0x0 hal/nic.32
 .data          0x00000000c0022f68        0x0 hal/partition.32
 .data          0x00000000c0022f68        0x0 hal/serial.32
 .data          0x00000000c0022f68        0x0 hal/timer.32
 .data          0x00000000c0022f68        0x0 hal/vcache.32
 .data          0x00000000c0022f68        0x0 hal/video.32
 .data          0x00000000c0022f68       0x10 hw/acpi.32
                0x00000000c0022f68                legacyIRQRemaps
 .data          0x00000000c0022f78        0x4 hw/cpu.32
                0x00000000c0022f78                lastCode
 .data          0x00000000c0022f7c        0x0 krnl/atexit.32
 *fill*         0x00000000c0022f7c        0x4 
 .data          0x00000000c0022f80      0x142 krnl/bootmsg.32
                0x00000000c0022f80                KiSplashScreen
 .data          0x00000000c00230c2        0x0 krnl/compat.32
 *fill*         0x00000000c00230c2       0x1e 
 .data          0x00000000c00230e0       0x4d krnl/env.32
                0x00000000c00230e0                defaultSysEnv
 .data          0x00000000c002312d        0x0 krnl/inlines.32
 .data          0x00000000c002312d        0x0 krnl/panic.32
 .data          0x00000000c002312d        0x0 krnl/powctrl.32
 .data          0x00000000c002312d        0x0 krnl/random.32
 .data          0x00000000c002312d        0x0 krnl/resolve.32
 *fill*         0x00000000c002312d       0x13 
 .data          0x00000000c0023140       0x4c krnl/signal.32
                0x00000000c0023140                KiDefaultSignalHandlers
 *fill*         0x00000000c002318c       0x14 
 .data          0x00000000c00231a0       0xf0 krnl/syscalls.32
                0x00000000c00231a0                systemCallHandlers
 .data          0x00000000c0023290        0x0 net/ethernet.32
 *fill*         0x00000000c0023290       0x10 
 .data          0x00000000c00232a0      0x100 reg/cm.32
                0x00000000c00232a0                CmComponents
 .data          0x00000000c00233a0        0x0 reg/registry.32
 .data          0x00000000c00233a0        0x0 sys/eject.32
 .data          0x00000000c00233a0        0x0 sys/exit.32
 .data          0x00000000c00233a0        0x0 sys/getcwd.32
 .data          0x00000000c00233a0        0x0 sys/getpid.32
 .data          0x00000000c00233a0        0x0 sys/getramdata.32
 .data          0x00000000c00233a0        0x0 sys/getvgaptr.32
 .data          0x00000000c00233a0        0x0 sys/kill.32
 .data          0x00000000c00233a0        0x0 sys/loaddll.32
 .data          0x00000000c00233a0        0x0 sys/read.32
 .data          0x00000000c00233a0        0x0 sys/registersignal.32
 .data          0x00000000c00233a0        0x0 sys/registry.32
 .data          0x00000000c00233a0        0x0 sys/sbrk.32
 .data          0x00000000c00233a0        0x0 sys/setcwd.32
 .data          0x00000000c00233a0        0x0 sys/settime.32
 .data          0x00000000c00233a0        0x0 sys/timezone.32
 .data          0x00000000c00233a0        0x0 sys/truncate.32
 .data          0x00000000c00233a0        0x0 sys/write.32
 .data          0x00000000c00233a0        0x0 sys/wsbe.32
 .data          0x00000000c00233a0        0x0 sys/yield.32
 .data          0x00000000c00233a0        0x0 thr/elf.32
 .data          0x00000000c00233a0        0x4 thr/prcssthr.32
                0x00000000c00233a0                Thr::nextPID
 .data          0x00000000c00233a4        0x0 vm86/vm8086.32
 *fill*         0x00000000c00233a4       0x1c 
 .data          0x00000000c00233c0      0x2a0 arch/i386/hal.32
                0x00000000c00233c0                exceptionNames
 .data          0x00000000c0023660        0x0 arch/i386/pic.32
 .data          0x00000000c0023660        0x0 arch/i386/rtc.32
 .data          0x00000000c0023660        0x0 arch/i386/vga.32
 .data          0x00000000c0023660        0x0 fs/fat/vfslink.32
 .data          0x00000000c0023660        0x0 fs/iso9660/helper.32
 .data          0x00000000c0023660        0x1 fs/iso9660/vfslink.32
                0x00000000c0023660                recentDriveletter
 .data          0x00000000c0023661        0x0 hal/sound/sndcard.32
 .data          0x00000000c0023661        0x0 hal/sound/sndport.32
 .data          0x00000000c0023661        0x0 hw/bus/isa.32
 .data          0x00000000c0023661        0x0 hw/bus/pci.32
 .data          0x00000000c0023661        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0023661        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0023661        0x0 hw/diskphys/ata.32
 .data          0x00000000c0023661        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0023661        0x0 hw/diskphys/sata.32
 .data          0x00000000c0023661        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0023661        0x0 hw/intctrl/apic.32
 .data          0x00000000c0023661        0x0 hw/timer/apictimer.32
 .data          0x00000000c0023661        0x0 hw/timer/pit.32
 .data          0x00000000c0023661        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0023661        0x0 crtn.32
 .data          0x00000000c0023661        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0023661        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0023661        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0023661        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0023664        0x0
 .got           0x00000000c0023664        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0023664        0x0
 .got.plt       0x00000000c0023664        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0023664        0x0
 .igot.plt      0x00000000c0023664        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0023664        0x0
 .tm_clone_table
                0x00000000c0023664        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0023664        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0023661      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0023661        0x3 
 .eh_frame      0x00000000c0023664        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0023664        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0023664       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00236bc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00236fc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0023768       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x5ea7
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0025fb4        0xc 
 .bss           0x00000000c0025fc0     0x10a4 fs/symlink.32
                0x00000000c0025fc0                KiNumWaitingRoomSymlinks
                0x00000000c0025fe0                KiNewlyCreatedIDs
                0x00000000c0026060                KiNewlyCreatedSymlinks
                0x00000000c0027060                KiBaseSymlinkID
 .bss           0x00000000c0027064        0x4 fs/vfs.32
                0x00000000c0027064                installedFilesystems
 .bss           0x00000000c0027068        0x0 hal/bus.32
 .bss           0x00000000c0027068        0x0 hal/buzzer.32
 .bss           0x00000000c0027068        0x8 hal/clock.32
                0x00000000c0027068                User::dstOn
                0x00000000c0027069                User::timezoneHalfHourOffset
                0x00000000c002706c                User::timezoneHourOffset
 .bss           0x00000000c0027070        0x0 hal/device.32
 .bss           0x00000000c0027070        0x0 hal/diskctrl.32
 .bss           0x00000000c0027070        0x0 hal/diskphys.32
 .bss           0x00000000c0027070        0x0 hal/fpu.32
 *fill*         0x00000000c0027070       0x10 
 .bss           0x00000000c0027080     0x2000 hal/intctrl.32
                0x00000000c0027080                INT_contexts
                0x00000000c0028080                INT_handlers
 .bss           0x00000000c0029080      0x429 hal/keybrd.32
                0x00000000c0029080                keyboardWaitingTaskList
                0x00000000c0029084                keyboardSetupYet
                0x00000000c0029088                guiKeyboardHandler
                0x00000000c00290a0                keystates
 *fill*         0x00000000c00294a9       0x17 
 .bss           0x00000000c00294c0       0x88 hal/logidisk.32
                0x00000000c00294c0                diskAssignments
                0x00000000c00294e0                disks
 .bss           0x00000000c0029548        0x4 hal/mouse.32
                0x00000000c0029548                guiMouseHandler
 .bss           0x00000000c002954c        0x0 hal/nic.32
 .bss           0x00000000c002954c        0x0 hal/partition.32
 .bss           0x00000000c002954c        0x0 hal/serial.32
 .bss           0x00000000c002954c        0x4 hal/timer.32
                0x00000000c002954c                milliTenthsSinceBoot
 .bss           0x00000000c0029550        0x0 hal/vcache.32
 .bss           0x00000000c0029550        0x4 hal/video.32
                0x00000000c0029550                screen
 *fill*         0x00000000c0029554        0xc 
 .bss           0x00000000c0029560      0x480 hw/acpi.32
                0x00000000c0029560                systemSleepFunction
                0x00000000c0029564                systemResetFunction
                0x00000000c0029568                systemShutdownFunction
                0x00000000c002956c                nextACPITable
                0x00000000c0029580                acpiTables
                0x00000000c0029780                usingXSDT
                0x00000000c0029784                MADTpointer
                0x00000000c0029788                RSDTpointer
                0x00000000c002978c                RSDPpointer
                0x00000000c0029790                nextAPICNMI
                0x00000000c00297a0                apicNMIInfo
                0x00000000c0029820                legacyIRQFlags
                0x00000000c0029840                ioapicDiscoveryNumber
                0x00000000c0029860                ioapicFoundInMADT
                0x00000000c0029880                ioapicAddresses
                0x00000000c0029900                ioapicGSIBase
                0x00000000c0029980                processorDiscoveryNumber
                0x00000000c00299a0                matchingAPICID
                0x00000000c00299c0                processorID
 .bss           0x00000000c00299e0       0x10 hw/cpu.32
                0x00000000c00299e0                lastD
                0x00000000c00299e4                lastC
                0x00000000c00299e8                lastB
                0x00000000c00299ec                lastA
 *fill*         0x00000000c00299f0       0x10 
 .bss           0x00000000c0029a00      0x220 krnl/atexit.32
                0x00000000c0029a00                KiNextAtexitHandler
                0x00000000c0029a20                KiAtexitContexts
                0x00000000c0029b20                KiAtexitHandlers
 .bss           0x00000000c0029c20        0x0 krnl/bootmsg.32
 .bss           0x00000000c0029c20        0x0 krnl/compat.32
 .bss           0x00000000c0029c20        0x8 krnl/env.32
                0x00000000c0029c20                KeUserEnv
                0x00000000c0029c24                KeSystemEnv
 .bss           0x00000000c0029c28        0x0 krnl/inlines.32
 .bss           0x00000000c0029c28        0x1 krnl/panic.32
                0x00000000c0029c28                KeIsKernelInPanic
 *fill*         0x00000000c0029c29       0x17 
 .bss           0x00000000c0029c40       0x48 krnl/powctrl.32
                0x00000000c0029c40                powCtrlOnBattery
                0x00000000c0029c60                currentPowerSettings
                0x00000000c0029c84                secondsSinceLastUserIO
 .bss           0x00000000c0029c88        0x8 krnl/random.32
                0x00000000c0029c88                kiRandSeed
 .bss           0x00000000c0029c90        0x0 krnl/resolve.32
 .bss           0x00000000c0029c90        0x0 krnl/signal.32
 .bss           0x00000000c0029c90        0x0 krnl/syscalls.32
 .bss           0x00000000c0029c90        0x0 net/ethernet.32
 .bss           0x00000000c0029c90        0x4 reg/cm.32
 .bss           0x00000000c0029c94        0x0 reg/registry.32
 .bss           0x00000000c0029c94        0x0 sys/eject.32
 .bss           0x00000000c0029c94        0x0 sys/exit.32
 .bss           0x00000000c0029c94        0x0 sys/getcwd.32
 .bss           0x00000000c0029c94        0x0 sys/getpid.32
 .bss           0x00000000c0029c94        0x0 sys/getramdata.32
 .bss           0x00000000c0029c94        0x0 sys/getvgaptr.32
 .bss           0x00000000c0029c94        0x0 sys/kill.32
 .bss           0x00000000c0029c94        0x0 sys/loaddll.32
 .bss           0x00000000c0029c94        0x0 sys/read.32
 .bss           0x00000000c0029c94        0x0 sys/registersignal.32
 .bss           0x00000000c0029c94        0x0 sys/registry.32
 .bss           0x00000000c0029c94        0x0 sys/sbrk.32
 .bss           0x00000000c0029c94        0x0 sys/setcwd.32
 .bss           0x00000000c0029c94        0x0 sys/settime.32
 .bss           0x00000000c0029c94        0x0 sys/timezone.32
 .bss           0x00000000c0029c94        0x0 sys/truncate.32
 .bss           0x00000000c0029c94        0x0 sys/write.32
 .bss           0x00000000c0029c94        0x0 sys/wsbe.32
 .bss           0x00000000c0029c94        0x0 sys/yield.32
 *fill*         0x00000000c0029c94        0xc 
 .bss           0x00000000c0029ca0      0x7a4 thr/elf.32
                0x00000000c0029ca0                Thr::driverLookupNext
                0x00000000c0029cc0                Thr::driverLookupLen
                0x00000000c0029ec0                Thr::driverLookupAddr
                0x00000000c002a0c0                Thr::driverNameLookup
                0x00000000c002a2c0                Thr::kernelSymbols
                0x00000000c002a340                Thr::kernelStringTable
                0x00000000c002a3c0                Thr::kernelSymbolTable
                0x00000000c002a440                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002a444        0x4 
 .bss           0x00000000c002a448       0x68 thr/prcssthr.32
                0x00000000c002a448                cleanerThread
                0x00000000c002a44c                weNeedTheCleanerToNotBlock
                0x00000000c002a450                retValLockStuff
                0x00000000c002a454                retValSchedLock
                0x00000000c002a458                lockStuffLock
                0x00000000c002a45c                schedulerLock
                0x00000000c002a460                taskSwitchesPostponedFlag
                0x00000000c002a464                postponeTaskSwitchesCounter
                0x00000000c002a468                irqDisableCounter
                0x00000000c002a46c                terminatedTaskList
                0x00000000c002a478                sleepingTaskList
                0x00000000c002a484                taskList
                0x00000000c002a490                kernelProcess
 *fill*         0x00000000c002a4b0       0x10 
 .bss           0x00000000c002a4c0       0x40 vm86/vm8086.32
                0x00000000c002a4c0                Vm::vmRetV
                0x00000000c002a4c4                Vm::vmDone
                0x00000000c002a4c5                Vm::vmReady
                0x00000000c002a4c8                Vm::vm86Thread
                0x00000000c002a4cc                Vm::vmToHostCommsPtr
                0x00000000c002a4e0                Vm::vmToHostComms
 .bss           0x00000000c002a500       0x18 arch/i386/hal.32
                0x00000000c002a500                apic
                0x00000000c002a504                guiPanicHandler
                0x00000000c002a508                fpuOwner
                0x00000000c002a50c                coproLoadFunc
                0x00000000c002a510                coproSaveFunc
                0x00000000c002a514                gpFaultIntercept
 .bss           0x00000000c002a518        0x0 arch/i386/pic.32
 .bss           0x00000000c002a518        0x2 arch/i386/rtc.32
 .bss           0x00000000c002a51a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002a51a        0x6 
 .bss           0x00000000c002a520       0xf0 fs/fat/vfslink.32
                0x00000000c002a520                FAT::fats
                0x00000000c002a540                FAT::vfsToFatRemaps
                0x00000000c002a5c0                fatToVFSRemaps
 .bss           0x00000000c002a610        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002a610       0x10 
 .bss           0x00000000c002a620      0x820 fs/iso9660/vfslink.32
                0x00000000c002a620                iso9660Owner
                0x00000000c002a624                recentSector
                0x00000000c002a640                recentBuffer
 .bss           0x00000000c002ae40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002ae40        0x0 hal/sound/sndport.32
 .bss           0x00000000c002ae40        0x0 hw/bus/isa.32
 .bss           0x00000000c002ae40        0xd hw/bus/pci.32
                0x00000000c002ae40                thePCI
 .bss           0x00000000c002ae4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002ae4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002ae4d        0x3 
 .bss           0x00000000c002ae50        0x8 hw/diskphys/ata.32
                0x00000000c002ae50                ataSectorsWritten
                0x00000000c002ae54                ataSectorsRead
 .bss           0x00000000c002ae58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002ae58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002ae58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002ae58        0x8 
 .bss           0x00000000c002ae60       0x41 hw/intctrl/apic.32
                0x00000000c002ae60                noOfIOAPICs
                0x00000000c002ae80                ioapics
                0x00000000c002aea0                IOAPICsSetupYet
 .bss           0x00000000c002aea1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002aea1        0x3 
 .bss           0x00000000c002aea4        0x4 hw/timer/pit.32
                0x00000000c002aea4                pitFreq
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002aea8        0x0 crtn.32
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002aea8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002aea8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0030d4f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
