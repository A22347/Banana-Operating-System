Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/rand.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/rand.32
LOAD net/ethernet.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x231ea
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x440 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                getRDRAND
                0x00000000c0000229                detectCPUID
                0x00000000c000023f                goToVM86
                0x00000000c000026f                goToUsermode
                0x00000000c0000299                switchToThreadASMFirstTime
                0x00000000c00002a7                switchToThreadASM
                0x00000000c0000337                asmQuickAcquireLock
                0x00000000c0000355                asmQuickReleaseLock
                0x00000000c0000361                asmAcquireLock
                0x00000000c0000382                asmReleaseLock
                0x00000000c0000395                loadGDT
                0x00000000c00003b5                isr0
                0x00000000c00003c5                isr1
                0x00000000c00003cf                isr2
                0x00000000c00003d9                isr3
                0x00000000c00003e3                isr4
                0x00000000c00003ed                isr5
                0x00000000c00003f7                isr6
                0x00000000c0000401                isr7
                0x00000000c000040b                isr8
                0x00000000c0000413                isr9
                0x00000000c000041d                isr10
                0x00000000c0000425                isr11
                0x00000000c000042d                isr12
                0x00000000c0000435                isr13
                0x00000000c000043d                isr14
                0x00000000c0000445                isr15
                0x00000000c000044f                isr16
                0x00000000c0000459                isr17
                0x00000000c0000463                isr18
                0x00000000c000046d                irq3
                0x00000000c0000477                irq4
                0x00000000c0000481                irq5
                0x00000000c000048b                irq6
                0x00000000c0000495                irq7
                0x00000000c000049f                irq8
                0x00000000c00004a9                irq9
                0x00000000c00004b3                irq10
                0x00000000c00004bd                irq11
                0x00000000c00004c7                irq12
                0x00000000c00004d1                irq13
                0x00000000c00004db                irq14
                0x00000000c00004e5                irq15
                0x00000000c00004ef                irq1
                0x00000000c00004f6                irq2
                0x00000000c00004fd                isr96
                0x00000000c0000504                irq0
                0x00000000c0000509                int_common_stub
                0x00000000c0000509                syscall_common_stub
                0x00000000c000053b                irq16
                0x00000000c0000545                irq17
                0x00000000c000054f                irq18
                0x00000000c0000559                irq19
                0x00000000c0000563                irq20
                0x00000000c000056d                irq21
                0x00000000c0000577                irq22
                0x00000000c0000581                irq23
                0x00000000c000058b                memcpy
 .text          0x00000000c0000590      0x5dd acpica/utclib.32
                0x00000000c0000590                memcmp
                0x00000000c00005cc                memmove
                0x00000000c0000694                memset
                0x00000000c00006b0                strlen
                0x00000000c00006c8                strpbrk
                0x00000000c0000704                strtok
                0x00000000c0000750                strcpy
                0x00000000c0000774                strncpy
                0x00000000c00007dc                strcmp
                0x00000000c000081c                strchr
                0x00000000c0000840                strncmp
                0x00000000c0000890                strcat
                0x00000000c00008c0                strncat
                0x00000000c00008fc                strstr
                0x00000000c0000944                toupper
                0x00000000c0000958                tolower
                0x00000000c000096c                simple_strtoul
 .text          0x00000000c0000b6d      0xfad core/malloc.32
                0x00000000c0000cd8                dlfree
                0x00000000c0001033                dlmalloc
                0x00000000c0001570                dlrealloc
                0x00000000c0001713                dlmemalign
                0x00000000c0001836                dlcalloc
                0x00000000c00018d0                dlcfree
                0x00000000c00018d5                dlindependent_calloc
                0x00000000c00018fa                dlindependent_comalloc
                0x00000000c0001911                dlvalloc
                0x00000000c000193c                dlpvalloc
                0x00000000c0001972                dlmalloc_trim
                0x00000000c000197f                dlmalloc_usable_size
                0x00000000c00019b0                dlmallinfo
                0x00000000c0001a7f                dlmalloc_stats
                0x00000000c0001a90                dlmallopt
 .text          0x00000000c0001b1a        0x0 libk/string.32
 .text          0x00000000c0001b1a       0x51 fs/fat/diskio.32
                0x00000000c0001b1a                disk_status
                0x00000000c0001b1d                disk_initialize
                0x00000000c0001b20                disk_read
                0x00000000c0001b36                disk_write
                0x00000000c0001b4c                disk_ioctl
 .text          0x00000000c0001b6b     0x6a69 fs/fat/ff.32
                0x00000000c0004e39                f_mount
                0x00000000c0004e9b                f_open
                0x00000000c00052d7                f_read
                0x00000000c0005557                f_write
                0x00000000c0005811                f_sync
                0x00000000c00059ed                f_close
                0x00000000c0005a1c                f_lseek
                0x00000000c0005ed3                f_opendir
                0x00000000c0005fd5                f_closedir
                0x00000000c0005ff7                f_readdir
                0x00000000c0006092                f_stat
                0x00000000c0006121                f_getfree
                0x00000000c00062ec                f_truncate
                0x00000000c00063e4                f_unlink
                0x00000000c0006567                f_mkdir
                0x00000000c0006793                f_rename
                0x00000000c0006a86                f_chmod
                0x00000000c0006b64                f_utime
                0x00000000c0006c42                f_getlabel
                0x00000000c0006e30                f_setlabel
                0x00000000c000709d                f_expand
                0x00000000c00072d3                f_forward
                0x00000000c00074b1                f_mkfs
 .text          0x00000000c00085d4       0x2f fs/fat/ffsystem.32
                0x00000000c00085d4                ff_memalloc
                0x00000000c00085ec                ff_memfree
 *fill*         0x00000000c0008603        0x1 
 .text          0x00000000c0008604      0x274 fs/fat/ffunicode.32
                0x00000000c0008604                ff_uni2oem
                0x00000000c000869c                ff_oem2uni
                0x00000000c0008710                ff_wtoupper
 .text          0x00000000c0008878       0xa7 compat/inlines.32
                0x00000000c0008878                CPU::current()
                0x00000000c0008884                operator new(unsigned long)
                0x00000000c0008889                operator delete(void*)
                0x00000000c000888e                disableIRQs()
                0x00000000c0008896                enableIRQs()
                0x00000000c00088a5                lockScheduler()
                0x00000000c00088ad                unlockScheduler()
                0x00000000c00088bc                lockStuff()
                0x00000000c00088ca                unlockStuff()
                0x00000000c0008904                Virt::getAKernelVAS()
                0x00000000c000890a                __not_memcpy
 *fill*         0x00000000c000891f        0x1 
 .text          0x00000000c0008920      0x118 compat/resolve.32
                0x00000000c0008920                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0008a38      0xb95 core/computer.32
                0x00000000c0008a38                Computer::close(int, int, void*)
                0x00000000c0008a7c                Krnl::firstTask()
                0x00000000c0008bd0                Computer::Computer()
                0x00000000c0008bd0                Computer::Computer()
                0x00000000c0008d2c                Computer::setBootMessage(char const*)
                0x00000000c0008d2e                Computer::detectFeatures()
                0x00000000c0008f38                Computer::displayFeatures()
                0x00000000c000927e                Computer::rdmsr(unsigned int)
                0x00000000c00092aa                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00092e2                Computer::shutdown()
                0x00000000c00092fa                Computer::restart()
                0x00000000c0009312                Computer::sleep()
                0x00000000c0009326                Computer::nmiEnabled()
                0x00000000c0009332                Computer::readCMOS(unsigned char)
                0x00000000c000934c                Computer::enableNMI(bool)
                0x00000000c0009364                Computer::open(int, int, void*)
                0x00000000c0009510                Computer::disableNMI()
                0x00000000c000951e                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000953c                Computer::handleNMI()
                0x00000000c00095a2                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c00095cd        0x1 
 .text          0x00000000c00095ce      0x211 core/gdt.32
                0x00000000c00095ce                GDTEntry::setBase(unsigned int)
                0x00000000c00095ea                GDTEntry::setLimit(unsigned int)
                0x00000000c0009608                GDT::GDT()
                0x00000000c0009608                GDT::GDT()
                0x00000000c000961e                GDT::addEntry(GDTEntry)
                0x00000000c0009640                GDT::getNumberOfEntries()
                0x00000000c0009648                GDT::flush()
                0x00000000c000966a                GDT::setup()
 .text          0x00000000c00097df       0x6b core/idle.32
                0x00000000c00097df                idleFunction(void*)
 *fill*         0x00000000c000984a        0x2 
 .text          0x00000000c000984c      0x464 core/idt.32
                0x00000000c000984c                IDTEntry::IDTEntry(bool)
                0x00000000c000984c                IDTEntry::IDTEntry(bool)
                0x00000000c00098be                IDTEntry::setOffset(unsigned int)
                0x00000000c00098d4                IDT::IDT()
                0x00000000c00098d4                IDT::IDT()
                0x00000000c00098d6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00098de                IDT::addEntry(IDTEntry, int)
                0x00000000c00098f8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0009930                IDT::flush()
                0x00000000c000994a                IDT::setup()
 .text          0x00000000c0009cb0      0x191 core/kheap.32
                0x00000000c0009cb0                sbrk
                0x00000000c0009d53                mmap
                0x00000000c0009d69                munmap
                0x00000000c0009d7f                liballoc_lock()
                0x00000000c0009d8c                liballoc_unlock()
                0x00000000c0009da0                liballoc_alloc(int)
                0x00000000c0009db8                liballoc_free(void*, int)
                0x00000000c0009dd3                realloc
                0x00000000c0009de7                malloc
                0x00000000c0009df7                free
                0x00000000c0009e07                rfree
                0x00000000c0009e17                calloc
 .text          0x00000000c0009e41      0x437 core/main.32
                0x00000000c0009e41                Krnl::setBootMessage(char const*)
                0x00000000c0009ead                kernel_main
 .text          0x00000000c000a278      0x673 core/physmgr.32
                0x00000000c000a278                Phys::allocateDMA(unsigned long)
                0x00000000c000a387                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000a3cd                Phys::setPageState(unsigned long, bool)
                0x00000000c000a3ff                Phys::getPageState(unsigned long)
                0x00000000c000a41b                Phys::freePage(unsigned long)
                0x00000000c000a49e                Phys::allocatePage()
                0x00000000c000a589                Phys::allocateContiguousPages(int)
                0x00000000c000a5e5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000a61d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000a8eb        0x1 
 .text          0x00000000c000a8ec      0x273 core/pipe.32
                0x00000000c000a8ec                Pipe::isAtty()
                0x00000000c000a8f0                Pipe::~Pipe()
                0x00000000c000a8f0                Pipe::~Pipe()
                0x00000000c000a914                Pipe::~Pipe()
                0x00000000c000a93c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000aa38                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000aaf8                Pipe::Pipe(int)
                0x00000000c000aaf8                Pipe::Pipe(int)
 *fill*         0x00000000c000ab5f        0x1 
 .text          0x00000000c000ab60      0xb8f core/terminal.32
                0x00000000c000ab60                VgaText::isAtty()
                0x00000000c000ab64                VgaText::~VgaText()
                0x00000000c000ab64                VgaText::~VgaText()
                0x00000000c000ab88                VgaText::~VgaText()
                0x00000000c000abb2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000abd2                setTerminalScrollLock(bool)
                0x00000000c000abd3                addToTerminalCycle(VgaText*)
                0x00000000c000abf4                installVgaTextImplementation()
                0x00000000c000ac09                scrollTerminalScrollLock(int)
                0x00000000c000ac0a                VgaText::updateTitle()
                0x00000000c000ac48                VgaText::load()
                0x00000000c000ac96                VgaText::updateCursor()
                0x00000000c000acac                VgaText::doANSI_SGR(int)
                0x00000000c000ad20                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000ad30                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000ad40                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000ad60                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000ad70                VgaText::setTitleColour(VgaColour)
                0x00000000c000ad80                VgaText::setTitle(char*)
                0x00000000c000ada6                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000adb8                VgaText::scrollScreen()
                0x00000000c000ae4c                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000ae5e                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000aeba                VgaText::getCursorX()
                0x00000000c000aec2                VgaText::getCursorY()
                0x00000000c000aeca                VgaText::setCursor(int, int)
                0x00000000c000aee1                setActiveTerminal(VgaText*)
                0x00000000c000af43                doTerminalCycle()
                0x00000000c000af5e                VgaText::setCursorX(int)
                0x00000000c000af76                VgaText::setCursorY(int)
                0x00000000c000af8e                VgaText::incrementCursor(bool)
                0x00000000c000afe2                VgaText::decrementCursor(bool)
                0x00000000c000b004                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000b0dc                VgaText::doUpdate()
                0x00000000c000b0ea                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000b262                VgaText::clearScreen()
                0x00000000c000b2bc                VgaText::putchar(char)
                0x00000000c000b3a8                VgaText::putx(unsigned int)
                0x00000000c000b3ee                VgaText::puts(char const*)
                0x00000000c000b414                VgaText::VgaText(char const*)
                0x00000000c000b414                VgaText::VgaText(char const*)
                0x00000000c000b590                VgaText::receiveKey(unsigned char)
                0x00000000c000b676                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000b6ca                newTerminal(char*)
 *fill*         0x00000000c000b6ef        0x1 
 .text          0x00000000c000b6f0      0x1a1 core/tss.32
                0x00000000c000b6f0                TSS::TSS()
                0x00000000c000b6f0                TSS::TSS()
                0x00000000c000b700                TSS::setESP(unsigned long)
                0x00000000c000b714                TSS::flush()
                0x00000000c000b734                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000b891        0x1 
 .text          0x00000000c000b892      0x4c2 core/unixfile.32
                0x00000000c000b892                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000b8e8                ReservedFilename::isAtty()
                0x00000000c000b904                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000b962                UnixFile::getFileDescriptor()
                0x00000000c000b96a                UnixFile::UnixFile(int)
                0x00000000c000b96a                UnixFile::UnixFile(int)
                0x00000000c000bb1a                ReservedFilename::ReservedFilename(int)
                0x00000000c000bb1a                ReservedFilename::ReservedFilename(int)
                0x00000000c000bb4c                UnixFile::~UnixFile()
                0x00000000c000bb4c                UnixFile::~UnixFile()
                0x00000000c000bbe4                UnixFile::~UnixFile()
                0x00000000c000bc0c                ReservedFilename::~ReservedFilename()
                0x00000000c000bc0c                ReservedFilename::~ReservedFilename()
                0x00000000c000bc30                ReservedFilename::~ReservedFilename()
                0x00000000c000bc57                getFromFileDescriptor(int)
 .text          0x00000000c000bd54     0x1218 core/virtmgr.32
                0x00000000c000bd54                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000bd89                Virt::getPageState(unsigned long)
                0x00000000c000bdad                Virt::allocateKernelVirtualPages(int)
                0x00000000c000bebe                Virt::freeSwapfilePage(unsigned long)
                0x00000000c000bedc                Virt::swapIDToSector(unsigned long)
                0x00000000c000beee                Virt::allocateSwapfilePage()
                0x00000000c000bf6c                Virt::virtualMemorySetup()
                0x00000000c000bfb7                Virt::setupPageSwapping(int)
                0x00000000c000c028                VAS::VAS()
                0x00000000c000c028                VAS::VAS()
                0x00000000c000c064                VAS::VAS(VAS*)
                0x00000000c000c064                VAS::VAS(VAS*)
                0x00000000c000c092                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000c0be                VAS::getPageTableEntry(unsigned long)
                0x00000000c000c0dd                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000c200                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000c224                VAS::virtualToPhysical(unsigned long)
                0x00000000c000c23c                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000c27c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000c2ae                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000c2d8                VAS::~VAS()
                0x00000000c000c2d8                VAS::~VAS()
                0x00000000c000c454                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000c556                VAS::allocatePages(int, int)
                0x00000000c000c72e                VAS::setCPUSpecific(unsigned long)
                0x00000000c000c74a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000c810                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000c8fe                VAS::VAS(bool)
                0x00000000c000c8fe                VAS::VAS(bool)
                0x00000000c000cb7e                VAS::evict(unsigned long)
                0x00000000c000cc4e                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000cd62                VAS::scanForEviction()
                0x00000000c000ce40                mapVASFirstTime
 .text          0x00000000c000cf6c       0x95 coreobjs/c++.32
                0x00000000c000cf6c                __cxa_atexit
                0x00000000c000cf6f                __cxa_finalize
                0x00000000c000cf70                __stack_chk_fail
                0x00000000c000cfdc                __cxa_pure_virtual
                0x00000000c000cfed                operator new[](unsigned long)
                0x00000000c000cff2                operator delete(void*, unsigned long)
                0x00000000c000cff7                operator delete[](void*)
                0x00000000c000cffc                operator delete[](void*, unsigned long)
 .text          0x00000000c000d001      0x1fc dbg/kconsole.32
                0x00000000c000d001                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000d05a                Dbg::logc(char)
                0x00000000c000d07a                Dbg::logs(char*)
                0x00000000c000d097                Dbg::logWriteInt(unsigned int)
                0x00000000c000d0b4                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000d0d3                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000d1fd        0x1 
 .text          0x00000000c000d1fe      0xcac fs/vfs.32
                0x00000000c000d1fe                File::read(unsigned long long, void*, int*)
                0x00000000c000d256                File::write(unsigned long long, void*, int*)
                0x00000000c000d2ae                Directory::read(unsigned long long, void*, int*)
                0x00000000c000d306                Directory::write(unsigned long long, void*, int*)
                0x00000000c000d334                File::isAtty()
                0x00000000c000d338                Directory::isAtty()
                0x00000000c000d33c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000d342                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000d348                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000d34e                File::~File()
                0x00000000c000d34e                File::~File()
                0x00000000c000d372                File::~File()
                0x00000000c000d39c                Directory::~Directory()
                0x00000000c000d39c                Directory::~Directory()
                0x00000000c000d3c0                Directory::~Directory()
                0x00000000c000d3ea                Filesystem::Filesystem()
                0x00000000c000d3ea                Filesystem::Filesystem()
                0x00000000c000d40e                Filesystem::~Filesystem()
                0x00000000c000d40e                Filesystem::~Filesystem()
                0x00000000c000d41c                Filesystem::~Filesystem()
                0x00000000c000d440                Fs::getcwd(Process*, char*, int)
                0x00000000c000d46a                Fs::initVFS()
                0x00000000c000d494                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000d63e                File::File(char const*, Process*)
                0x00000000c000d63e                File::File(char const*, Process*)
                0x00000000c000d718                File::open(FileOpenMode)
                0x00000000c000d776                File::close()
                0x00000000c000d7d6                File::seek(unsigned long long)
                0x00000000c000d82c                File::tell(unsigned long long*)
                0x00000000c000d87c                File::rewind()
                0x00000000c000d890                File::unlink()
                0x00000000c000d8dc                File::rename(char const*)
                0x00000000c000d92a                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000d986                File::exists()
                0x00000000c000d9c4                File::stat(unsigned long long*, bool*)
                0x00000000c000da25                Fs::setcwd(Process*, char*)
                0x00000000c000db9e                Directory::Directory(char const*, Process*)
                0x00000000c000db9e                Directory::Directory(char const*, Process*)
                0x00000000c000dc78                Directory::open()
                0x00000000c000dcd4                Directory::close()
                0x00000000c000dd34                Directory::unlink()
                0x00000000c000dd80                Directory::rename(char const*)
                0x00000000c000ddce                Directory::exists()
                0x00000000c000de0c                Directory::read(dirent*)
                0x00000000c000de58                Directory::create()
                0x00000000c000dea4                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000deaa        0x2 
 .text          0x00000000c000deac       0x86 hal/bus.32
                0x00000000c000deac                Bus::Bus(char const*)
                0x00000000c000deac                Bus::Bus(char const*)
                0x00000000c000dee4                Bus::~Bus()
                0x00000000c000dee4                Bus::~Bus()
                0x00000000c000df08                Bus::~Bus()
 *fill*         0x00000000c000df32        0x2 
 .text          0x00000000c000df34      0x153 hal/buzzer.32
                0x00000000c000df34                Buzzer::Buzzer(char const*)
                0x00000000c000df34                Buzzer::Buzzer(char const*)
                0x00000000c000df78                Buzzer::~Buzzer()
                0x00000000c000df78                Buzzer::~Buzzer()
                0x00000000c000df9c                Buzzer::~Buzzer()
                0x00000000c000dfc6                Buzzer::stop()
                0x00000000c000dfd9                beepThread(void*)
                0x00000000c000e01a                Buzzer::beep(int, int, bool)
 *fill*         0x00000000c000e087        0x1 
 .text          0x00000000c000e088      0x467 hal/clock.32
                0x00000000c000e088                User::loadClockSettings(int)
                0x00000000c000e0da                Clock::Clock(char const*)
                0x00000000c000e0da                Clock::Clock(char const*)
                0x00000000c000e110                Clock::~Clock()
                0x00000000c000e110                Clock::~Clock()
                0x00000000c000e134                Clock::~Clock()
                0x00000000c000e15e                Clock::timeInSecondsLocal()
                0x00000000c000e1a6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000e1ff                datetimeToSeconds(datetime_t)
                0x00000000c000e326                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000e386                secondsToDatetime(unsigned long long)
                0x00000000c000e4ca                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000e4ef        0x1 
 .text          0x00000000c000e4f0      0x504 hal/device.32
                0x00000000c000e4f0                Device::hibernate()
                0x00000000c000e4f2                Device::wake()
                0x00000000c000e4f4                Device::detect()
                0x00000000c000e4f6                Device::disableLegacy()
                0x00000000c000e4f8                Device::powerSaving(PowerSavingLevel)
                0x00000000c000e4fa                DriverlessDevice::close(int, int, void*)
                0x00000000c000e4fe                DriverlessDevice::detect()
                0x00000000c000e500                DriverlessDevice::open(int, int, void*)
                0x00000000c000e514                Device::~Device()
                0x00000000c000e514                Device::~Device()
                0x00000000c000e522                Device::~Device()
                0x00000000c000e54a                Device::findAndLoadDriver()
                0x00000000c000e558                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000e57e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000e5be                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000e5fc                Device::getParent()
                0x00000000c000e608                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000e646                Device::addChild(Device*)
                0x00000000c000e68a                Device::removeAllChildren()
                0x00000000c000e6d0                Device::hibernateAll()
                0x00000000c000e700                Device::wakeAll()
                0x00000000c000e730                Device::detectAll()
                0x00000000c000e760                Device::disableLegacyAll()
                0x00000000c000e790                Device::loadDriversForAll()
                0x00000000c000e7d0                Device::closeAll()
                0x00000000c000e806                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000e83c                Device::setName(char const*)
                0x00000000c000e84a                Device::Device(char const*)
                0x00000000c000e84a                Device::Device(char const*)
                0x00000000c000e946                Device::getName()
                0x00000000c000e950                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e950                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e986                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000e9ca                getDevicesOfType(DeviceType)
 .text          0x00000000c000e9f4       0x86 hal/diskctrl.32
                0x00000000c000e9f4                HardDiskController::HardDiskController(char const*)
                0x00000000c000e9f4                HardDiskController::HardDiskController(char const*)
                0x00000000c000ea2c                HardDiskController::~HardDiskController()
                0x00000000c000ea2c                HardDiskController::~HardDiskController()
                0x00000000c000ea50                HardDiskController::~HardDiskController()
 .text          0x00000000c000ea7a       0xe2 hal/diskphys.32
                0x00000000c000ea7a                PhysicalDisk::eject()
                0x00000000c000ea7e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ea7e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000eae6                PhysicalDisk::startCache()
                0x00000000c000eb0e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000eb0e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000eb32                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000eb5c      0x15f hal/fpu.32
                0x00000000c000eb5c                FPU::FPU(char const*)
                0x00000000c000eb5c                FPU::FPU(char const*)
                0x00000000c000eb94                FPU::~FPU()
                0x00000000c000eb94                FPU::~FPU()
                0x00000000c000ebb8                FPU::~FPU()
                0x00000000c000ebe2                setupFPU()
 *fill*         0x00000000c000ecbb        0x1 
 .text          0x00000000c000ecbc     0x12cf hal/intctrl.32
                0x00000000c000ecbc                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000ecf4                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000ed46                doubleFault(regs*, void*)
                0x00000000c000ed60                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000edfc                InterruptController::clearAllHandlers(int, bool)
                0x00000000c000eea4                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ef2b                nmiHandler(regs*, void*)
                0x00000000c000ef39                int_handler
                0x00000000c000efda                InterruptController::InterruptController(char const*)
                0x00000000c000efda                InterruptController::InterruptController(char const*)
                0x00000000c000f080                InterruptController::~InterruptController()
                0x00000000c000f080                InterruptController::~InterruptController()
                0x00000000c000f0a4                InterruptController::~InterruptController()
                0x00000000c000f0ce                displayDebugInfo(regs*)
                0x00000000c000f55d                x87EmulHandler(regs*, void*)
                0x00000000c000f6a6                gpFault(regs*, void*)
                0x00000000c000f6df                pgFault(regs*, void*)
                0x00000000c000f72e                otherISRHandler(regs*, void*)
                0x00000000c000f74d                opcodeFault(regs*, void*)
                0x00000000c000fb27                displayProgramFault(char const*)
                0x00000000c000fb4f                setupInterruptController()
                0x00000000c000ff3e                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c000ff8b        0x1 
 .text          0x00000000c000ff8c      0x778 hal/keybrd.32
                0x00000000c000ff8c                startGUI(void*)
                0x00000000c000fff8                startGUIVESA(void*)
                0x00000000c0010064                sendKeyToTerminal(unsigned char)
                0x00000000c0010122                sendKeyboardToken(KeyboardToken)
                0x00000000c0010554                clearInternalKeybuffer(VgaText*)
                0x00000000c0010589                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c001067a                Keyboard::Keyboard(char const*)
                0x00000000c001067a                Keyboard::Keyboard(char const*)
                0x00000000c00106b6                Keyboard::~Keyboard()
                0x00000000c00106b6                Keyboard::~Keyboard()
                0x00000000c00106da                Keyboard::~Keyboard()
 .text          0x00000000c0010704      0x42a hal/logidisk.32
                0x00000000c0010704                LogicalDisk::close(int, int, void*)
                0x00000000c0010708                LogicalDisk::~LogicalDisk()
                0x00000000c0010708                LogicalDisk::~LogicalDisk()
                0x00000000c001072c                LogicalDisk::~LogicalDisk()
                0x00000000c0010756                LogicalDisk::open(int, int, void*)
                0x00000000c001076a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c00107a2                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c00107e8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00107e8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c001089e                LogicalDisk::assignDriveLetter()
                0x00000000c0010954                LogicalDisk::mount()
                0x00000000c00109dc                LogicalDisk::unmount()
                0x00000000c00109ec                LogicalDisk::eject()
                0x00000000c0010a00                LogicalDisk::unassignDriveLetter()
                0x00000000c0010a56                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0010ac2                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c0010b2e        0x2 
 .text          0x00000000c0010b30       0x86 hal/mouse.32
                0x00000000c0010b30                Mouse::Mouse(char const*)
                0x00000000c0010b30                Mouse::Mouse(char const*)
                0x00000000c0010b68                Mouse::~Mouse()
                0x00000000c0010b68                Mouse::~Mouse()
                0x00000000c0010b8c                Mouse::~Mouse()
 .text          0x00000000c0010bb6      0x339 hal/partition.32
                0x00000000c0010bb6                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0010c5e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0010eef        0x1 
 .text          0x00000000c0010ef0       0x86 hal/serial.32
                0x00000000c0010ef0                Serial::Serial(char const*)
                0x00000000c0010ef0                Serial::Serial(char const*)
                0x00000000c0010f28                Serial::~Serial()
                0x00000000c0010f28                Serial::~Serial()
                0x00000000c0010f4c                Serial::~Serial()
 *fill*         0x00000000c0010f76        0x2 
 .text          0x00000000c0010f78      0x2f2 hal/timer.32
                0x00000000c0010f78                Timer::Timer(char const*)
                0x00000000c0010f78                Timer::Timer(char const*)
                0x00000000c0010fb0                Timer::~Timer()
                0x00000000c0010fb0                Timer::~Timer()
                0x00000000c0010fd4                Timer::~Timer()
                0x00000000c0010ffe                Timer::read()
                0x00000000c0011009                timerHandler(unsigned int)
                0x00000000c0011170                setupTimer(int)
 *fill*         0x00000000c001126a        0x2 
 .text          0x00000000c001126c      0x43e hal/vcache.32
                0x00000000c001126c                VCache::VCache(PhysicalDisk*)
                0x00000000c001126c                VCache::VCache(PhysicalDisk*)
                0x00000000c00113d4                VCache::invalidateReadBuffer()
                0x00000000c00113e4                VCache::writeWriteBuffer()
                0x00000000c0011430                VCache::~VCache()
                0x00000000c0011430                VCache::~VCache()
                0x00000000c0011484                VCache::~VCache()
                0x00000000c00114ac                VCache::write(unsigned long long, int, void*)
                0x00000000c00115a6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c00116aa      0x4b3 hal/video.32
                0x00000000c00116aa                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00116f6                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c0011766                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c00117e4                Video::clearScreen(unsigned int)
                0x00000000c0011818                Video::putpixel(int, int, unsigned int)
                0x00000000c0011826                Video::Video(char const*)
                0x00000000c0011826                Video::Video(char const*)
                0x00000000c001185c                Video::~Video()
                0x00000000c001185c                Video::~Video()
                0x00000000c0011880                Video::~Video()
                0x00000000c00118aa                Video::isMonochrome()
                0x00000000c00118b6                Video::getWidth()
                0x00000000c00118c2                Video::getHeight()
                0x00000000c00118ce                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c001198a                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c0011af2                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c0011b5d        0x3 
 .text          0x00000000c0011b60     0x1707 hw/acpi.32
                0x00000000c0011b60                ACPI::close(int, int, void*)
                0x00000000c0011c14                findRSDP()
                0x00000000c0011ce8                loadACPITables(unsigned char*)
                0x00000000c0011f4c                findRSDT(unsigned char*)
                0x00000000c001210c                findDataTable(unsigned char*, char*)
                0x00000000c0012184                scanMADT()
                0x00000000c0012660                ACPI::ACPI()
                0x00000000c0012660                ACPI::ACPI()
                0x00000000c00126c4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c00127ac                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0012874                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c001287c                ACPI::detectPCI()
                0x00000000c0012d60                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0012da8                ACPI::sleep()
                0x00000000c0012de4                ACPI::open(int, int, void*)
 *fill*         0x00000000c0013267        0x1 
 .text          0x00000000c0013268     0x1861 hw/cpu.32
                0x00000000c0013268                CPU::close(int, int, void*)
                0x00000000c001326c                CPU::lookupAMDName(unsigned char, unsigned char)
                0x00000000c0013400                CPU::lookupIntelName(unsigned char, unsigned char)
                0x00000000c00136ae                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c00136ca                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c00136e2                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0013756                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00137da                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0013808                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0013836                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0013864                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0013892                CPU::CPU()
                0x00000000c0013892                CPU::CPU()
                0x00000000c0013920                CPU::displayFeatures()
                0x00000000c0013bc0                CPU::detectFeatures()
                0x00000000c00145ea                CPU::setupSMEP()
                0x00000000c00145f6                CPU::setupUMIP()
                0x00000000c0014600                CPU::setupTSC()
                0x00000000c001460a                CPU::setupLargePages()
                0x00000000c0014614                CPU::setupPAT()
                0x00000000c0014650                CPU::setupMTRR()
                0x00000000c0014652                CPU::setupGlobalPages()
                0x00000000c001465c                CPU::allowUsermodeDataAccess()
                0x00000000c001466e                CPU::prohibitUsermodeDataAccess()
                0x00000000c0014680                CPU::setupSMAP()
                0x00000000c001468e                CPU::setupFeatures()
                0x00000000c001475a                CPU::open(int, int, void*)
                0x00000000c00148ce                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0014ac9        0x0 hw/ports.32
 .text          0x00000000c0014ac9      0x16a hw/smp.32
                0x00000000c0014ac9                Krnl::smpEntry()
                0x00000000c0014acb                Krnl::startCPU(int)
                0x00000000c0014c14                Krnl::startCPUs()
 *fill*         0x00000000c0014c33        0x1 
 .text          0x00000000c0014c34      0x581 krnl/env.32
                0x00000000c0014c34                EnvVarContainer::getEnv(char const*)
                0x00000000c0014c72                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0014d34                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0014d36                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0014f1c                EnvVarContainer::__loadSystem()
                0x00000000c0014f36                EnvVarContainer::__loadUser()
                0x00000000c0014f38                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0014f38                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0014f5a                EnvVarContainer::~EnvVarContainer()
                0x00000000c0014f5a                EnvVarContainer::~EnvVarContainer()
                0x00000000c0014f8a                Krnl::getEnv(Process*, char const*)
                0x00000000c0014fef                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0015009                Krnl::setEnvUser(char const*, char const*)
                0x00000000c0015028                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c001503b                Krnl::deleteEnvSystem(char const*)
                0x00000000c001503c                Krnl::deleteEnvUser(char const*)
                0x00000000c001503d                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c001503e                Krnl::newProcessEnv(Process*)
                0x00000000c0015060                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c00150ac                Krnl::loadSystemEnv()
                0x00000000c00150da                Krnl::loadUserEnv()
                0x00000000c0015100                Krnl::flushEnv()
                0x00000000c0015101                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0015121                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00151b5      0x280 krnl/panic.32
                0x00000000c00151b5                Krnl::panic(char const*)
 .text          0x00000000c0015435      0x194 krnl/powctrl.32
                0x00000000c0015435                Krnl::powerThread(void*)
                0x00000000c00154b5                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c00154cb                Krnl::userIOReceived()
                0x00000000c00154d6                Krnl::handlePowerButton()
                0x00000000c001550b                Krnl::handleSleepButton()
                0x00000000c0015540                Krnl::setupPowerManager()
 .text          0x00000000c00155c9      0x13a krnl/rand.32
                0x00000000c00155c9                Krnl::initRNG()
                0x00000000c00156a2                Krnl::rand()
 *fill*         0x00000000c0015703        0x1 
 .text          0x00000000c0015704      0x5a0 net/ethernet.32
                0x00000000c0015704                Net::switchEndian16(unsigned short)
                0x00000000c0015728                Net::switchEndian32(unsigned int)
                0x00000000c0015758                Net::crc32Calc(unsigned char*, int)
                0x00000000c00157fc                Net::wrapEthernetFrame(Net::UnwrappedEthernetFrame, unsigned char*)
                0x00000000c0015a18                Net::unwrapEthernetFrame(unsigned char*, int)
 .text          0x00000000c0015ca4      0x50e reg/registry.32
                0x00000000c0015ca4                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0015dfc                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0015f51                Reg::getLine(char*, char*, char*)
                0x00000000c0015f88                Reg::readInt(char*, char*, int*)
                0x00000000c0016073                Reg::readString(char*, char*, char*, int)
                0x00000000c00160f4                Reg::readBool(char*, char*, bool*)
                0x00000000c0016119                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0016145                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0016171                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00161b2       0x36 sys/sc_eject.32
                0x00000000c00161b2                Sys::eject(regs*)
 .text          0x00000000c00161e8       0x18 sys/sc_exit.32
                0x00000000c00161e8                Sys::exit(regs*)
 .text          0x00000000c0016200       0x1f sys/sc_getcwd.32
                0x00000000c0016200                Sys::getCwd(regs*)
 .text          0x00000000c001621f        0xc sys/sc_getpid.32
                0x00000000c001621f                Sys::getPID(regs*)
 .text          0x00000000c001622b       0x1a sys/sc_getramdata.32
                0x00000000c001622b                Sys::getRAMData(regs*)
 .text          0x00000000c0016245       0x84 sys/sc_getvgaptr.32
                0x00000000c0016245                Sys::getVGAPtr(regs*)
 .text          0x00000000c00162c9       0xa8 sys/sc_loaddll.32
                0x00000000c00162c9                Sys::loadDLL(regs*)
 .text          0x00000000c0016371       0x68 sys/sc_read.32
                0x00000000c0016371                Sys::read(regs*)
 .text          0x00000000c00163d9       0x55 sys/sc_sbrk.32
                0x00000000c00163d9                Sys::sbrk(regs*)
 .text          0x00000000c001642e       0x1c sys/sc_setcwd.32
                0x00000000c001642e                Sys::setCwd(regs*)
 .text          0x00000000c001644a       0x95 sys/sc_settime.32
                0x00000000c001644a                Sys::setTime(regs*)
 .text          0x00000000c00164df       0x4a sys/sc_timezone.32
                0x00000000c00164df                Sys::timezone(regs*)
 .text          0x00000000c0016529       0x68 sys/sc_write.32
                0x00000000c0016529                Sys::write(regs*)
 .text          0x00000000c0016591       0x62 sys/sc_wsbe.32
                0x00000000c0016591                Sys::wsbe(regs*)
 .text          0x00000000c00165f3       0x38 sys/sc_yield.32
                0x00000000c00165f3                Sys::yield(regs*)
 .text          0x00000000c001662b      0xf8e sys/syscalls.32
                0x00000000c001662b                sysCallSeekDir(regs*)
                0x00000000c0016630                sysCallTellDir(regs*)
                0x00000000c0016635                sysCallVerify(regs*)
                0x00000000c001663f                sysCallGetArgc(regs*)
                0x00000000c001664f                sysFormatDisk(regs*)
                0x00000000c00166b9                sysSetDiskVolumeLabel(regs*)
                0x00000000c0016703                sysGetDiskVolumeLabel(regs*)
                0x00000000c0016758                sysShutdown(regs*)
                0x00000000c00167b6                sysCallRealpath(regs*)
                0x00000000c00167f9                sysCallReadDir(regs*)
                0x00000000c0016878                sysCallIsATTY(regs*)
                0x00000000c00168d2                sysCallSeek(regs*)
                0x00000000c0016929                sysCallTell(regs*)
                0x00000000c0016995                sysCallSize(regs*)
                0x00000000c0016a07                sysCallSizeFromFilename(regs*)
                0x00000000c0016ab6                sysCallClose(regs*)
                0x00000000c0016b16                sysCallOpenDir(regs*)
                0x00000000c0016b8b                sysCallCloseDir(regs*)
                0x00000000c0016bdf                sysCallMakeDir(regs*)
                0x00000000c0016c4f                sysCallWait(regs*)
                0x00000000c0016c69                sysCallNotImpl(regs*)
                0x00000000c0016c84                sysPanic(regs*)
                0x00000000c0016c9e                sysCallRmdir(regs*)
                0x00000000c0016d02                sysCallUnlink(regs*)
                0x00000000c0016d66                sysCallGetArgv(regs*)
                0x00000000c0016db2                sysCallTTYName(regs*)
                0x00000000c0016e35                sysCallUSleep(regs*)
                0x00000000c0016e5e                sysCallSpawn(regs*)
                0x00000000c0016ec6                sysCallGetEnv(regs*)
                0x00000000c0016f73                sysAppSettings(regs*)
                0x00000000c0017087                sysSetFatAttrib(regs*)
                0x00000000c00170f9                sysPipe(regs*)
                0x00000000c001713e                sysGetUnixTime(regs*)
                0x00000000c0017152                string_ends_with(char const*, char const*)
                0x00000000c001719a                sysCallOpen(regs*)
                0x00000000c0017382                Sys::loadSyscalls()
                0x00000000c0017577                Sys::systemCall(regs*, void*)
 .text          0x00000000c00175b9     0x1203 thr/elf.32
                0x00000000c00175b9                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0017863                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0017a79                Thr::runtimeReferenceHelper()
                0x00000000c0017a8c                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0017adb                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0017d99                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00184cf                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0018501                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0018538                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0018552                Thr::loadDLL(char const*, bool)
                0x00000000c0018783                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00187bc     0x12a9 thr/prcssthr.32
                0x00000000c00187bc                userModeEntryPoint(void*)
                0x00000000c00187e4                changeTSS
                0x00000000c0018814                switchToThread(ThreadControlBlock*)
                0x00000000c00188c8                Process::addArgs(char**)
                0x00000000c0018928                Process::Process(char const*, Process*, char**)
                0x00000000c0018928                Process::Process(char const*, Process*, char**)
                0x00000000c0018b14                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0018b14                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0018ccc                taskStartupFunction
                0x00000000c0018cd8                Semaphore::Semaphore(int)
                0x00000000c0018cd8                Semaphore::Semaphore(int)
                0x00000000c0018d08                Mutex::Mutex()
                0x00000000c0018d08                Mutex::Mutex()
                0x00000000c0018d1c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0018e14                Process::createUserThread()
                0x00000000c0018e30                setupMultitasking(void (*)())
                0x00000000c0018f38                schedule()
                0x00000000c0018fc4                Semaphore::tryAcquire()
                0x00000000c0019090                Semaphore::assertLocked(char const*)
                0x00000000c0019108                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0019130                blockTask(TaskState)
                0x00000000c0019160                waitTask(int, int*, int)
                0x00000000c00191a4                milliTenthSleepUntil(unsigned int)
                0x00000000c0019230                milliTenthSleep(unsigned int)
                0x00000000c0019240                sleep(unsigned int)
                0x00000000c001925c                Semaphore::acquire()
                0x00000000c0019318                taskReturned
                0x00000000c0019354                Thr::processFromPID(int)
                0x00000000c00193f4                unblockTask(ThreadControlBlock*)
                0x00000000c0019498                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0019760                cleanerTaskFunction(void*)
                0x00000000c0019850                terminateTask(int)
                0x00000000c001991c                Thr::terminateFromIRQ(int)
                0x00000000c0019928                Semaphore::release()
 .text          0x00000000c0019a65      0xb93 vm86/vm8086.32
                0x00000000c0019a65                Vm::inbv(unsigned short)
                0x00000000c0019a78                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0019aae                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0019abe                Vm::getSegment(unsigned int)
                0x00000000c0019ac6                Vm::getOffset(unsigned int)
                0x00000000c0019acb                Vm::mainloop2()
                0x00000000c0019b05                Vm::mainVm8086Loop(void*)
                0x00000000c0019b15                Vm::mainloop3(unsigned long)
                0x00000000c0019b3b                Vm::initialise8086()
                0x00000000c0019b7e                Vm::finish8086()
                0x00000000c0019bdf                Vm::getOutput8086(unsigned char*)
                0x00000000c0019c04                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0019cbd                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0019e25                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0019eaf                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0019ec0                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0019ed2                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0019ee3                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0019ef8                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0019f0e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0019f23                Vm::faultHandler(regs*)
 .text          0x00000000c001a5f8      0xfcd vm86/x87em.32
                0x00000000c001a5f8                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c001a656                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c001a65f                Vm::fpu32ToInternal(unsigned int)
                0x00000000c001a6a4                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c001a6ad                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c001a70c                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c001a748                Vm::fpuLongToFloat(long long)
                0x00000000c001a7a7                Vm::fpuGet0()
                0x00000000c001a7ac                Vm::fpuGet1()
                0x00000000c001a7b4                Vm::fpuGetPi()
                0x00000000c001a7bc                Vm::fpuGetLog2E()
                0x00000000c001a7d4                Vm::fpuGetLogE2()
                0x00000000c001a7ec                Vm::fpuGetLog210()
                0x00000000c001a804                Vm::fpuGetLog102()
                0x00000000c001a81c                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c001a830                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c001a846                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c001a89c                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c001a8ad                Vm::fpuAbs(unsigned long long)
                0x00000000c001a8b6                Vm::fpuChs(unsigned long long)
                0x00000000c001a8c6                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c001a8d5                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c001a8f4                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c001a910                Vm::fpuSquare(unsigned long long)
                0x00000000c001a926                Vm::fpuGetReg(int)
                0x00000000c001a969                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c001a9b5                Vm::fpuPush(unsigned long long)
                0x00000000c001aa13                Vm::fpuPop()
                0x00000000c001aa66                Vm::x87Handler(regs*)
 *fill*         0x00000000c001b5c5        0x3 
 .text          0x00000000c001b5c8     0x13b7 fs/fat/vfslink.32
                0x00000000c001b5c8                FAT::getName()
                0x00000000c001b5d0                FAT::tell(void*, unsigned long long*)
                0x00000000c001b60c                FAT::stat(void*, unsigned long long*)
                0x00000000c001b648                FAT::~FAT()
                0x00000000c001b648                FAT::~FAT()
                0x00000000c001b66c                FAT::~FAT()
                0x00000000c001b694                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b738                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b7fc                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b9d0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001bbe8                FAT::allocateSwapfile(char const*, int)
                0x00000000c001bda4                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bf10                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001bf70                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001bfd0                FAT::close(void*)
                0x00000000c001c024                FAT::closeDir(void*)
                0x00000000c001c078                FAT::seek(void*, unsigned long long)
                0x00000000c001c0d4                fatWrapperReadDisk
                0x00000000c001c11c                fatWrapperWriteDisk
                0x00000000c001c164                fatWrapperIoctl
                0x00000000c001c274                FAT::FAT()
                0x00000000c001c274                FAT::FAT()
                0x00000000c001c2c8                FAT::fixFilepath(char*)
                0x00000000c001c304                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c438                FAT::openDir(char const*, void**)
                0x00000000c001c4e8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c5dc                FAT::unlink(char const*)
                0x00000000c001c65c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c7c4                FAT::rename(char const*, char const*)
                0x00000000c001c890                FAT::mkdir(char const*)
                0x00000000c001c910                FAT::exists(char const*)
 *fill*         0x00000000c001c97f        0x1 
 .text          0x00000000c001c980      0xba7 fs/iso9660/vfslink.32
                0x00000000c001c980                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001c986                ISO9660::seek(void*, unsigned long long)
                0x00000000c001c9b6                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001c9da                ISO9660::getName()
                0x00000000c001c9e0                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001ca04                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ca0a                ISO9660::unlink(char const*)
                0x00000000c001ca10                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001ca16                ISO9660::rename(char const*, char const*)
                0x00000000c001ca1c                ISO9660::mkdir(char const*)
                0x00000000c001ca22                ISO9660::close(void*)
                0x00000000c001ca44                ISO9660::closeDir(void*)
                0x00000000c001ca66                ISO9660::~ISO9660()
                0x00000000c001ca66                ISO9660::~ISO9660()
                0x00000000c001ca8a                ISO9660::~ISO9660()
                0x00000000c001cab1                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001caf3                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001cb6e                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001cbce                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001cdd2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d04c                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001d0a0                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001d276                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001d304                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001d3b2                ISO9660::exists(char const*)
                0x00000000c001d3d6                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d46a                ISO9660::openDir(char const*, void**)
                0x00000000c001d504                ISO9660::ISO9660()
                0x00000000c001d504                ISO9660::ISO9660()
 *fill*         0x00000000c001d527        0x1 
 .text          0x00000000c001d528      0x298 hal/sound/sndcard.32
                0x00000000c001d528                SoundCard::beginPlayback()
                0x00000000c001d536                SoundCard::stopPlayback()
                0x00000000c001d544                SoundCard::SoundCard(char const*)
                0x00000000c001d544                SoundCard::SoundCard(char const*)
                0x00000000c001d5e2                SoundCard::~SoundCard()
                0x00000000c001d5e2                SoundCard::~SoundCard()
                0x00000000c001d606                SoundCard::~SoundCard()
                0x00000000c001d630                SoundCard::configureRates(int, int, int)
                0x00000000c001d660                SoundCard::getSamples16(int, short*)
                0x00000000c001d6ca                SoundCard::getSamples32(int, int*)
                0x00000000c001d750                SoundCard::addChannel(SoundPort*)
                0x00000000c001d7ac                SoundCard::removeChannel(int)
 .text          0x00000000c001d7c0      0x3fb hal/sound/sndport.32
                0x00000000c001d7c0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d7c0                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d84c                SoundPort::~SoundPort()
                0x00000000c001d84c                SoundPort::~SoundPort()
                0x00000000c001d880                SoundPort::unpause()
                0x00000000c001d88c                SoundPort::pause()
                0x00000000c001d898                SoundPort::getBufferUsed()
                0x00000000c001d8a0                SoundPort::getBufferSize()
                0x00000000c001d8a8                SoundPort::buffer16(short*, int)
                0x00000000c001d95c                SoundPort::buffer32(int*, int)
                0x00000000c001da08                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001db04                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001dbbb        0x0 hw/bus/isa.32
 *fill*         0x00000000c001dbbb        0x1 
 .text          0x00000000c001dbbc     0x1187 hw/bus/pci.32
                0x00000000c001dbbc                PCI::open(int, int, void*)
                0x00000000c001dbda                PCI::close(int, int, void*)
                0x00000000c001dbde                PCI::PCI()
                0x00000000c001dbde                PCI::PCI()
                0x00000000c001dc74                PCI::readBAR8(unsigned int, int)
                0x00000000c001dc90                PCI::readBAR16(unsigned int, int)
                0x00000000c001dcae                PCI::readBAR32(unsigned int, int)
                0x00000000c001dcca                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001dcea                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001dd0c                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001dd2c                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dd9a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001de42                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001de66                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001de8e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001ded8                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001df00                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001df24                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001df48                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001df70                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dfd4                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001e0bc                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e4ae                PCI::checkBus(unsigned char)
                0x00000000c001e4d2                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e912                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ec84                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001ecf0                PCI::detect()
 *fill*         0x00000000c001ed43        0x1 
 .text          0x00000000c001ed44      0xb66 hw/diskctrl/ide.32
                0x00000000c001ed44                IDE::close(int, int, void*)
                0x00000000c001ed48                IDE::IDE()
                0x00000000c001ed48                IDE::IDE()
                0x00000000c001ed7c                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ed8e                selectDrive(unsigned char, unsigned char)
                0x00000000c001ed90                IDE::getBase(unsigned char)
                0x00000000c001eda2                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ee62                IDE::read(unsigned char, unsigned char)
                0x00000000c001ef10                IDE::waitInterrupt(unsigned char)
                0x00000000c001ef72                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ef8e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001efaa                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001eff0                IDE::open(int, int, void*)
                0x00000000c001f41a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001f4e6                IDE::detect()
                0x00000000c001f7a6                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f856                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f8aa      0x46c hw/diskctrl/satabus.32
                0x00000000c001f8aa                SATABus::close(int, int, void*)
                0x00000000c001f8ae                SATABus::detect()
                0x00000000c001f8b0                SATABus::SATABus()
                0x00000000c001f8b0                SATABus::SATABus()
                0x00000000c001f936                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f968                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f9b0                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f9d0                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f9fa                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001fb00                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001fce2                SATABus::open(int, int, void*)
 .text          0x00000000c001fd16      0x684 hw/diskphys/ata.32
                0x00000000c001fd16                ATA::close(int, int, void*)
                0x00000000c001fd3a                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001fd3c                ATA::ATA()
                0x00000000c001fd3c                ATA::ATA()
                0x00000000c001fd6a                ATA::flush(bool)
                0x00000000c001fdb4                ATA::readyForCommand()
                0x00000000c001fe00                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c00201f6                ATA::read(unsigned long long, int, void*)
                0x00000000c0020242                ATA::write(unsigned long long, int, void*)
                0x00000000c00202a4                ATA::detectCHS()
                0x00000000c00202ce                ATA::open(int, int, void*)
 .text          0x00000000c002039a      0x645 hw/diskphys/atapi.32
                0x00000000c002039a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c00203a0                ATAPI::close(int, int, void*)
                0x00000000c00203c4                ATAPI::ATAPI()
                0x00000000c00203c4                ATAPI::ATAPI()
                0x00000000c00203f2                ATAPI::readyForCommand()
                0x00000000c0020444                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0020704                ATAPI::diskRemoved()
                0x00000000c0020760                ATAPI::eject()
                0x00000000c00207a8                ATAPI::diskInserted()
                0x00000000c00207c4                ATAPI::detectMedia()
                0x00000000c0020880                ATAPI::open(int, int, void*)
                0x00000000c0020960                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c00209df        0x1 
 .text          0x00000000c00209e0      0xa68 hw/diskphys/sata.32
                0x00000000c00209e0                SATA::close(int, int, void*)
                0x00000000c0020a04                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0020a06                SATA::open(int, int, void*)
                0x00000000c0020bfc                SATA::SATA()
                0x00000000c0020bfc                SATA::SATA()
                0x00000000c0020c2a                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0021222                SATA::read(unsigned long long, int, void*)
                0x00000000c0021322                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0021448      0x642 hw/diskphys/satapi.32
                0x00000000c0021448                SATAPI::write(unsigned long long, int, void*)
                0x00000000c002144e                SATAPI::close(int, int, void*)
                0x00000000c0021472                SATAPI::SATAPI()
                0x00000000c0021472                SATAPI::SATAPI()
                0x00000000c00214a0                SATAPI::diskRemoved()
                0x00000000c00214a2                SATAPI::diskInserted()
                0x00000000c00214be                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c002174c                SATAPI::eject()
                0x00000000c0021788                SATAPI::detectMedia()
                0x00000000c00218b2                SATAPI::open(int, int, void*)
                0x00000000c00219b2                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0021a8a        0x2 
 .text          0x00000000c0021a8c       0x94 hw/fpu/avx.32
                0x00000000c0021a8c                AVX::open(int, int, void*)
                0x00000000c0021aa0                AVX::close(int, int, void*)
                0x00000000c0021ab4                AVX::available()
                0x00000000c0021ac8                AVX::save(void*)
                0x00000000c0021ae0                AVX::load(void*)
                0x00000000c0021af8                AVX::AVX()
                0x00000000c0021af8                AVX::AVX()
 .text          0x00000000c0021b20       0x94 hw/fpu/mmx.32
                0x00000000c0021b20                MMX::available()
                0x00000000c0021b34                MMX::open(int, int, void*)
                0x00000000c0021b48                MMX::close(int, int, void*)
                0x00000000c0021b5c                MMX::save(void*)
                0x00000000c0021b74                MMX::load(void*)
                0x00000000c0021b8c                MMX::MMX()
                0x00000000c0021b8c                MMX::MMX()
 .text          0x00000000c0021bb4       0x9c hw/fpu/sse.32
                0x00000000c0021bb4                SSE::open(int, int, void*)
                0x00000000c0021bc8                SSE::close(int, int, void*)
                0x00000000c0021bdc                SSE::available()
                0x00000000c0021bf8                SSE::save(void*)
                0x00000000c0021c10                SSE::load(void*)
                0x00000000c0021c28                SSE::SSE()
                0x00000000c0021c28                SSE::SSE()
 .text          0x00000000c0021c50       0x8e hw/fpu/x87.32
                0x00000000c0021c50                x87::open(int, int, void*)
                0x00000000c0021c62                x87::close(int, int, void*)
                0x00000000c0021c74                x87::available()
                0x00000000c0021c86                x87::save(void*)
                0x00000000c0021c9e                x87::load(void*)
                0x00000000c0021cb6                x87::x87()
                0x00000000c0021cb6                x87::x87()
 .text          0x00000000c0021cde      0x71e hw/intctrl/apic.32
                0x00000000c0021cde                APIC::disable()
                0x00000000c0021ce0                APIC::close(int, int, void*)
                0x00000000c0021d02                IOAPIC::close(int, int, void*)
                0x00000000c0021d08                APIC::io_wait()
                0x00000000c0021d0e                APIC::getBase()
                0x00000000c0021d50                APIC::eoi(unsigned char)
                0x00000000c0021d7e                APIC::open(int, int, void*)
                0x00000000c0021ecc                IOAPIC::IOAPIC()
                0x00000000c0021ecc                IOAPIC::IOAPIC()
                0x00000000c0021ef4                APIC::APIC()
                0x00000000c0021ef4                APIC::APIC()
                0x00000000c0021fd0                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0022002                IOAPIC::read(int)
                0x00000000c002202a                IOAPIC::open(int, int, void*)
                0x00000000c0022120                IOAPIC::write(int, int)
                0x00000000c002214c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
                0x00000000c0022246                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 .text          0x00000000c00223fc      0x3d3 hw/intctrl/pic.32
                0x00000000c00223fc                PIC::disable()
                0x00000000c002242a                PIC::close(int, int, void*)
                0x00000000c002244c                PIC::PIC()
                0x00000000c002244c                PIC::PIC()
                0x00000000c0022522                PIC::ioWait()
                0x00000000c0022528                PIC::getIRQReg(int)
                0x00000000c0022592                PIC::eoi(unsigned char)
                0x00000000c0022624                PIC::remap()
                0x00000000c0022790                PIC::open(int, int, void*)
 *fill*         0x00000000c00227cf        0x1 
 .text          0x00000000c00227d0      0x240 hw/timer/apictimer.32
                0x00000000c00227d0                APICTimer::close(int, int, void*)
                0x00000000c00227d8                apicTimerHandler(regs*, void*)
                0x00000000c0022800                APICTimer::write(int)
                0x00000000c00228e8                APICTimer::open(int, int, void*)
                0x00000000c00229e8                APICTimer::APICTimer()
                0x00000000c00229e8                APICTimer::APICTimer()
 .text          0x00000000c0022a10      0x1a3 hw/timer/pit.32
                0x00000000c0022a10                PIT::write(int)
                0x00000000c0022a90                pitHandler(regs*, void*)
                0x00000000c0022ab4                PIT::open(int, int, void*)
                0x00000000c0022b04                PIT::close(int, int, void*)
                0x00000000c0022b34                PIT::PIT()
                0x00000000c0022b34                PIT::PIT()
 *fill*         0x00000000c0022bb3        0xd 
 .text          0x00000000c0022bc0       0x83 hw/fpu/x86/avx.32
                0x00000000c0022bc0                avxDetect
                0x00000000c0022bea                avxSave
                0x00000000c0022bfb                avxLoad
                0x00000000c0022c0c                avxInit
                0x00000000c0022c2e                avxClose
                0x00000000c0022c2f                wouldSheSayYes
 *fill*         0x00000000c0022c43        0xd 
 .text          0x00000000c0022c50       0x39 hw/fpu/x86/sse.32
                0x00000000c0022c50                absolutelyNoChanceInHell
                0x00000000c0022c50                sseDetect
                0x00000000c0022c68                sseSave
                0x00000000c0022c70                sseLoad
                0x00000000c0022c78                sseInit
                0x00000000c0022c88                sseClose
 *fill*         0x00000000c0022c89        0x7 
 .text          0x00000000c0022c90       0x49 hw/fpu/x86/x87.32
                0x00000000c0022c96                x87Detect
                0x00000000c0022cb1                x87Save
                0x00000000c0022cb8                x87Load
                0x00000000c0022cbf                x87Init
                0x00000000c0022cd8                x87Close
 *fill*         0x00000000c0022cd9        0x3 
 .text          0x00000000c0022cdc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0022d01        0x0 crtn.32
 *fill*         0x00000000c0022d01        0x3 
 .text          0x00000000c0022d04      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0022d04                __divdi3
 *fill*         0x00000000c0022e4f        0x1 
 .text          0x00000000c0022e50      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0022e50                __moddi3
 *fill*         0x00000000c0022fce        0x2 
 .text          0x00000000c0022fd0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0022fd0                __udivdi3
 *fill*         0x00000000c00230cf        0x1 
 .text          0x00000000c00230d0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c00230d0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c00231f0        0x0
 .iplt          0x00000000c00231f0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c00231ea        0xf
 .init          0x00000000c00231ea        0x3 crti.32
                0x00000000c00231ea                _init
 .init          0x00000000c00231ed        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c00231f2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c00231f7        0x2 crtn.32

.fini           0x00000000c00231f9        0xa
 .fini          0x00000000c00231f9        0x3 crti.32
                0x00000000c00231f9                _fini
 .fini          0x00000000c00231fc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0023201        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c0023204       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0023204       0x23 core/computer.32
                0x00000000c0023204                Computer::~Computer()
                0x00000000c0023204                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0023228       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0023228       0x2a core/computer.32
                0x00000000c0023228                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0023252       0x21
 .text._Z10idleCommonv
                0x00000000c0023252       0x21 core/idle.32
                0x00000000c0023252                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0023274        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0023274        0x2 core/unixfile.32
                0x00000000c0023274                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0023274                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0023276       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0023276       0x42 core/unixfile.32
                0x00000000c0023276                LinkedList<UnixFile>::LinkedList()
                0x00000000c0023276                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00232b8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00232b8       0xd3 core/unixfile.32
                0x00000000c00232b8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002338c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002338c        0x7 core/unixfile.32
                0x00000000c002338c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0023394       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0023394       0xa1 core/unixfile.32
                0x00000000c0023394                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0023436        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0023436        0x8 core/unixfile.32
                0x00000000c0023436                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002343e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c002343e       0x1a hal/device.32
                0x00000000c002343e                DriverlessDevice::~DriverlessDevice()
                0x00000000c002343e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0023458       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0023458       0x2a hal/device.32
                0x00000000c0023458                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0023482       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0023482       0xdc hal/device.32
                0x00000000c0023482                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c002355e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c002355e       0x42 hal/device.32
                0x00000000c002355e                LinkedList<Device>::LinkedList()
                0x00000000c002355e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00235a0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00235a0       0x1c hal/timer.32
                0x00000000c00235a0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00235bc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00235bc        0x7 hal/timer.32
                0x00000000c00235bc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00235c4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00235c4       0xb8 hal/timer.32
                0x00000000c00235c4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002367c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002367c       0xda hal/timer.32
                0x00000000c002367c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0023758       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0023758       0x23 hw/acpi.32
                0x00000000c0023758                ACPI::~ACPI()
                0x00000000c0023758                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002377c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002377c       0x2a hw/acpi.32
                0x00000000c002377c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00237a8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00237a8        0x2 hw/acpi.32
                0x00000000c00237a8                LinkedList<Device>::~LinkedList()
                0x00000000c00237a8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00237ac       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00237ac       0x1c hw/acpi.32
                0x00000000c00237ac                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00237c8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00237c8        0x7 hw/acpi.32
                0x00000000c00237c8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00237d0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00237d0       0xb8 hw/acpi.32
                0x00000000c00237d0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c0023888       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0023888       0x23 hw/cpu.32
                0x00000000c0023888                CPU::~CPU()
                0x00000000c0023888                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00238ac       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00238ac       0x2a hw/cpu.32
                0x00000000c00238ac                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00238d8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00238d8        0x2 thr/prcssthr.32
                0x00000000c00238d8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00238d8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00238dc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00238dc       0x49 thr/prcssthr.32
                0x00000000c00238dc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00238dc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0023928       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0023928       0x42 thr/prcssthr.32
                0x00000000c0023928                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0023928                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002396c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002396c        0x8 thr/prcssthr.32
                0x00000000c002396c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0023974        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0023974        0xd vm86/x87em.32
                0x00000000c0023974                Vm::_FPUState::_FPUState()
                0x00000000c0023974                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c0023982       0x23
 .text._ZN3PCID2Ev
                0x00000000c0023982       0x23 hw/bus/pci.32
                0x00000000c0023982                PCI::~PCI()
                0x00000000c0023982                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00239a6       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00239a6       0x2a hw/bus/pci.32
                0x00000000c00239a6                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00239d0       0x23
 .text._ZN3IDED2Ev
                0x00000000c00239d0       0x23 hw/diskctrl/ide.32
                0x00000000c00239d0                IDE::~IDE()
                0x00000000c00239d0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00239f4       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00239f4       0x2a hw/diskctrl/ide.32
                0x00000000c00239f4                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0023a1e       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0023a1e       0x23 hw/diskctrl/satabus.32
                0x00000000c0023a1e                SATABus::~SATABus()
                0x00000000c0023a1e                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0023a42       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0023a42       0x2a hw/diskctrl/satabus.32
                0x00000000c0023a42                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0023a6c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0023a6c       0x23 hw/diskphys/ata.32
                0x00000000c0023a6c                ATA::~ATA()
                0x00000000c0023a6c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0023a90       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0023a90       0x2a hw/diskphys/ata.32
                0x00000000c0023a90                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0023aba       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0023aba       0x23 hw/diskphys/atapi.32
                0x00000000c0023aba                ATAPI::~ATAPI()
                0x00000000c0023aba                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0023ade       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0023ade       0x2a hw/diskphys/atapi.32
                0x00000000c0023ade                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0023b08       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0023b08       0x23 hw/diskphys/sata.32
                0x00000000c0023b08                SATA::~SATA()
                0x00000000c0023b08                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0023b2c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0023b2c       0x2a hw/diskphys/sata.32
                0x00000000c0023b2c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0023b56       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0023b56       0x23 hw/diskphys/satapi.32
                0x00000000c0023b56                SATAPI::~SATAPI()
                0x00000000c0023b56                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0023b7a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0023b7a       0x2a hw/diskphys/satapi.32
                0x00000000c0023b7a                SATAPI::~SATAPI()

.text._ZN3AVXD2Ev
                0x00000000c0023ba4       0x23
 .text._ZN3AVXD2Ev
                0x00000000c0023ba4       0x23 hw/fpu/avx.32
                0x00000000c0023ba4                AVX::~AVX()
                0x00000000c0023ba4                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c0023bc8       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c0023bc8       0x2a hw/fpu/avx.32
                0x00000000c0023bc8                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c0023bf4       0x23
 .text._ZN3MMXD2Ev
                0x00000000c0023bf4       0x23 hw/fpu/mmx.32
                0x00000000c0023bf4                MMX::~MMX()
                0x00000000c0023bf4                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c0023c18       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c0023c18       0x2a hw/fpu/mmx.32
                0x00000000c0023c18                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c0023c44       0x23
 .text._ZN3SSED2Ev
                0x00000000c0023c44       0x23 hw/fpu/sse.32
                0x00000000c0023c44                SSE::~SSE()
                0x00000000c0023c44                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c0023c68       0x2a
 .text._ZN3SSED0Ev
                0x00000000c0023c68       0x2a hw/fpu/sse.32
                0x00000000c0023c68                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c0023c92       0x23
 .text._ZN3x87D2Ev
                0x00000000c0023c92       0x23 hw/fpu/x87.32
                0x00000000c0023c92                x87::~x87()
                0x00000000c0023c92                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c0023cb6       0x2a
 .text._ZN3x87D0Ev
                0x00000000c0023cb6       0x2a hw/fpu/x87.32
                0x00000000c0023cb6                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c0023ce0       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0023ce0       0x23 hw/intctrl/apic.32
                0x00000000c0023ce0                IOAPIC::~IOAPIC()
                0x00000000c0023ce0                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0023d04       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0023d04       0x2a hw/intctrl/apic.32
                0x00000000c0023d04                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c0023d2e       0x23
 .text._ZN4APICD2Ev
                0x00000000c0023d2e       0x23 hw/intctrl/apic.32
                0x00000000c0023d2e                APIC::~APIC()
                0x00000000c0023d2e                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c0023d52       0x2a
 .text._ZN4APICD0Ev
                0x00000000c0023d52       0x2a hw/intctrl/apic.32
                0x00000000c0023d52                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c0023d7c       0x23
 .text._ZN3PICD2Ev
                0x00000000c0023d7c       0x23 hw/intctrl/pic.32
                0x00000000c0023d7c                PIC::~PIC()
                0x00000000c0023d7c                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c0023da0       0x2a
 .text._ZN3PICD0Ev
                0x00000000c0023da0       0x2a hw/intctrl/pic.32
                0x00000000c0023da0                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0023dcc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0023dcc       0x23 hw/timer/apictimer.32
                0x00000000c0023dcc                APICTimer::~APICTimer()
                0x00000000c0023dcc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0023df0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0023df0       0x2a hw/timer/apictimer.32
                0x00000000c0023df0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0023e1c       0x23
 .text._ZN3PITD2Ev
                0x00000000c0023e1c       0x23 hw/timer/pit.32
                0x00000000c0023e1c                PIT::~PIT()
                0x00000000c0023e1c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0023e40       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0023e40       0x2a hw/timer/pit.32
                0x00000000c0023e40                PIT::~PIT()

.rodata         0x00000000c0023e6a     0x400e
                0x00000000c0023e6a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0023e6a        0x2 
 .ctors         0x00000000c0023e6c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0023e70        0x4 core/unixfile.32
 .ctors         0x00000000c0023e74        0x4 thr/prcssthr.32
 .ctors         0x00000000c0023e78        0x4 vm86/x87em.32
 .ctors         0x00000000c0023e7c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0023e80                end_ctors = .
                0x00000000c0023e80                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0023e80        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0023e84        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0023e84                __DTOR_END__
                0x00000000c0023e88                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0023e88       0x18 
 .rodata        0x00000000c0023ea0      0x101 acpica/utclib.32
                0x00000000c0023ea0                AcpiGbl_Ctypes
 *fill*         0x00000000c0023fa1        0x3 
 .rodata        0x00000000c0023fa4       0x18 core/malloc.32
 *fill*         0x00000000c0023fbc        0x4 
 .rodata        0x00000000c0023fc0      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c00240e0       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0024136        0xa 
 .rodata        0x00000000c0024140      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0024540       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0024589      0x321 core/computer.32
                                        0x323 (size before relaxing)
 *fill*         0x00000000c00248aa        0x2 
 .rodata.str1.4
                0x00000000c00248ac       0xcc core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0024978       0x2c core/computer.32
                0x00000000c0024978                vtable for Computer
 .rodata.str1.1
                0x00000000c00249a4       0x2a core/kheap.32
 *fill*         0x00000000c00249ce        0x2 
 .rodata.str1.4
                0x00000000c00249d0       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0024a00       0x99 core/main.32
 *fill*         0x00000000c0024a99        0x3 
 .rodata.str1.4
                0x00000000c0024a9c       0x1f core/main.32
 .rodata.str1.1
                0x00000000c0024abb       0xea core/physmgr.32
                                         0xee (size before relaxing)
 *fill*         0x00000000c0024ba5        0x3 
 .rodata.str1.4
                0x00000000c0024ba8       0xc9 core/physmgr.32
 .rodata.str1.1
                0x00000000c0024c71       0x39 core/pipe.32
 *fill*         0x00000000c0024caa        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0024cac       0x1c core/pipe.32
                0x00000000c0024cac                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024cc8       0x69 core/terminal.32
 *fill*         0x00000000c0024d31        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0024d34       0x1c core/terminal.32
                0x00000000c0024d34                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0024d50       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0024d72       0x15 core/unixfile.32
 *fill*         0x00000000c0024d87        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0024d88       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0024dd3        0x8 core/unixfile.32
 *fill*         0x00000000c0024ddb        0x1 
 .rodata.str1.4
                0x00000000c0024ddc       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0024dfc       0x1c core/unixfile.32
                0x00000000c0024dfc                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024e18       0x1c core/unixfile.32
                0x00000000c0024e18                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024e34      0x1b8 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0024fec      0x194 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0025180       0x83 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0025203       0x11 dbg/kconsole.32
 *fill*         0x00000000c0025203        0x1 
 .rodata        0x00000000c0025204      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0025354       0x25 fs/vfs.32
                                         0x33 (size before relaxing)
 *fill*         0x00000000c0025379        0x3 
 .rodata.str1.4
                0x00000000c002537c       0x54 fs/vfs.32
 .rodata._ZTV10Filesystem
                0x00000000c00253d0       0x68 fs/vfs.32
                0x00000000c00253d0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0025438       0x1c fs/vfs.32
                0x00000000c0025438                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0025454       0x1c fs/vfs.32
                0x00000000c0025454                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0025470       0x2c hal/bus.32
                0x00000000c0025470                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c002549c       0x30 hal/buzzer.32
                0x00000000c002549c                vtable for Buzzer
 .rodata.str1.1
                0x00000000c00254cc       0x1e hal/clock.32
 *fill*         0x00000000c00254ea        0x2 
 .rodata._ZTV5Clock
                0x00000000c00254ec       0x3c hal/clock.32
                0x00000000c00254ec                vtable for Clock
 *fill*         0x00000000c0025528       0x18 
 .rodata        0x00000000c0025540       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0025570       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00255c8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00255c8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c00255c8       0x2c hal/device.32
                0x00000000c00255c8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00255f4       0x2c hal/device.32
                0x00000000c00255f4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0025620       0x2c hal/diskctrl.32
                0x00000000c0025620                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002564c       0x38 hal/diskphys.32
                0x00000000c002564c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0025684       0x26 hal/fpu.32
 *fill*         0x00000000c00256aa        0x2 
 .rodata._ZTV3FPU
                0x00000000c00256ac       0x38 hal/fpu.32
                0x00000000c00256ac                vtable for FPU
 .rodata        0x00000000c00256e4      0x370 hal/intctrl.32
 .rodata._ZTV19InterruptController
                0x00000000c0025a54       0x48 hal/intctrl.32
                0x00000000c0025a54                vtable for InterruptController
 .rodata        0x00000000c0025a9c       0x53 hal/keybrd.32
 *fill*         0x00000000c0025aef        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0025af0       0x34 hal/keybrd.32
                0x00000000c0025af0                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0025b24       0x9a hal/logidisk.32
 *fill*         0x00000000c0025bbe        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0025bc0       0x2c hal/logidisk.32
                0x00000000c0025bc0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0025bec       0x2c hal/mouse.32
                0x00000000c0025bec                vtable for Mouse
 .rodata.str1.1
                0x00000000c0025c18        0xb hal/partition.32
 *fill*         0x00000000c0025c23        0x1 
 .rodata._ZTV6Serial
                0x00000000c0025c24       0x44 hal/serial.32
                0x00000000c0025c24                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0025c68       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0025c68        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0025c68       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0025c68       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0025c68       0x30 hal/timer.32
                0x00000000c0025c68                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0025c98       0x10 hal/vcache.32
                0x00000000c0025c98                vtable for VCache
 .rodata.str1.1
                0x00000000c0025ca8       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c0025d10       0x48 hal/video.32
                0x00000000c0025d10                vtable for Video
 .rodata.str1.4
                0x00000000c0025d58      0x123 hw/acpi.32
 .rodata.str1.1
                0x00000000c0025e7b      0x2a0 hw/acpi.32
                                        0x2ba (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c002611b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c002611b        0x8 hw/acpi.32
 *fill*         0x00000000c002611b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c002611c       0x2c hw/acpi.32
                0x00000000c002611c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0026148      0x563 hw/cpu.32
                                        0x570 (size before relaxing)
 *fill*         0x00000000c00266ab        0x1 
 .rodata._ZTV3CPU
                0x00000000c00266ac       0x2c hw/cpu.32
                0x00000000c00266ac                vtable for CPU
 .rodata.str1.1
                0x00000000c00266d8       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c00266e9       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0026725       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 *fill*         0x00000000c00267c5        0x3 
 .rodata.str1.4
                0x00000000c00267c8      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c0026906       0x2f krnl/powctrl.32
 .rodata.str1.1
                0x00000000c0026935       0x31 krnl/rand.32
 *fill*         0x00000000c0026966        0x2 
 .rodata.str1.4
                0x00000000c0026968       0x4c net/ethernet.32
 .rodata.str1.1
                0x00000000c00269b4       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00269f9       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c0026a4d       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c0026a79       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0026ac1      0x247 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c0026d08       0x57 thr/prcssthr.32
 *fill*         0x00000000c0026d5f        0x1 
 .rodata.str1.4
                0x00000000c0026d60      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0026e6c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0026e6c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0026e6c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0026e6c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0026e6c       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0026f0c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0026f3c       0x58 vm86/x87em.32
 .rodata        0x00000000c0026f94       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c0026fd0       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0027011        0x3 
 .rodata._ZTV3FAT
                0x00000000c0027014       0x68 fs/fat/vfslink.32
                0x00000000c0027014                vtable for FAT
 .rodata.str1.1
                0x00000000c002707c       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c0027097        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c0027098       0x68 fs/iso9660/vfslink.32
                0x00000000c0027098                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0027100       0xc3 hal/sound/sndcard.32
                                         0xdb (size before relaxing)
 *fill*         0x00000000c00271c3        0x1 
 .rodata._ZTV9SoundCard
                0x00000000c00271c4       0x34 hal/sound/sndcard.32
                0x00000000c00271c4                vtable for SoundCard
 .rodata.str1.1
                0x00000000c00271f8       0x6e hal/sound/sndport.32
 *fill*         0x00000000c0027266        0x2 
 .rodata.str1.4
                0x00000000c0027268       0x93 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00272fb      0x1cd hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00274c8       0x2c hw/bus/pci.32
                0x00000000c00274c8                vtable for PCI
 .rodata.str1.1
                0x00000000c00274f4       0xa3 hw/diskctrl/ide.32
 *fill*         0x00000000c0027597        0x1 
 .rodata._ZTV3IDE
                0x00000000c0027598       0x2c hw/diskctrl/ide.32
                0x00000000c0027598                vtable for IDE
 .rodata.str1.4
                0x00000000c00275c4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata.str1.1
                0x00000000c00275e8       0x7b hw/diskctrl/satabus.32
 *fill*         0x00000000c0027663        0x1 
 .rodata._ZTV7SATABus
                0x00000000c0027664       0x2c hw/diskctrl/satabus.32
                0x00000000c0027664                vtable for SATABus
 .rodata.str1.1
                0x00000000c0027690       0x4b hw/diskphys/ata.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c00276db        0x1 
 .rodata._ZTV3ATA
                0x00000000c00276dc       0x38 hw/diskphys/ata.32
                0x00000000c00276dc                vtable for ATA
 .rodata.str1.1
                0x00000000c0027714       0x40 hw/diskphys/atapi.32
                                         0x6f (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c0027754       0x38 hw/diskphys/atapi.32
                0x00000000c0027754                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002778c      0x202 hw/diskphys/sata.32
 *fill*         0x00000000c002798e        0x2 
 .rodata._ZTV4SATA
                0x00000000c0027990       0x38 hw/diskphys/sata.32
                0x00000000c0027990                vtable for SATA
 .rodata.str1.1
                0x00000000c00279c8      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c0027afa        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0027afc       0x38 hw/diskphys/satapi.32
                0x00000000c0027afc                vtable for SATAPI
 .rodata.str1.1
                0x00000000c0027b34        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c0027b3c       0x38 hw/fpu/avx.32
                0x00000000c0027b3c                vtable for AVX
 .rodata.str1.1
                0x00000000c0027b74        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0027b7c       0x38 hw/fpu/mmx.32
                0x00000000c0027b7c                vtable for MMX
 .rodata.str1.1
                0x00000000c0027bb4        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0027bbc       0x38 hw/fpu/sse.32
                0x00000000c0027bbc                vtable for SSE
 .rodata        0x00000000c0027bf4        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0027bfc       0x38 hw/fpu/x87.32
                0x00000000c0027bfc                vtable for x87
 .rodata        0x00000000c0027c34       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0027d0c       0x48 hw/intctrl/apic.32
                0x00000000c0027d0c                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0027d54       0x2c hw/intctrl/apic.32
                0x00000000c0027d54                vtable for IOAPIC
 .rodata        0x00000000c0027d80       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c0027da2        0x2 
 .rodata._ZTV3PIC
                0x00000000c0027da4       0x48 hw/intctrl/pic.32
                0x00000000c0027da4                vtable for PIC
 .rodata.str1.1
                0x00000000c0027dec        0xb hw/timer/apictimer.32
 *fill*         0x00000000c0027df7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0027df8       0x30 hw/timer/apictimer.32
                0x00000000c0027df8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0027e28       0x1d hw/timer/pit.32
 *fill*         0x00000000c0027e45        0x3 
 .rodata._ZTV3PIT
                0x00000000c0027e48       0x30 hw/timer/pit.32
                0x00000000c0027e48                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0027e78      0x815
 *(.data)
 .data          0x00000000c0027e78        0x0 crti.32
 .data          0x00000000c0027e78        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0027e78                __dso_handle
 .data          0x00000000c0027e7c        0x0 acpica/utclib.32
 .data          0x00000000c0027e7c        0x0 core/malloc.32
 .data          0x00000000c0027e7c        0x0 libk/string.32
 .data          0x00000000c0027e7c        0x0 fs/fat/diskio.32
 .data          0x00000000c0027e7c        0x0 fs/fat/ff.32
 .data          0x00000000c0027e7c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0027e7c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0027e7c        0x0 compat/inlines.32
 .data          0x00000000c0027e7c        0x0 compat/resolve.32
 .data          0x00000000c0027e7c        0x0 core/computer.32
 .data          0x00000000c0027e7c        0x0 core/gdt.32
 .data          0x00000000c0027e7c        0x0 core/idle.32
 .data          0x00000000c0027e7c        0x0 core/idt.32
 .data          0x00000000c0027e7c        0x4 core/kheap.32
 .data          0x00000000c0027e80      0x142 core/main.32
                0x00000000c0027e80                titleScreen
 *fill*         0x00000000c0027fc2        0x2 
 .data          0x00000000c0027fc4        0x4 core/physmgr.32
                0x00000000c0027fc4                Phys::bitmap
 .data          0x00000000c0027fc8        0x0 core/pipe.32
 *fill*         0x00000000c0027fc8       0x18 
 .data          0x00000000c0027fe0       0x60 core/terminal.32
                0x00000000c0027fe0                VgaText::hiddenOut
                0x00000000c0028000                ansiToVGAMappings
 .data          0x00000000c0028040        0x0 core/tss.32
 .data          0x00000000c0028040        0x4 core/unixfile.32
                0x00000000c0028040                UnixFile::nextFd
 .data          0x00000000c0028044       0x15 core/virtmgr.32
                0x00000000c0028044                Virt::pageAllocPtr
                0x00000000c0028048                Virt::bitmap
                0x00000000c002804c                Virt::swapfileSectorsPerPage
                0x00000000c0028050                Virt::swapfileLength
                0x00000000c0028054                Virt::swapfileSector
                0x00000000c0028058                Virt::swapfileDrive
 *fill*         0x00000000c0028059        0x3 
 .data          0x00000000c002805c        0x4 coreobjs/c++.32
                0x00000000c002805c                __stack_chk_guard
 .data          0x00000000c0028060        0x0 dbg/kconsole.32
 .data          0x00000000c0028060        0x0 fs/vfs.32
 .data          0x00000000c0028060        0x0 hal/bus.32
 .data          0x00000000c0028060        0x0 hal/buzzer.32
 .data          0x00000000c0028060        0x0 hal/clock.32
 .data          0x00000000c0028060        0x0 hal/device.32
 .data          0x00000000c0028060        0x0 hal/diskctrl.32
 .data          0x00000000c0028060        0x0 hal/diskphys.32
 .data          0x00000000c0028060        0x0 hal/fpu.32
 .data          0x00000000c0028060      0x2a0 hal/intctrl.32
                0x00000000c0028060                Krnl::exceptionNames
 .data          0x00000000c0028300        0x0 hal/keybrd.32
 .data          0x00000000c0028300        0x0 hal/logidisk.32
 .data          0x00000000c0028300        0x0 hal/mouse.32
 .data          0x00000000c0028300        0x0 hal/partition.32
 .data          0x00000000c0028300        0x0 hal/serial.32
 .data          0x00000000c0028300        0x0 hal/timer.32
 .data          0x00000000c0028300        0x0 hal/vcache.32
 .data          0x00000000c0028300        0x0 hal/video.32
 .data          0x00000000c0028300       0x10 hw/acpi.32
                0x00000000c0028300                legacyIRQRemaps
 *fill*         0x00000000c0028310       0x10 
 .data          0x00000000c0028320      0x2a4 hw/cpu.32
                0x00000000c0028320                cpuNameList
                0x00000000c00285c0                lastCode
 .data          0x00000000c00285c4        0x0 hw/ports.32
 .data          0x00000000c00285c4        0x0 hw/smp.32
 *fill*         0x00000000c00285c4       0x1c 
 .data          0x00000000c00285e0       0x4d krnl/env.32
                0x00000000c00285e0                defaultSysEnv
 *fill*         0x00000000c002862d       0x13 
 .data          0x00000000c0028640       0x47 krnl/panic.32
                0x00000000c0028640                Krnl::biosBsod16
 .data          0x00000000c0028687        0x0 krnl/powctrl.32
 .data          0x00000000c0028687        0x0 krnl/rand.32
 .data          0x00000000c0028687        0x0 net/ethernet.32
 .data          0x00000000c0028687        0x0 reg/registry.32
 .data          0x00000000c0028687        0x0 sys/sc_eject.32
 .data          0x00000000c0028687        0x0 sys/sc_exit.32
 .data          0x00000000c0028687        0x0 sys/sc_getcwd.32
 .data          0x00000000c0028687        0x0 sys/sc_getpid.32
 .data          0x00000000c0028687        0x0 sys/sc_getramdata.32
 .data          0x00000000c0028687        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c0028687        0x0 sys/sc_loaddll.32
 .data          0x00000000c0028687        0x0 sys/sc_read.32
 .data          0x00000000c0028687        0x0 sys/sc_sbrk.32
 .data          0x00000000c0028687        0x0 sys/sc_setcwd.32
 .data          0x00000000c0028687        0x0 sys/sc_settime.32
 .data          0x00000000c0028687        0x0 sys/sc_timezone.32
 .data          0x00000000c0028687        0x0 sys/sc_write.32
 .data          0x00000000c0028687        0x0 sys/sc_wsbe.32
 .data          0x00000000c0028687        0x0 sys/sc_yield.32
 .data          0x00000000c0028687        0x0 sys/syscalls.32
 .data          0x00000000c0028687        0x0 thr/elf.32
 *fill*         0x00000000c0028687        0x1 
 .data          0x00000000c0028688        0x4 thr/prcssthr.32
                0x00000000c0028688                Thr::nextPID
 .data          0x00000000c002868c        0x0 vm86/vm8086.32
 .data          0x00000000c002868c        0x0 vm86/x87em.32
 .data          0x00000000c002868c        0x0 fs/fat/vfslink.32
 .data          0x00000000c002868c        0x1 fs/iso9660/vfslink.32
                0x00000000c002868c                recentDriveletter
 .data          0x00000000c002868d        0x0 hal/sound/sndcard.32
 .data          0x00000000c002868d        0x0 hal/sound/sndport.32
 .data          0x00000000c002868d        0x0 hw/bus/isa.32
 .data          0x00000000c002868d        0x0 hw/bus/pci.32
 .data          0x00000000c002868d        0x0 hw/diskctrl/ide.32
 .data          0x00000000c002868d        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c002868d        0x0 hw/diskphys/ata.32
 .data          0x00000000c002868d        0x0 hw/diskphys/atapi.32
 .data          0x00000000c002868d        0x0 hw/diskphys/sata.32
 .data          0x00000000c002868d        0x0 hw/diskphys/satapi.32
 .data          0x00000000c002868d        0x0 hw/fpu/avx.32
 .data          0x00000000c002868d        0x0 hw/fpu/mmx.32
 .data          0x00000000c002868d        0x0 hw/fpu/sse.32
 .data          0x00000000c002868d        0x0 hw/fpu/x87.32
 .data          0x00000000c002868d        0x0 hw/intctrl/apic.32
 .data          0x00000000c002868d        0x0 hw/intctrl/pic.32
 .data          0x00000000c002868d        0x0 hw/timer/apictimer.32
 .data          0x00000000c002868d        0x0 hw/timer/pit.32
 .data          0x00000000c002868d        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c002868d        0x0 crtn.32
 .data          0x00000000c002868d        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c002868d        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c002868d        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c002868d        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0028690        0x0
 .got           0x00000000c0028690        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0028690        0x0
 .got.plt       0x00000000c0028690        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0028690        0x0
 .igot.plt      0x00000000c0028690        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0028690        0x0
 .tm_clone_table
                0x00000000c0028690        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0028690        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c002868d      0x18b
 *(.eh_frame)
 *fill*         0x00000000c002868d        0x3 
 .eh_frame      0x00000000c0028690        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0028690        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0028690       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00286e8       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0028728       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0028794       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c0028818        0x0
 .rel.got       0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028818     0x23d0
                0x00000000c0028818                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0028818        0x0 crti.32
 .bss           0x00000000c0028818       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0028838        0x4 acpica/utclib.32
 *fill*         0x00000000c002883c        0x4 
 .bss           0x00000000c0028840      0x378 core/malloc.32
 .bss           0x00000000c0028bb8        0x0 libk/string.32
 .bss           0x00000000c0028bb8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028bb8        0x8 
 .bss           0x00000000c0028bc0       0x88 fs/fat/ff.32
 .bss           0x00000000c0028c48        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028c48        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0028c48        0x0 compat/inlines.32
 .bss           0x00000000c0028c48        0x0 compat/resolve.32
 .bss           0x00000000c0028c48        0x6 core/computer.32
                0x00000000c0028c48                Krnl::computer
                0x00000000c0028c4c                Krnl::preemptionOn
                0x00000000c0028c4d                Krnl::schedulingOn
 *fill*         0x00000000c0028c4e        0x2 
 .bss           0x00000000c0028c50        0x6 core/gdt.32
                0x00000000c0028c50                gdtDescr
 .bss           0x00000000c0028c56        0x0 core/idle.32
 *fill*         0x00000000c0028c56        0x2 
 .bss           0x00000000c0028c58        0x6 core/idt.32
                0x00000000c0028c58                idtDescr
 .bss           0x00000000c0028c5e        0x0 core/kheap.32
 *fill*         0x00000000c0028c5e        0x2 
 .bss           0x00000000c0028c60        0x4 core/main.32
                0x00000000c0028c60                sysBootSettings
 .bss           0x00000000c0028c64       0x29 core/physmgr.32
                0x00000000c0028c64                Phys::forbidEvictions
                0x00000000c0028c68                Phys::currentPagePointer
                0x00000000c0028c6c                Phys::highestMem
                0x00000000c0028c70                Phys::oldPercent
                0x00000000c0028c74                Phys::usedPages
                0x00000000c0028c78                Phys::usablePages
                0x00000000c0028c7c                Phys::dmaUsage
 .bss           0x00000000c0028c8d        0x0 core/pipe.32
 *fill*         0x00000000c0028c8d       0x13 
 .bss           0x00000000c0028ca0       0x29 core/terminal.32
                0x00000000c0028ca0                textModeImplementation
                0x00000000c0028cc0                terminalCycle
                0x00000000c0028cc4                activeTerminal
                0x00000000c0028cc8                VgaText::graphicMode
 *fill*         0x00000000c0028cc9        0x1 
 .bss           0x00000000c0028cca        0x2 core/tss.32
                0x00000000c0028cca                doubleFaultSelector
 *fill*         0x00000000c0028ccc       0x14 
 .bss           0x00000000c0028ce0       0x84 core/unixfile.32
                0x00000000c0028ce0                sfileLpt
                0x00000000c0028d20                sfileCom
                0x00000000c0028d44                sfileNul
                0x00000000c0028d48                sfilePnt
                0x00000000c0028d4c                sfileAux
                0x00000000c0028d50                sfileCon
                0x00000000c0028d54                initialFilesAdded
                0x00000000c0028d58                unixFileLinkedList
 .bss           0x00000000c0028d64       0x10 core/virtmgr.32
                0x00000000c0028d64                twswaps
                0x00000000c0028d68                swapBalance
                0x00000000c0028d6c                Virt::swapfileBitmap
                0x00000000c0028d70                firstVAS
 .bss           0x00000000c0028d74        0x0 coreobjs/c++.32
 .bss           0x00000000c0028d74        0x0 dbg/kconsole.32
 .bss           0x00000000c0028d74        0x4 fs/vfs.32
                0x00000000c0028d74                installedFilesystems
 .bss           0x00000000c0028d78        0x0 hal/bus.32
 .bss           0x00000000c0028d78        0x4 hal/buzzer.32
                0x00000000c0028d78                systemBuzzer
 .bss           0x00000000c0028d7c        0x8 hal/clock.32
                0x00000000c0028d7c                User::dstOn
                0x00000000c0028d7d                User::timezoneHalfHourOffset
                0x00000000c0028d80                User::timezoneHourOffset
 .bss           0x00000000c0028d84        0x0 hal/device.32
 .bss           0x00000000c0028d84        0x0 hal/diskctrl.32
 .bss           0x00000000c0028d84        0x0 hal/diskphys.32
 .bss           0x00000000c0028d84        0x0 hal/fpu.32
 .bss           0x00000000c0028d84        0x8 hal/intctrl.32
                0x00000000c0028d84                gpFaultIntercept
                0x00000000c0028d88                Krnl::fpuOwner
 *fill*         0x00000000c0028d8c       0x14 
 .bss           0x00000000c0028da0      0x429 hal/keybrd.32
                0x00000000c0028da0                keyboardWaitingTaskList
                0x00000000c0028da4                keyboardSetupYet
                0x00000000c0028da8                guiKeyboardHandler
                0x00000000c0028dc0                keystates
 *fill*         0x00000000c00291c9       0x17 
 .bss           0x00000000c00291e0       0x88 hal/logidisk.32
                0x00000000c00291e0                diskAssignments
                0x00000000c0029200                disks
 .bss           0x00000000c0029268        0x4 hal/mouse.32
                0x00000000c0029268                guiMouseHandler
 .bss           0x00000000c002926c        0x0 hal/partition.32
 .bss           0x00000000c002926c        0x0 hal/serial.32
 .bss           0x00000000c002926c        0x4 hal/timer.32
                0x00000000c002926c                milliTenthsSinceBoot
 .bss           0x00000000c0029270        0x0 hal/vcache.32
 .bss           0x00000000c0029270        0x4 hal/video.32
                0x00000000c0029270                screen
 *fill*         0x00000000c0029274        0xc 
 .bss           0x00000000c0029280      0x480 hw/acpi.32
                0x00000000c0029280                systemSleepFunction
                0x00000000c0029284                systemResetFunction
                0x00000000c0029288                systemShutdownFunction
                0x00000000c002928c                nextACPITable
                0x00000000c00292a0                acpiTables
                0x00000000c00294a0                usingXSDT
                0x00000000c00294a4                MADTpointer
                0x00000000c00294a8                RSDTpointer
                0x00000000c00294ac                RSDPpointer
                0x00000000c00294b0                nextAPICNMI
                0x00000000c00294c0                apicNMIInfo
                0x00000000c0029540                legacyIRQFlags
                0x00000000c0029560                ioapicDiscoveryNumber
                0x00000000c0029580                ioapicFoundInMADT
                0x00000000c00295a0                ioapicAddresses
                0x00000000c0029620                ioapicGSIBase
                0x00000000c00296a0                processorDiscoveryNumber
                0x00000000c00296c0                matchingAPICID
                0x00000000c00296e0                processorID
 .bss           0x00000000c0029700       0x10 hw/cpu.32
                0x00000000c0029700                lastD
                0x00000000c0029704                lastC
                0x00000000c0029708                lastB
                0x00000000c002970c                lastA
 .bss           0x00000000c0029710        0x0 hw/ports.32
 .bss           0x00000000c0029710        0x1 hw/smp.32
                0x00000000c0029710                Krnl::bspID
 *fill*         0x00000000c0029711        0x3 
 .bss           0x00000000c0029714        0x8 krnl/env.32
                0x00000000c0029714                Krnl::userEnv
                0x00000000c0029718                Krnl::systemEnv
 .bss           0x00000000c002971c        0x9 krnl/panic.32
                0x00000000c002971c                Krnl::guiProgramFaultHandler
                0x00000000c0029720                Krnl::guiPanicHandler
                0x00000000c0029724                Krnl::kernelInPanic
 *fill*         0x00000000c0029725       0x1b 
 .bss           0x00000000c0029740       0x48 krnl/powctrl.32
                0x00000000c0029740                Krnl::powCtrlOnBattery
                0x00000000c0029760                Krnl::currentPowerSettings
                0x00000000c0029784                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0029788        0x9 krnl/rand.32
                0x00000000c0029788                Krnl::lcg
                0x00000000c0029790                Krnl::initedRand
 .bss           0x00000000c0029791        0x0 net/ethernet.32
 .bss           0x00000000c0029791        0x0 reg/registry.32
 .bss           0x00000000c0029791        0x0 sys/sc_eject.32
 .bss           0x00000000c0029791        0x0 sys/sc_exit.32
 .bss           0x00000000c0029791        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0029791        0x0 sys/sc_getpid.32
 .bss           0x00000000c0029791        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0029791        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0029791        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0029791        0x0 sys/sc_read.32
 .bss           0x00000000c0029791        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0029791        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0029791        0x0 sys/sc_settime.32
 .bss           0x00000000c0029791        0x0 sys/sc_timezone.32
 .bss           0x00000000c0029791        0x0 sys/sc_write.32
 .bss           0x00000000c0029791        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0029791        0x0 sys/sc_yield.32
 *fill*         0x00000000c0029791        0xf 
 .bss           0x00000000c00297a0      0x200 sys/syscalls.32
                0x00000000c00297a0                systemCallHandlers
 .bss           0x00000000c00299a0      0x7a4 thr/elf.32
                0x00000000c00299a0                Thr::driverLookupNext
                0x00000000c00299c0                Thr::driverLookupLen
                0x00000000c0029bc0                Thr::driverLookupAddr
                0x00000000c0029dc0                Thr::driverNameLookup
                0x00000000c0029fc0                Thr::kernelSymbols
                0x00000000c002a040                Thr::kernelStringTable
                0x00000000c002a0c0                Thr::kernelSymbolTable
                0x00000000c002a140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002a144        0x4 
 .bss           0x00000000c002a148       0x68 thr/prcssthr.32
                0x00000000c002a148                cleanerThread
                0x00000000c002a14c                weNeedTheCleanerToNotBlock
                0x00000000c002a150                retValLockStuff
                0x00000000c002a154                retValSchedLock
                0x00000000c002a158                lockStuffLock
                0x00000000c002a15c                schedulerLock
                0x00000000c002a160                taskSwitchesPostponedFlag
                0x00000000c002a164                postponeTaskSwitchesCounter
                0x00000000c002a168                irqDisableCounter
                0x00000000c002a16c                terminatedTaskList
                0x00000000c002a178                sleepingTaskList
                0x00000000c002a184                taskList
                0x00000000c002a190                kernelProcess
 *fill*         0x00000000c002a1b0       0x10 
 .bss           0x00000000c002a1c0       0x40 vm86/vm8086.32
                0x00000000c002a1c0                Vm::vmRetV
                0x00000000c002a1c4                Vm::vmDone
                0x00000000c002a1c5                Vm::vmReady
                0x00000000c002a1c8                Vm::vm86Thread
                0x00000000c002a1cc                Vm::vmToHostCommsPtr
                0x00000000c002a1e0                Vm::vmToHostComms
 .bss           0x00000000c002a200       0x48 vm86/x87em.32
                0x00000000c002a200                Vm::fpuState
 *fill*         0x00000000c002a248       0x18 
 .bss           0x00000000c002a260       0xf0 fs/fat/vfslink.32
                0x00000000c002a260                FAT::fats
                0x00000000c002a280                FAT::vfsToFatRemaps
                0x00000000c002a300                fatToVFSRemaps
 *fill*         0x00000000c002a350       0x10 
 .bss           0x00000000c002a360      0x820 fs/iso9660/vfslink.32
                0x00000000c002a360                recentSector
                0x00000000c002a380                recentBuffer
 .bss           0x00000000c002ab80        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002ab80        0x0 hal/sound/sndport.32
 .bss           0x00000000c002ab80        0x0 hw/bus/isa.32
 .bss           0x00000000c002ab80        0xd hw/bus/pci.32
                0x00000000c002ab80                thePCI
 .bss           0x00000000c002ab8d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002ab8d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002ab8d        0x3 
 .bss           0x00000000c002ab90        0x8 hw/diskphys/ata.32
                0x00000000c002ab90                ataSectorsWritten
                0x00000000c002ab94                ataSectorsRead
 .bss           0x00000000c002ab98        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002ab98        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002ab98        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c002ab98        0x0 hw/fpu/avx.32
 .bss           0x00000000c002ab98        0x0 hw/fpu/mmx.32
 .bss           0x00000000c002ab98        0x0 hw/fpu/sse.32
 .bss           0x00000000c002ab98        0x0 hw/fpu/x87.32
 *fill*         0x00000000c002ab98        0x8 
 .bss           0x00000000c002aba0       0x41 hw/intctrl/apic.32
                0x00000000c002aba0                noOfIOAPICs
                0x00000000c002abc0                ioapics
                0x00000000c002abe0                IOAPICsSetupYet
 .bss           0x00000000c002abe1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c002abe1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002abe1        0x3 
 .bss           0x00000000c002abe4        0x4 hw/timer/pit.32
                0x00000000c002abe4                pitFreq
 .bss           0x00000000c002abe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002abe8        0x0 crtn.32
 .bss           0x00000000c002abe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002abe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002abe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002abe8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002abe8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002cfb8                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
