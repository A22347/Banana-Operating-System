Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootflags.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/apic.32
 .group         0x0000000000000000        0xc arch/i386/apic.32
 .comment       0x0000000000000000       0x12 arch/i386/apic.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootflags.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/apic.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21e2e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x2ad dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f13                Dbg::logs(char*)
                0x00000000c0006f3d                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f5b                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f7c                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070f3        0x1 
 .text          0x00000000c00070f4      0x2d4 dbg/usban.32
                0x00000000c00070f4                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007160                __ubsan_handle_type_mismatch_v1
                0x00000000c000723c                __ubsan_handle_pointer_overflow
                0x00000000c0007268                __ubsan_handle_out_of_bounds
                0x00000000c0007294                __ubsan_handle_add_overflow
                0x00000000c00072c0                __ubsan_handle_load_invalid_value
                0x00000000c00072ec                __ubsan_handle_divrem_overflow
                0x00000000c0007318                __ubsan_handle_mul_overflow
                0x00000000c0007344                __ubsan_handle_sub_overflow
                0x00000000c0007370                __ubsan_handle_shift_out_of_bounds
                0x00000000c000739c                __ubsan_handle_negate_overflow
 .text          0x00000000c00073c8      0x814 fs/symlink.32
                0x00000000c0007517                KiDeinitialiseSymlinks(void*)
                0x00000000c00075aa                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000762d                KeInitialiseSymlinks()
                0x00000000c000778f                KiIsSymlinkRegistered(char const*)
                0x00000000c00078f9                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007aa0                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bdc      0xd88 fs/vfs.32
                0x00000000c0007bdc                File::read(unsigned long long, void*, int*)
                0x00000000c0007c34                File::write(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007ce4                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007d12                File::isAtty()
                0x00000000c0007d16                Directory::isAtty()
                0x00000000c0007d1a                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007d20                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d26                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d2c                File::~File()
                0x00000000c0007d2c                File::~File()
                0x00000000c0007d50                File::~File()
                0x00000000c0007d7a                Directory::~Directory()
                0x00000000c0007d7a                Directory::~Directory()
                0x00000000c0007d9e                Directory::~Directory()
                0x00000000c0007dc8                Filesystem::Filesystem()
                0x00000000c0007dc8                Filesystem::Filesystem()
                0x00000000c0007dec                Filesystem::~Filesystem()
                0x00000000c0007dec                Filesystem::~Filesystem()
                0x00000000c0007dfa                Filesystem::~Filesystem()
                0x00000000c0007e1e                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e48                Fs::initVFS()
                0x00000000c0007e72                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000808c                File::File(char const*, Process*, bool)
                0x00000000c000808c                File::File(char const*, Process*, bool)
                0x00000000c000818a                File::File(char const*, Process*)
                0x00000000c000818a                File::File(char const*, Process*)
                0x00000000c00081a8                File::open(FileOpenMode)
                0x00000000c0008206                File::close()
                0x00000000c0008266                File::seek(unsigned long long)
                0x00000000c00082bc                File::truncate(unsigned long long)
                0x00000000c0008312                File::tell(unsigned long long*)
                0x00000000c0008362                File::rewind()
                0x00000000c0008376                File::unlink()
                0x00000000c00083c2                File::rename(char const*)
                0x00000000c0008410                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000846c                File::exists()
                0x00000000c00084aa                File::stat(unsigned long long*, bool*)
                0x00000000c000850b                Fs::setcwd(Process*, char*)
                0x00000000c000866a                Directory::Directory(char const*, Process*)
                0x00000000c000866a                Directory::Directory(char const*, Process*)
                0x00000000c0008732                Directory::open()
                0x00000000c000878e                Directory::close()
                0x00000000c00087ee                Directory::unlink()
                0x00000000c000883a                Directory::rename(char const*)
                0x00000000c0008888                Directory::exists()
                0x00000000c00088c6                Directory::read(dirent*)
                0x00000000c0008912                Directory::create()
                0x00000000c000895e                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0008964       0x86 hal/bus.32
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c000899c                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
                0x00000000c00089c0                Bus::~Bus()
 .text          0x00000000c00089ea       0x9b hal/buzzer.32
                0x00000000c00089ea                KeBeepThread(void*)
                0x00000000c0008a2b                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a85        0x1 
 .text          0x00000000c0008a86      0xeac hal/clock.32
                0x00000000c0008a86                KeLoadTimezoneStrings()
                0x00000000c0008e15                KeGetTimezoneStringFromID(int)
                0x00000000c0008eb2                KeUpdateTimezone(char const*)
                0x00000000c0008fac                KeSetTimezone(char const*)
                0x00000000c0009009                KeSetTimezone(int)
                0x00000000c000903c                KeLoadTimezone()
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009110                Clock::~Clock()
                0x00000000c000913a                Clock::timeInSecondsLocal()
                0x00000000c00091b0                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000923c                KeDatetimeToSeconds(datetime_t)
                0x00000000c000957c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000964a                KeSecondsToDatetime(unsigned long long)
                0x00000000c0009906                Clock::timeInDatetimeLocal()
 .text          0x00000000c0009932      0x47a hal/device.32
                0x00000000c0009932                Device::hibernate()
                0x00000000c0009934                Device::wake()
                0x00000000c0009936                Device::detect()
                0x00000000c0009938                Device::disableLegacy()
                0x00000000c000993a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000993c                DriverlessDevice::close(int, int, void*)
                0x00000000c0009940                DriverlessDevice::detect()
                0x00000000c0009942                DriverlessDevice::open(int, int, void*)
                0x00000000c0009956                Device::~Device()
                0x00000000c0009956                Device::~Device()
                0x00000000c0009964                Device::~Device()
                0x00000000c000998c                Device::findAndLoadDriver()
                0x00000000c000999a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00099c0                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0009a00                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009a2a                Device::getParent()
                0x00000000c0009a36                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009a54                Device::addChild(Device*)
                0x00000000c0009a98                Device::removeAllChildren()
                0x00000000c0009ade                Device::hibernateAll()
                0x00000000c0009b0e                Device::wakeAll()
                0x00000000c0009b3e                Device::detectAll()
                0x00000000c0009b6e                Device::disableLegacyAll()
                0x00000000c0009b70                Device::loadDriversForAll()
                0x00000000c0009b72                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009ba8                Device::setName(char const*)
                0x00000000c0009bb6                Device::Device(char const*)
                0x00000000c0009bb6                Device::Device(char const*)
                0x00000000c0009cb2                Device::getName()
                0x00000000c0009cbc                Device::closeAll()
                0x00000000c0009d08                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009d08                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009d3e                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d82                getDevicesOfType(DeviceType)
 .text          0x00000000c0009dac       0x86 hal/diskctrl.32
                0x00000000c0009dac                HardDiskController::HardDiskController(char const*)
                0x00000000c0009dac                HardDiskController::HardDiskController(char const*)
                0x00000000c0009de4                HardDiskController::~HardDiskController()
                0x00000000c0009de4                HardDiskController::~HardDiskController()
                0x00000000c0009e08                HardDiskController::~HardDiskController()
 .text          0x00000000c0009e32       0xe2 hal/diskphys.32
                0x00000000c0009e32                PhysicalDisk::eject()
                0x00000000c0009e36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e9e                PhysicalDisk::startCache()
                0x00000000c0009ec6                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009ec6                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009eea                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009f14        0x0 hal/fpu.32
 .text          0x00000000c0009f14      0x874 hal/keybrd.32
                0x00000000c0009f14                startGUI(void*)
                0x00000000c0009f79                startGUIVESA(void*)
                0x00000000c0009fde                sendKeyToTerminal(unsigned char)
                0x00000000c000a0b4                sendKeyboardToken(KeyboardToken)
                0x00000000c000a570                clearInternalKeybuffer(VgaText*)
                0x00000000c000a5a5                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6fe                Keyboard::Keyboard(char const*)
                0x00000000c000a6fe                Keyboard::Keyboard(char const*)
                0x00000000c000a73a                Keyboard::~Keyboard()
                0x00000000c000a73a                Keyboard::~Keyboard()
                0x00000000c000a75e                Keyboard::~Keyboard()
 .text          0x00000000c000a788      0x3f8 hal/logidisk.32
                0x00000000c000a788                LogicalDisk::close(int, int, void*)
                0x00000000c000a78c                LogicalDisk::~LogicalDisk()
                0x00000000c000a78c                LogicalDisk::~LogicalDisk()
                0x00000000c000a7b0                LogicalDisk::~LogicalDisk()
                0x00000000c000a7da                LogicalDisk::open(int, int, void*)
                0x00000000c000a7ee                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a826                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a86c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a86c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a92c                LogicalDisk::assignDriveLetter()
                0x00000000c000a9e6                LogicalDisk::mount()
                0x00000000c000aa2e                LogicalDisk::unmount()
                0x00000000c000aa3e                LogicalDisk::eject()
                0x00000000c000aa52                LogicalDisk::unassignDriveLetter()
                0x00000000c000aaa8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ab14                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab80       0x86 hal/mouse.32
                0x00000000c000ab80                Mouse::Mouse(char const*)
                0x00000000c000ab80                Mouse::Mouse(char const*)
                0x00000000c000abb8                Mouse::~Mouse()
                0x00000000c000abb8                Mouse::~Mouse()
                0x00000000c000abdc                Mouse::~Mouse()
 .text          0x00000000c000ac06       0x90 hal/nic.32
                0x00000000c000ac06                NIC::getMAC()
                0x00000000c000ac0c                NIC::write(int, unsigned char*, int*)
                0x00000000c000ac12                NIC::NIC(char const*)
                0x00000000c000ac12                NIC::NIC(char const*)
                0x00000000c000ac48                NIC::~NIC()
                0x00000000c000ac48                NIC::~NIC()
                0x00000000c000ac6c                NIC::~NIC()
 .text          0x00000000c000ac96      0x33b hal/partition.32
                0x00000000c000ac96                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ad3e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000afd1        0x3 
 .text          0x00000000c000afd4       0x86 hal/serial.32
                0x00000000c000afd4                Serial::Serial(char const*)
                0x00000000c000afd4                Serial::Serial(char const*)
                0x00000000c000b00c                Serial::~Serial()
                0x00000000c000b00c                Serial::~Serial()
                0x00000000c000b030                Serial::~Serial()
 *fill*         0x00000000c000b05a        0x2 
 .text          0x00000000c000b05c      0x230 hal/timer.32
                0x00000000c000b05c                Timer::Timer(char const*)
                0x00000000c000b05c                Timer::Timer(char const*)
                0x00000000c000b094                Timer::~Timer()
                0x00000000c000b094                Timer::~Timer()
                0x00000000c000b0b8                Timer::~Timer()
                0x00000000c000b0e2                Timer::read()
                0x00000000c000b0ed                setupTimer(int)
                0x00000000c000b128                timerHandler(unsigned int)
 .text          0x00000000c000b28c      0x5fe hal/vcache.32
                0x00000000c000b28c                VCache::VCache(PhysicalDisk*)
                0x00000000c000b28c                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3fc                VCache::invalidateReadBuffer()
                0x00000000c000b40c                VCache::writeWriteBuffer()
                0x00000000c000b458                VCache::~VCache()
                0x00000000c000b458                VCache::~VCache()
                0x00000000c000b4b0                VCache::~VCache()
                0x00000000c000b4d8                VCache::write(unsigned long long, int, void*)
                0x00000000c000b6a6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b88a      0x70e hal/video.32
                0x00000000c000b88a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b8d6                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b946                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b9c4                Video::clearScreen(unsigned int)
                0x00000000c000b9f8                Video::putpixel(int, int, unsigned int)
                0x00000000c000ba06                Video::readPixelApprox(int, int)
                0x00000000c000ba1a                Video::Video(char const*)
                0x00000000c000ba1a                Video::Video(char const*)
                0x00000000c000ba50                Video::~Video()
                0x00000000c000ba50                Video::~Video()
                0x00000000c000ba74                Video::~Video()
                0x00000000c000ba9e                Video::isMonochrome()
                0x00000000c000baaa                Video::getWidth()
                0x00000000c000bab6                Video::getHeight()
                0x00000000c000bac2                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb7e                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000bf28                Video::putTGA(int, int, unsigned char*, int)
 .text          0x00000000c000bf98     0x11a3 hw/acpi.32
                0x00000000c000bf98                ACPI::close(int, int, void*)
                0x00000000c000bfa0                loadACPITables(unsigned char*)
                0x00000000c000c200                findRSDT(unsigned char*)
                0x00000000c000c34c                findDataTable(unsigned char*, char*)
                0x00000000c000c3c0                scanMADT()
                0x00000000c000c870                ACPI::ACPI()
                0x00000000c000c870                ACPI::ACPI()
                0x00000000c000c8c0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c9bc                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca88                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca90                ACPI::detectPCI()
                0x00000000c000cc9c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ccb4                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d13b        0x1 
 .text          0x00000000c000d13c       0xea krnl/assert.32
                0x00000000c000d13c                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d226       0xb6 krnl/atexit.32
                0x00000000c000d226                KeInitialiseAtexit()
                0x00000000c000d245                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d279                KeExecuteAtexit()
 .text          0x00000000c000d2dc       0x1e krnl/bootflags.32
                0x00000000c000d2dc                KeGetBootConfigurationFlag(BootConfigurationFlag)
                0x00000000c000d2ec                KeInitialiseBootConfigurationFlags()
 .text          0x00000000c000d2fa       0x9f krnl/bootmsg.32
                0x00000000c000d2fa                KeDisplaySplashScreen()
                0x00000000c000d329                KeSetBootMessage(char const*)
 .text          0x00000000c000d399       0x5f krnl/c++.32
                0x00000000c000d399                __cxa_atexit
                0x00000000c000d39c                __cxa_finalize
                0x00000000c000d39d                __stack_chk_fail
                0x00000000c000d3d3                __cxa_pure_virtual
                0x00000000c000d3e4                operator new[](unsigned long)
                0x00000000c000d3e9                operator delete(void*, unsigned long)
                0x00000000c000d3ee                operator delete[](void*)
                0x00000000c000d3f3                operator delete[](void*, unsigned long)
 .text          0x00000000c000d3f8       0x44 krnl/cdefs.32
                0x00000000c000d3f8                CUnlockScheduler
                0x00000000c000d410                CLockScheduler
                0x00000000c000d420                CPrintf
 .text          0x00000000c000d43c      0xd56 krnl/cm.32
                0x00000000c000d43c                CmOpen(char const*)
                0x00000000c000d55a                CmClose(Reghive_Tag*)
                0x00000000c000d570                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d5ac                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d623                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d662                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d694                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d6d0                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d6f8                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d719                CmExpand(Reghive_Tag*, int)
                0x00000000c000d794                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d81a                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d90e                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000da4a                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000daab                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000dadb                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000db12                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000db3c                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000db7c                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000dc20                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000dc4e                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000ddec                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000de39                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000deb3                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000df06                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000dfca                zStrtok(char*, char const*)
                0x00000000c000e03c                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000e0bd                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000e160                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000e192        0x2 
 .text          0x00000000c000e194       0x1d krnl/compat.32
                0x00000000c000e194                Krnl::handlePowerButton()
                0x00000000c000e1a4                Krnl::handleSleepButton()
 *fill*         0x00000000c000e1b1        0x1 
 .text          0x00000000c000e1b2       0xe3 krnl/computer.32
                0x00000000c000e1b2                Computer::close(int, int, void*)
                0x00000000c000e1b8                Computer::Computer()
                0x00000000c000e1b8                Computer::Computer()
                0x00000000c000e1fc                Computer::open(int, int, void*)
 .text          0x00000000c000e295       0x2b krnl/crc32.32
                0x00000000c000e295                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e2c0      0x5bf krnl/env.32
                0x00000000c000e2c0                EnvVarContainer::getEnv(char const*)
                0x00000000c000e2fe                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e3c0                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e3c2                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e5e6                EnvVarContainer::__loadSystem()
                0x00000000c000e600                EnvVarContainer::__loadUser()
                0x00000000c000e602                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e602                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e624                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e624                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e654                KeGetEnv(Process*, char const*)
                0x00000000c000e6b9                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e6d3                KeSetEnvUser(char const*, char const*)
                0x00000000c000e6f2                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e705                KeDeleteEnvSystem(char const*)
                0x00000000c000e706                KeDeleteEnvUser(char const*)
                0x00000000c000e707                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e708                KeNewProcessEnv(Process*)
                0x00000000c000e72a                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e776                KeLoadSystemEnv()
                0x00000000c000e7a4                KeLoadUserEnv()
                0x00000000c000e7ca                KeFlushEnv()
                0x00000000c000e7cb                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e7eb                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e87f        0x1 
 .text          0x00000000c000e880      0x371 krnl/fault.32
                0x00000000c000e880                KeSetupInterrupts()
                0x00000000c000e8f8                int_handler
                0x00000000c000ea28                KeDisplayProgramFault(char const*)
                0x00000000c000ea78                KeGeneralProtectionFault(void*, void*)
                0x00000000c000eadc                KePageFault(void*, void*)
                0x00000000c000eb40                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000eb50                KeOtherFault(void*, void*)
                0x00000000c000eb84                KeOpcodeFault(void*, void*)
                0x00000000c000ebd8                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000ebf1        0x1 
 .text          0x00000000c000ebf2      0x1db krnl/gdt.32
                0x00000000c000ebf2                GDTEntry::setBase(unsigned int)
                0x00000000c000ec0e                GDTEntry::setLimit(unsigned int)
                0x00000000c000ec2c                GDT::GDT()
                0x00000000c000ec2c                GDT::GDT()
                0x00000000c000ec42                GDT::addEntry(GDTEntry)
                0x00000000c000ec64                GDT::getNumberOfEntries()
                0x00000000c000ec6c                GDT::flush()
                0x00000000c000ec8e                GDT::setup()
 .text          0x00000000c000edcd       0x20 krnl/idle.32
                0x00000000c000edcd                idleFunction(void*)
 *fill*         0x00000000c000eded        0x3 
 .text          0x00000000c000edf0      0x46c krnl/idt.32
                0x00000000c000edf0                IDTEntry::IDTEntry(bool)
                0x00000000c000edf0                IDTEntry::IDTEntry(bool)
                0x00000000c000ee6a                IDTEntry::setOffset(unsigned int)
                0x00000000c000ee80                IDT::IDT()
                0x00000000c000ee80                IDT::IDT()
                0x00000000c000ee82                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ee8a                IDT::addEntry(IDTEntry, int)
                0x00000000c000eea4                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000eedc                IDT::flush()
                0x00000000c000eef6                IDT::setup()
 .text          0x00000000c000f25c       0x9a krnl/inlines.32
                0x00000000c000f25c                CPU::current()
                0x00000000c000f268                operator new(unsigned long)
                0x00000000c000f26d                operator delete(void*)
                0x00000000c000f272                disableIRQs()
                0x00000000c000f274                enableIRQs()
                0x00000000c000f276                lockScheduler()
                0x00000000c000f27e                unlockScheduler()
                0x00000000c000f290                lockStuff()
                0x00000000c000f29e                unlockStuff()
                0x00000000c000f2db                Virt::getAKernelVAS()
                0x00000000c000f2e1                __not_memcpy
 .text          0x00000000c000f2f6      0x2bc krnl/intlformat.32
                0x00000000c000f2f6                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f4e6                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f508                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f52a                KeSetLocale(klocale_t)
                0x00000000c000f540                KeInitialiseLocale()
                0x00000000c000f5ae                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f5af                KeFormatCurrency(char*, int, double)
                0x00000000c000f5b0                KeFormatNumber(char*, long long, long long)
                0x00000000c000f5b1                KeFormatNumber(char*, double)
 *fill*         0x00000000c000f5b2        0x2 
 .text          0x00000000c000f5b4      0x42e krnl/intops.32
                0x00000000c000f5b4                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f73c                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f8e8                KeGetDigitsInNumber(long long)
                0x00000000c000f954                KeItoa(unsigned long long, char*)
                0x00000000c000f984                KeItoa(long long, char*)
                0x00000000c000f9b4                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f9e2      0x207 krnl/kheap.32
                0x00000000c000f9e2                sbrk
                0x00000000c000fa79                sbrk_thunk
                0x00000000c000faaf                mmap
                0x00000000c000fb0d                munmap
                0x00000000c000fb22                liballoc_lock()
                0x00000000c000fb30                liballoc_unlock()
                0x00000000c000fb48                liballoc_alloc(int)
                0x00000000c000fb60                liballoc_free(void*, int)
                0x00000000c000fb7b                realloc
                0x00000000c000fb8f                malloc
                0x00000000c000fb9f                free
                0x00000000c000fbaf                rfree
                0x00000000c000fbbf                calloc
 *fill*         0x00000000c000fbe9        0x3 
 .text          0x00000000c000fbec      0x1d3 krnl/mailbox.32
                0x00000000c000fbec                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fc4c                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fcac                KeMailboxCreate()
                0x00000000c000fce0                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fd44                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fda8                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fdbf      0x20b krnl/main.32
                0x00000000c000fdbf                KeFirstTask()
                0x00000000c000feca                KeEntryPoint
 *fill*         0x00000000c000ffca        0x2 
 .text          0x00000000c000ffcc       0x1a krnl/mutex.32
                0x00000000c000ffcc                Mutex::Mutex()
                0x00000000c000ffcc                Mutex::Mutex()
 .text          0x00000000c000ffe6        0xc krnl/panic.32
                0x00000000c000ffe6                KePanic(char const*)
 .text          0x00000000c000fff2      0x667 krnl/physmgr.32
                0x00000000c000fff2                Phys::allocateDMA(unsigned long)
                0x00000000c00100da                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0010115                Phys::setPageState(unsigned long, bool)
                0x00000000c0010155                Phys::getPageState(unsigned long)
                0x00000000c0010171                Phys::freePage(unsigned long)
                0x00000000c00101da                Phys::allocatePage()
                0x00000000c00102b8                Phys::allocateContiguousPages(int)
                0x00000000c0010333                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c001036b                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0010659        0x1 
 .text          0x00000000c001065a      0x275 krnl/pipe.32
                0x00000000c001065a                Pipe::isAtty()
                0x00000000c001065e                Pipe::~Pipe()
                0x00000000c001065e                Pipe::~Pipe()
                0x00000000c0010682                Pipe::~Pipe()
                0x00000000c00106aa                Pipe::write(unsigned long long, void*, int*)
                0x00000000c001076a                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0010868                Pipe::Pipe(int)
                0x00000000c0010868                Pipe::Pipe(int)
 .text          0x00000000c00108cf      0x1a3 krnl/powctrl.32
                0x00000000c00108cf                KePowerThread(void*)
                0x00000000c0010901                KeChangePowerSettings(PowerSettings)
                0x00000000c0010917                KeUserIOReceived()
                0x00000000c0010922                KeSetupPowerManager()
                0x00000000c00109ab                KePrepareShutdown()
                0x00000000c00109ca                KeRegisterShutdownHandler(void (*)())
                0x00000000c00109d4                KeRegisterRestartHandler(void (*)())
                0x00000000c00109de                KeRegisterSleepHandler(void (*)())
                0x00000000c00109e8                KeShutdown()
                0x00000000c0010a1e                KeSleep()
                0x00000000c0010a2a                KeHandlePowerButton()
                0x00000000c0010a3c                KeHandleSleepButton()
                0x00000000c0010a4e                KeRestart()
 .text          0x00000000c0010a72       0x9d krnl/random.32
                0x00000000c0010a72                KeRand()
                0x00000000c0010ab4                KeSeedRand(unsigned int)
                0x00000000c0010add                KeInitRand()
 *fill*         0x00000000c0010b0f        0x1 
 .text          0x00000000c0010b10      0x26c krnl/resolve.32
                0x00000000c0010b10                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010d7c      0x415 krnl/semaphore.32
                0x00000000c0010d7c                Semaphore::Semaphore(int)
                0x00000000c0010d7c                Semaphore::Semaphore(int)
                0x00000000c0010dac                Semaphore::tryAcquire()
                0x00000000c0010e80                Semaphore::assertLocked(char const*)
                0x00000000c0010f0c                Semaphore::acquire(int)
                0x00000000c00110c4                Semaphore::acquire()
                0x00000000c00110e0                Semaphore::release()
 .text          0x00000000c0011191      0x3a8 krnl/signal.32
                0x00000000c0011191                KiSigKill(int)
                0x00000000c00111a5                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00111a6                KiDefaultSignalHandlerPause(int)
                0x00000000c00111d2                KiDefaultSignalHandlerResume(int)
                0x00000000c00111fe                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011203                KeInitSignals()
                0x00000000c0011275                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00112ab                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001132c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001145b                KiCheckSignalZ
                0x00000000c00114ac                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00114e7                KiFinishSignalZ
 .text          0x00000000c0011539      0xe91 krnl/syscalls.32
                0x00000000c0011539                SysSeekDir(regs*)
                0x00000000c001153e                SysTellDir(regs*)
                0x00000000c0011543                SysVerify(regs*)
                0x00000000c001154d                SysGetArgc(regs*)
                0x00000000c0011561                SysTTYName(regs*)
                0x00000000c0011569                SysFormatDisk(regs*)
                0x00000000c00115e0                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011634                SysGetDiskVolumeLabel(regs*)
                0x00000000c001168d                SysRealpath(regs*)
                0x00000000c00116d1                SysReadDir(regs*)
                0x00000000c0011751                SysIsATTY(regs*)
                0x00000000c00117ab                SysSeek(regs*)
                0x00000000c0011809                SysTell(regs*)
                0x00000000c001187e                SysSize(regs*)
                0x00000000c00118f8                SysSizeFromFilename(regs*)
                0x00000000c0011a22                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011b4c                SysClose(regs*)
                0x00000000c0011bac                SysOpenDir(regs*)
                0x00000000c0011c29                SysMakeDir(regs*)
                0x00000000c0011c97                SysCloseDir(regs*)
                0x00000000c0011ceb                SysWait(regs*)
                0x00000000c0011d0c                SysNotImpl(regs*)
                0x00000000c0011d27                SysPanic(regs*)
                0x00000000c0011d42                SysRmdir(regs*)
                0x00000000c0011da7                SysUnlink(regs*)
                0x00000000c0011e0c                SysGetArgv(regs*)
                0x00000000c0011e59                SysUSleep(regs*)
                0x00000000c0011e83                SysSpawn(regs*)
                0x00000000c0011ef6                SysGetEnv(regs*)
                0x00000000c0011fa7                SysSetFatAttrib(regs*)
                0x00000000c001201a                SysShutdown(regs*)
                0x00000000c0012077                SysPipe(regs*)
                0x00000000c00120bc                SysGetUnixTime(regs*)
                0x00000000c0012149                string_ends_with(char const*, char const*)
                0x00000000c0012191                SysOpen(regs*)
                0x00000000c0012388                KeSystemCall(regs*, void*)
 .text          0x00000000c00123ca      0xb0b krnl/terminal.32
                0x00000000c00123ca                VgaText::isAtty()
                0x00000000c00123ce                VgaText::~VgaText()
                0x00000000c00123ce                VgaText::~VgaText()
                0x00000000c00123f2                VgaText::~VgaText()
                0x00000000c001241c                VgaText::read(unsigned long long, void*, int*)
                0x00000000c001243c                setTerminalScrollLock(bool)
                0x00000000c001243d                doTerminalCycle()
                0x00000000c001243e                addToTerminalCycle(VgaText*)
                0x00000000c001243f                scrollTerminalScrollLock(int)
                0x00000000c0012440                VgaText::updateTitle()
                0x00000000c0012442                VgaText::load()
                0x00000000c0012444                VgaText::updateCursor()
                0x00000000c001245a                VgaText::doANSI_SGR(int)
                0x00000000c00124ce                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00124de                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00124ee                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c001250e                VgaText::setTitleTextColour(VgaColour)
                0x00000000c001251a                VgaText::setTitleColour(VgaColour)
                0x00000000c0012526                VgaText::setTitle(char*)
                0x00000000c0012528                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c001253a                VgaText::scrollScreen()
                0x00000000c00125cc                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00125dc                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0012688                VgaText::getCursorX()
                0x00000000c0012690                VgaText::getCursorY()
                0x00000000c0012698                VgaText::setCursor(int, int)
                0x00000000c00126af                setActiveTerminal(VgaText*)
                0x00000000c00126fa                VgaText::clearScreen()
                0x00000000c0012748                VgaText::setCursorX(int)
                0x00000000c0012760                VgaText::setCursorY(int)
                0x00000000c0012778                VgaText::incrementCursor(bool)
                0x00000000c00127cc                VgaText::decrementCursor(bool)
                0x00000000c00127ee                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00128be                VgaText::putchar(char)
                0x00000000c00129b6                VgaText::putx(unsigned int)
                0x00000000c00129fc                VgaText::puts(char const*)
                0x00000000c0012a22                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0012a6e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0012be8                VgaText::VgaText(char const*)
                0x00000000c0012be8                VgaText::VgaText(char const*)
                0x00000000c0012d48                VgaText::receiveKey(unsigned char)
                0x00000000c0012ed4                VgaText::doUpdate()
 *fill*         0x00000000c0012ed5        0x3 
 .text          0x00000000c0012ed8      0x224 krnl/tss.32
                0x00000000c0012ed8                TSS::TSS()
                0x00000000c0012ed8                TSS::TSS()
                0x00000000c0012ee8                TSS::setESP(unsigned long)
                0x00000000c0012efc                TSS::flush()
                0x00000000c0012f1c                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c00130fc      0x4ce krnl/unixfile.32
                0x00000000c00130fc                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0013152                ReservedFilename::isAtty()
                0x00000000c001316e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00131cc                UnixFile::getFileDescriptor()
                0x00000000c00131d4                UnixFile::UnixFile(int)
                0x00000000c00131d4                UnixFile::UnixFile(int)
                0x00000000c0013388                ReservedFilename::ReservedFilename(int)
                0x00000000c0013388                ReservedFilename::ReservedFilename(int)
                0x00000000c00133ba                UnixFile::~UnixFile()
                0x00000000c00133ba                UnixFile::~UnixFile()
                0x00000000c0013456                UnixFile::~UnixFile()
                0x00000000c001347e                ReservedFilename::~ReservedFilename()
                0x00000000c001347e                ReservedFilename::~ReservedFilename()
                0x00000000c00134a2                ReservedFilename::~ReservedFilename()
                0x00000000c00134c9                KeGetFileFromDescriptor(int)
 .text          0x00000000c00135ca     0x132c krnl/virtmgr.32
                0x00000000c00135ca                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0013604                Virt::getPageState(unsigned long)
                0x00000000c0013627                Virt::allocateKernelVirtualPages(int)
                0x00000000c001374c                Virt::freeSwapfilePage(unsigned long)
                0x00000000c001376f                Virt::swapIDToSector(unsigned long)
                0x00000000c0013785                Virt::allocateSwapfilePage()
                0x00000000c0013805                Virt::virtualMemorySetup()
                0x00000000c0013856                Virt::setupPageSwapping(int)
                0x00000000c00138c8                VAS::setCPUSpecific(unsigned long)
                0x00000000c00138ca                VAS::VAS(VAS*)
                0x00000000c00138ca                VAS::VAS(VAS*)
                0x00000000c00138e2                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0013910                VAS::getPageTableEntry(unsigned long)
                0x00000000c001392f                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0013a6c                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0013a90                VAS::virtualToPhysical(unsigned long)
                0x00000000c0013aaa                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0013aec                VAS::VAS()
                0x00000000c0013aec                VAS::VAS()
                0x00000000c0013b56                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0013b76                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0013ba2                VAS::~VAS()
                0x00000000c0013ba2                VAS::~VAS()
                0x00000000c0013d0a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013e0e                VAS::allocatePages(int, int)
                0x00000000c0013ef4                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013f4c                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0014042                VAS::VAS(bool)
                0x00000000c0014042                VAS::VAS(bool)
                0x00000000c001422a                VAS::evict(unsigned long)
                0x00000000c001432e                VAS::canLockPage(unsigned long)
                0x00000000c0014348                VAS::unlockPage(unsigned long)
                0x00000000c001437c                VAS::canLockPages(unsigned long, int)
                0x00000000c00143b8                VAS::unlockPages(unsigned long, int)
                0x00000000c00143f4                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0014574                VAS::lockPage(unsigned long)
                0x00000000c00145e6                VAS::lockPages(unsigned long, int)
                0x00000000c0014622                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0014696                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00146c2                VAS::scanForEviction()
                0x00000000c00147fb                mapVASFirstTime
 .text          0x00000000c00148f6       0x2f sys/alarm.32
                0x00000000c00148f6                SysAlarm(regs*)
 .text          0x00000000c0014925       0x36 sys/eject.32
                0x00000000c0014925                SysEject(regs*)
 .text          0x00000000c001495b       0x18 sys/exit.32
                0x00000000c001495b                SysExit(regs*)
 .text          0x00000000c0014973       0x1f sys/getcwd.32
                0x00000000c0014973                SysGetCwd(regs*)
 .text          0x00000000c0014992       0x26 sys/getpid.32
                0x00000000c0014992                SysGetPID(regs*)
 .text          0x00000000c00149b8       0x21 sys/getramdata.32
                0x00000000c00149b8                SysGetRAMData(regs*)
 .text          0x00000000c00149d9       0xbe sys/getvgaptr.32
                0x00000000c00149d9                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014a97        0x1 
 .text          0x00000000c0014a98       0xb9 sys/kill.32
                0x00000000c0014a98                SysKill(regs*)
 .text          0x00000000c0014b51       0xa8 sys/loaddll.32
                0x00000000c0014b51                SysLoadDLL(regs*)
 .text          0x00000000c0014bf9       0x12 sys/pause.32
                0x00000000c0014bf9                SysPause(regs*)
 .text          0x00000000c0014c0b       0x49 sys/pthread.32
                0x00000000c0014c0b                SysPthreadCreate(regs*)
                0x00000000c0014c23                SysPthreadGetTID(regs*)
                0x00000000c0014c2d                SysInternalPthreadGetContext(regs*)
                0x00000000c0014c32                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c0014c37                SysPthreadJoin(regs*)
                0x00000000c0014c3c                SysPthreadExit(regs*)
 .text          0x00000000c0014c54       0x68 sys/read.32
                0x00000000c0014c54                SysRead(regs*)
 .text          0x00000000c0014cbc       0x29 sys/registersignal.32
                0x00000000c0014cbc                SysRegisterSignal(regs*)
 .text          0x00000000c0014ce5      0x1cc sys/registry.32
                0x00000000c0014ce5                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014d29                SysRegistryReadExtent(regs*)
                0x00000000c0014d71                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014d88                SysRegistryEnterDirectory(regs*)
                0x00000000c0014d9f                SysRegistryGetNext(regs*)
                0x00000000c0014db6                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014df0                SysRegistryOpen(regs*)
                0x00000000c0014e04                SysRegistryClose(regs*)
                0x00000000c0014e1b                SysRegistryEasyReadString(regs*)
                0x00000000c0014e67                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014eb1       0x55 sys/sbrk.32
                0x00000000c0014eb1                SysSbrk(regs*)
 .text          0x00000000c0014f06       0x1c sys/setcwd.32
                0x00000000c0014f06                SysSetCwd(regs*)
 .text          0x00000000c0014f22       0xd7 sys/settime.32
                0x00000000c0014f22                SysSetTime(regs*)
 .text          0x00000000c0014ff9       0x73 sys/symlink.32
                0x00000000c0014ff9                SysSymlink(regs*)
 .text          0x00000000c001506c       0x3e sys/timezone.32
                0x00000000c001506c                SysTimezone(regs*)
 .text          0x00000000c00150aa       0xfc sys/truncate.32
                0x00000000c00150aa                SysTruncate(regs*)
 .text          0x00000000c00151a6       0x68 sys/write.32
                0x00000000c00151a6                SysWrite(regs*)
 .text          0x00000000c001520e       0x9d sys/wsbe.32
                0x00000000c001520e                SysWsbe(regs*)
 .text          0x00000000c00152ab       0x28 sys/yield.32
                0x00000000c00152ab                SysYield(regs*)
 *fill*         0x00000000c00152d3        0x1 
 .text          0x00000000c00152d4      0x281 thr/alarm.32
                0x00000000c00152d4                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c0015464                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c0015555     0x12a0 thr/elf.32
                0x00000000c0015555                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00157e7                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0015a7f                Thr::runtimeReferenceHelper()
                0x00000000c0015a92                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0015ae1                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015d9f                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00164e7                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0016519                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0016550                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001656a                Thr::loadDLL(char const*, bool)
                0x00000000c00167bc                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00167f5       0x5a thr/exec.32
                0x00000000c00167f5                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c001684f        0x1 
 .text          0x00000000c0016850     0x128d thr/prcssthr.32
                0x00000000c0016850                userModeEntryPoint(void*)
                0x00000000c001687c                changeTSS
                0x00000000c00168ac                switchToThread(ThreadControlBlock*)
                0x00000000c001696c                Process::addArgs(char**)
                0x00000000c00169d8                Process::Process(char const*, Process*, char**)
                0x00000000c00169d8                Process::Process(char const*, Process*, char**)
                0x00000000c0016c10                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016c10                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016dfc                taskStartupFunction
                0x00000000c0016e08                KeDisablePreemption()
                0x00000000c0016e30                KeRestorePreemption()
                0x00000000c0016e50                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016fa8                Process::createUserThread()
                0x00000000c0016fc8                setupMultitasking(void (*)())
                0x00000000c0017110                schedule()
                0x00000000c00171a4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00171d0                blockTask(TaskState)
                0x00000000c001720c                waitTask(int, int*, int)
                0x00000000c0017250                milliTenthSleepUntil(unsigned long long)
                0x00000000c0017304                milliTenthSleep(unsigned long long)
                0x00000000c001731c                sleep(unsigned long long)
                0x00000000c001733c                sleep(unsigned int)
                0x00000000c0017354                milliTenthSleep(unsigned int)
                0x00000000c0017374                taskReturned
                0x00000000c00173bc                KeProcessFromPID(int)
                0x00000000c001746c                unblockTask(ThreadControlBlock*)
                0x00000000c0017520                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00177f8                cleanerTaskFunction(void*)
                0x00000000c0017910                KeTerminateCurrentThread(int)
 .text          0x00000000c0017add      0xe5f vm86/vm8086.32
                0x00000000c0017add                Vm::inbv(unsigned short)
                0x00000000c0017af0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017b26                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0017b36                Vm::getSegment(unsigned int)
                0x00000000c0017b3e                Vm::getOffset(unsigned int)
                0x00000000c0017b43                Vm::mainloop2()
                0x00000000c0017b84                Vm::mainVm8086Loop(void*)
                0x00000000c0017b98                Vm::mainloop3(unsigned long)
                0x00000000c0017bca                Vm::initialise8086()
                0x00000000c0017c0e                Vm::resetConventionalMemory8086()
                0x00000000c0017c0f                Vm::finish8086()
                0x00000000c0017c80                Vm::getOutput8086(unsigned char*)
                0x00000000c0017ca5                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017e07                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001804f                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00180e9                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00180fa                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001810c                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001811d                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018132                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0018148                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001815d                Vm::faultHandler(regs*)
 .text          0x00000000c001893c      0x45f arch/i386/apic.32
                0x00000000c001893c                IOAPIC::close(int, int, void*)
                0x00000000c0018942                apicGetBase()
                0x00000000c001897c                IOAPIC::IOAPIC()
                0x00000000c001897c                IOAPIC::IOAPIC()
                0x00000000c00189a4                apicOpen()
                0x00000000c0018b30                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0018b62                IOAPIC::read(int)
                0x00000000c0018b8a                IOAPIC::open(int, int, void*)
                0x00000000c0018c70                IOAPIC::write(int, int)
                0x00000000c0018c9c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0018d9b        0x1 
 .text          0x00000000c0018d9c     0x1f3f arch/i386/hal.32
                0x00000000c0018d9c                noCopro(unsigned long)
                0x00000000c0018d9d                HalRestart()
                0x00000000c0018da8                HalShutdown()
                0x00000000c0018da9                HalSleep()
                0x00000000c0018daa                CPU::close(int, int, void*)
                0x00000000c0018dad                x86ReadCMOS(unsigned char)
                0x00000000c0018e01                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018e61                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018e80                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018e9d                AMD_K6_writeback(int, int, int)
                0x00000000c0018f5d                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018ffb                cpuidCheckEDX(unsigned int)
                0x00000000c0019028                cpuidCheckECX(unsigned int)
                0x00000000c0019056                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0019084                cpuidCheckExtendedECX(unsigned int)
                0x00000000c00190b2                HalDetectFeatures()
                0x00000000c0019e9d                HalEnableNMI()
                0x00000000c0019eb0                HalDisableNMI()
                0x00000000c0019ec3                HalGetNMIState()
                0x00000000c0019ec9                x86rdmsr(unsigned int)
                0x00000000c0019f07                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c0019f4c                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0019f62                HalFindRSDP()
                0x00000000c001a03f                HalHandlePageFault(void*, void*)
                0x00000000c001a06e                HalHandleOpcodeFault(void*, void*)
                0x00000000c001a0b0                HalDisplayDebugInfo(void*)
                0x00000000c001a43e                HalReceivedNMI()
                0x00000000c001a4d9                HalSystemIdle()
                0x00000000c001a538                i386SaveCoprocessor(void*)
                0x00000000c001a54c                i386LoadCoprocessor(void*)
                0x00000000c001a560                x87EmulHandler(regs*, void*)
                0x00000000c001a5fd                HalInitialiseCoprocessor()
                0x00000000c001a681                HalPanic(char const*)
                0x00000000c001a795                HalQueryPerformanceCounter()
                0x00000000c001a7a5                HalInitialise()
                0x00000000c001a98d                HalMakeBeep(int)
                0x00000000c001a9c7                HalGetRand()
                0x00000000c001a9ca                HalEndOfInterrupt(int)
                0x00000000c001a9f6                CPU::CPU()
                0x00000000c001a9f6                CPU::CPU()
                0x00000000c001aa7a                CPU::setupSMEP()
                0x00000000c001aa86                CPU::setupUMIP()
                0x00000000c001aa90                CPU::setupTSC()
                0x00000000c001aa9a                CPU::setupLargePages()
                0x00000000c001aaa4                CPU::setupPAT()
                0x00000000c001aad6                CPU::setupMTRR()
                0x00000000c001aad8                CPU::setupGlobalPages()
                0x00000000c001aae2                CPU::allowUsermodeDataAccess()
                0x00000000c001aaf0                CPU::prohibitUsermodeDataAccess()
                0x00000000c001aafe                CPU::setupSMAP()
                0x00000000c001ab0c                CPU::setupFeatures()
                0x00000000c001abd8                CPU::open(int, int, void*)
 .text          0x00000000c001acdb      0x261 arch/i386/intctrl.32
                0x00000000c001acdb                convertLegacyIRQNumber(int)
                0x00000000c001ad17                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001ad61                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001ae8f                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001aec3                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 .text          0x00000000c001af3c      0x2dc arch/i386/pic.32
                0x00000000c001af3c                picIoWait()
                0x00000000c001af44                picDisable()
                0x00000000c001af78                picGetIRQReg(int)
                0x00000000c001aff4                picOpen()
                0x00000000c001b178                picEOI(int)
 .text          0x00000000c001b218      0x5f3 arch/i386/rtc.32
                0x00000000c001b218                RTC::open(int, int, void*)
                0x00000000c001b21c                RTC::close(int, int, void*)
                0x00000000c001b220                RTC::timeInSecondsUTC()
                0x00000000c001b232                RTC::timeInDatetimeUTC()
                0x00000000c001b258                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b296                RTC::~RTC()
                0x00000000c001b296                RTC::~RTC()
                0x00000000c001b2ba                RTC::~RTC()
                0x00000000c001b2e4                RTC::get_update_in_progress_flag()
                0x00000000c001b2f8                RTC::completeRTCRefresh()
                0x00000000c001b5ac                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b722                rtcIRQHandler(regs*, void*)
                0x00000000c001b762                RTC::RTC()
                0x00000000c001b762                RTC::RTC()
 *fill*         0x00000000c001b80b        0x1 
 .text          0x00000000c001b80c      0x1f4 arch/i386/vga.32
                0x00000000c001b80c                HalConsoleScroll(int, int)
                0x00000000c001b914                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b978                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001ba00     0x14cf fs/fat/vfslink.32
                0x00000000c001ba00                FAT::getName()
                0x00000000c001ba08                FAT::tell(void*, unsigned long long*)
                0x00000000c001ba44                FAT::stat(void*, unsigned long long*)
                0x00000000c001ba80                FAT::~FAT()
                0x00000000c001ba80                FAT::~FAT()
                0x00000000c001baa4                FAT::~FAT()
                0x00000000c001bacc                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001bb70                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001bc34                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001be18                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001c034                FAT::allocateSwapfile(char const*, int)
                0x00000000c001c1f4                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c364                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c3c4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c424                FAT::close(void*)
                0x00000000c001c478                FAT::closeDir(void*)
                0x00000000c001c4cc                FAT::truncate(void*, unsigned long long)
                0x00000000c001c538                FAT::seek(void*, unsigned long long)
                0x00000000c001c590                fatWrapperReadDisk
                0x00000000c001c5d0                fatWrapperWriteDisk
                0x00000000c001c610                fatWrapperIoctl
                0x00000000c001c72c                FAT::FAT()
                0x00000000c001c72c                FAT::FAT()
                0x00000000c001c784                FAT::fixFilepath(char*)
                0x00000000c001c7c4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c938                FAT::openDir(char const*, void**)
                0x00000000c001c9e8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001cae0                FAT::unlink(char const*)
                0x00000000c001cb60                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cd14                FAT::rename(char const*, char const*)
                0x00000000c001cde0                FAT::mkdir(char const*)
                0x00000000c001ce60                FAT::exists(char const*)
 *fill*         0x00000000c001cecf        0x1 
 .text          0x00000000c001ced0       0x94 fs/iso9660/helper.32
                0x00000000c001ced0                isoReadDiscSectorHelper
                0x00000000c001cf2c                iso_kprintf
                0x00000000c001cf48                iso_kprintfd
 .text          0x00000000c001cf64      0x71c fs/iso9660/vfslink.32
                0x00000000c001cf64                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001cf6a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001cf70                ISO9660::getName()
                0x00000000c001cf76                ISO9660::closeDir(void*)
                0x00000000c001cf80                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001cf86                ISO9660::unlink(char const*)
                0x00000000c001cf8c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001cf92                ISO9660::rename(char const*, char const*)
                0x00000000c001cf98                ISO9660::mkdir(char const*)
                0x00000000c001cf9e                ISO9660::~ISO9660()
                0x00000000c001cf9e                ISO9660::~ISO9660()
                0x00000000c001cfc2                ISO9660::~ISO9660()
                0x00000000c001cfea                ISO9660::exists(char const*)
                0x00000000c001cffe                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001d0e4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001d12c                ISO9660::seek(void*, unsigned long long)
                0x00000000c001d16e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001d1ac                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001d1fe                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d340                ISO9660::close(void*)
                0x00000000c001d370                ISO9660::openDir(char const*, void**)
                0x00000000c001d44a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d567                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d5e6                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001d658                ISO9660::ISO9660()
                0x00000000c001d658                ISO9660::ISO9660()
 .text          0x00000000c001d680      0x26c hal/sound/sndcard.32
                0x00000000c001d680                SoundCard::beginPlayback()
                0x00000000c001d68e                SoundCard::stopPlayback()
                0x00000000c001d69c                SoundCard::SoundCard(char const*)
                0x00000000c001d69c                SoundCard::SoundCard(char const*)
                0x00000000c001d73a                SoundCard::~SoundCard()
                0x00000000c001d73a                SoundCard::~SoundCard()
                0x00000000c001d75e                SoundCard::~SoundCard()
                0x00000000c001d788                SoundCard::configureRates(int, int, int)
                0x00000000c001d7b8                SoundCard::getSamples16(int, short*)
                0x00000000c001d814                SoundCard::getSamples32(int, int*)
                0x00000000c001d89a                SoundCard::addChannel(SoundPort*)
                0x00000000c001d8d8                SoundCard::removeChannel(int)
 .text          0x00000000c001d8ec      0x426 hal/sound/sndport.32
                0x00000000c001d8ec                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d8ec                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d978                SoundPort::~SoundPort()
                0x00000000c001d978                SoundPort::~SoundPort()
                0x00000000c001d9ac                SoundPort::unpause()
                0x00000000c001d9b8                SoundPort::pause()
                0x00000000c001d9c4                SoundPort::getBufferUsed()
                0x00000000c001d9cc                SoundPort::getBufferSize()
                0x00000000c001d9d4                SoundPort::buffer8(signed char*, int)
                0x00000000c001da68                SoundPort::buffer16(short*, int)
                0x00000000c001dafc                SoundPort::buffer32(int*, int)
                0x00000000c001db88                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001dc54                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001dd12      0xc23 hw/bus/pci.32
                0x00000000c001dd12                PCI::open(int, int, void*)
                0x00000000c001dd30                PCI::close(int, int, void*)
                0x00000000c001dd34                PCI::PCI()
                0x00000000c001dd34                PCI::PCI()
                0x00000000c001ddcc                PCI::readBAR8(unsigned int, int)
                0x00000000c001dde8                PCI::readBAR16(unsigned int, int)
                0x00000000c001de06                PCI::readBAR32(unsigned int, int)
                0x00000000c001de22                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001de42                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001de64                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001de84                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001defa                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001dfa4                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001dfc8                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001dff0                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001e03a                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001e062                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001e086                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001e0aa                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001e0d2                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e136                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001e21e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e4e4                PCI::checkBus(unsigned char)
                0x00000000c001e508                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e6ee                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e86a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e8dc                PCI::detect()
 *fill*         0x00000000c001e935        0x1 
 .text          0x00000000c001e936      0xe58 hw/diskctrl/ide.32
                0x00000000c001e936                IDE::close(int, int, void*)
                0x00000000c001e93a                IDE::IDE()
                0x00000000c001e93a                IDE::IDE()
                0x00000000c001e96e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e980                selectDrive(unsigned char, unsigned char)
                0x00000000c001e982                IDE::getBase(unsigned char)
                0x00000000c001e994                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ea54                IDE::read(unsigned char, unsigned char)
                0x00000000c001eb02                IDE::waitInterrupt(unsigned char)
                0x00000000c001eb65                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001eb81                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001eb9e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ebe8                IDE::open(int, int, void*)
                0x00000000c001f142                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001f212                IDE::detect()
                0x00000000c001f680                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f73a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f78e      0x33d hw/diskctrl/satabus.32
                0x00000000c001f78e                SATABus::close(int, int, void*)
                0x00000000c001f792                SATABus::detect()
                0x00000000c001f794                SATABus::SATABus()
                0x00000000c001f794                SATABus::SATABus()
                0x00000000c001f81a                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f84c                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f894                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f8b4                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f8de                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f9ee                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001fa98                SATABus::open(int, int, void*)
 *fill*         0x00000000c001facb        0x1 
 .text          0x00000000c001facc      0x7a9 hw/diskphys/ata.32
                0x00000000c001facc                ATA::close(int, int, void*)
                0x00000000c001faf0                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001faf2                ATA::ATA()
                0x00000000c001faf2                ATA::ATA()
                0x00000000c001fb20                ATA::flush(bool)
                0x00000000c001fb6e                ATA::readyForCommand()
                0x00000000c001fbba                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ffaa                ATA::read(unsigned long long, int, void*)
                0x00000000c001fff6                ATA::write(unsigned long long, int, void*)
                0x00000000c0020042                ATA::detectCHS()
                0x00000000c002006c                ATA::open(int, int, void*)
                0x00000000c0020257                combineCharAndColour(char, unsigned char)
                0x00000000c0020268                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c0020275        0x1 
 .text          0x00000000c0020276      0x618 hw/diskphys/atapi.32
                0x00000000c0020276                ATAPI::write(unsigned long long, int, void*)
                0x00000000c002027c                ATAPI::close(int, int, void*)
                0x00000000c00202a0                ATAPI::ATAPI()
                0x00000000c00202a0                ATAPI::ATAPI()
                0x00000000c00202ce                ATAPI::readyForCommand()
                0x00000000c0020320                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c00205e8                ATAPI::diskRemoved()
                0x00000000c0020622                ATAPI::eject()
                0x00000000c002066a                ATAPI::diskInserted()
                0x00000000c0020676                ATAPI::detectMedia()
                0x00000000c0020734                ATAPI::open(int, int, void*)
                0x00000000c0020814                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c002088e      0x44c hw/diskphys/sata.32
                0x00000000c002088e                SATA::close(int, int, void*)
                0x00000000c00208b2                SATA::powerSaving(PowerSavingLevel)
                0x00000000c00208b4                SATA::open(int, int, void*)
                0x00000000c002096c                SATA::SATA()
                0x00000000c002096c                SATA::SATA()
                0x00000000c002099a                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020c22                SATA::read(unsigned long long, int, void*)
                0x00000000c0020c6e                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020cda      0x5d4 hw/diskphys/satapi.32
                0x00000000c0020cda                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020ce0                SATAPI::close(int, int, void*)
                0x00000000c0020d04                SATAPI::SATAPI()
                0x00000000c0020d04                SATAPI::SATAPI()
                0x00000000c0020d32                SATAPI::diskRemoved()
                0x00000000c0020d34                SATAPI::diskInserted()
                0x00000000c0020d50                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0021032                SATAPI::eject()
                0x00000000c002106e                SATAPI::detectMedia()
                0x00000000c00210c4                SATAPI::open(int, int, void*)
                0x00000000c00211c4                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c00212ae        0x2 
 .text          0x00000000c00212b0       0xf0 hw/timer/apictimer.32
                0x00000000c00212b0                APICTimer::close(int, int, void*)
                0x00000000c00212b8                apicTimerHandler(regs*, void*)
                0x00000000c00212e0                APICTimer::open(int, int, void*)
                0x00000000c0021350                APICTimer::write(int)
                0x00000000c0021378                APICTimer::APICTimer()
                0x00000000c0021378                APICTimer::APICTimer()
 .text          0x00000000c00213a0      0x1ad hw/timer/pit.32
                0x00000000c00213a0                PIT::write(int)
                0x00000000c0021424                pitHandler(regs*, void*)
                0x00000000c002144c                PIT::open(int, int, void*)
                0x00000000c002149c                PIT::close(int, int, void*)
                0x00000000c00214cc                PIT::PIT()
                0x00000000c00214cc                PIT::PIT()
 *fill*         0x00000000c002154d        0x3 
 .text          0x00000000c0021550       0x6f arch/i386/avx.32
                0x00000000c0021550                avxDetect
                0x00000000c002157a                avxSave
                0x00000000c002158b                avxLoad
                0x00000000c002159c                avxInit
                0x00000000c00215be                avxClose
 *fill*         0x00000000c00215bf        0x1 
 .text          0x00000000c00215c0      0x2b4 arch/i386/interrupt.32
                0x00000000c00215c0                isr0
                0x00000000c00215d0                isr1
                0x00000000c00215da                isr2
                0x00000000c00215e4                isr3
                0x00000000c00215ee                isr4
                0x00000000c00215f8                isr5
                0x00000000c0021602                isr6
                0x00000000c002160c                isr7
                0x00000000c0021616                isr8
                0x00000000c002161e                isr9
                0x00000000c0021628                isr10
                0x00000000c0021630                isr11
                0x00000000c0021638                isr12
                0x00000000c0021640                isr13
                0x00000000c002165a                isr14
                0x00000000c0021662                isr15
                0x00000000c002166c                isr16
                0x00000000c0021676                isr17
                0x00000000c0021680                isr18
                0x00000000c002168a                irq3
                0x00000000c0021694                irq4
                0x00000000c002169e                irq5
                0x00000000c00216a8                irq6
                0x00000000c00216b2                irq7
                0x00000000c00216bc                irq8
                0x00000000c00216c6                irq9
                0x00000000c00216d0                irq10
                0x00000000c00216da                irq11
                0x00000000c00216e4                irq12
                0x00000000c00216ee                irq13
                0x00000000c00216f8                irq14
                0x00000000c0021702                irq15
                0x00000000c002170c                irq1
                0x00000000c0021713                irq2
                0x00000000c002171a                isr96
                0x00000000c0021721                irq0
                0x00000000c0021726                int_common_stub
                0x00000000c0021726                syscall_common_stub
                0x00000000c0021824                irq16
                0x00000000c002182e                irq17
                0x00000000c0021838                irq18
                0x00000000c0021842                irq19
                0x00000000c002184c                irq20
                0x00000000c0021856                irq21
                0x00000000c0021860                irq22
                0x00000000c002186a                irq23
 *fill*         0x00000000c0021874        0xc 
 .text          0x00000000c0021880       0x10 arch/i386/rdrand.32
                0x00000000c0021880                i386GetRDRAND
 .text          0x00000000c0021890       0x39 arch/i386/sse.32
                0x00000000c0021890                sseDetect
                0x00000000c00218a8                sseSave
                0x00000000c00218b0                sseLoad
                0x00000000c00218b8                sseInit
                0x00000000c00218c8                sseClose
 *fill*         0x00000000c00218c9        0x7 
 .text          0x00000000c00218d0       0x4f arch/i386/x87.32
                0x00000000c00218d6                x87Detect
                0x00000000c00218f7                x87Save
                0x00000000c00218fe                x87Load
                0x00000000c0021905                x87Init
                0x00000000c002191e                x87Close
 *fill*         0x00000000c002191f        0x1 
 .text          0x00000000c0021920       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021945        0x0 crtn.32
 *fill*         0x00000000c0021945        0x3 
 .text          0x00000000c0021948      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021948                __divdi3
 *fill*         0x00000000c0021a93        0x1 
 .text          0x00000000c0021a94      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021a94                __moddi3
 *fill*         0x00000000c0021c12        0x2 
 .text          0x00000000c0021c14       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021c14                __udivdi3
 *fill*         0x00000000c0021d13        0x1 
 .text          0x00000000c0021d14      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021d14                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021e30        0x0
 .iplt          0x00000000c0021e30        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021e2e        0xf
 .init          0x00000000c0021e2e        0x3 crti.32
                0x00000000c0021e2e                _init
 .init          0x00000000c0021e31        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021e36        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021e3b        0x2 crtn.32

.fini           0x00000000c0021e3d        0xa
 .fini          0x00000000c0021e3d        0x3 crti.32
                0x00000000c0021e3d                _fini
 .fini          0x00000000c0021e40        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021e45        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021e48       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021e48       0x1a hal/device.32
                0x00000000c0021e48                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021e48                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021e62       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021e62       0x2a hal/device.32
                0x00000000c0021e62                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021e8c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021e8c       0xdc hal/device.32
                0x00000000c0021e8c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021f68       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021f68       0x42 hal/device.32
                0x00000000c0021f68                LinkedList<Device>::LinkedList()
                0x00000000c0021f68                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021fac       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021fac       0x1c hal/timer.32
                0x00000000c0021fac                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021fc8        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021fc8        0x7 hal/timer.32
                0x00000000c0021fc8                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021fd0       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021fd0       0xbc hal/timer.32
                0x00000000c0021fd0                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002208c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002208c       0xda hal/timer.32
                0x00000000c002208c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0022168       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0022168       0x23 hw/acpi.32
                0x00000000c0022168                ACPI::~ACPI()
                0x00000000c0022168                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002218c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002218c       0x2a hw/acpi.32
                0x00000000c002218c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00221b8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00221b8        0x2 hw/acpi.32
                0x00000000c00221b8                LinkedList<Device>::~LinkedList()
                0x00000000c00221b8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00221bc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00221bc       0x1c hw/acpi.32
                0x00000000c00221bc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00221d8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00221d8        0x7 hw/acpi.32
                0x00000000c00221d8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00221e0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00221e0       0xb8 hw/acpi.32
                0x00000000c00221e0                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0022298       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0022298       0x23 krnl/computer.32
                0x00000000c0022298                Computer::~Computer()
                0x00000000c0022298                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c00222bc       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c00222bc       0x2a krnl/computer.32
                0x00000000c00222bc                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c00222e6       0x24
 .text._Z10idleCommonv
                0x00000000c00222e6       0x24 krnl/idle.32
                0x00000000c00222e6                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002230a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c002230a        0x2 krnl/unixfile.32
                0x00000000c002230a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c002230a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002230c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c002230c       0x42 krnl/unixfile.32
                0x00000000c002230c                LinkedList<UnixFile>::LinkedList()
                0x00000000c002230c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002234e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002234e       0xd3 krnl/unixfile.32
                0x00000000c002234e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022422        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022422        0x7 krnl/unixfile.32
                0x00000000c0022422                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002242a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002242a       0xa1 krnl/unixfile.32
                0x00000000c002242a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00224cc        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00224cc        0x8 krnl/unixfile.32
                0x00000000c00224cc                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00224d4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00224d4        0x8 sys/kill.32
                0x00000000c00224d4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00224dc        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00224dc        0x2 thr/prcssthr.32
                0x00000000c00224dc                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00224dc                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00224e0       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00224e0       0x49 thr/prcssthr.32
                0x00000000c00224e0                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00224e0                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002252c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002252c       0x42 thr/prcssthr.32
                0x00000000c002252c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c002252c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN6IOAPICD2Ev
                0x00000000c002256e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002256e       0x23 arch/i386/apic.32
                0x00000000c002256e                IOAPIC::~IOAPIC()
                0x00000000c002256e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022592       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022592       0x2a arch/i386/apic.32
                0x00000000c0022592                IOAPIC::~IOAPIC()

.text._ZN3CPUD2Ev
                0x00000000c00225bc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00225bc       0x23 arch/i386/hal.32
                0x00000000c00225bc                CPU::~CPU()
                0x00000000c00225bc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00225e0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00225e0       0x2a arch/i386/hal.32
                0x00000000c00225e0                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002260a       0x23
 .text._ZN3PCID2Ev
                0x00000000c002260a       0x23 hw/bus/pci.32
                0x00000000c002260a                PCI::~PCI()
                0x00000000c002260a                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002262e       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002262e       0x2a hw/bus/pci.32
                0x00000000c002262e                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0022658       0x23
 .text._ZN3IDED2Ev
                0x00000000c0022658       0x23 hw/diskctrl/ide.32
                0x00000000c0022658                IDE::~IDE()
                0x00000000c0022658                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002267c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002267c       0x2a hw/diskctrl/ide.32
                0x00000000c002267c                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00226a6       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00226a6       0x23 hw/diskctrl/satabus.32
                0x00000000c00226a6                SATABus::~SATABus()
                0x00000000c00226a6                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c00226ca       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c00226ca       0x2a hw/diskctrl/satabus.32
                0x00000000c00226ca                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c00226f4       0x23
 .text._ZN3ATAD2Ev
                0x00000000c00226f4       0x23 hw/diskphys/ata.32
                0x00000000c00226f4                ATA::~ATA()
                0x00000000c00226f4                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0022718       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0022718       0x2a hw/diskphys/ata.32
                0x00000000c0022718                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0022742       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0022742       0x23 hw/diskphys/atapi.32
                0x00000000c0022742                ATAPI::~ATAPI()
                0x00000000c0022742                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0022766       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0022766       0x2a hw/diskphys/atapi.32
                0x00000000c0022766                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022790       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022790       0x23 hw/diskphys/sata.32
                0x00000000c0022790                SATA::~SATA()
                0x00000000c0022790                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c00227b4       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c00227b4       0x2a hw/diskphys/sata.32
                0x00000000c00227b4                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00227de       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00227de       0x23 hw/diskphys/satapi.32
                0x00000000c00227de                SATAPI::~SATAPI()
                0x00000000c00227de                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0022802       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0022802       0x2a hw/diskphys/satapi.32
                0x00000000c0022802                SATAPI::~SATAPI()

.text._ZN9APICTimerD2Ev
                0x00000000c002282c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c002282c       0x23 hw/timer/apictimer.32
                0x00000000c002282c                APICTimer::~APICTimer()
                0x00000000c002282c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022850       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022850       0x2a hw/timer/apictimer.32
                0x00000000c0022850                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002287c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002287c       0x23 hw/timer/pit.32
                0x00000000c002287c                PIT::~PIT()
                0x00000000c002287c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00228a0       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00228a0       0x2a hw/timer/pit.32
                0x00000000c00228a0                PIT::~PIT()

.rodata         0x00000000c00228ca     0x3b82
                0x00000000c00228ca                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00228ca        0x2 
 .ctors         0x00000000c00228cc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00228d0        0x4 krnl/unixfile.32
 .ctors         0x00000000c00228d4        0x4 thr/prcssthr.32
 .ctors         0x00000000c00228d8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00228dc                end_ctors = .
                0x00000000c00228dc                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00228dc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00228e0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00228e0                __DTOR_END__
                0x00000000c00228e4                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00228e4       0x1c 
 .rodata        0x00000000c0022900      0x101 acpica/utclib.32
                0x00000000c0022900                AcpiGbl_Ctypes
 *fill*         0x00000000c0022a01        0x3 
 .rodata        0x00000000c0022a04       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0022a1c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022a66       0x1a 
 .rodata        0x00000000c0022a80       0xed fs/fat/ff.32
 *fill*         0x00000000c0022b6d       0x13 
 .rodata        0x00000000c0022b80      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022f80       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0022fef       0x11 dbg/kconsole.32
 .rodata.str1.4
                0x00000000c0023000       0x38 dbg/kconsole.32
 .rodata        0x00000000c0023038      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0023188      0x169 dbg/usban.32
 *fill*         0x00000000c00232f1        0x3 
 .rodata.str1.4
                0x00000000c00232f4      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002342b      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c002354e       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c00235a7        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c00235a8       0x6c fs/vfs.32
                0x00000000c00235a8                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0023614       0x1c fs/vfs.32
                0x00000000c0023614                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0023630       0x1c fs/vfs.32
                0x00000000c0023630                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002364c       0x2c hal/bus.32
                0x00000000c002364c                vtable for Bus
 *fill*         0x00000000c0023678        0x8 
 .rodata        0x00000000c0023680      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c00237d0       0x3c hal/clock.32
                0x00000000c00237d0                vtable for Clock
 .rodata.str1.1
                0x00000000c002380c       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0023870       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023892       0x15 hal/device.32
 *fill*         0x00000000c00238a7        0x1 
 .rodata._ZTV6Device
                0x00000000c00238a8       0x2c hal/device.32
                0x00000000c00238a8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00238d4       0x2c hal/device.32
                0x00000000c00238d4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023900       0x2c hal/diskctrl.32
                0x00000000c0023900                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002392c       0x38 hal/diskphys.32
                0x00000000c002392c                vtable for PhysicalDisk
 .rodata        0x00000000c0023964       0x53 hal/keybrd.32
 *fill*         0x00000000c00239b7        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c00239b8       0x34 hal/keybrd.32
                0x00000000c00239b8                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00239ec       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0023a30       0x2c hal/logidisk.32
                0x00000000c0023a30                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0023a5c       0x2c hal/mouse.32
                0x00000000c0023a5c                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023a88       0x34 hal/nic.32
                0x00000000c0023a88                vtable for NIC
 .rodata.str1.1
                0x00000000c0023abc        0xb hal/partition.32
 *fill*         0x00000000c0023ac7        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023ac8       0x44 hal/serial.32
                0x00000000c0023ac8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023b0c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023b57        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023b5f       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023b5f       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0023b5f       0x47 hal/timer.32
 *fill*         0x00000000c0023ba6        0x2 
 .rodata._ZTV5Timer
                0x00000000c0023ba8       0x30 hal/timer.32
                0x00000000c0023ba8                vtable for Timer
 .rodata.str1.1
                0x00000000c0023bd8       0x3e hal/vcache.32
 *fill*         0x00000000c0023c16        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023c18       0x10 hal/vcache.32
                0x00000000c0023c18                vtable for VCache
 .rodata.str1.1
                0x00000000c0023c28       0xba hal/video.32
 *fill*         0x00000000c0023ce2        0x2 
 .rodata._ZTV5Video
                0x00000000c0023ce4       0x4c hal/video.32
                0x00000000c0023ce4                vtable for Video
 .rodata.str1.1
                0x00000000c0023d30      0x1b7 hw/acpi.32
 *fill*         0x00000000c0023ee7        0x1 
 .rodata.str1.4
                0x00000000c0023ee8       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023f83       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023f83        0x8 hw/acpi.32
 *fill*         0x00000000c0023f83        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023f84       0x2c hw/acpi.32
                0x00000000c0023f84                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023fb0       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023fc3       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024003       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0024024       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0024057        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c002405a       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c00240d0       0x21 krnl/computer.32
 *fill*         0x00000000c00240f1        0x3 
 .rodata.str1.4
                0x00000000c00240f4       0x2c krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c0024120       0x2c krnl/computer.32
                0x00000000c0024120                vtable for Computer
 .rodata.str1.1
                0x00000000c002414c       0x3c krnl/env.32
 .rodata        0x00000000c0024188       0x7e krnl/fault.32
 .rodata.str1.1
                0x00000000c0024206        0x4 krnl/intlformat.32
 .rodata.str1.1
                0x00000000c002420a       0x11 krnl/intops.32
 *fill*         0x00000000c002420a        0x2 
 .rodata.str1.4
                0x00000000c002420c       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c002423c        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c002424b       0x9f krnl/main.32
                                         0xb9 (size before relaxing)
 *fill*         0x00000000c00242ea        0x2 
 .rodata.str1.4
                0x00000000c00242ec       0x48 krnl/main.32
 .rodata.str1.4
                0x00000000c0024334      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024439       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024491       0x39 krnl/pipe.32
 *fill*         0x00000000c00244ca        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00244cc       0x1c krnl/pipe.32
                0x00000000c00244cc                vtable for Pipe
 .rodata.str1.1
                0x00000000c00244e8       0x54 krnl/powctrl.32
 .rodata.str1.1
                0x00000000c002453c       0xd9 krnl/resolve.32
 *fill*         0x00000000c0024615        0x3 
 .rodata.str1.4
                0x00000000c0024618       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c0024637      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c002473f       0x63 krnl/syscalls.32
                                         0x6b (size before relaxing)
 .rodata.str1.1
                0x00000000c00247a2       0x4d krnl/terminal.32
                                         0x5e (size before relaxing)
 *fill*         0x00000000c00247ef        0x1 
 .rodata._ZTV7VgaText
                0x00000000c00247f0       0x1c krnl/terminal.32
                0x00000000c00247f0                vtable for VgaText
 .rodata        0x00000000c002480c       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0024847       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0024847       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0024847       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0024847        0x8 krnl/unixfile.32
 *fill*         0x00000000c0024847        0x1 
 .rodata.str1.4
                0x00000000c0024848       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0024868       0x1c krnl/unixfile.32
                0x00000000c0024868                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024884       0x1c krnl/unixfile.32
                0x00000000c0024884                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00248a0      0x313 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024bb3      0x15a krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024d0d       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024d22        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024d31        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024d3b       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0024d5c       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024da0       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024db5       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024de1       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c0024df2      0x219 thr/elf.32
                                        0x228 (size before relaxing)
 .rodata.str1.1
                0x00000000c002500b       0x57 thr/prcssthr.32
 *fill*         0x00000000c0025062        0x2 
 .rodata.str1.4
                0x00000000c0025064       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002515c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002515c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002515c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002515c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002515c       0x61 vm86/vm8086.32
 *fill*         0x00000000c00251bd        0x3 
 .rodata.str1.4
                0x00000000c00251c0       0x81 vm86/vm8086.32
 *fill*         0x00000000c0025241        0x3 
 .rodata        0x00000000c0025244      0x390 vm86/vm8086.32
 .rodata        0x00000000c00255d4       0x17 arch/i386/apic.32
 *fill*         0x00000000c00255eb        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c00255ec       0x2c arch/i386/apic.32
                0x00000000c00255ec                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025618      0x322 arch/i386/hal.32
                                        0x335 (size before relaxing)
 *fill*         0x00000000c002593a        0x2 
 .rodata.str1.4
                0x00000000c002593c       0x23 arch/i386/hal.32
 *fill*         0x00000000c002595f        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025960       0x2c arch/i386/hal.32
                0x00000000c0025960                vtable for CPU
 .rodata.str1.4
                0x00000000c002598c       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c00259ed       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025a2b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0025a40       0x3c arch/i386/rtc.32
                0x00000000c0025a40                vtable for RTC
 .rodata.str1.1
                0x00000000c0025a7c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025abd        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025ac0       0x6c fs/fat/vfslink.32
                0x00000000c0025ac0                vtable for FAT
 .rodata.str1.1
                0x00000000c0025b2c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025b2c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0025c64       0x6c fs/iso9660/vfslink.32
                0x00000000c0025c64                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025cd0       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0025d14       0x34 hal/sound/sndcard.32
                0x00000000c0025d14                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0025d48       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025d87       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025dbf       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0025e60       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0025ec4       0x2c hw/bus/pci.32
                0x00000000c0025ec4                vtable for PCI
 .rodata.str1.1
                0x00000000c0025ef0      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0026014       0x2c hw/diskctrl/ide.32
                0x00000000c0026014                vtable for IDE
 .rodata.str1.4
                0x00000000c0026040       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0026064       0x2c hw/diskctrl/satabus.32
                0x00000000c0026064                vtable for SATABus
 .rodata.str1.1
                0x00000000c0026090       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c002614b        0x1 
 .rodata._ZTV3ATA
                0x00000000c002614c       0x38 hw/diskphys/ata.32
                0x00000000c002614c                vtable for ATA
 .rodata.str1.1
                0x00000000c0026184        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0026191        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0026194       0x38 hw/diskphys/atapi.32
                0x00000000c0026194                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00261cc       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0026254       0x38 hw/diskphys/sata.32
                0x00000000c0026254                vtable for SATA
 .rodata.str1.1
                0x00000000c002628c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0026376        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0026378       0x38 hw/diskphys/satapi.32
                0x00000000c0026378                vtable for SATAPI
 .rodata.str1.1
                0x00000000c00263b0       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00263cb        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00263cc       0x30 hw/timer/apictimer.32
                0x00000000c00263cc                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00263fc       0x1d hw/timer/pit.32
 *fill*         0x00000000c0026419        0x3 
 .rodata._ZTV3PIT
                0x00000000c002641c       0x30 hw/timer/pit.32
                0x00000000c002641c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002644c      0xa79
 *(.data)
 .data          0x00000000c002644c        0x0 crti.32
 .data          0x00000000c002644c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002644c                __dso_handle
 .data          0x00000000c0026450        0x0 acpica/utclib.32
 .data          0x00000000c0026450        0x0 krnl/malloc.32
 .data          0x00000000c0026450        0x0 libk/ctype.32
 .data          0x00000000c0026450        0x0 libk/string.32
 .data          0x00000000c0026450        0x0 arch/i386/cc.32
 .data          0x00000000c0026450        0x0 fs/fat/diskio.32
 .data          0x00000000c0026450        0x0 fs/fat/ff.32
 .data          0x00000000c0026450        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0026450        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0026450        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0026450        0x0 dbg/kconsole.32
 *fill*         0x00000000c0026450       0x10 
 .data          0x00000000c0026460       0x28 dbg/usban.32
                0x00000000c0026460                KiUsbanTypeMismatchTypes
 .data          0x00000000c0026488        0x0 fs/symlink.32
 .data          0x00000000c0026488        0x0 fs/vfs.32
 .data          0x00000000c0026488        0x0 hal/bus.32
 .data          0x00000000c0026488        0x0 hal/buzzer.32
 .data          0x00000000c0026488        0x0 hal/clock.32
 .data          0x00000000c0026488        0x0 hal/device.32
 .data          0x00000000c0026488        0x0 hal/diskctrl.32
 .data          0x00000000c0026488        0x0 hal/diskphys.32
 .data          0x00000000c0026488        0x0 hal/fpu.32
 .data          0x00000000c0026488        0x0 hal/keybrd.32
 .data          0x00000000c0026488        0x0 hal/logidisk.32
 .data          0x00000000c0026488        0x0 hal/mouse.32
 .data          0x00000000c0026488        0x0 hal/nic.32
 .data          0x00000000c0026488        0x0 hal/partition.32
 .data          0x00000000c0026488        0x0 hal/serial.32
 .data          0x00000000c0026488        0x0 hal/timer.32
 .data          0x00000000c0026488        0x0 hal/vcache.32
 .data          0x00000000c0026488        0x0 hal/video.32
 .data          0x00000000c0026488       0x10 hw/acpi.32
                0x00000000c0026488                legacyIRQRemaps
 .data          0x00000000c0026498        0x0 krnl/assert.32
 .data          0x00000000c0026498        0x0 krnl/atexit.32
 .data          0x00000000c0026498        0x0 krnl/bootflags.32
 .data          0x00000000c0026498        0x0 krnl/bootmsg.32
 .data          0x00000000c0026498        0x4 krnl/c++.32
                0x00000000c0026498                __stack_chk_guard
 .data          0x00000000c002649c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002649c        0x4 
 .data          0x00000000c00264a0      0x100 krnl/cm.32
                0x00000000c00264a0                CmComponents
 .data          0x00000000c00265a0        0x0 krnl/compat.32
 .data          0x00000000c00265a0        0x0 krnl/computer.32
 .data          0x00000000c00265a0      0x400 krnl/crc32.32
                0x00000000c00265a0                KiPolyLookupCRC32
 .data          0x00000000c00269a0       0x4d krnl/env.32
                0x00000000c00269a0                defaultSysEnv
 .data          0x00000000c00269ed        0x0 krnl/fault.32
 .data          0x00000000c00269ed        0x0 krnl/gdt.32
 .data          0x00000000c00269ed        0x0 krnl/idle.32
 .data          0x00000000c00269ed        0x0 krnl/idt.32
 .data          0x00000000c00269ed        0x0 krnl/inlines.32
 .data          0x00000000c00269ed        0x0 krnl/intlformat.32
 .data          0x00000000c00269ed        0x0 krnl/intops.32
 *fill*         0x00000000c00269ed        0x3 
 .data          0x00000000c00269f0        0x4 krnl/kheap.32
 .data          0x00000000c00269f4        0x0 krnl/mailbox.32
 .data          0x00000000c00269f4        0x0 krnl/main.32
 .data          0x00000000c00269f4        0x0 krnl/mutex.32
 .data          0x00000000c00269f4        0x0 krnl/panic.32
 .data          0x00000000c00269f4        0x4 krnl/physmgr.32
                0x00000000c00269f4                Phys::bitmap
 .data          0x00000000c00269f8        0x0 krnl/pipe.32
 .data          0x00000000c00269f8        0x0 krnl/powctrl.32
 .data          0x00000000c00269f8        0x0 krnl/random.32
 .data          0x00000000c00269f8        0x0 krnl/resolve.32
 .data          0x00000000c00269f8        0x0 krnl/semaphore.32
 *fill*         0x00000000c00269f8        0x8 
 .data          0x00000000c0026a00       0x4c krnl/signal.32
                0x00000000c0026a00                KiDefaultSignalHandlers
 *fill*         0x00000000c0026a4c       0x14 
 .data          0x00000000c0026a60      0x124 krnl/syscalls.32
                0x00000000c0026a60                systemCallHandlers
 *fill*         0x00000000c0026b84       0x1c 
 .data          0x00000000c0026ba0       0x60 krnl/terminal.32
                0x00000000c0026ba0                VgaText::hiddenOut
                0x00000000c0026bc0                ansiToVGAMappings
 .data          0x00000000c0026c00        0x0 krnl/tss.32
 .data          0x00000000c0026c00        0x4 krnl/unixfile.32
                0x00000000c0026c00                UnixFile::nextFd
 .data          0x00000000c0026c04       0x15 krnl/virtmgr.32
                0x00000000c0026c04                Virt::pageAllocPtr
                0x00000000c0026c08                Virt::bitmap
                0x00000000c0026c0c                Virt::swapfileSectorsPerPage
                0x00000000c0026c10                Virt::swapfileLength
                0x00000000c0026c14                Virt::swapfileSector
                0x00000000c0026c18                Virt::swapfileDrive
 .data          0x00000000c0026c19        0x0 sys/alarm.32
 .data          0x00000000c0026c19        0x0 sys/eject.32
 .data          0x00000000c0026c19        0x0 sys/exit.32
 .data          0x00000000c0026c19        0x0 sys/getcwd.32
 .data          0x00000000c0026c19        0x0 sys/getpid.32
 .data          0x00000000c0026c19        0x0 sys/getramdata.32
 .data          0x00000000c0026c19        0x0 sys/getvgaptr.32
 .data          0x00000000c0026c19        0x0 sys/kill.32
 .data          0x00000000c0026c19        0x0 sys/loaddll.32
 .data          0x00000000c0026c19        0x0 sys/pause.32
 .data          0x00000000c0026c19        0x0 sys/pthread.32
 .data          0x00000000c0026c19        0x0 sys/read.32
 .data          0x00000000c0026c19        0x0 sys/registersignal.32
 .data          0x00000000c0026c19        0x0 sys/registry.32
 .data          0x00000000c0026c19        0x0 sys/sbrk.32
 .data          0x00000000c0026c19        0x0 sys/setcwd.32
 .data          0x00000000c0026c19        0x0 sys/settime.32
 .data          0x00000000c0026c19        0x0 sys/symlink.32
 .data          0x00000000c0026c19        0x0 sys/timezone.32
 .data          0x00000000c0026c19        0x0 sys/truncate.32
 .data          0x00000000c0026c19        0x0 sys/write.32
 .data          0x00000000c0026c19        0x0 sys/wsbe.32
 .data          0x00000000c0026c19        0x0 sys/yield.32
 .data          0x00000000c0026c19        0x0 thr/alarm.32
 .data          0x00000000c0026c19        0x0 thr/elf.32
 .data          0x00000000c0026c19        0x0 thr/exec.32
 *fill*         0x00000000c0026c19        0x3 
 .data          0x00000000c0026c1c        0x4 thr/prcssthr.32
                0x00000000c0026c1c                keNextPID
 .data          0x00000000c0026c20        0x0 vm86/vm8086.32
 .data          0x00000000c0026c20        0x0 arch/i386/apic.32
 .data          0x00000000c0026c20      0x2a4 arch/i386/hal.32
                0x00000000c0026c20                exceptionNames
                0x00000000c0026ec0                lastCode
 .data          0x00000000c0026ec4        0x0 arch/i386/intctrl.32
 .data          0x00000000c0026ec4        0x0 arch/i386/pic.32
 .data          0x00000000c0026ec4        0x0 arch/i386/rtc.32
 .data          0x00000000c0026ec4        0x0 arch/i386/vga.32
 .data          0x00000000c0026ec4        0x0 fs/fat/vfslink.32
 .data          0x00000000c0026ec4        0x0 fs/iso9660/helper.32
 .data          0x00000000c0026ec4        0x1 fs/iso9660/vfslink.32
                0x00000000c0026ec4                recentDriveletter
 .data          0x00000000c0026ec5        0x0 hal/sound/sndcard.32
 .data          0x00000000c0026ec5        0x0 hal/sound/sndport.32
 .data          0x00000000c0026ec5        0x0 hw/bus/pci.32
 .data          0x00000000c0026ec5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0026ec5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0026ec5        0x0 hw/diskphys/ata.32
 .data          0x00000000c0026ec5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0026ec5        0x0 hw/diskphys/sata.32
 .data          0x00000000c0026ec5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0026ec5        0x0 hw/timer/apictimer.32
 .data          0x00000000c0026ec5        0x0 hw/timer/pit.32
 .data          0x00000000c0026ec5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0026ec5        0x0 crtn.32
 .data          0x00000000c0026ec5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0026ec5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0026ec5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0026ec5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0026ec8        0x0
 .got           0x00000000c0026ec8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0026ec8        0x0
 .got.plt       0x00000000c0026ec8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0026ec8        0x0
 .igot.plt      0x00000000c0026ec8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0026ec8        0x0
 .tm_clone_table
                0x00000000c0026ec8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0026ec8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0026ec5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0026ec5        0x3 
 .eh_frame      0x00000000c0026ec8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0026ec8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0026ec8       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0026f20       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0026f60       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0026fcc       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0028000       0x7d
 *(userkernel)
 userkernel     0x00000000c0028000       0x52 krnl/signal.32
                0x00000000c0028000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002802c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0028052       0x2b krnl/syscalls.32
                0x00000000c0028052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0029000        0x1
 *(align_previous)
 align_previous
                0x00000000c0029000        0x1 krnl/signal.32
                0x00000000c0029000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0029004        0x0
 .rel.got       0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0029001     0x749b
                0x00000000c0029001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0029001       0x1f 
 COMMON         0x00000000c0029020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0029020                dcache
                0x00000000c0029060                cdDriveLetter
                0x00000000c0029080                icache
 *(.bss)
 .bss           0x00000000c00290c0        0x0 crti.32
 .bss           0x00000000c00290c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00290e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00290e4       0x1c 
 .bss           0x00000000c0029100      0x378 krnl/malloc.32
 .bss           0x00000000c0029478        0x0 libk/ctype.32
 .bss           0x00000000c0029478        0x0 libk/string.32
 .bss           0x00000000c0029478        0x0 arch/i386/cc.32
 .bss           0x00000000c0029478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0029478        0x8 
 .bss           0x00000000c0029480       0x88 fs/fat/ff.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0029508       0x18 
 .bss           0x00000000c0029520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0029eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0029eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0029eb8        0x8 
 .bss           0x00000000c0029ec0     0x2444 fs/symlink.32
                0x00000000c0029ec0                kiNumWaitingRoomSymlinks
                0x00000000c0029ee0                kiNewlyCreatedIDs
                0x00000000c0029f00                kiNewlyCreatedSymlinks
                0x00000000c002a300                kiSymlinkHashTable
                0x00000000c002c300                kiBaseSymlinkID
 .bss           0x00000000c002c304        0x4 fs/vfs.32
                0x00000000c002c304                installedFilesystems
 .bss           0x00000000c002c308        0x0 hal/bus.32
 .bss           0x00000000c002c308        0x0 hal/buzzer.32
 *fill*         0x00000000c002c308       0x18 
 .bss           0x00000000c002c320      0x348 hal/clock.32
                0x00000000c002c320                keLoadedTimezones
                0x00000000c002c324                keNumberOfTimezones
                0x00000000c002c340                keTimezoneStrings
                0x00000000c002c660                keDstOn
                0x00000000c002c661                keTimezoneHalfHourOffset
                0x00000000c002c664                keTimezoneHourOffset
 .bss           0x00000000c002c668        0x0 hal/device.32
 .bss           0x00000000c002c668        0x0 hal/diskctrl.32
 .bss           0x00000000c002c668        0x0 hal/diskphys.32
 .bss           0x00000000c002c668        0x0 hal/fpu.32
 *fill*         0x00000000c002c668       0x18 
 .bss           0x00000000c002c680      0x428 hal/keybrd.32
                0x00000000c002c680                keyboardWaitingTaskList
                0x00000000c002c684                keyboardSetupYet
                0x00000000c002c688                guiKeyboardHandler
                0x00000000c002c6a0                keystates
 *fill*         0x00000000c002caa8       0x18 
 .bss           0x00000000c002cac0       0x88 hal/logidisk.32
                0x00000000c002cac0                diskAssignments
                0x00000000c002cae0                disks
 .bss           0x00000000c002cb48        0x4 hal/mouse.32
                0x00000000c002cb48                guiMouseHandler
 .bss           0x00000000c002cb4c        0x0 hal/nic.32
 .bss           0x00000000c002cb4c        0x0 hal/partition.32
 .bss           0x00000000c002cb4c        0x0 hal/serial.32
 *fill*         0x00000000c002cb4c        0x4 
 .bss           0x00000000c002cb50        0x8 hal/timer.32
                0x00000000c002cb50                milliTenthsSinceBoot
 .bss           0x00000000c002cb58        0x0 hal/vcache.32
 .bss           0x00000000c002cb58        0x4 hal/video.32
                0x00000000c002cb58                screen
 *fill*         0x00000000c002cb5c        0x4 
 .bss           0x00000000c002cb60      0x480 hw/acpi.32
                0x00000000c002cb60                nextACPITable
                0x00000000c002cb80                acpiTables
                0x00000000c002cd80                usingXSDT
                0x00000000c002cd84                RSDTpointer
                0x00000000c002cd88                RSDPpointer
                0x00000000c002cd8c                nextAPICNMI
                0x00000000c002cda0                apicNMIInfo
                0x00000000c002ce20                legacyIRQFlags
                0x00000000c002ce40                ioapicDiscoveryNumber
                0x00000000c002ce60                ioapicFoundInMADT
                0x00000000c002ce80                ioapicAddresses
                0x00000000c002cf00                ioapicGSIBase
                0x00000000c002cf80                processorDiscoveryNumber
                0x00000000c002cfa0                matchingAPICID
                0x00000000c002cfc0                processorID
 .bss           0x00000000c002cfe0        0x0 krnl/assert.32
 .bss           0x00000000c002cfe0       0xe0 krnl/atexit.32
                0x00000000c002cfe0                KiNextAtexitHandler
                0x00000000c002d000                KiAtexitContexts
                0x00000000c002d060                KiAtexitHandlers
 .bss           0x00000000c002d0c0        0x4 krnl/bootflags.32
                0x00000000c002d0c0                keBootSettings
 .bss           0x00000000c002d0c4        0x0 krnl/bootmsg.32
 .bss           0x00000000c002d0c4        0x0 krnl/c++.32
 .bss           0x00000000c002d0c4        0x0 krnl/cdefs.32
 .bss           0x00000000c002d0c4        0x4 krnl/cm.32
 .bss           0x00000000c002d0c8        0x0 krnl/compat.32
 .bss           0x00000000c002d0c8        0x6 krnl/computer.32
                0x00000000c002d0c8                computer
                0x00000000c002d0cc                keIsPreemptionOn
                0x00000000c002d0cd                keIsSchedulingOn
 .bss           0x00000000c002d0ce        0x0 krnl/crc32.32
 *fill*         0x00000000c002d0ce        0x2 
 .bss           0x00000000c002d0d0        0x8 krnl/env.32
                0x00000000c002d0d0                KeUserEnv
                0x00000000c002d0d4                KeSystemEnv
 *fill*         0x00000000c002d0d8        0x8 
 .bss           0x00000000c002d0e0     0x2000 krnl/fault.32
                0x00000000c002d0e0                keInterruptContexts
                0x00000000c002e0e0                keInterruptHandlers
 .bss           0x00000000c002f0e0        0x6 krnl/gdt.32
                0x00000000c002f0e0                gdtDescr
 .bss           0x00000000c002f0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002f0e6        0x2 
 .bss           0x00000000c002f0e8        0x6 krnl/idt.32
                0x00000000c002f0e8                idtDescr
 .bss           0x00000000c002f0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002f0ee       0x12 
 .bss           0x00000000c002f100       0x24 krnl/intlformat.32
                0x00000000c002f100                keLocale
 .bss           0x00000000c002f124        0x0 krnl/intops.32
 .bss           0x00000000c002f124        0x0 krnl/kheap.32
 .bss           0x00000000c002f124        0x0 krnl/mailbox.32
 .bss           0x00000000c002f124        0x0 krnl/main.32
 .bss           0x00000000c002f124        0x0 krnl/mutex.32
 .bss           0x00000000c002f124        0x1 krnl/panic.32
                0x00000000c002f124                KeIsKernelInPanic
 *fill*         0x00000000c002f125        0x3 
 .bss           0x00000000c002f128       0x29 krnl/physmgr.32
                0x00000000c002f128                Phys::forbidEvictions
                0x00000000c002f12c                Phys::currentPagePointer
                0x00000000c002f130                Phys::highestMem
                0x00000000c002f134                Phys::oldPercent
                0x00000000c002f138                Phys::usedPages
                0x00000000c002f13c                Phys::usablePages
                0x00000000c002f140                Phys::dmaUsage
 .bss           0x00000000c002f151        0x0 krnl/pipe.32
 *fill*         0x00000000c002f151        0xf 
 .bss           0x00000000c002f160       0x48 krnl/powctrl.32
                0x00000000c002f160                keSleepFunction
                0x00000000c002f164                keRestartFunction
                0x00000000c002f168                keShutdownFunction
                0x00000000c002f16c                powCtrlOnBattery
                0x00000000c002f180                currentPowerSettings
                0x00000000c002f1a4                secondsSinceLastUserIO
 .bss           0x00000000c002f1a8        0x8 krnl/random.32
                0x00000000c002f1a8                kiRandSeed
 .bss           0x00000000c002f1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002f1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002f1b0        0x0 krnl/signal.32
 .bss           0x00000000c002f1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002f1b0        0x9 krnl/terminal.32
                0x00000000c002f1b0                terminalCycle
                0x00000000c002f1b4                activeTerminal
                0x00000000c002f1b8                VgaText::graphicMode
 *fill*         0x00000000c002f1b9        0x1 
 .bss           0x00000000c002f1ba        0x2 krnl/tss.32
                0x00000000c002f1ba                doubleFaultSelector
 *fill*         0x00000000c002f1bc        0x4 
 .bss           0x00000000c002f1c0       0x84 krnl/unixfile.32
                0x00000000c002f1c0                sfileLpt
                0x00000000c002f200                sfileCom
                0x00000000c002f224                sfileNul
                0x00000000c002f228                sfilePnt
                0x00000000c002f22c                sfileAux
                0x00000000c002f230                sfileCon
                0x00000000c002f234                initialFilesAdded
                0x00000000c002f238                unixFileLinkedList
 .bss           0x00000000c002f244       0x10 krnl/virtmgr.32
                0x00000000c002f244                twswaps
                0x00000000c002f248                swapBalance
                0x00000000c002f24c                Virt::swapfileBitmap
                0x00000000c002f250                keFirstVAS
 .bss           0x00000000c002f254        0x0 sys/alarm.32
 .bss           0x00000000c002f254        0x0 sys/eject.32
 .bss           0x00000000c002f254        0x0 sys/exit.32
 .bss           0x00000000c002f254        0x0 sys/getcwd.32
 .bss           0x00000000c002f254        0x0 sys/getpid.32
 .bss           0x00000000c002f254        0x0 sys/getramdata.32
 .bss           0x00000000c002f254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002f254        0x0 sys/kill.32
 .bss           0x00000000c002f254        0x0 sys/loaddll.32
 .bss           0x00000000c002f254        0x0 sys/pause.32
 .bss           0x00000000c002f254        0x0 sys/pthread.32
 .bss           0x00000000c002f254        0x0 sys/read.32
 .bss           0x00000000c002f254        0x0 sys/registersignal.32
 .bss           0x00000000c002f254        0x0 sys/registry.32
 .bss           0x00000000c002f254        0x0 sys/sbrk.32
 .bss           0x00000000c002f254        0x0 sys/setcwd.32
 .bss           0x00000000c002f254        0x0 sys/settime.32
 .bss           0x00000000c002f254        0x0 sys/symlink.32
 .bss           0x00000000c002f254        0x0 sys/timezone.32
 .bss           0x00000000c002f254        0x0 sys/truncate.32
 .bss           0x00000000c002f254        0x0 sys/write.32
 .bss           0x00000000c002f254        0x0 sys/wsbe.32
 .bss           0x00000000c002f254        0x0 sys/yield.32
 .bss           0x00000000c002f254        0x0 thr/alarm.32
 *fill*         0x00000000c002f254        0xc 
 .bss           0x00000000c002f260      0x7a4 thr/elf.32
                0x00000000c002f260                Thr::driverLookupNext
                0x00000000c002f280                Thr::driverLookupLen
                0x00000000c002f480                Thr::driverLookupAddr
                0x00000000c002f680                Thr::driverNameLookup
                0x00000000c002f880                Thr::kernelSymbols
                0x00000000c002f900                Thr::kernelStringTable
                0x00000000c002f980                Thr::kernelSymbolTable
                0x00000000c002fa00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002fa04        0x0 thr/exec.32
 *fill*         0x00000000c002fa04        0x4 
 .bss           0x00000000c002fa08       0x70 thr/prcssthr.32
                0x00000000c002fa08                keRestorePreemptionValue
                0x00000000c002fa0c                kePreemptionDisableCounter
                0x00000000c002fa10                cleanerThread
                0x00000000c002fa14                weNeedTheCleanerToNotBlock
                0x00000000c002fa18                retValLockStuff
                0x00000000c002fa1c                retValSchedLock
                0x00000000c002fa20                lockStuffLock
                0x00000000c002fa24                schedulerLock
                0x00000000c002fa28                taskSwitchesPostponedFlag
                0x00000000c002fa2c                postponeTaskSwitchesCounter
                0x00000000c002fa30                irqDisableCounter
                0x00000000c002fa34                terminatedTaskList
                0x00000000c002fa40                sleepingTaskList
                0x00000000c002fa4c                taskList
                0x00000000c002fa58                kernelProcess
 *fill*         0x00000000c002fa78        0x8 
 .bss           0x00000000c002fa80       0x40 vm86/vm8086.32
                0x00000000c002fa80                Vm::started8086Yet
                0x00000000c002fa84                Vm::vmRetV
                0x00000000c002fa88                Vm::vmDone
                0x00000000c002fa89                Vm::vmReady
                0x00000000c002fa8c                Vm::vm86Thread
                0x00000000c002fa90                Vm::vmToHostCommsPtr
                0x00000000c002faa0                Vm::vmToHostComms
 .bss           0x00000000c002fac0       0x41 arch/i386/apic.32
                0x00000000c002fac0                noOfIOAPICs
                0x00000000c002fae0                ioapics
                0x00000000c002fb00                IOAPICsSetupYet
 *fill*         0x00000000c002fb01        0x3 
 .bss           0x00000000c002fb04       0x50 arch/i386/hal.32
                0x00000000c002fb04                guiPanicHandler
                0x00000000c002fb08                fpuOwner
                0x00000000c002fb0c                coproLoadFunc
                0x00000000c002fb10                coproSaveFunc
                0x00000000c002fb14                lastD
                0x00000000c002fb18                lastC
                0x00000000c002fb1c                lastB
                0x00000000c002fb20                lastA
                0x00000000c002fb24                HalPageWriteCombiningFlag
                0x00000000c002fb28                HalPageGlobalFlag
                0x00000000c002fb2c                keNMIEnabled
                0x00000000c002fb30                vendorIDString
                0x00000000c002fb3d                familyID
                0x00000000c002fb3e                model
                0x00000000c002fb3f                processorType
                0x00000000c002fb40                steppingID
                0x00000000c002fb44                vendor
                0x00000000c002fb48                opcodeDetectionMode
                0x00000000c002fb4c                features
 .bss           0x00000000c002fb54        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002fb54        0x0 arch/i386/pic.32
 .bss           0x00000000c002fb54        0x2 arch/i386/rtc.32
 .bss           0x00000000c002fb56        0x0 arch/i386/vga.32
 *fill*         0x00000000c002fb56        0xa 
 .bss           0x00000000c002fb60       0xf0 fs/fat/vfslink.32
                0x00000000c002fb60                FAT::fats
                0x00000000c002fb80                FAT::vfsToFatRemaps
                0x00000000c002fc00                fatToVFSRemaps
 .bss           0x00000000c002fc50        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002fc50       0x10 
 .bss           0x00000000c002fc60      0x820 fs/iso9660/vfslink.32
                0x00000000c002fc60                iso9660Owner
                0x00000000c002fc64                recentSector
                0x00000000c002fc80                recentBuffer
 .bss           0x00000000c0030480        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0030480        0x0 hal/sound/sndport.32
 .bss           0x00000000c0030480        0xd hw/bus/pci.32
                0x00000000c0030480                thePCI
 .bss           0x00000000c003048d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c003048d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c003048d        0x3 
 .bss           0x00000000c0030490        0x8 hw/diskphys/ata.32
                0x00000000c0030490                ataSectorsWritten
                0x00000000c0030494                ataSectorsRead
 .bss           0x00000000c0030498        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0030498        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0030498        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c0030498        0x0 hw/timer/apictimer.32
 .bss           0x00000000c0030498        0x4 hw/timer/pit.32
                0x00000000c0030498                pitFreq
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c003049c        0x0 crtn.32
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c003049c        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c003049c                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0037937                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
