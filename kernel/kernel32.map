Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c2da
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 *fill*         0x00000000c0001afb        0x1 
 .text          0x00000000c0001afc      0x1f2 libk/ctype.32
                0x00000000c0001afc                isblank
                0x00000000c0001b1c                iscntrl
                0x00000000c0001b3c                isdigit
                0x00000000c0001b58                islower
                0x00000000c0001b74                isspace
                0x00000000c0001b9c                isupper
                0x00000000c0001bb8                isalpha
                0x00000000c0001be8                isalnum
                0x00000000c0001c18                ispunct
                0x00000000c0001c58                isgraph
                0x00000000c0001c88                isprint
                0x00000000c0001cb0                isxdigit
 .text          0x00000000c0001cee        0x0 libk/string.32
 .text          0x00000000c0001cee       0x51 fs/fat/diskio.32
                0x00000000c0001cee                disk_status
                0x00000000c0001cf1                disk_initialize
                0x00000000c0001cf4                disk_read
                0x00000000c0001d0a                disk_write
                0x00000000c0001d20                disk_ioctl
 .text          0x00000000c0001d3f     0x3d4b fs/fat/ff.32
                0x00000000c0003adb                f_mount
                0x00000000c0003b3d                f_open
                0x00000000c0003e08                f_read
                0x00000000c0004007                f_write
                0x00000000c000423b                f_sync
                0x00000000c00042f0                f_close
                0x00000000c000431f                f_lseek
                0x00000000c00044c6                f_opendir
                0x00000000c0004591                f_closedir
                0x00000000c00045b3                f_readdir
                0x00000000c0004645                f_stat
                0x00000000c00046c4                f_getfree
                0x00000000c00047c6                f_truncate
                0x00000000c00048aa                f_unlink
                0x00000000c00049cc                f_mkdir
                0x00000000c0004b67                f_rename
                0x00000000c0004d1d                f_chmod
                0x00000000c0004dc6                f_utime
                0x00000000c0004e74                f_getlabel
                0x00000000c0004fc5                f_setlabel
                0x00000000c0005155                f_expand
                0x00000000c00052b5                f_mkfs
 *fill*         0x00000000c0005a8a        0x2 
 .text          0x00000000c0005a8c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a8c                ff_memalloc
                0x00000000c0005aa4                ff_memfree
 *fill*         0x00000000c0005abb        0x1 
 .text          0x00000000c0005abc      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005abc                ff_uni2oem
                0x00000000c0005b5c                ff_oem2uni
                0x00000000c0005bd4                ff_wtoupper
 .text          0x00000000c0005d64     0x114b fs/iso9660/iso9660.32
                0x00000000c0006064                isoReadDiscSector
                0x00000000c0006145                strnicmp
                0x00000000c00064a8                stricmp
                0x00000000c0006502                iso_open
                0x00000000c00065d2                iso_close
                0x00000000c00065ed                iso_read
                0x00000000c00067eb                iso_seek
                0x00000000c00068c9                iso_tell
                0x00000000c0006926                iso_total
                0x00000000c000696f                fn_postprocess
                0x00000000c00069be                iso_readdir
                0x00000000c0006c88                iso_reset
                0x00000000c0006c98                init_percd
                0x00000000c0006d9d                iso_ioctl
                0x00000000c0006da8                fs_iso9660_init
                0x00000000c0006e37                fs_iso9660_shutdown
 .text          0x00000000c0006eaf       0x94 compat/inlines.32
                0x00000000c0006eaf                CPU::current()
                0x00000000c0006ebb                operator new(unsigned long)
                0x00000000c0006ec0                operator delete(void*)
                0x00000000c0006ec5                disableIRQs()
                0x00000000c0006ec7                enableIRQs()
                0x00000000c0006ec9                lockScheduler()
                0x00000000c0006ed1                unlockScheduler()
                0x00000000c0006ee0                lockStuff()
                0x00000000c0006eee                unlockStuff()
                0x00000000c0006f28                Virt::getAKernelVAS()
                0x00000000c0006f2e                __not_memcpy
 *fill*         0x00000000c0006f43        0x1 
 .text          0x00000000c0006f44      0x118 compat/resolve.32
                0x00000000c0006f44                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c000705c      0x68b core/computer.32
                0x00000000c000705c                Computer::close(int, int, void*)
                0x00000000c00070a1                Krnl::firstTask()
                0x00000000c00071da                Computer::Computer()
                0x00000000c00071da                Computer::Computer()
                0x00000000c000728c                Computer::setBootMessage(char const*)
                0x00000000c000728e                Computer::detectFeatures()
                0x00000000c0007498                Computer::displayFeatures()
                0x00000000c000749a                Computer::rdmsr(unsigned int)
                0x00000000c00074c6                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00074fe                Computer::shutdown()
                0x00000000c0007516                Computer::restart()
                0x00000000c000752e                Computer::sleep()
                0x00000000c0007542                Computer::nmiEnabled()
                0x00000000c000754e                Computer::readCMOS(unsigned char)
                0x00000000c0007568                Computer::enableNMI(bool)
                0x00000000c0007580                Computer::open(int, int, void*)
                0x00000000c0007654                Computer::disableNMI()
                0x00000000c0007664                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0007682                Computer::handleNMI()
 *fill*         0x00000000c00076e7        0x1 
 .text          0x00000000c00076e8      0x1cf core/gdt.32
                0x00000000c00076e8                GDTEntry::setBase(unsigned int)
                0x00000000c0007704                GDTEntry::setLimit(unsigned int)
                0x00000000c0007722                GDT::GDT()
                0x00000000c0007722                GDT::GDT()
                0x00000000c0007738                GDT::addEntry(GDTEntry)
                0x00000000c000775a                GDT::getNumberOfEntries()
                0x00000000c0007762                GDT::flush()
                0x00000000c0007784                GDT::setup()
 .text          0x00000000c00078b7       0x19 core/idle.32
                0x00000000c00078b7                idleFunction(void*)
 .text          0x00000000c00078d0      0x464 core/idt.32
                0x00000000c00078d0                IDTEntry::IDTEntry(bool)
                0x00000000c00078d0                IDTEntry::IDTEntry(bool)
                0x00000000c0007942                IDTEntry::setOffset(unsigned int)
                0x00000000c0007958                IDT::IDT()
                0x00000000c0007958                IDT::IDT()
                0x00000000c000795a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0007962                IDT::addEntry(IDTEntry, int)
                0x00000000c000797c                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00079b4                IDT::flush()
                0x00000000c00079ce                IDT::setup()
 .text          0x00000000c0007d34      0x183 core/kheap.32
                0x00000000c0007d34                sbrk
                0x00000000c0007dc9                mmap
                0x00000000c0007ddf                munmap
                0x00000000c0007df5                liballoc_lock()
                0x00000000c0007e02                liballoc_unlock()
                0x00000000c0007e16                liballoc_alloc(int)
                0x00000000c0007e2e                liballoc_free(void*, int)
                0x00000000c0007e49                realloc
                0x00000000c0007e5d                malloc
                0x00000000c0007e6d                free
                0x00000000c0007e7d                rfree
                0x00000000c0007e8d                calloc
 .text          0x00000000c0007eb7      0x1b4 core/main.32
                0x00000000c0007eb7                Krnl::setBootMessage(char const*)
                0x00000000c0007f23                kernel_main
 .text          0x00000000c000806b      0x5dc core/physmgr.32
                0x00000000c000806b                Phys::allocateDMA(unsigned long)
                0x00000000c0008142                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0008175                Phys::setPageState(unsigned long, bool)
                0x00000000c00081a7                Phys::getPageState(unsigned long)
                0x00000000c00081c8                Phys::freePage(unsigned long)
                0x00000000c000822a                Phys::allocatePage()
                0x00000000c00082e8                Phys::allocateContiguousPages(int)
                0x00000000c0008344                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000837c                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008647        0x1 
 .text          0x00000000c0008648      0x273 core/pipe.32
                0x00000000c0008648                Pipe::isAtty()
                0x00000000c000864c                Pipe::~Pipe()
                0x00000000c000864c                Pipe::~Pipe()
                0x00000000c0008670                Pipe::~Pipe()
                0x00000000c0008698                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008758                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008854                Pipe::Pipe(int)
                0x00000000c0008854                Pipe::Pipe(int)
 *fill*         0x00000000c00088bb        0x1 
 .text          0x00000000c00088bc      0xa1e core/terminal.32
                0x00000000c00088bc                VgaText::isAtty()
                0x00000000c00088c0                VgaText::~VgaText()
                0x00000000c00088c0                VgaText::~VgaText()
                0x00000000c00088e4                VgaText::~VgaText()
                0x00000000c000890e                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000892e                setTerminalScrollLock(bool)
                0x00000000c000892f                doTerminalCycle()
                0x00000000c0008930                addToTerminalCycle(VgaText*)
                0x00000000c0008931                scrollTerminalScrollLock(int)
                0x00000000c0008932                VgaText::updateTitle()
                0x00000000c0008934                VgaText::load()
                0x00000000c0008936                VgaText::updateCursor()
                0x00000000c000894c                VgaText::doANSI_SGR(int)
                0x00000000c00089c0                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00089d0                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00089e0                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0008a00                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008a0c                VgaText::setTitleColour(VgaColour)
                0x00000000c0008a18                VgaText::setTitle(char*)
                0x00000000c0008a1a                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008a2c                VgaText::scrollScreen()
                0x00000000c0008ac4                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008ad6                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008b66                VgaText::getCursorX()
                0x00000000c0008b6e                VgaText::getCursorY()
                0x00000000c0008b76                VgaText::setCursor(int, int)
                0x00000000c0008b8d                setActiveTerminal(VgaText*)
                0x00000000c0008bd8                VgaText::clearScreen()
                0x00000000c0008c26                VgaText::setCursorX(int)
                0x00000000c0008c3e                VgaText::setCursorY(int)
                0x00000000c0008c56                VgaText::incrementCursor(bool)
                0x00000000c0008caa                VgaText::decrementCursor(bool)
                0x00000000c0008ccc                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008d9a                VgaText::putchar(char)
                0x00000000c0008e86                VgaText::putx(unsigned int)
                0x00000000c0008ecc                VgaText::puts(char const*)
                0x00000000c0008ef2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008f3e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0009090                VgaText::VgaText(char const*)
                0x00000000c0009090                VgaText::VgaText(char const*)
                0x00000000c00091dc                VgaText::receiveKey(unsigned char)
                0x00000000c00092b4                VgaText::doUpdate()
                0x00000000c00092b5                newTerminal(char*)
 *fill*         0x00000000c00092da        0x2 
 .text          0x00000000c00092dc      0x1a1 core/tss.32
                0x00000000c00092dc                TSS::TSS()
                0x00000000c00092dc                TSS::TSS()
                0x00000000c00092ec                TSS::setESP(unsigned long)
                0x00000000c0009300                TSS::flush()
                0x00000000c0009320                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000947d        0x1 
 .text          0x00000000c000947e      0x4c2 core/unixfile.32
                0x00000000c000947e                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00094d4                ReservedFilename::isAtty()
                0x00000000c00094f0                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000954e                UnixFile::getFileDescriptor()
                0x00000000c0009556                UnixFile::UnixFile(int)
                0x00000000c0009556                UnixFile::UnixFile(int)
                0x00000000c0009706                ReservedFilename::ReservedFilename(int)
                0x00000000c0009706                ReservedFilename::ReservedFilename(int)
                0x00000000c0009738                UnixFile::~UnixFile()
                0x00000000c0009738                UnixFile::~UnixFile()
                0x00000000c00097d0                UnixFile::~UnixFile()
                0x00000000c00097f8                ReservedFilename::~ReservedFilename()
                0x00000000c00097f8                ReservedFilename::~ReservedFilename()
                0x00000000c000981c                ReservedFilename::~ReservedFilename()
                0x00000000c0009843                getFromFileDescriptor(int)
 .text          0x00000000c0009940     0x1166 core/virtmgr.32
                0x00000000c0009940                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009975                Virt::getPageState(unsigned long)
                0x00000000c0009999                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009aaa                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009ac8                Virt::swapIDToSector(unsigned long)
                0x00000000c0009ada                Virt::allocateSwapfilePage()
                0x00000000c0009b58                Virt::virtualMemorySetup()
                0x00000000c0009ba3                Virt::setupPageSwapping(int)
                0x00000000c0009c14                VAS::VAS()
                0x00000000c0009c14                VAS::VAS()
                0x00000000c0009c50                VAS::VAS(VAS*)
                0x00000000c0009c50                VAS::VAS(VAS*)
                0x00000000c0009c7e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009caa                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009cc9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009dee                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009e12                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009e2c                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009e6c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009ea0                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009eca                VAS::~VAS()
                0x00000000c0009eca                VAS::~VAS()
                0x00000000c000a02e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000a132                VAS::allocatePages(int, int)
                0x00000000c000a30a                VAS::setCPUSpecific(unsigned long)
                0x00000000c000a328                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a3ee                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a4dc                VAS::VAS(bool)
                0x00000000c000a4dc                VAS::VAS(bool)
                0x00000000c000a75c                VAS::evict(unsigned long)
                0x00000000c000a81e                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a90c                VAS::scanForEviction()
                0x00000000c000a9ec                mapVASFirstTime
 .text          0x00000000c000aaa6       0x5f coreobjs/c++.32
                0x00000000c000aaa6                __cxa_atexit
                0x00000000c000aaa9                __cxa_finalize
                0x00000000c000aaaa                __stack_chk_fail
                0x00000000c000aae0                __cxa_pure_virtual
                0x00000000c000aaf1                operator new[](unsigned long)
                0x00000000c000aaf6                operator delete(void*, unsigned long)
                0x00000000c000aafb                operator delete[](void*)
                0x00000000c000ab00                operator delete[](void*, unsigned long)
 .text          0x00000000c000ab05      0x21c dbg/kconsole.32
                0x00000000c000ab05                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ab70                Dbg::logc(char)
                0x00000000c000ab90                Dbg::logs(char*)
                0x00000000c000abad                Dbg::logWriteInt(unsigned int)
                0x00000000c000abcb                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000abec                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000ad21        0x1 
 .text          0x00000000c000ad22      0xc5c fs/vfs.32
                0x00000000c000ad22                File::read(unsigned long long, void*, int*)
                0x00000000c000ad7a                File::write(unsigned long long, void*, int*)
                0x00000000c000add2                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ae2a                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ae58                File::isAtty()
                0x00000000c000ae5c                Directory::isAtty()
                0x00000000c000ae60                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ae66                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ae6c                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ae72                File::~File()
                0x00000000c000ae72                File::~File()
                0x00000000c000ae96                File::~File()
                0x00000000c000aec0                Directory::~Directory()
                0x00000000c000aec0                Directory::~Directory()
                0x00000000c000aee4                Directory::~Directory()
                0x00000000c000af0e                Filesystem::Filesystem()
                0x00000000c000af0e                Filesystem::Filesystem()
                0x00000000c000af32                Filesystem::~Filesystem()
                0x00000000c000af32                Filesystem::~Filesystem()
                0x00000000c000af40                Filesystem::~Filesystem()
                0x00000000c000af64                Fs::getcwd(Process*, char*, int)
                0x00000000c000af8e                Fs::initVFS()
                0x00000000c000afb8                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b162                File::File(char const*, Process*)
                0x00000000c000b162                File::File(char const*, Process*)
                0x00000000c000b222                File::open(FileOpenMode)
                0x00000000c000b280                File::close()
                0x00000000c000b2e0                File::seek(unsigned long long)
                0x00000000c000b336                File::tell(unsigned long long*)
                0x00000000c000b386                File::rewind()
                0x00000000c000b39a                File::unlink()
                0x00000000c000b3e6                File::rename(char const*)
                0x00000000c000b434                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b490                File::exists()
                0x00000000c000b4ce                File::stat(unsigned long long*, bool*)
                0x00000000c000b52f                Fs::setcwd(Process*, char*)
                0x00000000c000b68c                Directory::Directory(char const*, Process*)
                0x00000000c000b68c                Directory::Directory(char const*, Process*)
                0x00000000c000b74c                Directory::open()
                0x00000000c000b7a8                Directory::close()
                0x00000000c000b808                Directory::unlink()
                0x00000000c000b854                Directory::rename(char const*)
                0x00000000c000b8a2                Directory::exists()
                0x00000000c000b8e0                Directory::read(dirent*)
                0x00000000c000b92c                Directory::create()
                0x00000000c000b978                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b97e        0x2 
 .text          0x00000000c000b980       0x86 hal/bus.32
                0x00000000c000b980                Bus::Bus(char const*)
                0x00000000c000b980                Bus::Bus(char const*)
                0x00000000c000b9b8                Bus::~Bus()
                0x00000000c000b9b8                Bus::~Bus()
                0x00000000c000b9dc                Bus::~Bus()
 .text          0x00000000c000ba06       0x96 hal/buzzer.32
                0x00000000c000ba06                beepThread(void*)
                0x00000000c000ba43                Krnl::beep(int, int, bool)
 .text          0x00000000c000ba9c      0x46d hal/clock.32
                0x00000000c000ba9c                User::loadClockSettings(int)
                0x00000000c000baee                Clock::Clock(char const*)
                0x00000000c000baee                Clock::Clock(char const*)
                0x00000000c000bb24                Clock::~Clock()
                0x00000000c000bb24                Clock::~Clock()
                0x00000000c000bb48                Clock::~Clock()
                0x00000000c000bb72                Clock::timeInSecondsLocal()
                0x00000000c000bbba                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000bc13                datetimeToSeconds(datetime_t)
                0x00000000c000bd40                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bda0                secondsToDatetime(unsigned long long)
                0x00000000c000bee4                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bf09        0x1 
 .text          0x00000000c000bf0a      0x464 hal/device.32
                0x00000000c000bf0a                Device::hibernate()
                0x00000000c000bf0c                Device::wake()
                0x00000000c000bf0e                Device::detect()
                0x00000000c000bf10                Device::disableLegacy()
                0x00000000c000bf12                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bf14                DriverlessDevice::close(int, int, void*)
                0x00000000c000bf18                DriverlessDevice::detect()
                0x00000000c000bf1a                DriverlessDevice::open(int, int, void*)
                0x00000000c000bf2e                Device::~Device()
                0x00000000c000bf2e                Device::~Device()
                0x00000000c000bf3c                Device::~Device()
                0x00000000c000bf64                Device::findAndLoadDriver()
                0x00000000c000bf72                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bf98                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bfd8                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c002                Device::getParent()
                0x00000000c000c00e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c02c                Device::addChild(Device*)
                0x00000000c000c070                Device::removeAllChildren()
                0x00000000c000c0b6                Device::hibernateAll()
                0x00000000c000c0e6                Device::wakeAll()
                0x00000000c000c116                Device::detectAll()
                0x00000000c000c146                Device::disableLegacyAll()
                0x00000000c000c148                Device::loadDriversForAll()
                0x00000000c000c14a                Device::closeAll()
                0x00000000c000c180                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c1b6                Device::setName(char const*)
                0x00000000c000c1c4                Device::Device(char const*)
                0x00000000c000c1c4                Device::Device(char const*)
                0x00000000c000c2c0                Device::getName()
                0x00000000c000c2ca                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c2ca                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c300                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c344                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c36e        0x2 
 .text          0x00000000c000c370       0x86 hal/diskctrl.32
                0x00000000c000c370                HardDiskController::HardDiskController(char const*)
                0x00000000c000c370                HardDiskController::HardDiskController(char const*)
                0x00000000c000c3a8                HardDiskController::~HardDiskController()
                0x00000000c000c3a8                HardDiskController::~HardDiskController()
                0x00000000c000c3cc                HardDiskController::~HardDiskController()
 .text          0x00000000c000c3f6       0xe2 hal/diskphys.32
                0x00000000c000c3f6                PhysicalDisk::eject()
                0x00000000c000c3fa                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c3fa                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c462                PhysicalDisk::startCache()
                0x00000000c000c48a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c48a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c4ae                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c4d8        0x0 hal/fpu.32
 .text          0x00000000c000c4d8      0x35d hal/intctrl.32
                0x00000000c000c4d8                int_handler
                0x00000000c000c560                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c5a8                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c6e0                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c714                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c793                setupINTS()
                0x00000000c000c7f0                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c835        0x1 
 .text          0x00000000c000c836      0x78c hal/keybrd.32
                0x00000000c000c836                startGUI(void*)
                0x00000000c000c8a2                startGUIVESA(void*)
                0x00000000c000c90e                sendKeyToTerminal(unsigned char)
                0x00000000c000c9d1                sendKeyboardToken(KeyboardToken)
                0x00000000c000ce11                clearInternalKeybuffer(VgaText*)
                0x00000000c000ce46                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000cf38                Keyboard::Keyboard(char const*)
                0x00000000c000cf38                Keyboard::Keyboard(char const*)
                0x00000000c000cf74                Keyboard::~Keyboard()
                0x00000000c000cf74                Keyboard::~Keyboard()
                0x00000000c000cf98                Keyboard::~Keyboard()
 .text          0x00000000c000cfc2      0x3ea hal/logidisk.32
                0x00000000c000cfc2                LogicalDisk::close(int, int, void*)
                0x00000000c000cfc6                LogicalDisk::~LogicalDisk()
                0x00000000c000cfc6                LogicalDisk::~LogicalDisk()
                0x00000000c000cfea                LogicalDisk::~LogicalDisk()
                0x00000000c000d014                LogicalDisk::open(int, int, void*)
                0x00000000c000d028                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d060                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d0a6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d0a6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d15c                LogicalDisk::assignDriveLetter()
                0x00000000c000d212                LogicalDisk::mount()
                0x00000000c000d25a                LogicalDisk::unmount()
                0x00000000c000d26a                LogicalDisk::eject()
                0x00000000c000d27e                LogicalDisk::unassignDriveLetter()
                0x00000000c000d2d4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d340                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000d3ac       0x86 hal/mouse.32
                0x00000000c000d3ac                Mouse::Mouse(char const*)
                0x00000000c000d3ac                Mouse::Mouse(char const*)
                0x00000000c000d3e4                Mouse::~Mouse()
                0x00000000c000d3e4                Mouse::~Mouse()
                0x00000000c000d408                Mouse::~Mouse()
 .text          0x00000000c000d432      0x339 hal/partition.32
                0x00000000c000d432                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d4da                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d76b        0x1 
 .text          0x00000000c000d76c       0x86 hal/serial.32
                0x00000000c000d76c                Serial::Serial(char const*)
                0x00000000c000d76c                Serial::Serial(char const*)
                0x00000000c000d7a4                Serial::~Serial()
                0x00000000c000d7a4                Serial::~Serial()
                0x00000000c000d7c8                Serial::~Serial()
 *fill*         0x00000000c000d7f2        0x2 
 .text          0x00000000c000d7f4      0x234 hal/timer.32
                0x00000000c000d7f4                Timer::Timer(char const*)
                0x00000000c000d7f4                Timer::Timer(char const*)
                0x00000000c000d82c                Timer::~Timer()
                0x00000000c000d82c                Timer::~Timer()
                0x00000000c000d850                Timer::~Timer()
                0x00000000c000d87a                Timer::read()
                0x00000000c000d885                setupTimer(int)
                0x00000000c000d8c0                timerHandler(unsigned int)
 .text          0x00000000c000da28      0x43e hal/vcache.32
                0x00000000c000da28                VCache::VCache(PhysicalDisk*)
                0x00000000c000da28                VCache::VCache(PhysicalDisk*)
                0x00000000c000db90                VCache::invalidateReadBuffer()
                0x00000000c000dba0                VCache::writeWriteBuffer()
                0x00000000c000dbec                VCache::~VCache()
                0x00000000c000dbec                VCache::~VCache()
                0x00000000c000dc40                VCache::~VCache()
                0x00000000c000dc68                VCache::write(unsigned long long, int, void*)
                0x00000000c000dd62                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000de66      0x4b3 hal/video.32
                0x00000000c000de66                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000deb2                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000df22                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000dfa0                Video::clearScreen(unsigned int)
                0x00000000c000dfd4                Video::putpixel(int, int, unsigned int)
                0x00000000c000dfe2                Video::Video(char const*)
                0x00000000c000dfe2                Video::Video(char const*)
                0x00000000c000e018                Video::~Video()
                0x00000000c000e018                Video::~Video()
                0x00000000c000e03c                Video::~Video()
                0x00000000c000e066                Video::isMonochrome()
                0x00000000c000e072                Video::getWidth()
                0x00000000c000e07e                Video::getHeight()
                0x00000000c000e08a                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000e146                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e2ae                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e319        0x3 
 .text          0x00000000c000e31c     0x1307 hw/acpi.32
                0x00000000c000e31c                ACPI::close(int, int, void*)
                0x00000000c000e3d4                findRSDP()
                0x00000000c000e464                loadACPITables(unsigned char*)
                0x00000000c000e6c8                findRSDT(unsigned char*)
                0x00000000c000e818                findDataTable(unsigned char*, char*)
                0x00000000c000e890                scanMADT()
                0x00000000c000ed64                ACPI::ACPI()
                0x00000000c000ed64                ACPI::ACPI()
                0x00000000c000edb8                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000eea0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef68                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef70                ACPI::detectPCI()
                0x00000000c000f178                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f1cc                ACPI::sleep()
                0x00000000c000f1e8                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f623        0x1 
 .text          0x00000000c000f624      0xb95 hw/cpu.32
                0x00000000c000f624                CPU::close(int, int, void*)
                0x00000000c000f628                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f644                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f65c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f6d0                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f754                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f782                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f7b0                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f7de                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f80c                CPU::CPU()
                0x00000000c000f80c                CPU::CPU()
                0x00000000c000f89a                CPU::displayFeatures()
                0x00000000c000f89c                CPU::detectFeatures()
                0x00000000c000ff60                CPU::setupSMEP()
                0x00000000c000ff6c                CPU::setupUMIP()
                0x00000000c000ff76                CPU::setupTSC()
                0x00000000c000ff80                CPU::setupLargePages()
                0x00000000c000ff8a                CPU::setupPAT()
                0x00000000c000ffc6                CPU::setupMTRR()
                0x00000000c000ffc8                CPU::setupGlobalPages()
                0x00000000c000ffd2                CPU::allowUsermodeDataAccess()
                0x00000000c000ffe4                CPU::prohibitUsermodeDataAccess()
                0x00000000c000fff6                CPU::setupSMAP()
                0x00000000c0010004                CPU::setupFeatures()
                0x00000000c00100d0                CPU::open(int, int, void*)
 *fill*         0x00000000c00101b9        0x1 
 .text          0x00000000c00101ba      0x581 krnl/env.32
                0x00000000c00101ba                EnvVarContainer::getEnv(char const*)
                0x00000000c00101f8                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00102ba                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00102bc                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00104a2                EnvVarContainer::__loadSystem()
                0x00000000c00104bc                EnvVarContainer::__loadUser()
                0x00000000c00104be                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104be                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104e0                EnvVarContainer::~EnvVarContainer()
                0x00000000c00104e0                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010510                Krnl::getEnv(Process*, char const*)
                0x00000000c0010575                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001058f                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00105ae                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00105c1                Krnl::deleteEnvSystem(char const*)
                0x00000000c00105c2                Krnl::deleteEnvUser(char const*)
                0x00000000c00105c3                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00105c4                Krnl::newProcessEnv(Process*)
                0x00000000c00105e6                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010632                Krnl::loadSystemEnv()
                0x00000000c0010660                Krnl::loadUserEnv()
                0x00000000c0010686                Krnl::flushEnv()
                0x00000000c0010687                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00106a7                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001073b      0x108 krnl/panic.32
                0x00000000c001073b                Krnl::panic(char const*)
 .text          0x00000000c0010843      0x142 krnl/powctrl.32
                0x00000000c0010843                Krnl::powerThread(void*)
                0x00000000c0010871                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010887                Krnl::userIOReceived()
                0x00000000c0010892                Krnl::handlePowerButton()
                0x00000000c00108c7                Krnl::handleSleepButton()
                0x00000000c00108fc                Krnl::setupPowerManager()
 .text          0x00000000c0010985      0x50e reg/registry.32
                0x00000000c0010985                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0010add                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0010c32                Reg::getLine(char*, char*, char*)
                0x00000000c0010c69                Reg::readInt(char*, char*, int*)
                0x00000000c0010d54                Reg::readString(char*, char*, char*, int)
                0x00000000c0010dd5                Reg::readBool(char*, char*, bool*)
                0x00000000c0010dfa                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0010e26                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0010e52                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0010e93       0x36 sys/sc_eject.32
                0x00000000c0010e93                Sys::eject(regs*)
 .text          0x00000000c0010ec9       0x18 sys/sc_exit.32
                0x00000000c0010ec9                Sys::exit(regs*)
 .text          0x00000000c0010ee1       0x1f sys/sc_getcwd.32
                0x00000000c0010ee1                Sys::getCwd(regs*)
 .text          0x00000000c0010f00        0xc sys/sc_getpid.32
                0x00000000c0010f00                Sys::getPID(regs*)
 .text          0x00000000c0010f0c       0x1a sys/sc_getramdata.32
                0x00000000c0010f0c                Sys::getRAMData(regs*)
 .text          0x00000000c0010f26       0x82 sys/sc_getvgaptr.32
                0x00000000c0010f26                Sys::getVGAPtr(regs*)
 .text          0x00000000c0010fa8       0xa8 sys/sc_loaddll.32
                0x00000000c0010fa8                Sys::loadDLL(regs*)
 .text          0x00000000c0011050       0x68 sys/sc_read.32
                0x00000000c0011050                Sys::read(regs*)
 .text          0x00000000c00110b8       0x55 sys/sc_sbrk.32
                0x00000000c00110b8                Sys::sbrk(regs*)
 .text          0x00000000c001110d       0x1c sys/sc_setcwd.32
                0x00000000c001110d                Sys::setCwd(regs*)
 .text          0x00000000c0011129       0x95 sys/sc_settime.32
                0x00000000c0011129                Sys::setTime(regs*)
 .text          0x00000000c00111be       0x4a sys/sc_timezone.32
                0x00000000c00111be                Sys::timezone(regs*)
 .text          0x00000000c0011208       0x68 sys/sc_write.32
                0x00000000c0011208                Sys::write(regs*)
 .text          0x00000000c0011270       0x62 sys/sc_wsbe.32
                0x00000000c0011270                Sys::wsbe(regs*)
 .text          0x00000000c00112d2       0x25 sys/sc_yield.32
                0x00000000c00112d2                Sys::yield(regs*)
 .text          0x00000000c00112f7      0xe2c sys/syscalls.32
                0x00000000c00112f7                sysCallSeekDir(regs*)
                0x00000000c00112fc                sysCallTellDir(regs*)
                0x00000000c0011301                sysCallVerify(regs*)
                0x00000000c001130b                sysCallGetArgc(regs*)
                0x00000000c001131b                sysCallTTYName(regs*)
                0x00000000c0011323                sysFormatDisk(regs*)
                0x00000000c0011390                sysSetDiskVolumeLabel(regs*)
                0x00000000c00113da                sysGetDiskVolumeLabel(regs*)
                0x00000000c001142f                sysShutdown(regs*)
                0x00000000c001148d                sysCallRealpath(regs*)
                0x00000000c00114d0                sysCallReadDir(regs*)
                0x00000000c0011550                sysCallIsATTY(regs*)
                0x00000000c00115ac                sysCallSeek(regs*)
                0x00000000c0011605                sysCallTell(regs*)
                0x00000000c0011674                sysCallSize(regs*)
                0x00000000c00116e9                sysCallSizeFromFilename(regs*)
                0x00000000c001179c                sysCallClose(regs*)
                0x00000000c00117fc                sysCallOpenDir(regs*)
                0x00000000c0011873                sysCallCloseDir(regs*)
                0x00000000c00118c7                sysCallMakeDir(regs*)
                0x00000000c0011939                sysCallWait(regs*)
                0x00000000c0011956                sysCallNotImpl(regs*)
                0x00000000c0011971                sysPanic(regs*)
                0x00000000c001198c                sysCallRmdir(regs*)
                0x00000000c00119f3                sysCallUnlink(regs*)
                0x00000000c0011a5a                sysCallGetArgv(regs*)
                0x00000000c0011aa7                sysCallUSleep(regs*)
                0x00000000c0011ad0                sysCallSpawn(regs*)
                0x00000000c0011b39                sysCallGetEnv(regs*)
                0x00000000c0011be8                sysSetFatAttrib(regs*)
                0x00000000c0011c5f                sysPipe(regs*)
                0x00000000c0011ca4                sysGetUnixTime(regs*)
                0x00000000c0011cb8                string_ends_with(char const*, char const*)
                0x00000000c0011d02                sysCallOpen(regs*)
                0x00000000c0011ef6                Sys::loadSyscalls()
                0x00000000c00120e1                Sys::systemCall(regs*, void*)
 .text          0x00000000c0012123     0x11e5 thr/elf.32
                0x00000000c0012123                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00123af                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00125c5                Thr::runtimeReferenceHelper()
                0x00000000c00125d8                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0012627                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00128e5                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001301b                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001304d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0013084                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001309e                Thr::loadDLL(char const*, bool)
                0x00000000c00132cf                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0013308     0x12c5 thr/prcssthr.32
                0x00000000c0013308                userModeEntryPoint(void*)
                0x00000000c0013330                changeTSS
                0x00000000c0013360                switchToThread(ThreadControlBlock*)
                0x00000000c0013414                Process::addArgs(char**)
                0x00000000c0013474                Process::Process(char const*, Process*, char**)
                0x00000000c0013474                Process::Process(char const*, Process*, char**)
                0x00000000c0013664                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013664                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013820                taskStartupFunction
                0x00000000c001382c                Semaphore::Semaphore(int)
                0x00000000c001382c                Semaphore::Semaphore(int)
                0x00000000c001385c                Mutex::Mutex()
                0x00000000c001385c                Mutex::Mutex()
                0x00000000c0013870                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0013968                Process::createUserThread()
                0x00000000c0013988                setupMultitasking(void (*)())
                0x00000000c0013a90                schedule()
                0x00000000c0013b20                Semaphore::tryAcquire()
                0x00000000c0013bec                Semaphore::assertLocked(char const*)
                0x00000000c0013c64                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013c8c                blockTask(TaskState)
                0x00000000c0013cbc                waitTask(int, int*, int)
                0x00000000c0013d00                milliTenthSleepUntil(unsigned int)
                0x00000000c0013d90                milliTenthSleep(unsigned int)
                0x00000000c0013da0                sleep(unsigned int)
                0x00000000c0013dbc                Semaphore::acquire()
                0x00000000c0013e78                taskReturned
                0x00000000c0013eb4                Thr::processFromPID(int)
                0x00000000c0013f54                unblockTask(ThreadControlBlock*)
                0x00000000c0013ff8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00142c4                cleanerTaskFunction(void*)
                0x00000000c00143b4                terminateTask(int)
                0x00000000c0014480                Thr::terminateFromIRQ(int)
                0x00000000c0014490                Semaphore::release()
 .text          0x00000000c00145cd      0xb93 vm86/vm8086.32
                0x00000000c00145cd                Vm::inbv(unsigned short)
                0x00000000c00145e0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0014616                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0014626                Vm::getSegment(unsigned int)
                0x00000000c001462e                Vm::getOffset(unsigned int)
                0x00000000c0014633                Vm::mainloop2()
                0x00000000c001466d                Vm::mainVm8086Loop(void*)
                0x00000000c001467d                Vm::mainloop3(unsigned long)
                0x00000000c00146a3                Vm::initialise8086()
                0x00000000c00146e6                Vm::finish8086()
                0x00000000c0014747                Vm::getOutput8086(unsigned char*)
                0x00000000c001476c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014825                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001498d                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0014a17                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0014a28                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0014a3a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0014a4b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0014a60                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0014a76                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0014a8b                Vm::faultHandler(regs*)
 .text          0x00000000c0015160      0x8e9 arch/i386/hal.32
                0x00000000c0015160                noCopro(unsigned long)
                0x00000000c0015161                nmiHandler(regs*, void*)
                0x00000000c001517a                doubleFault(regs*, void*)
                0x00000000c0015193                displayDebugInfo(regs*)
                0x00000000c00154b4                displayProgramFault(char const*)
                0x00000000c0015500                gpFault(regs*, void*)
                0x00000000c0015565                pgFault(regs*, void*)
                0x00000000c00155eb                otherISRHandler(regs*, void*)
                0x00000000c001561f                opcodeFault(regs*, void*)
                0x00000000c001569f                i386SaveCoprocessor(void*)
                0x00000000c00156b3                i386LoadCoprocessor(void*)
                0x00000000c00156c7                x87EmulHandler(regs*, void*)
                0x00000000c0015764                HalInitialiseCoprocessor()
                0x00000000c0015812                HalPanic(char const*)
                0x00000000c0015817                HalQueryPerformanceCounter()
                0x00000000c0015832                HalInitialise()
                0x00000000c00159d8                HalMakeBeep(int)
                0x00000000c0015a12                HalGetRand()
                0x00000000c0015a15                HalEndOfInterrupt(int)
                0x00000000c0015a46                HalRestart()
                0x00000000c0015a47                HalShutdown()
                0x00000000c0015a48                HalSleep()
 *fill*         0x00000000c0015a49        0x3 
 .text          0x00000000c0015a4c      0x2f4 arch/i386/pic.32
                0x00000000c0015a4c                picIoWait()
                0x00000000c0015a54                picDisable()
                0x00000000c0015a88                picGetIRQReg(int)
                0x00000000c0015b0c                picOpen()
                0x00000000c0015c9c                picEOI(int)
 .text          0x00000000c0015d40      0x64d arch/i386/rtc.32
                0x00000000c0015d40                RTC::open(int, int, void*)
                0x00000000c0015d44                RTC::close(int, int, void*)
                0x00000000c0015d48                RTC::timeInSecondsUTC()
                0x00000000c0015d5a                RTC::timeInDatetimeUTC()
                0x00000000c0015d80                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015dbe                RTC::~RTC()
                0x00000000c0015dbe                RTC::~RTC()
                0x00000000c0015de2                RTC::~RTC()
                0x00000000c0015e0c                RTC::get_update_in_progress_flag()
                0x00000000c0015e24                RTC::completeRTCRefresh()
                0x00000000c00160dc                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001628f                rtcIRQHandler(regs*, void*)
                0x00000000c00162d4                RTC::RTC()
                0x00000000c00162d4                RTC::RTC()
 *fill*         0x00000000c001638d        0x3 
 .text          0x00000000c0016390      0x203 arch/i386/vga.32
                0x00000000c0016390                HalConsoleScroll(int, int)
                0x00000000c0016498                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016504                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0016593        0x1 
 .text          0x00000000c0016594     0x13e7 fs/fat/vfslink.32
                0x00000000c0016594                FAT::getName()
                0x00000000c001659c                FAT::tell(void*, unsigned long long*)
                0x00000000c00165d8                FAT::stat(void*, unsigned long long*)
                0x00000000c0016614                FAT::~FAT()
                0x00000000c0016614                FAT::~FAT()
                0x00000000c0016638                FAT::~FAT()
                0x00000000c0016660                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016704                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00167c8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001699c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016bb4                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016d74                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016ee0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016f40                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016fa0                FAT::close(void*)
                0x00000000c0016ff4                FAT::closeDir(void*)
                0x00000000c0017048                FAT::seek(void*, unsigned long long)
                0x00000000c00170a0                fatWrapperReadDisk
                0x00000000c00170e4                fatWrapperWriteDisk
                0x00000000c0017128                fatWrapperIoctl
                0x00000000c0017244                FAT::FAT()
                0x00000000c0017244                FAT::FAT()
                0x00000000c0017298                FAT::fixFilepath(char*)
                0x00000000c00172d4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001740c                FAT::openDir(char const*, void**)
                0x00000000c00174bc                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00175b4                FAT::unlink(char const*)
                0x00000000c0017634                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00177c0                FAT::rename(char const*, char const*)
                0x00000000c001788c                FAT::mkdir(char const*)
                0x00000000c001790c                FAT::exists(char const*)
 *fill*         0x00000000c001797b        0x1 
 .text          0x00000000c001797c       0x5c fs/iso9660/helper.32
                0x00000000c001797c                isoReadDiscSectorHelper
 .text          0x00000000c00179d8      0x478 fs/iso9660/vfslink.32
                0x00000000c00179d8                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00179de                ISO9660::getName()
                0x00000000c00179e4                ISO9660::openDir(char const*, void**)
                0x00000000c0017a00                ISO9660::closeDir(void*)
                0x00000000c0017a0a                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017a10                ISO9660::unlink(char const*)
                0x00000000c0017a16                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017a1c                ISO9660::rename(char const*, char const*)
                0x00000000c0017a22                ISO9660::mkdir(char const*)
                0x00000000c0017a28                ISO9660::~ISO9660()
                0x00000000c0017a28                ISO9660::~ISO9660()
                0x00000000c0017a4c                ISO9660::~ISO9660()
                0x00000000c0017a74                ISO9660::exists(char const*)
                0x00000000c0017a88                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017ada                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017b66                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017ba6                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017bde                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017c14                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017c4e                ISO9660::close(void*)
                0x00000000c0017c74                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017d2c                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017db6                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017e28                ISO9660::ISO9660()
                0x00000000c0017e28                ISO9660::ISO9660()
 .text          0x00000000c0017e50      0x26c hal/sound/sndcard.32
                0x00000000c0017e50                SoundCard::beginPlayback()
                0x00000000c0017e5e                SoundCard::stopPlayback()
                0x00000000c0017e6c                SoundCard::SoundCard(char const*)
                0x00000000c0017e6c                SoundCard::SoundCard(char const*)
                0x00000000c0017f0a                SoundCard::~SoundCard()
                0x00000000c0017f0a                SoundCard::~SoundCard()
                0x00000000c0017f2e                SoundCard::~SoundCard()
                0x00000000c0017f58                SoundCard::configureRates(int, int, int)
                0x00000000c0017f88                SoundCard::getSamples16(int, short*)
                0x00000000c0017fe4                SoundCard::getSamples32(int, int*)
                0x00000000c001806a                SoundCard::addChannel(SoundPort*)
                0x00000000c00180a8                SoundCard::removeChannel(int)
 .text          0x00000000c00180bc      0x377 hal/sound/sndport.32
                0x00000000c00180bc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00180bc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018148                SoundPort::~SoundPort()
                0x00000000c0018148                SoundPort::~SoundPort()
                0x00000000c001817c                SoundPort::unpause()
                0x00000000c0018188                SoundPort::pause()
                0x00000000c0018194                SoundPort::getBufferUsed()
                0x00000000c001819c                SoundPort::getBufferSize()
                0x00000000c00181a4                SoundPort::buffer16(short*, int)
                0x00000000c0018230                SoundPort::buffer32(int*, int)
                0x00000000c00182b8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001837c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0018433        0x0 hw/bus/isa.32
 *fill*         0x00000000c0018433        0x1 
 .text          0x00000000c0018434      0xb49 hw/bus/pci.32
                0x00000000c0018434                PCI::open(int, int, void*)
                0x00000000c0018452                PCI::close(int, int, void*)
                0x00000000c0018456                PCI::PCI()
                0x00000000c0018456                PCI::PCI()
                0x00000000c00184f0                PCI::readBAR8(unsigned int, int)
                0x00000000c001850c                PCI::readBAR16(unsigned int, int)
                0x00000000c001852a                PCI::readBAR32(unsigned int, int)
                0x00000000c0018546                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0018566                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0018588                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c00185a8                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018616                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00186be                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c00186e2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001870a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018754                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001877c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c00187a0                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c00187c4                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c00187ec                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018850                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018938                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018bb2                PCI::checkBus(unsigned char)
                0x00000000c0018bd8                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018d4a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018ebe                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018f2a                PCI::detect()
 *fill*         0x00000000c0018f7d        0x1 
 .text          0x00000000c0018f7e      0xb5a hw/diskctrl/ide.32
                0x00000000c0018f7e                IDE::close(int, int, void*)
                0x00000000c0018f82                IDE::IDE()
                0x00000000c0018f82                IDE::IDE()
                0x00000000c0018fb6                IDE::prepareInterrupt(unsigned char)
                0x00000000c0018fc8                selectDrive(unsigned char, unsigned char)
                0x00000000c0018fca                IDE::getBase(unsigned char)
                0x00000000c0018fdc                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001909c                IDE::read(unsigned char, unsigned char)
                0x00000000c001914a                IDE::waitInterrupt(unsigned char)
                0x00000000c00191b2                ideChannel0IRQHandler(regs*, void*)
                0x00000000c00191ce                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00191ea                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019230                IDE::open(int, int, void*)
                0x00000000c001963e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001970a                IDE::detect()
                0x00000000c00199ca                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019a7a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019ad8      0x32a hw/diskctrl/satabus.32
                0x00000000c0019ad8                SATABus::close(int, int, void*)
                0x00000000c0019adc                SATABus::detect()
                0x00000000c0019ade                SATABus::SATABus()
                0x00000000c0019ade                SATABus::SATABus()
                0x00000000c0019b64                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019b96                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019bde                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019bfe                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019c28                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019d38                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019de2                SATABus::open(int, int, void*)
 .text          0x00000000c0019e02      0x5f4 hw/diskphys/ata.32
                0x00000000c0019e02                ATA::close(int, int, void*)
                0x00000000c0019e26                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019e28                ATA::ATA()
                0x00000000c0019e28                ATA::ATA()
                0x00000000c0019e56                ATA::flush(bool)
                0x00000000c0019ea0                ATA::readyForCommand()
                0x00000000c0019eec                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a268                ATA::read(unsigned long long, int, void*)
                0x00000000c001a2b4                ATA::write(unsigned long long, int, void*)
                0x00000000c001a300                ATA::detectCHS()
                0x00000000c001a32a                ATA::open(int, int, void*)
 .text          0x00000000c001a3f6      0x60e hw/diskphys/atapi.32
                0x00000000c001a3f6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a3fc                ATAPI::close(int, int, void*)
                0x00000000c001a420                ATAPI::ATAPI()
                0x00000000c001a420                ATAPI::ATAPI()
                0x00000000c001a44e                ATAPI::readyForCommand()
                0x00000000c001a4a0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a760                ATAPI::diskRemoved()
                0x00000000c001a79a                ATAPI::eject()
                0x00000000c001a7e2                ATAPI::diskInserted()
                0x00000000c001a7ee                ATAPI::detectMedia()
                0x00000000c001a8aa                ATAPI::open(int, int, void*)
                0x00000000c001a98a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001aa04      0x402 hw/diskphys/sata.32
                0x00000000c001aa04                SATA::close(int, int, void*)
                0x00000000c001aa28                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001aa2a                SATA::open(int, int, void*)
                0x00000000c001aad4                SATA::SATA()
                0x00000000c001aad4                SATA::SATA()
                0x00000000c001ab02                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ad4e                SATA::read(unsigned long long, int, void*)
                0x00000000c001ad9a                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001ae06      0x5b9 hw/diskphys/satapi.32
                0x00000000c001ae06                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ae0c                SATAPI::close(int, int, void*)
                0x00000000c001ae30                SATAPI::open(int, int, void*)
                0x00000000c001af28                SATAPI::SATAPI()
                0x00000000c001af28                SATAPI::SATAPI()
                0x00000000c001af56                SATAPI::diskRemoved()
                0x00000000c001af58                SATAPI::diskInserted()
                0x00000000c001af74                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b250                SATAPI::eject()
                0x00000000c001b28c                SATAPI::read(unsigned long long, int, void*)
                0x00000000c001b3be                SATAPI::detectMedia()
 *fill*         0x00000000c001b3bf        0x1 
 .text          0x00000000c001b3c0      0x455 hw/intctrl/apic.32
                0x00000000c001b3c0                IOAPIC::close(int, int, void*)
                0x00000000c001b3c6                apicGetBase()
                0x00000000c001b408                IOAPIC::IOAPIC()
                0x00000000c001b408                IOAPIC::IOAPIC()
                0x00000000c001b430                apicOpen()
                0x00000000c001b596                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b5c8                IOAPIC::read(int)
                0x00000000c001b5f0                IOAPIC::open(int, int, void*)
                0x00000000c001b6e4                IOAPIC::write(int, int)
                0x00000000c001b710                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b815        0x3 
 .text          0x00000000c001b818       0xf0 hw/timer/apictimer.32
                0x00000000c001b818                APICTimer::close(int, int, void*)
                0x00000000c001b820                apicTimerHandler(regs*, void*)
                0x00000000c001b848                APICTimer::open(int, int, void*)
                0x00000000c001b8b8                APICTimer::write(int)
                0x00000000c001b8e0                APICTimer::APICTimer()
                0x00000000c001b8e0                APICTimer::APICTimer()
 .text          0x00000000c001b908      0x1aa hw/timer/pit.32
                0x00000000c001b908                PIT::write(int)
                0x00000000c001b98c                pitHandler(regs*, void*)
                0x00000000c001b9b0                PIT::open(int, int, void*)
                0x00000000c001ba00                PIT::close(int, int, void*)
                0x00000000c001ba30                PIT::PIT()
                0x00000000c001ba30                PIT::PIT()
 *fill*         0x00000000c001bab2        0xe 
 .text          0x00000000c001bac0       0x83 arch/i386/avx.32
                0x00000000c001bac0                avxDetect
                0x00000000c001baea                avxSave
                0x00000000c001bafb                avxLoad
                0x00000000c001bb0c                avxInit
                0x00000000c001bb2e                avxClose
                0x00000000c001bb2f                wouldSheSayYes
 *fill*         0x00000000c001bb43        0xd 
 .text          0x00000000c001bb50      0x1d6 arch/i386/interrupt.32
                0x00000000c001bb50                isr0
                0x00000000c001bb60                isr1
                0x00000000c001bb6a                isr2
                0x00000000c001bb74                isr3
                0x00000000c001bb7e                isr4
                0x00000000c001bb88                isr5
                0x00000000c001bb92                isr6
                0x00000000c001bb9c                isr7
                0x00000000c001bba6                isr8
                0x00000000c001bbae                isr9
                0x00000000c001bbb8                isr10
                0x00000000c001bbc0                isr11
                0x00000000c001bbc8                isr12
                0x00000000c001bbd0                isr13
                0x00000000c001bbd8                isr14
                0x00000000c001bbe0                isr15
                0x00000000c001bbea                isr16
                0x00000000c001bbf4                isr17
                0x00000000c001bbfe                isr18
                0x00000000c001bc08                irq3
                0x00000000c001bc12                irq4
                0x00000000c001bc1c                irq5
                0x00000000c001bc26                irq6
                0x00000000c001bc30                irq7
                0x00000000c001bc3a                irq8
                0x00000000c001bc44                irq9
                0x00000000c001bc4e                irq10
                0x00000000c001bc58                irq11
                0x00000000c001bc62                irq12
                0x00000000c001bc6c                irq13
                0x00000000c001bc76                irq14
                0x00000000c001bc80                irq15
                0x00000000c001bc8a                irq1
                0x00000000c001bc91                irq2
                0x00000000c001bc98                isr96
                0x00000000c001bc9f                irq0
                0x00000000c001bca4                int_common_stub
                0x00000000c001bca4                syscall_common_stub
                0x00000000c001bcd6                irq16
                0x00000000c001bce0                irq17
                0x00000000c001bcea                irq18
                0x00000000c001bcf4                irq19
                0x00000000c001bcfe                irq20
                0x00000000c001bd08                irq21
                0x00000000c001bd12                irq22
                0x00000000c001bd1c                irq23
 *fill*         0x00000000c001bd26        0xa 
 .text          0x00000000c001bd30       0x10 arch/i386/rdrand.32
                0x00000000c001bd30                i386GetRDRAND
 .text          0x00000000c001bd40       0x39 arch/i386/sse.32
                0x00000000c001bd40                absolutelyNoChanceInHell
                0x00000000c001bd40                sseDetect
                0x00000000c001bd58                sseSave
                0x00000000c001bd60                sseLoad
                0x00000000c001bd68                sseInit
                0x00000000c001bd78                sseClose
 *fill*         0x00000000c001bd79        0x7 
 .text          0x00000000c001bd80       0x49 arch/i386/x87.32
                0x00000000c001bd86                x87Detect
                0x00000000c001bda1                x87Save
                0x00000000c001bda8                x87Load
                0x00000000c001bdaf                x87Init
                0x00000000c001bdc8                x87Close
 *fill*         0x00000000c001bdc9        0x3 
 .text          0x00000000c001bdcc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bdf1        0x0 crtn.32
 *fill*         0x00000000c001bdf1        0x3 
 .text          0x00000000c001bdf4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bdf4                __divdi3
 *fill*         0x00000000c001bf3f        0x1 
 .text          0x00000000c001bf40      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001bf40                __moddi3
 *fill*         0x00000000c001c0be        0x2 
 .text          0x00000000c001c0c0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c0c0                __udivdi3
 *fill*         0x00000000c001c1bf        0x1 
 .text          0x00000000c001c1c0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c1c0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c2e0        0x0
 .iplt          0x00000000c001c2e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c2da        0xf
 .init          0x00000000c001c2da        0x3 crti.32
                0x00000000c001c2da                _init
 .init          0x00000000c001c2dd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c2e2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c2e7        0x2 crtn.32

.fini           0x00000000c001c2e9        0xa
 .fini          0x00000000c001c2e9        0x3 crti.32
                0x00000000c001c2e9                _fini
 .fini          0x00000000c001c2ec        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c2f1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c2f4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c2f4       0x23 core/computer.32
                0x00000000c001c2f4                Computer::~Computer()
                0x00000000c001c2f4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c318       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c318       0x2a core/computer.32
                0x00000000c001c318                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c342       0x21
 .text._Z10idleCommonv
                0x00000000c001c342       0x21 core/idle.32
                0x00000000c001c342                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c364        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c364        0x2 core/unixfile.32
                0x00000000c001c364                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c364                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c366       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c366       0x42 core/unixfile.32
                0x00000000c001c366                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c366                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c3a8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c3a8       0xd3 core/unixfile.32
                0x00000000c001c3a8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c47c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c47c        0x7 core/unixfile.32
                0x00000000c001c47c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c484       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c484       0xa1 core/unixfile.32
                0x00000000c001c484                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c526        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c526        0x8 core/unixfile.32
                0x00000000c001c526                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c52e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c52e       0x1a hal/device.32
                0x00000000c001c52e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c52e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c548       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c548       0x2a hal/device.32
                0x00000000c001c548                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c572       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c572       0xdc hal/device.32
                0x00000000c001c572                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c64e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c64e       0x42 hal/device.32
                0x00000000c001c64e                LinkedList<Device>::LinkedList()
                0x00000000c001c64e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c690       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c690       0x1c hal/timer.32
                0x00000000c001c690                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c6ac        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c6ac        0x7 hal/timer.32
                0x00000000c001c6ac                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c6b4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c6b4       0xb8 hal/timer.32
                0x00000000c001c6b4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c76c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c76c       0xda hal/timer.32
                0x00000000c001c76c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c848       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c848       0x23 hw/acpi.32
                0x00000000c001c848                ACPI::~ACPI()
                0x00000000c001c848                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c86c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c86c       0x2a hw/acpi.32
                0x00000000c001c86c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c898        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c898        0x2 hw/acpi.32
                0x00000000c001c898                LinkedList<Device>::~LinkedList()
                0x00000000c001c898                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c89c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c89c       0x1c hw/acpi.32
                0x00000000c001c89c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c8b8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c8b8        0x7 hw/acpi.32
                0x00000000c001c8b8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c8c0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c8c0       0xb8 hw/acpi.32
                0x00000000c001c8c0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001c978       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001c978       0x23 hw/cpu.32
                0x00000000c001c978                CPU::~CPU()
                0x00000000c001c978                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001c99c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001c99c       0x2a hw/cpu.32
                0x00000000c001c99c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c9c8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c9c8        0x2 thr/prcssthr.32
                0x00000000c001c9c8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001c9c8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c9cc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c9cc       0x49 thr/prcssthr.32
                0x00000000c001c9cc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001c9cc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ca18       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ca18       0x42 thr/prcssthr.32
                0x00000000c001ca18                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ca18                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ca5c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ca5c        0x8 thr/prcssthr.32
                0x00000000c001ca5c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001ca64       0x23
 .text._ZN3PCID2Ev
                0x00000000c001ca64       0x23 hw/bus/pci.32
                0x00000000c001ca64                PCI::~PCI()
                0x00000000c001ca64                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ca88       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001ca88       0x2a hw/bus/pci.32
                0x00000000c001ca88                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cab2       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cab2       0x23 hw/diskctrl/ide.32
                0x00000000c001cab2                IDE::~IDE()
                0x00000000c001cab2                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cad6       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cad6       0x2a hw/diskctrl/ide.32
                0x00000000c001cad6                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cb00       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cb00       0x23 hw/diskctrl/satabus.32
                0x00000000c001cb00                SATABus::~SATABus()
                0x00000000c001cb00                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cb24       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cb24       0x2a hw/diskctrl/satabus.32
                0x00000000c001cb24                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cb4e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cb4e       0x23 hw/diskphys/ata.32
                0x00000000c001cb4e                ATA::~ATA()
                0x00000000c001cb4e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cb72       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cb72       0x2a hw/diskphys/ata.32
                0x00000000c001cb72                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cb9c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cb9c       0x23 hw/diskphys/atapi.32
                0x00000000c001cb9c                ATAPI::~ATAPI()
                0x00000000c001cb9c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cbc0       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cbc0       0x2a hw/diskphys/atapi.32
                0x00000000c001cbc0                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cbea       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cbea       0x23 hw/diskphys/sata.32
                0x00000000c001cbea                SATA::~SATA()
                0x00000000c001cbea                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cc0e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cc0e       0x2a hw/diskphys/sata.32
                0x00000000c001cc0e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cc38       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cc38       0x23 hw/diskphys/satapi.32
                0x00000000c001cc38                SATAPI::~SATAPI()
                0x00000000c001cc38                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cc5c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cc5c       0x2a hw/diskphys/satapi.32
                0x00000000c001cc5c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cc86       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cc86       0x23 hw/intctrl/apic.32
                0x00000000c001cc86                IOAPIC::~IOAPIC()
                0x00000000c001cc86                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001ccaa       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001ccaa       0x2a hw/intctrl/apic.32
                0x00000000c001ccaa                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ccd4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ccd4       0x23 hw/timer/apictimer.32
                0x00000000c001ccd4                APICTimer::~APICTimer()
                0x00000000c001ccd4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ccf8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ccf8       0x2a hw/timer/apictimer.32
                0x00000000c001ccf8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001cd24       0x23
 .text._ZN3PITD2Ev
                0x00000000c001cd24       0x23 hw/timer/pit.32
                0x00000000c001cd24                PIT::~PIT()
                0x00000000c001cd24                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001cd48       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001cd48       0x2a hw/timer/pit.32
                0x00000000c001cd48                PIT::~PIT()

.rodata         0x00000000c001cd72     0x2872
                0x00000000c001cd72                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cd72        0x2 
 .ctors         0x00000000c001cd74        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cd78        0x4 core/unixfile.32
 .ctors         0x00000000c001cd7c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001cd80        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cd84                end_ctors = .
                0x00000000c001cd84                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001cd84        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001cd88        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cd88                __DTOR_END__
                0x00000000c001cd8c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cd8c       0x14 
 .rodata        0x00000000c001cda0      0x101 acpica/utclib.32
                0x00000000c001cda0                AcpiGbl_Ctypes
 *fill*         0x00000000c001cea1        0x3 
 .rodata        0x00000000c001cea4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001cebc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001cf06       0x1a 
 .rodata        0x00000000c001cf20       0xed fs/fat/ff.32
 *fill*         0x00000000c001d00d       0x13 
 .rodata        0x00000000c001d020      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d420       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d431       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001d47a      0x115 core/computer.32
 *fill*         0x00000000c001d58f        0x1 
 .rodata.str1.4
                0x00000000c001d590       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d5f8       0x2c core/computer.32
                0x00000000c001d5f8                vtable for Computer
 .rodata.str1.4
                0x00000000c001d624       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d654        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d660       0x17 core/main.32
 *fill*         0x00000000c001d677        0x1 
 .rodata.str1.4
                0x00000000c001d678       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d71d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d775       0x39 core/pipe.32
 *fill*         0x00000000c001d7ae        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d7b0       0x1c core/pipe.32
                0x00000000c001d7b0                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d7cc       0x69 core/terminal.32
 *fill*         0x00000000c001d835        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d838       0x1c core/terminal.32
                0x00000000c001d838                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d854       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d876       0x15 core/unixfile.32
 *fill*         0x00000000c001d88b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d88c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d8d7        0x8 core/unixfile.32
 *fill*         0x00000000c001d8df        0x1 
 .rodata.str1.4
                0x00000000c001d8e0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d900       0x1c core/unixfile.32
                0x00000000c001d900                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001d91c       0x1c core/unixfile.32
                0x00000000c001d91c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001d938      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001da9f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dba6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dbd9       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dbd9        0x3 
 .rodata        0x00000000c001dbdc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001dd2c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001dd2c       0x68 fs/vfs.32
                0x00000000c001dd2c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001dd94       0x1c fs/vfs.32
                0x00000000c001dd94                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001ddb0       0x1c fs/vfs.32
                0x00000000c001ddb0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001ddcc       0x2c hal/bus.32
                0x00000000c001ddcc                vtable for Bus
 .rodata.str1.1
                0x00000000c001ddf8       0x1e hal/clock.32
 *fill*         0x00000000c001de16        0x2 
 .rodata._ZTV5Clock
                0x00000000c001de18       0x3c hal/clock.32
                0x00000000c001de18                vtable for Clock
 *fill*         0x00000000c001de54        0xc 
 .rodata        0x00000000c001de60       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001de90       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001dee8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001dee8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001dee8       0x2c hal/device.32
                0x00000000c001dee8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001df14       0x2c hal/device.32
                0x00000000c001df14                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001df40       0x2c hal/diskctrl.32
                0x00000000c001df40                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001df6c       0x38 hal/diskphys.32
                0x00000000c001df6c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001dfa4       0x3e hal/intctrl.32
 *fill*         0x00000000c001dfe2        0x2 
 .rodata.str1.4
                0x00000000c001dfe4       0x5d hal/intctrl.32
 .rodata        0x00000000c001e041       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e094       0x34 hal/keybrd.32
                0x00000000c001e094                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e0c8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e10c       0x2c hal/logidisk.32
                0x00000000c001e10c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e138       0x2c hal/mouse.32
                0x00000000c001e138                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e164        0xb hal/partition.32
 *fill*         0x00000000c001e16f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e170       0x44 hal/serial.32
                0x00000000c001e170                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e1b4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e1b4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e1b4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e1b4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e1b4       0x30 hal/timer.32
                0x00000000c001e1b4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e1e4       0x10 hal/vcache.32
                0x00000000c001e1e4                vtable for VCache
 .rodata.str1.1
                0x00000000c001e1f4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e25c       0x48 hal/video.32
                0x00000000c001e25c                vtable for Video
 .rodata.str1.4
                0x00000000c001e2a4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e33f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e47b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e47b        0x8 hw/acpi.32
 *fill*         0x00000000c001e47b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e47c       0x2c hw/acpi.32
                0x00000000c001e47c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e4a8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e615        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e618       0x2c hw/cpu.32
                0x00000000c001e618                vtable for CPU
 .rodata.str1.1
                0x00000000c001e644       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e680       0x3d krnl/panic.32
                                         0x3e (size before relaxing)
 *fill*         0x00000000c001e6bd        0x3 
 .rodata.str1.4
                0x00000000c001e6c0       0x3a krnl/panic.32
 .rodata.str1.1
                0x00000000c001e6fa       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e73f        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001e749       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001e79d       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001e7c9       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e811      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001e9dd       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001ea34      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001eb40       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001eb40       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001eb40       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001eb40        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001eb40       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001ebe0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ec10      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001ed1e        0x2 
 .rodata.str1.4
                0x00000000c001ed20       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001ed93       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001eda8       0x3c arch/i386/rtc.32
                0x00000000c001eda8                vtable for RTC
 .rodata.str1.1
                0x00000000c001ede4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001ee25        0x3 
 .rodata._ZTV3FAT
                0x00000000c001ee28       0x68 fs/fat/vfslink.32
                0x00000000c001ee28                vtable for FAT
 .rodata.str1.1
                0x00000000c001ee90       0x84 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001ef14       0x68 fs/iso9660/vfslink.32
                0x00000000c001ef14                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001ef7c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001efc0       0x34 hal/sound/sndcard.32
                0x00000000c001efc0                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001eff4       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f033       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f06b       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f10c       0x2c hw/bus/pci.32
                0x00000000c001f10c                vtable for PCI
 .rodata.str1.1
                0x00000000c001f138       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f1bf        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f1c0       0x2c hw/diskctrl/ide.32
                0x00000000c001f1c0                vtable for IDE
 .rodata.str1.4
                0x00000000c001f1ec       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f210       0x2c hw/diskctrl/satabus.32
                0x00000000c001f210                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f23c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f24e        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f250       0x38 hw/diskphys/ata.32
                0x00000000c001f250                vtable for ATA
 .rodata.str1.1
                0x00000000c001f288        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f295        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f298       0x38 hw/diskphys/atapi.32
                0x00000000c001f298                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f2d0       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f34c       0x38 hw/diskphys/sata.32
                0x00000000c001f34c                vtable for SATA
 .rodata.str1.1
                0x00000000c001f384      0x158 hw/diskphys/satapi.32
                                        0x165 (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f4dc       0x38 hw/diskphys/satapi.32
                0x00000000c001f4dc                vtable for SATAPI
 .rodata        0x00000000c001f514        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f51c       0x2c hw/intctrl/apic.32
                0x00000000c001f51c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f548       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f563        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f564       0x30 hw/timer/apictimer.32
                0x00000000c001f564                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f594       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f5b1        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f5b4       0x30 hw/timer/pit.32
                0x00000000c001f5b4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f5e4      0x271
 *(.data)
 .data          0x00000000c001f5e4        0x0 crti.32
 .data          0x00000000c001f5e4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f5e4                __dso_handle
 .data          0x00000000c001f5e8        0x0 acpica/utclib.32
 .data          0x00000000c001f5e8        0x0 core/malloc.32
 .data          0x00000000c001f5e8        0x0 libk/ctype.32
 .data          0x00000000c001f5e8        0x0 libk/string.32
 .data          0x00000000c001f5e8        0x0 fs/fat/diskio.32
 .data          0x00000000c001f5e8        0x0 fs/fat/ff.32
 .data          0x00000000c001f5e8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f5e8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f5e8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f5e8        0x0 compat/inlines.32
 .data          0x00000000c001f5e8        0x0 compat/resolve.32
 .data          0x00000000c001f5e8        0x0 core/computer.32
 .data          0x00000000c001f5e8        0x0 core/gdt.32
 .data          0x00000000c001f5e8        0x0 core/idle.32
 .data          0x00000000c001f5e8        0x0 core/idt.32
 .data          0x00000000c001f5e8        0x4 core/kheap.32
 *fill*         0x00000000c001f5ec       0x14 
 .data          0x00000000c001f600      0x142 core/main.32
                0x00000000c001f600                titleScreen
 *fill*         0x00000000c001f742        0x2 
 .data          0x00000000c001f744        0x4 core/physmgr.32
                0x00000000c001f744                Phys::bitmap
 .data          0x00000000c001f748        0x0 core/pipe.32
 *fill*         0x00000000c001f748       0x18 
 .data          0x00000000c001f760       0x60 core/terminal.32
                0x00000000c001f760                VgaText::hiddenOut
                0x00000000c001f780                ansiToVGAMappings
 .data          0x00000000c001f7c0        0x0 core/tss.32
 .data          0x00000000c001f7c0        0x4 core/unixfile.32
                0x00000000c001f7c0                UnixFile::nextFd
 .data          0x00000000c001f7c4       0x15 core/virtmgr.32
                0x00000000c001f7c4                Virt::pageAllocPtr
                0x00000000c001f7c8                Virt::bitmap
                0x00000000c001f7cc                Virt::swapfileSectorsPerPage
                0x00000000c001f7d0                Virt::swapfileLength
                0x00000000c001f7d4                Virt::swapfileSector
                0x00000000c001f7d8                Virt::swapfileDrive
 *fill*         0x00000000c001f7d9        0x3 
 .data          0x00000000c001f7dc        0x4 coreobjs/c++.32
                0x00000000c001f7dc                __stack_chk_guard
 .data          0x00000000c001f7e0        0x0 dbg/kconsole.32
 .data          0x00000000c001f7e0        0x0 fs/vfs.32
 .data          0x00000000c001f7e0        0x0 hal/bus.32
 .data          0x00000000c001f7e0        0x0 hal/buzzer.32
 .data          0x00000000c001f7e0        0x0 hal/clock.32
 .data          0x00000000c001f7e0        0x0 hal/device.32
 .data          0x00000000c001f7e0        0x0 hal/diskctrl.32
 .data          0x00000000c001f7e0        0x0 hal/diskphys.32
 .data          0x00000000c001f7e0        0x0 hal/fpu.32
 .data          0x00000000c001f7e0        0x0 hal/intctrl.32
 .data          0x00000000c001f7e0        0x0 hal/keybrd.32
 .data          0x00000000c001f7e0        0x0 hal/logidisk.32
 .data          0x00000000c001f7e0        0x0 hal/mouse.32
 .data          0x00000000c001f7e0        0x0 hal/partition.32
 .data          0x00000000c001f7e0        0x0 hal/serial.32
 .data          0x00000000c001f7e0        0x0 hal/timer.32
 .data          0x00000000c001f7e0        0x0 hal/vcache.32
 .data          0x00000000c001f7e0        0x0 hal/video.32
 .data          0x00000000c001f7e0       0x10 hw/acpi.32
                0x00000000c001f7e0                legacyIRQRemaps
 .data          0x00000000c001f7f0        0x4 hw/cpu.32
                0x00000000c001f7f0                lastCode
 *fill*         0x00000000c001f7f4        0xc 
 .data          0x00000000c001f800       0x4d krnl/env.32
                0x00000000c001f800                defaultSysEnv
 .data          0x00000000c001f84d        0x0 krnl/panic.32
 .data          0x00000000c001f84d        0x0 krnl/powctrl.32
 .data          0x00000000c001f84d        0x0 reg/registry.32
 .data          0x00000000c001f84d        0x0 sys/sc_eject.32
 .data          0x00000000c001f84d        0x0 sys/sc_exit.32
 .data          0x00000000c001f84d        0x0 sys/sc_getcwd.32
 .data          0x00000000c001f84d        0x0 sys/sc_getpid.32
 .data          0x00000000c001f84d        0x0 sys/sc_getramdata.32
 .data          0x00000000c001f84d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001f84d        0x0 sys/sc_loaddll.32
 .data          0x00000000c001f84d        0x0 sys/sc_read.32
 .data          0x00000000c001f84d        0x0 sys/sc_sbrk.32
 .data          0x00000000c001f84d        0x0 sys/sc_setcwd.32
 .data          0x00000000c001f84d        0x0 sys/sc_settime.32
 .data          0x00000000c001f84d        0x0 sys/sc_timezone.32
 .data          0x00000000c001f84d        0x0 sys/sc_write.32
 .data          0x00000000c001f84d        0x0 sys/sc_wsbe.32
 .data          0x00000000c001f84d        0x0 sys/sc_yield.32
 .data          0x00000000c001f84d        0x0 sys/syscalls.32
 .data          0x00000000c001f84d        0x0 thr/elf.32
 *fill*         0x00000000c001f84d        0x3 
 .data          0x00000000c001f850        0x4 thr/prcssthr.32
                0x00000000c001f850                Thr::nextPID
 .data          0x00000000c001f854        0x0 vm86/vm8086.32
 .data          0x00000000c001f854        0x0 arch/i386/hal.32
 .data          0x00000000c001f854        0x0 arch/i386/pic.32
 .data          0x00000000c001f854        0x0 arch/i386/rtc.32
 .data          0x00000000c001f854        0x0 arch/i386/vga.32
 .data          0x00000000c001f854        0x0 fs/fat/vfslink.32
 .data          0x00000000c001f854        0x0 fs/iso9660/helper.32
 .data          0x00000000c001f854        0x1 fs/iso9660/vfslink.32
                0x00000000c001f854                recentDriveletter
 .data          0x00000000c001f855        0x0 hal/sound/sndcard.32
 .data          0x00000000c001f855        0x0 hal/sound/sndport.32
 .data          0x00000000c001f855        0x0 hw/bus/isa.32
 .data          0x00000000c001f855        0x0 hw/bus/pci.32
 .data          0x00000000c001f855        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001f855        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001f855        0x0 hw/diskphys/ata.32
 .data          0x00000000c001f855        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001f855        0x0 hw/diskphys/sata.32
 .data          0x00000000c001f855        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001f855        0x0 hw/intctrl/apic.32
 .data          0x00000000c001f855        0x0 hw/timer/apictimer.32
 .data          0x00000000c001f855        0x0 hw/timer/pit.32
 .data          0x00000000c001f855        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001f855        0x0 crtn.32
 .data          0x00000000c001f855        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001f855        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001f855        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001f855        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001f858        0x0
 .got           0x00000000c001f858        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001f858        0x0
 .got.plt       0x00000000c001f858        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001f858        0x0
 .igot.plt      0x00000000c001f858        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001f858        0x0
 .tm_clone_table
                0x00000000c001f858        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001f858        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001f855      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001f855        0x3 
 .eh_frame      0x00000000c001f858        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001f858        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001f858       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001f8b0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001f8f0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001f95c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001f9e0        0x0
 .rel.got       0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001f9e0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001f9e0     0x4da8
                0x00000000c001f9e0                sbss = .
 *(COMMON)
 *fill*         0x00000000c001f9e0        0x0 
 COMMON         0x00000000c001f9e0       0xa0 fs/iso9660/iso9660.32
                0x00000000c001f9e0                dcache
                0x00000000c001fa20                cdDriveLetter
                0x00000000c001fa40                icache
 *(.bss)
 .bss           0x00000000c001fa80        0x0 crti.32
 .bss           0x00000000c001fa80       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001faa0        0x4 acpica/utclib.32
 *fill*         0x00000000c001faa4       0x1c 
 .bss           0x00000000c001fac0      0x378 core/malloc.32
 .bss           0x00000000c001fe38        0x0 libk/ctype.32
 .bss           0x00000000c001fe38        0x0 libk/string.32
 .bss           0x00000000c001fe38        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001fe38        0x8 
 .bss           0x00000000c001fe40       0x88 fs/fat/ff.32
 .bss           0x00000000c001fec8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001fec8        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c001fec8       0x18 
 .bss           0x00000000c001fee0      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0020878        0x0 compat/inlines.32
 .bss           0x00000000c0020878        0x0 compat/resolve.32
 .bss           0x00000000c0020878        0x6 core/computer.32
                0x00000000c0020878                Krnl::computer
                0x00000000c002087c                Krnl::preemptionOn
                0x00000000c002087d                Krnl::schedulingOn
 *fill*         0x00000000c002087e        0x2 
 .bss           0x00000000c0020880        0x6 core/gdt.32
                0x00000000c0020880                gdtDescr
 .bss           0x00000000c0020886        0x0 core/idle.32
 *fill*         0x00000000c0020886        0x2 
 .bss           0x00000000c0020888        0x6 core/idt.32
                0x00000000c0020888                idtDescr
 .bss           0x00000000c002088e        0x0 core/kheap.32
 *fill*         0x00000000c002088e        0x2 
 .bss           0x00000000c0020890        0x4 core/main.32
                0x00000000c0020890                sysBootSettings
 .bss           0x00000000c0020894       0x29 core/physmgr.32
                0x00000000c0020894                Phys::forbidEvictions
                0x00000000c0020898                Phys::currentPagePointer
                0x00000000c002089c                Phys::highestMem
                0x00000000c00208a0                Phys::oldPercent
                0x00000000c00208a4                Phys::usedPages
                0x00000000c00208a8                Phys::usablePages
                0x00000000c00208ac                Phys::dmaUsage
 .bss           0x00000000c00208bd        0x0 core/pipe.32
 *fill*         0x00000000c00208bd        0x3 
 .bss           0x00000000c00208c0        0x9 core/terminal.32
                0x00000000c00208c0                terminalCycle
                0x00000000c00208c4                activeTerminal
                0x00000000c00208c8                VgaText::graphicMode
 *fill*         0x00000000c00208c9        0x1 
 .bss           0x00000000c00208ca        0x2 core/tss.32
                0x00000000c00208ca                doubleFaultSelector
 *fill*         0x00000000c00208cc       0x14 
 .bss           0x00000000c00208e0       0x84 core/unixfile.32
                0x00000000c00208e0                sfileLpt
                0x00000000c0020920                sfileCom
                0x00000000c0020944                sfileNul
                0x00000000c0020948                sfilePnt
                0x00000000c002094c                sfileAux
                0x00000000c0020950                sfileCon
                0x00000000c0020954                initialFilesAdded
                0x00000000c0020958                unixFileLinkedList
 .bss           0x00000000c0020964       0x10 core/virtmgr.32
                0x00000000c0020964                twswaps
                0x00000000c0020968                swapBalance
                0x00000000c002096c                Virt::swapfileBitmap
                0x00000000c0020970                firstVAS
 .bss           0x00000000c0020974        0x0 coreobjs/c++.32
 .bss           0x00000000c0020974        0x0 dbg/kconsole.32
 .bss           0x00000000c0020974        0x4 fs/vfs.32
                0x00000000c0020974                installedFilesystems
 .bss           0x00000000c0020978        0x0 hal/bus.32
 .bss           0x00000000c0020978        0x0 hal/buzzer.32
 .bss           0x00000000c0020978        0x8 hal/clock.32
                0x00000000c0020978                User::dstOn
                0x00000000c0020979                User::timezoneHalfHourOffset
                0x00000000c002097c                User::timezoneHourOffset
 .bss           0x00000000c0020980        0x0 hal/device.32
 .bss           0x00000000c0020980        0x0 hal/diskctrl.32
 .bss           0x00000000c0020980        0x0 hal/diskphys.32
 .bss           0x00000000c0020980        0x0 hal/fpu.32
 .bss           0x00000000c0020980     0x2000 hal/intctrl.32
                0x00000000c0020980                INT_contexts
                0x00000000c0021980                INT_handlers
 .bss           0x00000000c0022980      0x429 hal/keybrd.32
                0x00000000c0022980                keyboardWaitingTaskList
                0x00000000c0022984                keyboardSetupYet
                0x00000000c0022988                guiKeyboardHandler
                0x00000000c00229a0                keystates
 *fill*         0x00000000c0022da9       0x17 
 .bss           0x00000000c0022dc0       0x88 hal/logidisk.32
                0x00000000c0022dc0                diskAssignments
                0x00000000c0022de0                disks
 .bss           0x00000000c0022e48        0x4 hal/mouse.32
                0x00000000c0022e48                guiMouseHandler
 .bss           0x00000000c0022e4c        0x0 hal/partition.32
 .bss           0x00000000c0022e4c        0x0 hal/serial.32
 .bss           0x00000000c0022e4c        0x4 hal/timer.32
                0x00000000c0022e4c                milliTenthsSinceBoot
 .bss           0x00000000c0022e50        0x0 hal/vcache.32
 .bss           0x00000000c0022e50        0x4 hal/video.32
                0x00000000c0022e50                screen
 *fill*         0x00000000c0022e54        0xc 
 .bss           0x00000000c0022e60      0x480 hw/acpi.32
                0x00000000c0022e60                systemSleepFunction
                0x00000000c0022e64                systemResetFunction
                0x00000000c0022e68                systemShutdownFunction
                0x00000000c0022e6c                nextACPITable
                0x00000000c0022e80                acpiTables
                0x00000000c0023080                usingXSDT
                0x00000000c0023084                MADTpointer
                0x00000000c0023088                RSDTpointer
                0x00000000c002308c                RSDPpointer
                0x00000000c0023090                nextAPICNMI
                0x00000000c00230a0                apicNMIInfo
                0x00000000c0023120                legacyIRQFlags
                0x00000000c0023140                ioapicDiscoveryNumber
                0x00000000c0023160                ioapicFoundInMADT
                0x00000000c0023180                ioapicAddresses
                0x00000000c0023200                ioapicGSIBase
                0x00000000c0023280                processorDiscoveryNumber
                0x00000000c00232a0                matchingAPICID
                0x00000000c00232c0                processorID
 .bss           0x00000000c00232e0       0x10 hw/cpu.32
                0x00000000c00232e0                lastD
                0x00000000c00232e4                lastC
                0x00000000c00232e8                lastB
                0x00000000c00232ec                lastA
 .bss           0x00000000c00232f0        0x8 krnl/env.32
                0x00000000c00232f0                Krnl::userEnv
                0x00000000c00232f4                Krnl::systemEnv
 .bss           0x00000000c00232f8        0x9 krnl/panic.32
                0x00000000c00232f8                Krnl::guiProgramFaultHandler
                0x00000000c00232fc                Krnl::guiPanicHandler
                0x00000000c0023300                Krnl::kernelInPanic
 *fill*         0x00000000c0023301       0x1f 
 .bss           0x00000000c0023320       0x48 krnl/powctrl.32
                0x00000000c0023320                Krnl::powCtrlOnBattery
                0x00000000c0023340                Krnl::currentPowerSettings
                0x00000000c0023364                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0023368        0x0 reg/registry.32
 .bss           0x00000000c0023368        0x0 sys/sc_eject.32
 .bss           0x00000000c0023368        0x0 sys/sc_exit.32
 .bss           0x00000000c0023368        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0023368        0x0 sys/sc_getpid.32
 .bss           0x00000000c0023368        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0023368        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0023368        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0023368        0x0 sys/sc_read.32
 .bss           0x00000000c0023368        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0023368        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0023368        0x0 sys/sc_settime.32
 .bss           0x00000000c0023368        0x0 sys/sc_timezone.32
 .bss           0x00000000c0023368        0x0 sys/sc_write.32
 .bss           0x00000000c0023368        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0023368        0x0 sys/sc_yield.32
 *fill*         0x00000000c0023368       0x18 
 .bss           0x00000000c0023380      0x200 sys/syscalls.32
                0x00000000c0023380                systemCallHandlers
 .bss           0x00000000c0023580      0x7a4 thr/elf.32
                0x00000000c0023580                Thr::driverLookupNext
                0x00000000c00235a0                Thr::driverLookupLen
                0x00000000c00237a0                Thr::driverLookupAddr
                0x00000000c00239a0                Thr::driverNameLookup
                0x00000000c0023ba0                Thr::kernelSymbols
                0x00000000c0023c20                Thr::kernelStringTable
                0x00000000c0023ca0                Thr::kernelSymbolTable
                0x00000000c0023d20                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023d24        0x4 
 .bss           0x00000000c0023d28       0x68 thr/prcssthr.32
                0x00000000c0023d28                cleanerThread
                0x00000000c0023d2c                weNeedTheCleanerToNotBlock
                0x00000000c0023d30                retValLockStuff
                0x00000000c0023d34                retValSchedLock
                0x00000000c0023d38                lockStuffLock
                0x00000000c0023d3c                schedulerLock
                0x00000000c0023d40                taskSwitchesPostponedFlag
                0x00000000c0023d44                postponeTaskSwitchesCounter
                0x00000000c0023d48                irqDisableCounter
                0x00000000c0023d4c                terminatedTaskList
                0x00000000c0023d58                sleepingTaskList
                0x00000000c0023d64                taskList
                0x00000000c0023d70                kernelProcess
 *fill*         0x00000000c0023d90       0x10 
 .bss           0x00000000c0023da0       0x40 vm86/vm8086.32
                0x00000000c0023da0                Vm::vmRetV
                0x00000000c0023da4                Vm::vmDone
                0x00000000c0023da5                Vm::vmReady
                0x00000000c0023da8                Vm::vm86Thread
                0x00000000c0023dac                Vm::vmToHostCommsPtr
                0x00000000c0023dc0                Vm::vmToHostComms
 .bss           0x00000000c0023de0       0x14 arch/i386/hal.32
                0x00000000c0023de0                apic
                0x00000000c0023de4                fpuOwner
                0x00000000c0023de8                coproLoadFunc
                0x00000000c0023dec                coproSaveFunc
                0x00000000c0023df0                gpFaultIntercept
 .bss           0x00000000c0023df4        0x0 arch/i386/pic.32
 .bss           0x00000000c0023df4        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023df6        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023df6        0xa 
 .bss           0x00000000c0023e00       0xf0 fs/fat/vfslink.32
                0x00000000c0023e00                FAT::fats
                0x00000000c0023e20                FAT::vfsToFatRemaps
                0x00000000c0023ea0                fatToVFSRemaps
 .bss           0x00000000c0023ef0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0023ef0       0x10 
 .bss           0x00000000c0023f00      0x820 fs/iso9660/vfslink.32
                0x00000000c0023f00                iso9660Owner
                0x00000000c0023f04                recentSector
                0x00000000c0023f20                recentBuffer
 .bss           0x00000000c0024720        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0024720        0x0 hal/sound/sndport.32
 .bss           0x00000000c0024720        0x0 hw/bus/isa.32
 .bss           0x00000000c0024720        0xd hw/bus/pci.32
                0x00000000c0024720                thePCI
 .bss           0x00000000c002472d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002472d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002472d        0x3 
 .bss           0x00000000c0024730        0x8 hw/diskphys/ata.32
                0x00000000c0024730                ataSectorsWritten
                0x00000000c0024734                ataSectorsRead
 .bss           0x00000000c0024738        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024738        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0024738        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0024738        0x8 
 .bss           0x00000000c0024740       0x41 hw/intctrl/apic.32
                0x00000000c0024740                noOfIOAPICs
                0x00000000c0024760                ioapics
                0x00000000c0024780                IOAPICsSetupYet
 .bss           0x00000000c0024781        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024781        0x3 
 .bss           0x00000000c0024784        0x4 hw/timer/pit.32
                0x00000000c0024784                pitFreq
 .bss           0x00000000c0024788        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024788        0x0 crtn.32
 .bss           0x00000000c0024788        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024788        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024788        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024788        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024788                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0029530                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
