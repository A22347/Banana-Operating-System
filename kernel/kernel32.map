Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f75a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6c3 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca8                Krnl::firstTask()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006e96                Computer::setBootMessage(char const*)
                0x00000000c0006e98                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070ec                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007128                Computer::shutdown()
                0x00000000c0007140                Computer::restart()
                0x00000000c0007158                Computer::sleep()
                0x00000000c000716c                Computer::nmiEnabled()
                0x00000000c0007178                Computer::readCMOS(unsigned char)
                0x00000000c0007196                Computer::enableNMI(bool)
                0x00000000c00071ae                Computer::open(int, int, void*)
                0x00000000c0007282                Computer::disableNMI()
                0x00000000c0007292                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072b6                Computer::handleNMI()
 *fill*         0x00000000c0007321        0x1 
 .text          0x00000000c0007322      0x1db core/gdt.32
                0x00000000c0007322                GDTEntry::setBase(unsigned int)
                0x00000000c000733e                GDTEntry::setLimit(unsigned int)
                0x00000000c000735c                GDT::GDT()
                0x00000000c000735c                GDT::GDT()
                0x00000000c0007372                GDT::addEntry(GDTEntry)
                0x00000000c0007394                GDT::getNumberOfEntries()
                0x00000000c000739c                GDT::flush()
                0x00000000c00073be                GDT::setup()
 .text          0x00000000c00074fd       0x1d core/idle.32
                0x00000000c00074fd                idleFunction(void*)
 *fill*         0x00000000c000751a        0x2 
 .text          0x00000000c000751c      0x46c core/idt.32
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c0007596                IDTEntry::setOffset(unsigned int)
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ae                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075b6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007608                IDT::flush()
                0x00000000c0007622                IDT::setup()
 .text          0x00000000c0007988      0x188 core/kheap.32
                0x00000000c0007988                sbrk
                0x00000000c0007a1f                mmap
                0x00000000c0007a35                munmap
                0x00000000c0007a4b                liballoc_lock()
                0x00000000c0007a59                liballoc_unlock()
                0x00000000c0007a6f                liballoc_alloc(int)
                0x00000000c0007a87                liballoc_free(void*, int)
                0x00000000c0007aa2                realloc
                0x00000000c0007ab6                malloc
                0x00000000c0007ac6                free
                0x00000000c0007ad6                rfree
                0x00000000c0007ae6                calloc
 .text          0x00000000c0007b10       0xc7 core/main.32
                0x00000000c0007b10                KeEntryPoint
 .text          0x00000000c0007bd7      0x644 core/physmgr.32
                0x00000000c0007bd7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cbf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfa                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3a                Phys::getPageState(unsigned long)
                0x00000000c0007d56                Phys::freePage(unsigned long)
                0x00000000c0007dbf                Phys::allocatePage()
                0x00000000c0007e8e                Phys::allocateContiguousPages(int)
                0x00000000c0007ef5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f2d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000821b        0x1 
 .text          0x00000000c000821c      0x273 core/pipe.32
                0x00000000c000821c                Pipe::isAtty()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008244                Pipe::~Pipe()
                0x00000000c000826c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000832c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xab3 core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a60                VgaText::putx(unsigned int)
                0x00000000c0008aa6                VgaText::puts(char const*)
                0x00000000c0008acc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b18                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008db6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f42                VgaText::doUpdate()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x1a1 core/tss.32
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f54                TSS::setESP(unsigned long)
                0x00000000c0008f68                TSS::flush()
                0x00000000c0008f88                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090e5        0x1 
 .text          0x00000000c00090e6      0x4ca core/unixfile.32
                0x00000000c00090e6                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000913c                ReservedFilename::isAtty()
                0x00000000c0009158                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091b6                UnixFile::getFileDescriptor()
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c0009440                UnixFile::~UnixFile()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c000948c                ReservedFilename::~ReservedFilename()
                0x00000000c00094b3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b0     0x1218 core/virtmgr.32
                0x00000000c00095b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ea                Virt::getPageState(unsigned long)
                0x00000000c000960d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009732                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009755                Virt::swapIDToSector(unsigned long)
                0x00000000c000976b                Virt::allocateSwapfilePage()
                0x00000000c00097eb                Virt::virtualMemorySetup()
                0x00000000c000983c                Virt::setupPageSwapping(int)
                0x00000000c00098ae                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098de                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000992b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a68                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a8c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aa6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009b52                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b86                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009d20                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e24                VAS::allocatePages(int, int)
                0x00000000c0009f1a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f72                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a2b2                VAS::evict(unsigned long)
                0x00000000c000a390                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a52a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a59e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ca                VAS::scanForEviction()
                0x00000000c000a6cd                mapVASFirstTime
 .text          0x00000000c000a7c8       0x5f coreobjs/c++.32
                0x00000000c000a7c8                __cxa_atexit
                0x00000000c000a7cb                __cxa_finalize
                0x00000000c000a7cc                __stack_chk_fail
                0x00000000c000a802                __cxa_pure_virtual
                0x00000000c000a813                operator new[](unsigned long)
                0x00000000c000a818                operator delete(void*, unsigned long)
                0x00000000c000a81d                operator delete[](void*)
                0x00000000c000a822                operator delete[](void*, unsigned long)
 .text          0x00000000c000a827      0x254 dbg/kconsole.32
                0x00000000c000a827                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8c7                Dbg::logc(char)
                0x00000000c000a8e7                Dbg::logs(char*)
                0x00000000c000a906                Dbg::logWriteInt(unsigned int)
                0x00000000c000a924                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a945                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa7b        0x1 
 .text          0x00000000c000aa7c      0x2d4 dbg/usban.32
                0x00000000c000aa7c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aae8                __ubsan_handle_type_mismatch_v1
                0x00000000c000abc4                __ubsan_handle_pointer_overflow
                0x00000000c000abf0                __ubsan_handle_out_of_bounds
                0x00000000c000ac1c                __ubsan_handle_add_overflow
                0x00000000c000ac48                __ubsan_handle_load_invalid_value
                0x00000000c000ac74                __ubsan_handle_divrem_overflow
                0x00000000c000aca0                __ubsan_handle_mul_overflow
                0x00000000c000accc                __ubsan_handle_sub_overflow
                0x00000000c000acf8                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad24                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad50      0x6cb fs/symlink.32
                0x00000000c000ae9f                KiDeinitialiseSymlinks(void*)
                0x00000000c000af32                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000afb5                KiIsSymlinkRegistered(char const*)
                0x00000000c000b00e                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b229                KeCreateSymlink(char const*, char const*)
                0x00000000c000b365                KeInitialiseSymlinks()
 *fill*         0x00000000c000b41b        0x1 
 .text          0x00000000c000b41c      0xd58 fs/vfs.32
                0x00000000c000b41c                File::read(unsigned long long, void*, int*)
                0x00000000c000b474                File::write(unsigned long long, void*, int*)
                0x00000000c000b4cc                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b524                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b552                File::isAtty()
                0x00000000c000b556                Directory::isAtty()
                0x00000000c000b55a                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b560                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b566                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b56c                File::~File()
                0x00000000c000b56c                File::~File()
                0x00000000c000b590                File::~File()
                0x00000000c000b5ba                Directory::~Directory()
                0x00000000c000b5ba                Directory::~Directory()
                0x00000000c000b5de                Directory::~Directory()
                0x00000000c000b608                Filesystem::Filesystem()
                0x00000000c000b608                Filesystem::Filesystem()
                0x00000000c000b62c                Filesystem::~Filesystem()
                0x00000000c000b62c                Filesystem::~Filesystem()
                0x00000000c000b63a                Filesystem::~Filesystem()
                0x00000000c000b65e                Fs::getcwd(Process*, char*, int)
                0x00000000c000b688                Fs::initVFS()
                0x00000000c000b6b2                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000b8bc                File::File(char const*, Process*, bool)
                0x00000000c000b8bc                File::File(char const*, Process*, bool)
                0x00000000c000b99a                File::File(char const*, Process*)
                0x00000000c000b99a                File::File(char const*, Process*)
                0x00000000c000b9b8                File::open(FileOpenMode)
                0x00000000c000ba16                File::close()
                0x00000000c000ba76                File::seek(unsigned long long)
                0x00000000c000bacc                File::truncate(unsigned long long)
                0x00000000c000bb22                File::tell(unsigned long long*)
                0x00000000c000bb72                File::rewind()
                0x00000000c000bb86                File::unlink()
                0x00000000c000bbd2                File::rename(char const*)
                0x00000000c000bc20                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000bc7c                File::exists()
                0x00000000c000bcba                File::stat(unsigned long long*, bool*)
                0x00000000c000bd1b                Fs::setcwd(Process*, char*)
                0x00000000c000be7a                Directory::Directory(char const*, Process*)
                0x00000000c000be7a                Directory::Directory(char const*, Process*)
                0x00000000c000bf42                Directory::open()
                0x00000000c000bf9e                Directory::close()
                0x00000000c000bffe                Directory::unlink()
                0x00000000c000c04a                Directory::rename(char const*)
                0x00000000c000c098                Directory::exists()
                0x00000000c000c0d6                Directory::read(dirent*)
                0x00000000c000c122                Directory::create()
                0x00000000c000c16e                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000c174       0x86 hal/bus.32
                0x00000000c000c174                Bus::Bus(char const*)
                0x00000000c000c174                Bus::Bus(char const*)
                0x00000000c000c1ac                Bus::~Bus()
                0x00000000c000c1ac                Bus::~Bus()
                0x00000000c000c1d0                Bus::~Bus()
 .text          0x00000000c000c1fa       0x96 hal/buzzer.32
                0x00000000c000c1fa                beepThread(void*)
                0x00000000c000c237                Krnl::beep(int, int, bool)
 .text          0x00000000c000c290      0x45f hal/clock.32
                0x00000000c000c290                User::loadClockSettings(int)
                0x00000000c000c2e2                Clock::Clock(char const*)
                0x00000000c000c2e2                Clock::Clock(char const*)
                0x00000000c000c318                Clock::~Clock()
                0x00000000c000c318                Clock::~Clock()
                0x00000000c000c33c                Clock::~Clock()
                0x00000000c000c366                Clock::timeInSecondsLocal()
                0x00000000c000c3ae                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c407                datetimeToSeconds(datetime_t)
                0x00000000c000c526                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c586                secondsToDatetime(unsigned long long)
                0x00000000c000c6ca                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c6ef        0x1 
 .text          0x00000000c000c6f0      0x464 hal/device.32
                0x00000000c000c6f0                Device::hibernate()
                0x00000000c000c6f2                Device::wake()
                0x00000000c000c6f4                Device::detect()
                0x00000000c000c6f6                Device::disableLegacy()
                0x00000000c000c6f8                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c6fa                DriverlessDevice::close(int, int, void*)
                0x00000000c000c6fe                DriverlessDevice::detect()
                0x00000000c000c700                DriverlessDevice::open(int, int, void*)
                0x00000000c000c714                Device::~Device()
                0x00000000c000c714                Device::~Device()
                0x00000000c000c722                Device::~Device()
                0x00000000c000c74a                Device::findAndLoadDriver()
                0x00000000c000c758                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c77e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c7be                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c7e8                Device::getParent()
                0x00000000c000c7f4                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c812                Device::addChild(Device*)
                0x00000000c000c856                Device::removeAllChildren()
                0x00000000c000c89c                Device::hibernateAll()
                0x00000000c000c8cc                Device::wakeAll()
                0x00000000c000c8fc                Device::detectAll()
                0x00000000c000c92c                Device::disableLegacyAll()
                0x00000000c000c92e                Device::loadDriversForAll()
                0x00000000c000c930                Device::closeAll()
                0x00000000c000c966                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c99c                Device::setName(char const*)
                0x00000000c000c9aa                Device::Device(char const*)
                0x00000000c000c9aa                Device::Device(char const*)
                0x00000000c000caa6                Device::getName()
                0x00000000c000cab0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cab0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cae6                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cb2a                getDevicesOfType(DeviceType)
 .text          0x00000000c000cb54       0x86 hal/diskctrl.32
                0x00000000c000cb54                HardDiskController::HardDiskController(char const*)
                0x00000000c000cb54                HardDiskController::HardDiskController(char const*)
                0x00000000c000cb8c                HardDiskController::~HardDiskController()
                0x00000000c000cb8c                HardDiskController::~HardDiskController()
                0x00000000c000cbb0                HardDiskController::~HardDiskController()
 .text          0x00000000c000cbda       0xe2 hal/diskphys.32
                0x00000000c000cbda                PhysicalDisk::eject()
                0x00000000c000cbde                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cbde                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cc46                PhysicalDisk::startCache()
                0x00000000c000cc6e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cc6e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000cc92                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ccbc        0x0 hal/fpu.32
 .text          0x00000000c000ccbc      0x359 hal/intctrl.32
                0x00000000c000ccbc                int_handler
                0x00000000c000cd46                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cd90                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000cec4                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000cef8                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000cf76                setupINTS()
                0x00000000c000cfd3                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000d015        0x1 
 .text          0x00000000c000d016      0x8be hal/keybrd.32
                0x00000000c000d016                startGUI(void*)
                0x00000000c000d084                startGUIVESA(void*)
                0x00000000c000d0f2                sendKeyToTerminal(unsigned char)
                0x00000000c000d1cd                sendKeyboardToken(KeyboardToken)
                0x00000000c000d6b7                clearInternalKeybuffer(VgaText*)
                0x00000000c000d6ec                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d84a                Keyboard::Keyboard(char const*)
                0x00000000c000d84a                Keyboard::Keyboard(char const*)
                0x00000000c000d886                Keyboard::~Keyboard()
                0x00000000c000d886                Keyboard::~Keyboard()
                0x00000000c000d8aa                Keyboard::~Keyboard()
 .text          0x00000000c000d8d4      0x3f8 hal/logidisk.32
                0x00000000c000d8d4                LogicalDisk::close(int, int, void*)
                0x00000000c000d8d8                LogicalDisk::~LogicalDisk()
                0x00000000c000d8d8                LogicalDisk::~LogicalDisk()
                0x00000000c000d8fc                LogicalDisk::~LogicalDisk()
                0x00000000c000d926                LogicalDisk::open(int, int, void*)
                0x00000000c000d93a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d972                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d9b8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d9b8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000da78                LogicalDisk::assignDriveLetter()
                0x00000000c000db32                LogicalDisk::mount()
                0x00000000c000db7a                LogicalDisk::unmount()
                0x00000000c000db8a                LogicalDisk::eject()
                0x00000000c000db9e                LogicalDisk::unassignDriveLetter()
                0x00000000c000dbf4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000dc60                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000dccc       0x86 hal/mouse.32
                0x00000000c000dccc                Mouse::Mouse(char const*)
                0x00000000c000dccc                Mouse::Mouse(char const*)
                0x00000000c000dd04                Mouse::~Mouse()
                0x00000000c000dd04                Mouse::~Mouse()
                0x00000000c000dd28                Mouse::~Mouse()
 .text          0x00000000c000dd52       0x90 hal/nic.32
                0x00000000c000dd52                NIC::getMAC()
                0x00000000c000dd58                NIC::write(int, unsigned char*, int*)
                0x00000000c000dd5e                NIC::NIC(char const*)
                0x00000000c000dd5e                NIC::NIC(char const*)
                0x00000000c000dd94                NIC::~NIC()
                0x00000000c000dd94                NIC::~NIC()
                0x00000000c000ddb8                NIC::~NIC()
 .text          0x00000000c000dde2      0x33b hal/partition.32
                0x00000000c000dde2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000de8a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e11d        0x3 
 .text          0x00000000c000e120       0x86 hal/serial.32
                0x00000000c000e120                Serial::Serial(char const*)
                0x00000000c000e120                Serial::Serial(char const*)
                0x00000000c000e158                Serial::~Serial()
                0x00000000c000e158                Serial::~Serial()
                0x00000000c000e17c                Serial::~Serial()
 *fill*         0x00000000c000e1a6        0x2 
 .text          0x00000000c000e1a8      0x234 hal/timer.32
                0x00000000c000e1a8                Timer::Timer(char const*)
                0x00000000c000e1a8                Timer::Timer(char const*)
                0x00000000c000e1e0                Timer::~Timer()
                0x00000000c000e1e0                Timer::~Timer()
                0x00000000c000e204                Timer::~Timer()
                0x00000000c000e22e                Timer::read()
                0x00000000c000e239                setupTimer(int)
                0x00000000c000e274                timerHandler(unsigned int)
 .text          0x00000000c000e3dc      0x444 hal/vcache.32
                0x00000000c000e3dc                VCache::VCache(PhysicalDisk*)
                0x00000000c000e3dc                VCache::VCache(PhysicalDisk*)
                0x00000000c000e54c                VCache::invalidateReadBuffer()
                0x00000000c000e55c                VCache::writeWriteBuffer()
                0x00000000c000e5a8                VCache::~VCache()
                0x00000000c000e5a8                VCache::~VCache()
                0x00000000c000e600                VCache::~VCache()
                0x00000000c000e628                VCache::write(unsigned long long, int, void*)
                0x00000000c000e716                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e820      0x4c7 hal/video.32
                0x00000000c000e820                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e86c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e8dc                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e95a                Video::clearScreen(unsigned int)
                0x00000000c000e98e                Video::putpixel(int, int, unsigned int)
                0x00000000c000e99c                Video::readPixelApprox(int, int)
                0x00000000c000e9b0                Video::Video(char const*)
                0x00000000c000e9b0                Video::Video(char const*)
                0x00000000c000e9e6                Video::~Video()
                0x00000000c000e9e6                Video::~Video()
                0x00000000c000ea0a                Video::~Video()
                0x00000000c000ea34                Video::isMonochrome()
                0x00000000c000ea40                Video::getWidth()
                0x00000000c000ea4c                Video::getHeight()
                0x00000000c000ea58                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000eb14                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ec7c                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ece7        0x1 
 .text          0x00000000c000ece8     0x138b hw/acpi.32
                0x00000000c000ece8                ACPI::close(int, int, void*)
                0x00000000c000ed9c                findRSDP()
                0x00000000c000ee34                loadACPITables(unsigned char*)
                0x00000000c000f0a0                findRSDT(unsigned char*)
                0x00000000c000f1f8                findDataTable(unsigned char*, char*)
                0x00000000c000f278                scanMADT()
                0x00000000c000f730                ACPI::ACPI()
                0x00000000c000f730                ACPI::ACPI()
                0x00000000c000f784                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f880                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f94c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f954                ACPI::detectPCI()
                0x00000000c000fb74                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fbbc                ACPI::sleep()
                0x00000000c000fbd8                ACPI::open(int, int, void*)
 *fill*         0x00000000c0010073        0x1 
 .text          0x00000000c0010074      0xbc5 hw/cpu.32
                0x00000000c0010074                CPU::close(int, int, void*)
                0x00000000c0010078                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0010094                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c00100ac                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0010120                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00101a4                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c00101d2                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0010200                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001022e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c001025c                CPU::CPU()
                0x00000000c001025c                CPU::CPU()
                0x00000000c00102ea                CPU::displayFeatures()
                0x00000000c00102ec                CPU::detectFeatures()
                0x00000000c00109c0                CPU::setupSMEP()
                0x00000000c00109cc                CPU::setupUMIP()
                0x00000000c00109d6                CPU::setupTSC()
                0x00000000c00109e0                CPU::setupLargePages()
                0x00000000c00109ea                CPU::setupPAT()
                0x00000000c0010a26                CPU::setupMTRR()
                0x00000000c0010a28                CPU::setupGlobalPages()
                0x00000000c0010a32                CPU::allowUsermodeDataAccess()
                0x00000000c0010a44                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010a56                CPU::setupSMAP()
                0x00000000c0010a64                CPU::setupFeatures()
                0x00000000c0010b30                CPU::open(int, int, void*)
 .text          0x00000000c0010c39       0xb6 krnl/atexit.32
                0x00000000c0010c39                KeInitialiseAtexit()
                0x00000000c0010c58                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010c8c                KeExecuteAtexit()
 .text          0x00000000c0010cef       0xdf krnl/bootmsg.32
                0x00000000c0010cef                KeDisplaySplashScreen()
                0x00000000c0010d6b                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010dce        0x2 
 .text          0x00000000c0010dd0       0x1d krnl/compat.32
                0x00000000c0010dd0                Krnl::handlePowerButton()
                0x00000000c0010de0                Krnl::handleSleepButton()
 .text          0x00000000c0010ded       0x2b krnl/crc32.32
                0x00000000c0010ded                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010e18      0x5bf krnl/env.32
                0x00000000c0010e18                EnvVarContainer::getEnv(char const*)
                0x00000000c0010e56                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010f18                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010f1a                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001113e                EnvVarContainer::__loadSystem()
                0x00000000c0011158                EnvVarContainer::__loadUser()
                0x00000000c001115a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001115a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001117c                EnvVarContainer::~EnvVarContainer()
                0x00000000c001117c                EnvVarContainer::~EnvVarContainer()
                0x00000000c00111ac                KeGetEnv(Process*, char const*)
                0x00000000c0011211                KeSetEnvSystem(char const*, char const*)
                0x00000000c001122b                KeSetEnvUser(char const*, char const*)
                0x00000000c001124a                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c001125d                KeDeleteEnvSystem(char const*)
                0x00000000c001125e                KeDeleteEnvUser(char const*)
                0x00000000c001125f                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0011260                KeNewProcessEnv(Process*)
                0x00000000c0011282                KeCopyProcessEnv(Process*, Process*)
                0x00000000c00112ce                KeLoadSystemEnv()
                0x00000000c00112fc                KeLoadUserEnv()
                0x00000000c0011322                KeFlushEnv()
                0x00000000c0011323                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011343                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c00113d7       0x94 krnl/inlines.32
                0x00000000c00113d7                CPU::current()
                0x00000000c00113e3                operator new(unsigned long)
                0x00000000c00113e8                operator delete(void*)
                0x00000000c00113ed                disableIRQs()
                0x00000000c00113ef                enableIRQs()
                0x00000000c00113f1                lockScheduler()
                0x00000000c00113f9                unlockScheduler()
                0x00000000c0011408                lockStuff()
                0x00000000c0011416                unlockStuff()
                0x00000000c0011450                Virt::getAKernelVAS()
                0x00000000c0011456                __not_memcpy
 .text          0x00000000c001146b        0xc krnl/panic.32
                0x00000000c001146b                KePanic(char const*)
 .text          0x00000000c0011477      0x142 krnl/powctrl.32
                0x00000000c0011477                KePowerThread(void*)
                0x00000000c00114a5                KeChangePowerSettings(PowerSettings)
                0x00000000c00114bb                KeUserIOReceived()
                0x00000000c00114c6                KeHandlePowerButton()
                0x00000000c00114fb                KeHandleSleepButton()
                0x00000000c0011530                KeSetupPowerManager()
 .text          0x00000000c00115b9       0x9d krnl/random.32
                0x00000000c00115b9                KeRand()
                0x00000000c00115fb                KeSeedRand(unsigned int)
                0x00000000c0011624                KeInitRand()
 *fill*         0x00000000c0011656        0x2 
 .text          0x00000000c0011658      0x1bc krnl/resolve.32
                0x00000000c0011658                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011814      0x322 krnl/signal.32
                0x00000000c0011814                KiSigKill(int)
                0x00000000c0011828                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011829                KiDefaultSignalHandlerPause(int)
                0x00000000c0011855                KiDefaultSignalHandlerResume(int)
                0x00000000c0011881                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011886                KeInitSignals()
                0x00000000c00118d8                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001190e                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001198b                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011a82                KiCheckSignalZ
                0x00000000c0011ac4                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011aff                KiFinishSignalZ
 .text          0x00000000c0011b36      0xdd6 krnl/syscalls.32
                0x00000000c0011b36                SysSeekDir(regs*)
                0x00000000c0011b3b                SysTellDir(regs*)
                0x00000000c0011b40                SysVerify(regs*)
                0x00000000c0011b4a                SysGetArgc(regs*)
                0x00000000c0011b5e                SysTTYName(regs*)
                0x00000000c0011b66                SysFormatDisk(regs*)
                0x00000000c0011bdd                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011c31                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011c8a                SysShutdown(regs*)
                0x00000000c0011ce8                SysRealpath(regs*)
                0x00000000c0011d2c                SysReadDir(regs*)
                0x00000000c0011dac                SysIsATTY(regs*)
                0x00000000c0011e06                SysSeek(regs*)
                0x00000000c0011e5d                SysTell(regs*)
                0x00000000c0011eca                SysSize(regs*)
                0x00000000c0011f3d                SysSizeFromFilename(regs*)
                0x00000000c0012051                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0012165                SysClose(regs*)
                0x00000000c00121c5                SysOpenDir(regs*)
                0x00000000c0012242                SysMakeDir(regs*)
                0x00000000c00122b0                SysCloseDir(regs*)
                0x00000000c0012304                SysWait(regs*)
                0x00000000c0012325                SysNotImpl(regs*)
                0x00000000c0012340                SysPanic(regs*)
                0x00000000c001235b                SysRmdir(regs*)
                0x00000000c00123c0                SysUnlink(regs*)
                0x00000000c0012425                SysGetArgv(regs*)
                0x00000000c0012472                SysUSleep(regs*)
                0x00000000c001249b                SysSpawn(regs*)
                0x00000000c001250e                SysGetEnv(regs*)
                0x00000000c00125bf                SysSetFatAttrib(regs*)
                0x00000000c0012632                SysPipe(regs*)
                0x00000000c0012677                SysGetUnixTime(regs*)
                0x00000000c001268b                string_ends_with(char const*, char const*)
                0x00000000c00126d3                SysOpen(regs*)
                0x00000000c00128ca                KeSystemCall(regs*, void*)
 .text          0x00000000c001290c      0x159 net/ethernet.32
                0x00000000c001290c                KeSwitchEndian16(unsigned short)
                0x00000000c0012930                KeSwitchEndian32(unsigned int)
                0x00000000c0012960                EthernetCRC32(unsigned char*, int)
                0x00000000c0012a04                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012a65      0xd56 reg/cm.32
                0x00000000c0012a65                CmOpen(char const*)
                0x00000000c0012b83                CmClose(Reghive_Tag*)
                0x00000000c0012b99                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012bd5                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012c4c                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012c8b                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012cbd                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012cf9                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012d21                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012d42                CmExpand(Reghive_Tag*, int)
                0x00000000c0012dbd                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012e43                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012f37                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0013073                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00130d4                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0013104                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c001313b                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0013165                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c00131a5                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013249                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0013277                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0013415                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013462                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00134dc                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001352f                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00135f3                zStrtok(char*, char const*)
                0x00000000c0013665                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00136e6                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013789                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00137bb      0x52a reg/registry.32
                0x00000000c00137bb                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c001392c                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013a81                Reg::getLine(char*, char*, char*)
                0x00000000c0013ab8                Reg::readInt(char*, char*, int*)
                0x00000000c0013ba6                Reg::readString(char*, char*, char*, int)
                0x00000000c0013c27                Reg::readBool(char*, char*, bool*)
                0x00000000c0013c4c                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013c78                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013ca4                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013ce5       0x36 sys/eject.32
                0x00000000c0013ce5                SysEject(regs*)
 .text          0x00000000c0013d1b       0x18 sys/exit.32
                0x00000000c0013d1b                SysExit(regs*)
 .text          0x00000000c0013d33       0x1f sys/getcwd.32
                0x00000000c0013d33                SysGetCwd(regs*)
 .text          0x00000000c0013d52        0xc sys/getpid.32
                0x00000000c0013d52                SysGetPID(regs*)
 .text          0x00000000c0013d5e       0x1a sys/getramdata.32
                0x00000000c0013d5e                SysGetRAMData(regs*)
 .text          0x00000000c0013d78       0x82 sys/getvgaptr.32
                0x00000000c0013d78                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013dfa        0x2 
 .text          0x00000000c0013dfc       0xb9 sys/kill.32
                0x00000000c0013dfc                SysKill(regs*)
 .text          0x00000000c0013eb5       0xa8 sys/loaddll.32
                0x00000000c0013eb5                SysLoadDLL(regs*)
 .text          0x00000000c0013f5d       0x68 sys/read.32
                0x00000000c0013f5d                SysRead(regs*)
 .text          0x00000000c0013fc5       0x29 sys/registersignal.32
                0x00000000c0013fc5                SysRegisterSignal(regs*)
 .text          0x00000000c0013fee      0x19c sys/registry.32
                0x00000000c0013fee                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014065                SysRegistryReadExtent(regs*)
                0x00000000c00140ad                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00140d5                SysRegistryEnterDirectory(regs*)
                0x00000000c00140fd                SysRegistryGetNext(regs*)
                0x00000000c0014125                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001415f                SysRegistryOpen(regs*)
                0x00000000c0014173                SysRegistryClose(regs*)
 .text          0x00000000c001418a       0x55 sys/sbrk.32
                0x00000000c001418a                SysSbrk(regs*)
 .text          0x00000000c00141df       0x1c sys/setcwd.32
                0x00000000c00141df                SysSetCwd(regs*)
 .text          0x00000000c00141fb       0x96 sys/settime.32
                0x00000000c00141fb                SysSetTime(regs*)
 .text          0x00000000c0014291       0x2d sys/symlink.32
                0x00000000c0014291                SysSymlink(regs*)
 .text          0x00000000c00142be       0x4a sys/timezone.32
                0x00000000c00142be                SysTimezone(regs*)
 .text          0x00000000c0014308       0xfc sys/truncate.32
                0x00000000c0014308                SysTruncate(regs*)
 .text          0x00000000c0014404       0x68 sys/write.32
                0x00000000c0014404                SysWrite(regs*)
 .text          0x00000000c001446c       0x62 sys/wsbe.32
                0x00000000c001446c                SysWsbe(regs*)
 .text          0x00000000c00144ce       0x25 sys/yield.32
                0x00000000c00144ce                SysYield(regs*)
 .text          0x00000000c00144f3     0x11e6 thr/elf.32
                0x00000000c00144f3                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014781                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014993                Thr::runtimeReferenceHelper()
                0x00000000c00149a6                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00149f5                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014cb3                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00153ec                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001541e                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015455                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001546f                Thr::loadDLL(char const*, bool)
                0x00000000c00156a0                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00156d9        0x3 
 .text          0x00000000c00156dc     0x13d9 thr/prcssthr.32
                0x00000000c00156dc                userModeEntryPoint(void*)
                0x00000000c0015704                changeTSS
                0x00000000c0015734                switchToThread(ThreadControlBlock*)
                0x00000000c00157e4                Process::addArgs(char**)
                0x00000000c0015850                Process::Process(char const*, Process*, char**)
                0x00000000c0015850                Process::Process(char const*, Process*, char**)
                0x00000000c0015a5c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015a5c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015c30                taskStartupFunction
                0x00000000c0015c3c                Semaphore::Semaphore(int)
                0x00000000c0015c3c                Semaphore::Semaphore(int)
                0x00000000c0015c6c                Mutex::Mutex()
                0x00000000c0015c6c                Mutex::Mutex()
                0x00000000c0015c80                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015d8c                Process::createUserThread()
                0x00000000c0015dac                setupMultitasking(void (*)())
                0x00000000c0015ed0                schedule()
                0x00000000c0015f64                Semaphore::tryAcquire()
                0x00000000c0016038                Semaphore::assertLocked(char const*)
                0x00000000c00160bc                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00160e4                blockTask(TaskState)
                0x00000000c001611c                waitTask(int, int*, int)
                0x00000000c0016160                milliTenthSleepUntil(unsigned int)
                0x00000000c0016200                milliTenthSleep(unsigned int)
                0x00000000c0016214                sleep(unsigned int)
                0x00000000c0016230                Semaphore::acquire()
                0x00000000c00162f8                taskReturned
                0x00000000c001633c                Thr::processFromPID(int)
                0x00000000c00163e8                unblockTask(ThreadControlBlock*)
                0x00000000c0016494                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016768                cleanerTaskFunction(void*)
                0x00000000c0016870                terminateTask(int)
                0x00000000c001695c                Thr::terminateFromIRQ(int)
                0x00000000c001696c                Semaphore::release()
 .text          0x00000000c0016ab5      0xc27 vm86/vm8086.32
                0x00000000c0016ab5                Vm::inbv(unsigned short)
                0x00000000c0016ac8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016afe                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016b0e                Vm::getSegment(unsigned int)
                0x00000000c0016b16                Vm::getOffset(unsigned int)
                0x00000000c0016b1b                Vm::mainloop2()
                0x00000000c0016b55                Vm::mainVm8086Loop(void*)
                0x00000000c0016b65                Vm::mainloop3(unsigned long)
                0x00000000c0016b8b                Vm::initialise8086()
                0x00000000c0016bce                Vm::finish8086()
                0x00000000c0016c2f                Vm::getOutput8086(unsigned char*)
                0x00000000c0016c54                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016d0d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016eab                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016f44                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016f55                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016f67                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016f78                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016f8d                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0016fa3                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016fb8                Vm::faultHandler(regs*)
 .text          0x00000000c00176dc      0xaf0 arch/i386/hal.32
                0x00000000c00176dc                noCopro(unsigned long)
                0x00000000c00176dd                nmiHandler(regs*, void*)
                0x00000000c00176f6                doubleFault(regs*, void*)
                0x00000000c001770f                displayDebugInfo(regs*)
                0x00000000c0017a94                HalSystemIdle()
                0x00000000c0017b10                displayProgramFault(char const*)
                0x00000000c0017b5c                gpFault(regs*, void*)
                0x00000000c0017bc3                pgFault(regs*, void*)
                0x00000000c0017c4c                otherISRHandler(regs*, void*)
                0x00000000c0017c80                opcodeFault(regs*, void*)
                0x00000000c0017d03                i386SaveCoprocessor(void*)
                0x00000000c0017d17                i386LoadCoprocessor(void*)
                0x00000000c0017d2b                x87EmulHandler(regs*, void*)
                0x00000000c0017dc8                HalInitialiseCoprocessor()
                0x00000000c0017e76                HalPanic(char const*)
                0x00000000c0017f8a                HalQueryPerformanceCounter()
                0x00000000c0017fa5                HalInitialise()
                0x00000000c001815b                HalMakeBeep(int)
                0x00000000c0018195                HalGetRand()
                0x00000000c0018198                HalEndOfInterrupt(int)
                0x00000000c00181c9                HalRestart()
                0x00000000c00181ca                HalShutdown()
                0x00000000c00181cb                HalSleep()
 .text          0x00000000c00181cc      0x2dc arch/i386/pic.32
                0x00000000c00181cc                picIoWait()
                0x00000000c00181d4                picDisable()
                0x00000000c0018208                picGetIRQReg(int)
                0x00000000c0018284                picOpen()
                0x00000000c0018408                picEOI(int)
 .text          0x00000000c00184a8      0x674 arch/i386/rtc.32
                0x00000000c00184a8                RTC::open(int, int, void*)
                0x00000000c00184ac                RTC::close(int, int, void*)
                0x00000000c00184b0                RTC::timeInSecondsUTC()
                0x00000000c00184c2                RTC::timeInDatetimeUTC()
                0x00000000c00184e8                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018526                RTC::~RTC()
                0x00000000c0018526                RTC::~RTC()
                0x00000000c001854a                RTC::~RTC()
                0x00000000c0018574                RTC::get_update_in_progress_flag()
                0x00000000c001858e                RTC::completeRTCRefresh()
                0x00000000c001886e                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018a1c                rtcIRQHandler(regs*, void*)
                0x00000000c0018a62                RTC::RTC()
                0x00000000c0018a62                RTC::RTC()
 .text          0x00000000c0018b1c      0x1f4 arch/i386/vga.32
                0x00000000c0018b1c                HalConsoleScroll(int, int)
                0x00000000c0018c24                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018c88                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018d10     0x14cf fs/fat/vfslink.32
                0x00000000c0018d10                FAT::getName()
                0x00000000c0018d18                FAT::tell(void*, unsigned long long*)
                0x00000000c0018d54                FAT::stat(void*, unsigned long long*)
                0x00000000c0018d90                FAT::~FAT()
                0x00000000c0018d90                FAT::~FAT()
                0x00000000c0018db4                FAT::~FAT()
                0x00000000c0018ddc                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018e80                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018f44                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019128                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019344                FAT::allocateSwapfile(char const*, int)
                0x00000000c0019504                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019674                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00196d4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019734                FAT::close(void*)
                0x00000000c0019788                FAT::closeDir(void*)
                0x00000000c00197dc                FAT::truncate(void*, unsigned long long)
                0x00000000c0019848                FAT::seek(void*, unsigned long long)
                0x00000000c00198a0                fatWrapperReadDisk
                0x00000000c00198e0                fatWrapperWriteDisk
                0x00000000c0019920                fatWrapperIoctl
                0x00000000c0019a3c                FAT::FAT()
                0x00000000c0019a3c                FAT::FAT()
                0x00000000c0019a94                FAT::fixFilepath(char*)
                0x00000000c0019ad4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019c48                FAT::openDir(char const*, void**)
                0x00000000c0019cf8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019df0                FAT::unlink(char const*)
                0x00000000c0019e70                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a024                FAT::rename(char const*, char const*)
                0x00000000c001a0f0                FAT::mkdir(char const*)
                0x00000000c001a170                FAT::exists(char const*)
 *fill*         0x00000000c001a1df        0x1 
 .text          0x00000000c001a1e0       0x94 fs/iso9660/helper.32
                0x00000000c001a1e0                isoReadDiscSectorHelper
                0x00000000c001a23c                iso_kprintf
                0x00000000c001a258                iso_kprintfd
 .text          0x00000000c001a274      0x71c fs/iso9660/vfslink.32
                0x00000000c001a274                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a27a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a280                ISO9660::getName()
                0x00000000c001a286                ISO9660::closeDir(void*)
                0x00000000c001a290                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a296                ISO9660::unlink(char const*)
                0x00000000c001a29c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a2a2                ISO9660::rename(char const*, char const*)
                0x00000000c001a2a8                ISO9660::mkdir(char const*)
                0x00000000c001a2ae                ISO9660::~ISO9660()
                0x00000000c001a2ae                ISO9660::~ISO9660()
                0x00000000c001a2d2                ISO9660::~ISO9660()
                0x00000000c001a2fa                ISO9660::exists(char const*)
                0x00000000c001a30e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a3f4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a43c                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a47e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a4bc                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a50e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a650                ISO9660::close(void*)
                0x00000000c001a680                ISO9660::openDir(char const*, void**)
                0x00000000c001a75a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a877                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a8f6                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a968                ISO9660::ISO9660()
                0x00000000c001a968                ISO9660::ISO9660()
 .text          0x00000000c001a990      0x26c hal/sound/sndcard.32
                0x00000000c001a990                SoundCard::beginPlayback()
                0x00000000c001a99e                SoundCard::stopPlayback()
                0x00000000c001a9ac                SoundCard::SoundCard(char const*)
                0x00000000c001a9ac                SoundCard::SoundCard(char const*)
                0x00000000c001aa4a                SoundCard::~SoundCard()
                0x00000000c001aa4a                SoundCard::~SoundCard()
                0x00000000c001aa6e                SoundCard::~SoundCard()
                0x00000000c001aa98                SoundCard::configureRates(int, int, int)
                0x00000000c001aac8                SoundCard::getSamples16(int, short*)
                0x00000000c001ab24                SoundCard::getSamples32(int, int*)
                0x00000000c001abaa                SoundCard::addChannel(SoundPort*)
                0x00000000c001abe8                SoundCard::removeChannel(int)
 .text          0x00000000c001abfc      0x38a hal/sound/sndport.32
                0x00000000c001abfc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001abfc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ac88                SoundPort::~SoundPort()
                0x00000000c001ac88                SoundPort::~SoundPort()
                0x00000000c001acbc                SoundPort::unpause()
                0x00000000c001acc8                SoundPort::pause()
                0x00000000c001acd4                SoundPort::getBufferUsed()
                0x00000000c001acdc                SoundPort::getBufferSize()
                0x00000000c001ace4                SoundPort::buffer16(short*, int)
                0x00000000c001ad70                SoundPort::buffer32(int*, int)
                0x00000000c001adfc                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001aec8                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001af86        0x0 hw/bus/isa.32
 .text          0x00000000c001af86      0xbb7 hw/bus/pci.32
                0x00000000c001af86                PCI::open(int, int, void*)
                0x00000000c001afa4                PCI::close(int, int, void*)
                0x00000000c001afa8                PCI::PCI()
                0x00000000c001afa8                PCI::PCI()
                0x00000000c001b040                PCI::readBAR8(unsigned int, int)
                0x00000000c001b05c                PCI::readBAR16(unsigned int, int)
                0x00000000c001b07a                PCI::readBAR32(unsigned int, int)
                0x00000000c001b096                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b0b6                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b0d8                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b0f8                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b16e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b218                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b23c                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b264                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b2ae                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b2d6                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b2fa                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b31e                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b346                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b3aa                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b492                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b758                PCI::checkBus(unsigned char)
                0x00000000c001b77c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b8f6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ba72                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bae4                PCI::detect()
 *fill*         0x00000000c001bb3d        0x1 
 .text          0x00000000c001bb3e      0xb9a hw/diskctrl/ide.32
                0x00000000c001bb3e                IDE::close(int, int, void*)
                0x00000000c001bb42                IDE::IDE()
                0x00000000c001bb42                IDE::IDE()
                0x00000000c001bb76                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bb88                selectDrive(unsigned char, unsigned char)
                0x00000000c001bb8a                IDE::getBase(unsigned char)
                0x00000000c001bb9c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc5c                IDE::read(unsigned char, unsigned char)
                0x00000000c001bd0a                IDE::waitInterrupt(unsigned char)
                0x00000000c001bd6c                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bd88                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bda4                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bdee                IDE::open(int, int, void*)
                0x00000000c001c22c                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c2fc                IDE::detect()
                0x00000000c001c5ca                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c684                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c6d8      0x32a hw/diskctrl/satabus.32
                0x00000000c001c6d8                SATABus::close(int, int, void*)
                0x00000000c001c6dc                SATABus::detect()
                0x00000000c001c6de                SATABus::SATABus()
                0x00000000c001c6de                SATABus::SATABus()
                0x00000000c001c764                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c796                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c7de                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c7fe                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c828                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001c938                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001c9e2                SATABus::open(int, int, void*)
 .text          0x00000000c001ca02      0x93f hw/diskphys/ata.32
                0x00000000c001ca02                ATA::close(int, int, void*)
                0x00000000c001ca26                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001ca28                ATA::ATA()
                0x00000000c001ca28                ATA::ATA()
                0x00000000c001ca56                ATA::flush(bool)
                0x00000000c001caa4                ATA::readyForCommand()
                0x00000000c001caf0                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ce86                ATA::detectCHS()
                0x00000000c001ceb0                ATA::open(int, int, void*)
                0x00000000c001cf7c                combineCharAndColour(char, unsigned char)
                0x00000000c001cf8d                combineColours(unsigned char, unsigned char)
                0x00000000c001cf9a                ATA::read(unsigned long long, int, void*)
                0x00000000c001d170                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d341        0x1 
 .text          0x00000000c001d342      0x618 hw/diskphys/atapi.32
                0x00000000c001d342                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d348                ATAPI::close(int, int, void*)
                0x00000000c001d36c                ATAPI::ATAPI()
                0x00000000c001d36c                ATAPI::ATAPI()
                0x00000000c001d39a                ATAPI::readyForCommand()
                0x00000000c001d3ec                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d6b4                ATAPI::diskRemoved()
                0x00000000c001d6ee                ATAPI::eject()
                0x00000000c001d736                ATAPI::diskInserted()
                0x00000000c001d742                ATAPI::detectMedia()
                0x00000000c001d800                ATAPI::open(int, int, void*)
                0x00000000c001d8e0                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d95a      0x807 hw/diskphys/sata.32
                0x00000000c001d95a                SATA::close(int, int, void*)
                0x00000000c001d97e                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001d980                SATA::open(int, int, void*)
                0x00000000c001da2a                SATA::SATA()
                0x00000000c001da2a                SATA::SATA()
                0x00000000c001da58                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001dcac                SATA::read(unsigned long long, int, void*)
                0x00000000c001defc                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e161        0x1 
 .text          0x00000000c001e162      0x5d0 hw/diskphys/satapi.32
                0x00000000c001e162                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e168                SATAPI::close(int, int, void*)
                0x00000000c001e18c                SATAPI::SATAPI()
                0x00000000c001e18c                SATAPI::SATAPI()
                0x00000000c001e1ba                SATAPI::diskRemoved()
                0x00000000c001e1bc                SATAPI::diskInserted()
                0x00000000c001e1d8                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e4b6                SATAPI::eject()
                0x00000000c001e4f2                SATAPI::detectMedia()
                0x00000000c001e548                SATAPI::open(int, int, void*)
                0x00000000c001e648                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e732      0x45b hw/intctrl/apic.32
                0x00000000c001e732                IOAPIC::close(int, int, void*)
                0x00000000c001e738                apicGetBase()
                0x00000000c001e77e                IOAPIC::IOAPIC()
                0x00000000c001e77e                IOAPIC::IOAPIC()
                0x00000000c001e7a6                apicOpen()
                0x00000000c001e922                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e954                IOAPIC::read(int)
                0x00000000c001e97c                IOAPIC::open(int, int, void*)
                0x00000000c001ea62                IOAPIC::write(int, int)
                0x00000000c001ea8e                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001eb8d        0x3 
 .text          0x00000000c001eb90       0xf0 hw/timer/apictimer.32
                0x00000000c001eb90                APICTimer::close(int, int, void*)
                0x00000000c001eb98                apicTimerHandler(regs*, void*)
                0x00000000c001ebc0                APICTimer::open(int, int, void*)
                0x00000000c001ec30                APICTimer::write(int)
                0x00000000c001ec58                APICTimer::APICTimer()
                0x00000000c001ec58                APICTimer::APICTimer()
 .text          0x00000000c001ec80      0x1ad hw/timer/pit.32
                0x00000000c001ec80                PIT::write(int)
                0x00000000c001ed04                pitHandler(regs*, void*)
                0x00000000c001ed2c                PIT::open(int, int, void*)
                0x00000000c001ed7c                PIT::close(int, int, void*)
                0x00000000c001edac                PIT::PIT()
                0x00000000c001edac                PIT::PIT()
 *fill*         0x00000000c001ee2d        0x3 
 .text          0x00000000c001ee30       0x83 arch/i386/avx.32
                0x00000000c001ee30                avxDetect
                0x00000000c001ee5a                avxSave
                0x00000000c001ee6b                avxLoad
                0x00000000c001ee7c                avxInit
                0x00000000c001ee9e                avxClose
                0x00000000c001ee9f                wouldSheSayYes
 *fill*         0x00000000c001eeb3        0xd 
 .text          0x00000000c001eec0      0x2ec arch/i386/interrupt.32
                0x00000000c001eec0                isr0
                0x00000000c001eed0                isr1
                0x00000000c001eeda                isr2
                0x00000000c001eee4                isr3
                0x00000000c001eeee                isr4
                0x00000000c001eef8                isr5
                0x00000000c001ef02                isr6
                0x00000000c001ef0c                isr7
                0x00000000c001ef16                isr8
                0x00000000c001ef1e                isr9
                0x00000000c001ef28                isr10
                0x00000000c001ef30                isr11
                0x00000000c001ef38                isr12
                0x00000000c001ef40                isr13
                0x00000000c001ef5a                isr14
                0x00000000c001ef62                isr15
                0x00000000c001ef6c                isr16
                0x00000000c001ef76                isr17
                0x00000000c001ef80                isr18
                0x00000000c001ef8a                irq3
                0x00000000c001ef94                irq4
                0x00000000c001ef9e                irq5
                0x00000000c001efa8                irq6
                0x00000000c001efb2                irq7
                0x00000000c001efbc                irq8
                0x00000000c001efc6                irq9
                0x00000000c001efd0                irq10
                0x00000000c001efda                irq11
                0x00000000c001efe4                irq12
                0x00000000c001efee                irq13
                0x00000000c001eff8                irq14
                0x00000000c001f002                irq15
                0x00000000c001f00c                irq1
                0x00000000c001f013                irq2
                0x00000000c001f01a                isr96
                0x00000000c001f021                irq0
                0x00000000c001f026                int_common_stub
                0x00000000c001f058                syscall_common_stub
                0x00000000c001f15c                irq16
                0x00000000c001f166                irq17
                0x00000000c001f170                irq18
                0x00000000c001f17a                irq19
                0x00000000c001f184                irq20
                0x00000000c001f18e                irq21
                0x00000000c001f198                irq22
                0x00000000c001f1a2                irq23
 *fill*         0x00000000c001f1ac        0x4 
 .text          0x00000000c001f1b0       0x10 arch/i386/rdrand.32
                0x00000000c001f1b0                i386GetRDRAND
 .text          0x00000000c001f1c0       0x39 arch/i386/sse.32
                0x00000000c001f1c0                absolutelyNoChanceInHell
                0x00000000c001f1c0                sseDetect
                0x00000000c001f1d8                sseSave
                0x00000000c001f1e0                sseLoad
                0x00000000c001f1e8                sseInit
                0x00000000c001f1f8                sseClose
 *fill*         0x00000000c001f1f9        0x7 
 .text          0x00000000c001f200       0x49 arch/i386/x87.32
                0x00000000c001f206                x87Detect
                0x00000000c001f221                x87Save
                0x00000000c001f228                x87Load
                0x00000000c001f22f                x87Init
                0x00000000c001f248                x87Close
 *fill*         0x00000000c001f249        0x3 
 .text          0x00000000c001f24c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f271        0x0 crtn.32
 *fill*         0x00000000c001f271        0x3 
 .text          0x00000000c001f274      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f274                __divdi3
 *fill*         0x00000000c001f3bf        0x1 
 .text          0x00000000c001f3c0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f3c0                __moddi3
 *fill*         0x00000000c001f53e        0x2 
 .text          0x00000000c001f540       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f540                __udivdi3
 *fill*         0x00000000c001f63f        0x1 
 .text          0x00000000c001f640      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f640                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f760        0x0
 .iplt          0x00000000c001f760        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f75a        0xf
 .init          0x00000000c001f75a        0x3 crti.32
                0x00000000c001f75a                _init
 .init          0x00000000c001f75d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f762        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f767        0x2 crtn.32

.fini           0x00000000c001f769        0xa
 .fini          0x00000000c001f769        0x3 crti.32
                0x00000000c001f769                _fini
 .fini          0x00000000c001f76c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f771        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f774       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f774       0x23 core/computer.32
                0x00000000c001f774                Computer::~Computer()
                0x00000000c001f774                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f798       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f798       0x2a core/computer.32
                0x00000000c001f798                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f7c2       0x21
 .text._Z10idleCommonv
                0x00000000c001f7c2       0x21 core/idle.32
                0x00000000c001f7c2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f7e4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f7e4        0x2 core/unixfile.32
                0x00000000c001f7e4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f7e4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f7e6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f7e6       0x42 core/unixfile.32
                0x00000000c001f7e6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f7e6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f828       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f828       0xd3 core/unixfile.32
                0x00000000c001f828                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f8fc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f8fc        0x7 core/unixfile.32
                0x00000000c001f8fc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f904       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f904       0xa1 core/unixfile.32
                0x00000000c001f904                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f9a6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f9a6        0x8 core/unixfile.32
                0x00000000c001f9a6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f9ae       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f9ae       0x1a hal/device.32
                0x00000000c001f9ae                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f9ae                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f9c8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f9c8       0x2a hal/device.32
                0x00000000c001f9c8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f9f2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f9f2       0xdc hal/device.32
                0x00000000c001f9f2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001face       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001face       0x42 hal/device.32
                0x00000000c001face                LinkedList<Device>::LinkedList()
                0x00000000c001face                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fb10       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fb10       0x1c hal/timer.32
                0x00000000c001fb10                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fb2c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fb2c        0x7 hal/timer.32
                0x00000000c001fb2c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fb34       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fb34       0xbc hal/timer.32
                0x00000000c001fb34                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fbf0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fbf0       0xda hal/timer.32
                0x00000000c001fbf0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fccc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fccc       0x23 hw/acpi.32
                0x00000000c001fccc                ACPI::~ACPI()
                0x00000000c001fccc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fcf0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fcf0       0x2a hw/acpi.32
                0x00000000c001fcf0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fd1c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fd1c        0x2 hw/acpi.32
                0x00000000c001fd1c                LinkedList<Device>::~LinkedList()
                0x00000000c001fd1c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fd20       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fd20       0x1c hw/acpi.32
                0x00000000c001fd20                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fd3c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fd3c        0x7 hw/acpi.32
                0x00000000c001fd3c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fd44       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001fd44       0xb8 hw/acpi.32
                0x00000000c001fd44                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001fdfc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fdfc       0x23 hw/cpu.32
                0x00000000c001fdfc                CPU::~CPU()
                0x00000000c001fdfc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fe20       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fe20       0x2a hw/cpu.32
                0x00000000c001fe20                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fe4c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fe4c        0x8 sys/kill.32
                0x00000000c001fe4c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fe54        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fe54        0x2 thr/prcssthr.32
                0x00000000c001fe54                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fe54                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fe58       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fe58       0x49 thr/prcssthr.32
                0x00000000c001fe58                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fe58                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fea4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fea4       0x42 thr/prcssthr.32
                0x00000000c001fea4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fea4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001fee6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fee6       0x23 hw/bus/pci.32
                0x00000000c001fee6                PCI::~PCI()
                0x00000000c001fee6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ff0a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001ff0a       0x2a hw/bus/pci.32
                0x00000000c001ff0a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001ff34       0x23
 .text._ZN3IDED2Ev
                0x00000000c001ff34       0x23 hw/diskctrl/ide.32
                0x00000000c001ff34                IDE::~IDE()
                0x00000000c001ff34                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001ff58       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001ff58       0x2a hw/diskctrl/ide.32
                0x00000000c001ff58                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001ff82       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001ff82       0x23 hw/diskctrl/satabus.32
                0x00000000c001ff82                SATABus::~SATABus()
                0x00000000c001ff82                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001ffa6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001ffa6       0x2a hw/diskctrl/satabus.32
                0x00000000c001ffa6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001ffd0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001ffd0       0x23 hw/diskphys/ata.32
                0x00000000c001ffd0                ATA::~ATA()
                0x00000000c001ffd0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fff4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fff4       0x2a hw/diskphys/ata.32
                0x00000000c001fff4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c002001e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c002001e       0x23 hw/diskphys/atapi.32
                0x00000000c002001e                ATAPI::~ATAPI()
                0x00000000c002001e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020042       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020042       0x2a hw/diskphys/atapi.32
                0x00000000c0020042                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002006c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002006c       0x23 hw/diskphys/sata.32
                0x00000000c002006c                SATA::~SATA()
                0x00000000c002006c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020090       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020090       0x2a hw/diskphys/sata.32
                0x00000000c0020090                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00200ba       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00200ba       0x23 hw/diskphys/satapi.32
                0x00000000c00200ba                SATAPI::~SATAPI()
                0x00000000c00200ba                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00200de       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00200de       0x2a hw/diskphys/satapi.32
                0x00000000c00200de                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020108       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020108       0x23 hw/intctrl/apic.32
                0x00000000c0020108                IOAPIC::~IOAPIC()
                0x00000000c0020108                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002012c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002012c       0x2a hw/intctrl/apic.32
                0x00000000c002012c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020158       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020158       0x23 hw/timer/apictimer.32
                0x00000000c0020158                APICTimer::~APICTimer()
                0x00000000c0020158                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002017c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002017c       0x2a hw/timer/apictimer.32
                0x00000000c002017c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00201a8       0x23
 .text._ZN3PITD2Ev
                0x00000000c00201a8       0x23 hw/timer/pit.32
                0x00000000c00201a8                PIT::~PIT()
                0x00000000c00201a8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00201cc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00201cc       0x2a hw/timer/pit.32
                0x00000000c00201cc                PIT::~PIT()

.rodata         0x00000000c00201f6     0x319a
                0x00000000c00201f6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00201f6        0x2 
 .ctors         0x00000000c00201f8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00201fc        0x4 core/unixfile.32
 .ctors         0x00000000c0020200        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020204        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020208                end_ctors = .
                0x00000000c0020208                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020208        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002020c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002020c                __DTOR_END__
                0x00000000c0020210                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020210       0x10 
 .rodata        0x00000000c0020220      0x101 acpica/utclib.32
                0x00000000c0020220                AcpiGbl_Ctypes
 *fill*         0x00000000c0020321        0x3 
 .rodata        0x00000000c0020324       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002033c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020386       0x1a 
 .rodata        0x00000000c00203a0       0xed fs/fat/ff.32
 *fill*         0x00000000c002048d       0x13 
 .rodata        0x00000000c00204a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00208a0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002090f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020a24       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020a8c       0x2c core/computer.32
                0x00000000c0020a8c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020ab8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020ae8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020af4       0x17 core/main.32
 *fill*         0x00000000c0020b0b        0x1 
 .rodata.str1.4
                0x00000000c0020b0c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020bb1       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020c09       0x39 core/pipe.32
 *fill*         0x00000000c0020c42        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020c44       0x1c core/pipe.32
                0x00000000c0020c44                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020c60       0x2b core/terminal.32
 *fill*         0x00000000c0020c8b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020c8c       0x1c core/terminal.32
                0x00000000c0020c8c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020ca8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020cca       0x15 core/unixfile.32
 *fill*         0x00000000c0020cdf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020ce0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020d2b        0x8 core/unixfile.32
 *fill*         0x00000000c0020d33        0x1 
 .rodata.str1.4
                0x00000000c0020d34       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020d54       0x1c core/unixfile.32
                0x00000000c0020d54                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020d70       0x1c core/unixfile.32
                0x00000000c0020d70                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020d8c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021020      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021146       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0021179       0x11 dbg/kconsole.32
 *fill*         0x00000000c0021179        0x3 
 .rodata        0x00000000c002117c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00212cc      0x169 dbg/usban.32
 *fill*         0x00000000c0021435        0x3 
 .rodata.str1.4
                0x00000000c0021438      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002156f      0x13a fs/symlink.32
                                        0x146 (size before relaxing)
 .rodata.str1.1
                0x00000000c00216a9       0x26 fs/vfs.32
                                         0x28 (size before relaxing)
 *fill*         0x00000000c00216cf        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c00216d0       0x6c fs/vfs.32
                0x00000000c00216d0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002173c       0x1c fs/vfs.32
                0x00000000c002173c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021758       0x1c fs/vfs.32
                0x00000000c0021758                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021774       0x2c hal/bus.32
                0x00000000c0021774                vtable for Bus
 .rodata.str1.1
                0x00000000c00217a0       0x1e hal/clock.32
 *fill*         0x00000000c00217be        0x2 
 .rodata._ZTV5Clock
                0x00000000c00217c0       0x3c hal/clock.32
                0x00000000c00217c0                vtable for Clock
 *fill*         0x00000000c00217fc        0x4 
 .rodata        0x00000000c0021800       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021830       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021888       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021888       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021888       0x2c hal/device.32
                0x00000000c0021888                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00218b4       0x2c hal/device.32
                0x00000000c00218b4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00218e0       0x2c hal/diskctrl.32
                0x00000000c00218e0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002190c       0x38 hal/diskphys.32
                0x00000000c002190c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021944       0x3e hal/intctrl.32
 *fill*         0x00000000c0021982        0x2 
 .rodata.str1.4
                0x00000000c0021984       0x5d hal/intctrl.32
 .rodata        0x00000000c00219e1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021a34       0x34 hal/keybrd.32
                0x00000000c0021a34                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021a68       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021aac       0x2c hal/logidisk.32
                0x00000000c0021aac                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021ad8       0x2c hal/mouse.32
                0x00000000c0021ad8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021b04       0x34 hal/nic.32
                0x00000000c0021b04                vtable for NIC
 .rodata.str1.1
                0x00000000c0021b38        0xb hal/partition.32
 *fill*         0x00000000c0021b43        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021b44       0x44 hal/serial.32
                0x00000000c0021b44                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021b88       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021b88        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021b88       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021b88       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021b88       0x30 hal/timer.32
                0x00000000c0021b88                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021bb8       0x10 hal/vcache.32
                0x00000000c0021bb8                vtable for VCache
 .rodata.str1.1
                0x00000000c0021bc8       0x93 hal/video.32
 *fill*         0x00000000c0021c5b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021c5c       0x4c hal/video.32
                0x00000000c0021c5c                vtable for Video
 .rodata.str1.4
                0x00000000c0021ca8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021d43      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021e99       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021e99        0x8 hw/acpi.32
 *fill*         0x00000000c0021e99        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021e9c       0x2c hw/acpi.32
                0x00000000c0021e9c                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021ec8      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022043        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022044       0x2c hw/cpu.32
                0x00000000c0022044                vtable for CPU
 .rodata.str1.1
                0x00000000c0022070       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00220b0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00220ec       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c002217d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022246       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002228e       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00222b9       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002232f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022374        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002237e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002239f       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022435       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022489       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00224b5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022681       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00226d8      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00227e8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00227e8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00227e8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00227e8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00227e8       0xc2 vm86/vm8086.32
 *fill*         0x00000000c00228aa        0x2 
 .rodata        0x00000000c00228ac       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00228dc      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022a7b        0x1 
 .rodata.str1.4
                0x00000000c0022a7c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022aef       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022b04       0x3c arch/i386/rtc.32
                0x00000000c0022b04                vtable for RTC
 .rodata.str1.1
                0x00000000c0022b40       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022b81        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022b84       0x6c fs/fat/vfslink.32
                0x00000000c0022b84                vtable for FAT
 .rodata.str1.1
                0x00000000c0022bf0       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022bf0      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022d28       0x6c fs/iso9660/vfslink.32
                0x00000000c0022d28                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022d94       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022dd8       0x34 hal/sound/sndcard.32
                0x00000000c0022dd8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022e0c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022e4b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0022e83       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022f24       0x2c hw/bus/pci.32
                0x00000000c0022f24                vtable for PCI
 .rodata.str1.1
                0x00000000c0022f50       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022fd7        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022fd8       0x2c hw/diskctrl/ide.32
                0x00000000c0022fd8                vtable for IDE
 .rodata.str1.4
                0x00000000c0023004       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023028       0x2c hw/diskctrl/satabus.32
                0x00000000c0023028                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023054       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023066        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023068       0x38 hw/diskphys/ata.32
                0x00000000c0023068                vtable for ATA
 .rodata.str1.1
                0x00000000c00230a0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00230ad        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00230b0       0x38 hw/diskphys/atapi.32
                0x00000000c00230b0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00230e8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023164       0x38 hw/diskphys/sata.32
                0x00000000c0023164                vtable for SATA
 .rodata.str1.1
                0x00000000c002319c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023286        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023288       0x38 hw/diskphys/satapi.32
                0x00000000c0023288                vtable for SATAPI
 .rodata        0x00000000c00232c0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00232c8       0x2c hw/intctrl/apic.32
                0x00000000c00232c8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00232f4       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002330f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023310       0x30 hw/timer/apictimer.32
                0x00000000c0023310                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023340       0x1d hw/timer/pit.32
 *fill*         0x00000000c002335d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023360       0x30 hw/timer/pit.32
                0x00000000c0023360                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023390      0xbb1
 *(.data)
 .data          0x00000000c0023390        0x0 crti.32
 .data          0x00000000c0023390        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023390                __dso_handle
 .data          0x00000000c0023394        0x0 acpica/utclib.32
 .data          0x00000000c0023394        0x0 core/malloc.32
 .data          0x00000000c0023394        0x0 libk/ctype.32
 .data          0x00000000c0023394        0x0 libk/string.32
 .data          0x00000000c0023394        0x0 fs/fat/diskio.32
 .data          0x00000000c0023394        0x0 fs/fat/ff.32
 .data          0x00000000c0023394        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023394        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023394        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0023394        0x0 core/computer.32
 .data          0x00000000c0023394        0x0 core/gdt.32
 .data          0x00000000c0023394        0x0 core/idle.32
 .data          0x00000000c0023394        0x0 core/idt.32
 .data          0x00000000c0023394        0x4 core/kheap.32
 .data          0x00000000c0023398        0x0 core/main.32
 .data          0x00000000c0023398        0x4 core/physmgr.32
                0x00000000c0023398                Phys::bitmap
 .data          0x00000000c002339c        0x0 core/pipe.32
 *fill*         0x00000000c002339c        0x4 
 .data          0x00000000c00233a0       0x60 core/terminal.32
                0x00000000c00233a0                VgaText::hiddenOut
                0x00000000c00233c0                ansiToVGAMappings
 .data          0x00000000c0023400        0x0 core/tss.32
 .data          0x00000000c0023400        0x4 core/unixfile.32
                0x00000000c0023400                UnixFile::nextFd
 .data          0x00000000c0023404       0x15 core/virtmgr.32
                0x00000000c0023404                Virt::pageAllocPtr
                0x00000000c0023408                Virt::bitmap
                0x00000000c002340c                Virt::swapfileSectorsPerPage
                0x00000000c0023410                Virt::swapfileLength
                0x00000000c0023414                Virt::swapfileSector
                0x00000000c0023418                Virt::swapfileDrive
 *fill*         0x00000000c0023419        0x3 
 .data          0x00000000c002341c        0x4 coreobjs/c++.32
                0x00000000c002341c                __stack_chk_guard
 .data          0x00000000c0023420        0x0 dbg/kconsole.32
 .data          0x00000000c0023420       0x28 dbg/usban.32
                0x00000000c0023420                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023448        0x0 fs/symlink.32
 .data          0x00000000c0023448        0x0 fs/vfs.32
 .data          0x00000000c0023448        0x0 hal/bus.32
 .data          0x00000000c0023448        0x0 hal/buzzer.32
 .data          0x00000000c0023448        0x0 hal/clock.32
 .data          0x00000000c0023448        0x0 hal/device.32
 .data          0x00000000c0023448        0x0 hal/diskctrl.32
 .data          0x00000000c0023448        0x0 hal/diskphys.32
 .data          0x00000000c0023448        0x0 hal/fpu.32
 .data          0x00000000c0023448        0x0 hal/intctrl.32
 .data          0x00000000c0023448        0x0 hal/keybrd.32
 .data          0x00000000c0023448        0x0 hal/logidisk.32
 .data          0x00000000c0023448        0x0 hal/mouse.32
 .data          0x00000000c0023448        0x0 hal/nic.32
 .data          0x00000000c0023448        0x0 hal/partition.32
 .data          0x00000000c0023448        0x0 hal/serial.32
 .data          0x00000000c0023448        0x0 hal/timer.32
 .data          0x00000000c0023448        0x0 hal/vcache.32
 .data          0x00000000c0023448        0x0 hal/video.32
 .data          0x00000000c0023448       0x10 hw/acpi.32
                0x00000000c0023448                legacyIRQRemaps
 .data          0x00000000c0023458        0x4 hw/cpu.32
                0x00000000c0023458                lastCode
 .data          0x00000000c002345c        0x0 krnl/atexit.32
 *fill*         0x00000000c002345c        0x4 
 .data          0x00000000c0023460      0x142 krnl/bootmsg.32
                0x00000000c0023460                KiSplashScreen
 .data          0x00000000c00235a2        0x0 krnl/compat.32
 *fill*         0x00000000c00235a2       0x1e 
 .data          0x00000000c00235c0      0x400 krnl/crc32.32
                0x00000000c00235c0                KiPolyLookupCRC32
 .data          0x00000000c00239c0       0x4d krnl/env.32
                0x00000000c00239c0                defaultSysEnv
 .data          0x00000000c0023a0d        0x0 krnl/inlines.32
 .data          0x00000000c0023a0d        0x0 krnl/panic.32
 .data          0x00000000c0023a0d        0x0 krnl/powctrl.32
 .data          0x00000000c0023a0d        0x0 krnl/random.32
 .data          0x00000000c0023a0d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023a0d       0x13 
 .data          0x00000000c0023a20       0x4c krnl/signal.32
                0x00000000c0023a20                KiDefaultSignalHandlers
 *fill*         0x00000000c0023a6c       0x14 
 .data          0x00000000c0023a80       0xfc krnl/syscalls.32
                0x00000000c0023a80                systemCallHandlers
 .data          0x00000000c0023b7c        0x0 net/ethernet.32
 *fill*         0x00000000c0023b7c        0x4 
 .data          0x00000000c0023b80      0x100 reg/cm.32
                0x00000000c0023b80                CmComponents
 .data          0x00000000c0023c80        0x0 reg/registry.32
 .data          0x00000000c0023c80        0x0 sys/eject.32
 .data          0x00000000c0023c80        0x0 sys/exit.32
 .data          0x00000000c0023c80        0x0 sys/getcwd.32
 .data          0x00000000c0023c80        0x0 sys/getpid.32
 .data          0x00000000c0023c80        0x0 sys/getramdata.32
 .data          0x00000000c0023c80        0x0 sys/getvgaptr.32
 .data          0x00000000c0023c80        0x0 sys/kill.32
 .data          0x00000000c0023c80        0x0 sys/loaddll.32
 .data          0x00000000c0023c80        0x0 sys/read.32
 .data          0x00000000c0023c80        0x0 sys/registersignal.32
 .data          0x00000000c0023c80        0x0 sys/registry.32
 .data          0x00000000c0023c80        0x0 sys/sbrk.32
 .data          0x00000000c0023c80        0x0 sys/setcwd.32
 .data          0x00000000c0023c80        0x0 sys/settime.32
 .data          0x00000000c0023c80        0x0 sys/symlink.32
 .data          0x00000000c0023c80        0x0 sys/timezone.32
 .data          0x00000000c0023c80        0x0 sys/truncate.32
 .data          0x00000000c0023c80        0x0 sys/write.32
 .data          0x00000000c0023c80        0x0 sys/wsbe.32
 .data          0x00000000c0023c80        0x0 sys/yield.32
 .data          0x00000000c0023c80        0x0 thr/elf.32
 .data          0x00000000c0023c80        0x4 thr/prcssthr.32
                0x00000000c0023c80                Thr::nextPID
 .data          0x00000000c0023c84        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023c84       0x1c 
 .data          0x00000000c0023ca0      0x2a0 arch/i386/hal.32
                0x00000000c0023ca0                exceptionNames
 .data          0x00000000c0023f40        0x0 arch/i386/pic.32
 .data          0x00000000c0023f40        0x0 arch/i386/rtc.32
 .data          0x00000000c0023f40        0x0 arch/i386/vga.32
 .data          0x00000000c0023f40        0x0 fs/fat/vfslink.32
 .data          0x00000000c0023f40        0x0 fs/iso9660/helper.32
 .data          0x00000000c0023f40        0x1 fs/iso9660/vfslink.32
                0x00000000c0023f40                recentDriveletter
 .data          0x00000000c0023f41        0x0 hal/sound/sndcard.32
 .data          0x00000000c0023f41        0x0 hal/sound/sndport.32
 .data          0x00000000c0023f41        0x0 hw/bus/isa.32
 .data          0x00000000c0023f41        0x0 hw/bus/pci.32
 .data          0x00000000c0023f41        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0023f41        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0023f41        0x0 hw/diskphys/ata.32
 .data          0x00000000c0023f41        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0023f41        0x0 hw/diskphys/sata.32
 .data          0x00000000c0023f41        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0023f41        0x0 hw/intctrl/apic.32
 .data          0x00000000c0023f41        0x0 hw/timer/apictimer.32
 .data          0x00000000c0023f41        0x0 hw/timer/pit.32
 .data          0x00000000c0023f41        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0023f41        0x0 crtn.32
 .data          0x00000000c0023f41        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0023f41        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0023f41        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0023f41        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0023f44        0x0
 .got           0x00000000c0023f44        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0023f44        0x0
 .got.plt       0x00000000c0023f44        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0023f44        0x0
 .igot.plt      0x00000000c0023f44        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0023f44        0x0
 .tm_clone_table
                0x00000000c0023f44        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0023f44        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0023f41      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0023f41        0x3 
 .eh_frame      0x00000000c0023f44        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0023f44        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0023f44       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0023f9c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0023fdc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024048       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
