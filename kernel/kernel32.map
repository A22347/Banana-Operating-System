Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD net/ethernet.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2101e
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x4fb D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                voodooXADD
                0x00000000c000027f                doTPAUSE
                0x00000000c0000289                hasLegacyFPU
                0x00000000c00002ae                is486
                0x00000000c00002e4                detectCPUID
                0x00000000c00002fa                goToVM86
                0x00000000c000032a                goToUsermode
                0x00000000c0000354                switchToThreadASMFirstTime
                0x00000000c0000362                switchToThreadASM
                0x00000000c00003f2                asmQuickAcquireLock
                0x00000000c0000410                asmQuickReleaseLock
                0x00000000c000041c                asmAcquireLock
                0x00000000c000043d                asmReleaseLock
                0x00000000c0000450                loadGDT
                0x00000000c0000470                isr0
                0x00000000c0000480                isr1
                0x00000000c000048a                isr2
                0x00000000c0000494                isr3
                0x00000000c000049e                isr4
                0x00000000c00004a8                isr5
                0x00000000c00004b2                isr6
                0x00000000c00004bc                isr7
                0x00000000c00004c6                isr8
                0x00000000c00004ce                isr9
                0x00000000c00004d8                isr10
                0x00000000c00004e0                isr11
                0x00000000c00004e8                isr12
                0x00000000c00004f0                isr13
                0x00000000c00004f8                isr14
                0x00000000c0000500                isr15
                0x00000000c000050a                isr16
                0x00000000c0000514                isr17
                0x00000000c000051e                isr18
                0x00000000c0000528                irq3
                0x00000000c0000532                irq4
                0x00000000c000053c                irq5
                0x00000000c0000546                irq6
                0x00000000c0000550                irq7
                0x00000000c000055a                irq8
                0x00000000c0000564                irq9
                0x00000000c000056e                irq10
                0x00000000c0000578                irq11
                0x00000000c0000582                irq12
                0x00000000c000058c                irq13
                0x00000000c0000596                irq14
                0x00000000c00005a0                irq15
                0x00000000c00005aa                irq1
                0x00000000c00005b1                irq2
                0x00000000c00005b8                isr96
                0x00000000c00005bf                irq0
                0x00000000c00005c4                syscall_common_stub
                0x00000000c00005c4                int_common_stub
                0x00000000c00005f6                irq16
                0x00000000c0000600                irq17
                0x00000000c000060a                irq18
                0x00000000c0000614                irq19
                0x00000000c000061e                irq20
                0x00000000c0000628                irq21
                0x00000000c0000632                irq22
                0x00000000c000063c                irq23
                0x00000000c0000646                memcpy
 *fill*         0x00000000c000064b        0x1 
 .text          0x00000000c000064c      0x5dd acpica/utclib.32
                0x00000000c000064c                memcmp
                0x00000000c0000688                memmove
                0x00000000c0000750                memset
                0x00000000c000076c                strlen
                0x00000000c0000784                strpbrk
                0x00000000c00007c0                strtok
                0x00000000c000080c                strcpy
                0x00000000c0000830                strncpy
                0x00000000c0000898                strcmp
                0x00000000c00008d8                strchr
                0x00000000c00008fc                strncmp
                0x00000000c000094c                strcat
                0x00000000c000097c                strncat
                0x00000000c00009b8                strstr
                0x00000000c0000a00                toupper
                0x00000000c0000a14                tolower
                0x00000000c0000a28                simple_strtoul
 .text          0x00000000c0000c29      0xfad core/malloc.32
                0x00000000c0000d94                dlfree
                0x00000000c00010ef                dlmalloc
                0x00000000c000162c                dlrealloc
                0x00000000c00017cf                dlmemalign
                0x00000000c00018f2                dlcalloc
                0x00000000c000198c                dlcfree
                0x00000000c0001991                dlindependent_calloc
                0x00000000c00019b6                dlindependent_comalloc
                0x00000000c00019cd                dlvalloc
                0x00000000c00019f8                dlpvalloc
                0x00000000c0001a2e                dlmalloc_trim
                0x00000000c0001a3b                dlmalloc_usable_size
                0x00000000c0001a6c                dlmallinfo
                0x00000000c0001b3b                dlmalloc_stats
                0x00000000c0001b4c                dlmallopt
 .text          0x00000000c0001bd6        0x0 libk/string.32
 .text          0x00000000c0001bd6       0x51 fs/fat/diskio.32
                0x00000000c0001bd6                disk_status
                0x00000000c0001bd9                disk_initialize
                0x00000000c0001bdc                disk_read
                0x00000000c0001bf2                disk_write
                0x00000000c0001c08                disk_ioctl
 .text          0x00000000c0001c27     0x6a69 fs/fat/ff.32
                0x00000000c0004ef5                f_mount
                0x00000000c0004f57                f_open
                0x00000000c0005393                f_read
                0x00000000c0005613                f_write
                0x00000000c00058cd                f_sync
                0x00000000c0005aa9                f_close
                0x00000000c0005ad8                f_lseek
                0x00000000c0005f8f                f_opendir
                0x00000000c0006091                f_closedir
                0x00000000c00060b3                f_readdir
                0x00000000c000614e                f_stat
                0x00000000c00061dd                f_getfree
                0x00000000c00063a8                f_truncate
                0x00000000c00064a0                f_unlink
                0x00000000c0006623                f_mkdir
                0x00000000c000684f                f_rename
                0x00000000c0006b42                f_chmod
                0x00000000c0006c20                f_utime
                0x00000000c0006cfe                f_getlabel
                0x00000000c0006eec                f_setlabel
                0x00000000c0007159                f_expand
                0x00000000c000738f                f_forward
                0x00000000c000756d                f_mkfs
 .text          0x00000000c0008690       0x2d fs/fat/ffsystem.32
                0x00000000c0008690                ff_memalloc
                0x00000000c00086a6                ff_memfree
 .text          0x00000000c00086bd      0x253 fs/fat/ffunicode.32
                0x00000000c00086bd                ff_uni2oem
                0x00000000c000874d                ff_oem2uni
                0x00000000c00087b9                ff_wtoupper
 .text          0x00000000c0008910       0xa7 compat/inlines.32
                0x00000000c0008910                CPU::current()
                0x00000000c000891c                operator new(unsigned long)
                0x00000000c0008921                operator delete(void*)
                0x00000000c0008926                disableIRQs()
                0x00000000c000892e                enableIRQs()
                0x00000000c000893d                lockScheduler()
                0x00000000c0008945                unlockScheduler()
                0x00000000c0008954                lockStuff()
                0x00000000c0008962                unlockStuff()
                0x00000000c000899c                Virt::getAKernelVAS()
                0x00000000c00089a2                __not_memcpy
 .text          0x00000000c00089b7      0x111 compat/resolve.32
                0x00000000c00089b7                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0008ac8      0x7f7 core/computer.32
                0x00000000c0008ac8                Computer::close(int, int, void*)
                0x00000000c0008b0c                Krnl::firstTask()
                0x00000000c0008c5a                Computer::Computer()
                0x00000000c0008c5a                Computer::Computer()
                0x00000000c0008db6                Computer::setBootMessage(char const*)
                0x00000000c0008db8                Computer::detectFeatures()
                0x00000000c0008fc2                Computer::displayFeatures()
                0x00000000c0008fc4                Computer::rdmsr(unsigned int)
                0x00000000c0008ff0                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0009028                Computer::nmiEnabled()
                0x00000000c0009034                Computer::readCMOS(unsigned char)
                0x00000000c000904e                Computer::enableNMI(bool)
                0x00000000c0009066                Computer::open(int, int, void*)
                0x00000000c0009202                Computer::disableNMI()
                0x00000000c0009210                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000922e                Computer::handleNMI()
                0x00000000c0009294                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c00092bf        0x1 
 .text          0x00000000c00092c0      0x19d core/gdt.32
                0x00000000c00092c0                GDTEntry::setBase(unsigned int)
                0x00000000c00092dc                GDTEntry::setLimit(unsigned int)
                0x00000000c00092fa                GDT::GDT()
                0x00000000c00092fa                GDT::GDT()
                0x00000000c0009310                GDT::addEntry(GDTEntry)
                0x00000000c0009332                GDT::getNumberOfEntries()
                0x00000000c000933a                GDT::flush()
                0x00000000c000935c                GDT::setup()
 .text          0x00000000c000945d       0x6b core/idle.32
                0x00000000c000945d                idleFunction(void*)
 .text          0x00000000c00094c8      0x45e core/idt.32
                0x00000000c00094c8                IDTEntry::IDTEntry(bool)
                0x00000000c00094c8                IDTEntry::IDTEntry(bool)
                0x00000000c0009536                IDTEntry::setOffset(unsigned int)
                0x00000000c000954a                IDT::IDT()
                0x00000000c000954a                IDT::IDT()
                0x00000000c000954c                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0009554                IDT::addEntry(IDTEntry, int)
                0x00000000c000956e                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00095a6                IDT::flush()
                0x00000000c00095c0                IDT::setup()
 .text          0x00000000c0009926      0x191 core/kheap.32
                0x00000000c0009926                sbrk
                0x00000000c00099c9                mmap
                0x00000000c00099df                munmap
                0x00000000c00099f5                liballoc_lock()
                0x00000000c0009a02                liballoc_unlock()
                0x00000000c0009a16                liballoc_alloc(int)
                0x00000000c0009a2e                liballoc_free(void*, int)
                0x00000000c0009a49                realloc
                0x00000000c0009a5d                malloc
                0x00000000c0009a6d                free
                0x00000000c0009a7d                rfree
                0x00000000c0009a8d                calloc
 .text          0x00000000c0009ab7      0x1b6 core/main.32
                0x00000000c0009ab7                Krnl::setBootMessage(char const*)
                0x00000000c0009b23                kernel_main
 .text          0x00000000c0009c6d      0x5b5 core/physmgr.32
                0x00000000c0009c6d                Phys::allocateDMA(unsigned long)
                0x00000000c0009d3b                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0009d9a                Phys::setPageState(unsigned long, bool)
                0x00000000c0009dcc                Phys::getPageState(unsigned long)
                0x00000000c0009de8                Phys::freePage(unsigned long)
                0x00000000c0009e59                Phys::allocatePage()
                0x00000000c0009f51                Phys::allocateContiguousPages(int)
                0x00000000c0009fad                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0009fe5                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000a222      0x273 core/pipe.32
                0x00000000c000a222                Pipe::isAtty()
                0x00000000c000a226                Pipe::~Pipe()
                0x00000000c000a226                Pipe::~Pipe()
                0x00000000c000a24a                Pipe::~Pipe()
                0x00000000c000a272                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000a36e                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000a42e                Pipe::Pipe(int)
                0x00000000c000a42e                Pipe::Pipe(int)
 *fill*         0x00000000c000a495        0x1 
 .text          0x00000000c000a496      0xb93 core/terminal.32
                0x00000000c000a496                VgaText::isAtty()
                0x00000000c000a49a                VgaText::~VgaText()
                0x00000000c000a49a                VgaText::~VgaText()
                0x00000000c000a4be                VgaText::~VgaText()
                0x00000000c000a4e8                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000a508                setTerminalScrollLock(bool)
                0x00000000c000a509                addToTerminalCycle(VgaText*)
                0x00000000c000a52a                installVgaTextImplementation()
                0x00000000c000a53f                scrollTerminalScrollLock(int)
                0x00000000c000a540                VgaText::updateTitle()
                0x00000000c000a57e                VgaText::load()
                0x00000000c000a5cc                VgaText::updateCursor()
                0x00000000c000a5e2                VgaText::doANSI_SGR(int)
                0x00000000c000a656                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000a666                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000a676                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000a696                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000a6a6                VgaText::setTitleColour(VgaColour)
                0x00000000c000a6b6                VgaText::setTitle(char*)
                0x00000000c000a6dc                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000a6ee                VgaText::scrollScreen()
                0x00000000c000a782                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000a794                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000a7f0                VgaText::getCursorX()
                0x00000000c000a7f8                VgaText::getCursorY()
                0x00000000c000a800                VgaText::setCursor(int, int)
                0x00000000c000a817                setActiveTerminal(VgaText*)
                0x00000000c000a879                doTerminalCycle()
                0x00000000c000a894                VgaText::setCursorX(int)
                0x00000000c000a8ac                VgaText::setCursorY(int)
                0x00000000c000a8c4                VgaText::incrementCursor(bool)
                0x00000000c000a918                VgaText::decrementCursor(bool)
                0x00000000c000a93a                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000aa12                VgaText::doUpdate()
                0x00000000c000aa20                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000ab98                VgaText::clearScreen()
                0x00000000c000abf2                VgaText::putchar(char)
                0x00000000c000acde                VgaText::putx(unsigned int)
                0x00000000c000ad24                VgaText::puts(char const*)
                0x00000000c000ad4a                VgaText::VgaText(char const*)
                0x00000000c000ad4a                VgaText::VgaText(char const*)
                0x00000000c000aec8                VgaText::receiveKey(unsigned char)
                0x00000000c000afb0                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000b004                newTerminal(char*)
 *fill*         0x00000000c000b029        0x1 
 .text          0x00000000c000b02a      0x19d core/tss.32
                0x00000000c000b02a                TSS::TSS()
                0x00000000c000b02a                TSS::TSS()
                0x00000000c000b038                TSS::setESP(unsigned long)
                0x00000000c000b04a                TSS::flush()
                0x00000000c000b06a                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000b1c7        0x1 
 .text          0x00000000c000b1c8      0x4c2 core/unixfile.32
                0x00000000c000b1c8                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000b21e                ReservedFilename::isAtty()
                0x00000000c000b23a                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000b298                UnixFile::getFileDescriptor()
                0x00000000c000b2a0                UnixFile::UnixFile(int)
                0x00000000c000b2a0                UnixFile::UnixFile(int)
                0x00000000c000b450                ReservedFilename::ReservedFilename(int)
                0x00000000c000b450                ReservedFilename::ReservedFilename(int)
                0x00000000c000b482                UnixFile::~UnixFile()
                0x00000000c000b482                UnixFile::~UnixFile()
                0x00000000c000b51a                UnixFile::~UnixFile()
                0x00000000c000b542                ReservedFilename::~ReservedFilename()
                0x00000000c000b542                ReservedFilename::~ReservedFilename()
                0x00000000c000b566                ReservedFilename::~ReservedFilename()
                0x00000000c000b58d                getFromFileDescriptor(int)
 .text          0x00000000c000b68a     0x12cd core/virtmgr.32
                0x00000000c000b68a                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000b6bf                Virt::getPageState(unsigned long)
                0x00000000c000b6e3                Virt::allocateKernelVirtualPages(int)
                0x00000000c000b7f4                Virt::freeSwapfilePage(unsigned long)
                0x00000000c000b812                Virt::swapIDToSector(unsigned long)
                0x00000000c000b824                Virt::allocateSwapfilePage()
                0x00000000c000b8a2                Virt::virtualMemorySetup()
                0x00000000c000b8ed                Virt::setupPageSwapping(int)
                0x00000000c000b95e                VAS::VAS()
                0x00000000c000b95e                VAS::VAS()
                0x00000000c000b99a                VAS::VAS(VAS*)
                0x00000000c000b99a                VAS::VAS(VAS*)
                0x00000000c000b9c8                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000b9f4                VAS::getPageTableEntry(unsigned long)
                0x00000000c000ba13                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000bb36                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000bb5a                VAS::virtualToPhysical(unsigned long)
                0x00000000c000bb72                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000bbb2                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000bbe4                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000bc0e                VAS::~VAS()
                0x00000000c000bc0e                VAS::~VAS()
                0x00000000c000bd8a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000be8c                VAS::allocatePages(int, int)
                0x00000000c000c064                VAS::setCPUSpecific(unsigned long)
                0x00000000c000c080                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000c146                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000c234                VAS::VAS(bool)
                0x00000000c000c234                VAS::VAS(bool)
                0x00000000c000c4b4                VAS::evict(unsigned long)
                0x00000000c000c5bc                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000c744                VAS::scanForEviction()
                0x00000000c000c82b                mapVASFirstTime
 .text          0x00000000c000c957       0x95 coreobjs/c++.32
                0x00000000c000c957                __cxa_atexit
                0x00000000c000c95a                __cxa_finalize
                0x00000000c000c95b                __stack_chk_fail
                0x00000000c000c9c7                __cxa_pure_virtual
                0x00000000c000c9d8                operator new[](unsigned long)
                0x00000000c000c9dd                operator delete(void*, unsigned long)
                0x00000000c000c9e2                operator delete[](void*)
                0x00000000c000c9e7                operator delete[](void*, unsigned long)
 .text          0x00000000c000c9ec      0x1fc dbg/kconsole.32
                0x00000000c000c9ec                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ca45                Dbg::logc(char)
                0x00000000c000ca65                Dbg::logs(char*)
                0x00000000c000ca82                Dbg::logWriteInt(unsigned int)
                0x00000000c000ca9f                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000cabe                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000cbe8      0xb82 fs/vfs.32
                0x00000000c000cbe8                File::read(unsigned long long, void*, int*)
                0x00000000c000cc40                File::write(unsigned long long, void*, int*)
                0x00000000c000cc98                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ccf0                Directory::write(unsigned long long, void*, int*)
                0x00000000c000cd1e                File::isAtty()
                0x00000000c000cd22                Directory::isAtty()
                0x00000000c000cd26                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000cd2c                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000cd32                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000cd38                File::~File()
                0x00000000c000cd38                File::~File()
                0x00000000c000cd5c                File::~File()
                0x00000000c000cd86                Directory::~Directory()
                0x00000000c000cd86                Directory::~Directory()
                0x00000000c000cdaa                Directory::~Directory()
                0x00000000c000cdd4                Filesystem::Filesystem()
                0x00000000c000cdd4                Filesystem::Filesystem()
                0x00000000c000cdf8                Filesystem::~Filesystem()
                0x00000000c000cdf8                Filesystem::~Filesystem()
                0x00000000c000ce06                Filesystem::~Filesystem()
                0x00000000c000ce2a                Fs::getcwd(Process*, char*, int)
                0x00000000c000ce54                Fs::initVFS()
                0x00000000c000ce7e                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000d028                File::File(char const*, Process*)
                0x00000000c000d028                File::File(char const*, Process*)
                0x00000000c000d08c                File::open(FileOpenMode)
                0x00000000c000d0ea                File::close()
                0x00000000c000d14a                File::seek(unsigned long long)
                0x00000000c000d1a0                File::tell(unsigned long long*)
                0x00000000c000d1f0                File::rewind()
                0x00000000c000d204                File::unlink()
                0x00000000c000d250                File::rename(char const*)
                0x00000000c000d29e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000d2fa                File::exists()
                0x00000000c000d338                File::stat(unsigned long long*, bool*)
                0x00000000c000d399                Fs::setcwd(Process*, char*)
                0x00000000c000d4d4                Directory::Directory(char const*, Process*)
                0x00000000c000d4d4                Directory::Directory(char const*, Process*)
                0x00000000c000d538                Directory::open()
                0x00000000c000d594                Directory::close()
                0x00000000c000d5f4                Directory::unlink()
                0x00000000c000d640                Directory::rename(char const*)
                0x00000000c000d68e                Directory::exists()
                0x00000000c000d6cc                Directory::read(dirent*)
                0x00000000c000d718                Directory::create()
                0x00000000c000d764                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000d76a       0x84 hal/bus.32
                0x00000000c000d76a                Bus::Bus(char const*)
                0x00000000c000d76a                Bus::Bus(char const*)
                0x00000000c000d7a0                Bus::~Bus()
                0x00000000c000d7a0                Bus::~Bus()
                0x00000000c000d7c4                Bus::~Bus()
 .text          0x00000000c000d7ee      0x156 hal/buzzer.32
                0x00000000c000d7ee                Buzzer::Buzzer(char const*)
                0x00000000c000d7ee                Buzzer::Buzzer(char const*)
                0x00000000c000d832                Buzzer::~Buzzer()
                0x00000000c000d832                Buzzer::~Buzzer()
                0x00000000c000d856                Buzzer::~Buzzer()
                0x00000000c000d880                Buzzer::stop()
                0x00000000c000d893                beepThread(void*)
                0x00000000c000d8d6                Buzzer::beep(int, int, bool)
 .text          0x00000000c000d944      0x467 hal/clock.32
                0x00000000c000d944                User::loadClockSettings(int)
                0x00000000c000d996                Clock::Clock(char const*)
                0x00000000c000d996                Clock::Clock(char const*)
                0x00000000c000d9cc                Clock::~Clock()
                0x00000000c000d9cc                Clock::~Clock()
                0x00000000c000d9f0                Clock::~Clock()
                0x00000000c000da1a                Clock::timeInSecondsLocal()
                0x00000000c000da62                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000dabb                datetimeToSeconds(datetime_t)
                0x00000000c000dbe2                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000dc42                secondsToDatetime(unsigned long long)
                0x00000000c000dd86                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000ddab        0x1 
 .text          0x00000000c000ddac      0x504 hal/device.32
                0x00000000c000ddac                Device::hibernate()
                0x00000000c000ddae                Device::wake()
                0x00000000c000ddb0                Device::detect()
                0x00000000c000ddb2                Device::disableLegacy()
                0x00000000c000ddb4                Device::powerSaving(PowerSavingLevel)
                0x00000000c000ddb6                DriverlessDevice::close(int, int, void*)
                0x00000000c000ddba                DriverlessDevice::detect()
                0x00000000c000ddbc                DriverlessDevice::open(int, int, void*)
                0x00000000c000ddd0                Device::~Device()
                0x00000000c000ddd0                Device::~Device()
                0x00000000c000ddde                Device::~Device()
                0x00000000c000de06                Device::findAndLoadDriver()
                0x00000000c000de14                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000de3a                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000de7a                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000deb8                Device::getParent()
                0x00000000c000dec4                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000df02                Device::addChild(Device*)
                0x00000000c000df46                Device::removeAllChildren()
                0x00000000c000df8c                Device::hibernateAll()
                0x00000000c000dfbc                Device::wakeAll()
                0x00000000c000dfec                Device::detectAll()
                0x00000000c000e01c                Device::disableLegacyAll()
                0x00000000c000e04c                Device::loadDriversForAll()
                0x00000000c000e08c                Device::closeAll()
                0x00000000c000e0c2                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000e0f8                Device::setName(char const*)
                0x00000000c000e106                Device::Device(char const*)
                0x00000000c000e106                Device::Device(char const*)
                0x00000000c000e202                Device::getName()
                0x00000000c000e20c                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e20c                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e242                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000e286                getDevicesOfType(DeviceType)
 .text          0x00000000c000e2b0       0x84 hal/diskctrl.32
                0x00000000c000e2b0                HardDiskController::HardDiskController(char const*)
                0x00000000c000e2b0                HardDiskController::HardDiskController(char const*)
                0x00000000c000e2e6                HardDiskController::~HardDiskController()
                0x00000000c000e2e6                HardDiskController::~HardDiskController()
                0x00000000c000e30a                HardDiskController::~HardDiskController()
 .text          0x00000000c000e334       0xe2 hal/diskphys.32
                0x00000000c000e334                PhysicalDisk::eject()
                0x00000000c000e338                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000e338                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000e3a0                PhysicalDisk::startCache()
                0x00000000c000e3c8                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e3c8                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e3ec                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000e416      0x13b hal/fpu.32
                0x00000000c000e416                FPU::FPU(char const*)
                0x00000000c000e416                FPU::FPU(char const*)
                0x00000000c000e44c                FPU::~FPU()
                0x00000000c000e44c                FPU::~FPU()
                0x00000000c000e470                FPU::~FPU()
                0x00000000c000e49a                setupFPU()
 *fill*         0x00000000c000e551        0x1 
 .text          0x00000000c000e552     0x143b hal/intctrl.32
                0x00000000c000e552                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000e58a                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000e5dc                doubleFault(regs*, void*)
                0x00000000c000e5f6                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000e692                InterruptController::clearAllHandlers(int, bool)
                0x00000000c000e73a                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000e7c1                nmiHandler(regs*, void*)
                0x00000000c000e7cf                int_handler
                0x00000000c000e870                InterruptController::InterruptController(char const*)
                0x00000000c000e870                InterruptController::InterruptController(char const*)
                0x00000000c000e916                InterruptController::~InterruptController()
                0x00000000c000e916                InterruptController::~InterruptController()
                0x00000000c000e93a                InterruptController::~InterruptController()
                0x00000000c000e964                displayDebugInfo(regs*)
                0x00000000c000edf3                x87EmulHandler(regs*, void*)
                0x00000000c000ee66                gpFault(regs*, void*)
                0x00000000c000ee9f                pgFault(regs*, void*)
                0x00000000c000eeee                otherISRHandler(regs*, void*)
                0x00000000c000ef0d                opcodeFault(regs*, void*)
                0x00000000c000f52a                displayProgramFault(char const*)
                0x00000000c000f552                setupInterruptController()
                0x00000000c000f940                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c000f98d        0x1 
 .text          0x00000000c000f98e      0x784 hal/keybrd.32
                0x00000000c000f98e                startGUI(void*)
                0x00000000c000f9fa                startGUIVESA(void*)
                0x00000000c000fa66                sendKeyToTerminal(unsigned char)
                0x00000000c000fb24                sendKeyboardToken(KeyboardToken)
                0x00000000c000ff61                clearInternalKeybuffer(VgaText*)
                0x00000000c000ff96                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0010088                Keyboard::Keyboard(char const*)
                0x00000000c0010088                Keyboard::Keyboard(char const*)
                0x00000000c00100c4                Keyboard::~Keyboard()
                0x00000000c00100c4                Keyboard::~Keyboard()
                0x00000000c00100e8                Keyboard::~Keyboard()
 .text          0x00000000c0010112      0x3ea hal/logidisk.32
                0x00000000c0010112                LogicalDisk::close(int, int, void*)
                0x00000000c0010116                LogicalDisk::~LogicalDisk()
                0x00000000c0010116                LogicalDisk::~LogicalDisk()
                0x00000000c001013a                LogicalDisk::~LogicalDisk()
                0x00000000c0010164                LogicalDisk::open(int, int, void*)
                0x00000000c0010178                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c00101b0                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c00101f6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00101f6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00102ac                LogicalDisk::assignDriveLetter()
                0x00000000c0010362                LogicalDisk::mount()
                0x00000000c00103aa                LogicalDisk::unmount()
                0x00000000c00103ba                LogicalDisk::eject()
                0x00000000c00103ce                LogicalDisk::unassignDriveLetter()
                0x00000000c0010424                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0010490                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c00104fc       0x84 hal/mouse.32
                0x00000000c00104fc                Mouse::Mouse(char const*)
                0x00000000c00104fc                Mouse::Mouse(char const*)
                0x00000000c0010532                Mouse::~Mouse()
                0x00000000c0010532                Mouse::~Mouse()
                0x00000000c0010556                Mouse::~Mouse()
 .text          0x00000000c0010580      0x339 hal/partition.32
                0x00000000c0010580                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0010628                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c00108b9        0x1 
 .text          0x00000000c00108ba       0x84 hal/serial.32
                0x00000000c00108ba                Serial::Serial(char const*)
                0x00000000c00108ba                Serial::Serial(char const*)
                0x00000000c00108f0                Serial::~Serial()
                0x00000000c00108f0                Serial::~Serial()
                0x00000000c0010914                Serial::~Serial()
 .text          0x00000000c001093e      0x2f3 hal/timer.32
                0x00000000c001093e                Timer::Timer(char const*)
                0x00000000c001093e                Timer::Timer(char const*)
                0x00000000c0010974                Timer::~Timer()
                0x00000000c0010974                Timer::~Timer()
                0x00000000c0010998                Timer::~Timer()
                0x00000000c00109c2                Timer::read()
                0x00000000c00109cd                timerHandler(unsigned long long)
                0x00000000c0010b3f                setupTimer(int)
 *fill*         0x00000000c0010c31        0x1 
 .text          0x00000000c0010c32      0x49a hal/vcache.32
                0x00000000c0010c32                VCache::VCache(PhysicalDisk*)
                0x00000000c0010c32                VCache::VCache(PhysicalDisk*)
                0x00000000c0010d9a                VCache::invalidateReadBuffer()
                0x00000000c0010daa                VCache::writeWriteBuffer()
                0x00000000c0010df6                VCache::~VCache()
                0x00000000c0010df6                VCache::~VCache()
                0x00000000c0010e4a                VCache::~VCache()
                0x00000000c0010e72                VCache::write(unsigned long long, int, void*)
                0x00000000c0010fa8                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c00110cc      0x4b3 hal/video.32
                0x00000000c00110cc                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c0011118                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c0011188                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c0011206                Video::clearScreen(unsigned int)
                0x00000000c001123a                Video::putpixel(int, int, unsigned int)
                0x00000000c0011248                Video::Video(char const*)
                0x00000000c0011248                Video::Video(char const*)
                0x00000000c001127e                Video::~Video()
                0x00000000c001127e                Video::~Video()
                0x00000000c00112a2                Video::~Video()
                0x00000000c00112cc                Video::isMonochrome()
                0x00000000c00112d8                Video::getWidth()
                0x00000000c00112e4                Video::getHeight()
                0x00000000c00112f0                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c00113ac                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c0011514                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c001157f        0x1 
 .text          0x00000000c0011580     0x12eb hw/acpi.32
                0x00000000c0011580                ACPI::close(int, int, void*)
                0x00000000c0011625                findRSDP()
                0x00000000c00116f2                loadACPITables(unsigned char*)
                0x00000000c0011949                findRSDT(unsigned char*)
                0x00000000c0011b03                findDataTable(unsigned char*, char*)
                0x00000000c0011b75                scanMADT()
                0x00000000c0012042                ACPI::ACPI()
                0x00000000c0012042                ACPI::ACPI()
                0x00000000c00120a6                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0012188                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c001224e                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0012254                ACPI::detectPCI()
                0x00000000c0012456                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c001249e                ACPI::sleep()
                0x00000000c00124b6                ACPI::open(int, int, void*)
 *fill*         0x00000000c001286b        0x1 
 .text          0x00000000c001286c     0x1525 hw/cpu.32
                0x00000000c001286c                CPU::close(int, int, void*)
                0x00000000c0012870                CPU::lookupAMDName(unsigned char, unsigned char)
                0x00000000c0012a04                CPU::lookupIntelName(unsigned char, unsigned char)
                0x00000000c0012cb2                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0012cce                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0012ce6                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0012d5a                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0012dde                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0012e0c                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0012e3a                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0012e68                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0012e96                CPU::CPU()
                0x00000000c0012e96                CPU::CPU()
                0x00000000c0012f24                CPU::displayFeatures()
                0x00000000c0012f26                CPU::detectFeatures()
                0x00000000c0013918                CPU::setupSMEP()
                0x00000000c0013924                CPU::setupUMIP()
                0x00000000c001392e                CPU::setupTSC()
                0x00000000c0013938                CPU::setupLargePages()
                0x00000000c0013942                CPU::setupPAT()
                0x00000000c001397e                CPU::setupMTRR()
                0x00000000c0013980                CPU::setupGlobalPages()
                0x00000000c001398a                CPU::allowUsermodeDataAccess()
                0x00000000c001399c                CPU::prohibitUsermodeDataAccess()
                0x00000000c00139ae                CPU::setupSMAP()
                0x00000000c00139bc                CPU::setupFeatures()
                0x00000000c0013a3c                CPU::open(int, int, void*)
                0x00000000c0013b96                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0013d91        0x0 hw/ports.32
 .text          0x00000000c0013d91      0x16a hw/smp.32
                0x00000000c0013d91                Krnl::smpEntry()
                0x00000000c0013d93                Krnl::startCPU(int)
                0x00000000c0013edc                Krnl::startCPUs()
 *fill*         0x00000000c0013efb        0x1 
 .text          0x00000000c0013efc      0x581 krnl/env.32
                0x00000000c0013efc                EnvVarContainer::getEnv(char const*)
                0x00000000c0013f3a                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0013ffc                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0013ffe                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00141e4                EnvVarContainer::__loadSystem()
                0x00000000c00141fe                EnvVarContainer::__loadUser()
                0x00000000c0014200                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0014200                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0014222                EnvVarContainer::~EnvVarContainer()
                0x00000000c0014222                EnvVarContainer::~EnvVarContainer()
                0x00000000c0014252                Krnl::getEnv(Process*, char const*)
                0x00000000c00142b7                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00142d1                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00142f0                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0014303                Krnl::deleteEnvSystem(char const*)
                0x00000000c0014304                Krnl::deleteEnvUser(char const*)
                0x00000000c0014305                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0014306                Krnl::newProcessEnv(Process*)
                0x00000000c0014328                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0014374                Krnl::loadSystemEnv()
                0x00000000c00143a2                Krnl::loadUserEnv()
                0x00000000c00143c8                Krnl::flushEnv()
                0x00000000c00143c9                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00143e9                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001447d      0x39c krnl/panic.32
                0x00000000c001447d                Krnl::panic(char const*)
 .text          0x00000000c0014819      0x57f net/ethernet.32
                0x00000000c0014819                Net::switchEndian16(unsigned short)
                0x00000000c001483a                Net::switchEndian32(unsigned int)
                0x00000000c0014869                Net::crc32Calc(unsigned char*, int)
                0x00000000c00148fa                Net::wrapEthernetFrame(Net::UnwrappedEthernetFrame, unsigned char*)
                0x00000000c0014b0d                Net::unwrapEthernetFrame(unsigned char*, int)
 .text          0x00000000c0014d98      0x50e reg/registry.32
                0x00000000c0014d98                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0014ef0                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0015045                Reg::getLine(char*, char*, char*)
                0x00000000c001507c                Reg::readInt(char*, char*, int*)
                0x00000000c0015167                Reg::readString(char*, char*, char*, int)
                0x00000000c00151e8                Reg::readBool(char*, char*, bool*)
                0x00000000c001520d                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0015239                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0015265                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00152a6       0x36 sys/sc_eject.32
                0x00000000c00152a6                Sys::eject(regs*)
 .text          0x00000000c00152dc       0x18 sys/sc_exit.32
                0x00000000c00152dc                Sys::exit(regs*)
 .text          0x00000000c00152f4       0x1f sys/sc_getcwd.32
                0x00000000c00152f4                Sys::getCwd(regs*)
 .text          0x00000000c0015313        0xc sys/sc_getpid.32
                0x00000000c0015313                Sys::getPID(regs*)
 .text          0x00000000c001531f       0x1a sys/sc_getramdata.32
                0x00000000c001531f                Sys::getRAMData(regs*)
 .text          0x00000000c0015339       0x84 sys/sc_getvgaptr.32
                0x00000000c0015339                Sys::getVGAPtr(regs*)
 .text          0x00000000c00153bd       0xa8 sys/sc_loaddll.32
                0x00000000c00153bd                Sys::loadDLL(regs*)
 .text          0x00000000c0015465       0x68 sys/sc_read.32
                0x00000000c0015465                Sys::read(regs*)
 .text          0x00000000c00154cd       0x55 sys/sc_sbrk.32
                0x00000000c00154cd                Sys::sbrk(regs*)
 .text          0x00000000c0015522       0x1c sys/sc_setcwd.32
                0x00000000c0015522                Sys::setCwd(regs*)
 .text          0x00000000c001553e       0x95 sys/sc_settime.32
                0x00000000c001553e                Sys::setTime(regs*)
 .text          0x00000000c00155d3       0x4a sys/sc_timezone.32
                0x00000000c00155d3                Sys::timezone(regs*)
 .text          0x00000000c001561d       0x68 sys/sc_write.32
                0x00000000c001561d                Sys::write(regs*)
 .text          0x00000000c0015685       0x62 sys/sc_wsbe.32
                0x00000000c0015685                Sys::wsbe(regs*)
 .text          0x00000000c00156e7       0x46 sys/sc_yield.32
                0x00000000c00156e7                Sys::yield(regs*)
 .text          0x00000000c001572d      0xf84 sys/syscalls.32
                0x00000000c001572d                sysCallSeekDir(regs*)
                0x00000000c0015732                sysCallTellDir(regs*)
                0x00000000c0015737                sysCallVerify(regs*)
                0x00000000c0015741                sysCallGetArgc(regs*)
                0x00000000c0015751                sysFormatDisk(regs*)
                0x00000000c00157bb                sysSetDiskVolumeLabel(regs*)
                0x00000000c0015801                sysGetDiskVolumeLabel(regs*)
                0x00000000c0015852                sysShutdown(regs*)
                0x00000000c00158b0                sysCallRealpath(regs*)
                0x00000000c00158f3                sysCallReadDir(regs*)
                0x00000000c0015972                sysCallIsATTY(regs*)
                0x00000000c00159cc                sysCallSeek(regs*)
                0x00000000c0015a23                sysCallTell(regs*)
                0x00000000c0015a8f                sysCallSize(regs*)
                0x00000000c0015b01                sysCallSizeFromFilename(regs*)
                0x00000000c0015bb0                sysCallClose(regs*)
                0x00000000c0015c10                sysCallOpenDir(regs*)
                0x00000000c0015c85                sysCallCloseDir(regs*)
                0x00000000c0015cd9                sysCallMakeDir(regs*)
                0x00000000c0015d49                sysCallWait(regs*)
                0x00000000c0015d63                sysCallNotImpl(regs*)
                0x00000000c0015d7e                sysPanic(regs*)
                0x00000000c0015d98                sysCallRmdir(regs*)
                0x00000000c0015dfc                sysCallUnlink(regs*)
                0x00000000c0015e60                sysCallGetArgv(regs*)
                0x00000000c0015eac                sysCallTTYName(regs*)
                0x00000000c0015f2f                sysCallUSleep(regs*)
                0x00000000c0015f56                sysCallSpawn(regs*)
                0x00000000c0015fbe                sysCallGetEnv(regs*)
                0x00000000c001606b                sysAppSettings(regs*)
                0x00000000c001617f                sysSetFatAttrib(regs*)
                0x00000000c00161f1                sysPipe(regs*)
                0x00000000c0016236                sysGetUnixTime(regs*)
                0x00000000c001624a                string_ends_with(char const*, char const*)
                0x00000000c0016292                sysCallOpen(regs*)
                0x00000000c001647a                Sys::loadSyscalls()
                0x00000000c001666f                Sys::systemCall(regs*, void*)
 .text          0x00000000c00166b1     0x1203 thr/elf.32
                0x00000000c00166b1                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001695b                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0016b71                Thr::runtimeReferenceHelper()
                0x00000000c0016b84                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0016bd3                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0016e91                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00175c7                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00175f9                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0017630                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001764a                Thr::loadDLL(char const*, bool)
                0x00000000c001787b                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00178b4     0x11ff thr/prcssthr.32
                0x00000000c00178b4                userModeEntryPoint(void*)
                0x00000000c00178da                changeTSS
                0x00000000c001790a                switchToThread(ThreadControlBlock*)
                0x00000000c00179b4                Process::addArgs(char**)
                0x00000000c0017a0e                Process::Process(char const*, Process*, char**)
                0x00000000c0017a0e                Process::Process(char const*, Process*, char**)
                0x00000000c0017bf2                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0017bf2                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0017da1                taskStartupFunction
                0x00000000c0017daa                Semaphore::Semaphore(int)
                0x00000000c0017daa                Semaphore::Semaphore(int)
                0x00000000c0017dd8                Mutex::Mutex()
                0x00000000c0017dd8                Mutex::Mutex()
                0x00000000c0017dea                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0017ef0                Process::createUserThread()
                0x00000000c0017f0c                setupMultitasking(void (*)())
                0x00000000c001800f                schedule()
                0x00000000c0018094                Semaphore::tryAcquire()
                0x00000000c0018150                Semaphore::assertLocked(char const*)
                0x00000000c00181bf                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00181e5                blockTask(TaskState)
                0x00000000c0018212                waitTask(int, int*, int)
                0x00000000c0018254                nanoSleepUntil(unsigned long long)
                0x00000000c00182e9                nanoSleep(unsigned long long)
                0x00000000c0018301                sleep(unsigned long long)
                0x00000000c001831e                Semaphore::acquire()
                0x00000000c00183cf                taskReturned
                0x00000000c001840a                Thr::processFromPID(int)
                0x00000000c00184a1                unblockTask(ThreadControlBlock*)
                0x00000000c0018536                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00187dd                cleanerTaskFunction(void*)
                0x00000000c00188be                terminateTask(int)
                0x00000000c001897d                Thr::terminateFromIRQ(int)
                0x00000000c001898a                Semaphore::release()
 .text          0x00000000c0018ab3      0xada vm86/vm8086.32
                0x00000000c0018ab3                Vm::inbv(unsigned short)
                0x00000000c0018ac6                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0018afc                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0018b0c                Vm::getSegment(unsigned int)
                0x00000000c0018b14                Vm::getOffset(unsigned int)
                0x00000000c0018b19                Vm::mainloop2()
                0x00000000c0018b53                Vm::mainVm8086Loop(void*)
                0x00000000c0018b63                Vm::mainloop3(unsigned long)
                0x00000000c0018b89                Vm::initialise8086()
                0x00000000c0018bcc                Vm::finish8086()
                0x00000000c0018c2d                Vm::getOutput8086(unsigned char*)
                0x00000000c0018c52                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0018dba                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0018e44                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0018e55                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0018e67                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0018e78                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018e8d                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0018ea3                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0018eb8                Vm::faultHandler(regs*)
 .text          0x00000000c001958d      0xefd vm86/x87em.32
                0x00000000c001958d                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c00195e8                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c00195f1                Vm::fpu32ToInternal(unsigned int)
                0x00000000c0019636                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c001963f                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c001969a                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c00196d0                Vm::fpuLongToFloat(long long)
                0x00000000c0019726                Vm::fpuGet0()
                0x00000000c001972b                Vm::fpuGet1()
                0x00000000c0019733                Vm::fpuGetPi()
                0x00000000c001973b                Vm::fpuGetLog2E()
                0x00000000c0019753                Vm::fpuGetLogE2()
                0x00000000c001976b                Vm::fpuGetLog210()
                0x00000000c0019783                Vm::fpuGetLog102()
                0x00000000c001979b                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c00197af                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c00197c5                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c0019818                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c0019829                Vm::fpuAbs(unsigned long long)
                0x00000000c0019832                Vm::fpuChs(unsigned long long)
                0x00000000c0019842                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c0019851                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c0019870                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c001988c                Vm::fpuSquare(unsigned long long)
                0x00000000c00198a2                Vm::fpuGetReg(int)
                0x00000000c00198e5                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c0019930                Vm::fpuPush(unsigned long long)
                0x00000000c001998d                Vm::fpuPop()
                0x00000000c00199df                Vm::x87Handler(regs*)
 .text          0x00000000c001a48a     0x12d7 fs/fat/vfslink.32
                0x00000000c001a48a                FAT::getName()
                0x00000000c001a490                FAT::tell(void*, unsigned long long*)
                0x00000000c001a4c4                FAT::stat(void*, unsigned long long*)
                0x00000000c001a4f8                FAT::~FAT()
                0x00000000c001a4f8                FAT::~FAT()
                0x00000000c001a51c                FAT::~FAT()
                0x00000000c001a544                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001a5e2                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001a69c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a85a                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001aa60                FAT::allocateSwapfile(char const*, int)
                0x00000000c001ac1c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001ad76                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001add0                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001ae2a                FAT::close(void*)
                0x00000000c001ae76                FAT::closeDir(void*)
                0x00000000c001aec2                FAT::seek(void*, unsigned long long)
                0x00000000c001af16                fatWrapperReadDisk
                0x00000000c001af5d                fatWrapperWriteDisk
                0x00000000c001afa4                fatWrapperIoctl
                0x00000000c001b0a8                FAT::FAT()
                0x00000000c001b0a8                FAT::FAT()
                0x00000000c001b0fa                FAT::fixFilepath(char*)
                0x00000000c001b132                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001b25a                FAT::openDir(char const*, void**)
                0x00000000c001b300                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b3ea                FAT::unlink(char const*)
                0x00000000c001b464                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b5b8                FAT::rename(char const*, char const*)
                0x00000000c001b67c                FAT::mkdir(char const*)
                0x00000000c001b6f6                FAT::exists(char const*)
 *fill*         0x00000000c001b761        0x1 
 .text          0x00000000c001b762      0xb75 fs/iso9660/vfslink.32
                0x00000000c001b762                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b768                ISO9660::seek(void*, unsigned long long)
                0x00000000c001b798                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001b7bc                ISO9660::getName()
                0x00000000c001b7c2                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001b7e6                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b7ec                ISO9660::unlink(char const*)
                0x00000000c001b7f2                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001b7f8                ISO9660::rename(char const*, char const*)
                0x00000000c001b7fe                ISO9660::mkdir(char const*)
                0x00000000c001b804                ISO9660::close(void*)
                0x00000000c001b826                ISO9660::closeDir(void*)
                0x00000000c001b848                ISO9660::~ISO9660()
                0x00000000c001b848                ISO9660::~ISO9660()
                0x00000000c001b86c                ISO9660::~ISO9660()
                0x00000000c001b893                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001b8d5                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b930                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b980                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001bb84                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bdfe                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001be52                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001c025                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001c0b4                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001c162                ISO9660::exists(char const*)
                0x00000000c001c186                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c21a                ISO9660::openDir(char const*, void**)
                0x00000000c001c2b4                ISO9660::ISO9660()
                0x00000000c001c2b4                ISO9660::ISO9660()
 *fill*         0x00000000c001c2d7        0x1 
 .text          0x00000000c001c2d8      0x316 hal/sound/sndcard.32
                0x00000000c001c2d8                SoundCard::beginPlayback()
                0x00000000c001c2e6                SoundCard::stopPlayback()
                0x00000000c001c2f4                SoundCard::SoundCard(char const*)
                0x00000000c001c2f4                SoundCard::SoundCard(char const*)
                0x00000000c001c392                SoundCard::~SoundCard()
                0x00000000c001c392                SoundCard::~SoundCard()
                0x00000000c001c3b6                SoundCard::~SoundCard()
                0x00000000c001c3e0                SoundCard::configureRates(int, int, int)
                0x00000000c001c410                SoundCard::getSamples16(int, short*)
                0x00000000c001c4f8                SoundCard::getSamples32(int, int*)
                0x00000000c001c57e                SoundCard::addChannel(SoundPort*)
                0x00000000c001c5da                SoundCard::removeChannel(int)
 .text          0x00000000c001c5ee      0x3c2 hal/sound/sndport.32
                0x00000000c001c5ee                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c5ee                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c676                SoundPort::~SoundPort()
                0x00000000c001c676                SoundPort::~SoundPort()
                0x00000000c001c6a8                SoundPort::unpause()
                0x00000000c001c6b2                SoundPort::pause()
                0x00000000c001c6bc                SoundPort::getBufferUsed()
                0x00000000c001c6c4                SoundPort::getBufferSize()
                0x00000000c001c6cc                SoundPort::buffer16(short*, int)
                0x00000000c001c772                SoundPort::buffer32(int*, int)
                0x00000000c001c812                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001c904                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001c9b0        0x0 hw/bus/isa.32
 .text          0x00000000c001c9b0      0xb87 hw/bus/pci.32
                0x00000000c001c9b0                PCI::open(int, int, void*)
                0x00000000c001c9ce                PCI::close(int, int, void*)
                0x00000000c001c9d2                PCI::PCI()
                0x00000000c001c9d2                PCI::PCI()
                0x00000000c001ca68                PCI::readBAR8(unsigned int, int)
                0x00000000c001ca84                PCI::readBAR16(unsigned int, int)
                0x00000000c001caa2                PCI::readBAR32(unsigned int, int)
                0x00000000c001cabe                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001cade                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001cb00                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001cb20                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cb8e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cc36                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001cc5a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001cc82                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001cccc                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001ccf4                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd18                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd3c                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd64                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cdc8                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001ceb0                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001d12a                PCI::checkBus(unsigned char)
                0x00000000c001d14e                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001d2c0                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001d478                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001d4e4                PCI::detect()
 *fill*         0x00000000c001d537        0x1 
 .text          0x00000000c001d538      0xb54 hw/diskctrl/ide.32
                0x00000000c001d538                IDE::close(int, int, void*)
                0x00000000c001d53c                IDE::IDE()
                0x00000000c001d53c                IDE::IDE()
                0x00000000c001d570                IDE::prepareInterrupt(unsigned char)
                0x00000000c001d582                selectDrive(unsigned char, unsigned char)
                0x00000000c001d584                IDE::getBase(unsigned char)
                0x00000000c001d596                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001d656                IDE::read(unsigned char, unsigned char)
                0x00000000c001d704                IDE::waitInterrupt(unsigned char)
                0x00000000c001d76a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001d786                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001d7a2                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001d7e8                IDE::open(int, int, void*)
                0x00000000c001dbf6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001dcc2                IDE::detect()
                0x00000000c001df88                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001e038                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001e08c      0x336 hw/diskctrl/satabus.32
                0x00000000c001e08c                SATABus::close(int, int, void*)
                0x00000000c001e090                SATABus::detect()
                0x00000000c001e092                SATABus::SATABus()
                0x00000000c001e092                SATABus::SATABus()
                0x00000000c001e118                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e160                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e1a8                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e1c8                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e1f2                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001e2f8                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001e3a2                SATABus::open(int, int, void*)
 .text          0x00000000c001e3c2      0x688 hw/diskphys/ata.32
                0x00000000c001e3c2                ATA::close(int, int, void*)
                0x00000000c001e3e6                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001e3e8                ATA::ATA()
                0x00000000c001e3e8                ATA::ATA()
                0x00000000c001e416                ATA::flush(bool)
                0x00000000c001e460                ATA::readyForCommand()
                0x00000000c001e4b0                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001e8a6                ATA::read(unsigned long long, int, void*)
                0x00000000c001e8f2                ATA::write(unsigned long long, int, void*)
                0x00000000c001e954                ATA::detectCHS()
                0x00000000c001e97e                ATA::open(int, int, void*)
 .text          0x00000000c001ea4a      0x5bd hw/diskphys/atapi.32
                0x00000000c001ea4a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001ea50                ATAPI::close(int, int, void*)
                0x00000000c001ea74                ATAPI::ATAPI()
                0x00000000c001ea74                ATAPI::ATAPI()
                0x00000000c001eaa2                ATAPI::readyForCommand()
                0x00000000c001eaf2                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001edb2                ATAPI::diskRemoved()
                0x00000000c001edce                ATAPI::eject()
                0x00000000c001ee16                ATAPI::diskInserted()
                0x00000000c001ee44                ATAPI::detectMedia()
                0x00000000c001ef00                ATAPI::open(int, int, void*)
                0x00000000c001ef88                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001f007        0x1 
 .text          0x00000000c001f008      0x41c hw/diskphys/sata.32
                0x00000000c001f008                SATA::close(int, int, void*)
                0x00000000c001f02c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001f02e                SATA::open(int, int, void*)
                0x00000000c001f0d8                SATA::SATA()
                0x00000000c001f0d8                SATA::SATA()
                0x00000000c001f106                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f36c                SATA::read(unsigned long long, int, void*)
                0x00000000c001f3b8                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001f424      0x4fe hw/diskphys/satapi.32
                0x00000000c001f424                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001f42a                SATAPI::close(int, int, void*)
                0x00000000c001f44e                SATAPI::SATAPI()
                0x00000000c001f44e                SATAPI::SATAPI()
                0x00000000c001f47c                SATAPI::diskRemoved()
                0x00000000c001f498                SATAPI::diskInserted()
                0x00000000c001f4c6                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001f6ce                SATAPI::eject()
                0x00000000c001f716                SATAPI::detectMedia()
                0x00000000c001f7d8                SATAPI::open(int, int, void*)
                0x00000000c001f880                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f922       0x8e hw/fpu/avx.32
                0x00000000c001f922                AVX::open(int, int, void*)
                0x00000000c001f934                AVX::close(int, int, void*)
                0x00000000c001f946                AVX::available()
                0x00000000c001f958                AVX::save(void*)
                0x00000000c001f970                AVX::load(void*)
                0x00000000c001f988                AVX::AVX()
                0x00000000c001f988                AVX::AVX()
 .text          0x00000000c001f9b0       0x90 hw/fpu/mmx.32
                0x00000000c001f9b0                MMX::available()
                0x00000000c001f9c4                MMX::open(int, int, void*)
                0x00000000c001f9d6                MMX::close(int, int, void*)
                0x00000000c001f9e8                MMX::save(void*)
                0x00000000c001fa00                MMX::load(void*)
                0x00000000c001fa18                MMX::MMX()
                0x00000000c001fa18                MMX::MMX()
 .text          0x00000000c001fa40       0x96 hw/fpu/sse.32
                0x00000000c001fa40                SSE::open(int, int, void*)
                0x00000000c001fa52                SSE::close(int, int, void*)
                0x00000000c001fa64                SSE::available()
                0x00000000c001fa7e                SSE::save(void*)
                0x00000000c001fa96                SSE::load(void*)
                0x00000000c001faae                SSE::SSE()
                0x00000000c001faae                SSE::SSE()
 .text          0x00000000c001fad6       0x8e hw/fpu/x87.32
                0x00000000c001fad6                x87::open(int, int, void*)
                0x00000000c001fae8                x87::close(int, int, void*)
                0x00000000c001fafa                x87::available()
                0x00000000c001fb0c                x87::save(void*)
                0x00000000c001fb24                x87::load(void*)
                0x00000000c001fb3c                x87::x87()
                0x00000000c001fb3c                x87::x87()
 .text          0x00000000c001fb64      0x71e hw/intctrl/apic.32
                0x00000000c001fb64                APIC::disable()
                0x00000000c001fb66                APIC::close(int, int, void*)
                0x00000000c001fb88                IOAPIC::close(int, int, void*)
                0x00000000c001fb8e                APIC::io_wait()
                0x00000000c001fb94                APIC::getBase()
                0x00000000c001fbd6                APIC::eoi(unsigned char)
                0x00000000c001fc04                APIC::open(int, int, void*)
                0x00000000c001fd52                IOAPIC::IOAPIC()
                0x00000000c001fd52                IOAPIC::IOAPIC()
                0x00000000c001fd7a                APIC::APIC()
                0x00000000c001fd7a                APIC::APIC()
                0x00000000c001fe56                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001fe88                IOAPIC::read(int)
                0x00000000c001feb0                IOAPIC::open(int, int, void*)
                0x00000000c001ffa6                IOAPIC::write(int, int)
                0x00000000c001ffd2                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
                0x00000000c00200cc                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 .text          0x00000000c0020282      0x3d3 hw/intctrl/pic.32
                0x00000000c0020282                PIC::disable()
                0x00000000c00202b0                PIC::close(int, int, void*)
                0x00000000c00202d2                PIC::PIC()
                0x00000000c00202d2                PIC::PIC()
                0x00000000c00203a8                PIC::ioWait()
                0x00000000c00203ae                PIC::getIRQReg(int)
                0x00000000c0020418                PIC::eoi(unsigned char)
                0x00000000c00204aa                PIC::remap()
                0x00000000c0020616                PIC::open(int, int, void*)
 *fill*         0x00000000c0020655        0x1 
 .text          0x00000000c0020656      0x25e hw/timer/apictimer.32
                0x00000000c0020656                APICTimer::close(int, int, void*)
                0x00000000c002065c                apicTimerHandler(regs*, void*)
                0x00000000c002068a                APICTimer::write(int)
                0x00000000c002078e                APICTimer::open(int, int, void*)
                0x00000000c002088c                APICTimer::APICTimer()
                0x00000000c002088c                APICTimer::APICTimer()
 .text          0x00000000c00208b4      0x1a7 hw/timer/pit.32
                0x00000000c00208b4                PIT::write(int)
                0x00000000c0020932                pitHandler(regs*, void*)
                0x00000000c002095e                PIT::open(int, int, void*)
                0x00000000c00209ac                PIT::close(int, int, void*)
                0x00000000c00209dc                PIT::PIT()
                0x00000000c00209dc                PIT::PIT()
 *fill*         0x00000000c0020a5b        0x5 
 .text          0x00000000c0020a60       0x1e hw/fpu/x86/avx.32
                0x00000000c0020a60                avxDetect
                0x00000000c0020a66                avxSave
                0x00000000c0020a67                avxLoad
                0x00000000c0020a68                avxInit
                0x00000000c0020a69                avxClose
                0x00000000c0020a6a                wouldSheSayYes
 *fill*         0x00000000c0020a7e        0x2 
 .text          0x00000000c0020a80       0x35 hw/fpu/x86/sse.32
                0x00000000c0020a80                absolutelyNoChanceInHell
                0x00000000c0020a80                sseDetect
                0x00000000c0020a98                sseSave
                0x00000000c0020a9e                sseLoad
                0x00000000c0020aa4                sseInit
                0x00000000c0020ab4                sseClose
 *fill*         0x00000000c0020ab5        0xb 
 .text          0x00000000c0020ac0       0x4d hw/fpu/x86/x87.32
                0x00000000c0020ac6                x87Detect
                0x00000000c0020ae1                x87Save
                0x00000000c0020aea                x87Load
                0x00000000c0020af2                x87Init
                0x00000000c0020b0c                x87Close
 *fill*         0x00000000c0020b0d        0x3 
 .text          0x00000000c0020b10       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0020b35        0x0 crtn.32
 *fill*         0x00000000c0020b35        0x3 
 .text          0x00000000c0020b38      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0020b38                __divdi3
 *fill*         0x00000000c0020c83        0x1 
 .text          0x00000000c0020c84      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0020c84                __moddi3
 *fill*         0x00000000c0020e02        0x2 
 .text          0x00000000c0020e04       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0020e04                __udivdi3
 *fill*         0x00000000c0020f03        0x1 
 .text          0x00000000c0020f04      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0020f04                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021020        0x0
 .iplt          0x00000000c0021020        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002101e        0xf
 .init          0x00000000c002101e        0x3 crti.32
                0x00000000c002101e                _init
 .init          0x00000000c0021021        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021026        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c002102b        0x2 crtn.32

.fini           0x00000000c002102d        0xa
 .fini          0x00000000c002102d        0x3 crti.32
                0x00000000c002102d                _fini
 .fini          0x00000000c0021030        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021035        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c0021038       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0021038       0x23 core/computer.32
                0x00000000c0021038                Computer::~Computer()
                0x00000000c0021038                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002105c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002105c       0x2a core/computer.32
                0x00000000c002105c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021086       0x21
 .text._Z10idleCommonv
                0x00000000c0021086       0x21 core/idle.32
                0x00000000c0021086                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00210a8        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00210a8        0x2 core/unixfile.32
                0x00000000c00210a8                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00210a8                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00210aa       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00210aa       0x42 core/unixfile.32
                0x00000000c00210aa                LinkedList<UnixFile>::LinkedList()
                0x00000000c00210aa                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00210ec       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00210ec       0xd3 core/unixfile.32
                0x00000000c00210ec                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00211c0        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00211c0        0x7 core/unixfile.32
                0x00000000c00211c0                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00211c8       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00211c8       0xa1 core/unixfile.32
                0x00000000c00211c8                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002126a        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002126a        0x8 core/unixfile.32
                0x00000000c002126a                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021272       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021272       0x1a hal/device.32
                0x00000000c0021272                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021272                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c002128c       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c002128c       0x2a hal/device.32
                0x00000000c002128c                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00212b6       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00212b6       0xdc hal/device.32
                0x00000000c00212b6                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021392       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021392       0x42 hal/device.32
                0x00000000c0021392                LinkedList<Device>::LinkedList()
                0x00000000c0021392                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00213d4       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00213d4       0x1c hal/timer.32
                0x00000000c00213d4                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00213f0        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00213f0        0x7 hal/timer.32
                0x00000000c00213f0                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00213f8       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00213f8       0xae hal/timer.32
                0x00000000c00213f8                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00214a6       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c00214a6       0xd3 hal/timer.32
                0x00000000c00214a6                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c002157a       0x23
 .text._ZN4ACPID2Ev
                0x00000000c002157a       0x23 hw/acpi.32
                0x00000000c002157a                ACPI::~ACPI()
                0x00000000c002157a                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002159e       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002159e       0x2a hw/acpi.32
                0x00000000c002159e                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00215c8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c00215c8        0x2 hw/acpi.32
                0x00000000c00215c8                LinkedList<Device>::~LinkedList()
                0x00000000c00215c8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00215ca       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c00215ca       0x1c hw/acpi.32
                0x00000000c00215ca                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00215e6        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00215e6        0x7 hw/acpi.32
                0x00000000c00215e6                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00215ee       0xad
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00215ee       0xad hw/acpi.32
                0x00000000c00215ee                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c002169c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002169c       0x23 hw/cpu.32
                0x00000000c002169c                CPU::~CPU()
                0x00000000c002169c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00216c0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00216c0       0x2a hw/cpu.32
                0x00000000c00216c0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00216ea        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00216ea        0x2 thr/prcssthr.32
                0x00000000c00216ea                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00216ea                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00216ec       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00216ec       0x49 thr/prcssthr.32
                0x00000000c00216ec                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00216ec                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021736       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021736       0x42 thr/prcssthr.32
                0x00000000c0021736                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0021736                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021778        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021778        0x8 thr/prcssthr.32
                0x00000000c0021778                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0021780        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0021780        0xd vm86/x87em.32
                0x00000000c0021780                Vm::_FPUState::_FPUState()
                0x00000000c0021780                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c002178e       0x23
 .text._ZN3PCID2Ev
                0x00000000c002178e       0x23 hw/bus/pci.32
                0x00000000c002178e                PCI::~PCI()
                0x00000000c002178e                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00217b2       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00217b2       0x2a hw/bus/pci.32
                0x00000000c00217b2                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00217dc       0x23
 .text._ZN3IDED2Ev
                0x00000000c00217dc       0x23 hw/diskctrl/ide.32
                0x00000000c00217dc                IDE::~IDE()
                0x00000000c00217dc                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0021800       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0021800       0x2a hw/diskctrl/ide.32
                0x00000000c0021800                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c002182a       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c002182a       0x23 hw/diskctrl/satabus.32
                0x00000000c002182a                SATABus::~SATABus()
                0x00000000c002182a                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002184e       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002184e       0x2a hw/diskctrl/satabus.32
                0x00000000c002184e                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0021878       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0021878       0x23 hw/diskphys/ata.32
                0x00000000c0021878                ATA::~ATA()
                0x00000000c0021878                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c002189c       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c002189c       0x2a hw/diskphys/ata.32
                0x00000000c002189c                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00218c6       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00218c6       0x23 hw/diskphys/atapi.32
                0x00000000c00218c6                ATAPI::~ATAPI()
                0x00000000c00218c6                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00218ea       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00218ea       0x2a hw/diskphys/atapi.32
                0x00000000c00218ea                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0021914       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0021914       0x23 hw/diskphys/sata.32
                0x00000000c0021914                SATA::~SATA()
                0x00000000c0021914                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0021938       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0021938       0x2a hw/diskphys/sata.32
                0x00000000c0021938                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0021962       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0021962       0x23 hw/diskphys/satapi.32
                0x00000000c0021962                SATAPI::~SATAPI()
                0x00000000c0021962                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0021986       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0021986       0x2a hw/diskphys/satapi.32
                0x00000000c0021986                SATAPI::~SATAPI()

.text._ZN3AVXD2Ev
                0x00000000c00219b0       0x23
 .text._ZN3AVXD2Ev
                0x00000000c00219b0       0x23 hw/fpu/avx.32
                0x00000000c00219b0                AVX::~AVX()
                0x00000000c00219b0                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c00219d4       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c00219d4       0x2a hw/fpu/avx.32
                0x00000000c00219d4                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c00219fe       0x23
 .text._ZN3MMXD2Ev
                0x00000000c00219fe       0x23 hw/fpu/mmx.32
                0x00000000c00219fe                MMX::~MMX()
                0x00000000c00219fe                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c0021a22       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c0021a22       0x2a hw/fpu/mmx.32
                0x00000000c0021a22                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c0021a4c       0x23
 .text._ZN3SSED2Ev
                0x00000000c0021a4c       0x23 hw/fpu/sse.32
                0x00000000c0021a4c                SSE::~SSE()
                0x00000000c0021a4c                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c0021a70       0x2a
 .text._ZN3SSED0Ev
                0x00000000c0021a70       0x2a hw/fpu/sse.32
                0x00000000c0021a70                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c0021a9a       0x23
 .text._ZN3x87D2Ev
                0x00000000c0021a9a       0x23 hw/fpu/x87.32
                0x00000000c0021a9a                x87::~x87()
                0x00000000c0021a9a                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c0021abe       0x2a
 .text._ZN3x87D0Ev
                0x00000000c0021abe       0x2a hw/fpu/x87.32
                0x00000000c0021abe                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c0021ae8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0021ae8       0x23 hw/intctrl/apic.32
                0x00000000c0021ae8                IOAPIC::~IOAPIC()
                0x00000000c0021ae8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0021b0c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0021b0c       0x2a hw/intctrl/apic.32
                0x00000000c0021b0c                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c0021b36       0x23
 .text._ZN4APICD2Ev
                0x00000000c0021b36       0x23 hw/intctrl/apic.32
                0x00000000c0021b36                APIC::~APIC()
                0x00000000c0021b36                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c0021b5a       0x2a
 .text._ZN4APICD0Ev
                0x00000000c0021b5a       0x2a hw/intctrl/apic.32
                0x00000000c0021b5a                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c0021b84       0x23
 .text._ZN3PICD2Ev
                0x00000000c0021b84       0x23 hw/intctrl/pic.32
                0x00000000c0021b84                PIC::~PIC()
                0x00000000c0021b84                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c0021ba8       0x2a
 .text._ZN3PICD0Ev
                0x00000000c0021ba8       0x2a hw/intctrl/pic.32
                0x00000000c0021ba8                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0021bd2       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0021bd2       0x23 hw/timer/apictimer.32
                0x00000000c0021bd2                APICTimer::~APICTimer()
                0x00000000c0021bd2                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0021bf6       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0021bf6       0x2a hw/timer/apictimer.32
                0x00000000c0021bf6                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0021c20       0x23
 .text._ZN3PITD2Ev
                0x00000000c0021c20       0x23 hw/timer/pit.32
                0x00000000c0021c20                PIT::~PIT()
                0x00000000c0021c20                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0021c44       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0021c44       0x2a hw/timer/pit.32
                0x00000000c0021c44                PIT::~PIT()

.rodata         0x00000000c0021c6e     0x385e
                0x00000000c0021c6e                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0021c6e        0x2 
 .ctors         0x00000000c0021c70        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0021c74        0x4 core/unixfile.32
 .ctors         0x00000000c0021c78        0x4 thr/prcssthr.32
 .ctors         0x00000000c0021c7c        0x4 vm86/x87em.32
 .ctors         0x00000000c0021c80        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0021c84                end_ctors = .
                0x00000000c0021c84                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0021c84        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0021c88        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0021c88                __DTOR_END__
                0x00000000c0021c8c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0021c8c       0x14 
 .rodata        0x00000000c0021ca0      0x101 acpica/utclib.32
                0x00000000c0021ca0                AcpiGbl_Ctypes
 *fill*         0x00000000c0021da1        0x3 
 .rodata        0x00000000c0021da4       0x18 core/malloc.32
 *fill*         0x00000000c0021dbc        0x4 
 .rodata        0x00000000c0021dc0      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c0021ee0       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0021f36        0xa 
 .rodata        0x00000000c0021f40      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022340       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0022389      0x1d5 core/computer.32
 *fill*         0x00000000c002255e        0x2 
 .rodata.str1.4
                0x00000000c0022560       0xcc core/computer.32
 .rodata._ZTV8Computer
                0x00000000c002262c       0x2c core/computer.32
                0x00000000c002262c                vtable for Computer
 .rodata.str1.1
                0x00000000c0022658       0x2a core/kheap.32
 *fill*         0x00000000c0022682        0x2 
 .rodata.str1.4
                0x00000000c0022684       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00226b4       0x17 core/main.32
 *fill*         0x00000000c00226cb        0x1 
 .rodata.str1.4
                0x00000000c00226cc       0x1f core/main.32
 .rodata.str1.1
                0x00000000c00226eb       0xf5 core/physmgr.32
 .rodata.str1.4
                0x00000000c00227e0       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c002282d       0x39 core/pipe.32
 *fill*         0x00000000c0022866        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0022868       0x1c core/pipe.32
                0x00000000c0022868                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022884       0x69 core/terminal.32
 *fill*         0x00000000c00228ed        0x3 
 .rodata._ZTV7VgaText
                0x00000000c00228f0       0x1c core/terminal.32
                0x00000000c00228f0                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002290c       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002292e       0x15 core/unixfile.32
 *fill*         0x00000000c0022943        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0022944       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002298f        0x8 core/unixfile.32
 *fill*         0x00000000c0022997        0x1 
 .rodata.str1.4
                0x00000000c0022998       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00229b8       0x1c core/unixfile.32
                0x00000000c00229b8                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00229d4       0x1c core/unixfile.32
                0x00000000c00229d4                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00229f0      0x1e0 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0022bd0      0x25f core/virtmgr.32
                                        0x26d (size before relaxing)
 .rodata.str1.1
                0x00000000c0022e2f       0x83 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0022eb2       0x11 dbg/kconsole.32
 *fill*         0x00000000c0022eb2        0x2 
 .rodata        0x00000000c0022eb4      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0023004       0x83 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c0023004       0x68 fs/vfs.32
                0x00000000c0023004                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002306c       0x1c fs/vfs.32
                0x00000000c002306c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0023088       0x1c fs/vfs.32
                0x00000000c0023088                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00230a4       0x2c hal/bus.32
                0x00000000c00230a4                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c00230d0       0x30 hal/buzzer.32
                0x00000000c00230d0                vtable for Buzzer
 .rodata.str1.1
                0x00000000c0023100       0x1e hal/clock.32
 *fill*         0x00000000c002311e        0x2 
 .rodata._ZTV5Clock
                0x00000000c0023120       0x3c hal/clock.32
                0x00000000c0023120                vtable for Clock
 *fill*         0x00000000c002315c        0x4 
 .rodata        0x00000000c0023160       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0023190       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00231e8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00231e8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c00231e8       0x2c hal/device.32
                0x00000000c00231e8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023214       0x2c hal/device.32
                0x00000000c0023214                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023240       0x2c hal/diskctrl.32
                0x00000000c0023240                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002326c       0x38 hal/diskphys.32
                0x00000000c002326c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00232a4        0x9 hal/fpu.32
 *fill*         0x00000000c00232ad        0x3 
 .rodata._ZTV3FPU
                0x00000000c00232b0       0x38 hal/fpu.32
                0x00000000c00232b0                vtable for FPU
 .rodata        0x00000000c00232e8      0x300 hal/intctrl.32
 .rodata._ZTV19InterruptController
                0x00000000c00235e8       0x48 hal/intctrl.32
                0x00000000c00235e8                vtable for InterruptController
 .rodata        0x00000000c0023630       0x4f hal/keybrd.32
 *fill*         0x00000000c002367f        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023680       0x34 hal/keybrd.32
                0x00000000c0023680                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00236b4       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00236f8       0x2c hal/logidisk.32
                0x00000000c00236f8                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0023724       0x2c hal/mouse.32
                0x00000000c0023724                vtable for Mouse
 .rodata.str1.1
                0x00000000c0023750        0xb hal/partition.32
 *fill*         0x00000000c002375b        0x1 
 .rodata._ZTV6Serial
                0x00000000c002375c       0x44 hal/serial.32
                0x00000000c002375c                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00237a0       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00237a0        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00237a0       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00237a0       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00237a0       0x30 hal/timer.32
                0x00000000c00237a0                vtable for Timer
 .rodata.str1.1
                0x00000000c00237d0      0x120 hal/vcache.32
 .rodata._ZTV6VCache
                0x00000000c00238f0       0x10 hal/vcache.32
                0x00000000c00238f0                vtable for VCache
 .rodata.str1.1
                0x00000000c0023900       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c0023968       0x48 hal/video.32
                0x00000000c0023968                vtable for Video
 .rodata.str1.4
                0x00000000c00239b0       0xdb hw/acpi.32
 .rodata.str1.1
                0x00000000c0023a8b      0x249 hw/acpi.32
                                        0x263 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023cd4       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023cd4        0x8 hw/acpi.32
 .rodata._ZTV4ACPI
                0x00000000c0023cd4       0x2c hw/acpi.32
                0x00000000c0023cd4                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023d00      0x36e hw/cpu.32
                                        0x372 (size before relaxing)
 *fill*         0x00000000c002406e        0x2 
 .rodata._ZTV3CPU
                0x00000000c0024070       0x2c hw/cpu.32
                0x00000000c0024070                vtable for CPU
 .rodata.str1.1
                0x00000000c002409c       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c00240ad       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00240e9       0xbe krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c00241a7        0x1 
 .rodata.str1.4
                0x00000000c00241a8      0x13e krnl/panic.32
 *fill*         0x00000000c00242e6        0x2 
 .rodata.str1.4
                0x00000000c00242e8       0x4c net/ethernet.32
 .rodata.str1.1
                0x00000000c0024334       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024379       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c00243cd       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c00243f9       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024441      0x247 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024688       0x57 thr/prcssthr.32
 *fill*         0x00000000c00246df        0x1 
 .rodata.str1.4
                0x00000000c00246e0      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00247ec       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00247ec       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00247ec       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00247ec        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00247ec       0xa0 vm86/vm8086.32
 .rodata        0x00000000c002488c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00248bc       0x58 vm86/x87em.32
 .rodata        0x00000000c0024914       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c0024950       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0024991        0x3 
 .rodata._ZTV3FAT
                0x00000000c0024994       0x68 fs/fat/vfslink.32
                0x00000000c0024994                vtable for FAT
 .rodata.str1.1
                0x00000000c00249fc       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c0024a17        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c0024a18       0x68 fs/iso9660/vfslink.32
                0x00000000c0024a18                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0024a80      0x149 hal/sound/sndcard.32
                                        0x161 (size before relaxing)
 *fill*         0x00000000c0024bc9        0x3 
 .rodata._ZTV9SoundCard
                0x00000000c0024bcc       0x34 hal/sound/sndcard.32
                0x00000000c0024bcc                vtable for SoundCard
 .rodata.str1.1
                0x00000000c0024c00       0x6e hal/sound/sndport.32
 *fill*         0x00000000c0024c6e        0x2 
 .rodata.str1.4
                0x00000000c0024c70       0x93 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0024d03       0xe1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0024de4       0x2c hw/bus/pci.32
                0x00000000c0024de4                vtable for PCI
 .rodata.str1.1
                0x00000000c0024e10       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0024e97        0x1 
 .rodata._ZTV3IDE
                0x00000000c0024e98       0x2c hw/diskctrl/ide.32
                0x00000000c0024e98                vtable for IDE
 .rodata.str1.4
                0x00000000c0024ec4       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024ee8       0x25 hw/diskctrl/satabus.32
 *fill*         0x00000000c0024f0d        0x3 
 .rodata._ZTV7SATABus
                0x00000000c0024f10       0x2c hw/diskctrl/satabus.32
                0x00000000c0024f10                vtable for SATABus
 .rodata.str1.1
                0x00000000c0024f3c       0x4b hw/diskphys/ata.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0024f87        0x1 
 .rodata._ZTV3ATA
                0x00000000c0024f88       0x38 hw/diskphys/ata.32
                0x00000000c0024f88                vtable for ATA
 .rodata.str1.1
                0x00000000c0024fc0       0x4b hw/diskphys/atapi.32
                                         0x38 (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c0024fc0       0x38 hw/diskphys/atapi.32
                0x00000000c0024fc0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0024ff8       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0025074       0x38 hw/diskphys/sata.32
                0x00000000c0025074                vtable for SATA
 .rodata.str1.1
                0x00000000c00250ac       0xa3 hw/diskphys/satapi.32
                                         0xb1 (size before relaxing)
 *fill*         0x00000000c002514f        0x1 
 .rodata._ZTV6SATAPI
                0x00000000c0025150       0x38 hw/diskphys/satapi.32
                0x00000000c0025150                vtable for SATAPI
 .rodata.str1.1
                0x00000000c0025188        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c0025190       0x38 hw/fpu/avx.32
                0x00000000c0025190                vtable for AVX
 .rodata.str1.1
                0x00000000c00251c8        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c00251d0       0x38 hw/fpu/mmx.32
                0x00000000c00251d0                vtable for MMX
 .rodata.str1.1
                0x00000000c0025208        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0025210       0x38 hw/fpu/sse.32
                0x00000000c0025210                vtable for SSE
 .rodata.str1.1
                0x00000000c0025248        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0025250       0x38 hw/fpu/x87.32
                0x00000000c0025250                vtable for x87
 .rodata        0x00000000c0025288       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0025360       0x48 hw/intctrl/apic.32
                0x00000000c0025360                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c00253a8       0x2c hw/intctrl/apic.32
                0x00000000c00253a8                vtable for IOAPIC
 .rodata        0x00000000c00253d4       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c00253f6        0x2 
 .rodata._ZTV3PIC
                0x00000000c00253f8       0x48 hw/intctrl/pic.32
                0x00000000c00253f8                vtable for PIC
 .rodata.str1.1
                0x00000000c0025440        0xb hw/timer/apictimer.32
 *fill*         0x00000000c002544b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002544c       0x30 hw/timer/apictimer.32
                0x00000000c002544c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002547c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0025499        0x3 
 .rodata._ZTV3PIT
                0x00000000c002549c       0x30 hw/timer/pit.32
                0x00000000c002549c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00254cc      0x7c9
 *(.data)
 .data          0x00000000c00254cc        0x0 crti.32
 .data          0x00000000c00254cc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00254cc                __dso_handle
 .data          0x00000000c00254d0        0x0 acpica/utclib.32
 .data          0x00000000c00254d0        0x0 core/malloc.32
 .data          0x00000000c00254d0        0x0 libk/string.32
 .data          0x00000000c00254d0        0x0 fs/fat/diskio.32
 .data          0x00000000c00254d0        0x0 fs/fat/ff.32
 .data          0x00000000c00254d0        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00254d0        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00254d0        0x0 compat/inlines.32
 .data          0x00000000c00254d0        0x0 compat/resolve.32
 .data          0x00000000c00254d0        0x0 core/computer.32
 .data          0x00000000c00254d0        0x0 core/gdt.32
 .data          0x00000000c00254d0        0x0 core/idle.32
 .data          0x00000000c00254d0        0x0 core/idt.32
 .data          0x00000000c00254d0        0x4 core/kheap.32
 *fill*         0x00000000c00254d4        0xc 
 .data          0x00000000c00254e0      0x142 core/main.32
                0x00000000c00254e0                titleScreen
 *fill*         0x00000000c0025622        0x2 
 .data          0x00000000c0025624        0x4 core/physmgr.32
                0x00000000c0025624                Phys::bitmap
 .data          0x00000000c0025628        0x0 core/pipe.32
 *fill*         0x00000000c0025628       0x18 
 .data          0x00000000c0025640       0x60 core/terminal.32
                0x00000000c0025640                VgaText::hiddenOut
                0x00000000c0025660                ansiToVGAMappings
 .data          0x00000000c00256a0        0x0 core/tss.32
 .data          0x00000000c00256a0        0x4 core/unixfile.32
                0x00000000c00256a0                UnixFile::nextFd
 .data          0x00000000c00256a4       0x15 core/virtmgr.32
                0x00000000c00256a4                Virt::pageAllocPtr
                0x00000000c00256a8                Virt::bitmap
                0x00000000c00256ac                Virt::swapfileSectorsPerPage
                0x00000000c00256b0                Virt::swapfileLength
                0x00000000c00256b4                Virt::swapfileSector
                0x00000000c00256b8                Virt::swapfileDrive
 *fill*         0x00000000c00256b9        0x3 
 .data          0x00000000c00256bc        0x4 coreobjs/c++.32
                0x00000000c00256bc                __stack_chk_guard
 .data          0x00000000c00256c0        0x0 dbg/kconsole.32
 .data          0x00000000c00256c0        0x0 fs/vfs.32
 .data          0x00000000c00256c0        0x0 hal/bus.32
 .data          0x00000000c00256c0        0x0 hal/buzzer.32
 .data          0x00000000c00256c0        0x0 hal/clock.32
 .data          0x00000000c00256c0        0x0 hal/device.32
 .data          0x00000000c00256c0        0x0 hal/diskctrl.32
 .data          0x00000000c00256c0        0x0 hal/diskphys.32
 .data          0x00000000c00256c0        0x0 hal/fpu.32
 .data          0x00000000c00256c0      0x2a0 hal/intctrl.32
                0x00000000c00256c0                Krnl::exceptionNames
 .data          0x00000000c0025960        0x0 hal/keybrd.32
 .data          0x00000000c0025960        0x0 hal/logidisk.32
 .data          0x00000000c0025960        0x0 hal/mouse.32
 .data          0x00000000c0025960        0x0 hal/partition.32
 .data          0x00000000c0025960        0x0 hal/serial.32
 .data          0x00000000c0025960        0x0 hal/timer.32
 .data          0x00000000c0025960        0x0 hal/vcache.32
 .data          0x00000000c0025960        0x0 hal/video.32
 .data          0x00000000c0025960       0x10 hw/acpi.32
                0x00000000c0025960                legacyIRQRemaps
 *fill*         0x00000000c0025970       0x10 
 .data          0x00000000c0025980      0x2a4 hw/cpu.32
                0x00000000c0025980                cpuNameList
                0x00000000c0025c20                lastCode
 .data          0x00000000c0025c24        0x0 hw/ports.32
 .data          0x00000000c0025c24        0x0 hw/smp.32
 *fill*         0x00000000c0025c24       0x1c 
 .data          0x00000000c0025c40       0x4d krnl/env.32
                0x00000000c0025c40                defaultSysEnv
 .data          0x00000000c0025c8d        0x0 krnl/panic.32
 .data          0x00000000c0025c8d        0x0 net/ethernet.32
 .data          0x00000000c0025c8d        0x0 reg/registry.32
 .data          0x00000000c0025c8d        0x0 sys/sc_eject.32
 .data          0x00000000c0025c8d        0x0 sys/sc_exit.32
 .data          0x00000000c0025c8d        0x0 sys/sc_getcwd.32
 .data          0x00000000c0025c8d        0x0 sys/sc_getpid.32
 .data          0x00000000c0025c8d        0x0 sys/sc_getramdata.32
 .data          0x00000000c0025c8d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c0025c8d        0x0 sys/sc_loaddll.32
 .data          0x00000000c0025c8d        0x0 sys/sc_read.32
 .data          0x00000000c0025c8d        0x0 sys/sc_sbrk.32
 .data          0x00000000c0025c8d        0x0 sys/sc_setcwd.32
 .data          0x00000000c0025c8d        0x0 sys/sc_settime.32
 .data          0x00000000c0025c8d        0x0 sys/sc_timezone.32
 .data          0x00000000c0025c8d        0x0 sys/sc_write.32
 .data          0x00000000c0025c8d        0x0 sys/sc_wsbe.32
 .data          0x00000000c0025c8d        0x0 sys/sc_yield.32
 .data          0x00000000c0025c8d        0x0 sys/syscalls.32
 .data          0x00000000c0025c8d        0x0 thr/elf.32
 *fill*         0x00000000c0025c8d        0x3 
 .data          0x00000000c0025c90        0x4 thr/prcssthr.32
                0x00000000c0025c90                Thr::nextPID
 .data          0x00000000c0025c94        0x0 vm86/vm8086.32
 .data          0x00000000c0025c94        0x0 vm86/x87em.32
 .data          0x00000000c0025c94        0x0 fs/fat/vfslink.32
 .data          0x00000000c0025c94        0x1 fs/iso9660/vfslink.32
                0x00000000c0025c94                recentDriveletter
 .data          0x00000000c0025c95        0x0 hal/sound/sndcard.32
 .data          0x00000000c0025c95        0x0 hal/sound/sndport.32
 .data          0x00000000c0025c95        0x0 hw/bus/isa.32
 .data          0x00000000c0025c95        0x0 hw/bus/pci.32
 .data          0x00000000c0025c95        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0025c95        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0025c95        0x0 hw/diskphys/ata.32
 .data          0x00000000c0025c95        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0025c95        0x0 hw/diskphys/sata.32
 .data          0x00000000c0025c95        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0025c95        0x0 hw/fpu/avx.32
 .data          0x00000000c0025c95        0x0 hw/fpu/mmx.32
 .data          0x00000000c0025c95        0x0 hw/fpu/sse.32
 .data          0x00000000c0025c95        0x0 hw/fpu/x87.32
 .data          0x00000000c0025c95        0x0 hw/intctrl/apic.32
 .data          0x00000000c0025c95        0x0 hw/intctrl/pic.32
 .data          0x00000000c0025c95        0x0 hw/timer/apictimer.32
 .data          0x00000000c0025c95        0x0 hw/timer/pit.32
 .data          0x00000000c0025c95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0025c95        0x0 crtn.32
 .data          0x00000000c0025c95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0025c95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0025c95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0025c95        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0025c98        0x0
 .got           0x00000000c0025c98        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0025c98        0x0
 .got.plt       0x00000000c0025c98        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0025c98        0x0
 .igot.plt      0x00000000c0025c98        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0025c98        0x0
 .tm_clone_table
                0x00000000c0025c98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0025c98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0025c95      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0025c95        0x3 
 .eh_frame      0x00000000c0025c98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0025c98        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0025c98       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0025cf0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0025d30       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0025d9c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c0025e20        0x0
 .rel.got       0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025e20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025e20     0x23c8
                0x00000000c0025e20                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0025e20        0x0 crti.32
 .bss           0x00000000c0025e20       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0025e40        0x4 acpica/utclib.32
 *fill*         0x00000000c0025e44       0x1c 
 .bss           0x00000000c0025e60      0x378 core/malloc.32
 .bss           0x00000000c00261d8        0x0 libk/string.32
 .bss           0x00000000c00261d8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c00261d8        0x8 
 .bss           0x00000000c00261e0       0x88 fs/fat/ff.32
 .bss           0x00000000c0026268        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026268        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0026268        0x0 compat/inlines.32
 .bss           0x00000000c0026268        0x0 compat/resolve.32
 .bss           0x00000000c0026268        0x6 core/computer.32
                0x00000000c0026268                Krnl::computer
                0x00000000c002626c                Krnl::preemptionOn
                0x00000000c002626d                Krnl::schedulingOn
 *fill*         0x00000000c002626e        0x2 
 .bss           0x00000000c0026270        0x6 core/gdt.32
                0x00000000c0026270                gdtDescr
 .bss           0x00000000c0026276        0x0 core/idle.32
 *fill*         0x00000000c0026276        0x2 
 .bss           0x00000000c0026278        0x6 core/idt.32
                0x00000000c0026278                idtDescr
 .bss           0x00000000c002627e        0x0 core/kheap.32
 *fill*         0x00000000c002627e        0x2 
 .bss           0x00000000c0026280        0x4 core/main.32
                0x00000000c0026280                sysBootSettings
 *fill*         0x00000000c0026284       0x1c 
 .bss           0x00000000c00262a0       0x50 core/physmgr.32
                0x00000000c00262a0                Phys::forbidEvictions
                0x00000000c00262a4                Phys::currentPagePointer
                0x00000000c00262a8                Phys::highestMem
                0x00000000c00262ac                Phys::oldPercent
                0x00000000c00262b0                Phys::usedPages
                0x00000000c00262b4                Phys::usablePages
                0x00000000c00262c0                Phys::dmaUsage
 .bss           0x00000000c00262f0        0x0 core/pipe.32
 *fill*         0x00000000c00262f0       0x10 
 .bss           0x00000000c0026300       0x29 core/terminal.32
                0x00000000c0026300                textModeImplementation
                0x00000000c0026320                terminalCycle
                0x00000000c0026324                activeTerminal
                0x00000000c0026328                VgaText::graphicMode
 *fill*         0x00000000c0026329        0x1 
 .bss           0x00000000c002632a        0x2 core/tss.32
                0x00000000c002632a                doubleFaultSelector
 *fill*         0x00000000c002632c       0x14 
 .bss           0x00000000c0026340       0x84 core/unixfile.32
                0x00000000c0026340                sfileLpt
                0x00000000c0026380                sfileCom
                0x00000000c00263a4                sfileNul
                0x00000000c00263a8                sfilePnt
                0x00000000c00263ac                sfileAux
                0x00000000c00263b0                sfileCon
                0x00000000c00263b4                initialFilesAdded
                0x00000000c00263b8                unixFileLinkedList
 .bss           0x00000000c00263c4       0x10 core/virtmgr.32
                0x00000000c00263c4                twswaps
                0x00000000c00263c8                swapBalance
                0x00000000c00263cc                Virt::swapfileBitmap
                0x00000000c00263d0                firstVAS
 .bss           0x00000000c00263d4        0x0 coreobjs/c++.32
 .bss           0x00000000c00263d4        0x0 dbg/kconsole.32
 .bss           0x00000000c00263d4        0x4 fs/vfs.32
                0x00000000c00263d4                installedFilesystems
 .bss           0x00000000c00263d8        0x0 hal/bus.32
 .bss           0x00000000c00263d8        0x4 hal/buzzer.32
                0x00000000c00263d8                systemBuzzer
 .bss           0x00000000c00263dc        0x8 hal/clock.32
                0x00000000c00263dc                User::dstOn
                0x00000000c00263dd                User::timezoneHalfHourOffset
                0x00000000c00263e0                User::timezoneHourOffset
 .bss           0x00000000c00263e4        0x0 hal/device.32
 .bss           0x00000000c00263e4        0x0 hal/diskctrl.32
 .bss           0x00000000c00263e4        0x0 hal/diskphys.32
 .bss           0x00000000c00263e4        0x0 hal/fpu.32
 .bss           0x00000000c00263e4        0x8 hal/intctrl.32
                0x00000000c00263e4                gpFaultIntercept
                0x00000000c00263e8                Krnl::fpuOwner
 *fill*         0x00000000c00263ec       0x14 
 .bss           0x00000000c0026400      0x429 hal/keybrd.32
                0x00000000c0026400                keyboardWaitingTaskList
                0x00000000c0026404                keyboardSetupYet
                0x00000000c0026408                guiKeyboardHandler
                0x00000000c0026420                keystates
 *fill*         0x00000000c0026829       0x17 
 .bss           0x00000000c0026840       0x88 hal/logidisk.32
                0x00000000c0026840                diskAssignments
                0x00000000c0026860                disks
 .bss           0x00000000c00268c8        0x4 hal/mouse.32
                0x00000000c00268c8                guiMouseHandler
 .bss           0x00000000c00268cc        0x0 hal/partition.32
 .bss           0x00000000c00268cc        0x0 hal/serial.32
 *fill*         0x00000000c00268cc        0x4 
 .bss           0x00000000c00268d0        0x8 hal/timer.32
                0x00000000c00268d0                nanoSinceBoot
 .bss           0x00000000c00268d8        0x0 hal/vcache.32
 .bss           0x00000000c00268d8        0x4 hal/video.32
                0x00000000c00268d8                screen
 *fill*         0x00000000c00268dc        0x4 
 .bss           0x00000000c00268e0      0x480 hw/acpi.32
                0x00000000c00268e0                systemSleepFunction
                0x00000000c00268e4                systemResetFunction
                0x00000000c00268e8                systemShutdownFunction
                0x00000000c00268ec                nextACPITable
                0x00000000c0026900                acpiTables
                0x00000000c0026b00                usingXSDT
                0x00000000c0026b04                MADTpointer
                0x00000000c0026b08                RSDTpointer
                0x00000000c0026b0c                RSDPpointer
                0x00000000c0026b10                nextAPICNMI
                0x00000000c0026b20                apicNMIInfo
                0x00000000c0026ba0                legacyIRQFlags
                0x00000000c0026bc0                ioapicDiscoveryNumber
                0x00000000c0026be0                ioapicFoundInMADT
                0x00000000c0026c00                ioapicAddresses
                0x00000000c0026c80                ioapicGSIBase
                0x00000000c0026d00                processorDiscoveryNumber
                0x00000000c0026d20                matchingAPICID
                0x00000000c0026d40                processorID
 .bss           0x00000000c0026d60       0x10 hw/cpu.32
                0x00000000c0026d60                lastD
                0x00000000c0026d64                lastC
                0x00000000c0026d68                lastB
                0x00000000c0026d6c                lastA
 .bss           0x00000000c0026d70        0x0 hw/ports.32
 .bss           0x00000000c0026d70        0x1 hw/smp.32
                0x00000000c0026d70                Krnl::bspID
 *fill*         0x00000000c0026d71        0x3 
 .bss           0x00000000c0026d74        0x8 krnl/env.32
                0x00000000c0026d74                Krnl::userEnv
                0x00000000c0026d78                Krnl::systemEnv
 .bss           0x00000000c0026d7c        0x9 krnl/panic.32
                0x00000000c0026d7c                Krnl::guiProgramFaultHandler
                0x00000000c0026d80                Krnl::guiPanicHandler
                0x00000000c0026d84                Krnl::kernelInPanic
 .bss           0x00000000c0026d85        0x0 net/ethernet.32
 .bss           0x00000000c0026d85        0x0 reg/registry.32
 .bss           0x00000000c0026d85        0x0 sys/sc_eject.32
 .bss           0x00000000c0026d85        0x0 sys/sc_exit.32
 .bss           0x00000000c0026d85        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0026d85        0x0 sys/sc_getpid.32
 .bss           0x00000000c0026d85        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0026d85        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0026d85        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0026d85        0x0 sys/sc_read.32
 .bss           0x00000000c0026d85        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0026d85        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0026d85        0x0 sys/sc_settime.32
 .bss           0x00000000c0026d85        0x0 sys/sc_timezone.32
 .bss           0x00000000c0026d85        0x0 sys/sc_write.32
 .bss           0x00000000c0026d85        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0026d85        0x0 sys/sc_yield.32
 *fill*         0x00000000c0026d85       0x1b 
 .bss           0x00000000c0026da0      0x200 sys/syscalls.32
                0x00000000c0026da0                systemCallHandlers
 .bss           0x00000000c0026fa0      0x7a4 thr/elf.32
                0x00000000c0026fa0                Thr::driverLookupNext
                0x00000000c0026fc0                Thr::driverLookupLen
                0x00000000c00271c0                Thr::driverLookupAddr
                0x00000000c00273c0                Thr::driverNameLookup
                0x00000000c00275c0                Thr::kernelSymbols
                0x00000000c0027640                Thr::kernelStringTable
                0x00000000c00276c0                Thr::kernelSymbolTable
                0x00000000c0027740                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0027744        0x4 
 .bss           0x00000000c0027748       0x68 thr/prcssthr.32
                0x00000000c0027748                cleanerThread
                0x00000000c002774c                weNeedTheCleanerToNotBlock
                0x00000000c0027750                retValLockStuff
                0x00000000c0027754                retValSchedLock
                0x00000000c0027758                lockStuffLock
                0x00000000c002775c                schedulerLock
                0x00000000c0027760                taskSwitchesPostponedFlag
                0x00000000c0027764                postponeTaskSwitchesCounter
                0x00000000c0027768                irqDisableCounter
                0x00000000c002776c                terminatedTaskList
                0x00000000c0027778                sleepingTaskList
                0x00000000c0027784                taskList
                0x00000000c0027790                kernelProcess
 *fill*         0x00000000c00277b0       0x10 
 .bss           0x00000000c00277c0       0x40 vm86/vm8086.32
                0x00000000c00277c0                Vm::vmRetV
                0x00000000c00277c4                Vm::vmDone
                0x00000000c00277c5                Vm::vmReady
                0x00000000c00277c8                Vm::vm86Thread
                0x00000000c00277cc                Vm::vmToHostCommsPtr
                0x00000000c00277e0                Vm::vmToHostComms
 .bss           0x00000000c0027800       0x48 vm86/x87em.32
                0x00000000c0027800                Vm::fpuState
 *fill*         0x00000000c0027848       0x18 
 .bss           0x00000000c0027860       0xf0 fs/fat/vfslink.32
                0x00000000c0027860                FAT::fats
                0x00000000c0027880                FAT::vfsToFatRemaps
                0x00000000c0027900                fatToVFSRemaps
 *fill*         0x00000000c0027950       0x10 
 .bss           0x00000000c0027960      0x820 fs/iso9660/vfslink.32
                0x00000000c0027960                recentSector
                0x00000000c0027980                recentBuffer
 .bss           0x00000000c0028180        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028180        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028180        0x0 hw/bus/isa.32
 .bss           0x00000000c0028180        0xd hw/bus/pci.32
                0x00000000c0028180                thePCI
 .bss           0x00000000c002818d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002818d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002818d        0x3 
 .bss           0x00000000c0028190        0x8 hw/diskphys/ata.32
                0x00000000c0028190                ataSectorsWritten
                0x00000000c0028194                ataSectorsRead
 .bss           0x00000000c0028198        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028198        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028198        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c0028198        0x0 hw/fpu/avx.32
 .bss           0x00000000c0028198        0x0 hw/fpu/mmx.32
 .bss           0x00000000c0028198        0x0 hw/fpu/sse.32
 .bss           0x00000000c0028198        0x0 hw/fpu/x87.32
 *fill*         0x00000000c0028198        0x8 
 .bss           0x00000000c00281a0       0x41 hw/intctrl/apic.32
                0x00000000c00281a0                noOfIOAPICs
                0x00000000c00281c0                ioapics
                0x00000000c00281e0                IOAPICsSetupYet
 .bss           0x00000000c00281e1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c00281e1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00281e1        0x3 
 .bss           0x00000000c00281e4        0x4 hw/timer/pit.32
                0x00000000c00281e4                pitFreq
 .bss           0x00000000c00281e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00281e8        0x0 crtn.32
 .bss           0x00000000c00281e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00281e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00281e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00281e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00281e8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002a5b0                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
