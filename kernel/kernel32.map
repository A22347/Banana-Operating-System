Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/rand.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/rand.32
LOAD net/ethernet.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x232aa
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x440 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                getRDRAND
                0x00000000c0000229                detectCPUID
                0x00000000c000023f                goToVM86
                0x00000000c000026f                goToUsermode
                0x00000000c0000299                switchToThreadASMFirstTime
                0x00000000c00002a7                switchToThreadASM
                0x00000000c0000337                asmQuickAcquireLock
                0x00000000c0000355                asmQuickReleaseLock
                0x00000000c0000361                asmAcquireLock
                0x00000000c0000382                asmReleaseLock
                0x00000000c0000395                loadGDT
                0x00000000c00003b5                isr0
                0x00000000c00003c5                isr1
                0x00000000c00003cf                isr2
                0x00000000c00003d9                isr3
                0x00000000c00003e3                isr4
                0x00000000c00003ed                isr5
                0x00000000c00003f7                isr6
                0x00000000c0000401                isr7
                0x00000000c000040b                isr8
                0x00000000c0000413                isr9
                0x00000000c000041d                isr10
                0x00000000c0000425                isr11
                0x00000000c000042d                isr12
                0x00000000c0000435                isr13
                0x00000000c000043d                isr14
                0x00000000c0000445                isr15
                0x00000000c000044f                isr16
                0x00000000c0000459                isr17
                0x00000000c0000463                isr18
                0x00000000c000046d                irq3
                0x00000000c0000477                irq4
                0x00000000c0000481                irq5
                0x00000000c000048b                irq6
                0x00000000c0000495                irq7
                0x00000000c000049f                irq8
                0x00000000c00004a9                irq9
                0x00000000c00004b3                irq10
                0x00000000c00004bd                irq11
                0x00000000c00004c7                irq12
                0x00000000c00004d1                irq13
                0x00000000c00004db                irq14
                0x00000000c00004e5                irq15
                0x00000000c00004ef                irq1
                0x00000000c00004f6                irq2
                0x00000000c00004fd                isr96
                0x00000000c0000504                irq0
                0x00000000c0000509                int_common_stub
                0x00000000c0000509                syscall_common_stub
                0x00000000c000053b                irq16
                0x00000000c0000545                irq17
                0x00000000c000054f                irq18
                0x00000000c0000559                irq19
                0x00000000c0000563                irq20
                0x00000000c000056d                irq21
                0x00000000c0000577                irq22
                0x00000000c0000581                irq23
                0x00000000c000058b                memcpy
 .text          0x00000000c0000590      0x5dd acpica/utclib.32
                0x00000000c0000590                memcmp
                0x00000000c00005cc                memmove
                0x00000000c0000694                memset
                0x00000000c00006b0                strlen
                0x00000000c00006c8                strpbrk
                0x00000000c0000704                strtok
                0x00000000c0000750                strcpy
                0x00000000c0000774                strncpy
                0x00000000c00007dc                strcmp
                0x00000000c000081c                strchr
                0x00000000c0000840                strncmp
                0x00000000c0000890                strcat
                0x00000000c00008c0                strncat
                0x00000000c00008fc                strstr
                0x00000000c0000944                toupper
                0x00000000c0000958                tolower
                0x00000000c000096c                simple_strtoul
 .text          0x00000000c0000b6d      0xfad core/malloc.32
                0x00000000c0000cd8                dlfree
                0x00000000c0001033                dlmalloc
                0x00000000c0001570                dlrealloc
                0x00000000c0001713                dlmemalign
                0x00000000c0001836                dlcalloc
                0x00000000c00018d0                dlcfree
                0x00000000c00018d5                dlindependent_calloc
                0x00000000c00018fa                dlindependent_comalloc
                0x00000000c0001911                dlvalloc
                0x00000000c000193c                dlpvalloc
                0x00000000c0001972                dlmalloc_trim
                0x00000000c000197f                dlmalloc_usable_size
                0x00000000c00019b0                dlmallinfo
                0x00000000c0001a7f                dlmalloc_stats
                0x00000000c0001a90                dlmallopt
 .text          0x00000000c0001b1a        0x0 libk/string.32
 .text          0x00000000c0001b1a       0x51 fs/fat/diskio.32
                0x00000000c0001b1a                disk_status
                0x00000000c0001b1d                disk_initialize
                0x00000000c0001b20                disk_read
                0x00000000c0001b36                disk_write
                0x00000000c0001b4c                disk_ioctl
 .text          0x00000000c0001b6b     0x6a69 fs/fat/ff.32
                0x00000000c0004e39                f_mount
                0x00000000c0004e9b                f_open
                0x00000000c00052d7                f_read
                0x00000000c0005557                f_write
                0x00000000c0005811                f_sync
                0x00000000c00059ed                f_close
                0x00000000c0005a1c                f_lseek
                0x00000000c0005ed3                f_opendir
                0x00000000c0005fd5                f_closedir
                0x00000000c0005ff7                f_readdir
                0x00000000c0006092                f_stat
                0x00000000c0006121                f_getfree
                0x00000000c00062ec                f_truncate
                0x00000000c00063e4                f_unlink
                0x00000000c0006567                f_mkdir
                0x00000000c0006793                f_rename
                0x00000000c0006a86                f_chmod
                0x00000000c0006b64                f_utime
                0x00000000c0006c42                f_getlabel
                0x00000000c0006e30                f_setlabel
                0x00000000c000709d                f_expand
                0x00000000c00072d3                f_forward
                0x00000000c00074b1                f_mkfs
 .text          0x00000000c00085d4       0x2f fs/fat/ffsystem.32
                0x00000000c00085d4                ff_memalloc
                0x00000000c00085ec                ff_memfree
 *fill*         0x00000000c0008603        0x1 
 .text          0x00000000c0008604      0x274 fs/fat/ffunicode.32
                0x00000000c0008604                ff_uni2oem
                0x00000000c000869c                ff_oem2uni
                0x00000000c0008710                ff_wtoupper
 .text          0x00000000c0008878       0xa7 compat/inlines.32
                0x00000000c0008878                CPU::current()
                0x00000000c0008884                operator new(unsigned long)
                0x00000000c0008889                operator delete(void*)
                0x00000000c000888e                disableIRQs()
                0x00000000c0008896                enableIRQs()
                0x00000000c00088a5                lockScheduler()
                0x00000000c00088ad                unlockScheduler()
                0x00000000c00088bc                lockStuff()
                0x00000000c00088ca                unlockStuff()
                0x00000000c0008904                Virt::getAKernelVAS()
                0x00000000c000890a                __not_memcpy
 *fill*         0x00000000c000891f        0x1 
 .text          0x00000000c0008920      0x118 compat/resolve.32
                0x00000000c0008920                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0008a38      0xb95 core/computer.32
                0x00000000c0008a38                Computer::close(int, int, void*)
                0x00000000c0008a7c                Krnl::firstTask()
                0x00000000c0008bd0                Computer::Computer()
                0x00000000c0008bd0                Computer::Computer()
                0x00000000c0008d2c                Computer::setBootMessage(char const*)
                0x00000000c0008d2e                Computer::detectFeatures()
                0x00000000c0008f38                Computer::displayFeatures()
                0x00000000c000927e                Computer::rdmsr(unsigned int)
                0x00000000c00092aa                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00092e2                Computer::shutdown()
                0x00000000c00092fa                Computer::restart()
                0x00000000c0009312                Computer::sleep()
                0x00000000c0009326                Computer::nmiEnabled()
                0x00000000c0009332                Computer::readCMOS(unsigned char)
                0x00000000c000934c                Computer::enableNMI(bool)
                0x00000000c0009364                Computer::open(int, int, void*)
                0x00000000c0009510                Computer::disableNMI()
                0x00000000c000951e                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000953c                Computer::handleNMI()
                0x00000000c00095a2                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c00095cd        0x1 
 .text          0x00000000c00095ce      0x19d core/gdt.32
                0x00000000c00095ce                GDTEntry::setBase(unsigned int)
                0x00000000c00095ea                GDTEntry::setLimit(unsigned int)
                0x00000000c0009608                GDT::GDT()
                0x00000000c0009608                GDT::GDT()
                0x00000000c000961e                GDT::addEntry(GDTEntry)
                0x00000000c0009640                GDT::getNumberOfEntries()
                0x00000000c0009648                GDT::flush()
                0x00000000c000966a                GDT::setup()
 .text          0x00000000c000976b       0x6b core/idle.32
                0x00000000c000976b                idleFunction(void*)
 *fill*         0x00000000c00097d6        0x2 
 .text          0x00000000c00097d8      0x464 core/idt.32
                0x00000000c00097d8                IDTEntry::IDTEntry(bool)
                0x00000000c00097d8                IDTEntry::IDTEntry(bool)
                0x00000000c000984a                IDTEntry::setOffset(unsigned int)
                0x00000000c0009860                IDT::IDT()
                0x00000000c0009860                IDT::IDT()
                0x00000000c0009862                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000986a                IDT::addEntry(IDTEntry, int)
                0x00000000c0009884                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00098bc                IDT::flush()
                0x00000000c00098d6                IDT::setup()
 .text          0x00000000c0009c3c      0x191 core/kheap.32
                0x00000000c0009c3c                sbrk
                0x00000000c0009cdf                mmap
                0x00000000c0009cf5                munmap
                0x00000000c0009d0b                liballoc_lock()
                0x00000000c0009d18                liballoc_unlock()
                0x00000000c0009d2c                liballoc_alloc(int)
                0x00000000c0009d44                liballoc_free(void*, int)
                0x00000000c0009d5f                realloc
                0x00000000c0009d73                malloc
                0x00000000c0009d83                free
                0x00000000c0009d93                rfree
                0x00000000c0009da3                calloc
 .text          0x00000000c0009dcd      0x437 core/main.32
                0x00000000c0009dcd                Krnl::setBootMessage(char const*)
                0x00000000c0009e39                kernel_main
 .text          0x00000000c000a204      0x673 core/physmgr.32
                0x00000000c000a204                Phys::allocateDMA(unsigned long)
                0x00000000c000a313                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000a359                Phys::setPageState(unsigned long, bool)
                0x00000000c000a38b                Phys::getPageState(unsigned long)
                0x00000000c000a3a7                Phys::freePage(unsigned long)
                0x00000000c000a42a                Phys::allocatePage()
                0x00000000c000a515                Phys::allocateContiguousPages(int)
                0x00000000c000a571                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000a5a9                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000a877        0x1 
 .text          0x00000000c000a878      0x273 core/pipe.32
                0x00000000c000a878                Pipe::isAtty()
                0x00000000c000a87c                Pipe::~Pipe()
                0x00000000c000a87c                Pipe::~Pipe()
                0x00000000c000a8a0                Pipe::~Pipe()
                0x00000000c000a8c8                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000a9c4                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000aa84                Pipe::Pipe(int)
                0x00000000c000aa84                Pipe::Pipe(int)
 *fill*         0x00000000c000aaeb        0x1 
 .text          0x00000000c000aaec      0xb8f core/terminal.32
                0x00000000c000aaec                VgaText::isAtty()
                0x00000000c000aaf0                VgaText::~VgaText()
                0x00000000c000aaf0                VgaText::~VgaText()
                0x00000000c000ab14                VgaText::~VgaText()
                0x00000000c000ab3e                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000ab5e                setTerminalScrollLock(bool)
                0x00000000c000ab5f                addToTerminalCycle(VgaText*)
                0x00000000c000ab80                installVgaTextImplementation()
                0x00000000c000ab95                scrollTerminalScrollLock(int)
                0x00000000c000ab96                VgaText::updateTitle()
                0x00000000c000abd4                VgaText::load()
                0x00000000c000ac22                VgaText::updateCursor()
                0x00000000c000ac38                VgaText::doANSI_SGR(int)
                0x00000000c000acac                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000acbc                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000accc                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000acec                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000acfc                VgaText::setTitleColour(VgaColour)
                0x00000000c000ad0c                VgaText::setTitle(char*)
                0x00000000c000ad32                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000ad44                VgaText::scrollScreen()
                0x00000000c000add8                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000adea                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000ae46                VgaText::getCursorX()
                0x00000000c000ae4e                VgaText::getCursorY()
                0x00000000c000ae56                VgaText::setCursor(int, int)
                0x00000000c000ae6d                setActiveTerminal(VgaText*)
                0x00000000c000aecf                doTerminalCycle()
                0x00000000c000aeea                VgaText::setCursorX(int)
                0x00000000c000af02                VgaText::setCursorY(int)
                0x00000000c000af1a                VgaText::incrementCursor(bool)
                0x00000000c000af6e                VgaText::decrementCursor(bool)
                0x00000000c000af90                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000b068                VgaText::doUpdate()
                0x00000000c000b076                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000b1ee                VgaText::clearScreen()
                0x00000000c000b248                VgaText::putchar(char)
                0x00000000c000b334                VgaText::putx(unsigned int)
                0x00000000c000b37a                VgaText::puts(char const*)
                0x00000000c000b3a0                VgaText::VgaText(char const*)
                0x00000000c000b3a0                VgaText::VgaText(char const*)
                0x00000000c000b51c                VgaText::receiveKey(unsigned char)
                0x00000000c000b602                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000b656                newTerminal(char*)
 *fill*         0x00000000c000b67b        0x1 
 .text          0x00000000c000b67c      0x1a1 core/tss.32
                0x00000000c000b67c                TSS::TSS()
                0x00000000c000b67c                TSS::TSS()
                0x00000000c000b68c                TSS::setESP(unsigned long)
                0x00000000c000b6a0                TSS::flush()
                0x00000000c000b6c0                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000b81d        0x1 
 .text          0x00000000c000b81e      0x4c2 core/unixfile.32
                0x00000000c000b81e                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000b874                ReservedFilename::isAtty()
                0x00000000c000b890                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000b8ee                UnixFile::getFileDescriptor()
                0x00000000c000b8f6                UnixFile::UnixFile(int)
                0x00000000c000b8f6                UnixFile::UnixFile(int)
                0x00000000c000baa6                ReservedFilename::ReservedFilename(int)
                0x00000000c000baa6                ReservedFilename::ReservedFilename(int)
                0x00000000c000bad8                UnixFile::~UnixFile()
                0x00000000c000bad8                UnixFile::~UnixFile()
                0x00000000c000bb70                UnixFile::~UnixFile()
                0x00000000c000bb98                ReservedFilename::~ReservedFilename()
                0x00000000c000bb98                ReservedFilename::~ReservedFilename()
                0x00000000c000bbbc                ReservedFilename::~ReservedFilename()
                0x00000000c000bbe3                getFromFileDescriptor(int)
 .text          0x00000000c000bce0     0x1218 core/virtmgr.32
                0x00000000c000bce0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000bd15                Virt::getPageState(unsigned long)
                0x00000000c000bd39                Virt::allocateKernelVirtualPages(int)
                0x00000000c000be4a                Virt::freeSwapfilePage(unsigned long)
                0x00000000c000be68                Virt::swapIDToSector(unsigned long)
                0x00000000c000be7a                Virt::allocateSwapfilePage()
                0x00000000c000bef8                Virt::virtualMemorySetup()
                0x00000000c000bf43                Virt::setupPageSwapping(int)
                0x00000000c000bfb4                VAS::VAS()
                0x00000000c000bfb4                VAS::VAS()
                0x00000000c000bff0                VAS::VAS(VAS*)
                0x00000000c000bff0                VAS::VAS(VAS*)
                0x00000000c000c01e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000c04a                VAS::getPageTableEntry(unsigned long)
                0x00000000c000c069                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000c18c                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000c1b0                VAS::virtualToPhysical(unsigned long)
                0x00000000c000c1c8                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000c208                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000c23a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000c264                VAS::~VAS()
                0x00000000c000c264                VAS::~VAS()
                0x00000000c000c3e0                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000c4e2                VAS::allocatePages(int, int)
                0x00000000c000c6ba                VAS::setCPUSpecific(unsigned long)
                0x00000000c000c6d6                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000c79c                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000c88a                VAS::VAS(bool)
                0x00000000c000c88a                VAS::VAS(bool)
                0x00000000c000cb0a                VAS::evict(unsigned long)
                0x00000000c000cbda                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000ccee                VAS::scanForEviction()
                0x00000000c000cdcc                mapVASFirstTime
 .text          0x00000000c000cef8       0x95 coreobjs/c++.32
                0x00000000c000cef8                __cxa_atexit
                0x00000000c000cefb                __cxa_finalize
                0x00000000c000cefc                __stack_chk_fail
                0x00000000c000cf68                __cxa_pure_virtual
                0x00000000c000cf79                operator new[](unsigned long)
                0x00000000c000cf7e                operator delete(void*, unsigned long)
                0x00000000c000cf83                operator delete[](void*)
                0x00000000c000cf88                operator delete[](void*, unsigned long)
 .text          0x00000000c000cf8d      0x1fc dbg/kconsole.32
                0x00000000c000cf8d                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000cfe6                Dbg::logc(char)
                0x00000000c000d006                Dbg::logs(char*)
                0x00000000c000d023                Dbg::logWriteInt(unsigned int)
                0x00000000c000d040                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000d05f                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000d189        0x1 
 .text          0x00000000c000d18a      0xcac fs/vfs.32
                0x00000000c000d18a                File::read(unsigned long long, void*, int*)
                0x00000000c000d1e2                File::write(unsigned long long, void*, int*)
                0x00000000c000d23a                Directory::read(unsigned long long, void*, int*)
                0x00000000c000d292                Directory::write(unsigned long long, void*, int*)
                0x00000000c000d2c0                File::isAtty()
                0x00000000c000d2c4                Directory::isAtty()
                0x00000000c000d2c8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000d2ce                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000d2d4                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000d2da                File::~File()
                0x00000000c000d2da                File::~File()
                0x00000000c000d2fe                File::~File()
                0x00000000c000d328                Directory::~Directory()
                0x00000000c000d328                Directory::~Directory()
                0x00000000c000d34c                Directory::~Directory()
                0x00000000c000d376                Filesystem::Filesystem()
                0x00000000c000d376                Filesystem::Filesystem()
                0x00000000c000d39a                Filesystem::~Filesystem()
                0x00000000c000d39a                Filesystem::~Filesystem()
                0x00000000c000d3a8                Filesystem::~Filesystem()
                0x00000000c000d3cc                Fs::getcwd(Process*, char*, int)
                0x00000000c000d3f6                Fs::initVFS()
                0x00000000c000d420                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000d5ca                File::File(char const*, Process*)
                0x00000000c000d5ca                File::File(char const*, Process*)
                0x00000000c000d6a4                File::open(FileOpenMode)
                0x00000000c000d702                File::close()
                0x00000000c000d762                File::seek(unsigned long long)
                0x00000000c000d7b8                File::tell(unsigned long long*)
                0x00000000c000d808                File::rewind()
                0x00000000c000d81c                File::unlink()
                0x00000000c000d868                File::rename(char const*)
                0x00000000c000d8b6                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000d912                File::exists()
                0x00000000c000d950                File::stat(unsigned long long*, bool*)
                0x00000000c000d9b1                Fs::setcwd(Process*, char*)
                0x00000000c000db2a                Directory::Directory(char const*, Process*)
                0x00000000c000db2a                Directory::Directory(char const*, Process*)
                0x00000000c000dc04                Directory::open()
                0x00000000c000dc60                Directory::close()
                0x00000000c000dcc0                Directory::unlink()
                0x00000000c000dd0c                Directory::rename(char const*)
                0x00000000c000dd5a                Directory::exists()
                0x00000000c000dd98                Directory::read(dirent*)
                0x00000000c000dde4                Directory::create()
                0x00000000c000de30                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000de36        0x2 
 .text          0x00000000c000de38       0x86 hal/bus.32
                0x00000000c000de38                Bus::Bus(char const*)
                0x00000000c000de38                Bus::Bus(char const*)
                0x00000000c000de70                Bus::~Bus()
                0x00000000c000de70                Bus::~Bus()
                0x00000000c000de94                Bus::~Bus()
 *fill*         0x00000000c000debe        0x2 
 .text          0x00000000c000dec0      0x153 hal/buzzer.32
                0x00000000c000dec0                Buzzer::Buzzer(char const*)
                0x00000000c000dec0                Buzzer::Buzzer(char const*)
                0x00000000c000df04                Buzzer::~Buzzer()
                0x00000000c000df04                Buzzer::~Buzzer()
                0x00000000c000df28                Buzzer::~Buzzer()
                0x00000000c000df52                Buzzer::stop()
                0x00000000c000df65                beepThread(void*)
                0x00000000c000dfa6                Buzzer::beep(int, int, bool)
 *fill*         0x00000000c000e013        0x1 
 .text          0x00000000c000e014      0x467 hal/clock.32
                0x00000000c000e014                User::loadClockSettings(int)
                0x00000000c000e066                Clock::Clock(char const*)
                0x00000000c000e066                Clock::Clock(char const*)
                0x00000000c000e09c                Clock::~Clock()
                0x00000000c000e09c                Clock::~Clock()
                0x00000000c000e0c0                Clock::~Clock()
                0x00000000c000e0ea                Clock::timeInSecondsLocal()
                0x00000000c000e132                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000e18b                datetimeToSeconds(datetime_t)
                0x00000000c000e2b2                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000e312                secondsToDatetime(unsigned long long)
                0x00000000c000e456                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000e47b        0x1 
 .text          0x00000000c000e47c      0x504 hal/device.32
                0x00000000c000e47c                Device::hibernate()
                0x00000000c000e47e                Device::wake()
                0x00000000c000e480                Device::detect()
                0x00000000c000e482                Device::disableLegacy()
                0x00000000c000e484                Device::powerSaving(PowerSavingLevel)
                0x00000000c000e486                DriverlessDevice::close(int, int, void*)
                0x00000000c000e48a                DriverlessDevice::detect()
                0x00000000c000e48c                DriverlessDevice::open(int, int, void*)
                0x00000000c000e4a0                Device::~Device()
                0x00000000c000e4a0                Device::~Device()
                0x00000000c000e4ae                Device::~Device()
                0x00000000c000e4d6                Device::findAndLoadDriver()
                0x00000000c000e4e4                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000e50a                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000e54a                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000e588                Device::getParent()
                0x00000000c000e594                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000e5d2                Device::addChild(Device*)
                0x00000000c000e616                Device::removeAllChildren()
                0x00000000c000e65c                Device::hibernateAll()
                0x00000000c000e68c                Device::wakeAll()
                0x00000000c000e6bc                Device::detectAll()
                0x00000000c000e6ec                Device::disableLegacyAll()
                0x00000000c000e71c                Device::loadDriversForAll()
                0x00000000c000e75c                Device::closeAll()
                0x00000000c000e792                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000e7c8                Device::setName(char const*)
                0x00000000c000e7d6                Device::Device(char const*)
                0x00000000c000e7d6                Device::Device(char const*)
                0x00000000c000e8d2                Device::getName()
                0x00000000c000e8dc                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e8dc                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e912                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000e956                getDevicesOfType(DeviceType)
 .text          0x00000000c000e980       0x86 hal/diskctrl.32
                0x00000000c000e980                HardDiskController::HardDiskController(char const*)
                0x00000000c000e980                HardDiskController::HardDiskController(char const*)
                0x00000000c000e9b8                HardDiskController::~HardDiskController()
                0x00000000c000e9b8                HardDiskController::~HardDiskController()
                0x00000000c000e9dc                HardDiskController::~HardDiskController()
 .text          0x00000000c000ea06       0xe2 hal/diskphys.32
                0x00000000c000ea06                PhysicalDisk::eject()
                0x00000000c000ea0a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ea0a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ea72                PhysicalDisk::startCache()
                0x00000000c000ea9a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ea9a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000eabe                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000eae8      0x15f hal/fpu.32
                0x00000000c000eae8                FPU::FPU(char const*)
                0x00000000c000eae8                FPU::FPU(char const*)
                0x00000000c000eb20                FPU::~FPU()
                0x00000000c000eb20                FPU::~FPU()
                0x00000000c000eb44                FPU::~FPU()
                0x00000000c000eb6e                setupFPU()
 *fill*         0x00000000c000ec47        0x1 
 .text          0x00000000c000ec48     0x12bf hal/intctrl.32
                0x00000000c000ec48                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000ec80                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000ecd2                doubleFault(regs*, void*)
                0x00000000c000ecec                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ed88                InterruptController::clearAllHandlers(int, bool)
                0x00000000c000ee30                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000eeb7                nmiHandler(regs*, void*)
                0x00000000c000eec5                int_handler
                0x00000000c000ef66                InterruptController::InterruptController(char const*)
                0x00000000c000ef66                InterruptController::InterruptController(char const*)
                0x00000000c000f00c                InterruptController::~InterruptController()
                0x00000000c000f00c                InterruptController::~InterruptController()
                0x00000000c000f030                InterruptController::~InterruptController()
                0x00000000c000f05a                displayDebugInfo(regs*)
                0x00000000c000f4e9                x87EmulHandler(regs*, void*)
                0x00000000c000f622                gpFault(regs*, void*)
                0x00000000c000f65b                pgFault(regs*, void*)
                0x00000000c000f6aa                otherISRHandler(regs*, void*)
                0x00000000c000f6c9                opcodeFault(regs*, void*)
                0x00000000c000faa3                displayProgramFault(char const*)
                0x00000000c000facb                setupInterruptController()
                0x00000000c000feba                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c000ff07        0x1 
 .text          0x00000000c000ff08      0x778 hal/keybrd.32
                0x00000000c000ff08                startGUI(void*)
                0x00000000c000ff74                startGUIVESA(void*)
                0x00000000c000ffe0                sendKeyToTerminal(unsigned char)
                0x00000000c001009e                sendKeyboardToken(KeyboardToken)
                0x00000000c00104d0                clearInternalKeybuffer(VgaText*)
                0x00000000c0010505                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c00105f6                Keyboard::Keyboard(char const*)
                0x00000000c00105f6                Keyboard::Keyboard(char const*)
                0x00000000c0010632                Keyboard::~Keyboard()
                0x00000000c0010632                Keyboard::~Keyboard()
                0x00000000c0010656                Keyboard::~Keyboard()
 .text          0x00000000c0010680      0x42a hal/logidisk.32
                0x00000000c0010680                LogicalDisk::close(int, int, void*)
                0x00000000c0010684                LogicalDisk::~LogicalDisk()
                0x00000000c0010684                LogicalDisk::~LogicalDisk()
                0x00000000c00106a8                LogicalDisk::~LogicalDisk()
                0x00000000c00106d2                LogicalDisk::open(int, int, void*)
                0x00000000c00106e6                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c001071e                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0010764                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0010764                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c001081a                LogicalDisk::assignDriveLetter()
                0x00000000c00108d0                LogicalDisk::mount()
                0x00000000c0010958                LogicalDisk::unmount()
                0x00000000c0010968                LogicalDisk::eject()
                0x00000000c001097c                LogicalDisk::unassignDriveLetter()
                0x00000000c00109d2                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0010a3e                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c0010aaa        0x2 
 .text          0x00000000c0010aac       0x86 hal/mouse.32
                0x00000000c0010aac                Mouse::Mouse(char const*)
                0x00000000c0010aac                Mouse::Mouse(char const*)
                0x00000000c0010ae4                Mouse::~Mouse()
                0x00000000c0010ae4                Mouse::~Mouse()
                0x00000000c0010b08                Mouse::~Mouse()
 .text          0x00000000c0010b32      0x339 hal/partition.32
                0x00000000c0010b32                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0010bda                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0010e6b        0x1 
 .text          0x00000000c0010e6c       0x86 hal/serial.32
                0x00000000c0010e6c                Serial::Serial(char const*)
                0x00000000c0010e6c                Serial::Serial(char const*)
                0x00000000c0010ea4                Serial::~Serial()
                0x00000000c0010ea4                Serial::~Serial()
                0x00000000c0010ec8                Serial::~Serial()
 *fill*         0x00000000c0010ef2        0x2 
 .text          0x00000000c0010ef4      0x2f2 hal/timer.32
                0x00000000c0010ef4                Timer::Timer(char const*)
                0x00000000c0010ef4                Timer::Timer(char const*)
                0x00000000c0010f2c                Timer::~Timer()
                0x00000000c0010f2c                Timer::~Timer()
                0x00000000c0010f50                Timer::~Timer()
                0x00000000c0010f7a                Timer::read()
                0x00000000c0010f85                timerHandler(unsigned int)
                0x00000000c00110ec                setupTimer(int)
 *fill*         0x00000000c00111e6        0x2 
 .text          0x00000000c00111e8      0x43e hal/vcache.32
                0x00000000c00111e8                VCache::VCache(PhysicalDisk*)
                0x00000000c00111e8                VCache::VCache(PhysicalDisk*)
                0x00000000c0011350                VCache::invalidateReadBuffer()
                0x00000000c0011360                VCache::writeWriteBuffer()
                0x00000000c00113ac                VCache::~VCache()
                0x00000000c00113ac                VCache::~VCache()
                0x00000000c0011400                VCache::~VCache()
                0x00000000c0011428                VCache::write(unsigned long long, int, void*)
                0x00000000c0011522                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c0011626      0x4b3 hal/video.32
                0x00000000c0011626                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c0011672                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c00116e2                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c0011760                Video::clearScreen(unsigned int)
                0x00000000c0011794                Video::putpixel(int, int, unsigned int)
                0x00000000c00117a2                Video::Video(char const*)
                0x00000000c00117a2                Video::Video(char const*)
                0x00000000c00117d8                Video::~Video()
                0x00000000c00117d8                Video::~Video()
                0x00000000c00117fc                Video::~Video()
                0x00000000c0011826                Video::isMonochrome()
                0x00000000c0011832                Video::getWidth()
                0x00000000c001183e                Video::getHeight()
                0x00000000c001184a                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c0011906                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c0011a6e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c0011ad9        0x3 
 .text          0x00000000c0011adc     0x1707 hw/acpi.32
                0x00000000c0011adc                ACPI::close(int, int, void*)
                0x00000000c0011b90                findRSDP()
                0x00000000c0011c64                loadACPITables(unsigned char*)
                0x00000000c0011ec8                findRSDT(unsigned char*)
                0x00000000c0012088                findDataTable(unsigned char*, char*)
                0x00000000c0012100                scanMADT()
                0x00000000c00125dc                ACPI::ACPI()
                0x00000000c00125dc                ACPI::ACPI()
                0x00000000c0012640                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0012728                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c00127f0                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c00127f8                ACPI::detectPCI()
                0x00000000c0012cdc                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0012d24                ACPI::sleep()
                0x00000000c0012d60                ACPI::open(int, int, void*)
 *fill*         0x00000000c00131e3        0x1 
 .text          0x00000000c00131e4     0x1861 hw/cpu.32
                0x00000000c00131e4                CPU::close(int, int, void*)
                0x00000000c00131e8                CPU::lookupAMDName(unsigned char, unsigned char)
                0x00000000c001337c                CPU::lookupIntelName(unsigned char, unsigned char)
                0x00000000c001362a                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0013646                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001365e                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c00136d2                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0013756                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0013784                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00137b2                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00137e0                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c001380e                CPU::CPU()
                0x00000000c001380e                CPU::CPU()
                0x00000000c001389c                CPU::displayFeatures()
                0x00000000c0013b3c                CPU::detectFeatures()
                0x00000000c0014566                CPU::setupSMEP()
                0x00000000c0014572                CPU::setupUMIP()
                0x00000000c001457c                CPU::setupTSC()
                0x00000000c0014586                CPU::setupLargePages()
                0x00000000c0014590                CPU::setupPAT()
                0x00000000c00145cc                CPU::setupMTRR()
                0x00000000c00145ce                CPU::setupGlobalPages()
                0x00000000c00145d8                CPU::allowUsermodeDataAccess()
                0x00000000c00145ea                CPU::prohibitUsermodeDataAccess()
                0x00000000c00145fc                CPU::setupSMAP()
                0x00000000c001460a                CPU::setupFeatures()
                0x00000000c00146d6                CPU::open(int, int, void*)
                0x00000000c001484a                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0014a45        0x0 hw/ports.32
 .text          0x00000000c0014a45      0x16a hw/smp.32
                0x00000000c0014a45                Krnl::smpEntry()
                0x00000000c0014a47                Krnl::startCPU(int)
                0x00000000c0014b90                Krnl::startCPUs()
 *fill*         0x00000000c0014baf        0x1 
 .text          0x00000000c0014bb0      0x581 krnl/env.32
                0x00000000c0014bb0                EnvVarContainer::getEnv(char const*)
                0x00000000c0014bee                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0014cb0                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0014cb2                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0014e98                EnvVarContainer::__loadSystem()
                0x00000000c0014eb2                EnvVarContainer::__loadUser()
                0x00000000c0014eb4                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0014eb4                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0014ed6                EnvVarContainer::~EnvVarContainer()
                0x00000000c0014ed6                EnvVarContainer::~EnvVarContainer()
                0x00000000c0014f06                Krnl::getEnv(Process*, char const*)
                0x00000000c0014f6b                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0014f85                Krnl::setEnvUser(char const*, char const*)
                0x00000000c0014fa4                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0014fb7                Krnl::deleteEnvSystem(char const*)
                0x00000000c0014fb8                Krnl::deleteEnvUser(char const*)
                0x00000000c0014fb9                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0014fba                Krnl::newProcessEnv(Process*)
                0x00000000c0014fdc                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0015028                Krnl::loadSystemEnv()
                0x00000000c0015056                Krnl::loadUserEnv()
                0x00000000c001507c                Krnl::flushEnv()
                0x00000000c001507d                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001509d                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0015131      0x243 krnl/panic.32
                0x00000000c0015131                Krnl::panic(char const*)
 .text          0x00000000c0015374      0x194 krnl/powctrl.32
                0x00000000c0015374                Krnl::powerThread(void*)
                0x00000000c00153f4                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c001540a                Krnl::userIOReceived()
                0x00000000c0015415                Krnl::handlePowerButton()
                0x00000000c001544a                Krnl::handleSleepButton()
                0x00000000c001547f                Krnl::setupPowerManager()
 .text          0x00000000c0015508      0x261 krnl/rand.32
                0x00000000c0015508                Krnl::initRNG()
                0x00000000c00156e0                Krnl::rand()
 *fill*         0x00000000c0015769        0x3 
 .text          0x00000000c001576c      0x5a0 net/ethernet.32
                0x00000000c001576c                Net::switchEndian16(unsigned short)
                0x00000000c0015790                Net::switchEndian32(unsigned int)
                0x00000000c00157c0                Net::crc32Calc(unsigned char*, int)
                0x00000000c0015864                Net::wrapEthernetFrame(Net::UnwrappedEthernetFrame, unsigned char*)
                0x00000000c0015a80                Net::unwrapEthernetFrame(unsigned char*, int)
 .text          0x00000000c0015d0c      0x50e reg/registry.32
                0x00000000c0015d0c                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0015e64                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0015fb9                Reg::getLine(char*, char*, char*)
                0x00000000c0015ff0                Reg::readInt(char*, char*, int*)
                0x00000000c00160db                Reg::readString(char*, char*, char*, int)
                0x00000000c001615c                Reg::readBool(char*, char*, bool*)
                0x00000000c0016181                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00161ad                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00161d9                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001621a       0x36 sys/sc_eject.32
                0x00000000c001621a                Sys::eject(regs*)
 .text          0x00000000c0016250       0x18 sys/sc_exit.32
                0x00000000c0016250                Sys::exit(regs*)
 .text          0x00000000c0016268       0x1f sys/sc_getcwd.32
                0x00000000c0016268                Sys::getCwd(regs*)
 .text          0x00000000c0016287        0xc sys/sc_getpid.32
                0x00000000c0016287                Sys::getPID(regs*)
 .text          0x00000000c0016293       0x1a sys/sc_getramdata.32
                0x00000000c0016293                Sys::getRAMData(regs*)
 .text          0x00000000c00162ad       0x84 sys/sc_getvgaptr.32
                0x00000000c00162ad                Sys::getVGAPtr(regs*)
 .text          0x00000000c0016331       0xa8 sys/sc_loaddll.32
                0x00000000c0016331                Sys::loadDLL(regs*)
 .text          0x00000000c00163d9       0x68 sys/sc_read.32
                0x00000000c00163d9                Sys::read(regs*)
 .text          0x00000000c0016441       0x55 sys/sc_sbrk.32
                0x00000000c0016441                Sys::sbrk(regs*)
 .text          0x00000000c0016496       0x1c sys/sc_setcwd.32
                0x00000000c0016496                Sys::setCwd(regs*)
 .text          0x00000000c00164b2       0x95 sys/sc_settime.32
                0x00000000c00164b2                Sys::setTime(regs*)
 .text          0x00000000c0016547       0x4a sys/sc_timezone.32
                0x00000000c0016547                Sys::timezone(regs*)
 .text          0x00000000c0016591       0x68 sys/sc_write.32
                0x00000000c0016591                Sys::write(regs*)
 .text          0x00000000c00165f9       0x62 sys/sc_wsbe.32
                0x00000000c00165f9                Sys::wsbe(regs*)
 .text          0x00000000c001665b       0x38 sys/sc_yield.32
                0x00000000c001665b                Sys::yield(regs*)
 .text          0x00000000c0016693      0xf8e sys/syscalls.32
                0x00000000c0016693                sysCallSeekDir(regs*)
                0x00000000c0016698                sysCallTellDir(regs*)
                0x00000000c001669d                sysCallVerify(regs*)
                0x00000000c00166a7                sysCallGetArgc(regs*)
                0x00000000c00166b7                sysFormatDisk(regs*)
                0x00000000c0016721                sysSetDiskVolumeLabel(regs*)
                0x00000000c001676b                sysGetDiskVolumeLabel(regs*)
                0x00000000c00167c0                sysShutdown(regs*)
                0x00000000c001681e                sysCallRealpath(regs*)
                0x00000000c0016861                sysCallReadDir(regs*)
                0x00000000c00168e0                sysCallIsATTY(regs*)
                0x00000000c001693a                sysCallSeek(regs*)
                0x00000000c0016991                sysCallTell(regs*)
                0x00000000c00169fd                sysCallSize(regs*)
                0x00000000c0016a6f                sysCallSizeFromFilename(regs*)
                0x00000000c0016b1e                sysCallClose(regs*)
                0x00000000c0016b7e                sysCallOpenDir(regs*)
                0x00000000c0016bf3                sysCallCloseDir(regs*)
                0x00000000c0016c47                sysCallMakeDir(regs*)
                0x00000000c0016cb7                sysCallWait(regs*)
                0x00000000c0016cd1                sysCallNotImpl(regs*)
                0x00000000c0016cec                sysPanic(regs*)
                0x00000000c0016d06                sysCallRmdir(regs*)
                0x00000000c0016d6a                sysCallUnlink(regs*)
                0x00000000c0016dce                sysCallGetArgv(regs*)
                0x00000000c0016e1a                sysCallTTYName(regs*)
                0x00000000c0016e9d                sysCallUSleep(regs*)
                0x00000000c0016ec6                sysCallSpawn(regs*)
                0x00000000c0016f2e                sysCallGetEnv(regs*)
                0x00000000c0016fdb                sysAppSettings(regs*)
                0x00000000c00170ef                sysSetFatAttrib(regs*)
                0x00000000c0017161                sysPipe(regs*)
                0x00000000c00171a6                sysGetUnixTime(regs*)
                0x00000000c00171ba                string_ends_with(char const*, char const*)
                0x00000000c0017202                sysCallOpen(regs*)
                0x00000000c00173ea                Sys::loadSyscalls()
                0x00000000c00175df                Sys::systemCall(regs*, void*)
 .text          0x00000000c0017621     0x1203 thr/elf.32
                0x00000000c0017621                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00178cb                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0017ae1                Thr::runtimeReferenceHelper()
                0x00000000c0017af4                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0017b43                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0017e01                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0018537                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0018569                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00185a0                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00185ba                Thr::loadDLL(char const*, bool)
                0x00000000c00187eb                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0018824     0x12a9 thr/prcssthr.32
                0x00000000c0018824                userModeEntryPoint(void*)
                0x00000000c001884c                changeTSS
                0x00000000c001887c                switchToThread(ThreadControlBlock*)
                0x00000000c0018930                Process::addArgs(char**)
                0x00000000c0018990                Process::Process(char const*, Process*, char**)
                0x00000000c0018990                Process::Process(char const*, Process*, char**)
                0x00000000c0018b7c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0018b7c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0018d34                taskStartupFunction
                0x00000000c0018d40                Semaphore::Semaphore(int)
                0x00000000c0018d40                Semaphore::Semaphore(int)
                0x00000000c0018d70                Mutex::Mutex()
                0x00000000c0018d70                Mutex::Mutex()
                0x00000000c0018d84                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0018e7c                Process::createUserThread()
                0x00000000c0018e98                setupMultitasking(void (*)())
                0x00000000c0018fa0                schedule()
                0x00000000c001902c                Semaphore::tryAcquire()
                0x00000000c00190f8                Semaphore::assertLocked(char const*)
                0x00000000c0019170                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0019198                blockTask(TaskState)
                0x00000000c00191c8                waitTask(int, int*, int)
                0x00000000c001920c                milliTenthSleepUntil(unsigned int)
                0x00000000c0019298                milliTenthSleep(unsigned int)
                0x00000000c00192a8                sleep(unsigned int)
                0x00000000c00192c4                Semaphore::acquire()
                0x00000000c0019380                taskReturned
                0x00000000c00193bc                Thr::processFromPID(int)
                0x00000000c001945c                unblockTask(ThreadControlBlock*)
                0x00000000c0019500                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00197c8                cleanerTaskFunction(void*)
                0x00000000c00198b8                terminateTask(int)
                0x00000000c0019984                Thr::terminateFromIRQ(int)
                0x00000000c0019990                Semaphore::release()
 .text          0x00000000c0019acd      0xb93 vm86/vm8086.32
                0x00000000c0019acd                Vm::inbv(unsigned short)
                0x00000000c0019ae0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0019b16                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0019b26                Vm::getSegment(unsigned int)
                0x00000000c0019b2e                Vm::getOffset(unsigned int)
                0x00000000c0019b33                Vm::mainloop2()
                0x00000000c0019b6d                Vm::mainVm8086Loop(void*)
                0x00000000c0019b7d                Vm::mainloop3(unsigned long)
                0x00000000c0019ba3                Vm::initialise8086()
                0x00000000c0019be6                Vm::finish8086()
                0x00000000c0019c47                Vm::getOutput8086(unsigned char*)
                0x00000000c0019c6c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0019d25                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0019e8d                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0019f17                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0019f28                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0019f3a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0019f4b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0019f60                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0019f76                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0019f8b                Vm::faultHandler(regs*)
 .text          0x00000000c001a660      0xfcd vm86/x87em.32
                0x00000000c001a660                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c001a6be                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c001a6c7                Vm::fpu32ToInternal(unsigned int)
                0x00000000c001a70c                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c001a715                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c001a774                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c001a7b0                Vm::fpuLongToFloat(long long)
                0x00000000c001a80f                Vm::fpuGet0()
                0x00000000c001a814                Vm::fpuGet1()
                0x00000000c001a81c                Vm::fpuGetPi()
                0x00000000c001a824                Vm::fpuGetLog2E()
                0x00000000c001a83c                Vm::fpuGetLogE2()
                0x00000000c001a854                Vm::fpuGetLog210()
                0x00000000c001a86c                Vm::fpuGetLog102()
                0x00000000c001a884                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c001a898                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c001a8ae                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c001a904                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c001a915                Vm::fpuAbs(unsigned long long)
                0x00000000c001a91e                Vm::fpuChs(unsigned long long)
                0x00000000c001a92e                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c001a93d                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c001a95c                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c001a978                Vm::fpuSquare(unsigned long long)
                0x00000000c001a98e                Vm::fpuGetReg(int)
                0x00000000c001a9d1                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c001aa1d                Vm::fpuPush(unsigned long long)
                0x00000000c001aa7b                Vm::fpuPop()
                0x00000000c001aace                Vm::x87Handler(regs*)
 *fill*         0x00000000c001b62d        0x3 
 .text          0x00000000c001b630     0x13b7 fs/fat/vfslink.32
                0x00000000c001b630                FAT::getName()
                0x00000000c001b638                FAT::tell(void*, unsigned long long*)
                0x00000000c001b674                FAT::stat(void*, unsigned long long*)
                0x00000000c001b6b0                FAT::~FAT()
                0x00000000c001b6b0                FAT::~FAT()
                0x00000000c001b6d4                FAT::~FAT()
                0x00000000c001b6fc                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b7a0                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b864                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001ba38                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001bc50                FAT::allocateSwapfile(char const*, int)
                0x00000000c001be0c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bf78                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001bfd8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c038                FAT::close(void*)
                0x00000000c001c08c                FAT::closeDir(void*)
                0x00000000c001c0e0                FAT::seek(void*, unsigned long long)
                0x00000000c001c13c                fatWrapperReadDisk
                0x00000000c001c184                fatWrapperWriteDisk
                0x00000000c001c1cc                fatWrapperIoctl
                0x00000000c001c2dc                FAT::FAT()
                0x00000000c001c2dc                FAT::FAT()
                0x00000000c001c330                FAT::fixFilepath(char*)
                0x00000000c001c36c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c4a0                FAT::openDir(char const*, void**)
                0x00000000c001c550                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c644                FAT::unlink(char const*)
                0x00000000c001c6c4                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c82c                FAT::rename(char const*, char const*)
                0x00000000c001c8f8                FAT::mkdir(char const*)
                0x00000000c001c978                FAT::exists(char const*)
 *fill*         0x00000000c001c9e7        0x1 
 .text          0x00000000c001c9e8      0xba7 fs/iso9660/vfslink.32
                0x00000000c001c9e8                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001c9ee                ISO9660::seek(void*, unsigned long long)
                0x00000000c001ca1e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001ca42                ISO9660::getName()
                0x00000000c001ca48                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001ca6c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ca72                ISO9660::unlink(char const*)
                0x00000000c001ca78                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001ca7e                ISO9660::rename(char const*, char const*)
                0x00000000c001ca84                ISO9660::mkdir(char const*)
                0x00000000c001ca8a                ISO9660::close(void*)
                0x00000000c001caac                ISO9660::closeDir(void*)
                0x00000000c001cace                ISO9660::~ISO9660()
                0x00000000c001cace                ISO9660::~ISO9660()
                0x00000000c001caf2                ISO9660::~ISO9660()
                0x00000000c001cb19                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001cb5b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001cbd6                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001cc36                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001ce3a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d0b4                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001d108                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001d2de                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001d36c                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001d41a                ISO9660::exists(char const*)
                0x00000000c001d43e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d4d2                ISO9660::openDir(char const*, void**)
                0x00000000c001d56c                ISO9660::ISO9660()
                0x00000000c001d56c                ISO9660::ISO9660()
 *fill*         0x00000000c001d58f        0x1 
 .text          0x00000000c001d590      0x298 hal/sound/sndcard.32
                0x00000000c001d590                SoundCard::beginPlayback()
                0x00000000c001d59e                SoundCard::stopPlayback()
                0x00000000c001d5ac                SoundCard::SoundCard(char const*)
                0x00000000c001d5ac                SoundCard::SoundCard(char const*)
                0x00000000c001d64a                SoundCard::~SoundCard()
                0x00000000c001d64a                SoundCard::~SoundCard()
                0x00000000c001d66e                SoundCard::~SoundCard()
                0x00000000c001d698                SoundCard::configureRates(int, int, int)
                0x00000000c001d6c8                SoundCard::getSamples16(int, short*)
                0x00000000c001d732                SoundCard::getSamples32(int, int*)
                0x00000000c001d7b8                SoundCard::addChannel(SoundPort*)
                0x00000000c001d814                SoundCard::removeChannel(int)
 .text          0x00000000c001d828      0x3fb hal/sound/sndport.32
                0x00000000c001d828                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d828                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d8b4                SoundPort::~SoundPort()
                0x00000000c001d8b4                SoundPort::~SoundPort()
                0x00000000c001d8e8                SoundPort::unpause()
                0x00000000c001d8f4                SoundPort::pause()
                0x00000000c001d900                SoundPort::getBufferUsed()
                0x00000000c001d908                SoundPort::getBufferSize()
                0x00000000c001d910                SoundPort::buffer16(short*, int)
                0x00000000c001d9c4                SoundPort::buffer32(int*, int)
                0x00000000c001da70                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001db6c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001dc23        0x0 hw/bus/isa.32
 *fill*         0x00000000c001dc23        0x1 
 .text          0x00000000c001dc24     0x1187 hw/bus/pci.32
                0x00000000c001dc24                PCI::open(int, int, void*)
                0x00000000c001dc42                PCI::close(int, int, void*)
                0x00000000c001dc46                PCI::PCI()
                0x00000000c001dc46                PCI::PCI()
                0x00000000c001dcdc                PCI::readBAR8(unsigned int, int)
                0x00000000c001dcf8                PCI::readBAR16(unsigned int, int)
                0x00000000c001dd16                PCI::readBAR32(unsigned int, int)
                0x00000000c001dd32                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001dd52                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001dd74                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001dd94                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001de02                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001deaa                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001dece                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001def6                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001df40                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001df68                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001df8c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001dfb0                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001dfd8                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e03c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001e124                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e516                PCI::checkBus(unsigned char)
                0x00000000c001e53a                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001e97a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ecec                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001ed58                PCI::detect()
 *fill*         0x00000000c001edab        0x1 
 .text          0x00000000c001edac      0xb4a hw/diskctrl/ide.32
                0x00000000c001edac                IDE::close(int, int, void*)
                0x00000000c001edb0                IDE::IDE()
                0x00000000c001edb0                IDE::IDE()
                0x00000000c001ede4                IDE::prepareInterrupt(unsigned char)
                0x00000000c001edf6                selectDrive(unsigned char, unsigned char)
                0x00000000c001edf8                IDE::getBase(unsigned char)
                0x00000000c001ee0a                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001eeca                IDE::read(unsigned char, unsigned char)
                0x00000000c001ef78                IDE::waitInterrupt(unsigned char)
                0x00000000c001efda                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001eff6                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001f012                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001f058                IDE::open(int, int, void*)
                0x00000000c001f466                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001f532                IDE::detect()
                0x00000000c001f7f2                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001f8a2                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f8f6      0x458 hw/diskctrl/satabus.32
                0x00000000c001f8f6                SATABus::close(int, int, void*)
                0x00000000c001f8fa                SATABus::detect()
                0x00000000c001f8fc                SATABus::SATABus()
                0x00000000c001f8fc                SATABus::SATABus()
                0x00000000c001f982                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f9b4                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f9fc                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fa1c                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fa46                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001fb4c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001fd2e                SATABus::open(int, int, void*)
 .text          0x00000000c001fd4e      0x684 hw/diskphys/ata.32
                0x00000000c001fd4e                ATA::close(int, int, void*)
                0x00000000c001fd72                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001fd74                ATA::ATA()
                0x00000000c001fd74                ATA::ATA()
                0x00000000c001fda2                ATA::flush(bool)
                0x00000000c001fdec                ATA::readyForCommand()
                0x00000000c001fe38                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c002022e                ATA::read(unsigned long long, int, void*)
                0x00000000c002027a                ATA::write(unsigned long long, int, void*)
                0x00000000c00202dc                ATA::detectCHS()
                0x00000000c0020306                ATA::open(int, int, void*)
 .text          0x00000000c00203d2      0x645 hw/diskphys/atapi.32
                0x00000000c00203d2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c00203d8                ATAPI::close(int, int, void*)
                0x00000000c00203fc                ATAPI::ATAPI()
                0x00000000c00203fc                ATAPI::ATAPI()
                0x00000000c002042a                ATAPI::readyForCommand()
                0x00000000c002047c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c002073c                ATAPI::diskRemoved()
                0x00000000c0020798                ATAPI::eject()
                0x00000000c00207e0                ATAPI::diskInserted()
                0x00000000c00207fc                ATAPI::detectMedia()
                0x00000000c00208b8                ATAPI::open(int, int, void*)
                0x00000000c0020998                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0020a17        0x1 
 .text          0x00000000c0020a18      0xa68 hw/diskphys/sata.32
                0x00000000c0020a18                SATA::close(int, int, void*)
                0x00000000c0020a3c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0020a3e                SATA::open(int, int, void*)
                0x00000000c0020c34                SATA::SATA()
                0x00000000c0020c34                SATA::SATA()
                0x00000000c0020c62                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c002125a                SATA::read(unsigned long long, int, void*)
                0x00000000c002135a                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0021480      0x6d4 hw/diskphys/satapi.32
                0x00000000c0021480                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0021486                SATAPI::close(int, int, void*)
                0x00000000c00214aa                SATAPI::SATAPI()
                0x00000000c00214aa                SATAPI::SATAPI()
                0x00000000c00214d8                SATAPI::diskRemoved()
                0x00000000c0021534                SATAPI::diskInserted()
                0x00000000c0021550                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c00217e4                SATAPI::eject()
                0x00000000c002183c                SATAPI::detectMedia()
                0x00000000c002197c                SATAPI::open(int, int, void*)
                0x00000000c0021a7c                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0021b54       0x94 hw/fpu/avx.32
                0x00000000c0021b54                AVX::open(int, int, void*)
                0x00000000c0021b68                AVX::close(int, int, void*)
                0x00000000c0021b7c                AVX::available()
                0x00000000c0021b90                AVX::save(void*)
                0x00000000c0021ba8                AVX::load(void*)
                0x00000000c0021bc0                AVX::AVX()
                0x00000000c0021bc0                AVX::AVX()
 .text          0x00000000c0021be8       0x94 hw/fpu/mmx.32
                0x00000000c0021be8                MMX::available()
                0x00000000c0021bfc                MMX::open(int, int, void*)
                0x00000000c0021c10                MMX::close(int, int, void*)
                0x00000000c0021c24                MMX::save(void*)
                0x00000000c0021c3c                MMX::load(void*)
                0x00000000c0021c54                MMX::MMX()
                0x00000000c0021c54                MMX::MMX()
 .text          0x00000000c0021c7c       0x9c hw/fpu/sse.32
                0x00000000c0021c7c                SSE::open(int, int, void*)
                0x00000000c0021c90                SSE::close(int, int, void*)
                0x00000000c0021ca4                SSE::available()
                0x00000000c0021cc0                SSE::save(void*)
                0x00000000c0021cd8                SSE::load(void*)
                0x00000000c0021cf0                SSE::SSE()
                0x00000000c0021cf0                SSE::SSE()
 .text          0x00000000c0021d18       0x8e hw/fpu/x87.32
                0x00000000c0021d18                x87::open(int, int, void*)
                0x00000000c0021d2a                x87::close(int, int, void*)
                0x00000000c0021d3c                x87::available()
                0x00000000c0021d4e                x87::save(void*)
                0x00000000c0021d66                x87::load(void*)
                0x00000000c0021d7e                x87::x87()
                0x00000000c0021d7e                x87::x87()
 .text          0x00000000c0021da6      0x71e hw/intctrl/apic.32
                0x00000000c0021da6                APIC::disable()
                0x00000000c0021da8                APIC::close(int, int, void*)
                0x00000000c0021dca                IOAPIC::close(int, int, void*)
                0x00000000c0021dd0                APIC::io_wait()
                0x00000000c0021dd6                APIC::getBase()
                0x00000000c0021e18                APIC::eoi(unsigned char)
                0x00000000c0021e46                APIC::open(int, int, void*)
                0x00000000c0021f94                IOAPIC::IOAPIC()
                0x00000000c0021f94                IOAPIC::IOAPIC()
                0x00000000c0021fbc                APIC::APIC()
                0x00000000c0021fbc                APIC::APIC()
                0x00000000c0022098                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c00220ca                IOAPIC::read(int)
                0x00000000c00220f2                IOAPIC::open(int, int, void*)
                0x00000000c00221e8                IOAPIC::write(int, int)
                0x00000000c0022214                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
                0x00000000c002230e                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 .text          0x00000000c00224c4      0x3d3 hw/intctrl/pic.32
                0x00000000c00224c4                PIC::disable()
                0x00000000c00224f2                PIC::close(int, int, void*)
                0x00000000c0022514                PIC::PIC()
                0x00000000c0022514                PIC::PIC()
                0x00000000c00225ea                PIC::ioWait()
                0x00000000c00225f0                PIC::getIRQReg(int)
                0x00000000c002265a                PIC::eoi(unsigned char)
                0x00000000c00226ec                PIC::remap()
                0x00000000c0022858                PIC::open(int, int, void*)
 *fill*         0x00000000c0022897        0x1 
 .text          0x00000000c0022898      0x240 hw/timer/apictimer.32
                0x00000000c0022898                APICTimer::close(int, int, void*)
                0x00000000c00228a0                apicTimerHandler(regs*, void*)
                0x00000000c00228c8                APICTimer::write(int)
                0x00000000c00229b0                APICTimer::open(int, int, void*)
                0x00000000c0022ab0                APICTimer::APICTimer()
                0x00000000c0022ab0                APICTimer::APICTimer()
 .text          0x00000000c0022ad8      0x1a3 hw/timer/pit.32
                0x00000000c0022ad8                PIT::write(int)
                0x00000000c0022b58                pitHandler(regs*, void*)
                0x00000000c0022b7c                PIT::open(int, int, void*)
                0x00000000c0022bcc                PIT::close(int, int, void*)
                0x00000000c0022bfc                PIT::PIT()
                0x00000000c0022bfc                PIT::PIT()
 *fill*         0x00000000c0022c7b        0x5 
 .text          0x00000000c0022c80       0x83 hw/fpu/x86/avx.32
                0x00000000c0022c80                avxDetect
                0x00000000c0022caa                avxSave
                0x00000000c0022cbb                avxLoad
                0x00000000c0022ccc                avxInit
                0x00000000c0022cee                avxClose
                0x00000000c0022cef                wouldSheSayYes
 *fill*         0x00000000c0022d03        0xd 
 .text          0x00000000c0022d10       0x39 hw/fpu/x86/sse.32
                0x00000000c0022d10                absolutelyNoChanceInHell
                0x00000000c0022d10                sseDetect
                0x00000000c0022d28                sseSave
                0x00000000c0022d30                sseLoad
                0x00000000c0022d38                sseInit
                0x00000000c0022d48                sseClose
 *fill*         0x00000000c0022d49        0x7 
 .text          0x00000000c0022d50       0x49 hw/fpu/x86/x87.32
                0x00000000c0022d56                x87Detect
                0x00000000c0022d71                x87Save
                0x00000000c0022d78                x87Load
                0x00000000c0022d7f                x87Init
                0x00000000c0022d98                x87Close
 *fill*         0x00000000c0022d99        0x3 
 .text          0x00000000c0022d9c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0022dc1        0x0 crtn.32
 *fill*         0x00000000c0022dc1        0x3 
 .text          0x00000000c0022dc4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0022dc4                __divdi3
 *fill*         0x00000000c0022f0f        0x1 
 .text          0x00000000c0022f10      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0022f10                __moddi3
 *fill*         0x00000000c002308e        0x2 
 .text          0x00000000c0023090       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0023090                __udivdi3
 *fill*         0x00000000c002318f        0x1 
 .text          0x00000000c0023190      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0023190                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c00232b0        0x0
 .iplt          0x00000000c00232b0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c00232aa        0xf
 .init          0x00000000c00232aa        0x3 crti.32
                0x00000000c00232aa                _init
 .init          0x00000000c00232ad        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c00232b2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c00232b7        0x2 crtn.32

.fini           0x00000000c00232b9        0xa
 .fini          0x00000000c00232b9        0x3 crti.32
                0x00000000c00232b9                _fini
 .fini          0x00000000c00232bc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c00232c1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c00232c4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c00232c4       0x23 core/computer.32
                0x00000000c00232c4                Computer::~Computer()
                0x00000000c00232c4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c00232e8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c00232e8       0x2a core/computer.32
                0x00000000c00232e8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0023312       0x21
 .text._Z10idleCommonv
                0x00000000c0023312       0x21 core/idle.32
                0x00000000c0023312                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0023334        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0023334        0x2 core/unixfile.32
                0x00000000c0023334                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0023334                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0023336       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0023336       0x42 core/unixfile.32
                0x00000000c0023336                LinkedList<UnixFile>::LinkedList()
                0x00000000c0023336                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0023378       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0023378       0xd3 core/unixfile.32
                0x00000000c0023378                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002344c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c002344c        0x7 core/unixfile.32
                0x00000000c002344c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0023454       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0023454       0xa1 core/unixfile.32
                0x00000000c0023454                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00234f6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00234f6        0x8 core/unixfile.32
                0x00000000c00234f6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00234fe       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c00234fe       0x1a hal/device.32
                0x00000000c00234fe                DriverlessDevice::~DriverlessDevice()
                0x00000000c00234fe                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0023518       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0023518       0x2a hal/device.32
                0x00000000c0023518                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0023542       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0023542       0xdc hal/device.32
                0x00000000c0023542                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c002361e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c002361e       0x42 hal/device.32
                0x00000000c002361e                LinkedList<Device>::LinkedList()
                0x00000000c002361e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0023660       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0023660       0x1c hal/timer.32
                0x00000000c0023660                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c002367c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c002367c        0x7 hal/timer.32
                0x00000000c002367c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0023684       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0023684       0xb8 hal/timer.32
                0x00000000c0023684                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002373c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002373c       0xda hal/timer.32
                0x00000000c002373c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0023818       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0023818       0x23 hw/acpi.32
                0x00000000c0023818                ACPI::~ACPI()
                0x00000000c0023818                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002383c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002383c       0x2a hw/acpi.32
                0x00000000c002383c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0023868        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0023868        0x2 hw/acpi.32
                0x00000000c0023868                LinkedList<Device>::~LinkedList()
                0x00000000c0023868                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002386c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002386c       0x1c hw/acpi.32
                0x00000000c002386c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0023888        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0023888        0x7 hw/acpi.32
                0x00000000c0023888                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0023890       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0023890       0xb8 hw/acpi.32
                0x00000000c0023890                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c0023948       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0023948       0x23 hw/cpu.32
                0x00000000c0023948                CPU::~CPU()
                0x00000000c0023948                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c002396c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c002396c       0x2a hw/cpu.32
                0x00000000c002396c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0023998        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0023998        0x2 thr/prcssthr.32
                0x00000000c0023998                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0023998                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c002399c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c002399c       0x49 thr/prcssthr.32
                0x00000000c002399c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c002399c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00239e8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00239e8       0x42 thr/prcssthr.32
                0x00000000c00239e8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00239e8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0023a2c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0023a2c        0x8 thr/prcssthr.32
                0x00000000c0023a2c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0023a34        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0023a34        0xd vm86/x87em.32
                0x00000000c0023a34                Vm::_FPUState::_FPUState()
                0x00000000c0023a34                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c0023a42       0x23
 .text._ZN3PCID2Ev
                0x00000000c0023a42       0x23 hw/bus/pci.32
                0x00000000c0023a42                PCI::~PCI()
                0x00000000c0023a42                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0023a66       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0023a66       0x2a hw/bus/pci.32
                0x00000000c0023a66                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0023a90       0x23
 .text._ZN3IDED2Ev
                0x00000000c0023a90       0x23 hw/diskctrl/ide.32
                0x00000000c0023a90                IDE::~IDE()
                0x00000000c0023a90                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0023ab4       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0023ab4       0x2a hw/diskctrl/ide.32
                0x00000000c0023ab4                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0023ade       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0023ade       0x23 hw/diskctrl/satabus.32
                0x00000000c0023ade                SATABus::~SATABus()
                0x00000000c0023ade                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0023b02       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0023b02       0x2a hw/diskctrl/satabus.32
                0x00000000c0023b02                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0023b2c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0023b2c       0x23 hw/diskphys/ata.32
                0x00000000c0023b2c                ATA::~ATA()
                0x00000000c0023b2c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0023b50       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0023b50       0x2a hw/diskphys/ata.32
                0x00000000c0023b50                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0023b7a       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0023b7a       0x23 hw/diskphys/atapi.32
                0x00000000c0023b7a                ATAPI::~ATAPI()
                0x00000000c0023b7a                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0023b9e       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0023b9e       0x2a hw/diskphys/atapi.32
                0x00000000c0023b9e                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0023bc8       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0023bc8       0x23 hw/diskphys/sata.32
                0x00000000c0023bc8                SATA::~SATA()
                0x00000000c0023bc8                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0023bec       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0023bec       0x2a hw/diskphys/sata.32
                0x00000000c0023bec                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0023c16       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0023c16       0x23 hw/diskphys/satapi.32
                0x00000000c0023c16                SATAPI::~SATAPI()
                0x00000000c0023c16                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0023c3a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0023c3a       0x2a hw/diskphys/satapi.32
                0x00000000c0023c3a                SATAPI::~SATAPI()

.text._ZN3AVXD2Ev
                0x00000000c0023c64       0x23
 .text._ZN3AVXD2Ev
                0x00000000c0023c64       0x23 hw/fpu/avx.32
                0x00000000c0023c64                AVX::~AVX()
                0x00000000c0023c64                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c0023c88       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c0023c88       0x2a hw/fpu/avx.32
                0x00000000c0023c88                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c0023cb4       0x23
 .text._ZN3MMXD2Ev
                0x00000000c0023cb4       0x23 hw/fpu/mmx.32
                0x00000000c0023cb4                MMX::~MMX()
                0x00000000c0023cb4                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c0023cd8       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c0023cd8       0x2a hw/fpu/mmx.32
                0x00000000c0023cd8                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c0023d04       0x23
 .text._ZN3SSED2Ev
                0x00000000c0023d04       0x23 hw/fpu/sse.32
                0x00000000c0023d04                SSE::~SSE()
                0x00000000c0023d04                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c0023d28       0x2a
 .text._ZN3SSED0Ev
                0x00000000c0023d28       0x2a hw/fpu/sse.32
                0x00000000c0023d28                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c0023d52       0x23
 .text._ZN3x87D2Ev
                0x00000000c0023d52       0x23 hw/fpu/x87.32
                0x00000000c0023d52                x87::~x87()
                0x00000000c0023d52                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c0023d76       0x2a
 .text._ZN3x87D0Ev
                0x00000000c0023d76       0x2a hw/fpu/x87.32
                0x00000000c0023d76                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c0023da0       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0023da0       0x23 hw/intctrl/apic.32
                0x00000000c0023da0                IOAPIC::~IOAPIC()
                0x00000000c0023da0                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0023dc4       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0023dc4       0x2a hw/intctrl/apic.32
                0x00000000c0023dc4                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c0023dee       0x23
 .text._ZN4APICD2Ev
                0x00000000c0023dee       0x23 hw/intctrl/apic.32
                0x00000000c0023dee                APIC::~APIC()
                0x00000000c0023dee                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c0023e12       0x2a
 .text._ZN4APICD0Ev
                0x00000000c0023e12       0x2a hw/intctrl/apic.32
                0x00000000c0023e12                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c0023e3c       0x23
 .text._ZN3PICD2Ev
                0x00000000c0023e3c       0x23 hw/intctrl/pic.32
                0x00000000c0023e3c                PIC::~PIC()
                0x00000000c0023e3c                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c0023e60       0x2a
 .text._ZN3PICD0Ev
                0x00000000c0023e60       0x2a hw/intctrl/pic.32
                0x00000000c0023e60                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0023e8c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0023e8c       0x23 hw/timer/apictimer.32
                0x00000000c0023e8c                APICTimer::~APICTimer()
                0x00000000c0023e8c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0023eb0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0023eb0       0x2a hw/timer/apictimer.32
                0x00000000c0023eb0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0023edc       0x23
 .text._ZN3PITD2Ev
                0x00000000c0023edc       0x23 hw/timer/pit.32
                0x00000000c0023edc                PIT::~PIT()
                0x00000000c0023edc                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0023f00       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0023f00       0x2a hw/timer/pit.32
                0x00000000c0023f00                PIT::~PIT()

.rodata         0x00000000c0023f2a     0x3fce
                0x00000000c0023f2a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0023f2a        0x2 
 .ctors         0x00000000c0023f2c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0023f30        0x4 core/unixfile.32
 .ctors         0x00000000c0023f34        0x4 thr/prcssthr.32
 .ctors         0x00000000c0023f38        0x4 vm86/x87em.32
 .ctors         0x00000000c0023f3c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0023f40                end_ctors = .
                0x00000000c0023f40                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0023f40        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0023f44        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0023f44                __DTOR_END__
                0x00000000c0023f48                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0023f48       0x18 
 .rodata        0x00000000c0023f60      0x101 acpica/utclib.32
                0x00000000c0023f60                AcpiGbl_Ctypes
 *fill*         0x00000000c0024061        0x3 
 .rodata        0x00000000c0024064       0x18 core/malloc.32
 *fill*         0x00000000c002407c        0x4 
 .rodata        0x00000000c0024080      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c00241a0       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c00241f6        0xa 
 .rodata        0x00000000c0024200      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0024600       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0024649      0x321 core/computer.32
                                        0x323 (size before relaxing)
 *fill*         0x00000000c002496a        0x2 
 .rodata.str1.4
                0x00000000c002496c       0xcc core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0024a38       0x2c core/computer.32
                0x00000000c0024a38                vtable for Computer
 .rodata.str1.1
                0x00000000c0024a64       0x2a core/kheap.32
 *fill*         0x00000000c0024a8e        0x2 
 .rodata.str1.4
                0x00000000c0024a90       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0024ac0       0x99 core/main.32
 *fill*         0x00000000c0024b59        0x3 
 .rodata.str1.4
                0x00000000c0024b5c       0x1f core/main.32
 .rodata.str1.1
                0x00000000c0024b7b       0xea core/physmgr.32
                                         0xee (size before relaxing)
 *fill*         0x00000000c0024c65        0x3 
 .rodata.str1.4
                0x00000000c0024c68       0xc9 core/physmgr.32
 .rodata.str1.1
                0x00000000c0024d31       0x39 core/pipe.32
 *fill*         0x00000000c0024d6a        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0024d6c       0x1c core/pipe.32
                0x00000000c0024d6c                vtable for Pipe
 .rodata.str1.1
                0x00000000c0024d88       0x69 core/terminal.32
 *fill*         0x00000000c0024df1        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0024df4       0x1c core/terminal.32
                0x00000000c0024df4                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0024e10       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0024e32       0x15 core/unixfile.32
 *fill*         0x00000000c0024e47        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0024e48       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0024e93        0x8 core/unixfile.32
 *fill*         0x00000000c0024e9b        0x1 
 .rodata.str1.4
                0x00000000c0024e9c       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0024ebc       0x1c core/unixfile.32
                0x00000000c0024ebc                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024ed8       0x1c core/unixfile.32
                0x00000000c0024ed8                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024ef4      0x1b8 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00250ac      0x194 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0025240       0x83 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c00252c3       0x11 dbg/kconsole.32
 *fill*         0x00000000c00252c3        0x1 
 .rodata        0x00000000c00252c4      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0025414       0x25 fs/vfs.32
                                         0x33 (size before relaxing)
 *fill*         0x00000000c0025439        0x3 
 .rodata.str1.4
                0x00000000c002543c       0x54 fs/vfs.32
 .rodata._ZTV10Filesystem
                0x00000000c0025490       0x68 fs/vfs.32
                0x00000000c0025490                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00254f8       0x1c fs/vfs.32
                0x00000000c00254f8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0025514       0x1c fs/vfs.32
                0x00000000c0025514                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0025530       0x2c hal/bus.32
                0x00000000c0025530                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c002555c       0x30 hal/buzzer.32
                0x00000000c002555c                vtable for Buzzer
 .rodata.str1.1
                0x00000000c002558c       0x1e hal/clock.32
 *fill*         0x00000000c00255aa        0x2 
 .rodata._ZTV5Clock
                0x00000000c00255ac       0x3c hal/clock.32
                0x00000000c00255ac                vtable for Clock
 *fill*         0x00000000c00255e8       0x18 
 .rodata        0x00000000c0025600       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0025630       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0025688       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0025688       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0025688       0x2c hal/device.32
                0x00000000c0025688                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00256b4       0x2c hal/device.32
                0x00000000c00256b4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00256e0       0x2c hal/diskctrl.32
                0x00000000c00256e0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002570c       0x38 hal/diskphys.32
                0x00000000c002570c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0025744       0x26 hal/fpu.32
 *fill*         0x00000000c002576a        0x2 
 .rodata._ZTV3FPU
                0x00000000c002576c       0x38 hal/fpu.32
                0x00000000c002576c                vtable for FPU
 .rodata        0x00000000c00257a4      0x370 hal/intctrl.32
 .rodata._ZTV19InterruptController
                0x00000000c0025b14       0x48 hal/intctrl.32
                0x00000000c0025b14                vtable for InterruptController
 .rodata        0x00000000c0025b5c       0x53 hal/keybrd.32
 *fill*         0x00000000c0025baf        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0025bb0       0x34 hal/keybrd.32
                0x00000000c0025bb0                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0025be4       0x9a hal/logidisk.32
 *fill*         0x00000000c0025c7e        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0025c80       0x2c hal/logidisk.32
                0x00000000c0025c80                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0025cac       0x2c hal/mouse.32
                0x00000000c0025cac                vtable for Mouse
 .rodata.str1.1
                0x00000000c0025cd8        0xb hal/partition.32
 *fill*         0x00000000c0025ce3        0x1 
 .rodata._ZTV6Serial
                0x00000000c0025ce4       0x44 hal/serial.32
                0x00000000c0025ce4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0025d28       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0025d28        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0025d28       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0025d28       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0025d28       0x30 hal/timer.32
                0x00000000c0025d28                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0025d58       0x10 hal/vcache.32
                0x00000000c0025d58                vtable for VCache
 .rodata.str1.1
                0x00000000c0025d68       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c0025dd0       0x48 hal/video.32
                0x00000000c0025dd0                vtable for Video
 .rodata.str1.4
                0x00000000c0025e18      0x123 hw/acpi.32
 .rodata.str1.1
                0x00000000c0025f3b      0x2a0 hw/acpi.32
                                        0x2ba (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00261db       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00261db        0x8 hw/acpi.32
 *fill*         0x00000000c00261db        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00261dc       0x2c hw/acpi.32
                0x00000000c00261dc                vtable for ACPI
 .rodata.str1.1
                0x00000000c0026208      0x563 hw/cpu.32
                                        0x570 (size before relaxing)
 *fill*         0x00000000c002676b        0x1 
 .rodata._ZTV3CPU
                0x00000000c002676c       0x2c hw/cpu.32
                0x00000000c002676c                vtable for CPU
 .rodata.str1.1
                0x00000000c0026798       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c00267a9       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00267e5       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 *fill*         0x00000000c0026885        0x3 
 .rodata.str1.4
                0x00000000c0026888      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c00269c6       0x2f krnl/powctrl.32
 .rodata.str1.1
                0x00000000c00269f5       0x31 krnl/rand.32
 *fill*         0x00000000c0026a26        0x2 
 .rodata.str1.4
                0x00000000c0026a28       0x4c net/ethernet.32
 .rodata.str1.1
                0x00000000c0026a74       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0026ab9       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c0026b0d       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c0026b39       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0026b81      0x247 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c0026dc8       0x57 thr/prcssthr.32
 *fill*         0x00000000c0026e1f        0x1 
 .rodata.str1.4
                0x00000000c0026e20      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0026f2c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0026f2c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0026f2c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0026f2c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0026f2c       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0026fcc       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0026ffc       0x58 vm86/x87em.32
 .rodata        0x00000000c0027054       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c0027090       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00270d1        0x3 
 .rodata._ZTV3FAT
                0x00000000c00270d4       0x68 fs/fat/vfslink.32
                0x00000000c00270d4                vtable for FAT
 .rodata.str1.1
                0x00000000c002713c       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c0027157        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c0027158       0x68 fs/iso9660/vfslink.32
                0x00000000c0027158                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00271c0       0xc3 hal/sound/sndcard.32
                                         0xdb (size before relaxing)
 *fill*         0x00000000c0027283        0x1 
 .rodata._ZTV9SoundCard
                0x00000000c0027284       0x34 hal/sound/sndcard.32
                0x00000000c0027284                vtable for SoundCard
 .rodata.str1.1
                0x00000000c00272b8       0x6e hal/sound/sndport.32
 *fill*         0x00000000c0027326        0x2 
 .rodata.str1.4
                0x00000000c0027328       0x93 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00273bb      0x1cd hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0027588       0x2c hw/bus/pci.32
                0x00000000c0027588                vtable for PCI
 .rodata.str1.1
                0x00000000c00275b4       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c002763b        0x1 
 .rodata._ZTV3IDE
                0x00000000c002763c       0x2c hw/diskctrl/ide.32
                0x00000000c002763c                vtable for IDE
 .rodata.str1.4
                0x00000000c0027668       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata.str1.1
                0x00000000c002768c       0x69 hw/diskctrl/satabus.32
 *fill*         0x00000000c00276f5        0x3 
 .rodata._ZTV7SATABus
                0x00000000c00276f8       0x2c hw/diskctrl/satabus.32
                0x00000000c00276f8                vtable for SATABus
 .rodata.str1.1
                0x00000000c0027724       0x4b hw/diskphys/ata.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c002776f        0x1 
 .rodata._ZTV3ATA
                0x00000000c0027770       0x38 hw/diskphys/ata.32
                0x00000000c0027770                vtable for ATA
 .rodata.str1.1
                0x00000000c00277a8       0x2a hw/diskphys/atapi.32
                                         0x6f (size before relaxing)
 *fill*         0x00000000c00277d2        0x2 
 .rodata._ZTV5ATAPI
                0x00000000c00277d4       0x38 hw/diskphys/atapi.32
                0x00000000c00277d4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002780c      0x202 hw/diskphys/sata.32
 *fill*         0x00000000c0027a0e        0x2 
 .rodata._ZTV4SATA
                0x00000000c0027a10       0x38 hw/diskphys/sata.32
                0x00000000c0027a10                vtable for SATA
 .rodata.str1.1
                0x00000000c0027a48      0x134 hw/diskphys/satapi.32
                                        0x16c (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c0027b7c       0x38 hw/diskphys/satapi.32
                0x00000000c0027b7c                vtable for SATAPI
 .rodata.str1.1
                0x00000000c0027bb4        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c0027bbc       0x38 hw/fpu/avx.32
                0x00000000c0027bbc                vtable for AVX
 .rodata.str1.1
                0x00000000c0027bf4        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0027bfc       0x38 hw/fpu/mmx.32
                0x00000000c0027bfc                vtable for MMX
 .rodata.str1.1
                0x00000000c0027c34        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0027c3c       0x38 hw/fpu/sse.32
                0x00000000c0027c3c                vtable for SSE
 .rodata        0x00000000c0027c74        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0027c7c       0x38 hw/fpu/x87.32
                0x00000000c0027c7c                vtable for x87
 .rodata        0x00000000c0027cb4       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0027d8c       0x48 hw/intctrl/apic.32
                0x00000000c0027d8c                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0027dd4       0x2c hw/intctrl/apic.32
                0x00000000c0027dd4                vtable for IOAPIC
 .rodata        0x00000000c0027e00       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c0027e22        0x2 
 .rodata._ZTV3PIC
                0x00000000c0027e24       0x48 hw/intctrl/pic.32
                0x00000000c0027e24                vtable for PIC
 .rodata.str1.1
                0x00000000c0027e6c        0xb hw/timer/apictimer.32
 *fill*         0x00000000c0027e77        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0027e78       0x30 hw/timer/apictimer.32
                0x00000000c0027e78                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0027ea8       0x1d hw/timer/pit.32
 *fill*         0x00000000c0027ec5        0x3 
 .rodata._ZTV3PIT
                0x00000000c0027ec8       0x30 hw/timer/pit.32
                0x00000000c0027ec8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0027ef8      0x7bd
 *(.data)
 .data          0x00000000c0027ef8        0x0 crti.32
 .data          0x00000000c0027ef8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0027ef8                __dso_handle
 .data          0x00000000c0027efc        0x0 acpica/utclib.32
 .data          0x00000000c0027efc        0x0 core/malloc.32
 .data          0x00000000c0027efc        0x0 libk/string.32
 .data          0x00000000c0027efc        0x0 fs/fat/diskio.32
 .data          0x00000000c0027efc        0x0 fs/fat/ff.32
 .data          0x00000000c0027efc        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0027efc        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0027efc        0x0 compat/inlines.32
 .data          0x00000000c0027efc        0x0 compat/resolve.32
 .data          0x00000000c0027efc        0x0 core/computer.32
 .data          0x00000000c0027efc        0x0 core/gdt.32
 .data          0x00000000c0027efc        0x0 core/idle.32
 .data          0x00000000c0027efc        0x0 core/idt.32
 .data          0x00000000c0027efc        0x4 core/kheap.32
 .data          0x00000000c0027f00      0x142 core/main.32
                0x00000000c0027f00                titleScreen
 *fill*         0x00000000c0028042        0x2 
 .data          0x00000000c0028044        0x4 core/physmgr.32
                0x00000000c0028044                Phys::bitmap
 .data          0x00000000c0028048        0x0 core/pipe.32
 *fill*         0x00000000c0028048       0x18 
 .data          0x00000000c0028060       0x60 core/terminal.32
                0x00000000c0028060                VgaText::hiddenOut
                0x00000000c0028080                ansiToVGAMappings
 .data          0x00000000c00280c0        0x0 core/tss.32
 .data          0x00000000c00280c0        0x4 core/unixfile.32
                0x00000000c00280c0                UnixFile::nextFd
 .data          0x00000000c00280c4       0x15 core/virtmgr.32
                0x00000000c00280c4                Virt::pageAllocPtr
                0x00000000c00280c8                Virt::bitmap
                0x00000000c00280cc                Virt::swapfileSectorsPerPage
                0x00000000c00280d0                Virt::swapfileLength
                0x00000000c00280d4                Virt::swapfileSector
                0x00000000c00280d8                Virt::swapfileDrive
 *fill*         0x00000000c00280d9        0x3 
 .data          0x00000000c00280dc        0x4 coreobjs/c++.32
                0x00000000c00280dc                __stack_chk_guard
 .data          0x00000000c00280e0        0x0 dbg/kconsole.32
 .data          0x00000000c00280e0        0x0 fs/vfs.32
 .data          0x00000000c00280e0        0x0 hal/bus.32
 .data          0x00000000c00280e0        0x0 hal/buzzer.32
 .data          0x00000000c00280e0        0x0 hal/clock.32
 .data          0x00000000c00280e0        0x0 hal/device.32
 .data          0x00000000c00280e0        0x0 hal/diskctrl.32
 .data          0x00000000c00280e0        0x0 hal/diskphys.32
 .data          0x00000000c00280e0        0x0 hal/fpu.32
 .data          0x00000000c00280e0      0x2a0 hal/intctrl.32
                0x00000000c00280e0                Krnl::exceptionNames
 .data          0x00000000c0028380        0x0 hal/keybrd.32
 .data          0x00000000c0028380        0x0 hal/logidisk.32
 .data          0x00000000c0028380        0x0 hal/mouse.32
 .data          0x00000000c0028380        0x0 hal/partition.32
 .data          0x00000000c0028380        0x0 hal/serial.32
 .data          0x00000000c0028380        0x0 hal/timer.32
 .data          0x00000000c0028380        0x0 hal/vcache.32
 .data          0x00000000c0028380        0x0 hal/video.32
 .data          0x00000000c0028380       0x10 hw/acpi.32
                0x00000000c0028380                legacyIRQRemaps
 *fill*         0x00000000c0028390       0x10 
 .data          0x00000000c00283a0      0x2a4 hw/cpu.32
                0x00000000c00283a0                cpuNameList
                0x00000000c0028640                lastCode
 .data          0x00000000c0028644        0x0 hw/ports.32
 .data          0x00000000c0028644        0x0 hw/smp.32
 *fill*         0x00000000c0028644       0x1c 
 .data          0x00000000c0028660       0x4d krnl/env.32
                0x00000000c0028660                defaultSysEnv
 .data          0x00000000c00286ad        0x0 krnl/panic.32
 .data          0x00000000c00286ad        0x0 krnl/powctrl.32
 .data          0x00000000c00286ad        0x0 krnl/rand.32
 .data          0x00000000c00286ad        0x0 net/ethernet.32
 .data          0x00000000c00286ad        0x0 reg/registry.32
 .data          0x00000000c00286ad        0x0 sys/sc_eject.32
 .data          0x00000000c00286ad        0x0 sys/sc_exit.32
 .data          0x00000000c00286ad        0x0 sys/sc_getcwd.32
 .data          0x00000000c00286ad        0x0 sys/sc_getpid.32
 .data          0x00000000c00286ad        0x0 sys/sc_getramdata.32
 .data          0x00000000c00286ad        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c00286ad        0x0 sys/sc_loaddll.32
 .data          0x00000000c00286ad        0x0 sys/sc_read.32
 .data          0x00000000c00286ad        0x0 sys/sc_sbrk.32
 .data          0x00000000c00286ad        0x0 sys/sc_setcwd.32
 .data          0x00000000c00286ad        0x0 sys/sc_settime.32
 .data          0x00000000c00286ad        0x0 sys/sc_timezone.32
 .data          0x00000000c00286ad        0x0 sys/sc_write.32
 .data          0x00000000c00286ad        0x0 sys/sc_wsbe.32
 .data          0x00000000c00286ad        0x0 sys/sc_yield.32
 .data          0x00000000c00286ad        0x0 sys/syscalls.32
 .data          0x00000000c00286ad        0x0 thr/elf.32
 *fill*         0x00000000c00286ad        0x3 
 .data          0x00000000c00286b0        0x4 thr/prcssthr.32
                0x00000000c00286b0                Thr::nextPID
 .data          0x00000000c00286b4        0x0 vm86/vm8086.32
 .data          0x00000000c00286b4        0x0 vm86/x87em.32
 .data          0x00000000c00286b4        0x0 fs/fat/vfslink.32
 .data          0x00000000c00286b4        0x1 fs/iso9660/vfslink.32
                0x00000000c00286b4                recentDriveletter
 .data          0x00000000c00286b5        0x0 hal/sound/sndcard.32
 .data          0x00000000c00286b5        0x0 hal/sound/sndport.32
 .data          0x00000000c00286b5        0x0 hw/bus/isa.32
 .data          0x00000000c00286b5        0x0 hw/bus/pci.32
 .data          0x00000000c00286b5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00286b5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00286b5        0x0 hw/diskphys/ata.32
 .data          0x00000000c00286b5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00286b5        0x0 hw/diskphys/sata.32
 .data          0x00000000c00286b5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00286b5        0x0 hw/fpu/avx.32
 .data          0x00000000c00286b5        0x0 hw/fpu/mmx.32
 .data          0x00000000c00286b5        0x0 hw/fpu/sse.32
 .data          0x00000000c00286b5        0x0 hw/fpu/x87.32
 .data          0x00000000c00286b5        0x0 hw/intctrl/apic.32
 .data          0x00000000c00286b5        0x0 hw/intctrl/pic.32
 .data          0x00000000c00286b5        0x0 hw/timer/apictimer.32
 .data          0x00000000c00286b5        0x0 hw/timer/pit.32
 .data          0x00000000c00286b5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00286b5        0x0 crtn.32
 .data          0x00000000c00286b5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00286b5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00286b5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00286b5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00286b8        0x0
 .got           0x00000000c00286b8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00286b8        0x0
 .got.plt       0x00000000c00286b8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00286b8        0x0
 .igot.plt      0x00000000c00286b8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00286b8        0x0
 .tm_clone_table
                0x00000000c00286b8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00286b8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00286b5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00286b5        0x3 
 .eh_frame      0x00000000c00286b8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00286b8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00286b8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0028710       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0028750       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00287bc       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c0028840        0x0
 .rel.got       0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028840        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028840     0x23e8
                0x00000000c0028840                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0028840        0x0 crti.32
 .bss           0x00000000c0028840       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0028860        0x4 acpica/utclib.32
 *fill*         0x00000000c0028864       0x1c 
 .bss           0x00000000c0028880      0x378 core/malloc.32
 .bss           0x00000000c0028bf8        0x0 libk/string.32
 .bss           0x00000000c0028bf8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028bf8        0x8 
 .bss           0x00000000c0028c00       0x88 fs/fat/ff.32
 .bss           0x00000000c0028c88        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028c88        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0028c88        0x0 compat/inlines.32
 .bss           0x00000000c0028c88        0x0 compat/resolve.32
 .bss           0x00000000c0028c88        0x6 core/computer.32
                0x00000000c0028c88                Krnl::computer
                0x00000000c0028c8c                Krnl::preemptionOn
                0x00000000c0028c8d                Krnl::schedulingOn
 *fill*         0x00000000c0028c8e        0x2 
 .bss           0x00000000c0028c90        0x6 core/gdt.32
                0x00000000c0028c90                gdtDescr
 .bss           0x00000000c0028c96        0x0 core/idle.32
 *fill*         0x00000000c0028c96        0x2 
 .bss           0x00000000c0028c98        0x6 core/idt.32
                0x00000000c0028c98                idtDescr
 .bss           0x00000000c0028c9e        0x0 core/kheap.32
 *fill*         0x00000000c0028c9e        0x2 
 .bss           0x00000000c0028ca0        0x4 core/main.32
                0x00000000c0028ca0                sysBootSettings
 .bss           0x00000000c0028ca4       0x29 core/physmgr.32
                0x00000000c0028ca4                Phys::forbidEvictions
                0x00000000c0028ca8                Phys::currentPagePointer
                0x00000000c0028cac                Phys::highestMem
                0x00000000c0028cb0                Phys::oldPercent
                0x00000000c0028cb4                Phys::usedPages
                0x00000000c0028cb8                Phys::usablePages
                0x00000000c0028cbc                Phys::dmaUsage
 .bss           0x00000000c0028ccd        0x0 core/pipe.32
 *fill*         0x00000000c0028ccd       0x13 
 .bss           0x00000000c0028ce0       0x29 core/terminal.32
                0x00000000c0028ce0                textModeImplementation
                0x00000000c0028d00                terminalCycle
                0x00000000c0028d04                activeTerminal
                0x00000000c0028d08                VgaText::graphicMode
 *fill*         0x00000000c0028d09        0x1 
 .bss           0x00000000c0028d0a        0x2 core/tss.32
                0x00000000c0028d0a                doubleFaultSelector
 *fill*         0x00000000c0028d0c       0x14 
 .bss           0x00000000c0028d20       0x84 core/unixfile.32
                0x00000000c0028d20                sfileLpt
                0x00000000c0028d60                sfileCom
                0x00000000c0028d84                sfileNul
                0x00000000c0028d88                sfilePnt
                0x00000000c0028d8c                sfileAux
                0x00000000c0028d90                sfileCon
                0x00000000c0028d94                initialFilesAdded
                0x00000000c0028d98                unixFileLinkedList
 .bss           0x00000000c0028da4       0x10 core/virtmgr.32
                0x00000000c0028da4                twswaps
                0x00000000c0028da8                swapBalance
                0x00000000c0028dac                Virt::swapfileBitmap
                0x00000000c0028db0                firstVAS
 .bss           0x00000000c0028db4        0x0 coreobjs/c++.32
 .bss           0x00000000c0028db4        0x0 dbg/kconsole.32
 .bss           0x00000000c0028db4        0x4 fs/vfs.32
                0x00000000c0028db4                installedFilesystems
 .bss           0x00000000c0028db8        0x0 hal/bus.32
 .bss           0x00000000c0028db8        0x4 hal/buzzer.32
                0x00000000c0028db8                systemBuzzer
 .bss           0x00000000c0028dbc        0x8 hal/clock.32
                0x00000000c0028dbc                User::dstOn
                0x00000000c0028dbd                User::timezoneHalfHourOffset
                0x00000000c0028dc0                User::timezoneHourOffset
 .bss           0x00000000c0028dc4        0x0 hal/device.32
 .bss           0x00000000c0028dc4        0x0 hal/diskctrl.32
 .bss           0x00000000c0028dc4        0x0 hal/diskphys.32
 .bss           0x00000000c0028dc4        0x0 hal/fpu.32
 .bss           0x00000000c0028dc4        0x8 hal/intctrl.32
                0x00000000c0028dc4                gpFaultIntercept
                0x00000000c0028dc8                Krnl::fpuOwner
 *fill*         0x00000000c0028dcc       0x14 
 .bss           0x00000000c0028de0      0x429 hal/keybrd.32
                0x00000000c0028de0                keyboardWaitingTaskList
                0x00000000c0028de4                keyboardSetupYet
                0x00000000c0028de8                guiKeyboardHandler
                0x00000000c0028e00                keystates
 *fill*         0x00000000c0029209       0x17 
 .bss           0x00000000c0029220       0x88 hal/logidisk.32
                0x00000000c0029220                diskAssignments
                0x00000000c0029240                disks
 .bss           0x00000000c00292a8        0x4 hal/mouse.32
                0x00000000c00292a8                guiMouseHandler
 .bss           0x00000000c00292ac        0x0 hal/partition.32
 .bss           0x00000000c00292ac        0x0 hal/serial.32
 .bss           0x00000000c00292ac        0x4 hal/timer.32
                0x00000000c00292ac                milliTenthsSinceBoot
 .bss           0x00000000c00292b0        0x0 hal/vcache.32
 .bss           0x00000000c00292b0        0x4 hal/video.32
                0x00000000c00292b0                screen
 *fill*         0x00000000c00292b4        0xc 
 .bss           0x00000000c00292c0      0x480 hw/acpi.32
                0x00000000c00292c0                systemSleepFunction
                0x00000000c00292c4                systemResetFunction
                0x00000000c00292c8                systemShutdownFunction
                0x00000000c00292cc                nextACPITable
                0x00000000c00292e0                acpiTables
                0x00000000c00294e0                usingXSDT
                0x00000000c00294e4                MADTpointer
                0x00000000c00294e8                RSDTpointer
                0x00000000c00294ec                RSDPpointer
                0x00000000c00294f0                nextAPICNMI
                0x00000000c0029500                apicNMIInfo
                0x00000000c0029580                legacyIRQFlags
                0x00000000c00295a0                ioapicDiscoveryNumber
                0x00000000c00295c0                ioapicFoundInMADT
                0x00000000c00295e0                ioapicAddresses
                0x00000000c0029660                ioapicGSIBase
                0x00000000c00296e0                processorDiscoveryNumber
                0x00000000c0029700                matchingAPICID
                0x00000000c0029720                processorID
 .bss           0x00000000c0029740       0x10 hw/cpu.32
                0x00000000c0029740                lastD
                0x00000000c0029744                lastC
                0x00000000c0029748                lastB
                0x00000000c002974c                lastA
 .bss           0x00000000c0029750        0x0 hw/ports.32
 .bss           0x00000000c0029750        0x1 hw/smp.32
                0x00000000c0029750                Krnl::bspID
 *fill*         0x00000000c0029751        0x3 
 .bss           0x00000000c0029754        0x8 krnl/env.32
                0x00000000c0029754                Krnl::userEnv
                0x00000000c0029758                Krnl::systemEnv
 .bss           0x00000000c002975c        0x9 krnl/panic.32
                0x00000000c002975c                Krnl::guiProgramFaultHandler
                0x00000000c0029760                Krnl::guiPanicHandler
                0x00000000c0029764                Krnl::kernelInPanic
 *fill*         0x00000000c0029765       0x1b 
 .bss           0x00000000c0029780       0x48 krnl/powctrl.32
                0x00000000c0029780                Krnl::powCtrlOnBattery
                0x00000000c00297a0                Krnl::currentPowerSettings
                0x00000000c00297c4                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c00297c8        0x9 krnl/rand.32
                0x00000000c00297c8                Krnl::lcg
                0x00000000c00297d0                Krnl::initedRand
 .bss           0x00000000c00297d1        0x0 net/ethernet.32
 .bss           0x00000000c00297d1        0x0 reg/registry.32
 .bss           0x00000000c00297d1        0x0 sys/sc_eject.32
 .bss           0x00000000c00297d1        0x0 sys/sc_exit.32
 .bss           0x00000000c00297d1        0x0 sys/sc_getcwd.32
 .bss           0x00000000c00297d1        0x0 sys/sc_getpid.32
 .bss           0x00000000c00297d1        0x0 sys/sc_getramdata.32
 .bss           0x00000000c00297d1        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c00297d1        0x0 sys/sc_loaddll.32
 .bss           0x00000000c00297d1        0x0 sys/sc_read.32
 .bss           0x00000000c00297d1        0x0 sys/sc_sbrk.32
 .bss           0x00000000c00297d1        0x0 sys/sc_setcwd.32
 .bss           0x00000000c00297d1        0x0 sys/sc_settime.32
 .bss           0x00000000c00297d1        0x0 sys/sc_timezone.32
 .bss           0x00000000c00297d1        0x0 sys/sc_write.32
 .bss           0x00000000c00297d1        0x0 sys/sc_wsbe.32
 .bss           0x00000000c00297d1        0x0 sys/sc_yield.32
 *fill*         0x00000000c00297d1        0xf 
 .bss           0x00000000c00297e0      0x200 sys/syscalls.32
                0x00000000c00297e0                systemCallHandlers
 .bss           0x00000000c00299e0      0x7a4 thr/elf.32
                0x00000000c00299e0                Thr::driverLookupNext
                0x00000000c0029a00                Thr::driverLookupLen
                0x00000000c0029c00                Thr::driverLookupAddr
                0x00000000c0029e00                Thr::driverNameLookup
                0x00000000c002a000                Thr::kernelSymbols
                0x00000000c002a080                Thr::kernelStringTable
                0x00000000c002a100                Thr::kernelSymbolTable
                0x00000000c002a180                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002a184        0x4 
 .bss           0x00000000c002a188       0x68 thr/prcssthr.32
                0x00000000c002a188                cleanerThread
                0x00000000c002a18c                weNeedTheCleanerToNotBlock
                0x00000000c002a190                retValLockStuff
                0x00000000c002a194                retValSchedLock
                0x00000000c002a198                lockStuffLock
                0x00000000c002a19c                schedulerLock
                0x00000000c002a1a0                taskSwitchesPostponedFlag
                0x00000000c002a1a4                postponeTaskSwitchesCounter
                0x00000000c002a1a8                irqDisableCounter
                0x00000000c002a1ac                terminatedTaskList
                0x00000000c002a1b8                sleepingTaskList
                0x00000000c002a1c4                taskList
                0x00000000c002a1d0                kernelProcess
 *fill*         0x00000000c002a1f0       0x10 
 .bss           0x00000000c002a200       0x40 vm86/vm8086.32
                0x00000000c002a200                Vm::vmRetV
                0x00000000c002a204                Vm::vmDone
                0x00000000c002a205                Vm::vmReady
                0x00000000c002a208                Vm::vm86Thread
                0x00000000c002a20c                Vm::vmToHostCommsPtr
                0x00000000c002a220                Vm::vmToHostComms
 .bss           0x00000000c002a240       0x48 vm86/x87em.32
                0x00000000c002a240                Vm::fpuState
 *fill*         0x00000000c002a288       0x18 
 .bss           0x00000000c002a2a0       0xf0 fs/fat/vfslink.32
                0x00000000c002a2a0                FAT::fats
                0x00000000c002a2c0                FAT::vfsToFatRemaps
                0x00000000c002a340                fatToVFSRemaps
 *fill*         0x00000000c002a390       0x10 
 .bss           0x00000000c002a3a0      0x820 fs/iso9660/vfslink.32
                0x00000000c002a3a0                recentSector
                0x00000000c002a3c0                recentBuffer
 .bss           0x00000000c002abc0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002abc0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002abc0        0x0 hw/bus/isa.32
 .bss           0x00000000c002abc0        0xd hw/bus/pci.32
                0x00000000c002abc0                thePCI
 .bss           0x00000000c002abcd        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002abcd        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002abcd        0x3 
 .bss           0x00000000c002abd0        0x8 hw/diskphys/ata.32
                0x00000000c002abd0                ataSectorsWritten
                0x00000000c002abd4                ataSectorsRead
 .bss           0x00000000c002abd8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002abd8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002abd8        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c002abd8        0x0 hw/fpu/avx.32
 .bss           0x00000000c002abd8        0x0 hw/fpu/mmx.32
 .bss           0x00000000c002abd8        0x0 hw/fpu/sse.32
 .bss           0x00000000c002abd8        0x0 hw/fpu/x87.32
 *fill*         0x00000000c002abd8        0x8 
 .bss           0x00000000c002abe0       0x41 hw/intctrl/apic.32
                0x00000000c002abe0                noOfIOAPICs
                0x00000000c002ac00                ioapics
                0x00000000c002ac20                IOAPICsSetupYet
 .bss           0x00000000c002ac21        0x0 hw/intctrl/pic.32
 .bss           0x00000000c002ac21        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002ac21        0x3 
 .bss           0x00000000c002ac24        0x4 hw/timer/pit.32
                0x00000000c002ac24                pitFreq
 .bss           0x00000000c002ac28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002ac28        0x0 crtn.32
 .bss           0x00000000c002ac28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002ac28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002ac28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002ac28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002ac28                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d010                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
