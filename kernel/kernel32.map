Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

cdDriveLetter       0x1               fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c5ea
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 *fill*         0x00000000c0001afb        0x1 
 .text          0x00000000c0001afc      0x1f2 libk/ctype.32
                0x00000000c0001afc                isblank
                0x00000000c0001b1c                iscntrl
                0x00000000c0001b3c                isdigit
                0x00000000c0001b58                islower
                0x00000000c0001b74                isspace
                0x00000000c0001b9c                isupper
                0x00000000c0001bb8                isalpha
                0x00000000c0001be8                isalnum
                0x00000000c0001c18                ispunct
                0x00000000c0001c58                isgraph
                0x00000000c0001c88                isprint
                0x00000000c0001cb0                isxdigit
 .text          0x00000000c0001cee        0x0 libk/string.32
 .text          0x00000000c0001cee       0x51 fs/fat/diskio.32
                0x00000000c0001cee                disk_status
                0x00000000c0001cf1                disk_initialize
                0x00000000c0001cf4                disk_read
                0x00000000c0001d0a                disk_write
                0x00000000c0001d20                disk_ioctl
 .text          0x00000000c0001d3f     0x3d4b fs/fat/ff.32
                0x00000000c0003adb                f_mount
                0x00000000c0003b3d                f_open
                0x00000000c0003e08                f_read
                0x00000000c0004007                f_write
                0x00000000c000423b                f_sync
                0x00000000c00042f0                f_close
                0x00000000c000431f                f_lseek
                0x00000000c00044c6                f_opendir
                0x00000000c0004591                f_closedir
                0x00000000c00045b3                f_readdir
                0x00000000c0004645                f_stat
                0x00000000c00046c4                f_getfree
                0x00000000c00047c6                f_truncate
                0x00000000c00048aa                f_unlink
                0x00000000c00049cc                f_mkdir
                0x00000000c0004b67                f_rename
                0x00000000c0004d1d                f_chmod
                0x00000000c0004dc6                f_utime
                0x00000000c0004e74                f_getlabel
                0x00000000c0004fc5                f_setlabel
                0x00000000c0005155                f_expand
                0x00000000c00052b5                f_mkfs
 *fill*         0x00000000c0005a8a        0x2 
 .text          0x00000000c0005a8c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a8c                ff_memalloc
                0x00000000c0005aa4                ff_memfree
 *fill*         0x00000000c0005abb        0x1 
 .text          0x00000000c0005abc      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005abc                ff_uni2oem
                0x00000000c0005b5c                ff_oem2uni
                0x00000000c0005bd4                ff_wtoupper
 .text          0x00000000c0005d64      0xcb7 fs/iso9660/iso9660.32
                0x00000000c0005f81                isoReadDiscSector
                0x00000000c0005fa1                strnicmp
                0x00000000c0006000                stricmp
                0x00000000c000604c                iso_close
                0x00000000c0006066                iso_seek
                0x00000000c00060ea                iso_tell
                0x00000000c000611b                iso_total
                0x00000000c0006146                fn_postprocess
                0x00000000c0006183                iso_reset
                0x00000000c0006556                iso_readdir
                0x00000000c0006753                iso_read
                0x00000000c0006869                iso_open
                0x00000000c0006907                iso_ioctl
                0x00000000c000690f                fs_iso9660_init
                0x00000000c00069ab                fs_iso9660_shutdown
 .text          0x00000000c0006a1b       0x94 compat/inlines.32
                0x00000000c0006a1b                CPU::current()
                0x00000000c0006a27                operator new(unsigned long)
                0x00000000c0006a2c                operator delete(void*)
                0x00000000c0006a31                disableIRQs()
                0x00000000c0006a33                enableIRQs()
                0x00000000c0006a35                lockScheduler()
                0x00000000c0006a3d                unlockScheduler()
                0x00000000c0006a4c                lockStuff()
                0x00000000c0006a5a                unlockStuff()
                0x00000000c0006a94                Virt::getAKernelVAS()
                0x00000000c0006a9a                __not_memcpy
 *fill*         0x00000000c0006aaf        0x1 
 .text          0x00000000c0006ab0      0x118 compat/resolve.32
                0x00000000c0006ab0                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0006bc8      0x68b core/computer.32
                0x00000000c0006bc8                Computer::close(int, int, void*)
                0x00000000c0006c0d                Krnl::firstTask()
                0x00000000c0006d46                Computer::Computer()
                0x00000000c0006d46                Computer::Computer()
                0x00000000c0006df8                Computer::setBootMessage(char const*)
                0x00000000c0006dfa                Computer::detectFeatures()
                0x00000000c0007004                Computer::displayFeatures()
                0x00000000c0007006                Computer::rdmsr(unsigned int)
                0x00000000c0007032                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000706a                Computer::shutdown()
                0x00000000c0007082                Computer::restart()
                0x00000000c000709a                Computer::sleep()
                0x00000000c00070ae                Computer::nmiEnabled()
                0x00000000c00070ba                Computer::readCMOS(unsigned char)
                0x00000000c00070d4                Computer::enableNMI(bool)
                0x00000000c00070ec                Computer::open(int, int, void*)
                0x00000000c00071c0                Computer::disableNMI()
                0x00000000c00071d0                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00071ee                Computer::handleNMI()
 *fill*         0x00000000c0007253        0x1 
 .text          0x00000000c0007254      0x1cf core/gdt.32
                0x00000000c0007254                GDTEntry::setBase(unsigned int)
                0x00000000c0007270                GDTEntry::setLimit(unsigned int)
                0x00000000c000728e                GDT::GDT()
                0x00000000c000728e                GDT::GDT()
                0x00000000c00072a4                GDT::addEntry(GDTEntry)
                0x00000000c00072c6                GDT::getNumberOfEntries()
                0x00000000c00072ce                GDT::flush()
                0x00000000c00072f0                GDT::setup()
 .text          0x00000000c0007423       0x19 core/idle.32
                0x00000000c0007423                idleFunction(void*)
 .text          0x00000000c000743c      0x464 core/idt.32
                0x00000000c000743c                IDTEntry::IDTEntry(bool)
                0x00000000c000743c                IDTEntry::IDTEntry(bool)
                0x00000000c00074ae                IDTEntry::setOffset(unsigned int)
                0x00000000c00074c4                IDT::IDT()
                0x00000000c00074c4                IDT::IDT()
                0x00000000c00074c6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00074ce                IDT::addEntry(IDTEntry, int)
                0x00000000c00074e8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007520                IDT::flush()
                0x00000000c000753a                IDT::setup()
 .text          0x00000000c00078a0      0x183 core/kheap.32
                0x00000000c00078a0                sbrk
                0x00000000c0007935                mmap
                0x00000000c000794b                munmap
                0x00000000c0007961                liballoc_lock()
                0x00000000c000796e                liballoc_unlock()
                0x00000000c0007982                liballoc_alloc(int)
                0x00000000c000799a                liballoc_free(void*, int)
                0x00000000c00079b5                realloc
                0x00000000c00079c9                malloc
                0x00000000c00079d9                free
                0x00000000c00079e9                rfree
                0x00000000c00079f9                calloc
 .text          0x00000000c0007a23      0x1b4 core/main.32
                0x00000000c0007a23                Krnl::setBootMessage(char const*)
                0x00000000c0007a8f                kernel_main
 .text          0x00000000c0007bd7      0x5dc core/physmgr.32
                0x00000000c0007bd7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cae                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007ce1                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d13                Phys::getPageState(unsigned long)
                0x00000000c0007d34                Phys::freePage(unsigned long)
                0x00000000c0007d96                Phys::allocatePage()
                0x00000000c0007e54                Phys::allocateContiguousPages(int)
                0x00000000c0007eb0                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007ee8                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c00081b3        0x1 
 .text          0x00000000c00081b4      0x273 core/pipe.32
                0x00000000c00081b4                Pipe::isAtty()
                0x00000000c00081b8                Pipe::~Pipe()
                0x00000000c00081b8                Pipe::~Pipe()
                0x00000000c00081dc                Pipe::~Pipe()
                0x00000000c0008204                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00082c4                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00083c0                Pipe::Pipe(int)
                0x00000000c00083c0                Pipe::Pipe(int)
 *fill*         0x00000000c0008427        0x1 
 .text          0x00000000c0008428      0xa1e core/terminal.32
                0x00000000c0008428                VgaText::isAtty()
                0x00000000c000842c                VgaText::~VgaText()
                0x00000000c000842c                VgaText::~VgaText()
                0x00000000c0008450                VgaText::~VgaText()
                0x00000000c000847a                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000849a                setTerminalScrollLock(bool)
                0x00000000c000849b                doTerminalCycle()
                0x00000000c000849c                addToTerminalCycle(VgaText*)
                0x00000000c000849d                scrollTerminalScrollLock(int)
                0x00000000c000849e                VgaText::updateTitle()
                0x00000000c00084a0                VgaText::load()
                0x00000000c00084a2                VgaText::updateCursor()
                0x00000000c00084b8                VgaText::doANSI_SGR(int)
                0x00000000c000852c                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000853c                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000854c                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000856c                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008578                VgaText::setTitleColour(VgaColour)
                0x00000000c0008584                VgaText::setTitle(char*)
                0x00000000c0008586                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008598                VgaText::scrollScreen()
                0x00000000c0008630                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008642                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00086d2                VgaText::getCursorX()
                0x00000000c00086da                VgaText::getCursorY()
                0x00000000c00086e2                VgaText::setCursor(int, int)
                0x00000000c00086f9                setActiveTerminal(VgaText*)
                0x00000000c0008744                VgaText::clearScreen()
                0x00000000c0008792                VgaText::setCursorX(int)
                0x00000000c00087aa                VgaText::setCursorY(int)
                0x00000000c00087c2                VgaText::incrementCursor(bool)
                0x00000000c0008816                VgaText::decrementCursor(bool)
                0x00000000c0008838                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008906                VgaText::putchar(char)
                0x00000000c00089f2                VgaText::putx(unsigned int)
                0x00000000c0008a38                VgaText::puts(char const*)
                0x00000000c0008a5e                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008aaa                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008bfc                VgaText::VgaText(char const*)
                0x00000000c0008bfc                VgaText::VgaText(char const*)
                0x00000000c0008d48                VgaText::receiveKey(unsigned char)
                0x00000000c0008e20                VgaText::doUpdate()
                0x00000000c0008e21                newTerminal(char*)
 *fill*         0x00000000c0008e46        0x2 
 .text          0x00000000c0008e48      0x1a1 core/tss.32
                0x00000000c0008e48                TSS::TSS()
                0x00000000c0008e48                TSS::TSS()
                0x00000000c0008e58                TSS::setESP(unsigned long)
                0x00000000c0008e6c                TSS::flush()
                0x00000000c0008e8c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008fe9        0x1 
 .text          0x00000000c0008fea      0x4c2 core/unixfile.32
                0x00000000c0008fea                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009040                ReservedFilename::isAtty()
                0x00000000c000905c                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00090ba                UnixFile::getFileDescriptor()
                0x00000000c00090c2                UnixFile::UnixFile(int)
                0x00000000c00090c2                UnixFile::UnixFile(int)
                0x00000000c0009272                ReservedFilename::ReservedFilename(int)
                0x00000000c0009272                ReservedFilename::ReservedFilename(int)
                0x00000000c00092a4                UnixFile::~UnixFile()
                0x00000000c00092a4                UnixFile::~UnixFile()
                0x00000000c000933c                UnixFile::~UnixFile()
                0x00000000c0009364                ReservedFilename::~ReservedFilename()
                0x00000000c0009364                ReservedFilename::~ReservedFilename()
                0x00000000c0009388                ReservedFilename::~ReservedFilename()
                0x00000000c00093af                getFromFileDescriptor(int)
 .text          0x00000000c00094ac     0x1166 core/virtmgr.32
                0x00000000c00094ac                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00094e1                Virt::getPageState(unsigned long)
                0x00000000c0009505                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009616                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009634                Virt::swapIDToSector(unsigned long)
                0x00000000c0009646                Virt::allocateSwapfilePage()
                0x00000000c00096c4                Virt::virtualMemorySetup()
                0x00000000c000970f                Virt::setupPageSwapping(int)
                0x00000000c0009780                VAS::VAS()
                0x00000000c0009780                VAS::VAS()
                0x00000000c00097bc                VAS::VAS(VAS*)
                0x00000000c00097bc                VAS::VAS(VAS*)
                0x00000000c00097ea                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009816                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009835                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000995a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000997e                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009998                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c00099d8                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009a0c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009a36                VAS::~VAS()
                0x00000000c0009a36                VAS::~VAS()
                0x00000000c0009b9a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009c9e                VAS::allocatePages(int, int)
                0x00000000c0009e76                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009e94                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f5a                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a048                VAS::VAS(bool)
                0x00000000c000a048                VAS::VAS(bool)
                0x00000000c000a2c8                VAS::evict(unsigned long)
                0x00000000c000a38a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a478                VAS::scanForEviction()
                0x00000000c000a558                mapVASFirstTime
 .text          0x00000000c000a612       0x5f coreobjs/c++.32
                0x00000000c000a612                __cxa_atexit
                0x00000000c000a615                __cxa_finalize
                0x00000000c000a616                __stack_chk_fail
                0x00000000c000a64c                __cxa_pure_virtual
                0x00000000c000a65d                operator new[](unsigned long)
                0x00000000c000a662                operator delete(void*, unsigned long)
                0x00000000c000a667                operator delete[](void*)
                0x00000000c000a66c                operator delete[](void*, unsigned long)
 .text          0x00000000c000a671      0x21c dbg/kconsole.32
                0x00000000c000a671                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a6dc                Dbg::logc(char)
                0x00000000c000a6fc                Dbg::logs(char*)
                0x00000000c000a719                Dbg::logWriteInt(unsigned int)
                0x00000000c000a737                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a758                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a88d        0x1 
 .text          0x00000000c000a88e      0xc5c fs/vfs.32
                0x00000000c000a88e                File::read(unsigned long long, void*, int*)
                0x00000000c000a8e6                File::write(unsigned long long, void*, int*)
                0x00000000c000a93e                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a996                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a9c4                File::isAtty()
                0x00000000c000a9c8                Directory::isAtty()
                0x00000000c000a9cc                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a9d2                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a9d8                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a9de                File::~File()
                0x00000000c000a9de                File::~File()
                0x00000000c000aa02                File::~File()
                0x00000000c000aa2c                Directory::~Directory()
                0x00000000c000aa2c                Directory::~Directory()
                0x00000000c000aa50                Directory::~Directory()
                0x00000000c000aa7a                Filesystem::Filesystem()
                0x00000000c000aa7a                Filesystem::Filesystem()
                0x00000000c000aa9e                Filesystem::~Filesystem()
                0x00000000c000aa9e                Filesystem::~Filesystem()
                0x00000000c000aaac                Filesystem::~Filesystem()
                0x00000000c000aad0                Fs::getcwd(Process*, char*, int)
                0x00000000c000aafa                Fs::initVFS()
                0x00000000c000ab24                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000acce                File::File(char const*, Process*)
                0x00000000c000acce                File::File(char const*, Process*)
                0x00000000c000ad8e                File::open(FileOpenMode)
                0x00000000c000adec                File::close()
                0x00000000c000ae4c                File::seek(unsigned long long)
                0x00000000c000aea2                File::tell(unsigned long long*)
                0x00000000c000aef2                File::rewind()
                0x00000000c000af06                File::unlink()
                0x00000000c000af52                File::rename(char const*)
                0x00000000c000afa0                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000affc                File::exists()
                0x00000000c000b03a                File::stat(unsigned long long*, bool*)
                0x00000000c000b09b                Fs::setcwd(Process*, char*)
                0x00000000c000b1f8                Directory::Directory(char const*, Process*)
                0x00000000c000b1f8                Directory::Directory(char const*, Process*)
                0x00000000c000b2b8                Directory::open()
                0x00000000c000b314                Directory::close()
                0x00000000c000b374                Directory::unlink()
                0x00000000c000b3c0                Directory::rename(char const*)
                0x00000000c000b40e                Directory::exists()
                0x00000000c000b44c                Directory::read(dirent*)
                0x00000000c000b498                Directory::create()
                0x00000000c000b4e4                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b4ea        0x2 
 .text          0x00000000c000b4ec       0x86 hal/bus.32
                0x00000000c000b4ec                Bus::Bus(char const*)
                0x00000000c000b4ec                Bus::Bus(char const*)
                0x00000000c000b524                Bus::~Bus()
                0x00000000c000b524                Bus::~Bus()
                0x00000000c000b548                Bus::~Bus()
 .text          0x00000000c000b572       0x96 hal/buzzer.32
                0x00000000c000b572                beepThread(void*)
                0x00000000c000b5af                Krnl::beep(int, int, bool)
 .text          0x00000000c000b608      0x46d hal/clock.32
                0x00000000c000b608                User::loadClockSettings(int)
                0x00000000c000b65a                Clock::Clock(char const*)
                0x00000000c000b65a                Clock::Clock(char const*)
                0x00000000c000b690                Clock::~Clock()
                0x00000000c000b690                Clock::~Clock()
                0x00000000c000b6b4                Clock::~Clock()
                0x00000000c000b6de                Clock::timeInSecondsLocal()
                0x00000000c000b726                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b77f                datetimeToSeconds(datetime_t)
                0x00000000c000b8ac                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b90c                secondsToDatetime(unsigned long long)
                0x00000000c000ba50                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000ba75        0x1 
 .text          0x00000000c000ba76      0x464 hal/device.32
                0x00000000c000ba76                Device::hibernate()
                0x00000000c000ba78                Device::wake()
                0x00000000c000ba7a                Device::detect()
                0x00000000c000ba7c                Device::disableLegacy()
                0x00000000c000ba7e                Device::powerSaving(PowerSavingLevel)
                0x00000000c000ba80                DriverlessDevice::close(int, int, void*)
                0x00000000c000ba84                DriverlessDevice::detect()
                0x00000000c000ba86                DriverlessDevice::open(int, int, void*)
                0x00000000c000ba9a                Device::~Device()
                0x00000000c000ba9a                Device::~Device()
                0x00000000c000baa8                Device::~Device()
                0x00000000c000bad0                Device::findAndLoadDriver()
                0x00000000c000bade                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bb04                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bb44                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bb6e                Device::getParent()
                0x00000000c000bb7a                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bb98                Device::addChild(Device*)
                0x00000000c000bbdc                Device::removeAllChildren()
                0x00000000c000bc22                Device::hibernateAll()
                0x00000000c000bc52                Device::wakeAll()
                0x00000000c000bc82                Device::detectAll()
                0x00000000c000bcb2                Device::disableLegacyAll()
                0x00000000c000bcb4                Device::loadDriversForAll()
                0x00000000c000bcb6                Device::closeAll()
                0x00000000c000bcec                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bd22                Device::setName(char const*)
                0x00000000c000bd30                Device::Device(char const*)
                0x00000000c000bd30                Device::Device(char const*)
                0x00000000c000be2c                Device::getName()
                0x00000000c000be36                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000be36                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000be6c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000beb0                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000beda        0x2 
 .text          0x00000000c000bedc       0x86 hal/diskctrl.32
                0x00000000c000bedc                HardDiskController::HardDiskController(char const*)
                0x00000000c000bedc                HardDiskController::HardDiskController(char const*)
                0x00000000c000bf14                HardDiskController::~HardDiskController()
                0x00000000c000bf14                HardDiskController::~HardDiskController()
                0x00000000c000bf38                HardDiskController::~HardDiskController()
 .text          0x00000000c000bf62       0xe2 hal/diskphys.32
                0x00000000c000bf62                PhysicalDisk::eject()
                0x00000000c000bf66                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bf66                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bfce                PhysicalDisk::startCache()
                0x00000000c000bff6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bff6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c01a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c044        0x0 hal/fpu.32
 .text          0x00000000c000c044      0x35d hal/intctrl.32
                0x00000000c000c044                int_handler
                0x00000000c000c0cc                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c114                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c24c                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c280                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c2ff                setupINTS()
                0x00000000c000c35c                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c3a1        0x1 
 .text          0x00000000c000c3a2      0x78c hal/keybrd.32
                0x00000000c000c3a2                startGUI(void*)
                0x00000000c000c40e                startGUIVESA(void*)
                0x00000000c000c47a                sendKeyToTerminal(unsigned char)
                0x00000000c000c53d                sendKeyboardToken(KeyboardToken)
                0x00000000c000c97d                clearInternalKeybuffer(VgaText*)
                0x00000000c000c9b2                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000caa4                Keyboard::Keyboard(char const*)
                0x00000000c000caa4                Keyboard::Keyboard(char const*)
                0x00000000c000cae0                Keyboard::~Keyboard()
                0x00000000c000cae0                Keyboard::~Keyboard()
                0x00000000c000cb04                Keyboard::~Keyboard()
 .text          0x00000000c000cb2e      0x3ea hal/logidisk.32
                0x00000000c000cb2e                LogicalDisk::close(int, int, void*)
                0x00000000c000cb32                LogicalDisk::~LogicalDisk()
                0x00000000c000cb32                LogicalDisk::~LogicalDisk()
                0x00000000c000cb56                LogicalDisk::~LogicalDisk()
                0x00000000c000cb80                LogicalDisk::open(int, int, void*)
                0x00000000c000cb94                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cbcc                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cc12                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cc12                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ccc8                LogicalDisk::assignDriveLetter()
                0x00000000c000cd7e                LogicalDisk::mount()
                0x00000000c000cdc6                LogicalDisk::unmount()
                0x00000000c000cdd6                LogicalDisk::eject()
                0x00000000c000cdea                LogicalDisk::unassignDriveLetter()
                0x00000000c000ce40                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ceac                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000cf18       0x86 hal/mouse.32
                0x00000000c000cf18                Mouse::Mouse(char const*)
                0x00000000c000cf18                Mouse::Mouse(char const*)
                0x00000000c000cf50                Mouse::~Mouse()
                0x00000000c000cf50                Mouse::~Mouse()
                0x00000000c000cf74                Mouse::~Mouse()
 .text          0x00000000c000cf9e      0x339 hal/partition.32
                0x00000000c000cf9e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d046                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d2d7        0x1 
 .text          0x00000000c000d2d8       0x86 hal/serial.32
                0x00000000c000d2d8                Serial::Serial(char const*)
                0x00000000c000d2d8                Serial::Serial(char const*)
                0x00000000c000d310                Serial::~Serial()
                0x00000000c000d310                Serial::~Serial()
                0x00000000c000d334                Serial::~Serial()
 *fill*         0x00000000c000d35e        0x2 
 .text          0x00000000c000d360      0x234 hal/timer.32
                0x00000000c000d360                Timer::Timer(char const*)
                0x00000000c000d360                Timer::Timer(char const*)
                0x00000000c000d398                Timer::~Timer()
                0x00000000c000d398                Timer::~Timer()
                0x00000000c000d3bc                Timer::~Timer()
                0x00000000c000d3e6                Timer::read()
                0x00000000c000d3f1                setupTimer(int)
                0x00000000c000d42c                timerHandler(unsigned int)
 .text          0x00000000c000d594      0x43e hal/vcache.32
                0x00000000c000d594                VCache::VCache(PhysicalDisk*)
                0x00000000c000d594                VCache::VCache(PhysicalDisk*)
                0x00000000c000d6fc                VCache::invalidateReadBuffer()
                0x00000000c000d70c                VCache::writeWriteBuffer()
                0x00000000c000d758                VCache::~VCache()
                0x00000000c000d758                VCache::~VCache()
                0x00000000c000d7ac                VCache::~VCache()
                0x00000000c000d7d4                VCache::write(unsigned long long, int, void*)
                0x00000000c000d8ce                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d9d2      0x4b3 hal/video.32
                0x00000000c000d9d2                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000da1e                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000da8e                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000db0c                Video::clearScreen(unsigned int)
                0x00000000c000db40                Video::putpixel(int, int, unsigned int)
                0x00000000c000db4e                Video::Video(char const*)
                0x00000000c000db4e                Video::Video(char const*)
                0x00000000c000db84                Video::~Video()
                0x00000000c000db84                Video::~Video()
                0x00000000c000dba8                Video::~Video()
                0x00000000c000dbd2                Video::isMonochrome()
                0x00000000c000dbde                Video::getWidth()
                0x00000000c000dbea                Video::getHeight()
                0x00000000c000dbf6                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000dcb2                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000de1a                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000de85        0x3 
 .text          0x00000000c000de88     0x1307 hw/acpi.32
                0x00000000c000de88                ACPI::close(int, int, void*)
                0x00000000c000df40                findRSDP()
                0x00000000c000dfd0                loadACPITables(unsigned char*)
                0x00000000c000e234                findRSDT(unsigned char*)
                0x00000000c000e384                findDataTable(unsigned char*, char*)
                0x00000000c000e3fc                scanMADT()
                0x00000000c000e8d0                ACPI::ACPI()
                0x00000000c000e8d0                ACPI::ACPI()
                0x00000000c000e924                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ea0c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ead4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000eadc                ACPI::detectPCI()
                0x00000000c000ece4                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ed38                ACPI::sleep()
                0x00000000c000ed54                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f18f        0x1 
 .text          0x00000000c000f190      0xb95 hw/cpu.32
                0x00000000c000f190                CPU::close(int, int, void*)
                0x00000000c000f194                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f1b0                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f1c8                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f23c                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f2c0                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f2ee                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f31c                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f34a                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f378                CPU::CPU()
                0x00000000c000f378                CPU::CPU()
                0x00000000c000f406                CPU::displayFeatures()
                0x00000000c000f408                CPU::detectFeatures()
                0x00000000c000facc                CPU::setupSMEP()
                0x00000000c000fad8                CPU::setupUMIP()
                0x00000000c000fae2                CPU::setupTSC()
                0x00000000c000faec                CPU::setupLargePages()
                0x00000000c000faf6                CPU::setupPAT()
                0x00000000c000fb32                CPU::setupMTRR()
                0x00000000c000fb34                CPU::setupGlobalPages()
                0x00000000c000fb3e                CPU::allowUsermodeDataAccess()
                0x00000000c000fb50                CPU::prohibitUsermodeDataAccess()
                0x00000000c000fb62                CPU::setupSMAP()
                0x00000000c000fb70                CPU::setupFeatures()
                0x00000000c000fc3c                CPU::open(int, int, void*)
 *fill*         0x00000000c000fd25        0x1 
 .text          0x00000000c000fd26      0x581 krnl/env.32
                0x00000000c000fd26                EnvVarContainer::getEnv(char const*)
                0x00000000c000fd64                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fe26                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fe28                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001000e                EnvVarContainer::__loadSystem()
                0x00000000c0010028                EnvVarContainer::__loadUser()
                0x00000000c001002a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001002a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001004c                EnvVarContainer::~EnvVarContainer()
                0x00000000c001004c                EnvVarContainer::~EnvVarContainer()
                0x00000000c001007c                Krnl::getEnv(Process*, char const*)
                0x00000000c00100e1                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00100fb                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001011a                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c001012d                Krnl::deleteEnvSystem(char const*)
                0x00000000c001012e                Krnl::deleteEnvUser(char const*)
                0x00000000c001012f                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0010130                Krnl::newProcessEnv(Process*)
                0x00000000c0010152                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c001019e                Krnl::loadSystemEnv()
                0x00000000c00101cc                Krnl::loadUserEnv()
                0x00000000c00101f2                Krnl::flushEnv()
                0x00000000c00101f3                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0010213                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00102a7      0x108 krnl/panic.32
                0x00000000c00102a7                Krnl::panic(char const*)
 .text          0x00000000c00103af      0x142 krnl/powctrl.32
                0x00000000c00103af                Krnl::powerThread(void*)
                0x00000000c00103dd                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c00103f3                Krnl::userIOReceived()
                0x00000000c00103fe                Krnl::handlePowerButton()
                0x00000000c0010433                Krnl::handleSleepButton()
                0x00000000c0010468                Krnl::setupPowerManager()
 .text          0x00000000c00104f1      0x50e reg/registry.32
                0x00000000c00104f1                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0010649                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001079e                Reg::getLine(char*, char*, char*)
                0x00000000c00107d5                Reg::readInt(char*, char*, int*)
                0x00000000c00108c0                Reg::readString(char*, char*, char*, int)
                0x00000000c0010941                Reg::readBool(char*, char*, bool*)
                0x00000000c0010966                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0010992                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00109be                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00109ff       0x36 sys/sc_eject.32
                0x00000000c00109ff                Sys::eject(regs*)
 .text          0x00000000c0010a35       0x18 sys/sc_exit.32
                0x00000000c0010a35                Sys::exit(regs*)
 .text          0x00000000c0010a4d       0x1f sys/sc_getcwd.32
                0x00000000c0010a4d                Sys::getCwd(regs*)
 .text          0x00000000c0010a6c        0xc sys/sc_getpid.32
                0x00000000c0010a6c                Sys::getPID(regs*)
 .text          0x00000000c0010a78       0x1a sys/sc_getramdata.32
                0x00000000c0010a78                Sys::getRAMData(regs*)
 .text          0x00000000c0010a92       0x82 sys/sc_getvgaptr.32
                0x00000000c0010a92                Sys::getVGAPtr(regs*)
 .text          0x00000000c0010b14       0xa8 sys/sc_loaddll.32
                0x00000000c0010b14                Sys::loadDLL(regs*)
 .text          0x00000000c0010bbc       0x68 sys/sc_read.32
                0x00000000c0010bbc                Sys::read(regs*)
 .text          0x00000000c0010c24       0x55 sys/sc_sbrk.32
                0x00000000c0010c24                Sys::sbrk(regs*)
 .text          0x00000000c0010c79       0x1c sys/sc_setcwd.32
                0x00000000c0010c79                Sys::setCwd(regs*)
 .text          0x00000000c0010c95       0x95 sys/sc_settime.32
                0x00000000c0010c95                Sys::setTime(regs*)
 .text          0x00000000c0010d2a       0x4a sys/sc_timezone.32
                0x00000000c0010d2a                Sys::timezone(regs*)
 .text          0x00000000c0010d74       0x68 sys/sc_write.32
                0x00000000c0010d74                Sys::write(regs*)
 .text          0x00000000c0010ddc       0x62 sys/sc_wsbe.32
                0x00000000c0010ddc                Sys::wsbe(regs*)
 .text          0x00000000c0010e3e       0x25 sys/sc_yield.32
                0x00000000c0010e3e                Sys::yield(regs*)
 .text          0x00000000c0010e63      0xe2c sys/syscalls.32
                0x00000000c0010e63                sysCallSeekDir(regs*)
                0x00000000c0010e68                sysCallTellDir(regs*)
                0x00000000c0010e6d                sysCallVerify(regs*)
                0x00000000c0010e77                sysCallGetArgc(regs*)
                0x00000000c0010e87                sysCallTTYName(regs*)
                0x00000000c0010e8f                sysFormatDisk(regs*)
                0x00000000c0010efc                sysSetDiskVolumeLabel(regs*)
                0x00000000c0010f46                sysGetDiskVolumeLabel(regs*)
                0x00000000c0010f9b                sysShutdown(regs*)
                0x00000000c0010ff9                sysCallRealpath(regs*)
                0x00000000c001103c                sysCallReadDir(regs*)
                0x00000000c00110bc                sysCallIsATTY(regs*)
                0x00000000c0011118                sysCallSeek(regs*)
                0x00000000c0011171                sysCallTell(regs*)
                0x00000000c00111e0                sysCallSize(regs*)
                0x00000000c0011255                sysCallSizeFromFilename(regs*)
                0x00000000c0011308                sysCallClose(regs*)
                0x00000000c0011368                sysCallOpenDir(regs*)
                0x00000000c00113df                sysCallCloseDir(regs*)
                0x00000000c0011433                sysCallMakeDir(regs*)
                0x00000000c00114a5                sysCallWait(regs*)
                0x00000000c00114c2                sysCallNotImpl(regs*)
                0x00000000c00114dd                sysPanic(regs*)
                0x00000000c00114f8                sysCallRmdir(regs*)
                0x00000000c001155f                sysCallUnlink(regs*)
                0x00000000c00115c6                sysCallGetArgv(regs*)
                0x00000000c0011613                sysCallUSleep(regs*)
                0x00000000c001163c                sysCallSpawn(regs*)
                0x00000000c00116a5                sysCallGetEnv(regs*)
                0x00000000c0011754                sysSetFatAttrib(regs*)
                0x00000000c00117cb                sysPipe(regs*)
                0x00000000c0011810                sysGetUnixTime(regs*)
                0x00000000c0011824                string_ends_with(char const*, char const*)
                0x00000000c001186e                sysCallOpen(regs*)
                0x00000000c0011a62                Sys::loadSyscalls()
                0x00000000c0011c4d                Sys::systemCall(regs*, void*)
 .text          0x00000000c0011c8f     0x11e5 thr/elf.32
                0x00000000c0011c8f                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0011f1b                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0012131                Thr::runtimeReferenceHelper()
                0x00000000c0012144                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0012193                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0012451                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012b87                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012bb9                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012bf0                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012c0a                Thr::loadDLL(char const*, bool)
                0x00000000c0012e3b                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0012e74     0x12c5 thr/prcssthr.32
                0x00000000c0012e74                userModeEntryPoint(void*)
                0x00000000c0012e9c                changeTSS
                0x00000000c0012ecc                switchToThread(ThreadControlBlock*)
                0x00000000c0012f80                Process::addArgs(char**)
                0x00000000c0012fe0                Process::Process(char const*, Process*, char**)
                0x00000000c0012fe0                Process::Process(char const*, Process*, char**)
                0x00000000c00131d0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00131d0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001338c                taskStartupFunction
                0x00000000c0013398                Semaphore::Semaphore(int)
                0x00000000c0013398                Semaphore::Semaphore(int)
                0x00000000c00133c8                Mutex::Mutex()
                0x00000000c00133c8                Mutex::Mutex()
                0x00000000c00133dc                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00134d4                Process::createUserThread()
                0x00000000c00134f4                setupMultitasking(void (*)())
                0x00000000c00135fc                schedule()
                0x00000000c001368c                Semaphore::tryAcquire()
                0x00000000c0013758                Semaphore::assertLocked(char const*)
                0x00000000c00137d0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00137f8                blockTask(TaskState)
                0x00000000c0013828                waitTask(int, int*, int)
                0x00000000c001386c                milliTenthSleepUntil(unsigned int)
                0x00000000c00138fc                milliTenthSleep(unsigned int)
                0x00000000c001390c                sleep(unsigned int)
                0x00000000c0013928                Semaphore::acquire()
                0x00000000c00139e4                taskReturned
                0x00000000c0013a20                Thr::processFromPID(int)
                0x00000000c0013ac0                unblockTask(ThreadControlBlock*)
                0x00000000c0013b64                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0013e30                cleanerTaskFunction(void*)
                0x00000000c0013f20                terminateTask(int)
                0x00000000c0013fec                Thr::terminateFromIRQ(int)
                0x00000000c0013ffc                Semaphore::release()
 .text          0x00000000c0014139      0xb93 vm86/vm8086.32
                0x00000000c0014139                Vm::inbv(unsigned short)
                0x00000000c001414c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0014182                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0014192                Vm::getSegment(unsigned int)
                0x00000000c001419a                Vm::getOffset(unsigned int)
                0x00000000c001419f                Vm::mainloop2()
                0x00000000c00141d9                Vm::mainVm8086Loop(void*)
                0x00000000c00141e9                Vm::mainloop3(unsigned long)
                0x00000000c001420f                Vm::initialise8086()
                0x00000000c0014252                Vm::finish8086()
                0x00000000c00142b3                Vm::getOutput8086(unsigned char*)
                0x00000000c00142d8                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014391                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00144f9                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0014583                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0014594                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00145a6                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00145b7                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00145cc                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00145e2                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00145f7                Vm::faultHandler(regs*)
 .text          0x00000000c0014ccc      0x8e9 arch/i386/hal.32
                0x00000000c0014ccc                noCopro(unsigned long)
                0x00000000c0014ccd                nmiHandler(regs*, void*)
                0x00000000c0014ce6                doubleFault(regs*, void*)
                0x00000000c0014cff                displayDebugInfo(regs*)
                0x00000000c0015020                displayProgramFault(char const*)
                0x00000000c001506c                gpFault(regs*, void*)
                0x00000000c00150d1                pgFault(regs*, void*)
                0x00000000c0015157                otherISRHandler(regs*, void*)
                0x00000000c001518b                opcodeFault(regs*, void*)
                0x00000000c001520b                i386SaveCoprocessor(void*)
                0x00000000c001521f                i386LoadCoprocessor(void*)
                0x00000000c0015233                x87EmulHandler(regs*, void*)
                0x00000000c00152d0                HalInitialiseCoprocessor()
                0x00000000c001537e                HalPanic(char const*)
                0x00000000c0015383                HalQueryPerformanceCounter()
                0x00000000c001539e                HalInitialise()
                0x00000000c0015544                HalMakeBeep(int)
                0x00000000c001557e                HalGetRand()
                0x00000000c0015581                HalEndOfInterrupt(int)
                0x00000000c00155b2                HalRestart()
                0x00000000c00155b3                HalShutdown()
                0x00000000c00155b4                HalSleep()
 *fill*         0x00000000c00155b5        0x3 
 .text          0x00000000c00155b8      0x2f4 arch/i386/pic.32
                0x00000000c00155b8                picIoWait()
                0x00000000c00155c0                picDisable()
                0x00000000c00155f4                picGetIRQReg(int)
                0x00000000c0015678                picOpen()
                0x00000000c0015808                picEOI(int)
 .text          0x00000000c00158ac      0x64d arch/i386/rtc.32
                0x00000000c00158ac                RTC::open(int, int, void*)
                0x00000000c00158b0                RTC::close(int, int, void*)
                0x00000000c00158b4                RTC::timeInSecondsUTC()
                0x00000000c00158c6                RTC::timeInDatetimeUTC()
                0x00000000c00158ec                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001592a                RTC::~RTC()
                0x00000000c001592a                RTC::~RTC()
                0x00000000c001594e                RTC::~RTC()
                0x00000000c0015978                RTC::get_update_in_progress_flag()
                0x00000000c0015990                RTC::completeRTCRefresh()
                0x00000000c0015c48                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0015dfb                rtcIRQHandler(regs*, void*)
                0x00000000c0015e40                RTC::RTC()
                0x00000000c0015e40                RTC::RTC()
 *fill*         0x00000000c0015ef9        0x3 
 .text          0x00000000c0015efc      0x203 arch/i386/vga.32
                0x00000000c0015efc                HalConsoleScroll(int, int)
                0x00000000c0016004                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016070                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00160ff        0x1 
 .text          0x00000000c0016100     0x13e7 fs/fat/vfslink.32
                0x00000000c0016100                FAT::getName()
                0x00000000c0016108                FAT::tell(void*, unsigned long long*)
                0x00000000c0016144                FAT::stat(void*, unsigned long long*)
                0x00000000c0016180                FAT::~FAT()
                0x00000000c0016180                FAT::~FAT()
                0x00000000c00161a4                FAT::~FAT()
                0x00000000c00161cc                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016270                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0016334                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0016508                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016720                FAT::allocateSwapfile(char const*, int)
                0x00000000c00168e0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016a4c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016aac                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016b0c                FAT::close(void*)
                0x00000000c0016b60                FAT::closeDir(void*)
                0x00000000c0016bb4                FAT::seek(void*, unsigned long long)
                0x00000000c0016c0c                fatWrapperReadDisk
                0x00000000c0016c50                fatWrapperWriteDisk
                0x00000000c0016c94                fatWrapperIoctl
                0x00000000c0016db0                FAT::FAT()
                0x00000000c0016db0                FAT::FAT()
                0x00000000c0016e04                FAT::fixFilepath(char*)
                0x00000000c0016e40                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0016f78                FAT::openDir(char const*, void**)
                0x00000000c0017028                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017120                FAT::unlink(char const*)
                0x00000000c00171a0                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001732c                FAT::rename(char const*, char const*)
                0x00000000c00173f8                FAT::mkdir(char const*)
                0x00000000c0017478                FAT::exists(char const*)
 *fill*         0x00000000c00174e7        0x1 
 .text          0x00000000c00174e8       0x5c fs/iso9660/helper.32
                0x00000000c00174e8                isoReadDiscSectorHelper
 .text          0x00000000c0017544      0xc1b fs/iso9660/vfslink.32
                0x00000000c0017544                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001754a                ISO9660::seek(void*, unsigned long long)
                0x00000000c001757a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001759e                ISO9660::getName()
                0x00000000c00175a4                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00175c8                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00175ce                ISO9660::unlink(char const*)
                0x00000000c00175d4                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00175da                ISO9660::rename(char const*, char const*)
                0x00000000c00175e0                ISO9660::mkdir(char const*)
                0x00000000c00175e6                ISO9660::close(void*)
                0x00000000c0017608                ISO9660::closeDir(void*)
                0x00000000c001762a                ISO9660::~ISO9660()
                0x00000000c001762a                ISO9660::~ISO9660()
                0x00000000c001764e                ISO9660::~ISO9660()
                0x00000000c0017675                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c00176b7                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017742                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c00177a2                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c00179a6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017c1e                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0017c8d                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c0017e76                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c0017f28                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017fea                ISO9660::exists(char const*)
                0x00000000c001800e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c00180a2                ISO9660::openDir(char const*, void**)
                0x00000000c001813c                ISO9660::ISO9660()
                0x00000000c001813c                ISO9660::ISO9660()
 *fill*         0x00000000c001815f        0x1 
 .text          0x00000000c0018160      0x26c hal/sound/sndcard.32
                0x00000000c0018160                SoundCard::beginPlayback()
                0x00000000c001816e                SoundCard::stopPlayback()
                0x00000000c001817c                SoundCard::SoundCard(char const*)
                0x00000000c001817c                SoundCard::SoundCard(char const*)
                0x00000000c001821a                SoundCard::~SoundCard()
                0x00000000c001821a                SoundCard::~SoundCard()
                0x00000000c001823e                SoundCard::~SoundCard()
                0x00000000c0018268                SoundCard::configureRates(int, int, int)
                0x00000000c0018298                SoundCard::getSamples16(int, short*)
                0x00000000c00182f4                SoundCard::getSamples32(int, int*)
                0x00000000c001837a                SoundCard::addChannel(SoundPort*)
                0x00000000c00183b8                SoundCard::removeChannel(int)
 .text          0x00000000c00183cc      0x377 hal/sound/sndport.32
                0x00000000c00183cc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00183cc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018458                SoundPort::~SoundPort()
                0x00000000c0018458                SoundPort::~SoundPort()
                0x00000000c001848c                SoundPort::unpause()
                0x00000000c0018498                SoundPort::pause()
                0x00000000c00184a4                SoundPort::getBufferUsed()
                0x00000000c00184ac                SoundPort::getBufferSize()
                0x00000000c00184b4                SoundPort::buffer16(short*, int)
                0x00000000c0018540                SoundPort::buffer32(int*, int)
                0x00000000c00185c8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001868c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0018743        0x0 hw/bus/isa.32
 *fill*         0x00000000c0018743        0x1 
 .text          0x00000000c0018744      0xb49 hw/bus/pci.32
                0x00000000c0018744                PCI::open(int, int, void*)
                0x00000000c0018762                PCI::close(int, int, void*)
                0x00000000c0018766                PCI::PCI()
                0x00000000c0018766                PCI::PCI()
                0x00000000c0018800                PCI::readBAR8(unsigned int, int)
                0x00000000c001881c                PCI::readBAR16(unsigned int, int)
                0x00000000c001883a                PCI::readBAR32(unsigned int, int)
                0x00000000c0018856                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0018876                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0018898                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c00188b8                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018926                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00189ce                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c00189f2                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0018a1a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018a64                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0018a8c                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018ab0                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018ad4                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018afc                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018b60                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018c48                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018ec2                PCI::checkBus(unsigned char)
                0x00000000c0018ee8                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001905a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c00191ce                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001923a                PCI::detect()
 *fill*         0x00000000c001928d        0x1 
 .text          0x00000000c001928e      0xb5a hw/diskctrl/ide.32
                0x00000000c001928e                IDE::close(int, int, void*)
                0x00000000c0019292                IDE::IDE()
                0x00000000c0019292                IDE::IDE()
                0x00000000c00192c6                IDE::prepareInterrupt(unsigned char)
                0x00000000c00192d8                selectDrive(unsigned char, unsigned char)
                0x00000000c00192da                IDE::getBase(unsigned char)
                0x00000000c00192ec                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c00193ac                IDE::read(unsigned char, unsigned char)
                0x00000000c001945a                IDE::waitInterrupt(unsigned char)
                0x00000000c00194c2                ideChannel0IRQHandler(regs*, void*)
                0x00000000c00194de                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00194fa                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019540                IDE::open(int, int, void*)
                0x00000000c001994e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0019a1a                IDE::detect()
                0x00000000c0019cda                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019d8a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019de8      0x32a hw/diskctrl/satabus.32
                0x00000000c0019de8                SATABus::close(int, int, void*)
                0x00000000c0019dec                SATABus::detect()
                0x00000000c0019dee                SATABus::SATABus()
                0x00000000c0019dee                SATABus::SATABus()
                0x00000000c0019e74                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019ea6                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019eee                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019f0e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019f38                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001a048                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001a0f2                SATABus::open(int, int, void*)
 .text          0x00000000c001a112      0x5f4 hw/diskphys/ata.32
                0x00000000c001a112                ATA::close(int, int, void*)
                0x00000000c001a136                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001a138                ATA::ATA()
                0x00000000c001a138                ATA::ATA()
                0x00000000c001a166                ATA::flush(bool)
                0x00000000c001a1b0                ATA::readyForCommand()
                0x00000000c001a1fc                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a578                ATA::read(unsigned long long, int, void*)
                0x00000000c001a5c4                ATA::write(unsigned long long, int, void*)
                0x00000000c001a610                ATA::detectCHS()
                0x00000000c001a63a                ATA::open(int, int, void*)
 .text          0x00000000c001a706      0x60e hw/diskphys/atapi.32
                0x00000000c001a706                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a70c                ATAPI::close(int, int, void*)
                0x00000000c001a730                ATAPI::ATAPI()
                0x00000000c001a730                ATAPI::ATAPI()
                0x00000000c001a75e                ATAPI::readyForCommand()
                0x00000000c001a7b0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001aa70                ATAPI::diskRemoved()
                0x00000000c001aaaa                ATAPI::eject()
                0x00000000c001aaf2                ATAPI::diskInserted()
                0x00000000c001aafe                ATAPI::detectMedia()
                0x00000000c001abba                ATAPI::open(int, int, void*)
                0x00000000c001ac9a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ad14      0x402 hw/diskphys/sata.32
                0x00000000c001ad14                SATA::close(int, int, void*)
                0x00000000c001ad38                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ad3a                SATA::open(int, int, void*)
                0x00000000c001ade4                SATA::SATA()
                0x00000000c001ade4                SATA::SATA()
                0x00000000c001ae12                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001b05e                SATA::read(unsigned long long, int, void*)
                0x00000000c001b0aa                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001b116      0x5b9 hw/diskphys/satapi.32
                0x00000000c001b116                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001b11c                SATAPI::close(int, int, void*)
                0x00000000c001b140                SATAPI::open(int, int, void*)
                0x00000000c001b238                SATAPI::SATAPI()
                0x00000000c001b238                SATAPI::SATAPI()
                0x00000000c001b266                SATAPI::diskRemoved()
                0x00000000c001b268                SATAPI::diskInserted()
                0x00000000c001b284                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b560                SATAPI::eject()
                0x00000000c001b59c                SATAPI::read(unsigned long long, int, void*)
                0x00000000c001b6ce                SATAPI::detectMedia()
 *fill*         0x00000000c001b6cf        0x1 
 .text          0x00000000c001b6d0      0x455 hw/intctrl/apic.32
                0x00000000c001b6d0                IOAPIC::close(int, int, void*)
                0x00000000c001b6d6                apicGetBase()
                0x00000000c001b718                IOAPIC::IOAPIC()
                0x00000000c001b718                IOAPIC::IOAPIC()
                0x00000000c001b740                apicOpen()
                0x00000000c001b8a6                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b8d8                IOAPIC::read(int)
                0x00000000c001b900                IOAPIC::open(int, int, void*)
                0x00000000c001b9f4                IOAPIC::write(int, int)
                0x00000000c001ba20                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001bb25        0x3 
 .text          0x00000000c001bb28       0xf0 hw/timer/apictimer.32
                0x00000000c001bb28                APICTimer::close(int, int, void*)
                0x00000000c001bb30                apicTimerHandler(regs*, void*)
                0x00000000c001bb58                APICTimer::open(int, int, void*)
                0x00000000c001bbc8                APICTimer::write(int)
                0x00000000c001bbf0                APICTimer::APICTimer()
                0x00000000c001bbf0                APICTimer::APICTimer()
 .text          0x00000000c001bc18      0x1aa hw/timer/pit.32
                0x00000000c001bc18                PIT::write(int)
                0x00000000c001bc9c                pitHandler(regs*, void*)
                0x00000000c001bcc0                PIT::open(int, int, void*)
                0x00000000c001bd10                PIT::close(int, int, void*)
                0x00000000c001bd40                PIT::PIT()
                0x00000000c001bd40                PIT::PIT()
 *fill*         0x00000000c001bdc2        0xe 
 .text          0x00000000c001bdd0       0x83 arch/i386/avx.32
                0x00000000c001bdd0                avxDetect
                0x00000000c001bdfa                avxSave
                0x00000000c001be0b                avxLoad
                0x00000000c001be1c                avxInit
                0x00000000c001be3e                avxClose
                0x00000000c001be3f                wouldSheSayYes
 *fill*         0x00000000c001be53        0xd 
 .text          0x00000000c001be60      0x1d6 arch/i386/interrupt.32
                0x00000000c001be60                isr0
                0x00000000c001be70                isr1
                0x00000000c001be7a                isr2
                0x00000000c001be84                isr3
                0x00000000c001be8e                isr4
                0x00000000c001be98                isr5
                0x00000000c001bea2                isr6
                0x00000000c001beac                isr7
                0x00000000c001beb6                isr8
                0x00000000c001bebe                isr9
                0x00000000c001bec8                isr10
                0x00000000c001bed0                isr11
                0x00000000c001bed8                isr12
                0x00000000c001bee0                isr13
                0x00000000c001bee8                isr14
                0x00000000c001bef0                isr15
                0x00000000c001befa                isr16
                0x00000000c001bf04                isr17
                0x00000000c001bf0e                isr18
                0x00000000c001bf18                irq3
                0x00000000c001bf22                irq4
                0x00000000c001bf2c                irq5
                0x00000000c001bf36                irq6
                0x00000000c001bf40                irq7
                0x00000000c001bf4a                irq8
                0x00000000c001bf54                irq9
                0x00000000c001bf5e                irq10
                0x00000000c001bf68                irq11
                0x00000000c001bf72                irq12
                0x00000000c001bf7c                irq13
                0x00000000c001bf86                irq14
                0x00000000c001bf90                irq15
                0x00000000c001bf9a                irq1
                0x00000000c001bfa1                irq2
                0x00000000c001bfa8                isr96
                0x00000000c001bfaf                irq0
                0x00000000c001bfb4                int_common_stub
                0x00000000c001bfb4                syscall_common_stub
                0x00000000c001bfe6                irq16
                0x00000000c001bff0                irq17
                0x00000000c001bffa                irq18
                0x00000000c001c004                irq19
                0x00000000c001c00e                irq20
                0x00000000c001c018                irq21
                0x00000000c001c022                irq22
                0x00000000c001c02c                irq23
 *fill*         0x00000000c001c036        0xa 
 .text          0x00000000c001c040       0x10 arch/i386/rdrand.32
                0x00000000c001c040                i386GetRDRAND
 .text          0x00000000c001c050       0x39 arch/i386/sse.32
                0x00000000c001c050                absolutelyNoChanceInHell
                0x00000000c001c050                sseDetect
                0x00000000c001c068                sseSave
                0x00000000c001c070                sseLoad
                0x00000000c001c078                sseInit
                0x00000000c001c088                sseClose
 *fill*         0x00000000c001c089        0x7 
 .text          0x00000000c001c090       0x49 arch/i386/x87.32
                0x00000000c001c096                x87Detect
                0x00000000c001c0b1                x87Save
                0x00000000c001c0b8                x87Load
                0x00000000c001c0bf                x87Init
                0x00000000c001c0d8                x87Close
 *fill*         0x00000000c001c0d9        0x3 
 .text          0x00000000c001c0dc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001c101        0x0 crtn.32
 *fill*         0x00000000c001c101        0x3 
 .text          0x00000000c001c104      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001c104                __divdi3
 *fill*         0x00000000c001c24f        0x1 
 .text          0x00000000c001c250      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c250                __moddi3
 *fill*         0x00000000c001c3ce        0x2 
 .text          0x00000000c001c3d0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c3d0                __udivdi3
 *fill*         0x00000000c001c4cf        0x1 
 .text          0x00000000c001c4d0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c4d0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c5f0        0x0
 .iplt          0x00000000c001c5f0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c5ea        0xf
 .init          0x00000000c001c5ea        0x3 crti.32
                0x00000000c001c5ea                _init
 .init          0x00000000c001c5ed        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c5f2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c5f7        0x2 crtn.32

.fini           0x00000000c001c5f9        0xa
 .fini          0x00000000c001c5f9        0x3 crti.32
                0x00000000c001c5f9                _fini
 .fini          0x00000000c001c5fc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c601        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c604       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c604       0x23 core/computer.32
                0x00000000c001c604                Computer::~Computer()
                0x00000000c001c604                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c628       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c628       0x2a core/computer.32
                0x00000000c001c628                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c652       0x21
 .text._Z10idleCommonv
                0x00000000c001c652       0x21 core/idle.32
                0x00000000c001c652                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c674        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c674        0x2 core/unixfile.32
                0x00000000c001c674                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c674                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c676       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c676       0x42 core/unixfile.32
                0x00000000c001c676                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c676                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c6b8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c6b8       0xd3 core/unixfile.32
                0x00000000c001c6b8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c78c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c78c        0x7 core/unixfile.32
                0x00000000c001c78c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c794       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c794       0xa1 core/unixfile.32
                0x00000000c001c794                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c836        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c836        0x8 core/unixfile.32
                0x00000000c001c836                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c83e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c83e       0x1a hal/device.32
                0x00000000c001c83e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c83e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c858       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c858       0x2a hal/device.32
                0x00000000c001c858                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c882       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c882       0xdc hal/device.32
                0x00000000c001c882                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c95e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c95e       0x42 hal/device.32
                0x00000000c001c95e                LinkedList<Device>::LinkedList()
                0x00000000c001c95e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c9a0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c9a0       0x1c hal/timer.32
                0x00000000c001c9a0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c9bc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c9bc        0x7 hal/timer.32
                0x00000000c001c9bc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c9c4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c9c4       0xb8 hal/timer.32
                0x00000000c001c9c4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ca7c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ca7c       0xda hal/timer.32
                0x00000000c001ca7c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001cb58       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001cb58       0x23 hw/acpi.32
                0x00000000c001cb58                ACPI::~ACPI()
                0x00000000c001cb58                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001cb7c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001cb7c       0x2a hw/acpi.32
                0x00000000c001cb7c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001cba8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001cba8        0x2 hw/acpi.32
                0x00000000c001cba8                LinkedList<Device>::~LinkedList()
                0x00000000c001cba8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001cbac       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001cbac       0x1c hw/acpi.32
                0x00000000c001cbac                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001cbc8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001cbc8        0x7 hw/acpi.32
                0x00000000c001cbc8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001cbd0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001cbd0       0xb8 hw/acpi.32
                0x00000000c001cbd0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001cc88       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001cc88       0x23 hw/cpu.32
                0x00000000c001cc88                CPU::~CPU()
                0x00000000c001cc88                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ccac       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ccac       0x2a hw/cpu.32
                0x00000000c001ccac                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ccd8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ccd8        0x2 thr/prcssthr.32
                0x00000000c001ccd8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ccd8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ccdc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ccdc       0x49 thr/prcssthr.32
                0x00000000c001ccdc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ccdc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cd28       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cd28       0x42 thr/prcssthr.32
                0x00000000c001cd28                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001cd28                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cd6c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cd6c        0x8 thr/prcssthr.32
                0x00000000c001cd6c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cd74       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cd74       0x23 hw/bus/pci.32
                0x00000000c001cd74                PCI::~PCI()
                0x00000000c001cd74                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cd98       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cd98       0x2a hw/bus/pci.32
                0x00000000c001cd98                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cdc2       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cdc2       0x23 hw/diskctrl/ide.32
                0x00000000c001cdc2                IDE::~IDE()
                0x00000000c001cdc2                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cde6       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cde6       0x2a hw/diskctrl/ide.32
                0x00000000c001cde6                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001ce10       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001ce10       0x23 hw/diskctrl/satabus.32
                0x00000000c001ce10                SATABus::~SATABus()
                0x00000000c001ce10                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001ce34       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001ce34       0x2a hw/diskctrl/satabus.32
                0x00000000c001ce34                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001ce5e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001ce5e       0x23 hw/diskphys/ata.32
                0x00000000c001ce5e                ATA::~ATA()
                0x00000000c001ce5e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001ce82       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001ce82       0x2a hw/diskphys/ata.32
                0x00000000c001ce82                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001ceac       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001ceac       0x23 hw/diskphys/atapi.32
                0x00000000c001ceac                ATAPI::~ATAPI()
                0x00000000c001ceac                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001ced0       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001ced0       0x2a hw/diskphys/atapi.32
                0x00000000c001ced0                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cefa       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cefa       0x23 hw/diskphys/sata.32
                0x00000000c001cefa                SATA::~SATA()
                0x00000000c001cefa                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cf1e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cf1e       0x2a hw/diskphys/sata.32
                0x00000000c001cf1e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cf48       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cf48       0x23 hw/diskphys/satapi.32
                0x00000000c001cf48                SATAPI::~SATAPI()
                0x00000000c001cf48                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cf6c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cf6c       0x2a hw/diskphys/satapi.32
                0x00000000c001cf6c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cf96       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cf96       0x23 hw/intctrl/apic.32
                0x00000000c001cf96                IOAPIC::~IOAPIC()
                0x00000000c001cf96                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cfba       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cfba       0x2a hw/intctrl/apic.32
                0x00000000c001cfba                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001cfe4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001cfe4       0x23 hw/timer/apictimer.32
                0x00000000c001cfe4                APICTimer::~APICTimer()
                0x00000000c001cfe4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001d008       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001d008       0x2a hw/timer/apictimer.32
                0x00000000c001d008                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001d034       0x23
 .text._ZN3PITD2Ev
                0x00000000c001d034       0x23 hw/timer/pit.32
                0x00000000c001d034                PIT::~PIT()
                0x00000000c001d034                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001d058       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001d058       0x2a hw/timer/pit.32
                0x00000000c001d058                PIT::~PIT()

.rodata         0x00000000c001d082     0x284e
                0x00000000c001d082                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001d082        0x2 
 .ctors         0x00000000c001d084        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001d088        0x4 core/unixfile.32
 .ctors         0x00000000c001d08c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001d090        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001d094                end_ctors = .
                0x00000000c001d094                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001d094        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001d098        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001d098                __DTOR_END__
                0x00000000c001d09c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001d09c        0x4 
 .rodata        0x00000000c001d0a0      0x101 acpica/utclib.32
                0x00000000c001d0a0                AcpiGbl_Ctypes
 *fill*         0x00000000c001d1a1        0x3 
 .rodata        0x00000000c001d1a4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001d1bc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d206       0x1a 
 .rodata        0x00000000c001d220       0xed fs/fat/ff.32
 *fill*         0x00000000c001d30d       0x13 
 .rodata        0x00000000c001d320      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d720       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d731       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001d77a      0x115 core/computer.32
 *fill*         0x00000000c001d88f        0x1 
 .rodata.str1.4
                0x00000000c001d890       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d8f8       0x2c core/computer.32
                0x00000000c001d8f8                vtable for Computer
 .rodata.str1.4
                0x00000000c001d924       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d954        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d960       0x17 core/main.32
 *fill*         0x00000000c001d977        0x1 
 .rodata.str1.4
                0x00000000c001d978       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001da1d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001da75       0x39 core/pipe.32
 *fill*         0x00000000c001daae        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001dab0       0x1c core/pipe.32
                0x00000000c001dab0                vtable for Pipe
 .rodata.str1.1
                0x00000000c001dacc       0x69 core/terminal.32
 *fill*         0x00000000c001db35        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001db38       0x1c core/terminal.32
                0x00000000c001db38                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001db54       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001db76       0x15 core/unixfile.32
 *fill*         0x00000000c001db8b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001db8c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001dbd7        0x8 core/unixfile.32
 *fill*         0x00000000c001dbdf        0x1 
 .rodata.str1.4
                0x00000000c001dbe0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001dc00       0x1c core/unixfile.32
                0x00000000c001dc00                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001dc1c       0x1c core/unixfile.32
                0x00000000c001dc1c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001dc38      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dd9f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dea6       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001ded9       0x11 dbg/kconsole.32
 *fill*         0x00000000c001ded9        0x3 
 .rodata        0x00000000c001dedc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001e02c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001e02c       0x68 fs/vfs.32
                0x00000000c001e02c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001e094       0x1c fs/vfs.32
                0x00000000c001e094                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001e0b0       0x1c fs/vfs.32
                0x00000000c001e0b0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001e0cc       0x2c hal/bus.32
                0x00000000c001e0cc                vtable for Bus
 .rodata.str1.1
                0x00000000c001e0f8       0x1e hal/clock.32
 *fill*         0x00000000c001e116        0x2 
 .rodata._ZTV5Clock
                0x00000000c001e118       0x3c hal/clock.32
                0x00000000c001e118                vtable for Clock
 *fill*         0x00000000c001e154        0xc 
 .rodata        0x00000000c001e160       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001e190       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001e1e8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001e1e8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001e1e8       0x2c hal/device.32
                0x00000000c001e1e8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001e214       0x2c hal/device.32
                0x00000000c001e214                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e240       0x2c hal/diskctrl.32
                0x00000000c001e240                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e26c       0x38 hal/diskphys.32
                0x00000000c001e26c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e2a4       0x3e hal/intctrl.32
 *fill*         0x00000000c001e2e2        0x2 
 .rodata.str1.4
                0x00000000c001e2e4       0x5d hal/intctrl.32
 .rodata        0x00000000c001e341       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e394       0x34 hal/keybrd.32
                0x00000000c001e394                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e3c8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e40c       0x2c hal/logidisk.32
                0x00000000c001e40c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e438       0x2c hal/mouse.32
                0x00000000c001e438                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e464        0xb hal/partition.32
 *fill*         0x00000000c001e46f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e470       0x44 hal/serial.32
                0x00000000c001e470                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e4b4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e4b4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e4b4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e4b4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e4b4       0x30 hal/timer.32
                0x00000000c001e4b4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e4e4       0x10 hal/vcache.32
                0x00000000c001e4e4                vtable for VCache
 .rodata.str1.1
                0x00000000c001e4f4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e55c       0x48 hal/video.32
                0x00000000c001e55c                vtable for Video
 .rodata.str1.4
                0x00000000c001e5a4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e63f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e77b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e77b        0x8 hw/acpi.32
 *fill*         0x00000000c001e77b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e77c       0x2c hw/acpi.32
                0x00000000c001e77c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e7a8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e915        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e918       0x2c hw/cpu.32
                0x00000000c001e918                vtable for CPU
 .rodata.str1.1
                0x00000000c001e944       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e980       0x3d krnl/panic.32
                                         0x3e (size before relaxing)
 *fill*         0x00000000c001e9bd        0x3 
 .rodata.str1.4
                0x00000000c001e9c0       0x3a krnl/panic.32
 .rodata.str1.1
                0x00000000c001e9fa       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001ea3f        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001ea49       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001ea9d       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001eac9       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001eb11      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001ecdd       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001ed34      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ee40       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ee40       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ee40       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ee40        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001ee40       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001eee0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ef10      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001f01e        0x2 
 .rodata.str1.4
                0x00000000c001f020       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001f093       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001f0a8       0x3c arch/i386/rtc.32
                0x00000000c001f0a8                vtable for RTC
 .rodata.str1.1
                0x00000000c001f0e4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f125        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f128       0x68 fs/fat/vfslink.32
                0x00000000c001f128                vtable for FAT
 .rodata.str1.1
                0x00000000c001f190       0x6e fs/iso9660/vfslink.32
 *fill*         0x00000000c001f1fe        0x2 
 .rodata._ZTV7ISO9660
                0x00000000c001f200       0x68 fs/iso9660/vfslink.32
                0x00000000c001f200                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f268       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f2ac       0x34 hal/sound/sndcard.32
                0x00000000c001f2ac                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f2e0       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f31f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f357       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f3f8       0x2c hw/bus/pci.32
                0x00000000c001f3f8                vtable for PCI
 .rodata.str1.1
                0x00000000c001f424       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f4ab        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f4ac       0x2c hw/diskctrl/ide.32
                0x00000000c001f4ac                vtable for IDE
 .rodata.str1.4
                0x00000000c001f4d8       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f4fc       0x2c hw/diskctrl/satabus.32
                0x00000000c001f4fc                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f528       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f53a        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f53c       0x38 hw/diskphys/ata.32
                0x00000000c001f53c                vtable for ATA
 .rodata.str1.1
                0x00000000c001f574        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f581        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f584       0x38 hw/diskphys/atapi.32
                0x00000000c001f584                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f5bc       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f638       0x38 hw/diskphys/sata.32
                0x00000000c001f638                vtable for SATA
 .rodata.str1.1
                0x00000000c001f670      0x158 hw/diskphys/satapi.32
                                        0x165 (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f7c8       0x38 hw/diskphys/satapi.32
                0x00000000c001f7c8                vtable for SATAPI
 .rodata        0x00000000c001f800        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f808       0x2c hw/intctrl/apic.32
                0x00000000c001f808                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f834       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f84f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f850       0x30 hw/timer/apictimer.32
                0x00000000c001f850                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f880       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f89d        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f8a0       0x30 hw/timer/pit.32
                0x00000000c001f8a0                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f8d0      0x265
 *(.data)
 .data          0x00000000c001f8d0        0x0 crti.32
 .data          0x00000000c001f8d0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f8d0                __dso_handle
 .data          0x00000000c001f8d4        0x0 acpica/utclib.32
 .data          0x00000000c001f8d4        0x0 core/malloc.32
 .data          0x00000000c001f8d4        0x0 libk/ctype.32
 .data          0x00000000c001f8d4        0x0 libk/string.32
 .data          0x00000000c001f8d4        0x0 fs/fat/diskio.32
 .data          0x00000000c001f8d4        0x0 fs/fat/ff.32
 .data          0x00000000c001f8d4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f8d4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f8d4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f8d4        0x0 compat/inlines.32
 .data          0x00000000c001f8d4        0x0 compat/resolve.32
 .data          0x00000000c001f8d4        0x0 core/computer.32
 .data          0x00000000c001f8d4        0x0 core/gdt.32
 .data          0x00000000c001f8d4        0x0 core/idle.32
 .data          0x00000000c001f8d4        0x0 core/idt.32
 .data          0x00000000c001f8d4        0x4 core/kheap.32
 *fill*         0x00000000c001f8d8        0x8 
 .data          0x00000000c001f8e0      0x142 core/main.32
                0x00000000c001f8e0                titleScreen
 *fill*         0x00000000c001fa22        0x2 
 .data          0x00000000c001fa24        0x4 core/physmgr.32
                0x00000000c001fa24                Phys::bitmap
 .data          0x00000000c001fa28        0x0 core/pipe.32
 *fill*         0x00000000c001fa28       0x18 
 .data          0x00000000c001fa40       0x60 core/terminal.32
                0x00000000c001fa40                VgaText::hiddenOut
                0x00000000c001fa60                ansiToVGAMappings
 .data          0x00000000c001faa0        0x0 core/tss.32
 .data          0x00000000c001faa0        0x4 core/unixfile.32
                0x00000000c001faa0                UnixFile::nextFd
 .data          0x00000000c001faa4       0x15 core/virtmgr.32
                0x00000000c001faa4                Virt::pageAllocPtr
                0x00000000c001faa8                Virt::bitmap
                0x00000000c001faac                Virt::swapfileSectorsPerPage
                0x00000000c001fab0                Virt::swapfileLength
                0x00000000c001fab4                Virt::swapfileSector
                0x00000000c001fab8                Virt::swapfileDrive
 *fill*         0x00000000c001fab9        0x3 
 .data          0x00000000c001fabc        0x4 coreobjs/c++.32
                0x00000000c001fabc                __stack_chk_guard
 .data          0x00000000c001fac0        0x0 dbg/kconsole.32
 .data          0x00000000c001fac0        0x0 fs/vfs.32
 .data          0x00000000c001fac0        0x0 hal/bus.32
 .data          0x00000000c001fac0        0x0 hal/buzzer.32
 .data          0x00000000c001fac0        0x0 hal/clock.32
 .data          0x00000000c001fac0        0x0 hal/device.32
 .data          0x00000000c001fac0        0x0 hal/diskctrl.32
 .data          0x00000000c001fac0        0x0 hal/diskphys.32
 .data          0x00000000c001fac0        0x0 hal/fpu.32
 .data          0x00000000c001fac0        0x0 hal/intctrl.32
 .data          0x00000000c001fac0        0x0 hal/keybrd.32
 .data          0x00000000c001fac0        0x0 hal/logidisk.32
 .data          0x00000000c001fac0        0x0 hal/mouse.32
 .data          0x00000000c001fac0        0x0 hal/partition.32
 .data          0x00000000c001fac0        0x0 hal/serial.32
 .data          0x00000000c001fac0        0x0 hal/timer.32
 .data          0x00000000c001fac0        0x0 hal/vcache.32
 .data          0x00000000c001fac0        0x0 hal/video.32
 .data          0x00000000c001fac0       0x10 hw/acpi.32
                0x00000000c001fac0                legacyIRQRemaps
 .data          0x00000000c001fad0        0x4 hw/cpu.32
                0x00000000c001fad0                lastCode
 *fill*         0x00000000c001fad4        0xc 
 .data          0x00000000c001fae0       0x4d krnl/env.32
                0x00000000c001fae0                defaultSysEnv
 .data          0x00000000c001fb2d        0x0 krnl/panic.32
 .data          0x00000000c001fb2d        0x0 krnl/powctrl.32
 .data          0x00000000c001fb2d        0x0 reg/registry.32
 .data          0x00000000c001fb2d        0x0 sys/sc_eject.32
 .data          0x00000000c001fb2d        0x0 sys/sc_exit.32
 .data          0x00000000c001fb2d        0x0 sys/sc_getcwd.32
 .data          0x00000000c001fb2d        0x0 sys/sc_getpid.32
 .data          0x00000000c001fb2d        0x0 sys/sc_getramdata.32
 .data          0x00000000c001fb2d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001fb2d        0x0 sys/sc_loaddll.32
 .data          0x00000000c001fb2d        0x0 sys/sc_read.32
 .data          0x00000000c001fb2d        0x0 sys/sc_sbrk.32
 .data          0x00000000c001fb2d        0x0 sys/sc_setcwd.32
 .data          0x00000000c001fb2d        0x0 sys/sc_settime.32
 .data          0x00000000c001fb2d        0x0 sys/sc_timezone.32
 .data          0x00000000c001fb2d        0x0 sys/sc_write.32
 .data          0x00000000c001fb2d        0x0 sys/sc_wsbe.32
 .data          0x00000000c001fb2d        0x0 sys/sc_yield.32
 .data          0x00000000c001fb2d        0x0 sys/syscalls.32
 .data          0x00000000c001fb2d        0x0 thr/elf.32
 *fill*         0x00000000c001fb2d        0x3 
 .data          0x00000000c001fb30        0x4 thr/prcssthr.32
                0x00000000c001fb30                Thr::nextPID
 .data          0x00000000c001fb34        0x0 vm86/vm8086.32
 .data          0x00000000c001fb34        0x0 arch/i386/hal.32
 .data          0x00000000c001fb34        0x0 arch/i386/pic.32
 .data          0x00000000c001fb34        0x0 arch/i386/rtc.32
 .data          0x00000000c001fb34        0x0 arch/i386/vga.32
 .data          0x00000000c001fb34        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fb34        0x0 fs/iso9660/helper.32
 .data          0x00000000c001fb34        0x1 fs/iso9660/vfslink.32
                0x00000000c001fb34                recentDriveletter
 .data          0x00000000c001fb35        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fb35        0x0 hal/sound/sndport.32
 .data          0x00000000c001fb35        0x0 hw/bus/isa.32
 .data          0x00000000c001fb35        0x0 hw/bus/pci.32
 .data          0x00000000c001fb35        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fb35        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fb35        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fb35        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fb35        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fb35        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fb35        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fb35        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fb35        0x0 hw/timer/pit.32
 .data          0x00000000c001fb35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fb35        0x0 crtn.32
 .data          0x00000000c001fb35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fb35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fb35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fb35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fb38        0x0
 .got           0x00000000c001fb38        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fb38        0x0
 .got.plt       0x00000000c001fb38        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fb38        0x0
 .igot.plt      0x00000000c001fb38        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fb38        0x0
 .tm_clone_table
                0x00000000c001fb38        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fb38        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fb35      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fb35        0x3 
 .eh_frame      0x00000000c001fb38        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fb38        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fb38       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fb90       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fbd0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fc3c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001fcc0        0x0
 .rel.got       0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001fcc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001fcc0     0x4d88
                0x00000000c001fcc0                sbss = .
 *(COMMON)
 COMMON         0x00000000c001fcc0        0x1 fs/iso9660/iso9660.32
                0x00000000c001fcc0                cdDriveLetter
 *(.bss)
 .bss           0x00000000c001fcc1        0x0 crti.32
 *fill*         0x00000000c001fcc1        0x3 
 .bss           0x00000000c001fcc4       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001fce4        0x4 acpica/utclib.32
 *fill*         0x00000000c001fce8       0x18 
 .bss           0x00000000c001fd00      0x378 core/malloc.32
 .bss           0x00000000c0020078        0x0 libk/ctype.32
 .bss           0x00000000c0020078        0x0 libk/string.32
 .bss           0x00000000c0020078        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0020078        0x8 
 .bss           0x00000000c0020080       0x88 fs/fat/ff.32
 .bss           0x00000000c0020108        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0020108        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0020108       0x18 
 .bss           0x00000000c0020120      0xa28 fs/iso9660/iso9660.32
 .bss           0x00000000c0020b48        0x0 compat/inlines.32
 .bss           0x00000000c0020b48        0x0 compat/resolve.32
 .bss           0x00000000c0020b48        0x6 core/computer.32
                0x00000000c0020b48                Krnl::computer
                0x00000000c0020b4c                Krnl::preemptionOn
                0x00000000c0020b4d                Krnl::schedulingOn
 *fill*         0x00000000c0020b4e        0x2 
 .bss           0x00000000c0020b50        0x6 core/gdt.32
                0x00000000c0020b50                gdtDescr
 .bss           0x00000000c0020b56        0x0 core/idle.32
 *fill*         0x00000000c0020b56        0x2 
 .bss           0x00000000c0020b58        0x6 core/idt.32
                0x00000000c0020b58                idtDescr
 .bss           0x00000000c0020b5e        0x0 core/kheap.32
 *fill*         0x00000000c0020b5e        0x2 
 .bss           0x00000000c0020b60        0x4 core/main.32
                0x00000000c0020b60                sysBootSettings
 .bss           0x00000000c0020b64       0x29 core/physmgr.32
                0x00000000c0020b64                Phys::forbidEvictions
                0x00000000c0020b68                Phys::currentPagePointer
                0x00000000c0020b6c                Phys::highestMem
                0x00000000c0020b70                Phys::oldPercent
                0x00000000c0020b74                Phys::usedPages
                0x00000000c0020b78                Phys::usablePages
                0x00000000c0020b7c                Phys::dmaUsage
 .bss           0x00000000c0020b8d        0x0 core/pipe.32
 *fill*         0x00000000c0020b8d        0x3 
 .bss           0x00000000c0020b90        0x9 core/terminal.32
                0x00000000c0020b90                terminalCycle
                0x00000000c0020b94                activeTerminal
                0x00000000c0020b98                VgaText::graphicMode
 *fill*         0x00000000c0020b99        0x1 
 .bss           0x00000000c0020b9a        0x2 core/tss.32
                0x00000000c0020b9a                doubleFaultSelector
 *fill*         0x00000000c0020b9c        0x4 
 .bss           0x00000000c0020ba0       0x84 core/unixfile.32
                0x00000000c0020ba0                sfileLpt
                0x00000000c0020be0                sfileCom
                0x00000000c0020c04                sfileNul
                0x00000000c0020c08                sfilePnt
                0x00000000c0020c0c                sfileAux
                0x00000000c0020c10                sfileCon
                0x00000000c0020c14                initialFilesAdded
                0x00000000c0020c18                unixFileLinkedList
 .bss           0x00000000c0020c24       0x10 core/virtmgr.32
                0x00000000c0020c24                twswaps
                0x00000000c0020c28                swapBalance
                0x00000000c0020c2c                Virt::swapfileBitmap
                0x00000000c0020c30                firstVAS
 .bss           0x00000000c0020c34        0x0 coreobjs/c++.32
 .bss           0x00000000c0020c34        0x0 dbg/kconsole.32
 .bss           0x00000000c0020c34        0x4 fs/vfs.32
                0x00000000c0020c34                installedFilesystems
 .bss           0x00000000c0020c38        0x0 hal/bus.32
 .bss           0x00000000c0020c38        0x0 hal/buzzer.32
 .bss           0x00000000c0020c38        0x8 hal/clock.32
                0x00000000c0020c38                User::dstOn
                0x00000000c0020c39                User::timezoneHalfHourOffset
                0x00000000c0020c3c                User::timezoneHourOffset
 .bss           0x00000000c0020c40        0x0 hal/device.32
 .bss           0x00000000c0020c40        0x0 hal/diskctrl.32
 .bss           0x00000000c0020c40        0x0 hal/diskphys.32
 .bss           0x00000000c0020c40        0x0 hal/fpu.32
 .bss           0x00000000c0020c40     0x2000 hal/intctrl.32
                0x00000000c0020c40                INT_contexts
                0x00000000c0021c40                INT_handlers
 .bss           0x00000000c0022c40      0x429 hal/keybrd.32
                0x00000000c0022c40                keyboardWaitingTaskList
                0x00000000c0022c44                keyboardSetupYet
                0x00000000c0022c48                guiKeyboardHandler
                0x00000000c0022c60                keystates
 *fill*         0x00000000c0023069       0x17 
 .bss           0x00000000c0023080       0x88 hal/logidisk.32
                0x00000000c0023080                diskAssignments
                0x00000000c00230a0                disks
 .bss           0x00000000c0023108        0x4 hal/mouse.32
                0x00000000c0023108                guiMouseHandler
 .bss           0x00000000c002310c        0x0 hal/partition.32
 .bss           0x00000000c002310c        0x0 hal/serial.32
 .bss           0x00000000c002310c        0x4 hal/timer.32
                0x00000000c002310c                milliTenthsSinceBoot
 .bss           0x00000000c0023110        0x0 hal/vcache.32
 .bss           0x00000000c0023110        0x4 hal/video.32
                0x00000000c0023110                screen
 *fill*         0x00000000c0023114        0xc 
 .bss           0x00000000c0023120      0x480 hw/acpi.32
                0x00000000c0023120                systemSleepFunction
                0x00000000c0023124                systemResetFunction
                0x00000000c0023128                systemShutdownFunction
                0x00000000c002312c                nextACPITable
                0x00000000c0023140                acpiTables
                0x00000000c0023340                usingXSDT
                0x00000000c0023344                MADTpointer
                0x00000000c0023348                RSDTpointer
                0x00000000c002334c                RSDPpointer
                0x00000000c0023350                nextAPICNMI
                0x00000000c0023360                apicNMIInfo
                0x00000000c00233e0                legacyIRQFlags
                0x00000000c0023400                ioapicDiscoveryNumber
                0x00000000c0023420                ioapicFoundInMADT
                0x00000000c0023440                ioapicAddresses
                0x00000000c00234c0                ioapicGSIBase
                0x00000000c0023540                processorDiscoveryNumber
                0x00000000c0023560                matchingAPICID
                0x00000000c0023580                processorID
 .bss           0x00000000c00235a0       0x10 hw/cpu.32
                0x00000000c00235a0                lastD
                0x00000000c00235a4                lastC
                0x00000000c00235a8                lastB
                0x00000000c00235ac                lastA
 .bss           0x00000000c00235b0        0x8 krnl/env.32
                0x00000000c00235b0                Krnl::userEnv
                0x00000000c00235b4                Krnl::systemEnv
 .bss           0x00000000c00235b8        0x9 krnl/panic.32
                0x00000000c00235b8                Krnl::guiProgramFaultHandler
                0x00000000c00235bc                Krnl::guiPanicHandler
                0x00000000c00235c0                Krnl::kernelInPanic
 *fill*         0x00000000c00235c1       0x1f 
 .bss           0x00000000c00235e0       0x48 krnl/powctrl.32
                0x00000000c00235e0                Krnl::powCtrlOnBattery
                0x00000000c0023600                Krnl::currentPowerSettings
                0x00000000c0023624                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0023628        0x0 reg/registry.32
 .bss           0x00000000c0023628        0x0 sys/sc_eject.32
 .bss           0x00000000c0023628        0x0 sys/sc_exit.32
 .bss           0x00000000c0023628        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0023628        0x0 sys/sc_getpid.32
 .bss           0x00000000c0023628        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0023628        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0023628        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0023628        0x0 sys/sc_read.32
 .bss           0x00000000c0023628        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0023628        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0023628        0x0 sys/sc_settime.32
 .bss           0x00000000c0023628        0x0 sys/sc_timezone.32
 .bss           0x00000000c0023628        0x0 sys/sc_write.32
 .bss           0x00000000c0023628        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0023628        0x0 sys/sc_yield.32
 *fill*         0x00000000c0023628       0x18 
 .bss           0x00000000c0023640      0x200 sys/syscalls.32
                0x00000000c0023640                systemCallHandlers
 .bss           0x00000000c0023840      0x7a4 thr/elf.32
                0x00000000c0023840                Thr::driverLookupNext
                0x00000000c0023860                Thr::driverLookupLen
                0x00000000c0023a60                Thr::driverLookupAddr
                0x00000000c0023c60                Thr::driverNameLookup
                0x00000000c0023e60                Thr::kernelSymbols
                0x00000000c0023ee0                Thr::kernelStringTable
                0x00000000c0023f60                Thr::kernelSymbolTable
                0x00000000c0023fe0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023fe4        0x4 
 .bss           0x00000000c0023fe8       0x68 thr/prcssthr.32
                0x00000000c0023fe8                cleanerThread
                0x00000000c0023fec                weNeedTheCleanerToNotBlock
                0x00000000c0023ff0                retValLockStuff
                0x00000000c0023ff4                retValSchedLock
                0x00000000c0023ff8                lockStuffLock
                0x00000000c0023ffc                schedulerLock
                0x00000000c0024000                taskSwitchesPostponedFlag
                0x00000000c0024004                postponeTaskSwitchesCounter
                0x00000000c0024008                irqDisableCounter
                0x00000000c002400c                terminatedTaskList
                0x00000000c0024018                sleepingTaskList
                0x00000000c0024024                taskList
                0x00000000c0024030                kernelProcess
 *fill*         0x00000000c0024050       0x10 
 .bss           0x00000000c0024060       0x40 vm86/vm8086.32
                0x00000000c0024060                Vm::vmRetV
                0x00000000c0024064                Vm::vmDone
                0x00000000c0024065                Vm::vmReady
                0x00000000c0024068                Vm::vm86Thread
                0x00000000c002406c                Vm::vmToHostCommsPtr
                0x00000000c0024080                Vm::vmToHostComms
 .bss           0x00000000c00240a0       0x14 arch/i386/hal.32
                0x00000000c00240a0                apic
                0x00000000c00240a4                fpuOwner
                0x00000000c00240a8                coproLoadFunc
                0x00000000c00240ac                coproSaveFunc
                0x00000000c00240b0                gpFaultIntercept
 .bss           0x00000000c00240b4        0x0 arch/i386/pic.32
 .bss           0x00000000c00240b4        0x2 arch/i386/rtc.32
 .bss           0x00000000c00240b6        0x0 arch/i386/vga.32
 *fill*         0x00000000c00240b6        0xa 
 .bss           0x00000000c00240c0       0xf0 fs/fat/vfslink.32
                0x00000000c00240c0                FAT::fats
                0x00000000c00240e0                FAT::vfsToFatRemaps
                0x00000000c0024160                fatToVFSRemaps
 .bss           0x00000000c00241b0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c00241b0       0x10 
 .bss           0x00000000c00241c0      0x820 fs/iso9660/vfslink.32
                0x00000000c00241c0                recentSector
                0x00000000c00241e0                recentBuffer
 .bss           0x00000000c00249e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00249e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00249e0        0x0 hw/bus/isa.32
 .bss           0x00000000c00249e0        0xd hw/bus/pci.32
                0x00000000c00249e0                thePCI
 .bss           0x00000000c00249ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00249ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00249ed        0x3 
 .bss           0x00000000c00249f0        0x8 hw/diskphys/ata.32
                0x00000000c00249f0                ataSectorsWritten
                0x00000000c00249f4                ataSectorsRead
 .bss           0x00000000c00249f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00249f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00249f8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c00249f8        0x8 
 .bss           0x00000000c0024a00       0x41 hw/intctrl/apic.32
                0x00000000c0024a00                noOfIOAPICs
                0x00000000c0024a20                ioapics
                0x00000000c0024a40                IOAPICsSetupYet
 .bss           0x00000000c0024a41        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024a41        0x3 
 .bss           0x00000000c0024a44        0x4 hw/timer/pit.32
                0x00000000c0024a44                pitFreq
 .bss           0x00000000c0024a48        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024a48        0x0 crtn.32
 .bss           0x00000000c0024a48        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024a48        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024a48        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024a48        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024a48                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00297d0                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
