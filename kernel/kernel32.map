Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1fa3a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6f5 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006cdb                Krnl::firstTask()
                0x00000000c0006e18                Computer::Computer()
                0x00000000c0006e18                Computer::Computer()
                0x00000000c0006ec8                Computer::setBootMessage(char const*)
                0x00000000c0006eca                Computer::detectFeatures()
                0x00000000c00070f0                Computer::displayFeatures()
                0x00000000c00070f2                Computer::rdmsr(unsigned int)
                0x00000000c000711e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000715a                Computer::shutdown()
                0x00000000c0007172                Computer::restart()
                0x00000000c000718a                Computer::sleep()
                0x00000000c000719e                Computer::nmiEnabled()
                0x00000000c00071aa                Computer::readCMOS(unsigned char)
                0x00000000c00071c8                Computer::enableNMI(bool)
                0x00000000c00071e0                Computer::open(int, int, void*)
                0x00000000c00072b4                Computer::disableNMI()
                0x00000000c00072c4                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072e8                Computer::handleNMI()
 *fill*         0x00000000c0007353        0x1 
 .text          0x00000000c0007354      0x1db core/gdt.32
                0x00000000c0007354                GDTEntry::setBase(unsigned int)
                0x00000000c0007370                GDTEntry::setLimit(unsigned int)
                0x00000000c000738e                GDT::GDT()
                0x00000000c000738e                GDT::GDT()
                0x00000000c00073a4                GDT::addEntry(GDTEntry)
                0x00000000c00073c6                GDT::getNumberOfEntries()
                0x00000000c00073ce                GDT::flush()
                0x00000000c00073f0                GDT::setup()
 .text          0x00000000c000752f       0x1d core/idle.32
                0x00000000c000752f                idleFunction(void*)
 .text          0x00000000c000754c      0x46c core/idt.32
                0x00000000c000754c                IDTEntry::IDTEntry(bool)
                0x00000000c000754c                IDTEntry::IDTEntry(bool)
                0x00000000c00075c6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075dc                IDT::IDT()
                0x00000000c00075dc                IDT::IDT()
                0x00000000c00075de                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075e6                IDT::addEntry(IDTEntry, int)
                0x00000000c0007600                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007638                IDT::flush()
                0x00000000c0007652                IDT::setup()
 .text          0x00000000c00079b8      0x188 core/kheap.32
                0x00000000c00079b8                sbrk
                0x00000000c0007a4f                mmap
                0x00000000c0007a65                munmap
                0x00000000c0007a7b                liballoc_lock()
                0x00000000c0007a89                liballoc_unlock()
                0x00000000c0007a9f                liballoc_alloc(int)
                0x00000000c0007ab7                liballoc_free(void*, int)
                0x00000000c0007ad2                realloc
                0x00000000c0007ae6                malloc
                0x00000000c0007af6                free
                0x00000000c0007b06                rfree
                0x00000000c0007b16                calloc
 .text          0x00000000c0007b40       0xc7 core/main.32
                0x00000000c0007b40                KeEntryPoint
 .text          0x00000000c0007c07      0x644 core/physmgr.32
                0x00000000c0007c07                Phys::allocateDMA(unsigned long)
                0x00000000c0007cef                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d2a                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d6a                Phys::getPageState(unsigned long)
                0x00000000c0007d86                Phys::freePage(unsigned long)
                0x00000000c0007def                Phys::allocatePage()
                0x00000000c0007ebe                Phys::allocateContiguousPages(int)
                0x00000000c0007f25                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f5d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000824b        0x1 
 .text          0x00000000c000824c      0x273 core/pipe.32
                0x00000000c000824c                Pipe::isAtty()
                0x00000000c0008250                Pipe::~Pipe()
                0x00000000c0008250                Pipe::~Pipe()
                0x00000000c0008274                Pipe::~Pipe()
                0x00000000c000829c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000835c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008458                Pipe::Pipe(int)
                0x00000000c0008458                Pipe::Pipe(int)
 *fill*         0x00000000c00084bf        0x1 
 .text          0x00000000c00084c0      0xab3 core/terminal.32
                0x00000000c00084c0                VgaText::isAtty()
                0x00000000c00084c4                VgaText::~VgaText()
                0x00000000c00084c4                VgaText::~VgaText()
                0x00000000c00084e8                VgaText::~VgaText()
                0x00000000c0008512                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008532                setTerminalScrollLock(bool)
                0x00000000c0008533                doTerminalCycle()
                0x00000000c0008534                addToTerminalCycle(VgaText*)
                0x00000000c0008535                scrollTerminalScrollLock(int)
                0x00000000c0008536                VgaText::updateTitle()
                0x00000000c0008538                VgaText::load()
                0x00000000c000853a                VgaText::updateCursor()
                0x00000000c0008550                VgaText::doANSI_SGR(int)
                0x00000000c00085c4                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085d4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085e4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0008604                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008610                VgaText::setTitleColour(VgaColour)
                0x00000000c000861c                VgaText::setTitle(char*)
                0x00000000c000861e                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008630                VgaText::scrollScreen()
                0x00000000c00086c2                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086d2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008762                VgaText::getCursorX()
                0x00000000c000876a                VgaText::getCursorY()
                0x00000000c0008772                VgaText::setCursor(int, int)
                0x00000000c0008789                setActiveTerminal(VgaText*)
                0x00000000c00087d4                VgaText::clearScreen()
                0x00000000c0008822                VgaText::setCursorX(int)
                0x00000000c000883a                VgaText::setCursorY(int)
                0x00000000c0008852                VgaText::incrementCursor(bool)
                0x00000000c00088a6                VgaText::decrementCursor(bool)
                0x00000000c00088c8                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008998                VgaText::putchar(char)
                0x00000000c0008a90                VgaText::putx(unsigned int)
                0x00000000c0008ad6                VgaText::puts(char const*)
                0x00000000c0008afc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b48                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c96                VgaText::VgaText(char const*)
                0x00000000c0008c96                VgaText::VgaText(char const*)
                0x00000000c0008de6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f72                VgaText::doUpdate()
 *fill*         0x00000000c0008f73        0x1 
 .text          0x00000000c0008f74      0x1a1 core/tss.32
                0x00000000c0008f74                TSS::TSS()
                0x00000000c0008f74                TSS::TSS()
                0x00000000c0008f84                TSS::setESP(unsigned long)
                0x00000000c0008f98                TSS::flush()
                0x00000000c0008fb8                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0009115        0x1 
 .text          0x00000000c0009116      0x4ca core/unixfile.32
                0x00000000c0009116                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000916c                ReservedFilename::isAtty()
                0x00000000c0009188                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091e6                UnixFile::getFileDescriptor()
                0x00000000c00091ee                UnixFile::UnixFile(int)
                0x00000000c00091ee                UnixFile::UnixFile(int)
                0x00000000c00093a2                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a2                ReservedFilename::ReservedFilename(int)
                0x00000000c00093d4                UnixFile::~UnixFile()
                0x00000000c00093d4                UnixFile::~UnixFile()
                0x00000000c0009470                UnixFile::~UnixFile()
                0x00000000c0009498                ReservedFilename::~ReservedFilename()
                0x00000000c0009498                ReservedFilename::~ReservedFilename()
                0x00000000c00094bc                ReservedFilename::~ReservedFilename()
                0x00000000c00094e3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095e0     0x1218 core/virtmgr.32
                0x00000000c00095e0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000961a                Virt::getPageState(unsigned long)
                0x00000000c000963d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009762                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009785                Virt::swapIDToSector(unsigned long)
                0x00000000c000979b                Virt::allocateSwapfilePage()
                0x00000000c000981b                Virt::virtualMemorySetup()
                0x00000000c000986c                Virt::setupPageSwapping(int)
                0x00000000c00098de                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098e0                VAS::VAS(VAS*)
                0x00000000c00098e0                VAS::VAS(VAS*)
                0x00000000c000990e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000993c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000995b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a98                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009abc                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009ad6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009b18                VAS::VAS()
                0x00000000c0009b18                VAS::VAS()
                0x00000000c0009b82                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009bb6                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009be2                VAS::~VAS()
                0x00000000c0009be2                VAS::~VAS()
                0x00000000c0009d50                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e54                VAS::allocatePages(int, int)
                0x00000000c0009f4a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009fa2                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a098                VAS::VAS(bool)
                0x00000000c000a098                VAS::VAS(bool)
                0x00000000c000a2e2                VAS::evict(unsigned long)
                0x00000000c000a3c0                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a55a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a5ce                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5fa                VAS::scanForEviction()
                0x00000000c000a6fd                mapVASFirstTime
 .text          0x00000000c000a7f8       0x5f coreobjs/c++.32
                0x00000000c000a7f8                __cxa_atexit
                0x00000000c000a7fb                __cxa_finalize
                0x00000000c000a7fc                __stack_chk_fail
                0x00000000c000a832                __cxa_pure_virtual
                0x00000000c000a843                operator new[](unsigned long)
                0x00000000c000a848                operator delete(void*, unsigned long)
                0x00000000c000a84d                operator delete[](void*)
                0x00000000c000a852                operator delete[](void*, unsigned long)
 .text          0x00000000c000a857      0x254 dbg/kconsole.32
                0x00000000c000a857                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8f7                Dbg::logc(char)
                0x00000000c000a917                Dbg::logs(char*)
                0x00000000c000a936                Dbg::logWriteInt(unsigned int)
                0x00000000c000a954                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a975                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aaab        0x1 
 .text          0x00000000c000aaac      0x2d4 dbg/usban.32
                0x00000000c000aaac                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000ab18                __ubsan_handle_type_mismatch_v1
                0x00000000c000abf4                __ubsan_handle_pointer_overflow
                0x00000000c000ac20                __ubsan_handle_out_of_bounds
                0x00000000c000ac4c                __ubsan_handle_add_overflow
                0x00000000c000ac78                __ubsan_handle_load_invalid_value
                0x00000000c000aca4                __ubsan_handle_divrem_overflow
                0x00000000c000acd0                __ubsan_handle_mul_overflow
                0x00000000c000acfc                __ubsan_handle_sub_overflow
                0x00000000c000ad28                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad54                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad80      0x86d fs/symlink.32
                0x00000000c000aecf                KiDeinitialiseSymlinks(void*)
                0x00000000c000af62                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000aff4                KeInitialiseSymlinks()
                0x00000000c000b168                KiIsSymlinkRegistered(char const*)
                0x00000000c000b2ec                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b493                KeCreateSymlink(char const*, char const*)
 *fill*         0x00000000c000b5ed        0x1 
 .text          0x00000000c000b5ee      0xd68 fs/vfs.32
                0x00000000c000b5ee                File::read(unsigned long long, void*, int*)
                0x00000000c000b646                File::write(unsigned long long, void*, int*)
                0x00000000c000b69e                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b6f6                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b724                File::isAtty()
                0x00000000c000b728                Directory::isAtty()
                0x00000000c000b72c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b732                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b738                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b73e                File::~File()
                0x00000000c000b73e                File::~File()
                0x00000000c000b762                File::~File()
                0x00000000c000b78c                Directory::~Directory()
                0x00000000c000b78c                Directory::~Directory()
                0x00000000c000b7b0                Directory::~Directory()
                0x00000000c000b7da                Filesystem::Filesystem()
                0x00000000c000b7da                Filesystem::Filesystem()
                0x00000000c000b7fe                Filesystem::~Filesystem()
                0x00000000c000b7fe                Filesystem::~Filesystem()
                0x00000000c000b80c                Filesystem::~Filesystem()
                0x00000000c000b830                Fs::getcwd(Process*, char*, int)
                0x00000000c000b85a                Fs::initVFS()
                0x00000000c000b884                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba9e                File::File(char const*, Process*, bool)
                0x00000000c000ba9e                File::File(char const*, Process*, bool)
                0x00000000c000bb7c                File::File(char const*, Process*)
                0x00000000c000bb7c                File::File(char const*, Process*)
                0x00000000c000bb9a                File::open(FileOpenMode)
                0x00000000c000bbf8                File::close()
                0x00000000c000bc58                File::seek(unsigned long long)
                0x00000000c000bcae                File::truncate(unsigned long long)
                0x00000000c000bd04                File::tell(unsigned long long*)
                0x00000000c000bd54                File::rewind()
                0x00000000c000bd68                File::unlink()
                0x00000000c000bdb4                File::rename(char const*)
                0x00000000c000be02                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be5e                File::exists()
                0x00000000c000be9c                File::stat(unsigned long long*, bool*)
                0x00000000c000befd                Fs::setcwd(Process*, char*)
                0x00000000c000c05c                Directory::Directory(char const*, Process*)
                0x00000000c000c05c                Directory::Directory(char const*, Process*)
                0x00000000c000c124                Directory::open()
                0x00000000c000c180                Directory::close()
                0x00000000c000c1e0                Directory::unlink()
                0x00000000c000c22c                Directory::rename(char const*)
                0x00000000c000c27a                Directory::exists()
                0x00000000c000c2b8                Directory::read(dirent*)
                0x00000000c000c304                Directory::create()
                0x00000000c000c350                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c356        0x2 
 .text          0x00000000c000c358       0x86 hal/bus.32
                0x00000000c000c358                Bus::Bus(char const*)
                0x00000000c000c358                Bus::Bus(char const*)
                0x00000000c000c390                Bus::~Bus()
                0x00000000c000c390                Bus::~Bus()
                0x00000000c000c3b4                Bus::~Bus()
 .text          0x00000000c000c3de       0x96 hal/buzzer.32
                0x00000000c000c3de                beepThread(void*)
                0x00000000c000c41b                Krnl::beep(int, int, bool)
 .text          0x00000000c000c474      0x45f hal/clock.32
                0x00000000c000c474                User::loadClockSettings(int)
                0x00000000c000c4c6                Clock::Clock(char const*)
                0x00000000c000c4c6                Clock::Clock(char const*)
                0x00000000c000c4fc                Clock::~Clock()
                0x00000000c000c4fc                Clock::~Clock()
                0x00000000c000c520                Clock::~Clock()
                0x00000000c000c54a                Clock::timeInSecondsLocal()
                0x00000000c000c592                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c5eb                datetimeToSeconds(datetime_t)
                0x00000000c000c70a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c76a                secondsToDatetime(unsigned long long)
                0x00000000c000c8ae                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c8d3        0x1 
 .text          0x00000000c000c8d4      0x464 hal/device.32
                0x00000000c000c8d4                Device::hibernate()
                0x00000000c000c8d6                Device::wake()
                0x00000000c000c8d8                Device::detect()
                0x00000000c000c8da                Device::disableLegacy()
                0x00000000c000c8dc                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c8de                DriverlessDevice::close(int, int, void*)
                0x00000000c000c8e2                DriverlessDevice::detect()
                0x00000000c000c8e4                DriverlessDevice::open(int, int, void*)
                0x00000000c000c8f8                Device::~Device()
                0x00000000c000c8f8                Device::~Device()
                0x00000000c000c906                Device::~Device()
                0x00000000c000c92e                Device::findAndLoadDriver()
                0x00000000c000c93c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c962                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c9a2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c9cc                Device::getParent()
                0x00000000c000c9d8                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c9f6                Device::addChild(Device*)
                0x00000000c000ca3a                Device::removeAllChildren()
                0x00000000c000ca80                Device::hibernateAll()
                0x00000000c000cab0                Device::wakeAll()
                0x00000000c000cae0                Device::detectAll()
                0x00000000c000cb10                Device::disableLegacyAll()
                0x00000000c000cb12                Device::loadDriversForAll()
                0x00000000c000cb14                Device::closeAll()
                0x00000000c000cb4a                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cb80                Device::setName(char const*)
                0x00000000c000cb8e                Device::Device(char const*)
                0x00000000c000cb8e                Device::Device(char const*)
                0x00000000c000cc8a                Device::getName()
                0x00000000c000cc94                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc94                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ccca                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cd0e                getDevicesOfType(DeviceType)
 .text          0x00000000c000cd38       0x86 hal/diskctrl.32
                0x00000000c000cd38                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd38                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd70                HardDiskController::~HardDiskController()
                0x00000000c000cd70                HardDiskController::~HardDiskController()
                0x00000000c000cd94                HardDiskController::~HardDiskController()
 .text          0x00000000c000cdbe       0xe2 hal/diskphys.32
                0x00000000c000cdbe                PhysicalDisk::eject()
                0x00000000c000cdc2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cdc2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ce2a                PhysicalDisk::startCache()
                0x00000000c000ce52                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce52                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce76                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cea0        0x0 hal/fpu.32
 .text          0x00000000c000cea0      0x359 hal/intctrl.32
                0x00000000c000cea0                int_handler
                0x00000000c000cf2a                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cf74                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d0a8                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d0dc                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d15a                setupINTS()
                0x00000000c000d1b7                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000d1f9        0x1 
 .text          0x00000000c000d1fa      0x8be hal/keybrd.32
                0x00000000c000d1fa                startGUI(void*)
                0x00000000c000d268                startGUIVESA(void*)
                0x00000000c000d2d6                sendKeyToTerminal(unsigned char)
                0x00000000c000d3b1                sendKeyboardToken(KeyboardToken)
                0x00000000c000d89b                clearInternalKeybuffer(VgaText*)
                0x00000000c000d8d0                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000da2e                Keyboard::Keyboard(char const*)
                0x00000000c000da2e                Keyboard::Keyboard(char const*)
                0x00000000c000da6a                Keyboard::~Keyboard()
                0x00000000c000da6a                Keyboard::~Keyboard()
                0x00000000c000da8e                Keyboard::~Keyboard()
 .text          0x00000000c000dab8      0x3f8 hal/logidisk.32
                0x00000000c000dab8                LogicalDisk::close(int, int, void*)
                0x00000000c000dabc                LogicalDisk::~LogicalDisk()
                0x00000000c000dabc                LogicalDisk::~LogicalDisk()
                0x00000000c000dae0                LogicalDisk::~LogicalDisk()
                0x00000000c000db0a                LogicalDisk::open(int, int, void*)
                0x00000000c000db1e                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db56                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000db9c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000db9c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc5c                LogicalDisk::assignDriveLetter()
                0x00000000c000dd16                LogicalDisk::mount()
                0x00000000c000dd5e                LogicalDisk::unmount()
                0x00000000c000dd6e                LogicalDisk::eject()
                0x00000000c000dd82                LogicalDisk::unassignDriveLetter()
                0x00000000c000ddd8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000de44                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000deb0       0x86 hal/mouse.32
                0x00000000c000deb0                Mouse::Mouse(char const*)
                0x00000000c000deb0                Mouse::Mouse(char const*)
                0x00000000c000dee8                Mouse::~Mouse()
                0x00000000c000dee8                Mouse::~Mouse()
                0x00000000c000df0c                Mouse::~Mouse()
 .text          0x00000000c000df36       0x90 hal/nic.32
                0x00000000c000df36                NIC::getMAC()
                0x00000000c000df3c                NIC::write(int, unsigned char*, int*)
                0x00000000c000df42                NIC::NIC(char const*)
                0x00000000c000df42                NIC::NIC(char const*)
                0x00000000c000df78                NIC::~NIC()
                0x00000000c000df78                NIC::~NIC()
                0x00000000c000df9c                NIC::~NIC()
 .text          0x00000000c000dfc6      0x33b hal/partition.32
                0x00000000c000dfc6                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e06e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e301        0x3 
 .text          0x00000000c000e304       0x86 hal/serial.32
                0x00000000c000e304                Serial::Serial(char const*)
                0x00000000c000e304                Serial::Serial(char const*)
                0x00000000c000e33c                Serial::~Serial()
                0x00000000c000e33c                Serial::~Serial()
                0x00000000c000e360                Serial::~Serial()
 *fill*         0x00000000c000e38a        0x2 
 .text          0x00000000c000e38c      0x234 hal/timer.32
                0x00000000c000e38c                Timer::Timer(char const*)
                0x00000000c000e38c                Timer::Timer(char const*)
                0x00000000c000e3c4                Timer::~Timer()
                0x00000000c000e3c4                Timer::~Timer()
                0x00000000c000e3e8                Timer::~Timer()
                0x00000000c000e412                Timer::read()
                0x00000000c000e41d                setupTimer(int)
                0x00000000c000e458                timerHandler(unsigned int)
 .text          0x00000000c000e5c0      0x444 hal/vcache.32
                0x00000000c000e5c0                VCache::VCache(PhysicalDisk*)
                0x00000000c000e5c0                VCache::VCache(PhysicalDisk*)
                0x00000000c000e730                VCache::invalidateReadBuffer()
                0x00000000c000e740                VCache::writeWriteBuffer()
                0x00000000c000e78c                VCache::~VCache()
                0x00000000c000e78c                VCache::~VCache()
                0x00000000c000e7e4                VCache::~VCache()
                0x00000000c000e80c                VCache::write(unsigned long long, int, void*)
                0x00000000c000e8fa                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ea04      0x4c7 hal/video.32
                0x00000000c000ea04                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ea50                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000eac0                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb3e                Video::clearScreen(unsigned int)
                0x00000000c000eb72                Video::putpixel(int, int, unsigned int)
                0x00000000c000eb80                Video::readPixelApprox(int, int)
                0x00000000c000eb94                Video::Video(char const*)
                0x00000000c000eb94                Video::Video(char const*)
                0x00000000c000ebca                Video::~Video()
                0x00000000c000ebca                Video::~Video()
                0x00000000c000ebee                Video::~Video()
                0x00000000c000ec18                Video::isMonochrome()
                0x00000000c000ec24                Video::getWidth()
                0x00000000c000ec30                Video::getHeight()
                0x00000000c000ec3c                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ecf8                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ee60                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eecb        0x1 
 .text          0x00000000c000eecc     0x1403 hw/acpi.32
                0x00000000c000eecc                ACPI::close(int, int, void*)
                0x00000000c000eff8                findRSDP()
                0x00000000c000f090                loadACPITables(unsigned char*)
                0x00000000c000f2fc                findRSDT(unsigned char*)
                0x00000000c000f454                findDataTable(unsigned char*, char*)
                0x00000000c000f4d4                scanMADT()
                0x00000000c000f98c                ACPI::ACPI()
                0x00000000c000f98c                ACPI::ACPI()
                0x00000000c000f9e0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fadc                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fba8                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fbb0                ACPI::detectPCI()
                0x00000000c000fdd0                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fe18                ACPI::sleep()
                0x00000000c000fe34                ACPI::open(int, int, void*)
 *fill*         0x00000000c00102cf        0x1 
 .text          0x00000000c00102d0      0xbc5 hw/cpu.32
                0x00000000c00102d0                CPU::close(int, int, void*)
                0x00000000c00102d4                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c00102f0                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0010308                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c001037c                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010400                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c001042e                CPU::cpuidCheckECX(unsigned int)
                0x00000000c001045c                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001048a                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c00104b8                CPU::CPU()
                0x00000000c00104b8                CPU::CPU()
                0x00000000c0010546                CPU::displayFeatures()
                0x00000000c0010548                CPU::detectFeatures()
                0x00000000c0010c1c                CPU::setupSMEP()
                0x00000000c0010c28                CPU::setupUMIP()
                0x00000000c0010c32                CPU::setupTSC()
                0x00000000c0010c3c                CPU::setupLargePages()
                0x00000000c0010c46                CPU::setupPAT()
                0x00000000c0010c82                CPU::setupMTRR()
                0x00000000c0010c84                CPU::setupGlobalPages()
                0x00000000c0010c8e                CPU::allowUsermodeDataAccess()
                0x00000000c0010ca0                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010cb2                CPU::setupSMAP()
                0x00000000c0010cc0                CPU::setupFeatures()
                0x00000000c0010d8c                CPU::open(int, int, void*)
 .text          0x00000000c0010e95       0xb6 krnl/atexit.32
                0x00000000c0010e95                KeInitialiseAtexit()
                0x00000000c0010eb4                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010ee8                KeExecuteAtexit()
 .text          0x00000000c0010f4b       0xdf krnl/bootmsg.32
                0x00000000c0010f4b                KeDisplaySplashScreen()
                0x00000000c0010fc7                KeSetBootMessage(char const*)
 *fill*         0x00000000c001102a        0x2 
 .text          0x00000000c001102c       0x1d krnl/compat.32
                0x00000000c001102c                Krnl::handlePowerButton()
                0x00000000c001103c                Krnl::handleSleepButton()
 .text          0x00000000c0011049       0x2b krnl/crc32.32
                0x00000000c0011049                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0011074      0x5bf krnl/env.32
                0x00000000c0011074                EnvVarContainer::getEnv(char const*)
                0x00000000c00110b2                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0011174                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0011176                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001139a                EnvVarContainer::__loadSystem()
                0x00000000c00113b4                EnvVarContainer::__loadUser()
                0x00000000c00113b6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00113b6                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00113d8                EnvVarContainer::~EnvVarContainer()
                0x00000000c00113d8                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011408                KeGetEnv(Process*, char const*)
                0x00000000c001146d                KeSetEnvSystem(char const*, char const*)
                0x00000000c0011487                KeSetEnvUser(char const*, char const*)
                0x00000000c00114a6                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c00114b9                KeDeleteEnvSystem(char const*)
                0x00000000c00114ba                KeDeleteEnvUser(char const*)
                0x00000000c00114bb                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c00114bc                KeNewProcessEnv(Process*)
                0x00000000c00114de                KeCopyProcessEnv(Process*, Process*)
                0x00000000c001152a                KeLoadSystemEnv()
                0x00000000c0011558                KeLoadUserEnv()
                0x00000000c001157e                KeFlushEnv()
                0x00000000c001157f                KeGetProcessTotalEnvCount(Process*)
                0x00000000c001159f                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011633       0x94 krnl/inlines.32
                0x00000000c0011633                CPU::current()
                0x00000000c001163f                operator new(unsigned long)
                0x00000000c0011644                operator delete(void*)
                0x00000000c0011649                disableIRQs()
                0x00000000c001164b                enableIRQs()
                0x00000000c001164d                lockScheduler()
                0x00000000c0011655                unlockScheduler()
                0x00000000c0011664                lockStuff()
                0x00000000c0011672                unlockStuff()
                0x00000000c00116ac                Virt::getAKernelVAS()
                0x00000000c00116b2                __not_memcpy
 .text          0x00000000c00116c7        0xc krnl/panic.32
                0x00000000c00116c7                KePanic(char const*)
 .text          0x00000000c00116d3      0x142 krnl/powctrl.32
                0x00000000c00116d3                KePowerThread(void*)
                0x00000000c0011701                KeChangePowerSettings(PowerSettings)
                0x00000000c0011717                KeUserIOReceived()
                0x00000000c0011722                KeHandlePowerButton()
                0x00000000c0011757                KeHandleSleepButton()
                0x00000000c001178c                KeSetupPowerManager()
 .text          0x00000000c0011815       0x9d krnl/random.32
                0x00000000c0011815                KeRand()
                0x00000000c0011857                KeSeedRand(unsigned int)
                0x00000000c0011880                KeInitRand()
 *fill*         0x00000000c00118b2        0x2 
 .text          0x00000000c00118b4      0x1bc krnl/resolve.32
                0x00000000c00118b4                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011a70      0x322 krnl/signal.32
                0x00000000c0011a70                KiSigKill(int)
                0x00000000c0011a84                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011a85                KiDefaultSignalHandlerPause(int)
                0x00000000c0011ab1                KiDefaultSignalHandlerResume(int)
                0x00000000c0011add                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011ae2                KeInitSignals()
                0x00000000c0011b34                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011b6a                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011be7                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011cde                KiCheckSignalZ
                0x00000000c0011d20                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011d5b                KiFinishSignalZ
 .text          0x00000000c0011d92      0xe10 krnl/syscalls.32
                0x00000000c0011d92                SysSeekDir(regs*)
                0x00000000c0011d97                SysTellDir(regs*)
                0x00000000c0011d9c                SysVerify(regs*)
                0x00000000c0011da6                SysGetArgc(regs*)
                0x00000000c0011dba                SysTTYName(regs*)
                0x00000000c0011dc2                SysFormatDisk(regs*)
                0x00000000c0011e39                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011e8d                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011ee6                SysShutdown(regs*)
                0x00000000c0011f44                SysRealpath(regs*)
                0x00000000c0011f88                SysReadDir(regs*)
                0x00000000c0012008                SysIsATTY(regs*)
                0x00000000c0012062                SysSeek(regs*)
                0x00000000c00120b9                SysTell(regs*)
                0x00000000c0012126                SysSize(regs*)
                0x00000000c0012199                SysSizeFromFilename(regs*)
                0x00000000c00122ca                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00123fb                SysClose(regs*)
                0x00000000c001245b                SysOpenDir(regs*)
                0x00000000c00124d8                SysMakeDir(regs*)
                0x00000000c0012546                SysCloseDir(regs*)
                0x00000000c001259a                SysWait(regs*)
                0x00000000c00125bb                SysNotImpl(regs*)
                0x00000000c00125d6                SysPanic(regs*)
                0x00000000c00125f1                SysRmdir(regs*)
                0x00000000c0012656                SysUnlink(regs*)
                0x00000000c00126bb                SysGetArgv(regs*)
                0x00000000c0012708                SysUSleep(regs*)
                0x00000000c0012731                SysSpawn(regs*)
                0x00000000c00127a4                SysGetEnv(regs*)
                0x00000000c0012855                SysSetFatAttrib(regs*)
                0x00000000c00128c8                SysPipe(regs*)
                0x00000000c001290d                SysGetUnixTime(regs*)
                0x00000000c0012921                string_ends_with(char const*, char const*)
                0x00000000c0012969                SysOpen(regs*)
                0x00000000c0012b60                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012ba2        0x2 
 .text          0x00000000c0012ba4      0x159 net/ethernet.32
                0x00000000c0012ba4                KeSwitchEndian16(unsigned short)
                0x00000000c0012bc8                KeSwitchEndian32(unsigned int)
                0x00000000c0012bf8                EthernetCRC32(unsigned char*, int)
                0x00000000c0012c9c                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012cfd      0xd56 reg/cm.32
                0x00000000c0012cfd                CmOpen(char const*)
                0x00000000c0012e1b                CmClose(Reghive_Tag*)
                0x00000000c0012e31                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012e6d                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012ee4                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012f23                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012f55                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012f91                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012fb9                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012fda                CmExpand(Reghive_Tag*, int)
                0x00000000c0013055                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c00130db                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c00131cf                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c001330b                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c001336c                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c001339c                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c00133d3                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00133fd                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c001343d                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c00134e1                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c001350f                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00136ad                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00136fa                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0013774                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00137c7                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001388b                zStrtok(char*, char const*)
                0x00000000c00138fd                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c001397e                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013a21                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0013a53      0x52a reg/registry.32
                0x00000000c0013a53                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013bc4                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013d19                Reg::getLine(char*, char*, char*)
                0x00000000c0013d50                Reg::readInt(char*, char*, int*)
                0x00000000c0013e3e                Reg::readString(char*, char*, char*, int)
                0x00000000c0013ebf                Reg::readBool(char*, char*, bool*)
                0x00000000c0013ee4                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013f10                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013f3c                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013f7d       0x36 sys/eject.32
                0x00000000c0013f7d                SysEject(regs*)
 .text          0x00000000c0013fb3       0x18 sys/exit.32
                0x00000000c0013fb3                SysExit(regs*)
 .text          0x00000000c0013fcb       0x1f sys/getcwd.32
                0x00000000c0013fcb                SysGetCwd(regs*)
 .text          0x00000000c0013fea        0xc sys/getpid.32
                0x00000000c0013fea                SysGetPID(regs*)
 .text          0x00000000c0013ff6       0x1a sys/getramdata.32
                0x00000000c0013ff6                SysGetRAMData(regs*)
 .text          0x00000000c0014010       0x82 sys/getvgaptr.32
                0x00000000c0014010                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014092        0x2 
 .text          0x00000000c0014094       0xb9 sys/kill.32
                0x00000000c0014094                SysKill(regs*)
 .text          0x00000000c001414d       0xa8 sys/loaddll.32
                0x00000000c001414d                SysLoadDLL(regs*)
 .text          0x00000000c00141f5       0x68 sys/read.32
                0x00000000c00141f5                SysRead(regs*)
 .text          0x00000000c001425d       0x29 sys/registersignal.32
                0x00000000c001425d                SysRegisterSignal(regs*)
 .text          0x00000000c0014286      0x19c sys/registry.32
                0x00000000c0014286                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00142fd                SysRegistryReadExtent(regs*)
                0x00000000c0014345                SysRegistryPathToExtentLookup(regs*)
                0x00000000c001436d                SysRegistryEnterDirectory(regs*)
                0x00000000c0014395                SysRegistryGetNext(regs*)
                0x00000000c00143bd                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00143f7                SysRegistryOpen(regs*)
                0x00000000c001440b                SysRegistryClose(regs*)
 .text          0x00000000c0014422       0x55 sys/sbrk.32
                0x00000000c0014422                SysSbrk(regs*)
 .text          0x00000000c0014477       0x1c sys/setcwd.32
                0x00000000c0014477                SysSetCwd(regs*)
 .text          0x00000000c0014493       0x96 sys/settime.32
                0x00000000c0014493                SysSetTime(regs*)
 .text          0x00000000c0014529       0x73 sys/symlink.32
                0x00000000c0014529                SysSymlink(regs*)
 .text          0x00000000c001459c       0x4a sys/timezone.32
                0x00000000c001459c                SysTimezone(regs*)
 .text          0x00000000c00145e6       0xfc sys/truncate.32
                0x00000000c00145e6                SysTruncate(regs*)
 .text          0x00000000c00146e2       0x68 sys/write.32
                0x00000000c00146e2                SysWrite(regs*)
 .text          0x00000000c001474a       0x62 sys/wsbe.32
                0x00000000c001474a                SysWsbe(regs*)
 .text          0x00000000c00147ac       0x25 sys/yield.32
                0x00000000c00147ac                SysYield(regs*)
 .text          0x00000000c00147d1     0x11e6 thr/elf.32
                0x00000000c00147d1                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014a5f                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014c71                Thr::runtimeReferenceHelper()
                0x00000000c0014c84                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014cd3                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014f91                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00156ca                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00156fc                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015733                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001574d                Thr::loadDLL(char const*, bool)
                0x00000000c001597e                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00159b7        0x1 
 .text          0x00000000c00159b8     0x13d9 thr/prcssthr.32
                0x00000000c00159b8                userModeEntryPoint(void*)
                0x00000000c00159e0                changeTSS
                0x00000000c0015a10                switchToThread(ThreadControlBlock*)
                0x00000000c0015ac0                Process::addArgs(char**)
                0x00000000c0015b2c                Process::Process(char const*, Process*, char**)
                0x00000000c0015b2c                Process::Process(char const*, Process*, char**)
                0x00000000c0015d38                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015d38                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015f0c                taskStartupFunction
                0x00000000c0015f18                Semaphore::Semaphore(int)
                0x00000000c0015f18                Semaphore::Semaphore(int)
                0x00000000c0015f48                Mutex::Mutex()
                0x00000000c0015f48                Mutex::Mutex()
                0x00000000c0015f5c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016068                Process::createUserThread()
                0x00000000c0016088                setupMultitasking(void (*)())
                0x00000000c00161ac                schedule()
                0x00000000c0016240                Semaphore::tryAcquire()
                0x00000000c0016314                Semaphore::assertLocked(char const*)
                0x00000000c0016398                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00163c0                blockTask(TaskState)
                0x00000000c00163f8                waitTask(int, int*, int)
                0x00000000c001643c                milliTenthSleepUntil(unsigned int)
                0x00000000c00164dc                milliTenthSleep(unsigned int)
                0x00000000c00164f0                sleep(unsigned int)
                0x00000000c001650c                Semaphore::acquire()
                0x00000000c00165d4                taskReturned
                0x00000000c0016618                Thr::processFromPID(int)
                0x00000000c00166c4                unblockTask(ThreadControlBlock*)
                0x00000000c0016770                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016a44                cleanerTaskFunction(void*)
                0x00000000c0016b4c                terminateTask(int)
                0x00000000c0016c38                Thr::terminateFromIRQ(int)
                0x00000000c0016c48                Semaphore::release()
 .text          0x00000000c0016d91      0xc27 vm86/vm8086.32
                0x00000000c0016d91                Vm::inbv(unsigned short)
                0x00000000c0016da4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016dda                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016dea                Vm::getSegment(unsigned int)
                0x00000000c0016df2                Vm::getOffset(unsigned int)
                0x00000000c0016df7                Vm::mainloop2()
                0x00000000c0016e31                Vm::mainVm8086Loop(void*)
                0x00000000c0016e41                Vm::mainloop3(unsigned long)
                0x00000000c0016e67                Vm::initialise8086()
                0x00000000c0016eaa                Vm::finish8086()
                0x00000000c0016f0b                Vm::getOutput8086(unsigned char*)
                0x00000000c0016f30                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016fe9                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017187                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017220                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017231                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017243                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017254                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017269                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001727f                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017294                Vm::faultHandler(regs*)
 .text          0x00000000c00179b8      0xaf0 arch/i386/hal.32
                0x00000000c00179b8                noCopro(unsigned long)
                0x00000000c00179b9                nmiHandler(regs*, void*)
                0x00000000c00179d2                doubleFault(regs*, void*)
                0x00000000c00179eb                displayDebugInfo(regs*)
                0x00000000c0017d70                HalSystemIdle()
                0x00000000c0017dec                displayProgramFault(char const*)
                0x00000000c0017e38                gpFault(regs*, void*)
                0x00000000c0017e9f                pgFault(regs*, void*)
                0x00000000c0017f28                otherISRHandler(regs*, void*)
                0x00000000c0017f5c                opcodeFault(regs*, void*)
                0x00000000c0017fdf                i386SaveCoprocessor(void*)
                0x00000000c0017ff3                i386LoadCoprocessor(void*)
                0x00000000c0018007                x87EmulHandler(regs*, void*)
                0x00000000c00180a4                HalInitialiseCoprocessor()
                0x00000000c0018152                HalPanic(char const*)
                0x00000000c0018266                HalQueryPerformanceCounter()
                0x00000000c0018281                HalInitialise()
                0x00000000c0018437                HalMakeBeep(int)
                0x00000000c0018471                HalGetRand()
                0x00000000c0018474                HalEndOfInterrupt(int)
                0x00000000c00184a5                HalRestart()
                0x00000000c00184a6                HalShutdown()
                0x00000000c00184a7                HalSleep()
 .text          0x00000000c00184a8      0x2dc arch/i386/pic.32
                0x00000000c00184a8                picIoWait()
                0x00000000c00184b0                picDisable()
                0x00000000c00184e4                picGetIRQReg(int)
                0x00000000c0018560                picOpen()
                0x00000000c00186e4                picEOI(int)
 .text          0x00000000c0018784      0x674 arch/i386/rtc.32
                0x00000000c0018784                RTC::open(int, int, void*)
                0x00000000c0018788                RTC::close(int, int, void*)
                0x00000000c001878c                RTC::timeInSecondsUTC()
                0x00000000c001879e                RTC::timeInDatetimeUTC()
                0x00000000c00187c4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0018802                RTC::~RTC()
                0x00000000c0018802                RTC::~RTC()
                0x00000000c0018826                RTC::~RTC()
                0x00000000c0018850                RTC::get_update_in_progress_flag()
                0x00000000c001886a                RTC::completeRTCRefresh()
                0x00000000c0018b4a                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018cf8                rtcIRQHandler(regs*, void*)
                0x00000000c0018d3e                RTC::RTC()
                0x00000000c0018d3e                RTC::RTC()
 .text          0x00000000c0018df8      0x1f4 arch/i386/vga.32
                0x00000000c0018df8                HalConsoleScroll(int, int)
                0x00000000c0018f00                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018f64                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018fec     0x14cf fs/fat/vfslink.32
                0x00000000c0018fec                FAT::getName()
                0x00000000c0018ff4                FAT::tell(void*, unsigned long long*)
                0x00000000c0019030                FAT::stat(void*, unsigned long long*)
                0x00000000c001906c                FAT::~FAT()
                0x00000000c001906c                FAT::~FAT()
                0x00000000c0019090                FAT::~FAT()
                0x00000000c00190b8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001915c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019220                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019404                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019620                FAT::allocateSwapfile(char const*, int)
                0x00000000c00197e0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019950                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00199b0                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019a10                FAT::close(void*)
                0x00000000c0019a64                FAT::closeDir(void*)
                0x00000000c0019ab8                FAT::truncate(void*, unsigned long long)
                0x00000000c0019b24                FAT::seek(void*, unsigned long long)
                0x00000000c0019b7c                fatWrapperReadDisk
                0x00000000c0019bbc                fatWrapperWriteDisk
                0x00000000c0019bfc                fatWrapperIoctl
                0x00000000c0019d18                FAT::FAT()
                0x00000000c0019d18                FAT::FAT()
                0x00000000c0019d70                FAT::fixFilepath(char*)
                0x00000000c0019db0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019f24                FAT::openDir(char const*, void**)
                0x00000000c0019fd4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a0cc                FAT::unlink(char const*)
                0x00000000c001a14c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a300                FAT::rename(char const*, char const*)
                0x00000000c001a3cc                FAT::mkdir(char const*)
                0x00000000c001a44c                FAT::exists(char const*)
 *fill*         0x00000000c001a4bb        0x1 
 .text          0x00000000c001a4bc       0x94 fs/iso9660/helper.32
                0x00000000c001a4bc                isoReadDiscSectorHelper
                0x00000000c001a518                iso_kprintf
                0x00000000c001a534                iso_kprintfd
 .text          0x00000000c001a550      0x71c fs/iso9660/vfslink.32
                0x00000000c001a550                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a556                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a55c                ISO9660::getName()
                0x00000000c001a562                ISO9660::closeDir(void*)
                0x00000000c001a56c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a572                ISO9660::unlink(char const*)
                0x00000000c001a578                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a57e                ISO9660::rename(char const*, char const*)
                0x00000000c001a584                ISO9660::mkdir(char const*)
                0x00000000c001a58a                ISO9660::~ISO9660()
                0x00000000c001a58a                ISO9660::~ISO9660()
                0x00000000c001a5ae                ISO9660::~ISO9660()
                0x00000000c001a5d6                ISO9660::exists(char const*)
                0x00000000c001a5ea                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a6d0                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a718                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a75a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a798                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a7ea                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a92c                ISO9660::close(void*)
                0x00000000c001a95c                ISO9660::openDir(char const*, void**)
                0x00000000c001aa36                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001ab53                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001abd2                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ac44                ISO9660::ISO9660()
                0x00000000c001ac44                ISO9660::ISO9660()
 .text          0x00000000c001ac6c      0x26c hal/sound/sndcard.32
                0x00000000c001ac6c                SoundCard::beginPlayback()
                0x00000000c001ac7a                SoundCard::stopPlayback()
                0x00000000c001ac88                SoundCard::SoundCard(char const*)
                0x00000000c001ac88                SoundCard::SoundCard(char const*)
                0x00000000c001ad26                SoundCard::~SoundCard()
                0x00000000c001ad26                SoundCard::~SoundCard()
                0x00000000c001ad4a                SoundCard::~SoundCard()
                0x00000000c001ad74                SoundCard::configureRates(int, int, int)
                0x00000000c001ada4                SoundCard::getSamples16(int, short*)
                0x00000000c001ae00                SoundCard::getSamples32(int, int*)
                0x00000000c001ae86                SoundCard::addChannel(SoundPort*)
                0x00000000c001aec4                SoundCard::removeChannel(int)
 .text          0x00000000c001aed8      0x38a hal/sound/sndport.32
                0x00000000c001aed8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001aed8                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001af64                SoundPort::~SoundPort()
                0x00000000c001af64                SoundPort::~SoundPort()
                0x00000000c001af98                SoundPort::unpause()
                0x00000000c001afa4                SoundPort::pause()
                0x00000000c001afb0                SoundPort::getBufferUsed()
                0x00000000c001afb8                SoundPort::getBufferSize()
                0x00000000c001afc0                SoundPort::buffer16(short*, int)
                0x00000000c001b04c                SoundPort::buffer32(int*, int)
                0x00000000c001b0d8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b1a4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b262        0x0 hw/bus/isa.32
 .text          0x00000000c001b262      0xbb7 hw/bus/pci.32
                0x00000000c001b262                PCI::open(int, int, void*)
                0x00000000c001b280                PCI::close(int, int, void*)
                0x00000000c001b284                PCI::PCI()
                0x00000000c001b284                PCI::PCI()
                0x00000000c001b31c                PCI::readBAR8(unsigned int, int)
                0x00000000c001b338                PCI::readBAR16(unsigned int, int)
                0x00000000c001b356                PCI::readBAR32(unsigned int, int)
                0x00000000c001b372                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b392                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b3b4                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b3d4                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b44a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b4f4                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b518                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b540                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b58a                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5b2                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5d6                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5fa                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b622                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b686                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b76e                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001ba34                PCI::checkBus(unsigned char)
                0x00000000c001ba58                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bbd2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bd4e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bdc0                PCI::detect()
 *fill*         0x00000000c001be19        0x1 
 .text          0x00000000c001be1a      0xb9a hw/diskctrl/ide.32
                0x00000000c001be1a                IDE::close(int, int, void*)
                0x00000000c001be1e                IDE::IDE()
                0x00000000c001be1e                IDE::IDE()
                0x00000000c001be52                IDE::prepareInterrupt(unsigned char)
                0x00000000c001be64                selectDrive(unsigned char, unsigned char)
                0x00000000c001be66                IDE::getBase(unsigned char)
                0x00000000c001be78                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bf38                IDE::read(unsigned char, unsigned char)
                0x00000000c001bfe6                IDE::waitInterrupt(unsigned char)
                0x00000000c001c048                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c064                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c080                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c0ca                IDE::open(int, int, void*)
                0x00000000c001c508                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c5d8                IDE::detect()
                0x00000000c001c8a6                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c960                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c9b4      0x32a hw/diskctrl/satabus.32
                0x00000000c001c9b4                SATABus::close(int, int, void*)
                0x00000000c001c9b8                SATABus::detect()
                0x00000000c001c9ba                SATABus::SATABus()
                0x00000000c001c9ba                SATABus::SATABus()
                0x00000000c001ca40                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ca72                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001caba                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cada                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cb04                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cc14                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001ccbe                SATABus::open(int, int, void*)
 .text          0x00000000c001ccde      0x93f hw/diskphys/ata.32
                0x00000000c001ccde                ATA::close(int, int, void*)
                0x00000000c001cd02                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cd04                ATA::ATA()
                0x00000000c001cd04                ATA::ATA()
                0x00000000c001cd32                ATA::flush(bool)
                0x00000000c001cd80                ATA::readyForCommand()
                0x00000000c001cdcc                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d162                ATA::detectCHS()
                0x00000000c001d18c                ATA::open(int, int, void*)
                0x00000000c001d258                combineCharAndColour(char, unsigned char)
                0x00000000c001d269                combineColours(unsigned char, unsigned char)
                0x00000000c001d276                ATA::read(unsigned long long, int, void*)
                0x00000000c001d44c                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d61d        0x1 
 .text          0x00000000c001d61e      0x618 hw/diskphys/atapi.32
                0x00000000c001d61e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d624                ATAPI::close(int, int, void*)
                0x00000000c001d648                ATAPI::ATAPI()
                0x00000000c001d648                ATAPI::ATAPI()
                0x00000000c001d676                ATAPI::readyForCommand()
                0x00000000c001d6c8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d990                ATAPI::diskRemoved()
                0x00000000c001d9ca                ATAPI::eject()
                0x00000000c001da12                ATAPI::diskInserted()
                0x00000000c001da1e                ATAPI::detectMedia()
                0x00000000c001dadc                ATAPI::open(int, int, void*)
                0x00000000c001dbbc                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dc36      0x807 hw/diskphys/sata.32
                0x00000000c001dc36                SATA::close(int, int, void*)
                0x00000000c001dc5a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001dc5c                SATA::open(int, int, void*)
                0x00000000c001dd06                SATA::SATA()
                0x00000000c001dd06                SATA::SATA()
                0x00000000c001dd34                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001df88                SATA::read(unsigned long long, int, void*)
                0x00000000c001e1d8                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e43d        0x1 
 .text          0x00000000c001e43e      0x5d0 hw/diskphys/satapi.32
                0x00000000c001e43e                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e444                SATAPI::close(int, int, void*)
                0x00000000c001e468                SATAPI::SATAPI()
                0x00000000c001e468                SATAPI::SATAPI()
                0x00000000c001e496                SATAPI::diskRemoved()
                0x00000000c001e498                SATAPI::diskInserted()
                0x00000000c001e4b4                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e792                SATAPI::eject()
                0x00000000c001e7ce                SATAPI::detectMedia()
                0x00000000c001e824                SATAPI::open(int, int, void*)
                0x00000000c001e924                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ea0e      0x45b hw/intctrl/apic.32
                0x00000000c001ea0e                IOAPIC::close(int, int, void*)
                0x00000000c001ea14                apicGetBase()
                0x00000000c001ea5a                IOAPIC::IOAPIC()
                0x00000000c001ea5a                IOAPIC::IOAPIC()
                0x00000000c001ea82                apicOpen()
                0x00000000c001ebfe                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ec30                IOAPIC::read(int)
                0x00000000c001ec58                IOAPIC::open(int, int, void*)
                0x00000000c001ed3e                IOAPIC::write(int, int)
                0x00000000c001ed6a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ee69        0x3 
 .text          0x00000000c001ee6c       0xf0 hw/timer/apictimer.32
                0x00000000c001ee6c                APICTimer::close(int, int, void*)
                0x00000000c001ee74                apicTimerHandler(regs*, void*)
                0x00000000c001ee9c                APICTimer::open(int, int, void*)
                0x00000000c001ef0c                APICTimer::write(int)
                0x00000000c001ef34                APICTimer::APICTimer()
                0x00000000c001ef34                APICTimer::APICTimer()
 .text          0x00000000c001ef5c      0x1ad hw/timer/pit.32
                0x00000000c001ef5c                PIT::write(int)
                0x00000000c001efe0                pitHandler(regs*, void*)
                0x00000000c001f008                PIT::open(int, int, void*)
                0x00000000c001f058                PIT::close(int, int, void*)
                0x00000000c001f088                PIT::PIT()
                0x00000000c001f088                PIT::PIT()
 *fill*         0x00000000c001f109        0x7 
 .text          0x00000000c001f110       0x83 arch/i386/avx.32
                0x00000000c001f110                avxDetect
                0x00000000c001f13a                avxSave
                0x00000000c001f14b                avxLoad
                0x00000000c001f15c                avxInit
                0x00000000c001f17e                avxClose
                0x00000000c001f17f                wouldSheSayYes
 *fill*         0x00000000c001f193        0xd 
 .text          0x00000000c001f1a0      0x2ec arch/i386/interrupt.32
                0x00000000c001f1a0                isr0
                0x00000000c001f1b0                isr1
                0x00000000c001f1ba                isr2
                0x00000000c001f1c4                isr3
                0x00000000c001f1ce                isr4
                0x00000000c001f1d8                isr5
                0x00000000c001f1e2                isr6
                0x00000000c001f1ec                isr7
                0x00000000c001f1f6                isr8
                0x00000000c001f1fe                isr9
                0x00000000c001f208                isr10
                0x00000000c001f210                isr11
                0x00000000c001f218                isr12
                0x00000000c001f220                isr13
                0x00000000c001f23a                isr14
                0x00000000c001f242                isr15
                0x00000000c001f24c                isr16
                0x00000000c001f256                isr17
                0x00000000c001f260                isr18
                0x00000000c001f26a                irq3
                0x00000000c001f274                irq4
                0x00000000c001f27e                irq5
                0x00000000c001f288                irq6
                0x00000000c001f292                irq7
                0x00000000c001f29c                irq8
                0x00000000c001f2a6                irq9
                0x00000000c001f2b0                irq10
                0x00000000c001f2ba                irq11
                0x00000000c001f2c4                irq12
                0x00000000c001f2ce                irq13
                0x00000000c001f2d8                irq14
                0x00000000c001f2e2                irq15
                0x00000000c001f2ec                irq1
                0x00000000c001f2f3                irq2
                0x00000000c001f2fa                isr96
                0x00000000c001f301                irq0
                0x00000000c001f306                int_common_stub
                0x00000000c001f338                syscall_common_stub
                0x00000000c001f43c                irq16
                0x00000000c001f446                irq17
                0x00000000c001f450                irq18
                0x00000000c001f45a                irq19
                0x00000000c001f464                irq20
                0x00000000c001f46e                irq21
                0x00000000c001f478                irq22
                0x00000000c001f482                irq23
 *fill*         0x00000000c001f48c        0x4 
 .text          0x00000000c001f490       0x10 arch/i386/rdrand.32
                0x00000000c001f490                i386GetRDRAND
 .text          0x00000000c001f4a0       0x39 arch/i386/sse.32
                0x00000000c001f4a0                absolutelyNoChanceInHell
                0x00000000c001f4a0                sseDetect
                0x00000000c001f4b8                sseSave
                0x00000000c001f4c0                sseLoad
                0x00000000c001f4c8                sseInit
                0x00000000c001f4d8                sseClose
 *fill*         0x00000000c001f4d9        0x7 
 .text          0x00000000c001f4e0       0x49 arch/i386/x87.32
                0x00000000c001f4e6                x87Detect
                0x00000000c001f501                x87Save
                0x00000000c001f508                x87Load
                0x00000000c001f50f                x87Init
                0x00000000c001f528                x87Close
 *fill*         0x00000000c001f529        0x3 
 .text          0x00000000c001f52c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f551        0x0 crtn.32
 *fill*         0x00000000c001f551        0x3 
 .text          0x00000000c001f554      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f554                __divdi3
 *fill*         0x00000000c001f69f        0x1 
 .text          0x00000000c001f6a0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f6a0                __moddi3
 *fill*         0x00000000c001f81e        0x2 
 .text          0x00000000c001f820       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f820                __udivdi3
 *fill*         0x00000000c001f91f        0x1 
 .text          0x00000000c001f920      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f920                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001fa40        0x0
 .iplt          0x00000000c001fa40        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001fa3a        0xf
 .init          0x00000000c001fa3a        0x3 crti.32
                0x00000000c001fa3a                _init
 .init          0x00000000c001fa3d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001fa42        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001fa47        0x2 crtn.32

.fini           0x00000000c001fa49        0xa
 .fini          0x00000000c001fa49        0x3 crti.32
                0x00000000c001fa49                _fini
 .fini          0x00000000c001fa4c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001fa51        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001fa54       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001fa54       0x23 core/computer.32
                0x00000000c001fa54                Computer::~Computer()
                0x00000000c001fa54                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001fa78       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001fa78       0x2a core/computer.32
                0x00000000c001fa78                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001faa2       0x21
 .text._Z10idleCommonv
                0x00000000c001faa2       0x21 core/idle.32
                0x00000000c001faa2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fac4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fac4        0x2 core/unixfile.32
                0x00000000c001fac4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001fac4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fac6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fac6       0x42 core/unixfile.32
                0x00000000c001fac6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001fac6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fb08       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fb08       0xd3 core/unixfile.32
                0x00000000c001fb08                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fbdc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fbdc        0x7 core/unixfile.32
                0x00000000c001fbdc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fbe4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fbe4       0xa1 core/unixfile.32
                0x00000000c001fbe4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc86        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fc86        0x8 core/unixfile.32
                0x00000000c001fc86                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc8e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fc8e       0x1a hal/device.32
                0x00000000c001fc8e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fc8e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fca8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fca8       0x2a hal/device.32
                0x00000000c001fca8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fcd2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fcd2       0xdc hal/device.32
                0x00000000c001fcd2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fdae       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fdae       0x42 hal/device.32
                0x00000000c001fdae                LinkedList<Device>::LinkedList()
                0x00000000c001fdae                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fdf0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fdf0       0x1c hal/timer.32
                0x00000000c001fdf0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fe0c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fe0c        0x7 hal/timer.32
                0x00000000c001fe0c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fe14       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fe14       0xbc hal/timer.32
                0x00000000c001fe14                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fed0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fed0       0xda hal/timer.32
                0x00000000c001fed0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ffac       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ffac       0x23 hw/acpi.32
                0x00000000c001ffac                ACPI::~ACPI()
                0x00000000c001ffac                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ffd0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ffd0       0x2a hw/acpi.32
                0x00000000c001ffd0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fffc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fffc        0x2 hw/acpi.32
                0x00000000c001fffc                LinkedList<Device>::~LinkedList()
                0x00000000c001fffc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020000       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020000       0x1c hw/acpi.32
                0x00000000c0020000                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c002001c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c002001c        0x7 hw/acpi.32
                0x00000000c002001c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020024       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020024       0xb8 hw/acpi.32
                0x00000000c0020024                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c00200dc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00200dc       0x23 hw/cpu.32
                0x00000000c00200dc                CPU::~CPU()
                0x00000000c00200dc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020100       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020100       0x2a hw/cpu.32
                0x00000000c0020100                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002012c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002012c        0x8 sys/kill.32
                0x00000000c002012c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020134        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020134        0x2 thr/prcssthr.32
                0x00000000c0020134                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020134                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020138       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020138       0x49 thr/prcssthr.32
                0x00000000c0020138                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020138                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020184       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020184       0x42 thr/prcssthr.32
                0x00000000c0020184                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020184                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c00201c6       0x23
 .text._ZN3PCID2Ev
                0x00000000c00201c6       0x23 hw/bus/pci.32
                0x00000000c00201c6                PCI::~PCI()
                0x00000000c00201c6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00201ea       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00201ea       0x2a hw/bus/pci.32
                0x00000000c00201ea                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020214       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020214       0x23 hw/diskctrl/ide.32
                0x00000000c0020214                IDE::~IDE()
                0x00000000c0020214                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020238       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020238       0x2a hw/diskctrl/ide.32
                0x00000000c0020238                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020262       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020262       0x23 hw/diskctrl/satabus.32
                0x00000000c0020262                SATABus::~SATABus()
                0x00000000c0020262                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020286       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020286       0x2a hw/diskctrl/satabus.32
                0x00000000c0020286                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c00202b0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c00202b0       0x23 hw/diskphys/ata.32
                0x00000000c00202b0                ATA::~ATA()
                0x00000000c00202b0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00202d4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00202d4       0x2a hw/diskphys/ata.32
                0x00000000c00202d4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00202fe       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00202fe       0x23 hw/diskphys/atapi.32
                0x00000000c00202fe                ATAPI::~ATAPI()
                0x00000000c00202fe                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020322       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020322       0x2a hw/diskphys/atapi.32
                0x00000000c0020322                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002034c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002034c       0x23 hw/diskphys/sata.32
                0x00000000c002034c                SATA::~SATA()
                0x00000000c002034c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020370       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020370       0x2a hw/diskphys/sata.32
                0x00000000c0020370                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002039a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002039a       0x23 hw/diskphys/satapi.32
                0x00000000c002039a                SATAPI::~SATAPI()
                0x00000000c002039a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c00203be       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c00203be       0x2a hw/diskphys/satapi.32
                0x00000000c00203be                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00203e8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00203e8       0x23 hw/intctrl/apic.32
                0x00000000c00203e8                IOAPIC::~IOAPIC()
                0x00000000c00203e8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002040c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002040c       0x2a hw/intctrl/apic.32
                0x00000000c002040c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020438       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020438       0x23 hw/timer/apictimer.32
                0x00000000c0020438                APICTimer::~APICTimer()
                0x00000000c0020438                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002045c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002045c       0x2a hw/timer/apictimer.32
                0x00000000c002045c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020488       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020488       0x23 hw/timer/pit.32
                0x00000000c0020488                PIT::~PIT()
                0x00000000c0020488                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00204ac       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00204ac       0x2a hw/timer/pit.32
                0x00000000c00204ac                PIT::~PIT()

.rodata         0x00000000c00204d6     0x330e
                0x00000000c00204d6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00204d6        0x2 
 .ctors         0x00000000c00204d8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00204dc        0x4 core/unixfile.32
 .ctors         0x00000000c00204e0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00204e4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00204e8                end_ctors = .
                0x00000000c00204e8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00204e8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00204ec        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00204ec                __DTOR_END__
                0x00000000c00204f0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00204f0       0x10 
 .rodata        0x00000000c0020500      0x101 acpica/utclib.32
                0x00000000c0020500                AcpiGbl_Ctypes
 *fill*         0x00000000c0020601        0x3 
 .rodata        0x00000000c0020604       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002061c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020666       0x1a 
 .rodata        0x00000000c0020680       0xed fs/fat/ff.32
 *fill*         0x00000000c002076d       0x13 
 .rodata        0x00000000c0020780      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020b80       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020bef      0x13f core/computer.32
 *fill*         0x00000000c0020d2e        0x2 
 .rodata.str1.4
                0x00000000c0020d30       0x90 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020dc0       0x2c core/computer.32
                0x00000000c0020dc0                vtable for Computer
 .rodata.str1.4
                0x00000000c0020dec       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020e1c        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020e28       0x17 core/main.32
 *fill*         0x00000000c0020e3f        0x1 
 .rodata.str1.4
                0x00000000c0020e40       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020ee5       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020f3d       0x39 core/pipe.32
 *fill*         0x00000000c0020f76        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020f78       0x1c core/pipe.32
                0x00000000c0020f78                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020f94       0x2b core/terminal.32
 *fill*         0x00000000c0020fbf        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020fc0       0x1c core/terminal.32
                0x00000000c0020fc0                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020fdc       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020ffe       0x15 core/unixfile.32
 *fill*         0x00000000c0021013        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0021014       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002105f        0x8 core/unixfile.32
 *fill*         0x00000000c0021067        0x1 
 .rodata.str1.4
                0x00000000c0021068       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0021088       0x1c core/unixfile.32
                0x00000000c0021088                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00210a4       0x1c core/unixfile.32
                0x00000000c00210a4                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00210c0      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021354      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002147a       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c00214ad       0x11 dbg/kconsole.32
 *fill*         0x00000000c00214ad        0x3 
 .rodata        0x00000000c00214b0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021600      0x169 dbg/usban.32
 *fill*         0x00000000c0021769        0x3 
 .rodata.str1.4
                0x00000000c002176c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00218a3      0x19b fs/symlink.32
 .rodata.str1.1
                0x00000000c0021a3e       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c0021a7f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021a80       0x6c fs/vfs.32
                0x00000000c0021a80                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021aec       0x1c fs/vfs.32
                0x00000000c0021aec                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021b08       0x1c fs/vfs.32
                0x00000000c0021b08                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021b24       0x2c hal/bus.32
                0x00000000c0021b24                vtable for Bus
 .rodata.str1.1
                0x00000000c0021b50       0x1e hal/clock.32
 *fill*         0x00000000c0021b6e        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021b70       0x3c hal/clock.32
                0x00000000c0021b70                vtable for Clock
 *fill*         0x00000000c0021bac       0x14 
 .rodata        0x00000000c0021bc0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021bf0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021c48       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021c48       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021c48       0x2c hal/device.32
                0x00000000c0021c48                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021c74       0x2c hal/device.32
                0x00000000c0021c74                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021ca0       0x2c hal/diskctrl.32
                0x00000000c0021ca0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021ccc       0x38 hal/diskphys.32
                0x00000000c0021ccc                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021d04       0x3e hal/intctrl.32
 *fill*         0x00000000c0021d42        0x2 
 .rodata.str1.4
                0x00000000c0021d44       0x5d hal/intctrl.32
 .rodata        0x00000000c0021da1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021df4       0x34 hal/keybrd.32
                0x00000000c0021df4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021e28       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021e6c       0x2c hal/logidisk.32
                0x00000000c0021e6c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021e98       0x2c hal/mouse.32
                0x00000000c0021e98                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021ec4       0x34 hal/nic.32
                0x00000000c0021ec4                vtable for NIC
 .rodata.str1.1
                0x00000000c0021ef8        0xb hal/partition.32
 *fill*         0x00000000c0021f03        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021f04       0x44 hal/serial.32
                0x00000000c0021f04                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021f48       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021f48        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021f48       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021f48       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021f48       0x30 hal/timer.32
                0x00000000c0021f48                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021f78       0x10 hal/vcache.32
                0x00000000c0021f78                vtable for VCache
 .rodata.str1.1
                0x00000000c0021f88       0x93 hal/video.32
 *fill*         0x00000000c002201b        0x1 
 .rodata._ZTV5Video
                0x00000000c002201c       0x4c hal/video.32
                0x00000000c002201c                vtable for Video
 .rodata.str1.1
                0x00000000c0022068      0x1ec hw/acpi.32
                                        0x206 (size before relaxing)
 .rodata.str1.4
                0x00000000c0022254       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00222ef       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00222ef        0x8 hw/acpi.32
 *fill*         0x00000000c00222ef        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00222f0       0x2c hw/acpi.32
                0x00000000c00222f0                vtable for ACPI
 .rodata.str1.1
                0x00000000c002231c      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022497        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022498       0x2c hw/cpu.32
                0x00000000c0022498                vtable for CPU
 .rodata.str1.1
                0x00000000c00224c4       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022504       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0022540       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c00225d1       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c002269a       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00226e2       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c002270d       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0022783       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00227c8        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00227d2       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00227f3       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022889       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00228dd       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0022909      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022ad5       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022b2c      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022c3c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022c3c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022c3c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022c3c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022c3c       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022cfe        0x2 
 .rodata        0x00000000c0022d00       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022d30      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022ecf        0x1 
 .rodata.str1.4
                0x00000000c0022ed0       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022f43       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022f58       0x3c arch/i386/rtc.32
                0x00000000c0022f58                vtable for RTC
 .rodata.str1.1
                0x00000000c0022f94       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022fd5        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022fd8       0x6c fs/fat/vfslink.32
                0x00000000c0022fd8                vtable for FAT
 .rodata.str1.1
                0x00000000c0023044       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0023044      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002317c       0x6c fs/iso9660/vfslink.32
                0x00000000c002317c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00231e8       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002322c       0x34 hal/sound/sndcard.32
                0x00000000c002322c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023260       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002329f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00232d7       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023378       0x2c hw/bus/pci.32
                0x00000000c0023378                vtable for PCI
 .rodata.str1.1
                0x00000000c00233a4       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c002342b        0x1 
 .rodata._ZTV3IDE
                0x00000000c002342c       0x2c hw/diskctrl/ide.32
                0x00000000c002342c                vtable for IDE
 .rodata.str1.4
                0x00000000c0023458       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c002347c       0x2c hw/diskctrl/satabus.32
                0x00000000c002347c                vtable for SATABus
 .rodata.str1.1
                0x00000000c00234a8       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c00234ba        0x2 
 .rodata._ZTV3ATA
                0x00000000c00234bc       0x38 hw/diskphys/ata.32
                0x00000000c00234bc                vtable for ATA
 .rodata.str1.1
                0x00000000c00234f4        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0023501        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0023504       0x38 hw/diskphys/atapi.32
                0x00000000c0023504                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002353c       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00235b8       0x38 hw/diskphys/sata.32
                0x00000000c00235b8                vtable for SATA
 .rodata.str1.1
                0x00000000c00235f0       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00236da        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00236dc       0x38 hw/diskphys/satapi.32
                0x00000000c00236dc                vtable for SATAPI
 .rodata        0x00000000c0023714        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c002371c       0x2c hw/intctrl/apic.32
                0x00000000c002371c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023748       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0023763        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023764       0x30 hw/timer/apictimer.32
                0x00000000c0023764                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023794       0x1d hw/timer/pit.32
 *fill*         0x00000000c00237b1        0x3 
 .rodata._ZTV3PIT
                0x00000000c00237b4       0x30 hw/timer/pit.32
                0x00000000c00237b4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00237e4      0xbbd
 *(.data)
 .data          0x00000000c00237e4        0x0 crti.32
 .data          0x00000000c00237e4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00237e4                __dso_handle
 .data          0x00000000c00237e8        0x0 acpica/utclib.32
 .data          0x00000000c00237e8        0x0 core/malloc.32
 .data          0x00000000c00237e8        0x0 libk/ctype.32
 .data          0x00000000c00237e8        0x0 libk/string.32
 .data          0x00000000c00237e8        0x0 fs/fat/diskio.32
 .data          0x00000000c00237e8        0x0 fs/fat/ff.32
 .data          0x00000000c00237e8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00237e8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00237e8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00237e8        0x0 core/computer.32
 .data          0x00000000c00237e8        0x0 core/gdt.32
 .data          0x00000000c00237e8        0x0 core/idle.32
 .data          0x00000000c00237e8        0x0 core/idt.32
 .data          0x00000000c00237e8        0x4 core/kheap.32
 .data          0x00000000c00237ec        0x0 core/main.32
 .data          0x00000000c00237ec        0x4 core/physmgr.32
                0x00000000c00237ec                Phys::bitmap
 .data          0x00000000c00237f0        0x0 core/pipe.32
 *fill*         0x00000000c00237f0       0x10 
 .data          0x00000000c0023800       0x60 core/terminal.32
                0x00000000c0023800                VgaText::hiddenOut
                0x00000000c0023820                ansiToVGAMappings
 .data          0x00000000c0023860        0x0 core/tss.32
 .data          0x00000000c0023860        0x4 core/unixfile.32
                0x00000000c0023860                UnixFile::nextFd
 .data          0x00000000c0023864       0x15 core/virtmgr.32
                0x00000000c0023864                Virt::pageAllocPtr
                0x00000000c0023868                Virt::bitmap
                0x00000000c002386c                Virt::swapfileSectorsPerPage
                0x00000000c0023870                Virt::swapfileLength
                0x00000000c0023874                Virt::swapfileSector
                0x00000000c0023878                Virt::swapfileDrive
 *fill*         0x00000000c0023879        0x3 
 .data          0x00000000c002387c        0x4 coreobjs/c++.32
                0x00000000c002387c                __stack_chk_guard
 .data          0x00000000c0023880        0x0 dbg/kconsole.32
 .data          0x00000000c0023880       0x28 dbg/usban.32
                0x00000000c0023880                KiUsbanTypeMismatchTypes
 .data          0x00000000c00238a8        0x0 fs/symlink.32
 .data          0x00000000c00238a8        0x0 fs/vfs.32
 .data          0x00000000c00238a8        0x0 hal/bus.32
 .data          0x00000000c00238a8        0x0 hal/buzzer.32
 .data          0x00000000c00238a8        0x0 hal/clock.32
 .data          0x00000000c00238a8        0x0 hal/device.32
 .data          0x00000000c00238a8        0x0 hal/diskctrl.32
 .data          0x00000000c00238a8        0x0 hal/diskphys.32
 .data          0x00000000c00238a8        0x0 hal/fpu.32
 .data          0x00000000c00238a8        0x0 hal/intctrl.32
 .data          0x00000000c00238a8        0x0 hal/keybrd.32
 .data          0x00000000c00238a8        0x0 hal/logidisk.32
 .data          0x00000000c00238a8        0x0 hal/mouse.32
 .data          0x00000000c00238a8        0x0 hal/nic.32
 .data          0x00000000c00238a8        0x0 hal/partition.32
 .data          0x00000000c00238a8        0x0 hal/serial.32
 .data          0x00000000c00238a8        0x0 hal/timer.32
 .data          0x00000000c00238a8        0x0 hal/vcache.32
 .data          0x00000000c00238a8        0x0 hal/video.32
 .data          0x00000000c00238a8       0x10 hw/acpi.32
                0x00000000c00238a8                legacyIRQRemaps
 .data          0x00000000c00238b8        0x4 hw/cpu.32
                0x00000000c00238b8                lastCode
 .data          0x00000000c00238bc        0x0 krnl/atexit.32
 *fill*         0x00000000c00238bc        0x4 
 .data          0x00000000c00238c0      0x142 krnl/bootmsg.32
                0x00000000c00238c0                KiSplashScreen
 .data          0x00000000c0023a02        0x0 krnl/compat.32
 *fill*         0x00000000c0023a02       0x1e 
 .data          0x00000000c0023a20      0x400 krnl/crc32.32
                0x00000000c0023a20                KiPolyLookupCRC32
 .data          0x00000000c0023e20       0x4d krnl/env.32
                0x00000000c0023e20                defaultSysEnv
 .data          0x00000000c0023e6d        0x0 krnl/inlines.32
 .data          0x00000000c0023e6d        0x0 krnl/panic.32
 .data          0x00000000c0023e6d        0x0 krnl/powctrl.32
 .data          0x00000000c0023e6d        0x0 krnl/random.32
 .data          0x00000000c0023e6d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023e6d       0x13 
 .data          0x00000000c0023e80       0x4c krnl/signal.32
                0x00000000c0023e80                KiDefaultSignalHandlers
 *fill*         0x00000000c0023ecc       0x14 
 .data          0x00000000c0023ee0       0xfc krnl/syscalls.32
                0x00000000c0023ee0                systemCallHandlers
 .data          0x00000000c0023fdc        0x0 net/ethernet.32
 *fill*         0x00000000c0023fdc        0x4 
 .data          0x00000000c0023fe0      0x100 reg/cm.32
                0x00000000c0023fe0                CmComponents
 .data          0x00000000c00240e0        0x0 reg/registry.32
 .data          0x00000000c00240e0        0x0 sys/eject.32
 .data          0x00000000c00240e0        0x0 sys/exit.32
 .data          0x00000000c00240e0        0x0 sys/getcwd.32
 .data          0x00000000c00240e0        0x0 sys/getpid.32
 .data          0x00000000c00240e0        0x0 sys/getramdata.32
 .data          0x00000000c00240e0        0x0 sys/getvgaptr.32
 .data          0x00000000c00240e0        0x0 sys/kill.32
 .data          0x00000000c00240e0        0x0 sys/loaddll.32
 .data          0x00000000c00240e0        0x0 sys/read.32
 .data          0x00000000c00240e0        0x0 sys/registersignal.32
 .data          0x00000000c00240e0        0x0 sys/registry.32
 .data          0x00000000c00240e0        0x0 sys/sbrk.32
 .data          0x00000000c00240e0        0x0 sys/setcwd.32
 .data          0x00000000c00240e0        0x0 sys/settime.32
 .data          0x00000000c00240e0        0x0 sys/symlink.32
 .data          0x00000000c00240e0        0x0 sys/timezone.32
 .data          0x00000000c00240e0        0x0 sys/truncate.32
 .data          0x00000000c00240e0        0x0 sys/write.32
 .data          0x00000000c00240e0        0x0 sys/wsbe.32
 .data          0x00000000c00240e0        0x0 sys/yield.32
 .data          0x00000000c00240e0        0x0 thr/elf.32
 .data          0x00000000c00240e0        0x4 thr/prcssthr.32
                0x00000000c00240e0                Thr::nextPID
 .data          0x00000000c00240e4        0x0 vm86/vm8086.32
 *fill*         0x00000000c00240e4       0x1c 
 .data          0x00000000c0024100      0x2a0 arch/i386/hal.32
                0x00000000c0024100                exceptionNames
 .data          0x00000000c00243a0        0x0 arch/i386/pic.32
 .data          0x00000000c00243a0        0x0 arch/i386/rtc.32
 .data          0x00000000c00243a0        0x0 arch/i386/vga.32
 .data          0x00000000c00243a0        0x0 fs/fat/vfslink.32
 .data          0x00000000c00243a0        0x0 fs/iso9660/helper.32
 .data          0x00000000c00243a0        0x1 fs/iso9660/vfslink.32
                0x00000000c00243a0                recentDriveletter
 .data          0x00000000c00243a1        0x0 hal/sound/sndcard.32
 .data          0x00000000c00243a1        0x0 hal/sound/sndport.32
 .data          0x00000000c00243a1        0x0 hw/bus/isa.32
 .data          0x00000000c00243a1        0x0 hw/bus/pci.32
 .data          0x00000000c00243a1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00243a1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00243a1        0x0 hw/diskphys/ata.32
 .data          0x00000000c00243a1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00243a1        0x0 hw/diskphys/sata.32
 .data          0x00000000c00243a1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00243a1        0x0 hw/intctrl/apic.32
 .data          0x00000000c00243a1        0x0 hw/timer/apictimer.32
 .data          0x00000000c00243a1        0x0 hw/timer/pit.32
 .data          0x00000000c00243a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00243a1        0x0 crtn.32
 .data          0x00000000c00243a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00243a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00243a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00243a1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00243a4        0x0
 .got           0x00000000c00243a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00243a4        0x0
 .got.plt       0x00000000c00243a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00243a4        0x0
 .igot.plt      0x00000000c00243a4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00243a4        0x0
 .tm_clone_table
                0x00000000c00243a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00243a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00243a1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00243a1        0x3 
 .eh_frame      0x00000000c00243a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00243a4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00243a4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00243fc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002443c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00244a8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
