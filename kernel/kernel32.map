Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x205de
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x254 dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f06                Dbg::logs(char*)
                0x00000000c0006f25                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f43                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f64                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000709a        0x2 
 .text          0x00000000c000709c      0x2d4 dbg/usban.32
                0x00000000c000709c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007108                __ubsan_handle_type_mismatch_v1
                0x00000000c00071e4                __ubsan_handle_pointer_overflow
                0x00000000c0007210                __ubsan_handle_out_of_bounds
                0x00000000c000723c                __ubsan_handle_add_overflow
                0x00000000c0007268                __ubsan_handle_load_invalid_value
                0x00000000c0007294                __ubsan_handle_divrem_overflow
                0x00000000c00072c0                __ubsan_handle_mul_overflow
                0x00000000c00072ec                __ubsan_handle_sub_overflow
                0x00000000c0007318                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007344                __ubsan_handle_negate_overflow
 .text          0x00000000c0007370      0x814 fs/symlink.32
                0x00000000c00074bf                KiDeinitialiseSymlinks(void*)
                0x00000000c0007552                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075d5                KeInitialiseSymlinks()
                0x00000000c0007737                KiIsSymlinkRegistered(char const*)
                0x00000000c00078a1                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a48                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b84      0xd88 fs/vfs.32
                0x00000000c0007b84                File::read(unsigned long long, void*, int*)
                0x00000000c0007bdc                File::write(unsigned long long, void*, int*)
                0x00000000c0007c34                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cba                File::isAtty()
                0x00000000c0007cbe                Directory::isAtty()
                0x00000000c0007cc2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cc8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cce                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cf8                File::~File()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d46                Directory::~Directory()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007da2                Filesystem::~Filesystem()
                0x00000000c0007dc6                Fs::getcwd(Process*, char*, int)
                0x00000000c0007df0                Fs::initVFS()
                0x00000000c0007e1a                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008150                File::open(FileOpenMode)
                0x00000000c00081ae                File::close()
                0x00000000c000820e                File::seek(unsigned long long)
                0x00000000c0008264                File::truncate(unsigned long long)
                0x00000000c00082ba                File::tell(unsigned long long*)
                0x00000000c000830a                File::rewind()
                0x00000000c000831e                File::unlink()
                0x00000000c000836a                File::rename(char const*)
                0x00000000c00083b8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0008414                File::exists()
                0x00000000c0008452                File::stat(unsigned long long*, bool*)
                0x00000000c00084b3                Fs::setcwd(Process*, char*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c00086da                Directory::open()
                0x00000000c0008736                Directory::close()
                0x00000000c0008796                Directory::unlink()
                0x00000000c00087e2                Directory::rename(char const*)
                0x00000000c0008830                Directory::exists()
                0x00000000c000886e                Directory::read(dirent*)
                0x00000000c00088ba                Directory::create()
                0x00000000c0008906                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000890c       0x86 hal/bus.32
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008968                Bus::~Bus()
 .text          0x00000000c0008992       0x99 hal/buzzer.32
                0x00000000c0008992                KeBeepThread(void*)
                0x00000000c00089d2                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a2b        0x1 
 .text          0x00000000c0008a2c      0x543 hal/clock.32
                0x00000000c0008a2c                KeLoadClockSettings()
                0x00000000c0008b32                Clock::Clock(char const*)
                0x00000000c0008b32                Clock::Clock(char const*)
                0x00000000c0008b68                Clock::~Clock()
                0x00000000c0008b68                Clock::~Clock()
                0x00000000c0008b8c                Clock::~Clock()
                0x00000000c0008bb6                Clock::timeInSecondsLocal()
                0x00000000c0008bfe                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0008c57                KeDatetimeToSeconds(datetime_t)
                0x00000000c0008d76                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0008e03                KeSecondsToDatetime(unsigned long long)
                0x00000000c0008f4a                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0008f6f        0x1 
 .text          0x00000000c0008f70      0x47a hal/device.32
                0x00000000c0008f70                Device::hibernate()
                0x00000000c0008f72                Device::wake()
                0x00000000c0008f74                Device::detect()
                0x00000000c0008f76                Device::disableLegacy()
                0x00000000c0008f78                Device::powerSaving(PowerSavingLevel)
                0x00000000c0008f7a                DriverlessDevice::close(int, int, void*)
                0x00000000c0008f7e                DriverlessDevice::detect()
                0x00000000c0008f80                DriverlessDevice::open(int, int, void*)
                0x00000000c0008f94                Device::~Device()
                0x00000000c0008f94                Device::~Device()
                0x00000000c0008fa2                Device::~Device()
                0x00000000c0008fca                Device::findAndLoadDriver()
                0x00000000c0008fd8                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0008ffe                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000903e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009068                Device::getParent()
                0x00000000c0009074                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009092                Device::addChild(Device*)
                0x00000000c00090d6                Device::removeAllChildren()
                0x00000000c000911c                Device::hibernateAll()
                0x00000000c000914c                Device::wakeAll()
                0x00000000c000917c                Device::detectAll()
                0x00000000c00091ac                Device::disableLegacyAll()
                0x00000000c00091ae                Device::loadDriversForAll()
                0x00000000c00091b0                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00091e6                Device::setName(char const*)
                0x00000000c00091f4                Device::Device(char const*)
                0x00000000c00091f4                Device::Device(char const*)
                0x00000000c00092f0                Device::getName()
                0x00000000c00092fa                Device::closeAll()
                0x00000000c0009346                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009346                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000937c                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00093c0                getDevicesOfType(DeviceType)
 *fill*         0x00000000c00093ea        0x2 
 .text          0x00000000c00093ec       0x86 hal/diskctrl.32
                0x00000000c00093ec                HardDiskController::HardDiskController(char const*)
                0x00000000c00093ec                HardDiskController::HardDiskController(char const*)
                0x00000000c0009424                HardDiskController::~HardDiskController()
                0x00000000c0009424                HardDiskController::~HardDiskController()
                0x00000000c0009448                HardDiskController::~HardDiskController()
 .text          0x00000000c0009472       0xe2 hal/diskphys.32
                0x00000000c0009472                PhysicalDisk::eject()
                0x00000000c0009476                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009476                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00094de                PhysicalDisk::startCache()
                0x00000000c0009506                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009506                PhysicalDisk::~PhysicalDisk()
                0x00000000c000952a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009554        0x0 hal/fpu.32
 .text          0x00000000c0009554        0x0 hal/intctrl.32
 .text          0x00000000c0009554      0x874 hal/keybrd.32
                0x00000000c0009554                startGUI(void*)
                0x00000000c00095b9                startGUIVESA(void*)
                0x00000000c000961e                sendKeyToTerminal(unsigned char)
                0x00000000c00096f4                sendKeyboardToken(KeyboardToken)
                0x00000000c0009bb0                clearInternalKeybuffer(VgaText*)
                0x00000000c0009be5                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0009d3e                Keyboard::Keyboard(char const*)
                0x00000000c0009d3e                Keyboard::Keyboard(char const*)
                0x00000000c0009d7a                Keyboard::~Keyboard()
                0x00000000c0009d7a                Keyboard::~Keyboard()
                0x00000000c0009d9e                Keyboard::~Keyboard()
 .text          0x00000000c0009dc8      0x3f8 hal/logidisk.32
                0x00000000c0009dc8                LogicalDisk::close(int, int, void*)
                0x00000000c0009dcc                LogicalDisk::~LogicalDisk()
                0x00000000c0009dcc                LogicalDisk::~LogicalDisk()
                0x00000000c0009df0                LogicalDisk::~LogicalDisk()
                0x00000000c0009e1a                LogicalDisk::open(int, int, void*)
                0x00000000c0009e2e                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0009e66                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0009eac                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009eac                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0009f6c                LogicalDisk::assignDriveLetter()
                0x00000000c000a026                LogicalDisk::mount()
                0x00000000c000a06e                LogicalDisk::unmount()
                0x00000000c000a07e                LogicalDisk::eject()
                0x00000000c000a092                LogicalDisk::unassignDriveLetter()
                0x00000000c000a0e8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000a154                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000a1c0       0x86 hal/mouse.32
                0x00000000c000a1c0                Mouse::Mouse(char const*)
                0x00000000c000a1c0                Mouse::Mouse(char const*)
                0x00000000c000a1f8                Mouse::~Mouse()
                0x00000000c000a1f8                Mouse::~Mouse()
                0x00000000c000a21c                Mouse::~Mouse()
 .text          0x00000000c000a246       0x90 hal/nic.32
                0x00000000c000a246                NIC::getMAC()
                0x00000000c000a24c                NIC::write(int, unsigned char*, int*)
                0x00000000c000a252                NIC::NIC(char const*)
                0x00000000c000a252                NIC::NIC(char const*)
                0x00000000c000a288                NIC::~NIC()
                0x00000000c000a288                NIC::~NIC()
                0x00000000c000a2ac                NIC::~NIC()
 .text          0x00000000c000a2d6      0x33b hal/partition.32
                0x00000000c000a2d6                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a37e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000a611        0x3 
 .text          0x00000000c000a614       0x86 hal/serial.32
                0x00000000c000a614                Serial::Serial(char const*)
                0x00000000c000a614                Serial::Serial(char const*)
                0x00000000c000a64c                Serial::~Serial()
                0x00000000c000a64c                Serial::~Serial()
                0x00000000c000a670                Serial::~Serial()
 *fill*         0x00000000c000a69a        0x2 
 .text          0x00000000c000a69c      0x204 hal/timer.32
                0x00000000c000a69c                Timer::Timer(char const*)
                0x00000000c000a69c                Timer::Timer(char const*)
                0x00000000c000a6d4                Timer::~Timer()
                0x00000000c000a6d4                Timer::~Timer()
                0x00000000c000a6f8                Timer::~Timer()
                0x00000000c000a722                Timer::read()
                0x00000000c000a72d                setupTimer(int)
                0x00000000c000a768                timerHandler(unsigned int)
 .text          0x00000000c000a8a0      0x5fe hal/vcache.32
                0x00000000c000a8a0                VCache::VCache(PhysicalDisk*)
                0x00000000c000a8a0                VCache::VCache(PhysicalDisk*)
                0x00000000c000aa10                VCache::invalidateReadBuffer()
                0x00000000c000aa20                VCache::writeWriteBuffer()
                0x00000000c000aa6c                VCache::~VCache()
                0x00000000c000aa6c                VCache::~VCache()
                0x00000000c000aac4                VCache::~VCache()
                0x00000000c000aaec                VCache::write(unsigned long long, int, void*)
                0x00000000c000acba                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ae9e      0x70e hal/video.32
                0x00000000c000ae9e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000aeea                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000af5a                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000afd8                Video::clearScreen(unsigned int)
                0x00000000c000b00c                Video::putpixel(int, int, unsigned int)
                0x00000000c000b01a                Video::readPixelApprox(int, int)
                0x00000000c000b02e                Video::Video(char const*)
                0x00000000c000b02e                Video::Video(char const*)
                0x00000000c000b064                Video::~Video()
                0x00000000c000b064                Video::~Video()
                0x00000000c000b088                Video::~Video()
                0x00000000c000b0b2                Video::isMonochrome()
                0x00000000c000b0be                Video::getWidth()
                0x00000000c000b0ca                Video::getHeight()
                0x00000000c000b0d6                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000b192                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000b53c                Video::putTGA(int, int, unsigned char*, int)
 .text          0x00000000c000b5ac     0x114f hw/acpi.32
                0x00000000c000b5ac                ACPI::close(int, int, void*)
                0x00000000c000b5b4                loadACPITables(unsigned char*)
                0x00000000c000b814                findRSDT(unsigned char*)
                0x00000000c000b960                findDataTable(unsigned char*, char*)
                0x00000000c000b9d4                scanMADT()
                0x00000000c000be2c                ACPI::ACPI()
                0x00000000c000be2c                ACPI::ACPI()
                0x00000000c000be80                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000bf7c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000c048                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000c050                ACPI::detectPCI()
                0x00000000c000c25c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000c274                ACPI::open(int, int, void*)
 .text          0x00000000c000c6fb       0xb6 krnl/atexit.32
                0x00000000c000c6fb                KeInitialiseAtexit()
                0x00000000c000c71a                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000c74e                KeExecuteAtexit()
 .text          0x00000000c000c7b1       0x9f krnl/bootmsg.32
                0x00000000c000c7b1                KeDisplaySplashScreen()
                0x00000000c000c7e0                KeSetBootMessage(char const*)
 .text          0x00000000c000c850       0x5f krnl/c++.32
                0x00000000c000c850                __cxa_atexit
                0x00000000c000c853                __cxa_finalize
                0x00000000c000c854                __stack_chk_fail
                0x00000000c000c88a                __cxa_pure_virtual
                0x00000000c000c89b                operator new[](unsigned long)
                0x00000000c000c8a0                operator delete(void*, unsigned long)
                0x00000000c000c8a5                operator delete[](void*)
                0x00000000c000c8aa                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000c8af        0x1 
 .text          0x00000000c000c8b0       0x44 krnl/cdefs.32
                0x00000000c000c8b0                CUnlockScheduler
                0x00000000c000c8c8                CLockScheduler
                0x00000000c000c8d8                CPrintf
 .text          0x00000000c000c8f4      0xd56 krnl/cm.32
                0x00000000c000c8f4                CmOpen(char const*)
                0x00000000c000ca12                CmClose(Reghive_Tag*)
                0x00000000c000ca28                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000ca64                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000cadb                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000cb1a                CmGetNext(Reghive_Tag*, int)
                0x00000000c000cb4c                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000cb88                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000cbb0                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000cbd1                CmExpand(Reghive_Tag*, int)
                0x00000000c000cc4c                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000ccd2                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000cdc6                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000cf02                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000cf63                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000cf93                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000cfca                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000cff4                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000d034                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000d0d8                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000d106                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000d2a4                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000d2f1                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d36b                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000d3be                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000d482                zStrtok(char*, char const*)
                0x00000000c000d4f4                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000d575                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000d618                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000d64a        0x2 
 .text          0x00000000c000d64c       0x1d krnl/compat.32
                0x00000000c000d64c                Krnl::handlePowerButton()
                0x00000000c000d65c                Krnl::handleSleepButton()
 *fill*         0x00000000c000d669        0x1 
 .text          0x00000000c000d66a      0x2c3 krnl/computer.32
                0x00000000c000d66a                Computer::close(int, int, void*)
                0x00000000c000d670                Computer::open(int, int, void*)
                0x00000000c000d756                KeFirstTask()
                0x00000000c000d878                Computer::Computer()
                0x00000000c000d878                Computer::Computer()
                0x00000000c000d8bc                KePrepareShutdown()
                0x00000000c000d8dc                KeShutdown()
                0x00000000c000d900                KeSleep()
                0x00000000c000d90c                KeRestart()
 .text          0x00000000c000d92d       0x2b krnl/crc32.32
                0x00000000c000d92d                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000d958      0x5bf krnl/env.32
                0x00000000c000d958                EnvVarContainer::getEnv(char const*)
                0x00000000c000d996                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000da58                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000da5a                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000dc7e                EnvVarContainer::__loadSystem()
                0x00000000c000dc98                EnvVarContainer::__loadUser()
                0x00000000c000dc9a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000dc9a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000dcbc                EnvVarContainer::~EnvVarContainer()
                0x00000000c000dcbc                EnvVarContainer::~EnvVarContainer()
                0x00000000c000dcec                KeGetEnv(Process*, char const*)
                0x00000000c000dd51                KeSetEnvSystem(char const*, char const*)
                0x00000000c000dd6b                KeSetEnvUser(char const*, char const*)
                0x00000000c000dd8a                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000dd9d                KeDeleteEnvSystem(char const*)
                0x00000000c000dd9e                KeDeleteEnvUser(char const*)
                0x00000000c000dd9f                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000dda0                KeNewProcessEnv(Process*)
                0x00000000c000ddc2                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000de0e                KeLoadSystemEnv()
                0x00000000c000de3c                KeLoadUserEnv()
                0x00000000c000de62                KeFlushEnv()
                0x00000000c000de63                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000de83                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000df17        0x1 
 .text          0x00000000c000df18      0x361 krnl/fault.32
                0x00000000c000df18                KeSetupInterrupts()
                0x00000000c000df90                int_handler
                0x00000000c000e0c0                KeDisplayProgramFault(char const*)
                0x00000000c000e110                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e164                KePageFault(void*, void*)
                0x00000000c000e1c8                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e1d8                KeOtherFault(void*, void*)
                0x00000000c000e20c                KeOpcodeFault(void*, void*)
                0x00000000c000e260                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000e279        0x1 
 .text          0x00000000c000e27a      0x1db krnl/gdt.32
                0x00000000c000e27a                GDTEntry::setBase(unsigned int)
                0x00000000c000e296                GDTEntry::setLimit(unsigned int)
                0x00000000c000e2b4                GDT::GDT()
                0x00000000c000e2b4                GDT::GDT()
                0x00000000c000e2ca                GDT::addEntry(GDTEntry)
                0x00000000c000e2ec                GDT::getNumberOfEntries()
                0x00000000c000e2f4                GDT::flush()
                0x00000000c000e316                GDT::setup()
 .text          0x00000000c000e455       0x20 krnl/idle.32
                0x00000000c000e455                idleFunction(void*)
 *fill*         0x00000000c000e475        0x3 
 .text          0x00000000c000e478      0x46c krnl/idt.32
                0x00000000c000e478                IDTEntry::IDTEntry(bool)
                0x00000000c000e478                IDTEntry::IDTEntry(bool)
                0x00000000c000e4f2                IDTEntry::setOffset(unsigned int)
                0x00000000c000e508                IDT::IDT()
                0x00000000c000e508                IDT::IDT()
                0x00000000c000e50a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000e512                IDT::addEntry(IDTEntry, int)
                0x00000000c000e52c                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000e564                IDT::flush()
                0x00000000c000e57e                IDT::setup()
 .text          0x00000000c000e8e4       0x9a krnl/inlines.32
                0x00000000c000e8e4                CPU::current()
                0x00000000c000e8f0                operator new(unsigned long)
                0x00000000c000e8f5                operator delete(void*)
                0x00000000c000e8fa                disableIRQs()
                0x00000000c000e8fc                enableIRQs()
                0x00000000c000e8fe                lockScheduler()
                0x00000000c000e906                unlockScheduler()
                0x00000000c000e918                lockStuff()
                0x00000000c000e926                unlockStuff()
                0x00000000c000e963                Virt::getAKernelVAS()
                0x00000000c000e969                __not_memcpy
 .text          0x00000000c000e97e      0x207 krnl/kheap.32
                0x00000000c000e97e                sbrk
                0x00000000c000ea15                sbrk_thunk
                0x00000000c000ea4b                mmap
                0x00000000c000eaa9                munmap
                0x00000000c000eabe                liballoc_lock()
                0x00000000c000eacc                liballoc_unlock()
                0x00000000c000eae4                liballoc_alloc(int)
                0x00000000c000eafc                liballoc_free(void*, int)
                0x00000000c000eb17                realloc
                0x00000000c000eb2b                malloc
                0x00000000c000eb3b                free
                0x00000000c000eb4b                rfree
                0x00000000c000eb5b                calloc
 *fill*         0x00000000c000eb85        0x3 
 .text          0x00000000c000eb88      0x1d3 krnl/mailbox.32
                0x00000000c000eb88                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000ebe8                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000ec48                KeMailboxCreate()
                0x00000000c000ec7c                KeMailboxPost(Mailbox*, void*)
                0x00000000c000ece0                KeMailboxGet(Mailbox*, void**)
                0x00000000c000ed44                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000ed5b       0xfd krnl/main.32
                0x00000000c000ed5b                KeEntryPoint
 .text          0x00000000c000ee58       0x1a krnl/mutex.32
                0x00000000c000ee58                Mutex::Mutex()
                0x00000000c000ee58                Mutex::Mutex()
 .text          0x00000000c000ee72        0xc krnl/panic.32
                0x00000000c000ee72                KePanic(char const*)
 .text          0x00000000c000ee7e      0x667 krnl/physmgr.32
                0x00000000c000ee7e                Phys::allocateDMA(unsigned long)
                0x00000000c000ef66                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000efa1                Phys::setPageState(unsigned long, bool)
                0x00000000c000efe1                Phys::getPageState(unsigned long)
                0x00000000c000effd                Phys::freePage(unsigned long)
                0x00000000c000f066                Phys::allocatePage()
                0x00000000c000f144                Phys::allocateContiguousPages(int)
                0x00000000c000f1bf                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000f1f7                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000f4e5        0x1 
 .text          0x00000000c000f4e6      0x275 krnl/pipe.32
                0x00000000c000f4e6                Pipe::isAtty()
                0x00000000c000f4ea                Pipe::~Pipe()
                0x00000000c000f4ea                Pipe::~Pipe()
                0x00000000c000f50e                Pipe::~Pipe()
                0x00000000c000f536                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000f5f6                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000f6f4                Pipe::Pipe(int)
                0x00000000c000f6f4                Pipe::Pipe(int)
 .text          0x00000000c000f75b      0x10b krnl/powctrl.32
                0x00000000c000f75b                KePowerThread(void*)
                0x00000000c000f78c                KeChangePowerSettings(PowerSettings)
                0x00000000c000f7a2                KeUserIOReceived()
                0x00000000c000f7ad                KeHandlePowerButton()
                0x00000000c000f7c5                KeHandleSleepButton()
                0x00000000c000f7dd                KeSetupPowerManager()
 .text          0x00000000c000f866       0x9d krnl/random.32
                0x00000000c000f866                KeRand()
                0x00000000c000f8a8                KeSeedRand(unsigned int)
                0x00000000c000f8d1                KeInitRand()
 *fill*         0x00000000c000f903        0x1 
 .text          0x00000000c000f904      0x1bc krnl/resolve.32
                0x00000000c000f904                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c000fac0      0x401 krnl/semaphore.32
                0x00000000c000fac0                Semaphore::Semaphore(int)
                0x00000000c000fac0                Semaphore::Semaphore(int)
                0x00000000c000faf0                Semaphore::tryAcquire()
                0x00000000c000fbc4                Semaphore::assertLocked(char const*)
                0x00000000c000fc50                Semaphore::acquire(int)
                0x00000000c000fdf4                Semaphore::acquire()
                0x00000000c000fe10                Semaphore::release()
 .text          0x00000000c000fec1      0x322 krnl/signal.32
                0x00000000c000fec1                KiSigKill(int)
                0x00000000c000fed5                KiDefaultSignalHandlerIgnore(int)
                0x00000000c000fed6                KiDefaultSignalHandlerPause(int)
                0x00000000c000ff02                KiDefaultSignalHandlerResume(int)
                0x00000000c000ff2e                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c000ff33                KeInitSignals()
                0x00000000c000ff85                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c000ffbb                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010038                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001012f                KiCheckSignalZ
                0x00000000c0010171                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00101ac                KiFinishSignalZ
 .text          0x00000000c00101e3      0xe17 krnl/syscalls.32
                0x00000000c00101e3                SysSeekDir(regs*)
                0x00000000c00101e8                SysTellDir(regs*)
                0x00000000c00101ed                SysVerify(regs*)
                0x00000000c00101f7                SysGetArgc(regs*)
                0x00000000c001020b                SysTTYName(regs*)
                0x00000000c0010213                SysFormatDisk(regs*)
                0x00000000c001028a                SysSetDiskVolumeLabel(regs*)
                0x00000000c00102de                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010337                SysRealpath(regs*)
                0x00000000c001037b                SysReadDir(regs*)
                0x00000000c00103fb                SysIsATTY(regs*)
                0x00000000c0010455                SysSeek(regs*)
                0x00000000c00104b3                SysTell(regs*)
                0x00000000c0010528                SysSize(regs*)
                0x00000000c00105a2                SysSizeFromFilename(regs*)
                0x00000000c00106cc                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c00107f6                SysClose(regs*)
                0x00000000c0010856                SysOpenDir(regs*)
                0x00000000c00108d3                SysMakeDir(regs*)
                0x00000000c0010941                SysCloseDir(regs*)
                0x00000000c0010995                SysWait(regs*)
                0x00000000c00109b6                SysNotImpl(regs*)
                0x00000000c00109d1                SysPanic(regs*)
                0x00000000c00109ec                SysRmdir(regs*)
                0x00000000c0010a51                SysUnlink(regs*)
                0x00000000c0010ab6                SysGetArgv(regs*)
                0x00000000c0010b03                SysUSleep(regs*)
                0x00000000c0010b2c                SysSpawn(regs*)
                0x00000000c0010b9f                SysGetEnv(regs*)
                0x00000000c0010c50                SysSetFatAttrib(regs*)
                0x00000000c0010cc3                SysShutdown(regs*)
                0x00000000c0010d20                SysPipe(regs*)
                0x00000000c0010d65                SysGetUnixTime(regs*)
                0x00000000c0010d79                string_ends_with(char const*, char const*)
                0x00000000c0010dc1                SysOpen(regs*)
                0x00000000c0010fb8                KeSystemCall(regs*, void*)
 .text          0x00000000c0010ffa      0xb0b krnl/terminal.32
                0x00000000c0010ffa                VgaText::isAtty()
                0x00000000c0010ffe                VgaText::~VgaText()
                0x00000000c0010ffe                VgaText::~VgaText()
                0x00000000c0011022                VgaText::~VgaText()
                0x00000000c001104c                VgaText::read(unsigned long long, void*, int*)
                0x00000000c001106c                setTerminalScrollLock(bool)
                0x00000000c001106d                doTerminalCycle()
                0x00000000c001106e                addToTerminalCycle(VgaText*)
                0x00000000c001106f                scrollTerminalScrollLock(int)
                0x00000000c0011070                VgaText::updateTitle()
                0x00000000c0011072                VgaText::load()
                0x00000000c0011074                VgaText::updateCursor()
                0x00000000c001108a                VgaText::doANSI_SGR(int)
                0x00000000c00110fe                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c001110e                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c001111e                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c001113e                VgaText::setTitleTextColour(VgaColour)
                0x00000000c001114a                VgaText::setTitleColour(VgaColour)
                0x00000000c0011156                VgaText::setTitle(char*)
                0x00000000c0011158                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c001116a                VgaText::scrollScreen()
                0x00000000c00111fc                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c001120c                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00112b8                VgaText::getCursorX()
                0x00000000c00112c0                VgaText::getCursorY()
                0x00000000c00112c8                VgaText::setCursor(int, int)
                0x00000000c00112df                setActiveTerminal(VgaText*)
                0x00000000c001132a                VgaText::clearScreen()
                0x00000000c0011378                VgaText::setCursorX(int)
                0x00000000c0011390                VgaText::setCursorY(int)
                0x00000000c00113a8                VgaText::incrementCursor(bool)
                0x00000000c00113fc                VgaText::decrementCursor(bool)
                0x00000000c001141e                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00114ee                VgaText::putchar(char)
                0x00000000c00115e6                VgaText::putx(unsigned int)
                0x00000000c001162c                VgaText::puts(char const*)
                0x00000000c0011652                VgaText::write(unsigned long long, void*, int*)
                0x00000000c001169e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0011818                VgaText::VgaText(char const*)
                0x00000000c0011818                VgaText::VgaText(char const*)
                0x00000000c0011978                VgaText::receiveKey(unsigned char)
                0x00000000c0011b04                VgaText::doUpdate()
 *fill*         0x00000000c0011b05        0x3 
 .text          0x00000000c0011b08      0x224 krnl/tss.32
                0x00000000c0011b08                TSS::TSS()
                0x00000000c0011b08                TSS::TSS()
                0x00000000c0011b18                TSS::setESP(unsigned long)
                0x00000000c0011b2c                TSS::flush()
                0x00000000c0011b4c                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0011d2c      0x4dc krnl/unixfile.32
                0x00000000c0011d2c                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0011d82                ReservedFilename::isAtty()
                0x00000000c0011d9e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011dfc                UnixFile::getFileDescriptor()
                0x00000000c0011e04                UnixFile::UnixFile(int)
                0x00000000c0011e04                UnixFile::UnixFile(int)
                0x00000000c0011fb8                ReservedFilename::ReservedFilename(int)
                0x00000000c0011fb8                ReservedFilename::ReservedFilename(int)
                0x00000000c0011fea                UnixFile::~UnixFile()
                0x00000000c0011fea                UnixFile::~UnixFile()
                0x00000000c0012086                UnixFile::~UnixFile()
                0x00000000c00120ae                ReservedFilename::~ReservedFilename()
                0x00000000c00120ae                ReservedFilename::~ReservedFilename()
                0x00000000c00120d2                ReservedFilename::~ReservedFilename()
                0x00000000c00120f9                KeGetFileFromDescriptor(int)
 .text          0x00000000c0012208     0x14bc krnl/virtmgr.32
                0x00000000c0012208                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0012242                Virt::getPageState(unsigned long)
                0x00000000c0012265                Virt::allocateKernelVirtualPages(int)
                0x00000000c001238a                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00123ad                Virt::swapIDToSector(unsigned long)
                0x00000000c00123c3                Virt::allocateSwapfilePage()
                0x00000000c0012443                Virt::virtualMemorySetup()
                0x00000000c0012494                Virt::setupPageSwapping(int)
                0x00000000c0012506                VAS::setCPUSpecific(unsigned long)
                0x00000000c0012508                VAS::VAS(VAS*)
                0x00000000c0012508                VAS::VAS(VAS*)
                0x00000000c0012520                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c001254e                VAS::getPageTableEntry(unsigned long)
                0x00000000c001256d                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00126aa                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00126ce                VAS::virtualToPhysical(unsigned long)
                0x00000000c00126e8                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c001272a                VAS::VAS()
                0x00000000c001272a                VAS::VAS()
                0x00000000c0012794                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00127b4                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00127e0                VAS::~VAS()
                0x00000000c00127e0                VAS::~VAS()
                0x00000000c0012948                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0012a4c                VAS::allocatePages(int, int)
                0x00000000c0012b32                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0012b8a                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0012c80                VAS::VAS(bool)
                0x00000000c0012c80                VAS::VAS(bool)
                0x00000000c0012e68                VAS::evict(unsigned long)
                0x00000000c0012f6c                VAS::canLockPage(unsigned long)
                0x00000000c0012f86                VAS::unlockPage(unsigned long)
                0x00000000c0012fba                VAS::canLockPages(unsigned long, int)
                0x00000000c0012ff6                VAS::unlockPages(unsigned long, int)
                0x00000000c0013032                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0013342                VAS::lockPage(unsigned long)
                0x00000000c00133b4                VAS::lockPages(unsigned long, int)
                0x00000000c00133f0                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0013464                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0013490                VAS::scanForEviction()
                0x00000000c00135c9                mapVASFirstTime
 .text          0x00000000c00136c4       0x36 sys/eject.32
                0x00000000c00136c4                SysEject(regs*)
 .text          0x00000000c00136fa       0x18 sys/exit.32
                0x00000000c00136fa                SysExit(regs*)
 .text          0x00000000c0013712       0x1f sys/getcwd.32
                0x00000000c0013712                SysGetCwd(regs*)
 .text          0x00000000c0013731       0x26 sys/getpid.32
                0x00000000c0013731                SysGetPID(regs*)
 .text          0x00000000c0013757       0x21 sys/getramdata.32
                0x00000000c0013757                SysGetRAMData(regs*)
 .text          0x00000000c0013778       0x97 sys/getvgaptr.32
                0x00000000c0013778                SysGetVGAPtr(regs*)
 *fill*         0x00000000c001380f        0x1 
 .text          0x00000000c0013810       0xb9 sys/kill.32
                0x00000000c0013810                SysKill(regs*)
 .text          0x00000000c00138c9       0xa8 sys/loaddll.32
                0x00000000c00138c9                SysLoadDLL(regs*)
 .text          0x00000000c0013971       0x68 sys/read.32
                0x00000000c0013971                SysRead(regs*)
 .text          0x00000000c00139d9       0x29 sys/registersignal.32
                0x00000000c00139d9                SysRegisterSignal(regs*)
 .text          0x00000000c0013a02      0x1cc sys/registry.32
                0x00000000c0013a02                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013a46                SysRegistryReadExtent(regs*)
                0x00000000c0013a8e                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013aa5                SysRegistryEnterDirectory(regs*)
                0x00000000c0013abc                SysRegistryGetNext(regs*)
                0x00000000c0013ad3                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0013b0d                SysRegistryOpen(regs*)
                0x00000000c0013b21                SysRegistryClose(regs*)
                0x00000000c0013b38                SysRegistryEasyReadString(regs*)
                0x00000000c0013b84                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0013bce       0x55 sys/sbrk.32
                0x00000000c0013bce                SysSbrk(regs*)
 .text          0x00000000c0013c23       0x1c sys/setcwd.32
                0x00000000c0013c23                SysSetCwd(regs*)
 .text          0x00000000c0013c3f       0xd7 sys/settime.32
                0x00000000c0013c3f                SysSetTime(regs*)
 .text          0x00000000c0013d16       0x73 sys/symlink.32
                0x00000000c0013d16                SysSymlink(regs*)
 .text          0x00000000c0013d89       0x3f sys/timezone.32
                0x00000000c0013d89                SysTimezone(regs*)
 .text          0x00000000c0013dc8       0xfc sys/truncate.32
                0x00000000c0013dc8                SysTruncate(regs*)
 .text          0x00000000c0013ec4       0x68 sys/write.32
                0x00000000c0013ec4                SysWrite(regs*)
 .text          0x00000000c0013f2c       0x9d sys/wsbe.32
                0x00000000c0013f2c                SysWsbe(regs*)
 .text          0x00000000c0013fc9       0x28 sys/yield.32
                0x00000000c0013fc9                SysYield(regs*)
 .text          0x00000000c0013ff1     0x120b thr/elf.32
                0x00000000c0013ff1                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014283                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014495                Thr::runtimeReferenceHelper()
                0x00000000c00144a8                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00144f7                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00147b5                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014eee                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014f20                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014f57                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014f71                Thr::loadDLL(char const*, bool)
                0x00000000c00151c3                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00151fc       0x5a thr/exec.32
                0x00000000c00151fc                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0015256        0x2 
 .text          0x00000000c0015258     0x11c5 thr/prcssthr.32
                0x00000000c0015258                userModeEntryPoint(void*)
                0x00000000c0015284                changeTSS
                0x00000000c00152b4                switchToThread(ThreadControlBlock*)
                0x00000000c0015364                Process::addArgs(char**)
                0x00000000c00153d0                Process::Process(char const*, Process*, char**)
                0x00000000c00153d0                Process::Process(char const*, Process*, char**)
                0x00000000c00155f8                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00155f8                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00157e4                taskStartupFunction
                0x00000000c00157f0                KeDisablePreemption()
                0x00000000c0015818                KeRestorePreemption()
                0x00000000c0015838                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001594c                Process::createUserThread()
                0x00000000c001596c                setupMultitasking(void (*)())
                0x00000000c0015a90                schedule()
                0x00000000c0015b24                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0015b50                blockTask(TaskState)
                0x00000000c0015b8c                waitTask(int, int*, int)
                0x00000000c0015bd0                milliTenthSleepUntil(unsigned int)
                0x00000000c0015c78                milliTenthSleep(unsigned int)
                0x00000000c0015c8c                sleep(unsigned int)
                0x00000000c0015ca8                taskReturned
                0x00000000c0015cf0                Thr::processFromPID(int)
                0x00000000c0015da0                unblockTask(ThreadControlBlock*)
                0x00000000c0015e54                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016128                cleanerTaskFunction(void*)
                0x00000000c0016240                terminateTask(int)
                0x00000000c0016350                Thr::terminateFromIRQ(int)
 .text          0x00000000c001641d      0xd10 vm86/vm8086.32
                0x00000000c001641d                Vm::inbv(unsigned short)
                0x00000000c0016430                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016466                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016476                Vm::getSegment(unsigned int)
                0x00000000c001647e                Vm::getOffset(unsigned int)
                0x00000000c0016483                Vm::mainloop2()
                0x00000000c00164bd                Vm::mainVm8086Loop(void*)
                0x00000000c00164d0                Vm::mainloop3(unsigned long)
                0x00000000c00164f6                Vm::initialise8086()
                0x00000000c0016539                Vm::resetConventionalMemory8086()
                0x00000000c001653a                Vm::finish8086()
                0x00000000c001659c                Vm::getOutput8086(unsigned char*)
                0x00000000c00165c1                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00166ee                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00168fc                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016995                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00169a6                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00169b8                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00169c9                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00169de                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00169f4                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016a09                Vm::faultHandler(regs*)
 *fill*         0x00000000c001712d        0x1 
 .text          0x00000000c001712e     0x1ee7 arch/i386/hal.32
                0x00000000c001712e                noCopro(unsigned long)
                0x00000000c0017130                CPU::close(int, int, void*)
                0x00000000c0017133                x86ReadCMOS(unsigned char)
                0x00000000c0017187                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c00171e7                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0017206                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0017223                AMD_K6_writeback(int, int, int)
                0x00000000c00172e3                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0017381                cpuidCheckEDX(unsigned int)
                0x00000000c00173ae                cpuidCheckECX(unsigned int)
                0x00000000c00173dc                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001740a                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0017438                HalDetectFeatures()
                0x00000000c0018203                HalEnableNMI()
                0x00000000c0018216                HalDisableNMI()
                0x00000000c0018229                HalGetNMIState()
                0x00000000c001822f                x86rdmsr(unsigned int)
                0x00000000c001826d                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c00182b2                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c00182c8                HalFindRSDP()
                0x00000000c001835d                HalHandlePageFault(void*, void*)
                0x00000000c001840a                HalHandleOpcodeFault(void*, void*)
                0x00000000c001844c                HalDisplayDebugInfo(void*)
                0x00000000c00187da                HalReceivedNMI()
                0x00000000c0018875                HalSystemIdle()
                0x00000000c00188d4                i386SaveCoprocessor(void*)
                0x00000000c00188e8                i386LoadCoprocessor(void*)
                0x00000000c00188fc                x87EmulHandler(regs*, void*)
                0x00000000c0018999                HalInitialiseCoprocessor()
                0x00000000c0018a1d                HalPanic(char const*)
                0x00000000c0018b31                HalQueryPerformanceCounter()
                0x00000000c0018b41                HalInitialise()
                0x00000000c0018cd3                HalMakeBeep(int)
                0x00000000c0018d0d                HalGetRand()
                0x00000000c0018d10                HalEndOfInterrupt(int)
                0x00000000c0018d3b                HalRestart()
                0x00000000c0018d3c                HalShutdown()
                0x00000000c0018d3d                HalSleep()
                0x00000000c0018d3e                CPU::CPU()
                0x00000000c0018d3e                CPU::CPU()
                0x00000000c0018dc2                CPU::setupSMEP()
                0x00000000c0018dce                CPU::setupUMIP()
                0x00000000c0018dd8                CPU::setupTSC()
                0x00000000c0018de2                CPU::setupLargePages()
                0x00000000c0018dec                CPU::setupPAT()
                0x00000000c0018e1e                CPU::setupMTRR()
                0x00000000c0018e20                CPU::setupGlobalPages()
                0x00000000c0018e2a                CPU::allowUsermodeDataAccess()
                0x00000000c0018e38                CPU::prohibitUsermodeDataAccess()
                0x00000000c0018e46                CPU::setupSMAP()
                0x00000000c0018e54                CPU::setupFeatures()
                0x00000000c0018f20                CPU::open(int, int, void*)
 .text          0x00000000c0019015      0x261 arch/i386/intctrl.32
                0x00000000c0019015                convertLegacyIRQNumber(int)
                0x00000000c0019051                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001909b                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00191c9                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c00191fd                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c0019276        0x2 
 .text          0x00000000c0019278      0x2dc arch/i386/pic.32
                0x00000000c0019278                picIoWait()
                0x00000000c0019280                picDisable()
                0x00000000c00192b4                picGetIRQReg(int)
                0x00000000c0019330                picOpen()
                0x00000000c00194b4                picEOI(int)
 .text          0x00000000c0019554      0x5f3 arch/i386/rtc.32
                0x00000000c0019554                RTC::open(int, int, void*)
                0x00000000c0019558                RTC::close(int, int, void*)
                0x00000000c001955c                RTC::timeInSecondsUTC()
                0x00000000c001956e                RTC::timeInDatetimeUTC()
                0x00000000c0019594                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00195d2                RTC::~RTC()
                0x00000000c00195d2                RTC::~RTC()
                0x00000000c00195f6                RTC::~RTC()
                0x00000000c0019620                RTC::get_update_in_progress_flag()
                0x00000000c0019634                RTC::completeRTCRefresh()
                0x00000000c00198e8                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0019a5e                rtcIRQHandler(regs*, void*)
                0x00000000c0019a9e                RTC::RTC()
                0x00000000c0019a9e                RTC::RTC()
 *fill*         0x00000000c0019b47        0x1 
 .text          0x00000000c0019b48      0x1f4 arch/i386/vga.32
                0x00000000c0019b48                HalConsoleScroll(int, int)
                0x00000000c0019c50                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0019cb4                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0019d3c     0x14cf fs/fat/vfslink.32
                0x00000000c0019d3c                FAT::getName()
                0x00000000c0019d44                FAT::tell(void*, unsigned long long*)
                0x00000000c0019d80                FAT::stat(void*, unsigned long long*)
                0x00000000c0019dbc                FAT::~FAT()
                0x00000000c0019dbc                FAT::~FAT()
                0x00000000c0019de0                FAT::~FAT()
                0x00000000c0019e08                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019eac                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019f70                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a154                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001a370                FAT::allocateSwapfile(char const*, int)
                0x00000000c001a530                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a6a0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001a700                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a760                FAT::close(void*)
                0x00000000c001a7b4                FAT::closeDir(void*)
                0x00000000c001a808                FAT::truncate(void*, unsigned long long)
                0x00000000c001a874                FAT::seek(void*, unsigned long long)
                0x00000000c001a8cc                fatWrapperReadDisk
                0x00000000c001a90c                fatWrapperWriteDisk
                0x00000000c001a94c                fatWrapperIoctl
                0x00000000c001aa68                FAT::FAT()
                0x00000000c001aa68                FAT::FAT()
                0x00000000c001aac0                FAT::fixFilepath(char*)
                0x00000000c001ab00                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001ac74                FAT::openDir(char const*, void**)
                0x00000000c001ad24                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001ae1c                FAT::unlink(char const*)
                0x00000000c001ae9c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b050                FAT::rename(char const*, char const*)
                0x00000000c001b11c                FAT::mkdir(char const*)
                0x00000000c001b19c                FAT::exists(char const*)
 *fill*         0x00000000c001b20b        0x1 
 .text          0x00000000c001b20c       0x94 fs/iso9660/helper.32
                0x00000000c001b20c                isoReadDiscSectorHelper
                0x00000000c001b268                iso_kprintf
                0x00000000c001b284                iso_kprintfd
 .text          0x00000000c001b2a0      0x71c fs/iso9660/vfslink.32
                0x00000000c001b2a0                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b2a6                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001b2ac                ISO9660::getName()
                0x00000000c001b2b2                ISO9660::closeDir(void*)
                0x00000000c001b2bc                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b2c2                ISO9660::unlink(char const*)
                0x00000000c001b2c8                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001b2ce                ISO9660::rename(char const*, char const*)
                0x00000000c001b2d4                ISO9660::mkdir(char const*)
                0x00000000c001b2da                ISO9660::~ISO9660()
                0x00000000c001b2da                ISO9660::~ISO9660()
                0x00000000c001b2fe                ISO9660::~ISO9660()
                0x00000000c001b326                ISO9660::exists(char const*)
                0x00000000c001b33a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001b420                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001b468                ISO9660::seek(void*, unsigned long long)
                0x00000000c001b4aa                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001b4e8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001b53a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b67c                ISO9660::close(void*)
                0x00000000c001b6ac                ISO9660::openDir(char const*, void**)
                0x00000000c001b786                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b8a3                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b922                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b994                ISO9660::ISO9660()
                0x00000000c001b994                ISO9660::ISO9660()
 .text          0x00000000c001b9bc      0x26c hal/sound/sndcard.32
                0x00000000c001b9bc                SoundCard::beginPlayback()
                0x00000000c001b9ca                SoundCard::stopPlayback()
                0x00000000c001b9d8                SoundCard::SoundCard(char const*)
                0x00000000c001b9d8                SoundCard::SoundCard(char const*)
                0x00000000c001ba76                SoundCard::~SoundCard()
                0x00000000c001ba76                SoundCard::~SoundCard()
                0x00000000c001ba9a                SoundCard::~SoundCard()
                0x00000000c001bac4                SoundCard::configureRates(int, int, int)
                0x00000000c001baf4                SoundCard::getSamples16(int, short*)
                0x00000000c001bb50                SoundCard::getSamples32(int, int*)
                0x00000000c001bbd6                SoundCard::addChannel(SoundPort*)
                0x00000000c001bc14                SoundCard::removeChannel(int)
 .text          0x00000000c001bc28      0x426 hal/sound/sndport.32
                0x00000000c001bc28                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001bc28                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001bcb4                SoundPort::~SoundPort()
                0x00000000c001bcb4                SoundPort::~SoundPort()
                0x00000000c001bce8                SoundPort::unpause()
                0x00000000c001bcf4                SoundPort::pause()
                0x00000000c001bd00                SoundPort::getBufferUsed()
                0x00000000c001bd08                SoundPort::getBufferSize()
                0x00000000c001bd10                SoundPort::buffer8(signed char*, int)
                0x00000000c001bda4                SoundPort::buffer16(short*, int)
                0x00000000c001be38                SoundPort::buffer32(int*, int)
                0x00000000c001bec4                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001bf90                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001c04e        0x0 hw/bus/isa.32
 .text          0x00000000c001c04e      0xc23 hw/bus/pci.32
                0x00000000c001c04e                PCI::open(int, int, void*)
                0x00000000c001c06c                PCI::close(int, int, void*)
                0x00000000c001c070                PCI::PCI()
                0x00000000c001c070                PCI::PCI()
                0x00000000c001c108                PCI::readBAR8(unsigned int, int)
                0x00000000c001c124                PCI::readBAR16(unsigned int, int)
                0x00000000c001c142                PCI::readBAR32(unsigned int, int)
                0x00000000c001c15e                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001c17e                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001c1a0                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001c1c0                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c236                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c2e0                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c304                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001c32c                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001c376                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001c39e                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c3c2                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001c3e6                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001c40e                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c472                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001c55a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001c820                PCI::checkBus(unsigned char)
                0x00000000c001c844                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001ca2a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001cba6                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001cc18                PCI::detect()
 *fill*         0x00000000c001cc71        0x1 
 .text          0x00000000c001cc72      0xe56 hw/diskctrl/ide.32
                0x00000000c001cc72                IDE::close(int, int, void*)
                0x00000000c001cc76                IDE::IDE()
                0x00000000c001cc76                IDE::IDE()
                0x00000000c001ccaa                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ccbc                selectDrive(unsigned char, unsigned char)
                0x00000000c001ccbe                IDE::getBase(unsigned char)
                0x00000000c001ccd0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001cd90                IDE::read(unsigned char, unsigned char)
                0x00000000c001ce3e                IDE::waitInterrupt(unsigned char)
                0x00000000c001cea0                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001cebc                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ced8                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001cf22                IDE::open(int, int, void*)
                0x00000000c001d47c                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001d54c                IDE::detect()
                0x00000000c001d9ba                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001da74                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001dac8      0x33d hw/diskctrl/satabus.32
                0x00000000c001dac8                SATABus::close(int, int, void*)
                0x00000000c001dacc                SATABus::detect()
                0x00000000c001dace                SATABus::SATABus()
                0x00000000c001dace                SATABus::SATABus()
                0x00000000c001db54                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001db86                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001dbce                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001dbee                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001dc18                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001dd28                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001ddd2                SATABus::open(int, int, void*)
 *fill*         0x00000000c001de05        0x1 
 .text          0x00000000c001de06      0x7a9 hw/diskphys/ata.32
                0x00000000c001de06                ATA::close(int, int, void*)
                0x00000000c001de2a                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001de2c                ATA::ATA()
                0x00000000c001de2c                ATA::ATA()
                0x00000000c001de5a                ATA::flush(bool)
                0x00000000c001dea8                ATA::readyForCommand()
                0x00000000c001def4                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001e2e4                ATA::read(unsigned long long, int, void*)
                0x00000000c001e330                ATA::write(unsigned long long, int, void*)
                0x00000000c001e37c                ATA::detectCHS()
                0x00000000c001e3a6                ATA::open(int, int, void*)
                0x00000000c001e591                combineCharAndColour(char, unsigned char)
                0x00000000c001e5a2                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001e5af        0x1 
 .text          0x00000000c001e5b0      0x618 hw/diskphys/atapi.32
                0x00000000c001e5b0                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001e5b6                ATAPI::close(int, int, void*)
                0x00000000c001e5da                ATAPI::ATAPI()
                0x00000000c001e5da                ATAPI::ATAPI()
                0x00000000c001e608                ATAPI::readyForCommand()
                0x00000000c001e65a                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001e922                ATAPI::diskRemoved()
                0x00000000c001e95c                ATAPI::eject()
                0x00000000c001e9a4                ATAPI::diskInserted()
                0x00000000c001e9b0                ATAPI::detectMedia()
                0x00000000c001ea6e                ATAPI::open(int, int, void*)
                0x00000000c001eb4e                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ebc8      0x44c hw/diskphys/sata.32
                0x00000000c001ebc8                SATA::close(int, int, void*)
                0x00000000c001ebec                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ebee                SATA::open(int, int, void*)
                0x00000000c001eca6                SATA::SATA()
                0x00000000c001eca6                SATA::SATA()
                0x00000000c001ecd4                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ef5c                SATA::read(unsigned long long, int, void*)
                0x00000000c001efa8                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001f014      0x5d0 hw/diskphys/satapi.32
                0x00000000c001f014                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001f01a                SATAPI::close(int, int, void*)
                0x00000000c001f03e                SATAPI::SATAPI()
                0x00000000c001f03e                SATAPI::SATAPI()
                0x00000000c001f06c                SATAPI::diskRemoved()
                0x00000000c001f06e                SATAPI::diskInserted()
                0x00000000c001f08a                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001f368                SATAPI::eject()
                0x00000000c001f3a4                SATAPI::detectMedia()
                0x00000000c001f3fa                SATAPI::open(int, int, void*)
                0x00000000c001f4fa                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001f5e4      0x443 hw/intctrl/apic.32
                0x00000000c001f5e4                IOAPIC::close(int, int, void*)
                0x00000000c001f5ea                apicGetBase()
                0x00000000c001f608                IOAPIC::IOAPIC()
                0x00000000c001f608                IOAPIC::IOAPIC()
                0x00000000c001f630                apicOpen()
                0x00000000c001f7bc                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001f7ee                IOAPIC::read(int)
                0x00000000c001f816                IOAPIC::open(int, int, void*)
                0x00000000c001f8fc                IOAPIC::write(int, int)
                0x00000000c001f928                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001fa27        0x1 
 .text          0x00000000c001fa28       0xf0 hw/timer/apictimer.32
                0x00000000c001fa28                APICTimer::close(int, int, void*)
                0x00000000c001fa30                apicTimerHandler(regs*, void*)
                0x00000000c001fa58                APICTimer::open(int, int, void*)
                0x00000000c001fac8                APICTimer::write(int)
                0x00000000c001faf0                APICTimer::APICTimer()
                0x00000000c001faf0                APICTimer::APICTimer()
 .text          0x00000000c001fb18      0x1ad hw/timer/pit.32
                0x00000000c001fb18                PIT::write(int)
                0x00000000c001fb9c                pitHandler(regs*, void*)
                0x00000000c001fbc4                PIT::open(int, int, void*)
                0x00000000c001fc14                PIT::close(int, int, void*)
                0x00000000c001fc44                PIT::PIT()
                0x00000000c001fc44                PIT::PIT()
 *fill*         0x00000000c001fcc5        0xb 
 .text          0x00000000c001fcd0       0x6f arch/i386/avx.32
                0x00000000c001fcd0                avxDetect
                0x00000000c001fcfa                avxSave
                0x00000000c001fd0b                avxLoad
                0x00000000c001fd1c                avxInit
                0x00000000c001fd3e                avxClose
 *fill*         0x00000000c001fd3f        0x1 
 .text          0x00000000c001fd40      0x2ec arch/i386/interrupt.32
                0x00000000c001fd40                isr0
                0x00000000c001fd50                isr1
                0x00000000c001fd5a                isr2
                0x00000000c001fd64                isr3
                0x00000000c001fd6e                isr4
                0x00000000c001fd78                isr5
                0x00000000c001fd82                isr6
                0x00000000c001fd8c                isr7
                0x00000000c001fd96                isr8
                0x00000000c001fd9e                isr9
                0x00000000c001fda8                isr10
                0x00000000c001fdb0                isr11
                0x00000000c001fdb8                isr12
                0x00000000c001fdc0                isr13
                0x00000000c001fdda                isr14
                0x00000000c001fde2                isr15
                0x00000000c001fdec                isr16
                0x00000000c001fdf6                isr17
                0x00000000c001fe00                isr18
                0x00000000c001fe0a                irq3
                0x00000000c001fe14                irq4
                0x00000000c001fe1e                irq5
                0x00000000c001fe28                irq6
                0x00000000c001fe32                irq7
                0x00000000c001fe3c                irq8
                0x00000000c001fe46                irq9
                0x00000000c001fe50                irq10
                0x00000000c001fe5a                irq11
                0x00000000c001fe64                irq12
                0x00000000c001fe6e                irq13
                0x00000000c001fe78                irq14
                0x00000000c001fe82                irq15
                0x00000000c001fe8c                irq1
                0x00000000c001fe93                irq2
                0x00000000c001fe9a                isr96
                0x00000000c001fea1                irq0
                0x00000000c001fea6                int_common_stub
                0x00000000c001fed8                syscall_common_stub
                0x00000000c001ffdc                irq16
                0x00000000c001ffe6                irq17
                0x00000000c001fff0                irq18
                0x00000000c001fffa                irq19
                0x00000000c0020004                irq20
                0x00000000c002000e                irq21
                0x00000000c0020018                irq22
                0x00000000c0020022                irq23
 *fill*         0x00000000c002002c        0x4 
 .text          0x00000000c0020030       0x10 arch/i386/rdrand.32
                0x00000000c0020030                i386GetRDRAND
 .text          0x00000000c0020040       0x39 arch/i386/sse.32
                0x00000000c0020040                sseDetect
                0x00000000c0020058                sseSave
                0x00000000c0020060                sseLoad
                0x00000000c0020068                sseInit
                0x00000000c0020078                sseClose
 *fill*         0x00000000c0020079        0x7 
 .text          0x00000000c0020080       0x4f arch/i386/x87.32
                0x00000000c0020086                x87Detect
                0x00000000c00200a7                x87Save
                0x00000000c00200ae                x87Load
                0x00000000c00200b5                x87Init
                0x00000000c00200ce                x87Close
 *fill*         0x00000000c00200cf        0x1 
 .text          0x00000000c00200d0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00200f5        0x0 crtn.32
 *fill*         0x00000000c00200f5        0x3 
 .text          0x00000000c00200f8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00200f8                __divdi3
 *fill*         0x00000000c0020243        0x1 
 .text          0x00000000c0020244      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0020244                __moddi3
 *fill*         0x00000000c00203c2        0x2 
 .text          0x00000000c00203c4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00203c4                __udivdi3
 *fill*         0x00000000c00204c3        0x1 
 .text          0x00000000c00204c4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c00204c4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c00205e0        0x0
 .iplt          0x00000000c00205e0        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c00205de        0xf
 .init          0x00000000c00205de        0x3 crti.32
                0x00000000c00205de                _init
 .init          0x00000000c00205e1        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c00205e6        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c00205eb        0x2 crtn.32

.fini           0x00000000c00205ed        0xa
 .fini          0x00000000c00205ed        0x3 crti.32
                0x00000000c00205ed                _fini
 .fini          0x00000000c00205f0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c00205f5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00205f8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c00205f8       0x1a hal/device.32
                0x00000000c00205f8                DriverlessDevice::~DriverlessDevice()
                0x00000000c00205f8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020612       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0020612       0x2a hal/device.32
                0x00000000c0020612                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002063c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002063c       0xdc hal/device.32
                0x00000000c002063c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020718       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0020718       0x42 hal/device.32
                0x00000000c0020718                LinkedList<Device>::LinkedList()
                0x00000000c0020718                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002075c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002075c       0x1c hal/timer.32
                0x00000000c002075c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020778        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0020778        0x7 hal/timer.32
                0x00000000c0020778                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020780       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0020780       0xbc hal/timer.32
                0x00000000c0020780                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002083c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002083c       0xda hal/timer.32
                0x00000000c002083c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0020918       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0020918       0x23 hw/acpi.32
                0x00000000c0020918                ACPI::~ACPI()
                0x00000000c0020918                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002093c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002093c       0x2a hw/acpi.32
                0x00000000c002093c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020968        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0020968        0x2 hw/acpi.32
                0x00000000c0020968                LinkedList<Device>::~LinkedList()
                0x00000000c0020968                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002096c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002096c       0x1c hw/acpi.32
                0x00000000c002096c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0020988        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0020988        0x7 hw/acpi.32
                0x00000000c0020988                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020990       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020990       0xb8 hw/acpi.32
                0x00000000c0020990                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0020a48       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0020a48       0x23 krnl/computer.32
                0x00000000c0020a48                Computer::~Computer()
                0x00000000c0020a48                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0020a6c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0020a6c       0x2a krnl/computer.32
                0x00000000c0020a6c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0020a96       0x24
 .text._Z10idleCommonv
                0x00000000c0020a96       0x24 krnl/idle.32
                0x00000000c0020a96                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0020aba        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0020aba        0x2 krnl/unixfile.32
                0x00000000c0020aba                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0020aba                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0020abc       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0020abc       0x42 krnl/unixfile.32
                0x00000000c0020abc                LinkedList<UnixFile>::LinkedList()
                0x00000000c0020abc                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0020afe       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0020afe       0xd3 krnl/unixfile.32
                0x00000000c0020afe                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0020bd2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0020bd2        0x7 krnl/unixfile.32
                0x00000000c0020bd2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0020bda       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0020bda       0xa1 krnl/unixfile.32
                0x00000000c0020bda                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0020c7c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0020c7c        0x8 krnl/unixfile.32
                0x00000000c0020c7c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020c84        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0020c84        0x8 sys/kill.32
                0x00000000c0020c84                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020c8c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020c8c        0x2 thr/prcssthr.32
                0x00000000c0020c8c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020c8c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020c90       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020c90       0x49 thr/prcssthr.32
                0x00000000c0020c90                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020c90                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020cdc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020cdc       0x42 thr/prcssthr.32
                0x00000000c0020cdc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020cdc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c0020d1e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0020d1e       0x23 arch/i386/hal.32
                0x00000000c0020d1e                CPU::~CPU()
                0x00000000c0020d1e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020d42       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020d42       0x2a arch/i386/hal.32
                0x00000000c0020d42                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c0020d6c       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020d6c       0x23 hw/bus/pci.32
                0x00000000c0020d6c                PCI::~PCI()
                0x00000000c0020d6c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0020d90       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0020d90       0x2a hw/bus/pci.32
                0x00000000c0020d90                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020dba       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020dba       0x23 hw/diskctrl/ide.32
                0x00000000c0020dba                IDE::~IDE()
                0x00000000c0020dba                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020dde       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020dde       0x2a hw/diskctrl/ide.32
                0x00000000c0020dde                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020e08       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020e08       0x23 hw/diskctrl/satabus.32
                0x00000000c0020e08                SATABus::~SATABus()
                0x00000000c0020e08                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020e2c       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020e2c       0x2a hw/diskctrl/satabus.32
                0x00000000c0020e2c                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020e56       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020e56       0x23 hw/diskphys/ata.32
                0x00000000c0020e56                ATA::~ATA()
                0x00000000c0020e56                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020e7a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020e7a       0x2a hw/diskphys/ata.32
                0x00000000c0020e7a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0020ea4       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0020ea4       0x23 hw/diskphys/atapi.32
                0x00000000c0020ea4                ATAPI::~ATAPI()
                0x00000000c0020ea4                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020ec8       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020ec8       0x2a hw/diskphys/atapi.32
                0x00000000c0020ec8                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0020ef2       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0020ef2       0x23 hw/diskphys/sata.32
                0x00000000c0020ef2                SATA::~SATA()
                0x00000000c0020ef2                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020f16       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020f16       0x2a hw/diskphys/sata.32
                0x00000000c0020f16                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0020f40       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0020f40       0x23 hw/diskphys/satapi.32
                0x00000000c0020f40                SATAPI::~SATAPI()
                0x00000000c0020f40                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0020f64       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0020f64       0x2a hw/diskphys/satapi.32
                0x00000000c0020f64                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020f8e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020f8e       0x23 hw/intctrl/apic.32
                0x00000000c0020f8e                IOAPIC::~IOAPIC()
                0x00000000c0020f8e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0020fb2       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0020fb2       0x2a hw/intctrl/apic.32
                0x00000000c0020fb2                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020fdc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020fdc       0x23 hw/timer/apictimer.32
                0x00000000c0020fdc                APICTimer::~APICTimer()
                0x00000000c0020fdc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0021000       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0021000       0x2a hw/timer/apictimer.32
                0x00000000c0021000                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002102c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002102c       0x23 hw/timer/pit.32
                0x00000000c002102c                PIT::~PIT()
                0x00000000c002102c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0021050       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0021050       0x2a hw/timer/pit.32
                0x00000000c0021050                PIT::~PIT()

.rodata         0x00000000c002107a     0x3936
                0x00000000c002107a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002107a        0x2 
 .ctors         0x00000000c002107c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0021080        0x4 krnl/unixfile.32
 .ctors         0x00000000c0021084        0x4 thr/prcssthr.32
 .ctors         0x00000000c0021088        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002108c                end_ctors = .
                0x00000000c002108c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c002108c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0021090        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0021090                __DTOR_END__
                0x00000000c0021094                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0021094        0xc 
 .rodata        0x00000000c00210a0      0x101 acpica/utclib.32
                0x00000000c00210a0                AcpiGbl_Ctypes
 *fill*         0x00000000c00211a1        0x3 
 .rodata        0x00000000c00211a4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c00211bc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0021206       0x1a 
 .rodata        0x00000000c0021220       0xed fs/fat/ff.32
 *fill*         0x00000000c002130d       0x13 
 .rodata        0x00000000c0021320      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0021720       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c002178f       0x11 dbg/kconsole.32
 .rodata        0x00000000c00217a0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00218f0      0x169 dbg/usban.32
 *fill*         0x00000000c0021a59        0x3 
 .rodata.str1.4
                0x00000000c0021a5c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0021b93      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c0021cb6       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0021d0f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021d10       0x6c fs/vfs.32
                0x00000000c0021d10                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021d7c       0x1c fs/vfs.32
                0x00000000c0021d7c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021d98       0x1c fs/vfs.32
                0x00000000c0021d98                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021db4       0x2c hal/bus.32
                0x00000000c0021db4                vtable for Bus
 .rodata.str1.1
                0x00000000c0021de0       0x80 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0021e60       0x3c hal/clock.32
                0x00000000c0021e60                vtable for Clock
 *fill*         0x00000000c0021e9c        0x4 
 .rodata        0x00000000c0021ea0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021ed0       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021f34       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021f56       0x15 hal/device.32
 *fill*         0x00000000c0021f6b        0x1 
 .rodata._ZTV6Device
                0x00000000c0021f6c       0x2c hal/device.32
                0x00000000c0021f6c                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021f98       0x2c hal/device.32
                0x00000000c0021f98                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021fc4       0x2c hal/diskctrl.32
                0x00000000c0021fc4                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021ff0       0x38 hal/diskphys.32
                0x00000000c0021ff0                vtable for PhysicalDisk
 .rodata        0x00000000c0022028       0x53 hal/keybrd.32
 *fill*         0x00000000c002207b        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c002207c       0x34 hal/keybrd.32
                0x00000000c002207c                vtable for Keyboard
 .rodata.str1.1
                0x00000000c00220b0       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00220f4       0x2c hal/logidisk.32
                0x00000000c00220f4                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0022120       0x2c hal/mouse.32
                0x00000000c0022120                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c002214c       0x34 hal/nic.32
                0x00000000c002214c                vtable for NIC
 .rodata.str1.1
                0x00000000c0022180        0xb hal/partition.32
 *fill*         0x00000000c002218b        0x1 
 .rodata._ZTV6Serial
                0x00000000c002218c       0x44 hal/serial.32
                0x00000000c002218c                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00221d0       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002221b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022223       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022223       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0022223       0x1e hal/timer.32
 *fill*         0x00000000c0022241        0x3 
 .rodata._ZTV5Timer
                0x00000000c0022244       0x30 hal/timer.32
                0x00000000c0022244                vtable for Timer
 .rodata.str1.1
                0x00000000c0022274       0x3e hal/vcache.32
 *fill*         0x00000000c00222b2        0x2 
 .rodata._ZTV6VCache
                0x00000000c00222b4       0x10 hal/vcache.32
                0x00000000c00222b4                vtable for VCache
 .rodata.str1.1
                0x00000000c00222c4       0xba hal/video.32
 *fill*         0x00000000c002237e        0x2 
 .rodata._ZTV5Video
                0x00000000c0022380       0x4c hal/video.32
                0x00000000c0022380                vtable for Video
 .rodata.str1.1
                0x00000000c00223cc      0x17e hw/acpi.32
 *fill*         0x00000000c002254a        0x2 
 .rodata.str1.4
                0x00000000c002254c       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00225c3       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00225c3        0x8 hw/acpi.32
 *fill*         0x00000000c00225c3        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00225c4       0x2c hw/acpi.32
                0x00000000c00225c4                vtable for ACPI
 .rodata.str1.1
                0x00000000c00225f0       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022630       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0022651       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0022684        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0022687       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c00226fd        0x3 
 .rodata.str1.4
                0x00000000c0022700       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c00227b8       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0022861        0x3 
 .rodata._ZTV8Computer
                0x00000000c0022864       0x2c krnl/computer.32
                0x00000000c0022864                vtable for Computer
 .rodata.str1.1
                0x00000000c0022890       0x3c krnl/env.32
 .rodata        0x00000000c00228cc       0x76 krnl/fault.32
 *fill*         0x00000000c0022942        0x2 
 .rodata.str1.4
                0x00000000c0022944       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0022974        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0022983       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c00229e4      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0022ae9       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0022b41       0x39 krnl/pipe.32
 *fill*         0x00000000c0022b7a        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0022b7c       0x1c krnl/pipe.32
                0x00000000c0022b7c                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022b98       0x91 krnl/resolve.32
 *fill*         0x00000000c0022c29        0x3 
 .rodata.str1.4
                0x00000000c0022c2c       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c0022c4b       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022d14       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022d5c       0x4d krnl/terminal.32
                                         0x5e (size before relaxing)
 *fill*         0x00000000c0022da9        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0022dac       0x1c krnl/terminal.32
                0x00000000c0022dac                vtable for VgaText
 .rodata        0x00000000c0022dc8       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0022e03       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0022e03       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0022e03       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0022e03        0x8 krnl/unixfile.32
 *fill*         0x00000000c0022e03        0x1 
 .rodata.str1.4
                0x00000000c0022e04       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0022e24       0x22 krnl/unixfile.32
 *fill*         0x00000000c0022e46        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c0022e48       0x1c krnl/unixfile.32
                0x00000000c0022e48                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0022e64       0x1c krnl/unixfile.32
                0x00000000c0022e64                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0022e80      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0023403      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0023564        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0023573        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002357d       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002359e       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c00235e2       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0023636       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0023662      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c002386c       0x57 thr/prcssthr.32
 *fill*         0x00000000c00238c3        0x1 
 .rodata.str1.4
                0x00000000c00238c4       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00239bc       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00239bc       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00239bc       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00239bc        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00239bc       0xdd vm86/vm8086.32
 *fill*         0x00000000c0023a99        0x3 
 .rodata        0x00000000c0023a9c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0023acc      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c0023e17        0x1 
 .rodata.str1.4
                0x00000000c0023e18       0x57 arch/i386/hal.32
 *fill*         0x00000000c0023e6f        0x1 
 .rodata._ZTV3CPU
                0x00000000c0023e70       0x2c arch/i386/hal.32
                0x00000000c0023e70                vtable for CPU
 .rodata.str1.4
                0x00000000c0023e9c       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023efd       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0023f3b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0023f50       0x3c arch/i386/rtc.32
                0x00000000c0023f50                vtable for RTC
 .rodata.str1.1
                0x00000000c0023f8c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0023fcd        0x3 
 .rodata._ZTV3FAT
                0x00000000c0023fd0       0x6c fs/fat/vfslink.32
                0x00000000c0023fd0                vtable for FAT
 .rodata.str1.1
                0x00000000c002403c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c002403c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0024174       0x6c fs/iso9660/vfslink.32
                0x00000000c0024174                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00241e0       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0024224       0x34 hal/sound/sndcard.32
                0x00000000c0024224                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0024258       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0024297       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00242cf       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0024370       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00243d4       0x2c hw/bus/pci.32
                0x00000000c00243d4                vtable for PCI
 .rodata.str1.1
                0x00000000c0024400      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0024524       0x2c hw/diskctrl/ide.32
                0x00000000c0024524                vtable for IDE
 .rodata.str1.4
                0x00000000c0024550       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0024574       0x2c hw/diskctrl/satabus.32
                0x00000000c0024574                vtable for SATABus
 .rodata.str1.1
                0x00000000c00245a0       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c002465b        0x1 
 .rodata._ZTV3ATA
                0x00000000c002465c       0x38 hw/diskphys/ata.32
                0x00000000c002465c                vtable for ATA
 .rodata.str1.1
                0x00000000c0024694        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00246a1        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00246a4       0x38 hw/diskphys/atapi.32
                0x00000000c00246a4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00246dc       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0024764       0x38 hw/diskphys/sata.32
                0x00000000c0024764                vtable for SATA
 .rodata.str1.1
                0x00000000c002479c       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0024886        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0024888       0x38 hw/diskphys/satapi.32
                0x00000000c0024888                vtable for SATAPI
 .rodata        0x00000000c00248c0       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c00248e6        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c00248e8       0x2c hw/intctrl/apic.32
                0x00000000c00248e8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0024914       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002492f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0024930       0x30 hw/timer/apictimer.32
                0x00000000c0024930                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0024960       0x1d hw/timer/pit.32
 *fill*         0x00000000c002497d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0024980       0x30 hw/timer/pit.32
                0x00000000c0024980                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00249b0      0xa55
 *(.data)
 .data          0x00000000c00249b0        0x0 crti.32
 .data          0x00000000c00249b0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00249b0                __dso_handle
 .data          0x00000000c00249b4        0x0 acpica/utclib.32
 .data          0x00000000c00249b4        0x0 krnl/malloc.32
 .data          0x00000000c00249b4        0x0 libk/ctype.32
 .data          0x00000000c00249b4        0x0 libk/string.32
 .data          0x00000000c00249b4        0x0 arch/i386/cc.32
 .data          0x00000000c00249b4        0x0 fs/fat/diskio.32
 .data          0x00000000c00249b4        0x0 fs/fat/ff.32
 .data          0x00000000c00249b4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00249b4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00249b4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00249b4        0x0 dbg/kconsole.32
 *fill*         0x00000000c00249b4        0xc 
 .data          0x00000000c00249c0       0x28 dbg/usban.32
                0x00000000c00249c0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00249e8        0x0 fs/symlink.32
 .data          0x00000000c00249e8        0x0 fs/vfs.32
 .data          0x00000000c00249e8        0x0 hal/bus.32
 .data          0x00000000c00249e8        0x0 hal/buzzer.32
 .data          0x00000000c00249e8        0x0 hal/clock.32
 .data          0x00000000c00249e8        0x0 hal/device.32
 .data          0x00000000c00249e8        0x0 hal/diskctrl.32
 .data          0x00000000c00249e8        0x0 hal/diskphys.32
 .data          0x00000000c00249e8        0x0 hal/fpu.32
 .data          0x00000000c00249e8        0x0 hal/intctrl.32
 .data          0x00000000c00249e8        0x0 hal/keybrd.32
 .data          0x00000000c00249e8        0x0 hal/logidisk.32
 .data          0x00000000c00249e8        0x0 hal/mouse.32
 .data          0x00000000c00249e8        0x0 hal/nic.32
 .data          0x00000000c00249e8        0x0 hal/partition.32
 .data          0x00000000c00249e8        0x0 hal/serial.32
 .data          0x00000000c00249e8        0x0 hal/timer.32
 .data          0x00000000c00249e8        0x0 hal/vcache.32
 .data          0x00000000c00249e8        0x0 hal/video.32
 .data          0x00000000c00249e8       0x10 hw/acpi.32
                0x00000000c00249e8                legacyIRQRemaps
 .data          0x00000000c00249f8        0x0 krnl/atexit.32
 .data          0x00000000c00249f8        0x0 krnl/bootmsg.32
 .data          0x00000000c00249f8        0x4 krnl/c++.32
                0x00000000c00249f8                __stack_chk_guard
 .data          0x00000000c00249fc        0x0 krnl/cdefs.32
 *fill*         0x00000000c00249fc        0x4 
 .data          0x00000000c0024a00      0x100 krnl/cm.32
                0x00000000c0024a00                CmComponents
 .data          0x00000000c0024b00        0x0 krnl/compat.32
 .data          0x00000000c0024b00        0x0 krnl/computer.32
 .data          0x00000000c0024b00      0x400 krnl/crc32.32
                0x00000000c0024b00                KiPolyLookupCRC32
 .data          0x00000000c0024f00       0x4d krnl/env.32
                0x00000000c0024f00                defaultSysEnv
 .data          0x00000000c0024f4d        0x0 krnl/fault.32
 .data          0x00000000c0024f4d        0x0 krnl/gdt.32
 .data          0x00000000c0024f4d        0x0 krnl/idle.32
 .data          0x00000000c0024f4d        0x0 krnl/idt.32
 .data          0x00000000c0024f4d        0x0 krnl/inlines.32
 *fill*         0x00000000c0024f4d        0x3 
 .data          0x00000000c0024f50        0x4 krnl/kheap.32
 .data          0x00000000c0024f54        0x0 krnl/mailbox.32
 .data          0x00000000c0024f54        0x0 krnl/main.32
 .data          0x00000000c0024f54        0x0 krnl/mutex.32
 .data          0x00000000c0024f54        0x0 krnl/panic.32
 .data          0x00000000c0024f54        0x4 krnl/physmgr.32
                0x00000000c0024f54                Phys::bitmap
 .data          0x00000000c0024f58        0x0 krnl/pipe.32
 .data          0x00000000c0024f58        0x0 krnl/powctrl.32
 .data          0x00000000c0024f58        0x0 krnl/random.32
 .data          0x00000000c0024f58        0x0 krnl/resolve.32
 .data          0x00000000c0024f58        0x0 krnl/semaphore.32
 *fill*         0x00000000c0024f58        0x8 
 .data          0x00000000c0024f60       0x4c krnl/signal.32
                0x00000000c0024f60                KiDefaultSignalHandlers
 *fill*         0x00000000c0024fac       0x14 
 .data          0x00000000c0024fc0      0x104 krnl/syscalls.32
                0x00000000c0024fc0                systemCallHandlers
 *fill*         0x00000000c00250c4       0x1c 
 .data          0x00000000c00250e0       0x60 krnl/terminal.32
                0x00000000c00250e0                VgaText::hiddenOut
                0x00000000c0025100                ansiToVGAMappings
 .data          0x00000000c0025140        0x0 krnl/tss.32
 .data          0x00000000c0025140        0x4 krnl/unixfile.32
                0x00000000c0025140                UnixFile::nextFd
 .data          0x00000000c0025144       0x15 krnl/virtmgr.32
                0x00000000c0025144                Virt::pageAllocPtr
                0x00000000c0025148                Virt::bitmap
                0x00000000c002514c                Virt::swapfileSectorsPerPage
                0x00000000c0025150                Virt::swapfileLength
                0x00000000c0025154                Virt::swapfileSector
                0x00000000c0025158                Virt::swapfileDrive
 .data          0x00000000c0025159        0x0 sys/eject.32
 .data          0x00000000c0025159        0x0 sys/exit.32
 .data          0x00000000c0025159        0x0 sys/getcwd.32
 .data          0x00000000c0025159        0x0 sys/getpid.32
 .data          0x00000000c0025159        0x0 sys/getramdata.32
 .data          0x00000000c0025159        0x0 sys/getvgaptr.32
 .data          0x00000000c0025159        0x0 sys/kill.32
 .data          0x00000000c0025159        0x0 sys/loaddll.32
 .data          0x00000000c0025159        0x0 sys/read.32
 .data          0x00000000c0025159        0x0 sys/registersignal.32
 .data          0x00000000c0025159        0x0 sys/registry.32
 .data          0x00000000c0025159        0x0 sys/sbrk.32
 .data          0x00000000c0025159        0x0 sys/setcwd.32
 .data          0x00000000c0025159        0x0 sys/settime.32
 .data          0x00000000c0025159        0x0 sys/symlink.32
 .data          0x00000000c0025159        0x0 sys/timezone.32
 .data          0x00000000c0025159        0x0 sys/truncate.32
 .data          0x00000000c0025159        0x0 sys/write.32
 .data          0x00000000c0025159        0x0 sys/wsbe.32
 .data          0x00000000c0025159        0x0 sys/yield.32
 .data          0x00000000c0025159        0x0 thr/elf.32
 .data          0x00000000c0025159        0x0 thr/exec.32
 *fill*         0x00000000c0025159        0x3 
 .data          0x00000000c002515c        0x4 thr/prcssthr.32
                0x00000000c002515c                Thr::nextPID
 .data          0x00000000c0025160        0x0 vm86/vm8086.32
 .data          0x00000000c0025160      0x2a4 arch/i386/hal.32
                0x00000000c0025160                exceptionNames
                0x00000000c0025400                lastCode
 .data          0x00000000c0025404        0x0 arch/i386/intctrl.32
 .data          0x00000000c0025404        0x0 arch/i386/pic.32
 .data          0x00000000c0025404        0x0 arch/i386/rtc.32
 .data          0x00000000c0025404        0x0 arch/i386/vga.32
 .data          0x00000000c0025404        0x0 fs/fat/vfslink.32
 .data          0x00000000c0025404        0x0 fs/iso9660/helper.32
 .data          0x00000000c0025404        0x1 fs/iso9660/vfslink.32
                0x00000000c0025404                recentDriveletter
 .data          0x00000000c0025405        0x0 hal/sound/sndcard.32
 .data          0x00000000c0025405        0x0 hal/sound/sndport.32
 .data          0x00000000c0025405        0x0 hw/bus/isa.32
 .data          0x00000000c0025405        0x0 hw/bus/pci.32
 .data          0x00000000c0025405        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0025405        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0025405        0x0 hw/diskphys/ata.32
 .data          0x00000000c0025405        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0025405        0x0 hw/diskphys/sata.32
 .data          0x00000000c0025405        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0025405        0x0 hw/intctrl/apic.32
 .data          0x00000000c0025405        0x0 hw/timer/apictimer.32
 .data          0x00000000c0025405        0x0 hw/timer/pit.32
 .data          0x00000000c0025405        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0025405        0x0 crtn.32
 .data          0x00000000c0025405        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0025405        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0025405        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0025405        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0025408        0x0
 .got           0x00000000c0025408        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0025408        0x0
 .got.plt       0x00000000c0025408        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0025408        0x0
 .igot.plt      0x00000000c0025408        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0025408        0x0
 .tm_clone_table
                0x00000000c0025408        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0025408        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0025405      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0025405        0x3 
 .eh_frame      0x00000000c0025408        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0025408        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0025408       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0025460       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00254a0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002550c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0026000       0x7d
 *(userkernel)
 userkernel     0x00000000c0026000       0x52 krnl/signal.32
                0x00000000c0026000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002602c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0026052       0x2b krnl/syscalls.32
                0x00000000c0026052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0027000        0x1
 *(align_previous)
 align_previous
                0x00000000c0027000        0x1 krnl/signal.32
                0x00000000c0027000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0027004        0x0
 .rel.got       0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0027004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0027001     0x7127
                0x00000000c0027001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0027001       0x1f 
 COMMON         0x00000000c0027020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0027020                dcache
                0x00000000c0027060                cdDriveLetter
                0x00000000c0027080                icache
 *(.bss)
 .bss           0x00000000c00270c0        0x0 crti.32
 .bss           0x00000000c00270c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00270e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00270e4       0x1c 
 .bss           0x00000000c0027100      0x378 krnl/malloc.32
 .bss           0x00000000c0027478        0x0 libk/ctype.32
 .bss           0x00000000c0027478        0x0 libk/string.32
 .bss           0x00000000c0027478        0x0 arch/i386/cc.32
 .bss           0x00000000c0027478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0027478        0x8 
 .bss           0x00000000c0027480       0x88 fs/fat/ff.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0027508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0027508       0x18 
 .bss           0x00000000c0027520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0027eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0027eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0027eb8        0x8 
 .bss           0x00000000c0027ec0     0x2444 fs/symlink.32
                0x00000000c0027ec0                kiNumWaitingRoomSymlinks
                0x00000000c0027ee0                kiNewlyCreatedIDs
                0x00000000c0027f00                kiNewlyCreatedSymlinks
                0x00000000c0028300                kiSymlinkHashTable
                0x00000000c002a300                kiBaseSymlinkID
 .bss           0x00000000c002a304        0x4 fs/vfs.32
                0x00000000c002a304                installedFilesystems
 .bss           0x00000000c002a308        0x0 hal/bus.32
 .bss           0x00000000c002a308        0x0 hal/buzzer.32
 .bss           0x00000000c002a308        0x8 hal/clock.32
                0x00000000c002a308                keDstOn
                0x00000000c002a309                keTimezoneHalfHourOffset
                0x00000000c002a30c                keTimezoneHourOffset
 .bss           0x00000000c002a310        0x0 hal/device.32
 .bss           0x00000000c002a310        0x0 hal/diskctrl.32
 .bss           0x00000000c002a310        0x0 hal/diskphys.32
 .bss           0x00000000c002a310        0x0 hal/fpu.32
 .bss           0x00000000c002a310        0x0 hal/intctrl.32
 *fill*         0x00000000c002a310       0x10 
 .bss           0x00000000c002a320      0x428 hal/keybrd.32
                0x00000000c002a320                keyboardWaitingTaskList
                0x00000000c002a324                keyboardSetupYet
                0x00000000c002a328                guiKeyboardHandler
                0x00000000c002a340                keystates
 *fill*         0x00000000c002a748       0x18 
 .bss           0x00000000c002a760       0x88 hal/logidisk.32
                0x00000000c002a760                diskAssignments
                0x00000000c002a780                disks
 .bss           0x00000000c002a7e8        0x4 hal/mouse.32
                0x00000000c002a7e8                guiMouseHandler
 .bss           0x00000000c002a7ec        0x0 hal/nic.32
 .bss           0x00000000c002a7ec        0x0 hal/partition.32
 .bss           0x00000000c002a7ec        0x0 hal/serial.32
 .bss           0x00000000c002a7ec        0x4 hal/timer.32
                0x00000000c002a7ec                milliTenthsSinceBoot
 .bss           0x00000000c002a7f0        0x0 hal/vcache.32
 .bss           0x00000000c002a7f0        0x4 hal/video.32
                0x00000000c002a7f0                screen
 *fill*         0x00000000c002a7f4        0xc 
 .bss           0x00000000c002a800      0x480 hw/acpi.32
                0x00000000c002a800                nextACPITable
                0x00000000c002a820                acpiTables
                0x00000000c002aa20                usingXSDT
                0x00000000c002aa24                RSDTpointer
                0x00000000c002aa28                RSDPpointer
                0x00000000c002aa2c                nextAPICNMI
                0x00000000c002aa40                apicNMIInfo
                0x00000000c002aac0                legacyIRQFlags
                0x00000000c002aae0                ioapicDiscoveryNumber
                0x00000000c002ab00                ioapicFoundInMADT
                0x00000000c002ab20                ioapicAddresses
                0x00000000c002aba0                ioapicGSIBase
                0x00000000c002ac20                processorDiscoveryNumber
                0x00000000c002ac40                matchingAPICID
                0x00000000c002ac60                processorID
 .bss           0x00000000c002ac80       0xe0 krnl/atexit.32
                0x00000000c002ac80                KiNextAtexitHandler
                0x00000000c002aca0                KiAtexitContexts
                0x00000000c002ad00                KiAtexitHandlers
 .bss           0x00000000c002ad60        0x0 krnl/bootmsg.32
 .bss           0x00000000c002ad60        0x0 krnl/c++.32
 .bss           0x00000000c002ad60        0x0 krnl/cdefs.32
 .bss           0x00000000c002ad60        0x4 krnl/cm.32
 .bss           0x00000000c002ad64        0x0 krnl/compat.32
 .bss           0x00000000c002ad64       0x12 krnl/computer.32
                0x00000000c002ad64                systemSleepFunction
                0x00000000c002ad68                systemResetFunction
                0x00000000c002ad6c                systemShutdownFunction
                0x00000000c002ad70                Krnl::computer
                0x00000000c002ad74                KeIsPreemptionOn
                0x00000000c002ad75                KeIsSchedulingOn
 .bss           0x00000000c002ad76        0x0 krnl/crc32.32
 *fill*         0x00000000c002ad76        0x2 
 .bss           0x00000000c002ad78        0x8 krnl/env.32
                0x00000000c002ad78                KeUserEnv
                0x00000000c002ad7c                KeSystemEnv
 .bss           0x00000000c002ad80     0x2000 krnl/fault.32
                0x00000000c002ad80                keInterruptContexts
                0x00000000c002bd80                keInterruptHandlers
 .bss           0x00000000c002cd80        0x6 krnl/gdt.32
                0x00000000c002cd80                gdtDescr
 .bss           0x00000000c002cd86        0x0 krnl/idle.32
 *fill*         0x00000000c002cd86        0x2 
 .bss           0x00000000c002cd88        0x6 krnl/idt.32
                0x00000000c002cd88                idtDescr
 .bss           0x00000000c002cd8e        0x0 krnl/inlines.32
 .bss           0x00000000c002cd8e        0x0 krnl/kheap.32
 .bss           0x00000000c002cd8e        0x0 krnl/mailbox.32
 *fill*         0x00000000c002cd8e        0x2 
 .bss           0x00000000c002cd90        0x4 krnl/main.32
                0x00000000c002cd90                keBootSettings
 .bss           0x00000000c002cd94        0x0 krnl/mutex.32
 .bss           0x00000000c002cd94        0x1 krnl/panic.32
                0x00000000c002cd94                KeIsKernelInPanic
 *fill*         0x00000000c002cd95        0x3 
 .bss           0x00000000c002cd98       0x29 krnl/physmgr.32
                0x00000000c002cd98                Phys::forbidEvictions
                0x00000000c002cd9c                Phys::currentPagePointer
                0x00000000c002cda0                Phys::highestMem
                0x00000000c002cda4                Phys::oldPercent
                0x00000000c002cda8                Phys::usedPages
                0x00000000c002cdac                Phys::usablePages
                0x00000000c002cdb0                Phys::dmaUsage
 .bss           0x00000000c002cdc1        0x0 krnl/pipe.32
 *fill*         0x00000000c002cdc1       0x1f 
 .bss           0x00000000c002cde0       0x48 krnl/powctrl.32
                0x00000000c002cde0                powCtrlOnBattery
                0x00000000c002ce00                currentPowerSettings
                0x00000000c002ce24                secondsSinceLastUserIO
 .bss           0x00000000c002ce28        0x8 krnl/random.32
                0x00000000c002ce28                kiRandSeed
 .bss           0x00000000c002ce30        0x0 krnl/resolve.32
 .bss           0x00000000c002ce30        0x0 krnl/semaphore.32
 .bss           0x00000000c002ce30        0x0 krnl/signal.32
 .bss           0x00000000c002ce30        0x0 krnl/syscalls.32
 .bss           0x00000000c002ce30        0x9 krnl/terminal.32
                0x00000000c002ce30                terminalCycle
                0x00000000c002ce34                activeTerminal
                0x00000000c002ce38                VgaText::graphicMode
 *fill*         0x00000000c002ce39        0x1 
 .bss           0x00000000c002ce3a        0x2 krnl/tss.32
                0x00000000c002ce3a                doubleFaultSelector
 *fill*         0x00000000c002ce3c        0x4 
 .bss           0x00000000c002ce40       0x84 krnl/unixfile.32
                0x00000000c002ce40                sfileLpt
                0x00000000c002ce80                sfileCom
                0x00000000c002cea4                sfileNul
                0x00000000c002cea8                sfilePnt
                0x00000000c002ceac                sfileAux
                0x00000000c002ceb0                sfileCon
                0x00000000c002ceb4                initialFilesAdded
                0x00000000c002ceb8                unixFileLinkedList
 .bss           0x00000000c002cec4       0x10 krnl/virtmgr.32
                0x00000000c002cec4                twswaps
                0x00000000c002cec8                swapBalance
                0x00000000c002cecc                Virt::swapfileBitmap
                0x00000000c002ced0                keFirstVAS
 .bss           0x00000000c002ced4        0x0 sys/eject.32
 .bss           0x00000000c002ced4        0x0 sys/exit.32
 .bss           0x00000000c002ced4        0x0 sys/getcwd.32
 .bss           0x00000000c002ced4        0x0 sys/getpid.32
 .bss           0x00000000c002ced4        0x0 sys/getramdata.32
 .bss           0x00000000c002ced4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002ced4        0x0 sys/kill.32
 .bss           0x00000000c002ced4        0x0 sys/loaddll.32
 .bss           0x00000000c002ced4        0x0 sys/read.32
 .bss           0x00000000c002ced4        0x0 sys/registersignal.32
 .bss           0x00000000c002ced4        0x0 sys/registry.32
 .bss           0x00000000c002ced4        0x0 sys/sbrk.32
 .bss           0x00000000c002ced4        0x0 sys/setcwd.32
 .bss           0x00000000c002ced4        0x0 sys/settime.32
 .bss           0x00000000c002ced4        0x0 sys/symlink.32
 .bss           0x00000000c002ced4        0x0 sys/timezone.32
 .bss           0x00000000c002ced4        0x0 sys/truncate.32
 .bss           0x00000000c002ced4        0x0 sys/write.32
 .bss           0x00000000c002ced4        0x0 sys/wsbe.32
 .bss           0x00000000c002ced4        0x0 sys/yield.32
 *fill*         0x00000000c002ced4        0xc 
 .bss           0x00000000c002cee0      0x7a4 thr/elf.32
                0x00000000c002cee0                Thr::driverLookupNext
                0x00000000c002cf00                Thr::driverLookupLen
                0x00000000c002d100                Thr::driverLookupAddr
                0x00000000c002d300                Thr::driverNameLookup
                0x00000000c002d500                Thr::kernelSymbols
                0x00000000c002d580                Thr::kernelStringTable
                0x00000000c002d600                Thr::kernelSymbolTable
                0x00000000c002d680                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002d684        0x0 thr/exec.32
 *fill*         0x00000000c002d684        0x4 
 .bss           0x00000000c002d688       0x70 thr/prcssthr.32
                0x00000000c002d688                KiRestorePreemptionValue
                0x00000000c002d68c                KiPreemptionDisableCounter
                0x00000000c002d690                cleanerThread
                0x00000000c002d694                weNeedTheCleanerToNotBlock
                0x00000000c002d698                retValLockStuff
                0x00000000c002d69c                retValSchedLock
                0x00000000c002d6a0                lockStuffLock
                0x00000000c002d6a4                schedulerLock
                0x00000000c002d6a8                taskSwitchesPostponedFlag
                0x00000000c002d6ac                postponeTaskSwitchesCounter
                0x00000000c002d6b0                irqDisableCounter
                0x00000000c002d6b4                terminatedTaskList
                0x00000000c002d6c0                sleepingTaskList
                0x00000000c002d6cc                taskList
                0x00000000c002d6d8                kernelProcess
 *fill*         0x00000000c002d6f8        0x8 
 .bss           0x00000000c002d700       0x40 vm86/vm8086.32
                0x00000000c002d700                Vm::started8086Yet
                0x00000000c002d704                Vm::vmRetV
                0x00000000c002d708                Vm::vmDone
                0x00000000c002d709                Vm::vmReady
                0x00000000c002d70c                Vm::vm86Thread
                0x00000000c002d710                Vm::vmToHostCommsPtr
                0x00000000c002d720                Vm::vmToHostComms
 .bss           0x00000000c002d740       0x54 arch/i386/hal.32
                0x00000000c002d740                apic
                0x00000000c002d744                guiPanicHandler
                0x00000000c002d748                fpuOwner
                0x00000000c002d74c                coproLoadFunc
                0x00000000c002d750                coproSaveFunc
                0x00000000c002d754                lastD
                0x00000000c002d758                lastC
                0x00000000c002d75c                lastB
                0x00000000c002d760                lastA
                0x00000000c002d764                HalPageWriteCombiningFlag
                0x00000000c002d768                HalPageGlobalFlag
                0x00000000c002d76c                nmi
                0x00000000c002d770                vendorIDString
                0x00000000c002d77d                familyID
                0x00000000c002d77e                model
                0x00000000c002d77f                processorType
                0x00000000c002d780                steppingID
                0x00000000c002d784                vendor
                0x00000000c002d788                opcodeDetectionMode
                0x00000000c002d78c                features
 .bss           0x00000000c002d794        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002d794        0x0 arch/i386/pic.32
 .bss           0x00000000c002d794        0x2 arch/i386/rtc.32
 .bss           0x00000000c002d796        0x0 arch/i386/vga.32
 *fill*         0x00000000c002d796        0xa 
 .bss           0x00000000c002d7a0       0xf0 fs/fat/vfslink.32
                0x00000000c002d7a0                FAT::fats
                0x00000000c002d7c0                FAT::vfsToFatRemaps
                0x00000000c002d840                fatToVFSRemaps
 .bss           0x00000000c002d890        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002d890       0x10 
 .bss           0x00000000c002d8a0      0x820 fs/iso9660/vfslink.32
                0x00000000c002d8a0                iso9660Owner
                0x00000000c002d8a4                recentSector
                0x00000000c002d8c0                recentBuffer
 .bss           0x00000000c002e0c0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002e0c0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002e0c0        0x0 hw/bus/isa.32
 .bss           0x00000000c002e0c0        0xd hw/bus/pci.32
                0x00000000c002e0c0                thePCI
 .bss           0x00000000c002e0cd        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002e0cd        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002e0cd        0x3 
 .bss           0x00000000c002e0d0        0x8 hw/diskphys/ata.32
                0x00000000c002e0d0                ataSectorsWritten
                0x00000000c002e0d4                ataSectorsRead
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002e0d8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002e0d8        0x8 
 .bss           0x00000000c002e0e0       0x41 hw/intctrl/apic.32
                0x00000000c002e0e0                noOfIOAPICs
                0x00000000c002e100                ioapics
                0x00000000c002e120                IOAPICsSetupYet
 .bss           0x00000000c002e121        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002e121        0x3 
 .bss           0x00000000c002e124        0x4 hw/timer/pit.32
                0x00000000c002e124                pitFreq
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002e128        0x0 crtn.32
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002e128        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002e128                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003524f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
