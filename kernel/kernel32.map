Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2170e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x254 dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f06                Dbg::logs(char*)
                0x00000000c0006f25                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f43                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f64                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000709a        0x2 
 .text          0x00000000c000709c      0x2d4 dbg/usban.32
                0x00000000c000709c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007108                __ubsan_handle_type_mismatch_v1
                0x00000000c00071e4                __ubsan_handle_pointer_overflow
                0x00000000c0007210                __ubsan_handle_out_of_bounds
                0x00000000c000723c                __ubsan_handle_add_overflow
                0x00000000c0007268                __ubsan_handle_load_invalid_value
                0x00000000c0007294                __ubsan_handle_divrem_overflow
                0x00000000c00072c0                __ubsan_handle_mul_overflow
                0x00000000c00072ec                __ubsan_handle_sub_overflow
                0x00000000c0007318                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007344                __ubsan_handle_negate_overflow
 .text          0x00000000c0007370      0x814 fs/symlink.32
                0x00000000c00074bf                KiDeinitialiseSymlinks(void*)
                0x00000000c0007552                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075d5                KeInitialiseSymlinks()
                0x00000000c0007737                KiIsSymlinkRegistered(char const*)
                0x00000000c00078a1                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a48                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b84      0xd88 fs/vfs.32
                0x00000000c0007b84                File::read(unsigned long long, void*, int*)
                0x00000000c0007bdc                File::write(unsigned long long, void*, int*)
                0x00000000c0007c34                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cba                File::isAtty()
                0x00000000c0007cbe                Directory::isAtty()
                0x00000000c0007cc2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cc8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cce                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cf8                File::~File()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d46                Directory::~Directory()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007da2                Filesystem::~Filesystem()
                0x00000000c0007dc6                Fs::getcwd(Process*, char*, int)
                0x00000000c0007df0                Fs::initVFS()
                0x00000000c0007e1a                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008150                File::open(FileOpenMode)
                0x00000000c00081ae                File::close()
                0x00000000c000820e                File::seek(unsigned long long)
                0x00000000c0008264                File::truncate(unsigned long long)
                0x00000000c00082ba                File::tell(unsigned long long*)
                0x00000000c000830a                File::rewind()
                0x00000000c000831e                File::unlink()
                0x00000000c000836a                File::rename(char const*)
                0x00000000c00083b8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0008414                File::exists()
                0x00000000c0008452                File::stat(unsigned long long*, bool*)
                0x00000000c00084b3                Fs::setcwd(Process*, char*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c00086da                Directory::open()
                0x00000000c0008736                Directory::close()
                0x00000000c0008796                Directory::unlink()
                0x00000000c00087e2                Directory::rename(char const*)
                0x00000000c0008830                Directory::exists()
                0x00000000c000886e                Directory::read(dirent*)
                0x00000000c00088ba                Directory::create()
                0x00000000c0008906                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000890c       0x86 hal/bus.32
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008968                Bus::~Bus()
 .text          0x00000000c0008992       0x99 hal/buzzer.32
                0x00000000c0008992                KeBeepThread(void*)
                0x00000000c00089d2                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a2b        0x1 
 .text          0x00000000c0008a2c      0xeac hal/clock.32
                0x00000000c0008a2c                KeLoadTimezoneStrings()
                0x00000000c0008dbb                KeGetTimezoneStringFromID(int)
                0x00000000c0008e58                KeUpdateTimezone(char const*)
                0x00000000c0008f52                KeSetTimezone(char const*)
                0x00000000c0008faf                KeSetTimezone(int)
                0x00000000c0008fe2                KeLoadTimezone()
                0x00000000c000905c                Clock::Clock(char const*)
                0x00000000c000905c                Clock::Clock(char const*)
                0x00000000c0009092                Clock::~Clock()
                0x00000000c0009092                Clock::~Clock()
                0x00000000c00090b6                Clock::~Clock()
                0x00000000c00090e0                Clock::timeInSecondsLocal()
                0x00000000c0009156                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c00091e2                KeDatetimeToSeconds(datetime_t)
                0x00000000c0009522                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c00095f0                KeSecondsToDatetime(unsigned long long)
                0x00000000c00098ac                Clock::timeInDatetimeLocal()
 .text          0x00000000c00098d8      0x47a hal/device.32
                0x00000000c00098d8                Device::hibernate()
                0x00000000c00098da                Device::wake()
                0x00000000c00098dc                Device::detect()
                0x00000000c00098de                Device::disableLegacy()
                0x00000000c00098e0                Device::powerSaving(PowerSavingLevel)
                0x00000000c00098e2                DriverlessDevice::close(int, int, void*)
                0x00000000c00098e6                DriverlessDevice::detect()
                0x00000000c00098e8                DriverlessDevice::open(int, int, void*)
                0x00000000c00098fc                Device::~Device()
                0x00000000c00098fc                Device::~Device()
                0x00000000c000990a                Device::~Device()
                0x00000000c0009932                Device::findAndLoadDriver()
                0x00000000c0009940                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0009966                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00099a6                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00099d0                Device::getParent()
                0x00000000c00099dc                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00099fa                Device::addChild(Device*)
                0x00000000c0009a3e                Device::removeAllChildren()
                0x00000000c0009a84                Device::hibernateAll()
                0x00000000c0009ab4                Device::wakeAll()
                0x00000000c0009ae4                Device::detectAll()
                0x00000000c0009b14                Device::disableLegacyAll()
                0x00000000c0009b16                Device::loadDriversForAll()
                0x00000000c0009b18                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009b4e                Device::setName(char const*)
                0x00000000c0009b5c                Device::Device(char const*)
                0x00000000c0009b5c                Device::Device(char const*)
                0x00000000c0009c58                Device::getName()
                0x00000000c0009c62                Device::closeAll()
                0x00000000c0009cae                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009cae                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009ce4                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d28                getDevicesOfType(DeviceType)
 *fill*         0x00000000c0009d52        0x2 
 .text          0x00000000c0009d54       0x86 hal/diskctrl.32
                0x00000000c0009d54                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d54                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d8c                HardDiskController::~HardDiskController()
                0x00000000c0009d8c                HardDiskController::~HardDiskController()
                0x00000000c0009db0                HardDiskController::~HardDiskController()
 .text          0x00000000c0009dda       0xe2 hal/diskphys.32
                0x00000000c0009dda                PhysicalDisk::eject()
                0x00000000c0009dde                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009dde                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e46                PhysicalDisk::startCache()
                0x00000000c0009e6e                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e6e                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e92                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009ebc        0x0 hal/fpu.32
 .text          0x00000000c0009ebc        0x0 hal/intctrl.32
 .text          0x00000000c0009ebc      0x874 hal/keybrd.32
                0x00000000c0009ebc                startGUI(void*)
                0x00000000c0009f21                startGUIVESA(void*)
                0x00000000c0009f86                sendKeyToTerminal(unsigned char)
                0x00000000c000a05c                sendKeyboardToken(KeyboardToken)
                0x00000000c000a518                clearInternalKeybuffer(VgaText*)
                0x00000000c000a54d                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6a6                Keyboard::Keyboard(char const*)
                0x00000000c000a6a6                Keyboard::Keyboard(char const*)
                0x00000000c000a6e2                Keyboard::~Keyboard()
                0x00000000c000a6e2                Keyboard::~Keyboard()
                0x00000000c000a706                Keyboard::~Keyboard()
 .text          0x00000000c000a730      0x3f8 hal/logidisk.32
                0x00000000c000a730                LogicalDisk::close(int, int, void*)
                0x00000000c000a734                LogicalDisk::~LogicalDisk()
                0x00000000c000a734                LogicalDisk::~LogicalDisk()
                0x00000000c000a758                LogicalDisk::~LogicalDisk()
                0x00000000c000a782                LogicalDisk::open(int, int, void*)
                0x00000000c000a796                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a7ce                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a814                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a814                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a8d4                LogicalDisk::assignDriveLetter()
                0x00000000c000a98e                LogicalDisk::mount()
                0x00000000c000a9d6                LogicalDisk::unmount()
                0x00000000c000a9e6                LogicalDisk::eject()
                0x00000000c000a9fa                LogicalDisk::unassignDriveLetter()
                0x00000000c000aa50                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aabc                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab28       0x86 hal/mouse.32
                0x00000000c000ab28                Mouse::Mouse(char const*)
                0x00000000c000ab28                Mouse::Mouse(char const*)
                0x00000000c000ab60                Mouse::~Mouse()
                0x00000000c000ab60                Mouse::~Mouse()
                0x00000000c000ab84                Mouse::~Mouse()
 .text          0x00000000c000abae       0x90 hal/nic.32
                0x00000000c000abae                NIC::getMAC()
                0x00000000c000abb4                NIC::write(int, unsigned char*, int*)
                0x00000000c000abba                NIC::NIC(char const*)
                0x00000000c000abba                NIC::NIC(char const*)
                0x00000000c000abf0                NIC::~NIC()
                0x00000000c000abf0                NIC::~NIC()
                0x00000000c000ac14                NIC::~NIC()
 .text          0x00000000c000ac3e      0x33b hal/partition.32
                0x00000000c000ac3e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ace6                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af79        0x3 
 .text          0x00000000c000af7c       0x86 hal/serial.32
                0x00000000c000af7c                Serial::Serial(char const*)
                0x00000000c000af7c                Serial::Serial(char const*)
                0x00000000c000afb4                Serial::~Serial()
                0x00000000c000afb4                Serial::~Serial()
                0x00000000c000afd8                Serial::~Serial()
 *fill*         0x00000000c000b002        0x2 
 .text          0x00000000c000b004      0x1f4 hal/timer.32
                0x00000000c000b004                Timer::Timer(char const*)
                0x00000000c000b004                Timer::Timer(char const*)
                0x00000000c000b03c                Timer::~Timer()
                0x00000000c000b03c                Timer::~Timer()
                0x00000000c000b060                Timer::~Timer()
                0x00000000c000b08a                Timer::read()
                0x00000000c000b095                setupTimer(int)
                0x00000000c000b0d0                timerHandler(unsigned int)
 .text          0x00000000c000b1f8      0x5fe hal/vcache.32
                0x00000000c000b1f8                VCache::VCache(PhysicalDisk*)
                0x00000000c000b1f8                VCache::VCache(PhysicalDisk*)
                0x00000000c000b368                VCache::invalidateReadBuffer()
                0x00000000c000b378                VCache::writeWriteBuffer()
                0x00000000c000b3c4                VCache::~VCache()
                0x00000000c000b3c4                VCache::~VCache()
                0x00000000c000b41c                VCache::~VCache()
                0x00000000c000b444                VCache::write(unsigned long long, int, void*)
                0x00000000c000b612                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b7f6      0x70e hal/video.32
                0x00000000c000b7f6                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b842                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b8b2                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b930                Video::clearScreen(unsigned int)
                0x00000000c000b964                Video::putpixel(int, int, unsigned int)
                0x00000000c000b972                Video::readPixelApprox(int, int)
                0x00000000c000b986                Video::Video(char const*)
                0x00000000c000b986                Video::Video(char const*)
                0x00000000c000b9bc                Video::~Video()
                0x00000000c000b9bc                Video::~Video()
                0x00000000c000b9e0                Video::~Video()
                0x00000000c000ba0a                Video::isMonochrome()
                0x00000000c000ba16                Video::getWidth()
                0x00000000c000ba22                Video::getHeight()
                0x00000000c000ba2e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000baea                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000be94                Video::putTGA(int, int, unsigned char*, int)
 .text          0x00000000c000bf04     0x114f hw/acpi.32
                0x00000000c000bf04                ACPI::close(int, int, void*)
                0x00000000c000bf0c                loadACPITables(unsigned char*)
                0x00000000c000c16c                findRSDT(unsigned char*)
                0x00000000c000c2b8                findDataTable(unsigned char*, char*)
                0x00000000c000c32c                scanMADT()
                0x00000000c000c784                ACPI::ACPI()
                0x00000000c000c784                ACPI::ACPI()
                0x00000000c000c7d8                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c8d4                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000c9a0                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000c9a8                ACPI::detectPCI()
                0x00000000c000cbb4                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cbcc                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d053        0x1 
 .text          0x00000000c000d054       0xea krnl/assert.32
                0x00000000c000d054                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d13e       0xb6 krnl/atexit.32
                0x00000000c000d13e                KeInitialiseAtexit()
                0x00000000c000d15d                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d191                KeExecuteAtexit()
 .text          0x00000000c000d1f4       0x9f krnl/bootmsg.32
                0x00000000c000d1f4                KeDisplaySplashScreen()
                0x00000000c000d223                KeSetBootMessage(char const*)
 .text          0x00000000c000d293       0x5f krnl/c++.32
                0x00000000c000d293                __cxa_atexit
                0x00000000c000d296                __cxa_finalize
                0x00000000c000d297                __stack_chk_fail
                0x00000000c000d2cd                __cxa_pure_virtual
                0x00000000c000d2de                operator new[](unsigned long)
                0x00000000c000d2e3                operator delete(void*, unsigned long)
                0x00000000c000d2e8                operator delete[](void*)
                0x00000000c000d2ed                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d2f2        0x2 
 .text          0x00000000c000d2f4       0x44 krnl/cdefs.32
                0x00000000c000d2f4                CUnlockScheduler
                0x00000000c000d30c                CLockScheduler
                0x00000000c000d31c                CPrintf
 .text          0x00000000c000d338      0xd56 krnl/cm.32
                0x00000000c000d338                CmOpen(char const*)
                0x00000000c000d456                CmClose(Reghive_Tag*)
                0x00000000c000d46c                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d4a8                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d51f                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d55e                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d590                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d5cc                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d5f4                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d615                CmExpand(Reghive_Tag*, int)
                0x00000000c000d690                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d716                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d80a                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d946                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d9a7                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000d9d7                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000da0e                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000da38                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000da78                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000db1c                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000db4a                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dce8                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dd35                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000ddaf                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000de02                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000dec6                zStrtok(char*, char const*)
                0x00000000c000df38                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000dfb9                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000e05c                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000e08e        0x2 
 .text          0x00000000c000e090       0x1d krnl/compat.32
                0x00000000c000e090                Krnl::handlePowerButton()
                0x00000000c000e0a0                Krnl::handleSleepButton()
 *fill*         0x00000000c000e0ad        0x1 
 .text          0x00000000c000e0ae      0x2c3 krnl/computer.32
                0x00000000c000e0ae                Computer::close(int, int, void*)
                0x00000000c000e0b4                Computer::open(int, int, void*)
                0x00000000c000e19a                KeFirstTask()
                0x00000000c000e2bc                Computer::Computer()
                0x00000000c000e2bc                Computer::Computer()
                0x00000000c000e300                KePrepareShutdown()
                0x00000000c000e320                KeShutdown()
                0x00000000c000e344                KeSleep()
                0x00000000c000e350                KeRestart()
 .text          0x00000000c000e371       0x2b krnl/crc32.32
                0x00000000c000e371                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e39c      0x5bf krnl/env.32
                0x00000000c000e39c                EnvVarContainer::getEnv(char const*)
                0x00000000c000e3da                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e49c                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e49e                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e6c2                EnvVarContainer::__loadSystem()
                0x00000000c000e6dc                EnvVarContainer::__loadUser()
                0x00000000c000e6de                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e6de                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e700                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e700                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e730                KeGetEnv(Process*, char const*)
                0x00000000c000e795                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e7af                KeSetEnvUser(char const*, char const*)
                0x00000000c000e7ce                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e7e1                KeDeleteEnvSystem(char const*)
                0x00000000c000e7e2                KeDeleteEnvUser(char const*)
                0x00000000c000e7e3                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e7e4                KeNewProcessEnv(Process*)
                0x00000000c000e806                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e852                KeLoadSystemEnv()
                0x00000000c000e880                KeLoadUserEnv()
                0x00000000c000e8a6                KeFlushEnv()
                0x00000000c000e8a7                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e8c7                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e95b        0x1 
 .text          0x00000000c000e95c      0x361 krnl/fault.32
                0x00000000c000e95c                KeSetupInterrupts()
                0x00000000c000e9d4                int_handler
                0x00000000c000eb04                KeDisplayProgramFault(char const*)
                0x00000000c000eb54                KeGeneralProtectionFault(void*, void*)
                0x00000000c000eba8                KePageFault(void*, void*)
                0x00000000c000ec0c                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000ec1c                KeOtherFault(void*, void*)
                0x00000000c000ec50                KeOpcodeFault(void*, void*)
                0x00000000c000eca4                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000ecbd        0x1 
 .text          0x00000000c000ecbe      0x1db krnl/gdt.32
                0x00000000c000ecbe                GDTEntry::setBase(unsigned int)
                0x00000000c000ecda                GDTEntry::setLimit(unsigned int)
                0x00000000c000ecf8                GDT::GDT()
                0x00000000c000ecf8                GDT::GDT()
                0x00000000c000ed0e                GDT::addEntry(GDTEntry)
                0x00000000c000ed30                GDT::getNumberOfEntries()
                0x00000000c000ed38                GDT::flush()
                0x00000000c000ed5a                GDT::setup()
 .text          0x00000000c000ee99       0x20 krnl/idle.32
                0x00000000c000ee99                idleFunction(void*)
 *fill*         0x00000000c000eeb9        0x3 
 .text          0x00000000c000eebc      0x46c krnl/idt.32
                0x00000000c000eebc                IDTEntry::IDTEntry(bool)
                0x00000000c000eebc                IDTEntry::IDTEntry(bool)
                0x00000000c000ef36                IDTEntry::setOffset(unsigned int)
                0x00000000c000ef4c                IDT::IDT()
                0x00000000c000ef4c                IDT::IDT()
                0x00000000c000ef4e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ef56                IDT::addEntry(IDTEntry, int)
                0x00000000c000ef70                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000efa8                IDT::flush()
                0x00000000c000efc2                IDT::setup()
 .text          0x00000000c000f328       0x9a krnl/inlines.32
                0x00000000c000f328                CPU::current()
                0x00000000c000f334                operator new(unsigned long)
                0x00000000c000f339                operator delete(void*)
                0x00000000c000f33e                disableIRQs()
                0x00000000c000f340                enableIRQs()
                0x00000000c000f342                lockScheduler()
                0x00000000c000f34a                unlockScheduler()
                0x00000000c000f35c                lockStuff()
                0x00000000c000f36a                unlockStuff()
                0x00000000c000f3a7                Virt::getAKernelVAS()
                0x00000000c000f3ad                __not_memcpy
 .text          0x00000000c000f3c2      0x2bc krnl/intlformat.32
                0x00000000c000f3c2                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f5b2                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f5d4                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f5f6                KeSetLocale(klocale_t)
                0x00000000c000f60c                KeInitialiseLocale()
                0x00000000c000f67a                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f67b                KeFormatCurrency(char*, int, double)
                0x00000000c000f67c                KeFormatNumber(char*, long long, long long)
                0x00000000c000f67d                KeFormatNumber(char*, double)
 *fill*         0x00000000c000f67e        0x2 
 .text          0x00000000c000f680      0x42e krnl/intops.32
                0x00000000c000f680                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f808                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f9b4                KeGetDigitsInNumber(long long)
                0x00000000c000fa20                KeItoa(unsigned long long, char*)
                0x00000000c000fa50                KeItoa(long long, char*)
                0x00000000c000fa80                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000faae      0x207 krnl/kheap.32
                0x00000000c000faae                sbrk
                0x00000000c000fb45                sbrk_thunk
                0x00000000c000fb7b                mmap
                0x00000000c000fbd9                munmap
                0x00000000c000fbee                liballoc_lock()
                0x00000000c000fbfc                liballoc_unlock()
                0x00000000c000fc14                liballoc_alloc(int)
                0x00000000c000fc2c                liballoc_free(void*, int)
                0x00000000c000fc47                realloc
                0x00000000c000fc5b                malloc
                0x00000000c000fc6b                free
                0x00000000c000fc7b                rfree
                0x00000000c000fc8b                calloc
 *fill*         0x00000000c000fcb5        0x3 
 .text          0x00000000c000fcb8      0x1d3 krnl/mailbox.32
                0x00000000c000fcb8                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fd18                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fd78                KeMailboxCreate()
                0x00000000c000fdac                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fe10                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fe74                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fe8b       0xfd krnl/main.32
                0x00000000c000fe8b                KeEntryPoint
 .text          0x00000000c000ff88       0x1a krnl/mutex.32
                0x00000000c000ff88                Mutex::Mutex()
                0x00000000c000ff88                Mutex::Mutex()
 .text          0x00000000c000ffa2        0xc krnl/panic.32
                0x00000000c000ffa2                KePanic(char const*)
 .text          0x00000000c000ffae      0x667 krnl/physmgr.32
                0x00000000c000ffae                Phys::allocateDMA(unsigned long)
                0x00000000c0010096                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c00100d1                Phys::setPageState(unsigned long, bool)
                0x00000000c0010111                Phys::getPageState(unsigned long)
                0x00000000c001012d                Phys::freePage(unsigned long)
                0x00000000c0010196                Phys::allocatePage()
                0x00000000c0010274                Phys::allocateContiguousPages(int)
                0x00000000c00102ef                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0010327                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0010615        0x1 
 .text          0x00000000c0010616      0x275 krnl/pipe.32
                0x00000000c0010616                Pipe::isAtty()
                0x00000000c001061a                Pipe::~Pipe()
                0x00000000c001061a                Pipe::~Pipe()
                0x00000000c001063e                Pipe::~Pipe()
                0x00000000c0010666                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0010726                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0010824                Pipe::Pipe(int)
                0x00000000c0010824                Pipe::Pipe(int)
 .text          0x00000000c001088b      0x10b krnl/powctrl.32
                0x00000000c001088b                KePowerThread(void*)
                0x00000000c00108bc                KeChangePowerSettings(PowerSettings)
                0x00000000c00108d2                KeUserIOReceived()
                0x00000000c00108dd                KeHandlePowerButton()
                0x00000000c00108f5                KeHandleSleepButton()
                0x00000000c001090d                KeSetupPowerManager()
 .text          0x00000000c0010996       0x9d krnl/random.32
                0x00000000c0010996                KeRand()
                0x00000000c00109d8                KeSeedRand(unsigned int)
                0x00000000c0010a01                KeInitRand()
 *fill*         0x00000000c0010a33        0x1 
 .text          0x00000000c0010a34      0x1bc krnl/resolve.32
                0x00000000c0010a34                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010bf0      0x401 krnl/semaphore.32
                0x00000000c0010bf0                Semaphore::Semaphore(int)
                0x00000000c0010bf0                Semaphore::Semaphore(int)
                0x00000000c0010c20                Semaphore::tryAcquire()
                0x00000000c0010cf4                Semaphore::assertLocked(char const*)
                0x00000000c0010d80                Semaphore::acquire(int)
                0x00000000c0010f24                Semaphore::acquire()
                0x00000000c0010f40                Semaphore::release()
 .text          0x00000000c0010ff1      0x322 krnl/signal.32
                0x00000000c0010ff1                KiSigKill(int)
                0x00000000c0011005                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011006                KiDefaultSignalHandlerPause(int)
                0x00000000c0011032                KiDefaultSignalHandlerResume(int)
                0x00000000c001105e                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011063                KeInitSignals()
                0x00000000c00110b5                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00110eb                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011168                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001125f                KiCheckSignalZ
                0x00000000c00112a1                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00112dc                KiFinishSignalZ
 .text          0x00000000c0011313      0xe17 krnl/syscalls.32
                0x00000000c0011313                SysSeekDir(regs*)
                0x00000000c0011318                SysTellDir(regs*)
                0x00000000c001131d                SysVerify(regs*)
                0x00000000c0011327                SysGetArgc(regs*)
                0x00000000c001133b                SysTTYName(regs*)
                0x00000000c0011343                SysFormatDisk(regs*)
                0x00000000c00113ba                SysSetDiskVolumeLabel(regs*)
                0x00000000c001140e                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011467                SysRealpath(regs*)
                0x00000000c00114ab                SysReadDir(regs*)
                0x00000000c001152b                SysIsATTY(regs*)
                0x00000000c0011585                SysSeek(regs*)
                0x00000000c00115e3                SysTell(regs*)
                0x00000000c0011658                SysSize(regs*)
                0x00000000c00116d2                SysSizeFromFilename(regs*)
                0x00000000c00117fc                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011926                SysClose(regs*)
                0x00000000c0011986                SysOpenDir(regs*)
                0x00000000c0011a03                SysMakeDir(regs*)
                0x00000000c0011a71                SysCloseDir(regs*)
                0x00000000c0011ac5                SysWait(regs*)
                0x00000000c0011ae6                SysNotImpl(regs*)
                0x00000000c0011b01                SysPanic(regs*)
                0x00000000c0011b1c                SysRmdir(regs*)
                0x00000000c0011b81                SysUnlink(regs*)
                0x00000000c0011be6                SysGetArgv(regs*)
                0x00000000c0011c33                SysUSleep(regs*)
                0x00000000c0011c5c                SysSpawn(regs*)
                0x00000000c0011ccf                SysGetEnv(regs*)
                0x00000000c0011d80                SysSetFatAttrib(regs*)
                0x00000000c0011df3                SysShutdown(regs*)
                0x00000000c0011e50                SysPipe(regs*)
                0x00000000c0011e95                SysGetUnixTime(regs*)
                0x00000000c0011ea9                string_ends_with(char const*, char const*)
                0x00000000c0011ef1                SysOpen(regs*)
                0x00000000c00120e8                KeSystemCall(regs*, void*)
 .text          0x00000000c001212a      0xb0b krnl/terminal.32
                0x00000000c001212a                VgaText::isAtty()
                0x00000000c001212e                VgaText::~VgaText()
                0x00000000c001212e                VgaText::~VgaText()
                0x00000000c0012152                VgaText::~VgaText()
                0x00000000c001217c                VgaText::read(unsigned long long, void*, int*)
                0x00000000c001219c                setTerminalScrollLock(bool)
                0x00000000c001219d                doTerminalCycle()
                0x00000000c001219e                addToTerminalCycle(VgaText*)
                0x00000000c001219f                scrollTerminalScrollLock(int)
                0x00000000c00121a0                VgaText::updateTitle()
                0x00000000c00121a2                VgaText::load()
                0x00000000c00121a4                VgaText::updateCursor()
                0x00000000c00121ba                VgaText::doANSI_SGR(int)
                0x00000000c001222e                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c001223e                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c001224e                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c001226e                VgaText::setTitleTextColour(VgaColour)
                0x00000000c001227a                VgaText::setTitleColour(VgaColour)
                0x00000000c0012286                VgaText::setTitle(char*)
                0x00000000c0012288                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c001229a                VgaText::scrollScreen()
                0x00000000c001232c                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c001233c                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00123e8                VgaText::getCursorX()
                0x00000000c00123f0                VgaText::getCursorY()
                0x00000000c00123f8                VgaText::setCursor(int, int)
                0x00000000c001240f                setActiveTerminal(VgaText*)
                0x00000000c001245a                VgaText::clearScreen()
                0x00000000c00124a8                VgaText::setCursorX(int)
                0x00000000c00124c0                VgaText::setCursorY(int)
                0x00000000c00124d8                VgaText::incrementCursor(bool)
                0x00000000c001252c                VgaText::decrementCursor(bool)
                0x00000000c001254e                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c001261e                VgaText::putchar(char)
                0x00000000c0012716                VgaText::putx(unsigned int)
                0x00000000c001275c                VgaText::puts(char const*)
                0x00000000c0012782                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00127ce                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0012948                VgaText::VgaText(char const*)
                0x00000000c0012948                VgaText::VgaText(char const*)
                0x00000000c0012aa8                VgaText::receiveKey(unsigned char)
                0x00000000c0012c34                VgaText::doUpdate()
 *fill*         0x00000000c0012c35        0x3 
 .text          0x00000000c0012c38      0x224 krnl/tss.32
                0x00000000c0012c38                TSS::TSS()
                0x00000000c0012c38                TSS::TSS()
                0x00000000c0012c48                TSS::setESP(unsigned long)
                0x00000000c0012c5c                TSS::flush()
                0x00000000c0012c7c                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012e5c      0x4dc krnl/unixfile.32
                0x00000000c0012e5c                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012eb2                ReservedFilename::isAtty()
                0x00000000c0012ece                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012f2c                UnixFile::getFileDescriptor()
                0x00000000c0012f34                UnixFile::UnixFile(int)
                0x00000000c0012f34                UnixFile::UnixFile(int)
                0x00000000c00130e8                ReservedFilename::ReservedFilename(int)
                0x00000000c00130e8                ReservedFilename::ReservedFilename(int)
                0x00000000c001311a                UnixFile::~UnixFile()
                0x00000000c001311a                UnixFile::~UnixFile()
                0x00000000c00131b6                UnixFile::~UnixFile()
                0x00000000c00131de                ReservedFilename::~ReservedFilename()
                0x00000000c00131de                ReservedFilename::~ReservedFilename()
                0x00000000c0013202                ReservedFilename::~ReservedFilename()
                0x00000000c0013229                KeGetFileFromDescriptor(int)
 .text          0x00000000c0013338     0x14bc krnl/virtmgr.32
                0x00000000c0013338                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0013372                Virt::getPageState(unsigned long)
                0x00000000c0013395                Virt::allocateKernelVirtualPages(int)
                0x00000000c00134ba                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00134dd                Virt::swapIDToSector(unsigned long)
                0x00000000c00134f3                Virt::allocateSwapfilePage()
                0x00000000c0013573                Virt::virtualMemorySetup()
                0x00000000c00135c4                Virt::setupPageSwapping(int)
                0x00000000c0013636                VAS::setCPUSpecific(unsigned long)
                0x00000000c0013638                VAS::VAS(VAS*)
                0x00000000c0013638                VAS::VAS(VAS*)
                0x00000000c0013650                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c001367e                VAS::getPageTableEntry(unsigned long)
                0x00000000c001369d                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00137da                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00137fe                VAS::virtualToPhysical(unsigned long)
                0x00000000c0013818                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c001385a                VAS::VAS()
                0x00000000c001385a                VAS::VAS()
                0x00000000c00138c4                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00138e4                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0013910                VAS::~VAS()
                0x00000000c0013910                VAS::~VAS()
                0x00000000c0013a78                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013b7c                VAS::allocatePages(int, int)
                0x00000000c0013c62                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013cba                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013db0                VAS::VAS(bool)
                0x00000000c0013db0                VAS::VAS(bool)
                0x00000000c0013f98                VAS::evict(unsigned long)
                0x00000000c001409c                VAS::canLockPage(unsigned long)
                0x00000000c00140b6                VAS::unlockPage(unsigned long)
                0x00000000c00140ea                VAS::canLockPages(unsigned long, int)
                0x00000000c0014126                VAS::unlockPages(unsigned long, int)
                0x00000000c0014162                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0014472                VAS::lockPage(unsigned long)
                0x00000000c00144e4                VAS::lockPages(unsigned long, int)
                0x00000000c0014520                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c0014594                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00145c0                VAS::scanForEviction()
                0x00000000c00146f9                mapVASFirstTime
 .text          0x00000000c00147f4       0x36 sys/eject.32
                0x00000000c00147f4                SysEject(regs*)
 .text          0x00000000c001482a       0x18 sys/exit.32
                0x00000000c001482a                SysExit(regs*)
 .text          0x00000000c0014842       0x1f sys/getcwd.32
                0x00000000c0014842                SysGetCwd(regs*)
 .text          0x00000000c0014861       0x26 sys/getpid.32
                0x00000000c0014861                SysGetPID(regs*)
 .text          0x00000000c0014887       0x21 sys/getramdata.32
                0x00000000c0014887                SysGetRAMData(regs*)
 .text          0x00000000c00148a8       0x97 sys/getvgaptr.32
                0x00000000c00148a8                SysGetVGAPtr(regs*)
 *fill*         0x00000000c001493f        0x1 
 .text          0x00000000c0014940       0xb9 sys/kill.32
                0x00000000c0014940                SysKill(regs*)
 .text          0x00000000c00149f9       0xa8 sys/loaddll.32
                0x00000000c00149f9                SysLoadDLL(regs*)
 .text          0x00000000c0014aa1       0x68 sys/read.32
                0x00000000c0014aa1                SysRead(regs*)
 .text          0x00000000c0014b09       0x29 sys/registersignal.32
                0x00000000c0014b09                SysRegisterSignal(regs*)
 .text          0x00000000c0014b32      0x1cc sys/registry.32
                0x00000000c0014b32                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014b76                SysRegistryReadExtent(regs*)
                0x00000000c0014bbe                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014bd5                SysRegistryEnterDirectory(regs*)
                0x00000000c0014bec                SysRegistryGetNext(regs*)
                0x00000000c0014c03                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014c3d                SysRegistryOpen(regs*)
                0x00000000c0014c51                SysRegistryClose(regs*)
                0x00000000c0014c68                SysRegistryEasyReadString(regs*)
                0x00000000c0014cb4                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014cfe       0x55 sys/sbrk.32
                0x00000000c0014cfe                SysSbrk(regs*)
 .text          0x00000000c0014d53       0x1c sys/setcwd.32
                0x00000000c0014d53                SysSetCwd(regs*)
 .text          0x00000000c0014d6f       0xd7 sys/settime.32
                0x00000000c0014d6f                SysSetTime(regs*)
 .text          0x00000000c0014e46       0x73 sys/symlink.32
                0x00000000c0014e46                SysSymlink(regs*)
 .text          0x00000000c0014eb9       0x3e sys/timezone.32
                0x00000000c0014eb9                SysTimezone(regs*)
 .text          0x00000000c0014ef7       0xfc sys/truncate.32
                0x00000000c0014ef7                SysTruncate(regs*)
 .text          0x00000000c0014ff3       0x68 sys/write.32
                0x00000000c0014ff3                SysWrite(regs*)
 .text          0x00000000c001505b       0x9d sys/wsbe.32
                0x00000000c001505b                SysWsbe(regs*)
 .text          0x00000000c00150f8       0x28 sys/yield.32
                0x00000000c00150f8                SysYield(regs*)
 .text          0x00000000c0015120     0x120b thr/elf.32
                0x00000000c0015120                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00153b2                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00155c4                Thr::runtimeReferenceHelper()
                0x00000000c00155d7                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0015626                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00158e4                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001601d                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001604f                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0016086                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00160a0                Thr::loadDLL(char const*, bool)
                0x00000000c00162f2                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001632b       0x5a thr/exec.32
                0x00000000c001632b                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0016385        0x3 
 .text          0x00000000c0016388     0x11c5 thr/prcssthr.32
                0x00000000c0016388                userModeEntryPoint(void*)
                0x00000000c00163b4                changeTSS
                0x00000000c00163e4                switchToThread(ThreadControlBlock*)
                0x00000000c0016494                Process::addArgs(char**)
                0x00000000c0016500                Process::Process(char const*, Process*, char**)
                0x00000000c0016500                Process::Process(char const*, Process*, char**)
                0x00000000c0016728                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016728                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016914                taskStartupFunction
                0x00000000c0016920                KeDisablePreemption()
                0x00000000c0016948                KeRestorePreemption()
                0x00000000c0016968                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016a7c                Process::createUserThread()
                0x00000000c0016a9c                setupMultitasking(void (*)())
                0x00000000c0016bc0                schedule()
                0x00000000c0016c54                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016c80                blockTask(TaskState)
                0x00000000c0016cbc                waitTask(int, int*, int)
                0x00000000c0016d00                milliTenthSleepUntil(unsigned int)
                0x00000000c0016da8                milliTenthSleep(unsigned int)
                0x00000000c0016dbc                sleep(unsigned int)
                0x00000000c0016dd8                taskReturned
                0x00000000c0016e20                Thr::processFromPID(int)
                0x00000000c0016ed0                unblockTask(ThreadControlBlock*)
                0x00000000c0016f84                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0017258                cleanerTaskFunction(void*)
                0x00000000c0017370                terminateTask(int)
                0x00000000c0017480                Thr::terminateFromIRQ(int)
 .text          0x00000000c001754d      0xd10 vm86/vm8086.32
                0x00000000c001754d                Vm::inbv(unsigned short)
                0x00000000c0017560                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017596                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00175a6                Vm::getSegment(unsigned int)
                0x00000000c00175ae                Vm::getOffset(unsigned int)
                0x00000000c00175b3                Vm::mainloop2()
                0x00000000c00175ed                Vm::mainVm8086Loop(void*)
                0x00000000c0017600                Vm::mainloop3(unsigned long)
                0x00000000c0017626                Vm::initialise8086()
                0x00000000c0017669                Vm::resetConventionalMemory8086()
                0x00000000c001766a                Vm::finish8086()
                0x00000000c00176cc                Vm::getOutput8086(unsigned char*)
                0x00000000c00176f1                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001781e                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017a2c                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017ac5                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017ad6                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017ae8                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017af9                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017b0e                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017b24                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017b39                Vm::faultHandler(regs*)
 *fill*         0x00000000c001825d        0x1 
 .text          0x00000000c001825e     0x1ee7 arch/i386/hal.32
                0x00000000c001825e                noCopro(unsigned long)
                0x00000000c0018260                CPU::close(int, int, void*)
                0x00000000c0018263                x86ReadCMOS(unsigned char)
                0x00000000c00182b7                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018317                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018336                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018353                AMD_K6_writeback(int, int, int)
                0x00000000c0018413                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00184b1                cpuidCheckEDX(unsigned int)
                0x00000000c00184de                cpuidCheckECX(unsigned int)
                0x00000000c001850c                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001853a                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018568                HalDetectFeatures()
                0x00000000c0019333                HalEnableNMI()
                0x00000000c0019346                HalDisableNMI()
                0x00000000c0019359                HalGetNMIState()
                0x00000000c001935f                x86rdmsr(unsigned int)
                0x00000000c001939d                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c00193e2                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c00193f8                HalFindRSDP()
                0x00000000c001948d                HalHandlePageFault(void*, void*)
                0x00000000c001953a                HalHandleOpcodeFault(void*, void*)
                0x00000000c001957c                HalDisplayDebugInfo(void*)
                0x00000000c001990a                HalReceivedNMI()
                0x00000000c00199a5                HalSystemIdle()
                0x00000000c0019a04                i386SaveCoprocessor(void*)
                0x00000000c0019a18                i386LoadCoprocessor(void*)
                0x00000000c0019a2c                x87EmulHandler(regs*, void*)
                0x00000000c0019ac9                HalInitialiseCoprocessor()
                0x00000000c0019b4d                HalPanic(char const*)
                0x00000000c0019c61                HalQueryPerformanceCounter()
                0x00000000c0019c71                HalInitialise()
                0x00000000c0019e03                HalMakeBeep(int)
                0x00000000c0019e3d                HalGetRand()
                0x00000000c0019e40                HalEndOfInterrupt(int)
                0x00000000c0019e6b                HalRestart()
                0x00000000c0019e6c                HalShutdown()
                0x00000000c0019e6d                HalSleep()
                0x00000000c0019e6e                CPU::CPU()
                0x00000000c0019e6e                CPU::CPU()
                0x00000000c0019ef2                CPU::setupSMEP()
                0x00000000c0019efe                CPU::setupUMIP()
                0x00000000c0019f08                CPU::setupTSC()
                0x00000000c0019f12                CPU::setupLargePages()
                0x00000000c0019f1c                CPU::setupPAT()
                0x00000000c0019f4e                CPU::setupMTRR()
                0x00000000c0019f50                CPU::setupGlobalPages()
                0x00000000c0019f5a                CPU::allowUsermodeDataAccess()
                0x00000000c0019f68                CPU::prohibitUsermodeDataAccess()
                0x00000000c0019f76                CPU::setupSMAP()
                0x00000000c0019f84                CPU::setupFeatures()
                0x00000000c001a050                CPU::open(int, int, void*)
 .text          0x00000000c001a145      0x261 arch/i386/intctrl.32
                0x00000000c001a145                convertLegacyIRQNumber(int)
                0x00000000c001a181                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001a1cb                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001a2f9                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001a32d                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001a3a6        0x2 
 .text          0x00000000c001a3a8      0x2dc arch/i386/pic.32
                0x00000000c001a3a8                picIoWait()
                0x00000000c001a3b0                picDisable()
                0x00000000c001a3e4                picGetIRQReg(int)
                0x00000000c001a460                picOpen()
                0x00000000c001a5e4                picEOI(int)
 .text          0x00000000c001a684      0x5f3 arch/i386/rtc.32
                0x00000000c001a684                RTC::open(int, int, void*)
                0x00000000c001a688                RTC::close(int, int, void*)
                0x00000000c001a68c                RTC::timeInSecondsUTC()
                0x00000000c001a69e                RTC::timeInDatetimeUTC()
                0x00000000c001a6c4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001a702                RTC::~RTC()
                0x00000000c001a702                RTC::~RTC()
                0x00000000c001a726                RTC::~RTC()
                0x00000000c001a750                RTC::get_update_in_progress_flag()
                0x00000000c001a764                RTC::completeRTCRefresh()
                0x00000000c001aa18                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001ab8e                rtcIRQHandler(regs*, void*)
                0x00000000c001abce                RTC::RTC()
                0x00000000c001abce                RTC::RTC()
 *fill*         0x00000000c001ac77        0x1 
 .text          0x00000000c001ac78      0x1f4 arch/i386/vga.32
                0x00000000c001ac78                HalConsoleScroll(int, int)
                0x00000000c001ad80                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001ade4                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001ae6c     0x14cf fs/fat/vfslink.32
                0x00000000c001ae6c                FAT::getName()
                0x00000000c001ae74                FAT::tell(void*, unsigned long long*)
                0x00000000c001aeb0                FAT::stat(void*, unsigned long long*)
                0x00000000c001aeec                FAT::~FAT()
                0x00000000c001aeec                FAT::~FAT()
                0x00000000c001af10                FAT::~FAT()
                0x00000000c001af38                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001afdc                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b0a0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b284                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001b4a0                FAT::allocateSwapfile(char const*, int)
                0x00000000c001b660                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b7d0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001b830                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001b890                FAT::close(void*)
                0x00000000c001b8e4                FAT::closeDir(void*)
                0x00000000c001b938                FAT::truncate(void*, unsigned long long)
                0x00000000c001b9a4                FAT::seek(void*, unsigned long long)
                0x00000000c001b9fc                fatWrapperReadDisk
                0x00000000c001ba3c                fatWrapperWriteDisk
                0x00000000c001ba7c                fatWrapperIoctl
                0x00000000c001bb98                FAT::FAT()
                0x00000000c001bb98                FAT::FAT()
                0x00000000c001bbf0                FAT::fixFilepath(char*)
                0x00000000c001bc30                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001bda4                FAT::openDir(char const*, void**)
                0x00000000c001be54                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001bf4c                FAT::unlink(char const*)
                0x00000000c001bfcc                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c180                FAT::rename(char const*, char const*)
                0x00000000c001c24c                FAT::mkdir(char const*)
                0x00000000c001c2cc                FAT::exists(char const*)
 *fill*         0x00000000c001c33b        0x1 
 .text          0x00000000c001c33c       0x94 fs/iso9660/helper.32
                0x00000000c001c33c                isoReadDiscSectorHelper
                0x00000000c001c398                iso_kprintf
                0x00000000c001c3b4                iso_kprintfd
 .text          0x00000000c001c3d0      0x71c fs/iso9660/vfslink.32
                0x00000000c001c3d0                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001c3d6                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001c3dc                ISO9660::getName()
                0x00000000c001c3e2                ISO9660::closeDir(void*)
                0x00000000c001c3ec                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c3f2                ISO9660::unlink(char const*)
                0x00000000c001c3f8                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001c3fe                ISO9660::rename(char const*, char const*)
                0x00000000c001c404                ISO9660::mkdir(char const*)
                0x00000000c001c40a                ISO9660::~ISO9660()
                0x00000000c001c40a                ISO9660::~ISO9660()
                0x00000000c001c42e                ISO9660::~ISO9660()
                0x00000000c001c456                ISO9660::exists(char const*)
                0x00000000c001c46a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001c550                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001c598                ISO9660::seek(void*, unsigned long long)
                0x00000000c001c5da                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001c618                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001c66a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c7ac                ISO9660::close(void*)
                0x00000000c001c7dc                ISO9660::openDir(char const*, void**)
                0x00000000c001c8b6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c9d3                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001ca52                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001cac4                ISO9660::ISO9660()
                0x00000000c001cac4                ISO9660::ISO9660()
 .text          0x00000000c001caec      0x26c hal/sound/sndcard.32
                0x00000000c001caec                SoundCard::beginPlayback()
                0x00000000c001cafa                SoundCard::stopPlayback()
                0x00000000c001cb08                SoundCard::SoundCard(char const*)
                0x00000000c001cb08                SoundCard::SoundCard(char const*)
                0x00000000c001cba6                SoundCard::~SoundCard()
                0x00000000c001cba6                SoundCard::~SoundCard()
                0x00000000c001cbca                SoundCard::~SoundCard()
                0x00000000c001cbf4                SoundCard::configureRates(int, int, int)
                0x00000000c001cc24                SoundCard::getSamples16(int, short*)
                0x00000000c001cc80                SoundCard::getSamples32(int, int*)
                0x00000000c001cd06                SoundCard::addChannel(SoundPort*)
                0x00000000c001cd44                SoundCard::removeChannel(int)
 .text          0x00000000c001cd58      0x426 hal/sound/sndport.32
                0x00000000c001cd58                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001cd58                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001cde4                SoundPort::~SoundPort()
                0x00000000c001cde4                SoundPort::~SoundPort()
                0x00000000c001ce18                SoundPort::unpause()
                0x00000000c001ce24                SoundPort::pause()
                0x00000000c001ce30                SoundPort::getBufferUsed()
                0x00000000c001ce38                SoundPort::getBufferSize()
                0x00000000c001ce40                SoundPort::buffer8(signed char*, int)
                0x00000000c001ced4                SoundPort::buffer16(short*, int)
                0x00000000c001cf68                SoundPort::buffer32(int*, int)
                0x00000000c001cff4                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001d0c0                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001d17e        0x0 hw/bus/isa.32
 .text          0x00000000c001d17e      0xc23 hw/bus/pci.32
                0x00000000c001d17e                PCI::open(int, int, void*)
                0x00000000c001d19c                PCI::close(int, int, void*)
                0x00000000c001d1a0                PCI::PCI()
                0x00000000c001d1a0                PCI::PCI()
                0x00000000c001d238                PCI::readBAR8(unsigned int, int)
                0x00000000c001d254                PCI::readBAR16(unsigned int, int)
                0x00000000c001d272                PCI::readBAR32(unsigned int, int)
                0x00000000c001d28e                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001d2ae                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001d2d0                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001d2f0                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d366                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d410                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d434                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001d45c                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001d4a6                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001d4ce                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d4f2                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001d516                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001d53e                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d5a2                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001d68a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001d950                PCI::checkBus(unsigned char)
                0x00000000c001d974                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001db5a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001dcd6                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001dd48                PCI::detect()
 *fill*         0x00000000c001dda1        0x1 
 .text          0x00000000c001dda2      0xe56 hw/diskctrl/ide.32
                0x00000000c001dda2                IDE::close(int, int, void*)
                0x00000000c001dda6                IDE::IDE()
                0x00000000c001dda6                IDE::IDE()
                0x00000000c001ddda                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ddec                selectDrive(unsigned char, unsigned char)
                0x00000000c001ddee                IDE::getBase(unsigned char)
                0x00000000c001de00                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001dec0                IDE::read(unsigned char, unsigned char)
                0x00000000c001df6e                IDE::waitInterrupt(unsigned char)
                0x00000000c001dfd0                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001dfec                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001e008                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001e052                IDE::open(int, int, void*)
                0x00000000c001e5ac                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001e67c                IDE::detect()
                0x00000000c001eaea                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001eba4                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001ebf8      0x33d hw/diskctrl/satabus.32
                0x00000000c001ebf8                SATABus::close(int, int, void*)
                0x00000000c001ebfc                SATABus::detect()
                0x00000000c001ebfe                SATABus::SATABus()
                0x00000000c001ebfe                SATABus::SATABus()
                0x00000000c001ec84                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ecb6                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ecfe                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ed1e                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001ed48                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001ee58                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001ef02                SATABus::open(int, int, void*)
 *fill*         0x00000000c001ef35        0x1 
 .text          0x00000000c001ef36      0x7a9 hw/diskphys/ata.32
                0x00000000c001ef36                ATA::close(int, int, void*)
                0x00000000c001ef5a                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001ef5c                ATA::ATA()
                0x00000000c001ef5c                ATA::ATA()
                0x00000000c001ef8a                ATA::flush(bool)
                0x00000000c001efd8                ATA::readyForCommand()
                0x00000000c001f024                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f414                ATA::read(unsigned long long, int, void*)
                0x00000000c001f460                ATA::write(unsigned long long, int, void*)
                0x00000000c001f4ac                ATA::detectCHS()
                0x00000000c001f4d6                ATA::open(int, int, void*)
                0x00000000c001f6c1                combineCharAndColour(char, unsigned char)
                0x00000000c001f6d2                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001f6df        0x1 
 .text          0x00000000c001f6e0      0x618 hw/diskphys/atapi.32
                0x00000000c001f6e0                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001f6e6                ATAPI::close(int, int, void*)
                0x00000000c001f70a                ATAPI::ATAPI()
                0x00000000c001f70a                ATAPI::ATAPI()
                0x00000000c001f738                ATAPI::readyForCommand()
                0x00000000c001f78a                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001fa52                ATAPI::diskRemoved()
                0x00000000c001fa8c                ATAPI::eject()
                0x00000000c001fad4                ATAPI::diskInserted()
                0x00000000c001fae0                ATAPI::detectMedia()
                0x00000000c001fb9e                ATAPI::open(int, int, void*)
                0x00000000c001fc7e                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001fcf8      0x44c hw/diskphys/sata.32
                0x00000000c001fcf8                SATA::close(int, int, void*)
                0x00000000c001fd1c                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001fd1e                SATA::open(int, int, void*)
                0x00000000c001fdd6                SATA::SATA()
                0x00000000c001fdd6                SATA::SATA()
                0x00000000c001fe04                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c002008c                SATA::read(unsigned long long, int, void*)
                0x00000000c00200d8                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020144      0x5d0 hw/diskphys/satapi.32
                0x00000000c0020144                SATAPI::write(unsigned long long, int, void*)
                0x00000000c002014a                SATAPI::close(int, int, void*)
                0x00000000c002016e                SATAPI::SATAPI()
                0x00000000c002016e                SATAPI::SATAPI()
                0x00000000c002019c                SATAPI::diskRemoved()
                0x00000000c002019e                SATAPI::diskInserted()
                0x00000000c00201ba                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0020498                SATAPI::eject()
                0x00000000c00204d4                SATAPI::detectMedia()
                0x00000000c002052a                SATAPI::open(int, int, void*)
                0x00000000c002062a                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020714      0x443 hw/intctrl/apic.32
                0x00000000c0020714                IOAPIC::close(int, int, void*)
                0x00000000c002071a                apicGetBase()
                0x00000000c0020738                IOAPIC::IOAPIC()
                0x00000000c0020738                IOAPIC::IOAPIC()
                0x00000000c0020760                apicOpen()
                0x00000000c00208ec                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c002091e                IOAPIC::read(int)
                0x00000000c0020946                IOAPIC::open(int, int, void*)
                0x00000000c0020a2c                IOAPIC::write(int, int)
                0x00000000c0020a58                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0020b57        0x1 
 .text          0x00000000c0020b58       0xf0 hw/timer/apictimer.32
                0x00000000c0020b58                APICTimer::close(int, int, void*)
                0x00000000c0020b60                apicTimerHandler(regs*, void*)
                0x00000000c0020b88                APICTimer::open(int, int, void*)
                0x00000000c0020bf8                APICTimer::write(int)
                0x00000000c0020c20                APICTimer::APICTimer()
                0x00000000c0020c20                APICTimer::APICTimer()
 .text          0x00000000c0020c48      0x1ad hw/timer/pit.32
                0x00000000c0020c48                PIT::write(int)
                0x00000000c0020ccc                pitHandler(regs*, void*)
                0x00000000c0020cf4                PIT::open(int, int, void*)
                0x00000000c0020d44                PIT::close(int, int, void*)
                0x00000000c0020d74                PIT::PIT()
                0x00000000c0020d74                PIT::PIT()
 *fill*         0x00000000c0020df5        0xb 
 .text          0x00000000c0020e00       0x6f arch/i386/avx.32
                0x00000000c0020e00                avxDetect
                0x00000000c0020e2a                avxSave
                0x00000000c0020e3b                avxLoad
                0x00000000c0020e4c                avxInit
                0x00000000c0020e6e                avxClose
 *fill*         0x00000000c0020e6f        0x1 
 .text          0x00000000c0020e70      0x2ec arch/i386/interrupt.32
                0x00000000c0020e70                isr0
                0x00000000c0020e80                isr1
                0x00000000c0020e8a                isr2
                0x00000000c0020e94                isr3
                0x00000000c0020e9e                isr4
                0x00000000c0020ea8                isr5
                0x00000000c0020eb2                isr6
                0x00000000c0020ebc                isr7
                0x00000000c0020ec6                isr8
                0x00000000c0020ece                isr9
                0x00000000c0020ed8                isr10
                0x00000000c0020ee0                isr11
                0x00000000c0020ee8                isr12
                0x00000000c0020ef0                isr13
                0x00000000c0020f0a                isr14
                0x00000000c0020f12                isr15
                0x00000000c0020f1c                isr16
                0x00000000c0020f26                isr17
                0x00000000c0020f30                isr18
                0x00000000c0020f3a                irq3
                0x00000000c0020f44                irq4
                0x00000000c0020f4e                irq5
                0x00000000c0020f58                irq6
                0x00000000c0020f62                irq7
                0x00000000c0020f6c                irq8
                0x00000000c0020f76                irq9
                0x00000000c0020f80                irq10
                0x00000000c0020f8a                irq11
                0x00000000c0020f94                irq12
                0x00000000c0020f9e                irq13
                0x00000000c0020fa8                irq14
                0x00000000c0020fb2                irq15
                0x00000000c0020fbc                irq1
                0x00000000c0020fc3                irq2
                0x00000000c0020fca                isr96
                0x00000000c0020fd1                irq0
                0x00000000c0020fd6                int_common_stub
                0x00000000c0021008                syscall_common_stub
                0x00000000c002110c                irq16
                0x00000000c0021116                irq17
                0x00000000c0021120                irq18
                0x00000000c002112a                irq19
                0x00000000c0021134                irq20
                0x00000000c002113e                irq21
                0x00000000c0021148                irq22
                0x00000000c0021152                irq23
 *fill*         0x00000000c002115c        0x4 
 .text          0x00000000c0021160       0x10 arch/i386/rdrand.32
                0x00000000c0021160                i386GetRDRAND
 .text          0x00000000c0021170       0x39 arch/i386/sse.32
                0x00000000c0021170                sseDetect
                0x00000000c0021188                sseSave
                0x00000000c0021190                sseLoad
                0x00000000c0021198                sseInit
                0x00000000c00211a8                sseClose
 *fill*         0x00000000c00211a9        0x7 
 .text          0x00000000c00211b0       0x4f arch/i386/x87.32
                0x00000000c00211b6                x87Detect
                0x00000000c00211d7                x87Save
                0x00000000c00211de                x87Load
                0x00000000c00211e5                x87Init
                0x00000000c00211fe                x87Close
 *fill*         0x00000000c00211ff        0x1 
 .text          0x00000000c0021200       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021225        0x0 crtn.32
 *fill*         0x00000000c0021225        0x3 
 .text          0x00000000c0021228      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021228                __divdi3
 *fill*         0x00000000c0021373        0x1 
 .text          0x00000000c0021374      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021374                __moddi3
 *fill*         0x00000000c00214f2        0x2 
 .text          0x00000000c00214f4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00214f4                __udivdi3
 *fill*         0x00000000c00215f3        0x1 
 .text          0x00000000c00215f4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c00215f4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021710        0x0
 .iplt          0x00000000c0021710        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002170e        0xf
 .init          0x00000000c002170e        0x3 crti.32
                0x00000000c002170e                _init
 .init          0x00000000c0021711        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021716        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c002171b        0x2 crtn.32

.fini           0x00000000c002171d        0xa
 .fini          0x00000000c002171d        0x3 crti.32
                0x00000000c002171d                _fini
 .fini          0x00000000c0021720        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021725        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021728       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021728       0x1a hal/device.32
                0x00000000c0021728                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021728                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021742       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021742       0x2a hal/device.32
                0x00000000c0021742                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002176c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002176c       0xdc hal/device.32
                0x00000000c002176c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021848       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021848       0x42 hal/device.32
                0x00000000c0021848                LinkedList<Device>::LinkedList()
                0x00000000c0021848                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002188c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002188c       0x1c hal/timer.32
                0x00000000c002188c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00218a8        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00218a8        0x7 hal/timer.32
                0x00000000c00218a8                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00218b0       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00218b0       0xbc hal/timer.32
                0x00000000c00218b0                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002196c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002196c       0xda hal/timer.32
                0x00000000c002196c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021a48       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021a48       0x23 hw/acpi.32
                0x00000000c0021a48                ACPI::~ACPI()
                0x00000000c0021a48                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0021a6c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0021a6c       0x2a hw/acpi.32
                0x00000000c0021a6c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021a98        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021a98        0x2 hw/acpi.32
                0x00000000c0021a98                LinkedList<Device>::~LinkedList()
                0x00000000c0021a98                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021a9c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021a9c       0x1c hw/acpi.32
                0x00000000c0021a9c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021ab8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021ab8        0x7 hw/acpi.32
                0x00000000c0021ab8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021ac0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021ac0       0xb8 hw/acpi.32
                0x00000000c0021ac0                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0021b78       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0021b78       0x23 krnl/computer.32
                0x00000000c0021b78                Computer::~Computer()
                0x00000000c0021b78                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0021b9c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0021b9c       0x2a krnl/computer.32
                0x00000000c0021b9c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021bc6       0x24
 .text._Z10idleCommonv
                0x00000000c0021bc6       0x24 krnl/idle.32
                0x00000000c0021bc6                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021bea        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021bea        0x2 krnl/unixfile.32
                0x00000000c0021bea                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0021bea                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021bec       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021bec       0x42 krnl/unixfile.32
                0x00000000c0021bec                LinkedList<UnixFile>::LinkedList()
                0x00000000c0021bec                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021c2e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021c2e       0xd3 krnl/unixfile.32
                0x00000000c0021c2e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021d02        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021d02        0x7 krnl/unixfile.32
                0x00000000c0021d02                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021d0a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021d0a       0xa1 krnl/unixfile.32
                0x00000000c0021d0a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021dac        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021dac        0x8 krnl/unixfile.32
                0x00000000c0021dac                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021db4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0021db4        0x8 sys/kill.32
                0x00000000c0021db4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021dbc        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021dbc        0x2 thr/prcssthr.32
                0x00000000c0021dbc                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0021dbc                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021dc0       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021dc0       0x49 thr/prcssthr.32
                0x00000000c0021dc0                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0021dc0                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021e0c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0021e0c       0x42 thr/prcssthr.32
                0x00000000c0021e0c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0021e0c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c0021e4e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0021e4e       0x23 arch/i386/hal.32
                0x00000000c0021e4e                CPU::~CPU()
                0x00000000c0021e4e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0021e72       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0021e72       0x2a arch/i386/hal.32
                0x00000000c0021e72                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c0021e9c       0x23
 .text._ZN3PCID2Ev
                0x00000000c0021e9c       0x23 hw/bus/pci.32
                0x00000000c0021e9c                PCI::~PCI()
                0x00000000c0021e9c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0021ec0       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0021ec0       0x2a hw/bus/pci.32
                0x00000000c0021ec0                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0021eea       0x23
 .text._ZN3IDED2Ev
                0x00000000c0021eea       0x23 hw/diskctrl/ide.32
                0x00000000c0021eea                IDE::~IDE()
                0x00000000c0021eea                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0021f0e       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0021f0e       0x2a hw/diskctrl/ide.32
                0x00000000c0021f0e                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0021f38       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0021f38       0x23 hw/diskctrl/satabus.32
                0x00000000c0021f38                SATABus::~SATABus()
                0x00000000c0021f38                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0021f5c       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0021f5c       0x2a hw/diskctrl/satabus.32
                0x00000000c0021f5c                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0021f86       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0021f86       0x23 hw/diskphys/ata.32
                0x00000000c0021f86                ATA::~ATA()
                0x00000000c0021f86                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0021faa       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0021faa       0x2a hw/diskphys/ata.32
                0x00000000c0021faa                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0021fd4       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0021fd4       0x23 hw/diskphys/atapi.32
                0x00000000c0021fd4                ATAPI::~ATAPI()
                0x00000000c0021fd4                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0021ff8       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0021ff8       0x2a hw/diskphys/atapi.32
                0x00000000c0021ff8                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022022       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022022       0x23 hw/diskphys/sata.32
                0x00000000c0022022                SATA::~SATA()
                0x00000000c0022022                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022046       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022046       0x2a hw/diskphys/sata.32
                0x00000000c0022046                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0022070       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0022070       0x23 hw/diskphys/satapi.32
                0x00000000c0022070                SATAPI::~SATAPI()
                0x00000000c0022070                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0022094       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0022094       0x2a hw/diskphys/satapi.32
                0x00000000c0022094                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00220be       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00220be       0x23 hw/intctrl/apic.32
                0x00000000c00220be                IOAPIC::~IOAPIC()
                0x00000000c00220be                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00220e2       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00220e2       0x2a hw/intctrl/apic.32
                0x00000000c00220e2                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c002210c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c002210c       0x23 hw/timer/apictimer.32
                0x00000000c002210c                APICTimer::~APICTimer()
                0x00000000c002210c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022130       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022130       0x2a hw/timer/apictimer.32
                0x00000000c0022130                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002215c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002215c       0x23 hw/timer/pit.32
                0x00000000c002215c                PIT::~PIT()
                0x00000000c002215c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022180       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022180       0x2a hw/timer/pit.32
                0x00000000c0022180                PIT::~PIT()

.rodata         0x00000000c00221aa     0x39ae
                0x00000000c00221aa                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00221aa        0x2 
 .ctors         0x00000000c00221ac        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00221b0        0x4 krnl/unixfile.32
 .ctors         0x00000000c00221b4        0x4 thr/prcssthr.32
 .ctors         0x00000000c00221b8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00221bc                end_ctors = .
                0x00000000c00221bc                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00221bc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00221c0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00221c0                __DTOR_END__
                0x00000000c00221c4                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00221c4       0x1c 
 .rodata        0x00000000c00221e0      0x101 acpica/utclib.32
                0x00000000c00221e0                AcpiGbl_Ctypes
 *fill*         0x00000000c00222e1        0x3 
 .rodata        0x00000000c00222e4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c00222fc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022346       0x1a 
 .rodata        0x00000000c0022360       0xed fs/fat/ff.32
 *fill*         0x00000000c002244d       0x13 
 .rodata        0x00000000c0022460      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022860       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c00228cf       0x11 dbg/kconsole.32
 .rodata        0x00000000c00228e0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0022a30      0x169 dbg/usban.32
 *fill*         0x00000000c0022b99        0x3 
 .rodata.str1.4
                0x00000000c0022b9c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0022cd3      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c0022df6       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0022e4f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0022e50       0x6c fs/vfs.32
                0x00000000c0022e50                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0022ebc       0x1c fs/vfs.32
                0x00000000c0022ebc                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0022ed8       0x1c fs/vfs.32
                0x00000000c0022ed8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0022ef4       0x2c hal/bus.32
                0x00000000c0022ef4                vtable for Bus
 .rodata        0x00000000c0022f20      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0023070       0x3c hal/clock.32
                0x00000000c0023070                vtable for Clock
 .rodata.str1.1
                0x00000000c00230ac       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0023110       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023132       0x15 hal/device.32
 *fill*         0x00000000c0023147        0x1 
 .rodata._ZTV6Device
                0x00000000c0023148       0x2c hal/device.32
                0x00000000c0023148                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023174       0x2c hal/device.32
                0x00000000c0023174                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00231a0       0x2c hal/diskctrl.32
                0x00000000c00231a0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00231cc       0x38 hal/diskphys.32
                0x00000000c00231cc                vtable for PhysicalDisk
 .rodata        0x00000000c0023204       0x53 hal/keybrd.32
 *fill*         0x00000000c0023257        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023258       0x34 hal/keybrd.32
                0x00000000c0023258                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002328c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00232d0       0x2c hal/logidisk.32
                0x00000000c00232d0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00232fc       0x2c hal/mouse.32
                0x00000000c00232fc                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023328       0x34 hal/nic.32
                0x00000000c0023328                vtable for NIC
 .rodata.str1.1
                0x00000000c002335c        0xb hal/partition.32
 *fill*         0x00000000c0023367        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023368       0x44 hal/serial.32
                0x00000000c0023368                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00233ac       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00233f7        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00233ff       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00233ff       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c00233ff       0x16 hal/timer.32
 *fill*         0x00000000c0023415        0x3 
 .rodata._ZTV5Timer
                0x00000000c0023418       0x30 hal/timer.32
                0x00000000c0023418                vtable for Timer
 .rodata.str1.1
                0x00000000c0023448       0x3e hal/vcache.32
 *fill*         0x00000000c0023486        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023488       0x10 hal/vcache.32
                0x00000000c0023488                vtable for VCache
 .rodata.str1.1
                0x00000000c0023498       0xba hal/video.32
 *fill*         0x00000000c0023552        0x2 
 .rodata._ZTV5Video
                0x00000000c0023554       0x4c hal/video.32
                0x00000000c0023554                vtable for Video
 .rodata.str1.1
                0x00000000c00235a0      0x17e hw/acpi.32
 *fill*         0x00000000c002371e        0x2 
 .rodata.str1.4
                0x00000000c0023720       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023797       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023797        0x8 hw/acpi.32
 *fill*         0x00000000c0023797        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023798       0x2c hw/acpi.32
                0x00000000c0023798                vtable for ACPI
 .rodata.str1.1
                0x00000000c00237c4       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c00237d7       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023817       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023838       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c002386b        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c002386e       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.4
                0x00000000c00238e4       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c002399c       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0023a45        0x3 
 .rodata._ZTV8Computer
                0x00000000c0023a48       0x2c krnl/computer.32
                0x00000000c0023a48                vtable for Computer
 .rodata.str1.1
                0x00000000c0023a74       0x3c krnl/env.32
 .rodata        0x00000000c0023ab0       0x76 krnl/fault.32
 .rodata.str1.1
                0x00000000c0023b26        0x4 krnl/intlformat.32
 .rodata.str1.1
                0x00000000c0023b2a       0x11 krnl/intops.32
 *fill*         0x00000000c0023b2a        0x2 
 .rodata.str1.4
                0x00000000c0023b2c       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023b5c        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023b6b       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c0023bcc      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0023cd1       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0023d29       0x39 krnl/pipe.32
 *fill*         0x00000000c0023d62        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0023d64       0x1c krnl/pipe.32
                0x00000000c0023d64                vtable for Pipe
 .rodata.str1.1
                0x00000000c0023d80       0x91 krnl/resolve.32
 *fill*         0x00000000c0023e11        0x3 
 .rodata.str1.4
                0x00000000c0023e14       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c0023e33       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0023efc       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023f44       0x4d krnl/terminal.32
                                         0x5e (size before relaxing)
 *fill*         0x00000000c0023f91        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0023f94       0x1c krnl/terminal.32
                0x00000000c0023f94                vtable for VgaText
 .rodata        0x00000000c0023fb0       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0023feb       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0023feb       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0023feb       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0023feb        0x8 krnl/unixfile.32
 *fill*         0x00000000c0023feb        0x1 
 .rodata.str1.4
                0x00000000c0023fec       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c002400c       0x22 krnl/unixfile.32
 *fill*         0x00000000c002402e        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c0024030       0x1c krnl/unixfile.32
                0x00000000c0024030                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002404c       0x1c krnl/unixfile.32
                0x00000000c002404c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024068      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c00245eb      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c002474c        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c002475b        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024765       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0024786       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c00247ca       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c00247df       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c002480b      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024a15       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0024a6c       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024b64       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024b64       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024b64       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024b64        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024b64       0xdd vm86/vm8086.32
 *fill*         0x00000000c0024c41        0x3 
 .rodata        0x00000000c0024c44       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0024c74      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c0024fbf        0x1 
 .rodata.str1.4
                0x00000000c0024fc0       0x57 arch/i386/hal.32
 *fill*         0x00000000c0025017        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025018       0x2c arch/i386/hal.32
                0x00000000c0025018                vtable for CPU
 .rodata.str1.4
                0x00000000c0025044       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c00250a5       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c00250e3       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00250f8       0x3c arch/i386/rtc.32
                0x00000000c00250f8                vtable for RTC
 .rodata.str1.1
                0x00000000c0025134       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025175        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025178       0x6c fs/fat/vfslink.32
                0x00000000c0025178                vtable for FAT
 .rodata.str1.1
                0x00000000c00251e4       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00251e4      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002531c       0x6c fs/iso9660/vfslink.32
                0x00000000c002531c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025388       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00253cc       0x34 hal/sound/sndcard.32
                0x00000000c00253cc                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0025400       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002543f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025477       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0025518       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c002557c       0x2c hw/bus/pci.32
                0x00000000c002557c                vtable for PCI
 .rodata.str1.1
                0x00000000c00255a8      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c00256cc       0x2c hw/diskctrl/ide.32
                0x00000000c00256cc                vtable for IDE
 .rodata.str1.4
                0x00000000c00256f8       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c002571c       0x2c hw/diskctrl/satabus.32
                0x00000000c002571c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0025748       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0025803        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025804       0x38 hw/diskphys/ata.32
                0x00000000c0025804                vtable for ATA
 .rodata.str1.1
                0x00000000c002583c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0025849        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c002584c       0x38 hw/diskphys/atapi.32
                0x00000000c002584c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0025884       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c002590c       0x38 hw/diskphys/sata.32
                0x00000000c002590c                vtable for SATA
 .rodata.str1.1
                0x00000000c0025944       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0025a2e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0025a30       0x38 hw/diskphys/satapi.32
                0x00000000c0025a30                vtable for SATAPI
 .rodata        0x00000000c0025a68       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c0025a8e        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c0025a90       0x2c hw/intctrl/apic.32
                0x00000000c0025a90                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025abc       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0025ad7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0025ad8       0x30 hw/timer/apictimer.32
                0x00000000c0025ad8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0025b08       0x1d hw/timer/pit.32
 *fill*         0x00000000c0025b25        0x3 
 .rodata._ZTV3PIT
                0x00000000c0025b28       0x30 hw/timer/pit.32
                0x00000000c0025b28                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0025b58      0xa4d
 *(.data)
 .data          0x00000000c0025b58        0x0 crti.32
 .data          0x00000000c0025b58        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0025b58                __dso_handle
 .data          0x00000000c0025b5c        0x0 acpica/utclib.32
 .data          0x00000000c0025b5c        0x0 krnl/malloc.32
 .data          0x00000000c0025b5c        0x0 libk/ctype.32
 .data          0x00000000c0025b5c        0x0 libk/string.32
 .data          0x00000000c0025b5c        0x0 arch/i386/cc.32
 .data          0x00000000c0025b5c        0x0 fs/fat/diskio.32
 .data          0x00000000c0025b5c        0x0 fs/fat/ff.32
 .data          0x00000000c0025b5c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0025b5c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0025b5c        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0025b5c        0x0 dbg/kconsole.32
 *fill*         0x00000000c0025b5c        0x4 
 .data          0x00000000c0025b60       0x28 dbg/usban.32
                0x00000000c0025b60                KiUsbanTypeMismatchTypes
 .data          0x00000000c0025b88        0x0 fs/symlink.32
 .data          0x00000000c0025b88        0x0 fs/vfs.32
 .data          0x00000000c0025b88        0x0 hal/bus.32
 .data          0x00000000c0025b88        0x0 hal/buzzer.32
 .data          0x00000000c0025b88        0x0 hal/clock.32
 .data          0x00000000c0025b88        0x0 hal/device.32
 .data          0x00000000c0025b88        0x0 hal/diskctrl.32
 .data          0x00000000c0025b88        0x0 hal/diskphys.32
 .data          0x00000000c0025b88        0x0 hal/fpu.32
 .data          0x00000000c0025b88        0x0 hal/intctrl.32
 .data          0x00000000c0025b88        0x0 hal/keybrd.32
 .data          0x00000000c0025b88        0x0 hal/logidisk.32
 .data          0x00000000c0025b88        0x0 hal/mouse.32
 .data          0x00000000c0025b88        0x0 hal/nic.32
 .data          0x00000000c0025b88        0x0 hal/partition.32
 .data          0x00000000c0025b88        0x0 hal/serial.32
 .data          0x00000000c0025b88        0x0 hal/timer.32
 .data          0x00000000c0025b88        0x0 hal/vcache.32
 .data          0x00000000c0025b88        0x0 hal/video.32
 .data          0x00000000c0025b88       0x10 hw/acpi.32
                0x00000000c0025b88                legacyIRQRemaps
 .data          0x00000000c0025b98        0x0 krnl/assert.32
 .data          0x00000000c0025b98        0x0 krnl/atexit.32
 .data          0x00000000c0025b98        0x0 krnl/bootmsg.32
 .data          0x00000000c0025b98        0x4 krnl/c++.32
                0x00000000c0025b98                __stack_chk_guard
 .data          0x00000000c0025b9c        0x0 krnl/cdefs.32
 *fill*         0x00000000c0025b9c        0x4 
 .data          0x00000000c0025ba0      0x100 krnl/cm.32
                0x00000000c0025ba0                CmComponents
 .data          0x00000000c0025ca0        0x0 krnl/compat.32
 .data          0x00000000c0025ca0        0x0 krnl/computer.32
 .data          0x00000000c0025ca0      0x400 krnl/crc32.32
                0x00000000c0025ca0                KiPolyLookupCRC32
 .data          0x00000000c00260a0       0x4d krnl/env.32
                0x00000000c00260a0                defaultSysEnv
 .data          0x00000000c00260ed        0x0 krnl/fault.32
 .data          0x00000000c00260ed        0x0 krnl/gdt.32
 .data          0x00000000c00260ed        0x0 krnl/idle.32
 .data          0x00000000c00260ed        0x0 krnl/idt.32
 .data          0x00000000c00260ed        0x0 krnl/inlines.32
 .data          0x00000000c00260ed        0x0 krnl/intlformat.32
 .data          0x00000000c00260ed        0x0 krnl/intops.32
 *fill*         0x00000000c00260ed        0x3 
 .data          0x00000000c00260f0        0x4 krnl/kheap.32
 .data          0x00000000c00260f4        0x0 krnl/mailbox.32
 .data          0x00000000c00260f4        0x0 krnl/main.32
 .data          0x00000000c00260f4        0x0 krnl/mutex.32
 .data          0x00000000c00260f4        0x0 krnl/panic.32
 .data          0x00000000c00260f4        0x4 krnl/physmgr.32
                0x00000000c00260f4                Phys::bitmap
 .data          0x00000000c00260f8        0x0 krnl/pipe.32
 .data          0x00000000c00260f8        0x0 krnl/powctrl.32
 .data          0x00000000c00260f8        0x0 krnl/random.32
 .data          0x00000000c00260f8        0x0 krnl/resolve.32
 .data          0x00000000c00260f8        0x0 krnl/semaphore.32
 *fill*         0x00000000c00260f8        0x8 
 .data          0x00000000c0026100       0x4c krnl/signal.32
                0x00000000c0026100                KiDefaultSignalHandlers
 *fill*         0x00000000c002614c       0x14 
 .data          0x00000000c0026160      0x104 krnl/syscalls.32
                0x00000000c0026160                systemCallHandlers
 *fill*         0x00000000c0026264       0x1c 
 .data          0x00000000c0026280       0x60 krnl/terminal.32
                0x00000000c0026280                VgaText::hiddenOut
                0x00000000c00262a0                ansiToVGAMappings
 .data          0x00000000c00262e0        0x0 krnl/tss.32
 .data          0x00000000c00262e0        0x4 krnl/unixfile.32
                0x00000000c00262e0                UnixFile::nextFd
 .data          0x00000000c00262e4       0x15 krnl/virtmgr.32
                0x00000000c00262e4                Virt::pageAllocPtr
                0x00000000c00262e8                Virt::bitmap
                0x00000000c00262ec                Virt::swapfileSectorsPerPage
                0x00000000c00262f0                Virt::swapfileLength
                0x00000000c00262f4                Virt::swapfileSector
                0x00000000c00262f8                Virt::swapfileDrive
 .data          0x00000000c00262f9        0x0 sys/eject.32
 .data          0x00000000c00262f9        0x0 sys/exit.32
 .data          0x00000000c00262f9        0x0 sys/getcwd.32
 .data          0x00000000c00262f9        0x0 sys/getpid.32
 .data          0x00000000c00262f9        0x0 sys/getramdata.32
 .data          0x00000000c00262f9        0x0 sys/getvgaptr.32
 .data          0x00000000c00262f9        0x0 sys/kill.32
 .data          0x00000000c00262f9        0x0 sys/loaddll.32
 .data          0x00000000c00262f9        0x0 sys/read.32
 .data          0x00000000c00262f9        0x0 sys/registersignal.32
 .data          0x00000000c00262f9        0x0 sys/registry.32
 .data          0x00000000c00262f9        0x0 sys/sbrk.32
 .data          0x00000000c00262f9        0x0 sys/setcwd.32
 .data          0x00000000c00262f9        0x0 sys/settime.32
 .data          0x00000000c00262f9        0x0 sys/symlink.32
 .data          0x00000000c00262f9        0x0 sys/timezone.32
 .data          0x00000000c00262f9        0x0 sys/truncate.32
 .data          0x00000000c00262f9        0x0 sys/write.32
 .data          0x00000000c00262f9        0x0 sys/wsbe.32
 .data          0x00000000c00262f9        0x0 sys/yield.32
 .data          0x00000000c00262f9        0x0 thr/elf.32
 .data          0x00000000c00262f9        0x0 thr/exec.32
 *fill*         0x00000000c00262f9        0x3 
 .data          0x00000000c00262fc        0x4 thr/prcssthr.32
                0x00000000c00262fc                Thr::nextPID
 .data          0x00000000c0026300        0x0 vm86/vm8086.32
 .data          0x00000000c0026300      0x2a4 arch/i386/hal.32
                0x00000000c0026300                exceptionNames
                0x00000000c00265a0                lastCode
 .data          0x00000000c00265a4        0x0 arch/i386/intctrl.32
 .data          0x00000000c00265a4        0x0 arch/i386/pic.32
 .data          0x00000000c00265a4        0x0 arch/i386/rtc.32
 .data          0x00000000c00265a4        0x0 arch/i386/vga.32
 .data          0x00000000c00265a4        0x0 fs/fat/vfslink.32
 .data          0x00000000c00265a4        0x0 fs/iso9660/helper.32
 .data          0x00000000c00265a4        0x1 fs/iso9660/vfslink.32
                0x00000000c00265a4                recentDriveletter
 .data          0x00000000c00265a5        0x0 hal/sound/sndcard.32
 .data          0x00000000c00265a5        0x0 hal/sound/sndport.32
 .data          0x00000000c00265a5        0x0 hw/bus/isa.32
 .data          0x00000000c00265a5        0x0 hw/bus/pci.32
 .data          0x00000000c00265a5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00265a5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00265a5        0x0 hw/diskphys/ata.32
 .data          0x00000000c00265a5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00265a5        0x0 hw/diskphys/sata.32
 .data          0x00000000c00265a5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00265a5        0x0 hw/intctrl/apic.32
 .data          0x00000000c00265a5        0x0 hw/timer/apictimer.32
 .data          0x00000000c00265a5        0x0 hw/timer/pit.32
 .data          0x00000000c00265a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00265a5        0x0 crtn.32
 .data          0x00000000c00265a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00265a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00265a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00265a5        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00265a8        0x0
 .got           0x00000000c00265a8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00265a8        0x0
 .got.plt       0x00000000c00265a8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00265a8        0x0
 .igot.plt      0x00000000c00265a8        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00265a8        0x0
 .tm_clone_table
                0x00000000c00265a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00265a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00265a5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00265a5        0x3 
 .eh_frame      0x00000000c00265a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00265a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00265a8       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0026600       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0026640       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00266ac       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0027000       0x7d
 *(userkernel)
 userkernel     0x00000000c0027000       0x52 krnl/signal.32
                0x00000000c0027000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002702c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0027052       0x2b krnl/syscalls.32
                0x00000000c0027052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0028000        0x1
 *(align_previous)
 align_previous
                0x00000000c0028000        0x1 krnl/signal.32
                0x00000000c0028000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0028004        0x0
 .rel.got       0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028001     0x74a7
                0x00000000c0028001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0028001       0x1f 
 COMMON         0x00000000c0028020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0028020                dcache
                0x00000000c0028060                cdDriveLetter
                0x00000000c0028080                icache
 *(.bss)
 .bss           0x00000000c00280c0        0x0 crti.32
 .bss           0x00000000c00280c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00280e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00280e4       0x1c 
 .bss           0x00000000c0028100      0x378 krnl/malloc.32
 .bss           0x00000000c0028478        0x0 libk/ctype.32
 .bss           0x00000000c0028478        0x0 libk/string.32
 .bss           0x00000000c0028478        0x0 arch/i386/cc.32
 .bss           0x00000000c0028478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028478        0x8 
 .bss           0x00000000c0028480       0x88 fs/fat/ff.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0028508       0x18 
 .bss           0x00000000c0028520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0028eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0028eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0028eb8        0x8 
 .bss           0x00000000c0028ec0     0x2444 fs/symlink.32
                0x00000000c0028ec0                kiNumWaitingRoomSymlinks
                0x00000000c0028ee0                kiNewlyCreatedIDs
                0x00000000c0028f00                kiNewlyCreatedSymlinks
                0x00000000c0029300                kiSymlinkHashTable
                0x00000000c002b300                kiBaseSymlinkID
 .bss           0x00000000c002b304        0x4 fs/vfs.32
                0x00000000c002b304                installedFilesystems
 .bss           0x00000000c002b308        0x0 hal/bus.32
 .bss           0x00000000c002b308        0x0 hal/buzzer.32
 *fill*         0x00000000c002b308       0x18 
 .bss           0x00000000c002b320      0x348 hal/clock.32
                0x00000000c002b320                keLoadedTimezones
                0x00000000c002b324                keNumberOfTimezones
                0x00000000c002b340                keTimezoneStrings
                0x00000000c002b660                keDstOn
                0x00000000c002b661                keTimezoneHalfHourOffset
                0x00000000c002b664                keTimezoneHourOffset
 .bss           0x00000000c002b668        0x0 hal/device.32
 .bss           0x00000000c002b668        0x0 hal/diskctrl.32
 .bss           0x00000000c002b668        0x0 hal/diskphys.32
 .bss           0x00000000c002b668        0x0 hal/fpu.32
 .bss           0x00000000c002b668        0x0 hal/intctrl.32
 *fill*         0x00000000c002b668       0x18 
 .bss           0x00000000c002b680      0x428 hal/keybrd.32
                0x00000000c002b680                keyboardWaitingTaskList
                0x00000000c002b684                keyboardSetupYet
                0x00000000c002b688                guiKeyboardHandler
                0x00000000c002b6a0                keystates
 *fill*         0x00000000c002baa8       0x18 
 .bss           0x00000000c002bac0       0x88 hal/logidisk.32
                0x00000000c002bac0                diskAssignments
                0x00000000c002bae0                disks
 .bss           0x00000000c002bb48        0x4 hal/mouse.32
                0x00000000c002bb48                guiMouseHandler
 .bss           0x00000000c002bb4c        0x0 hal/nic.32
 .bss           0x00000000c002bb4c        0x0 hal/partition.32
 .bss           0x00000000c002bb4c        0x0 hal/serial.32
 .bss           0x00000000c002bb4c        0x4 hal/timer.32
                0x00000000c002bb4c                milliTenthsSinceBoot
 .bss           0x00000000c002bb50        0x0 hal/vcache.32
 .bss           0x00000000c002bb50        0x4 hal/video.32
                0x00000000c002bb50                screen
 *fill*         0x00000000c002bb54        0xc 
 .bss           0x00000000c002bb60      0x480 hw/acpi.32
                0x00000000c002bb60                nextACPITable
                0x00000000c002bb80                acpiTables
                0x00000000c002bd80                usingXSDT
                0x00000000c002bd84                RSDTpointer
                0x00000000c002bd88                RSDPpointer
                0x00000000c002bd8c                nextAPICNMI
                0x00000000c002bda0                apicNMIInfo
                0x00000000c002be20                legacyIRQFlags
                0x00000000c002be40                ioapicDiscoveryNumber
                0x00000000c002be60                ioapicFoundInMADT
                0x00000000c002be80                ioapicAddresses
                0x00000000c002bf00                ioapicGSIBase
                0x00000000c002bf80                processorDiscoveryNumber
                0x00000000c002bfa0                matchingAPICID
                0x00000000c002bfc0                processorID
 .bss           0x00000000c002bfe0        0x0 krnl/assert.32
 .bss           0x00000000c002bfe0       0xe0 krnl/atexit.32
                0x00000000c002bfe0                KiNextAtexitHandler
                0x00000000c002c000                KiAtexitContexts
                0x00000000c002c060                KiAtexitHandlers
 .bss           0x00000000c002c0c0        0x0 krnl/bootmsg.32
 .bss           0x00000000c002c0c0        0x0 krnl/c++.32
 .bss           0x00000000c002c0c0        0x0 krnl/cdefs.32
 .bss           0x00000000c002c0c0        0x4 krnl/cm.32
 .bss           0x00000000c002c0c4        0x0 krnl/compat.32
 .bss           0x00000000c002c0c4       0x12 krnl/computer.32
                0x00000000c002c0c4                systemSleepFunction
                0x00000000c002c0c8                systemResetFunction
                0x00000000c002c0cc                systemShutdownFunction
                0x00000000c002c0d0                Krnl::computer
                0x00000000c002c0d4                KeIsPreemptionOn
                0x00000000c002c0d5                KeIsSchedulingOn
 .bss           0x00000000c002c0d6        0x0 krnl/crc32.32
 *fill*         0x00000000c002c0d6        0x2 
 .bss           0x00000000c002c0d8        0x8 krnl/env.32
                0x00000000c002c0d8                KeUserEnv
                0x00000000c002c0dc                KeSystemEnv
 .bss           0x00000000c002c0e0     0x2000 krnl/fault.32
                0x00000000c002c0e0                keInterruptContexts
                0x00000000c002d0e0                keInterruptHandlers
 .bss           0x00000000c002e0e0        0x6 krnl/gdt.32
                0x00000000c002e0e0                gdtDescr
 .bss           0x00000000c002e0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002e0e6        0x2 
 .bss           0x00000000c002e0e8        0x6 krnl/idt.32
                0x00000000c002e0e8                idtDescr
 .bss           0x00000000c002e0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002e0ee       0x12 
 .bss           0x00000000c002e100       0x24 krnl/intlformat.32
                0x00000000c002e100                keLocale
 .bss           0x00000000c002e124        0x0 krnl/intops.32
 .bss           0x00000000c002e124        0x0 krnl/kheap.32
 .bss           0x00000000c002e124        0x0 krnl/mailbox.32
 .bss           0x00000000c002e124        0x4 krnl/main.32
                0x00000000c002e124                keBootSettings
 .bss           0x00000000c002e128        0x0 krnl/mutex.32
 .bss           0x00000000c002e128        0x1 krnl/panic.32
                0x00000000c002e128                KeIsKernelInPanic
 *fill*         0x00000000c002e129        0x3 
 .bss           0x00000000c002e12c       0x29 krnl/physmgr.32
                0x00000000c002e12c                Phys::forbidEvictions
                0x00000000c002e130                Phys::currentPagePointer
                0x00000000c002e134                Phys::highestMem
                0x00000000c002e138                Phys::oldPercent
                0x00000000c002e13c                Phys::usedPages
                0x00000000c002e140                Phys::usablePages
                0x00000000c002e144                Phys::dmaUsage
 .bss           0x00000000c002e155        0x0 krnl/pipe.32
 *fill*         0x00000000c002e155        0xb 
 .bss           0x00000000c002e160       0x48 krnl/powctrl.32
                0x00000000c002e160                powCtrlOnBattery
                0x00000000c002e180                currentPowerSettings
                0x00000000c002e1a4                secondsSinceLastUserIO
 .bss           0x00000000c002e1a8        0x8 krnl/random.32
                0x00000000c002e1a8                kiRandSeed
 .bss           0x00000000c002e1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002e1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002e1b0        0x0 krnl/signal.32
 .bss           0x00000000c002e1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002e1b0        0x9 krnl/terminal.32
                0x00000000c002e1b0                terminalCycle
                0x00000000c002e1b4                activeTerminal
                0x00000000c002e1b8                VgaText::graphicMode
 *fill*         0x00000000c002e1b9        0x1 
 .bss           0x00000000c002e1ba        0x2 krnl/tss.32
                0x00000000c002e1ba                doubleFaultSelector
 *fill*         0x00000000c002e1bc        0x4 
 .bss           0x00000000c002e1c0       0x84 krnl/unixfile.32
                0x00000000c002e1c0                sfileLpt
                0x00000000c002e200                sfileCom
                0x00000000c002e224                sfileNul
                0x00000000c002e228                sfilePnt
                0x00000000c002e22c                sfileAux
                0x00000000c002e230                sfileCon
                0x00000000c002e234                initialFilesAdded
                0x00000000c002e238                unixFileLinkedList
 .bss           0x00000000c002e244       0x10 krnl/virtmgr.32
                0x00000000c002e244                twswaps
                0x00000000c002e248                swapBalance
                0x00000000c002e24c                Virt::swapfileBitmap
                0x00000000c002e250                keFirstVAS
 .bss           0x00000000c002e254        0x0 sys/eject.32
 .bss           0x00000000c002e254        0x0 sys/exit.32
 .bss           0x00000000c002e254        0x0 sys/getcwd.32
 .bss           0x00000000c002e254        0x0 sys/getpid.32
 .bss           0x00000000c002e254        0x0 sys/getramdata.32
 .bss           0x00000000c002e254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002e254        0x0 sys/kill.32
 .bss           0x00000000c002e254        0x0 sys/loaddll.32
 .bss           0x00000000c002e254        0x0 sys/read.32
 .bss           0x00000000c002e254        0x0 sys/registersignal.32
 .bss           0x00000000c002e254        0x0 sys/registry.32
 .bss           0x00000000c002e254        0x0 sys/sbrk.32
 .bss           0x00000000c002e254        0x0 sys/setcwd.32
 .bss           0x00000000c002e254        0x0 sys/settime.32
 .bss           0x00000000c002e254        0x0 sys/symlink.32
 .bss           0x00000000c002e254        0x0 sys/timezone.32
 .bss           0x00000000c002e254        0x0 sys/truncate.32
 .bss           0x00000000c002e254        0x0 sys/write.32
 .bss           0x00000000c002e254        0x0 sys/wsbe.32
 .bss           0x00000000c002e254        0x0 sys/yield.32
 *fill*         0x00000000c002e254        0xc 
 .bss           0x00000000c002e260      0x7a4 thr/elf.32
                0x00000000c002e260                Thr::driverLookupNext
                0x00000000c002e280                Thr::driverLookupLen
                0x00000000c002e480                Thr::driverLookupAddr
                0x00000000c002e680                Thr::driverNameLookup
                0x00000000c002e880                Thr::kernelSymbols
                0x00000000c002e900                Thr::kernelStringTable
                0x00000000c002e980                Thr::kernelSymbolTable
                0x00000000c002ea00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002ea04        0x0 thr/exec.32
 *fill*         0x00000000c002ea04        0x4 
 .bss           0x00000000c002ea08       0x70 thr/prcssthr.32
                0x00000000c002ea08                KiRestorePreemptionValue
                0x00000000c002ea0c                KiPreemptionDisableCounter
                0x00000000c002ea10                cleanerThread
                0x00000000c002ea14                weNeedTheCleanerToNotBlock
                0x00000000c002ea18                retValLockStuff
                0x00000000c002ea1c                retValSchedLock
                0x00000000c002ea20                lockStuffLock
                0x00000000c002ea24                schedulerLock
                0x00000000c002ea28                taskSwitchesPostponedFlag
                0x00000000c002ea2c                postponeTaskSwitchesCounter
                0x00000000c002ea30                irqDisableCounter
                0x00000000c002ea34                terminatedTaskList
                0x00000000c002ea40                sleepingTaskList
                0x00000000c002ea4c                taskList
                0x00000000c002ea58                kernelProcess
 *fill*         0x00000000c002ea78        0x8 
 .bss           0x00000000c002ea80       0x40 vm86/vm8086.32
                0x00000000c002ea80                Vm::started8086Yet
                0x00000000c002ea84                Vm::vmRetV
                0x00000000c002ea88                Vm::vmDone
                0x00000000c002ea89                Vm::vmReady
                0x00000000c002ea8c                Vm::vm86Thread
                0x00000000c002ea90                Vm::vmToHostCommsPtr
                0x00000000c002eaa0                Vm::vmToHostComms
 .bss           0x00000000c002eac0       0x54 arch/i386/hal.32
                0x00000000c002eac0                apic
                0x00000000c002eac4                guiPanicHandler
                0x00000000c002eac8                fpuOwner
                0x00000000c002eacc                coproLoadFunc
                0x00000000c002ead0                coproSaveFunc
                0x00000000c002ead4                lastD
                0x00000000c002ead8                lastC
                0x00000000c002eadc                lastB
                0x00000000c002eae0                lastA
                0x00000000c002eae4                HalPageWriteCombiningFlag
                0x00000000c002eae8                HalPageGlobalFlag
                0x00000000c002eaec                nmi
                0x00000000c002eaf0                vendorIDString
                0x00000000c002eafd                familyID
                0x00000000c002eafe                model
                0x00000000c002eaff                processorType
                0x00000000c002eb00                steppingID
                0x00000000c002eb04                vendor
                0x00000000c002eb08                opcodeDetectionMode
                0x00000000c002eb0c                features
 .bss           0x00000000c002eb14        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002eb14        0x0 arch/i386/pic.32
 .bss           0x00000000c002eb14        0x2 arch/i386/rtc.32
 .bss           0x00000000c002eb16        0x0 arch/i386/vga.32
 *fill*         0x00000000c002eb16        0xa 
 .bss           0x00000000c002eb20       0xf0 fs/fat/vfslink.32
                0x00000000c002eb20                FAT::fats
                0x00000000c002eb40                FAT::vfsToFatRemaps
                0x00000000c002ebc0                fatToVFSRemaps
 .bss           0x00000000c002ec10        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002ec10       0x10 
 .bss           0x00000000c002ec20      0x820 fs/iso9660/vfslink.32
                0x00000000c002ec20                iso9660Owner
                0x00000000c002ec24                recentSector
                0x00000000c002ec40                recentBuffer
 .bss           0x00000000c002f440        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002f440        0x0 hal/sound/sndport.32
 .bss           0x00000000c002f440        0x0 hw/bus/isa.32
 .bss           0x00000000c002f440        0xd hw/bus/pci.32
                0x00000000c002f440                thePCI
 .bss           0x00000000c002f44d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002f44d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002f44d        0x3 
 .bss           0x00000000c002f450        0x8 hw/diskphys/ata.32
                0x00000000c002f450                ataSectorsWritten
                0x00000000c002f454                ataSectorsRead
 .bss           0x00000000c002f458        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002f458        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002f458        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002f458        0x8 
 .bss           0x00000000c002f460       0x41 hw/intctrl/apic.32
                0x00000000c002f460                noOfIOAPICs
                0x00000000c002f480                ioapics
                0x00000000c002f4a0                IOAPICsSetupYet
 .bss           0x00000000c002f4a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002f4a1        0x3 
 .bss           0x00000000c002f4a4        0x4 hw/timer/pit.32
                0x00000000c002f4a4                pitFreq
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002f4a8        0x0 crtn.32
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002f4a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003694f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
