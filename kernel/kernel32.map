Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f91a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6c3 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca8                Krnl::firstTask()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006de6                Computer::Computer()
                0x00000000c0006e96                Computer::setBootMessage(char const*)
                0x00000000c0006e98                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070ec                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007128                Computer::shutdown()
                0x00000000c0007140                Computer::restart()
                0x00000000c0007158                Computer::sleep()
                0x00000000c000716c                Computer::nmiEnabled()
                0x00000000c0007178                Computer::readCMOS(unsigned char)
                0x00000000c0007196                Computer::enableNMI(bool)
                0x00000000c00071ae                Computer::open(int, int, void*)
                0x00000000c0007282                Computer::disableNMI()
                0x00000000c0007292                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072b6                Computer::handleNMI()
 *fill*         0x00000000c0007321        0x1 
 .text          0x00000000c0007322      0x1db core/gdt.32
                0x00000000c0007322                GDTEntry::setBase(unsigned int)
                0x00000000c000733e                GDTEntry::setLimit(unsigned int)
                0x00000000c000735c                GDT::GDT()
                0x00000000c000735c                GDT::GDT()
                0x00000000c0007372                GDT::addEntry(GDTEntry)
                0x00000000c0007394                GDT::getNumberOfEntries()
                0x00000000c000739c                GDT::flush()
                0x00000000c00073be                GDT::setup()
 .text          0x00000000c00074fd       0x1d core/idle.32
                0x00000000c00074fd                idleFunction(void*)
 *fill*         0x00000000c000751a        0x2 
 .text          0x00000000c000751c      0x46c core/idt.32
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c000751c                IDTEntry::IDTEntry(bool)
                0x00000000c0007596                IDTEntry::setOffset(unsigned int)
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ac                IDT::IDT()
                0x00000000c00075ae                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075b6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007608                IDT::flush()
                0x00000000c0007622                IDT::setup()
 .text          0x00000000c0007988      0x188 core/kheap.32
                0x00000000c0007988                sbrk
                0x00000000c0007a1f                mmap
                0x00000000c0007a35                munmap
                0x00000000c0007a4b                liballoc_lock()
                0x00000000c0007a59                liballoc_unlock()
                0x00000000c0007a6f                liballoc_alloc(int)
                0x00000000c0007a87                liballoc_free(void*, int)
                0x00000000c0007aa2                realloc
                0x00000000c0007ab6                malloc
                0x00000000c0007ac6                free
                0x00000000c0007ad6                rfree
                0x00000000c0007ae6                calloc
 .text          0x00000000c0007b10       0xc7 core/main.32
                0x00000000c0007b10                KeEntryPoint
 .text          0x00000000c0007bd7      0x644 core/physmgr.32
                0x00000000c0007bd7                Phys::allocateDMA(unsigned long)
                0x00000000c0007cbf                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfa                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3a                Phys::getPageState(unsigned long)
                0x00000000c0007d56                Phys::freePage(unsigned long)
                0x00000000c0007dbf                Phys::allocatePage()
                0x00000000c0007e8e                Phys::allocateContiguousPages(int)
                0x00000000c0007ef5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f2d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000821b        0x1 
 .text          0x00000000c000821c      0x273 core/pipe.32
                0x00000000c000821c                Pipe::isAtty()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008220                Pipe::~Pipe()
                0x00000000c0008244                Pipe::~Pipe()
                0x00000000c000826c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000832c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008428                Pipe::Pipe(int)
                0x00000000c0008428                Pipe::Pipe(int)
 *fill*         0x00000000c000848f        0x1 
 .text          0x00000000c0008490      0xab3 core/terminal.32
                0x00000000c0008490                VgaText::isAtty()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c0008494                VgaText::~VgaText()
                0x00000000c00084b8                VgaText::~VgaText()
                0x00000000c00084e2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008502                setTerminalScrollLock(bool)
                0x00000000c0008503                doTerminalCycle()
                0x00000000c0008504                addToTerminalCycle(VgaText*)
                0x00000000c0008505                scrollTerminalScrollLock(int)
                0x00000000c0008506                VgaText::updateTitle()
                0x00000000c0008508                VgaText::load()
                0x00000000c000850a                VgaText::updateCursor()
                0x00000000c0008520                VgaText::doANSI_SGR(int)
                0x00000000c0008594                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085a4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085b4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085d4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085e0                VgaText::setTitleColour(VgaColour)
                0x00000000c00085ec                VgaText::setTitle(char*)
                0x00000000c00085ee                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008600                VgaText::scrollScreen()
                0x00000000c0008692                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086a2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008732                VgaText::getCursorX()
                0x00000000c000873a                VgaText::getCursorY()
                0x00000000c0008742                VgaText::setCursor(int, int)
                0x00000000c0008759                setActiveTerminal(VgaText*)
                0x00000000c00087a4                VgaText::clearScreen()
                0x00000000c00087f2                VgaText::setCursorX(int)
                0x00000000c000880a                VgaText::setCursorY(int)
                0x00000000c0008822                VgaText::incrementCursor(bool)
                0x00000000c0008876                VgaText::decrementCursor(bool)
                0x00000000c0008898                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008968                VgaText::putchar(char)
                0x00000000c0008a60                VgaText::putx(unsigned int)
                0x00000000c0008aa6                VgaText::puts(char const*)
                0x00000000c0008acc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b18                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008c66                VgaText::VgaText(char const*)
                0x00000000c0008db6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f42                VgaText::doUpdate()
 *fill*         0x00000000c0008f43        0x1 
 .text          0x00000000c0008f44      0x1a1 core/tss.32
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f44                TSS::TSS()
                0x00000000c0008f54                TSS::setESP(unsigned long)
                0x00000000c0008f68                TSS::flush()
                0x00000000c0008f88                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090e5        0x1 
 .text          0x00000000c00090e6      0x4ca core/unixfile.32
                0x00000000c00090e6                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000913c                ReservedFilename::isAtty()
                0x00000000c0009158                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091b6                UnixFile::getFileDescriptor()
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c00091be                UnixFile::UnixFile(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c0009372                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c00093a4                UnixFile::~UnixFile()
                0x00000000c0009440                UnixFile::~UnixFile()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c000948c                ReservedFilename::~ReservedFilename()
                0x00000000c00094b3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095b0     0x1218 core/virtmgr.32
                0x00000000c00095b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ea                Virt::getPageState(unsigned long)
                0x00000000c000960d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009732                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009755                Virt::swapIDToSector(unsigned long)
                0x00000000c000976b                Virt::allocateSwapfilePage()
                0x00000000c00097eb                Virt::virtualMemorySetup()
                0x00000000c000983c                Virt::setupPageSwapping(int)
                0x00000000c00098ae                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098b0                VAS::VAS(VAS*)
                0x00000000c00098de                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000992b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a68                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a8c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009aa6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009ae8                VAS::VAS()
                0x00000000c0009b52                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b86                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009bb2                VAS::~VAS()
                0x00000000c0009d20                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e24                VAS::allocatePages(int, int)
                0x00000000c0009f1a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f72                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a068                VAS::VAS(bool)
                0x00000000c000a2b2                VAS::evict(unsigned long)
                0x00000000c000a390                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a52a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a59e                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5ca                VAS::scanForEviction()
                0x00000000c000a6cd                mapVASFirstTime
 .text          0x00000000c000a7c8       0x5f coreobjs/c++.32
                0x00000000c000a7c8                __cxa_atexit
                0x00000000c000a7cb                __cxa_finalize
                0x00000000c000a7cc                __stack_chk_fail
                0x00000000c000a802                __cxa_pure_virtual
                0x00000000c000a813                operator new[](unsigned long)
                0x00000000c000a818                operator delete(void*, unsigned long)
                0x00000000c000a81d                operator delete[](void*)
                0x00000000c000a822                operator delete[](void*, unsigned long)
 .text          0x00000000c000a827      0x254 dbg/kconsole.32
                0x00000000c000a827                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8c7                Dbg::logc(char)
                0x00000000c000a8e7                Dbg::logs(char*)
                0x00000000c000a906                Dbg::logWriteInt(unsigned int)
                0x00000000c000a924                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a945                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa7b        0x1 
 .text          0x00000000c000aa7c      0x2d4 dbg/usban.32
                0x00000000c000aa7c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aae8                __ubsan_handle_type_mismatch_v1
                0x00000000c000abc4                __ubsan_handle_pointer_overflow
                0x00000000c000abf0                __ubsan_handle_out_of_bounds
                0x00000000c000ac1c                __ubsan_handle_add_overflow
                0x00000000c000ac48                __ubsan_handle_load_invalid_value
                0x00000000c000ac74                __ubsan_handle_divrem_overflow
                0x00000000c000aca0                __ubsan_handle_mul_overflow
                0x00000000c000accc                __ubsan_handle_sub_overflow
                0x00000000c000acf8                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad24                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad50      0x889 fs/symlink.32
                0x00000000c000ae9f                KiDeinitialiseSymlinks(void*)
                0x00000000c000af32                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000afb5                KiIsSymlinkRegistered(char const*)
                0x00000000c000b11f                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b33a                KeCreateSymlink(char const*, char const*)
                0x00000000c000b476                KeInitialiseSymlinks()
 *fill*         0x00000000c000b5d9        0x1 
 .text          0x00000000c000b5da      0xd58 fs/vfs.32
                0x00000000c000b5da                File::read(unsigned long long, void*, int*)
                0x00000000c000b632                File::write(unsigned long long, void*, int*)
                0x00000000c000b68a                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b6e2                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b710                File::isAtty()
                0x00000000c000b714                Directory::isAtty()
                0x00000000c000b718                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b71e                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b724                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b72a                File::~File()
                0x00000000c000b72a                File::~File()
                0x00000000c000b74e                File::~File()
                0x00000000c000b778                Directory::~Directory()
                0x00000000c000b778                Directory::~Directory()
                0x00000000c000b79c                Directory::~Directory()
                0x00000000c000b7c6                Filesystem::Filesystem()
                0x00000000c000b7c6                Filesystem::Filesystem()
                0x00000000c000b7ea                Filesystem::~Filesystem()
                0x00000000c000b7ea                Filesystem::~Filesystem()
                0x00000000c000b7f8                Filesystem::~Filesystem()
                0x00000000c000b81c                Fs::getcwd(Process*, char*, int)
                0x00000000c000b846                Fs::initVFS()
                0x00000000c000b870                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba7a                File::File(char const*, Process*, bool)
                0x00000000c000ba7a                File::File(char const*, Process*, bool)
                0x00000000c000bb58                File::File(char const*, Process*)
                0x00000000c000bb58                File::File(char const*, Process*)
                0x00000000c000bb76                File::open(FileOpenMode)
                0x00000000c000bbd4                File::close()
                0x00000000c000bc34                File::seek(unsigned long long)
                0x00000000c000bc8a                File::truncate(unsigned long long)
                0x00000000c000bce0                File::tell(unsigned long long*)
                0x00000000c000bd30                File::rewind()
                0x00000000c000bd44                File::unlink()
                0x00000000c000bd90                File::rename(char const*)
                0x00000000c000bdde                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be3a                File::exists()
                0x00000000c000be78                File::stat(unsigned long long*, bool*)
                0x00000000c000bed9                Fs::setcwd(Process*, char*)
                0x00000000c000c038                Directory::Directory(char const*, Process*)
                0x00000000c000c038                Directory::Directory(char const*, Process*)
                0x00000000c000c100                Directory::open()
                0x00000000c000c15c                Directory::close()
                0x00000000c000c1bc                Directory::unlink()
                0x00000000c000c208                Directory::rename(char const*)
                0x00000000c000c256                Directory::exists()
                0x00000000c000c294                Directory::read(dirent*)
                0x00000000c000c2e0                Directory::create()
                0x00000000c000c32c                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c332        0x2 
 .text          0x00000000c000c334       0x86 hal/bus.32
                0x00000000c000c334                Bus::Bus(char const*)
                0x00000000c000c334                Bus::Bus(char const*)
                0x00000000c000c36c                Bus::~Bus()
                0x00000000c000c36c                Bus::~Bus()
                0x00000000c000c390                Bus::~Bus()
 .text          0x00000000c000c3ba       0x96 hal/buzzer.32
                0x00000000c000c3ba                beepThread(void*)
                0x00000000c000c3f7                Krnl::beep(int, int, bool)
 .text          0x00000000c000c450      0x45f hal/clock.32
                0x00000000c000c450                User::loadClockSettings(int)
                0x00000000c000c4a2                Clock::Clock(char const*)
                0x00000000c000c4a2                Clock::Clock(char const*)
                0x00000000c000c4d8                Clock::~Clock()
                0x00000000c000c4d8                Clock::~Clock()
                0x00000000c000c4fc                Clock::~Clock()
                0x00000000c000c526                Clock::timeInSecondsLocal()
                0x00000000c000c56e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c5c7                datetimeToSeconds(datetime_t)
                0x00000000c000c6e6                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c746                secondsToDatetime(unsigned long long)
                0x00000000c000c88a                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c8af        0x1 
 .text          0x00000000c000c8b0      0x464 hal/device.32
                0x00000000c000c8b0                Device::hibernate()
                0x00000000c000c8b2                Device::wake()
                0x00000000c000c8b4                Device::detect()
                0x00000000c000c8b6                Device::disableLegacy()
                0x00000000c000c8b8                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c8ba                DriverlessDevice::close(int, int, void*)
                0x00000000c000c8be                DriverlessDevice::detect()
                0x00000000c000c8c0                DriverlessDevice::open(int, int, void*)
                0x00000000c000c8d4                Device::~Device()
                0x00000000c000c8d4                Device::~Device()
                0x00000000c000c8e2                Device::~Device()
                0x00000000c000c90a                Device::findAndLoadDriver()
                0x00000000c000c918                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c93e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c97e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c9a8                Device::getParent()
                0x00000000c000c9b4                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c9d2                Device::addChild(Device*)
                0x00000000c000ca16                Device::removeAllChildren()
                0x00000000c000ca5c                Device::hibernateAll()
                0x00000000c000ca8c                Device::wakeAll()
                0x00000000c000cabc                Device::detectAll()
                0x00000000c000caec                Device::disableLegacyAll()
                0x00000000c000caee                Device::loadDriversForAll()
                0x00000000c000caf0                Device::closeAll()
                0x00000000c000cb26                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cb5c                Device::setName(char const*)
                0x00000000c000cb6a                Device::Device(char const*)
                0x00000000c000cb6a                Device::Device(char const*)
                0x00000000c000cc66                Device::getName()
                0x00000000c000cc70                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cc70                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cca6                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000ccea                getDevicesOfType(DeviceType)
 .text          0x00000000c000cd14       0x86 hal/diskctrl.32
                0x00000000c000cd14                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd14                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd4c                HardDiskController::~HardDiskController()
                0x00000000c000cd4c                HardDiskController::~HardDiskController()
                0x00000000c000cd70                HardDiskController::~HardDiskController()
 .text          0x00000000c000cd9a       0xe2 hal/diskphys.32
                0x00000000c000cd9a                PhysicalDisk::eject()
                0x00000000c000cd9e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cd9e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ce06                PhysicalDisk::startCache()
                0x00000000c000ce2e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce2e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce52                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000ce7c        0x0 hal/fpu.32
 .text          0x00000000c000ce7c      0x359 hal/intctrl.32
                0x00000000c000ce7c                int_handler
                0x00000000c000cf06                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cf50                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d084                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d0b8                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d136                setupINTS()
                0x00000000c000d193                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000d1d5        0x1 
 .text          0x00000000c000d1d6      0x8be hal/keybrd.32
                0x00000000c000d1d6                startGUI(void*)
                0x00000000c000d244                startGUIVESA(void*)
                0x00000000c000d2b2                sendKeyToTerminal(unsigned char)
                0x00000000c000d38d                sendKeyboardToken(KeyboardToken)
                0x00000000c000d877                clearInternalKeybuffer(VgaText*)
                0x00000000c000d8ac                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000da0a                Keyboard::Keyboard(char const*)
                0x00000000c000da0a                Keyboard::Keyboard(char const*)
                0x00000000c000da46                Keyboard::~Keyboard()
                0x00000000c000da46                Keyboard::~Keyboard()
                0x00000000c000da6a                Keyboard::~Keyboard()
 .text          0x00000000c000da94      0x3f8 hal/logidisk.32
                0x00000000c000da94                LogicalDisk::close(int, int, void*)
                0x00000000c000da98                LogicalDisk::~LogicalDisk()
                0x00000000c000da98                LogicalDisk::~LogicalDisk()
                0x00000000c000dabc                LogicalDisk::~LogicalDisk()
                0x00000000c000dae6                LogicalDisk::open(int, int, void*)
                0x00000000c000dafa                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db32                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000db78                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000db78                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc38                LogicalDisk::assignDriveLetter()
                0x00000000c000dcf2                LogicalDisk::mount()
                0x00000000c000dd3a                LogicalDisk::unmount()
                0x00000000c000dd4a                LogicalDisk::eject()
                0x00000000c000dd5e                LogicalDisk::unassignDriveLetter()
                0x00000000c000ddb4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000de20                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000de8c       0x86 hal/mouse.32
                0x00000000c000de8c                Mouse::Mouse(char const*)
                0x00000000c000de8c                Mouse::Mouse(char const*)
                0x00000000c000dec4                Mouse::~Mouse()
                0x00000000c000dec4                Mouse::~Mouse()
                0x00000000c000dee8                Mouse::~Mouse()
 .text          0x00000000c000df12       0x90 hal/nic.32
                0x00000000c000df12                NIC::getMAC()
                0x00000000c000df18                NIC::write(int, unsigned char*, int*)
                0x00000000c000df1e                NIC::NIC(char const*)
                0x00000000c000df1e                NIC::NIC(char const*)
                0x00000000c000df54                NIC::~NIC()
                0x00000000c000df54                NIC::~NIC()
                0x00000000c000df78                NIC::~NIC()
 .text          0x00000000c000dfa2      0x33b hal/partition.32
                0x00000000c000dfa2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e04a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e2dd        0x3 
 .text          0x00000000c000e2e0       0x86 hal/serial.32
                0x00000000c000e2e0                Serial::Serial(char const*)
                0x00000000c000e2e0                Serial::Serial(char const*)
                0x00000000c000e318                Serial::~Serial()
                0x00000000c000e318                Serial::~Serial()
                0x00000000c000e33c                Serial::~Serial()
 *fill*         0x00000000c000e366        0x2 
 .text          0x00000000c000e368      0x234 hal/timer.32
                0x00000000c000e368                Timer::Timer(char const*)
                0x00000000c000e368                Timer::Timer(char const*)
                0x00000000c000e3a0                Timer::~Timer()
                0x00000000c000e3a0                Timer::~Timer()
                0x00000000c000e3c4                Timer::~Timer()
                0x00000000c000e3ee                Timer::read()
                0x00000000c000e3f9                setupTimer(int)
                0x00000000c000e434                timerHandler(unsigned int)
 .text          0x00000000c000e59c      0x444 hal/vcache.32
                0x00000000c000e59c                VCache::VCache(PhysicalDisk*)
                0x00000000c000e59c                VCache::VCache(PhysicalDisk*)
                0x00000000c000e70c                VCache::invalidateReadBuffer()
                0x00000000c000e71c                VCache::writeWriteBuffer()
                0x00000000c000e768                VCache::~VCache()
                0x00000000c000e768                VCache::~VCache()
                0x00000000c000e7c0                VCache::~VCache()
                0x00000000c000e7e8                VCache::write(unsigned long long, int, void*)
                0x00000000c000e8d6                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e9e0      0x4c7 hal/video.32
                0x00000000c000e9e0                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ea2c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ea9c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb1a                Video::clearScreen(unsigned int)
                0x00000000c000eb4e                Video::putpixel(int, int, unsigned int)
                0x00000000c000eb5c                Video::readPixelApprox(int, int)
                0x00000000c000eb70                Video::Video(char const*)
                0x00000000c000eb70                Video::Video(char const*)
                0x00000000c000eba6                Video::~Video()
                0x00000000c000eba6                Video::~Video()
                0x00000000c000ebca                Video::~Video()
                0x00000000c000ebf4                Video::isMonochrome()
                0x00000000c000ec00                Video::getWidth()
                0x00000000c000ec0c                Video::getHeight()
                0x00000000c000ec18                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ecd4                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ee3c                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000eea7        0x1 
 .text          0x00000000c000eea8     0x138b hw/acpi.32
                0x00000000c000eea8                ACPI::close(int, int, void*)
                0x00000000c000ef5c                findRSDP()
                0x00000000c000eff4                loadACPITables(unsigned char*)
                0x00000000c000f260                findRSDT(unsigned char*)
                0x00000000c000f3b8                findDataTable(unsigned char*, char*)
                0x00000000c000f438                scanMADT()
                0x00000000c000f8f0                ACPI::ACPI()
                0x00000000c000f8f0                ACPI::ACPI()
                0x00000000c000f944                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fa40                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fb0c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fb14                ACPI::detectPCI()
                0x00000000c000fd34                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fd7c                ACPI::sleep()
                0x00000000c000fd98                ACPI::open(int, int, void*)
 *fill*         0x00000000c0010233        0x1 
 .text          0x00000000c0010234      0xbc5 hw/cpu.32
                0x00000000c0010234                CPU::close(int, int, void*)
                0x00000000c0010238                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0010254                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c001026c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c00102e0                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0010364                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0010392                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00103c0                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00103ee                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c001041c                CPU::CPU()
                0x00000000c001041c                CPU::CPU()
                0x00000000c00104aa                CPU::displayFeatures()
                0x00000000c00104ac                CPU::detectFeatures()
                0x00000000c0010b80                CPU::setupSMEP()
                0x00000000c0010b8c                CPU::setupUMIP()
                0x00000000c0010b96                CPU::setupTSC()
                0x00000000c0010ba0                CPU::setupLargePages()
                0x00000000c0010baa                CPU::setupPAT()
                0x00000000c0010be6                CPU::setupMTRR()
                0x00000000c0010be8                CPU::setupGlobalPages()
                0x00000000c0010bf2                CPU::allowUsermodeDataAccess()
                0x00000000c0010c04                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010c16                CPU::setupSMAP()
                0x00000000c0010c24                CPU::setupFeatures()
                0x00000000c0010cf0                CPU::open(int, int, void*)
 .text          0x00000000c0010df9       0xb6 krnl/atexit.32
                0x00000000c0010df9                KeInitialiseAtexit()
                0x00000000c0010e18                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010e4c                KeExecuteAtexit()
 .text          0x00000000c0010eaf       0xdf krnl/bootmsg.32
                0x00000000c0010eaf                KeDisplaySplashScreen()
                0x00000000c0010f2b                KeSetBootMessage(char const*)
 *fill*         0x00000000c0010f8e        0x2 
 .text          0x00000000c0010f90       0x1d krnl/compat.32
                0x00000000c0010f90                Krnl::handlePowerButton()
                0x00000000c0010fa0                Krnl::handleSleepButton()
 .text          0x00000000c0010fad       0x2b krnl/crc32.32
                0x00000000c0010fad                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c0010fd8      0x5bf krnl/env.32
                0x00000000c0010fd8                EnvVarContainer::getEnv(char const*)
                0x00000000c0011016                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00110d8                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00110da                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00112fe                EnvVarContainer::__loadSystem()
                0x00000000c0011318                EnvVarContainer::__loadUser()
                0x00000000c001131a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001131a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001133c                EnvVarContainer::~EnvVarContainer()
                0x00000000c001133c                EnvVarContainer::~EnvVarContainer()
                0x00000000c001136c                KeGetEnv(Process*, char const*)
                0x00000000c00113d1                KeSetEnvSystem(char const*, char const*)
                0x00000000c00113eb                KeSetEnvUser(char const*, char const*)
                0x00000000c001140a                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c001141d                KeDeleteEnvSystem(char const*)
                0x00000000c001141e                KeDeleteEnvUser(char const*)
                0x00000000c001141f                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0011420                KeNewProcessEnv(Process*)
                0x00000000c0011442                KeCopyProcessEnv(Process*, Process*)
                0x00000000c001148e                KeLoadSystemEnv()
                0x00000000c00114bc                KeLoadUserEnv()
                0x00000000c00114e2                KeFlushEnv()
                0x00000000c00114e3                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0011503                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0011597       0x94 krnl/inlines.32
                0x00000000c0011597                CPU::current()
                0x00000000c00115a3                operator new(unsigned long)
                0x00000000c00115a8                operator delete(void*)
                0x00000000c00115ad                disableIRQs()
                0x00000000c00115af                enableIRQs()
                0x00000000c00115b1                lockScheduler()
                0x00000000c00115b9                unlockScheduler()
                0x00000000c00115c8                lockStuff()
                0x00000000c00115d6                unlockStuff()
                0x00000000c0011610                Virt::getAKernelVAS()
                0x00000000c0011616                __not_memcpy
 .text          0x00000000c001162b        0xc krnl/panic.32
                0x00000000c001162b                KePanic(char const*)
 .text          0x00000000c0011637      0x142 krnl/powctrl.32
                0x00000000c0011637                KePowerThread(void*)
                0x00000000c0011665                KeChangePowerSettings(PowerSettings)
                0x00000000c001167b                KeUserIOReceived()
                0x00000000c0011686                KeHandlePowerButton()
                0x00000000c00116bb                KeHandleSleepButton()
                0x00000000c00116f0                KeSetupPowerManager()
 .text          0x00000000c0011779       0x9d krnl/random.32
                0x00000000c0011779                KeRand()
                0x00000000c00117bb                KeSeedRand(unsigned int)
                0x00000000c00117e4                KeInitRand()
 *fill*         0x00000000c0011816        0x2 
 .text          0x00000000c0011818      0x1bc krnl/resolve.32
                0x00000000c0011818                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00119d4      0x322 krnl/signal.32
                0x00000000c00119d4                KiSigKill(int)
                0x00000000c00119e8                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00119e9                KiDefaultSignalHandlerPause(int)
                0x00000000c0011a15                KiDefaultSignalHandlerResume(int)
                0x00000000c0011a41                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011a46                KeInitSignals()
                0x00000000c0011a98                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011ace                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011b4b                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011c42                KiCheckSignalZ
                0x00000000c0011c84                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011cbf                KiFinishSignalZ
 .text          0x00000000c0011cf6      0xdd6 krnl/syscalls.32
                0x00000000c0011cf6                SysSeekDir(regs*)
                0x00000000c0011cfb                SysTellDir(regs*)
                0x00000000c0011d00                SysVerify(regs*)
                0x00000000c0011d0a                SysGetArgc(regs*)
                0x00000000c0011d1e                SysTTYName(regs*)
                0x00000000c0011d26                SysFormatDisk(regs*)
                0x00000000c0011d9d                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011df1                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011e4a                SysShutdown(regs*)
                0x00000000c0011ea8                SysRealpath(regs*)
                0x00000000c0011eec                SysReadDir(regs*)
                0x00000000c0011f6c                SysIsATTY(regs*)
                0x00000000c0011fc6                SysSeek(regs*)
                0x00000000c001201d                SysTell(regs*)
                0x00000000c001208a                SysSize(regs*)
                0x00000000c00120fd                SysSizeFromFilename(regs*)
                0x00000000c0012211                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0012325                SysClose(regs*)
                0x00000000c0012385                SysOpenDir(regs*)
                0x00000000c0012402                SysMakeDir(regs*)
                0x00000000c0012470                SysCloseDir(regs*)
                0x00000000c00124c4                SysWait(regs*)
                0x00000000c00124e5                SysNotImpl(regs*)
                0x00000000c0012500                SysPanic(regs*)
                0x00000000c001251b                SysRmdir(regs*)
                0x00000000c0012580                SysUnlink(regs*)
                0x00000000c00125e5                SysGetArgv(regs*)
                0x00000000c0012632                SysUSleep(regs*)
                0x00000000c001265b                SysSpawn(regs*)
                0x00000000c00126ce                SysGetEnv(regs*)
                0x00000000c001277f                SysSetFatAttrib(regs*)
                0x00000000c00127f2                SysPipe(regs*)
                0x00000000c0012837                SysGetUnixTime(regs*)
                0x00000000c001284b                string_ends_with(char const*, char const*)
                0x00000000c0012893                SysOpen(regs*)
                0x00000000c0012a8a                KeSystemCall(regs*, void*)
 .text          0x00000000c0012acc      0x159 net/ethernet.32
                0x00000000c0012acc                KeSwitchEndian16(unsigned short)
                0x00000000c0012af0                KeSwitchEndian32(unsigned int)
                0x00000000c0012b20                EthernetCRC32(unsigned char*, int)
                0x00000000c0012bc4                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012c25      0xd56 reg/cm.32
                0x00000000c0012c25                CmOpen(char const*)
                0x00000000c0012d43                CmClose(Reghive_Tag*)
                0x00000000c0012d59                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012d95                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012e0c                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012e4b                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012e7d                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012eb9                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012ee1                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012f02                CmExpand(Reghive_Tag*, int)
                0x00000000c0012f7d                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0013003                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c00130f7                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0013233                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0013294                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00132c4                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c00132fb                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0013325                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013365                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0013409                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0013437                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00135d5                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013622                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001369c                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00136ef                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00137b3                zStrtok(char*, char const*)
                0x00000000c0013825                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00138a6                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013949                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001397b      0x52a reg/registry.32
                0x00000000c001397b                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013aec                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013c41                Reg::getLine(char*, char*, char*)
                0x00000000c0013c78                Reg::readInt(char*, char*, int*)
                0x00000000c0013d66                Reg::readString(char*, char*, char*, int)
                0x00000000c0013de7                Reg::readBool(char*, char*, bool*)
                0x00000000c0013e0c                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013e38                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013e64                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013ea5       0x36 sys/eject.32
                0x00000000c0013ea5                SysEject(regs*)
 .text          0x00000000c0013edb       0x18 sys/exit.32
                0x00000000c0013edb                SysExit(regs*)
 .text          0x00000000c0013ef3       0x1f sys/getcwd.32
                0x00000000c0013ef3                SysGetCwd(regs*)
 .text          0x00000000c0013f12        0xc sys/getpid.32
                0x00000000c0013f12                SysGetPID(regs*)
 .text          0x00000000c0013f1e       0x1a sys/getramdata.32
                0x00000000c0013f1e                SysGetRAMData(regs*)
 .text          0x00000000c0013f38       0x82 sys/getvgaptr.32
                0x00000000c0013f38                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013fba        0x2 
 .text          0x00000000c0013fbc       0xb9 sys/kill.32
                0x00000000c0013fbc                SysKill(regs*)
 .text          0x00000000c0014075       0xa8 sys/loaddll.32
                0x00000000c0014075                SysLoadDLL(regs*)
 .text          0x00000000c001411d       0x68 sys/read.32
                0x00000000c001411d                SysRead(regs*)
 .text          0x00000000c0014185       0x29 sys/registersignal.32
                0x00000000c0014185                SysRegisterSignal(regs*)
 .text          0x00000000c00141ae      0x19c sys/registry.32
                0x00000000c00141ae                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014225                SysRegistryReadExtent(regs*)
                0x00000000c001426d                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014295                SysRegistryEnterDirectory(regs*)
                0x00000000c00142bd                SysRegistryGetNext(regs*)
                0x00000000c00142e5                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001431f                SysRegistryOpen(regs*)
                0x00000000c0014333                SysRegistryClose(regs*)
 .text          0x00000000c001434a       0x55 sys/sbrk.32
                0x00000000c001434a                SysSbrk(regs*)
 .text          0x00000000c001439f       0x1c sys/setcwd.32
                0x00000000c001439f                SysSetCwd(regs*)
 .text          0x00000000c00143bb       0x96 sys/settime.32
                0x00000000c00143bb                SysSetTime(regs*)
 .text          0x00000000c0014451       0x2d sys/symlink.32
                0x00000000c0014451                SysSymlink(regs*)
 .text          0x00000000c001447e       0x4a sys/timezone.32
                0x00000000c001447e                SysTimezone(regs*)
 .text          0x00000000c00144c8       0xfc sys/truncate.32
                0x00000000c00144c8                SysTruncate(regs*)
 .text          0x00000000c00145c4       0x68 sys/write.32
                0x00000000c00145c4                SysWrite(regs*)
 .text          0x00000000c001462c       0x62 sys/wsbe.32
                0x00000000c001462c                SysWsbe(regs*)
 .text          0x00000000c001468e       0x25 sys/yield.32
                0x00000000c001468e                SysYield(regs*)
 .text          0x00000000c00146b3     0x11e6 thr/elf.32
                0x00000000c00146b3                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014941                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014b53                Thr::runtimeReferenceHelper()
                0x00000000c0014b66                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014bb5                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014e73                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00155ac                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00155de                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0015615                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001562f                Thr::loadDLL(char const*, bool)
                0x00000000c0015860                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0015899        0x3 
 .text          0x00000000c001589c     0x13d9 thr/prcssthr.32
                0x00000000c001589c                userModeEntryPoint(void*)
                0x00000000c00158c4                changeTSS
                0x00000000c00158f4                switchToThread(ThreadControlBlock*)
                0x00000000c00159a4                Process::addArgs(char**)
                0x00000000c0015a10                Process::Process(char const*, Process*, char**)
                0x00000000c0015a10                Process::Process(char const*, Process*, char**)
                0x00000000c0015c1c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015c1c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015df0                taskStartupFunction
                0x00000000c0015dfc                Semaphore::Semaphore(int)
                0x00000000c0015dfc                Semaphore::Semaphore(int)
                0x00000000c0015e2c                Mutex::Mutex()
                0x00000000c0015e2c                Mutex::Mutex()
                0x00000000c0015e40                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0015f4c                Process::createUserThread()
                0x00000000c0015f6c                setupMultitasking(void (*)())
                0x00000000c0016090                schedule()
                0x00000000c0016124                Semaphore::tryAcquire()
                0x00000000c00161f8                Semaphore::assertLocked(char const*)
                0x00000000c001627c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00162a4                blockTask(TaskState)
                0x00000000c00162dc                waitTask(int, int*, int)
                0x00000000c0016320                milliTenthSleepUntil(unsigned int)
                0x00000000c00163c0                milliTenthSleep(unsigned int)
                0x00000000c00163d4                sleep(unsigned int)
                0x00000000c00163f0                Semaphore::acquire()
                0x00000000c00164b8                taskReturned
                0x00000000c00164fc                Thr::processFromPID(int)
                0x00000000c00165a8                unblockTask(ThreadControlBlock*)
                0x00000000c0016654                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016928                cleanerTaskFunction(void*)
                0x00000000c0016a30                terminateTask(int)
                0x00000000c0016b1c                Thr::terminateFromIRQ(int)
                0x00000000c0016b2c                Semaphore::release()
 .text          0x00000000c0016c75      0xc27 vm86/vm8086.32
                0x00000000c0016c75                Vm::inbv(unsigned short)
                0x00000000c0016c88                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016cbe                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016cce                Vm::getSegment(unsigned int)
                0x00000000c0016cd6                Vm::getOffset(unsigned int)
                0x00000000c0016cdb                Vm::mainloop2()
                0x00000000c0016d15                Vm::mainVm8086Loop(void*)
                0x00000000c0016d25                Vm::mainloop3(unsigned long)
                0x00000000c0016d4b                Vm::initialise8086()
                0x00000000c0016d8e                Vm::finish8086()
                0x00000000c0016def                Vm::getOutput8086(unsigned char*)
                0x00000000c0016e14                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0016ecd                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001706b                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017104                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017115                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017127                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017138                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001714d                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017163                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017178                Vm::faultHandler(regs*)
 .text          0x00000000c001789c      0xaf0 arch/i386/hal.32
                0x00000000c001789c                noCopro(unsigned long)
                0x00000000c001789d                nmiHandler(regs*, void*)
                0x00000000c00178b6                doubleFault(regs*, void*)
                0x00000000c00178cf                displayDebugInfo(regs*)
                0x00000000c0017c54                HalSystemIdle()
                0x00000000c0017cd0                displayProgramFault(char const*)
                0x00000000c0017d1c                gpFault(regs*, void*)
                0x00000000c0017d83                pgFault(regs*, void*)
                0x00000000c0017e0c                otherISRHandler(regs*, void*)
                0x00000000c0017e40                opcodeFault(regs*, void*)
                0x00000000c0017ec3                i386SaveCoprocessor(void*)
                0x00000000c0017ed7                i386LoadCoprocessor(void*)
                0x00000000c0017eeb                x87EmulHandler(regs*, void*)
                0x00000000c0017f88                HalInitialiseCoprocessor()
                0x00000000c0018036                HalPanic(char const*)
                0x00000000c001814a                HalQueryPerformanceCounter()
                0x00000000c0018165                HalInitialise()
                0x00000000c001831b                HalMakeBeep(int)
                0x00000000c0018355                HalGetRand()
                0x00000000c0018358                HalEndOfInterrupt(int)
                0x00000000c0018389                HalRestart()
                0x00000000c001838a                HalShutdown()
                0x00000000c001838b                HalSleep()
 .text          0x00000000c001838c      0x2dc arch/i386/pic.32
                0x00000000c001838c                picIoWait()
                0x00000000c0018394                picDisable()
                0x00000000c00183c8                picGetIRQReg(int)
                0x00000000c0018444                picOpen()
                0x00000000c00185c8                picEOI(int)
 .text          0x00000000c0018668      0x674 arch/i386/rtc.32
                0x00000000c0018668                RTC::open(int, int, void*)
                0x00000000c001866c                RTC::close(int, int, void*)
                0x00000000c0018670                RTC::timeInSecondsUTC()
                0x00000000c0018682                RTC::timeInDatetimeUTC()
                0x00000000c00186a8                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c00186e6                RTC::~RTC()
                0x00000000c00186e6                RTC::~RTC()
                0x00000000c001870a                RTC::~RTC()
                0x00000000c0018734                RTC::get_update_in_progress_flag()
                0x00000000c001874e                RTC::completeRTCRefresh()
                0x00000000c0018a2e                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018bdc                rtcIRQHandler(regs*, void*)
                0x00000000c0018c22                RTC::RTC()
                0x00000000c0018c22                RTC::RTC()
 .text          0x00000000c0018cdc      0x1f4 arch/i386/vga.32
                0x00000000c0018cdc                HalConsoleScroll(int, int)
                0x00000000c0018de4                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018e48                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018ed0     0x14cf fs/fat/vfslink.32
                0x00000000c0018ed0                FAT::getName()
                0x00000000c0018ed8                FAT::tell(void*, unsigned long long*)
                0x00000000c0018f14                FAT::stat(void*, unsigned long long*)
                0x00000000c0018f50                FAT::~FAT()
                0x00000000c0018f50                FAT::~FAT()
                0x00000000c0018f74                FAT::~FAT()
                0x00000000c0018f9c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019040                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019104                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00192e8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019504                FAT::allocateSwapfile(char const*, int)
                0x00000000c00196c4                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019834                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019894                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00198f4                FAT::close(void*)
                0x00000000c0019948                FAT::closeDir(void*)
                0x00000000c001999c                FAT::truncate(void*, unsigned long long)
                0x00000000c0019a08                FAT::seek(void*, unsigned long long)
                0x00000000c0019a60                fatWrapperReadDisk
                0x00000000c0019aa0                fatWrapperWriteDisk
                0x00000000c0019ae0                fatWrapperIoctl
                0x00000000c0019bfc                FAT::FAT()
                0x00000000c0019bfc                FAT::FAT()
                0x00000000c0019c54                FAT::fixFilepath(char*)
                0x00000000c0019c94                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019e08                FAT::openDir(char const*, void**)
                0x00000000c0019eb8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019fb0                FAT::unlink(char const*)
                0x00000000c001a030                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a1e4                FAT::rename(char const*, char const*)
                0x00000000c001a2b0                FAT::mkdir(char const*)
                0x00000000c001a330                FAT::exists(char const*)
 *fill*         0x00000000c001a39f        0x1 
 .text          0x00000000c001a3a0       0x94 fs/iso9660/helper.32
                0x00000000c001a3a0                isoReadDiscSectorHelper
                0x00000000c001a3fc                iso_kprintf
                0x00000000c001a418                iso_kprintfd
 .text          0x00000000c001a434      0x71c fs/iso9660/vfslink.32
                0x00000000c001a434                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a43a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a440                ISO9660::getName()
                0x00000000c001a446                ISO9660::closeDir(void*)
                0x00000000c001a450                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a456                ISO9660::unlink(char const*)
                0x00000000c001a45c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a462                ISO9660::rename(char const*, char const*)
                0x00000000c001a468                ISO9660::mkdir(char const*)
                0x00000000c001a46e                ISO9660::~ISO9660()
                0x00000000c001a46e                ISO9660::~ISO9660()
                0x00000000c001a492                ISO9660::~ISO9660()
                0x00000000c001a4ba                ISO9660::exists(char const*)
                0x00000000c001a4ce                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a5b4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a5fc                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a63e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a67c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a6ce                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a810                ISO9660::close(void*)
                0x00000000c001a840                ISO9660::openDir(char const*, void**)
                0x00000000c001a91a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001aa37                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001aab6                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ab28                ISO9660::ISO9660()
                0x00000000c001ab28                ISO9660::ISO9660()
 .text          0x00000000c001ab50      0x26c hal/sound/sndcard.32
                0x00000000c001ab50                SoundCard::beginPlayback()
                0x00000000c001ab5e                SoundCard::stopPlayback()
                0x00000000c001ab6c                SoundCard::SoundCard(char const*)
                0x00000000c001ab6c                SoundCard::SoundCard(char const*)
                0x00000000c001ac0a                SoundCard::~SoundCard()
                0x00000000c001ac0a                SoundCard::~SoundCard()
                0x00000000c001ac2e                SoundCard::~SoundCard()
                0x00000000c001ac58                SoundCard::configureRates(int, int, int)
                0x00000000c001ac88                SoundCard::getSamples16(int, short*)
                0x00000000c001ace4                SoundCard::getSamples32(int, int*)
                0x00000000c001ad6a                SoundCard::addChannel(SoundPort*)
                0x00000000c001ada8                SoundCard::removeChannel(int)
 .text          0x00000000c001adbc      0x38a hal/sound/sndport.32
                0x00000000c001adbc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001adbc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001ae48                SoundPort::~SoundPort()
                0x00000000c001ae48                SoundPort::~SoundPort()
                0x00000000c001ae7c                SoundPort::unpause()
                0x00000000c001ae88                SoundPort::pause()
                0x00000000c001ae94                SoundPort::getBufferUsed()
                0x00000000c001ae9c                SoundPort::getBufferSize()
                0x00000000c001aea4                SoundPort::buffer16(short*, int)
                0x00000000c001af30                SoundPort::buffer32(int*, int)
                0x00000000c001afbc                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b088                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b146        0x0 hw/bus/isa.32
 .text          0x00000000c001b146      0xbb7 hw/bus/pci.32
                0x00000000c001b146                PCI::open(int, int, void*)
                0x00000000c001b164                PCI::close(int, int, void*)
                0x00000000c001b168                PCI::PCI()
                0x00000000c001b168                PCI::PCI()
                0x00000000c001b200                PCI::readBAR8(unsigned int, int)
                0x00000000c001b21c                PCI::readBAR16(unsigned int, int)
                0x00000000c001b23a                PCI::readBAR32(unsigned int, int)
                0x00000000c001b256                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b276                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b298                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b2b8                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b32e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b3d8                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b3fc                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b424                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b46e                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b496                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4ba                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4de                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b506                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b56a                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b652                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001b918                PCI::checkBus(unsigned char)
                0x00000000c001b93c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bab6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc32                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bca4                PCI::detect()
 *fill*         0x00000000c001bcfd        0x1 
 .text          0x00000000c001bcfe      0xb9a hw/diskctrl/ide.32
                0x00000000c001bcfe                IDE::close(int, int, void*)
                0x00000000c001bd02                IDE::IDE()
                0x00000000c001bd02                IDE::IDE()
                0x00000000c001bd36                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bd48                selectDrive(unsigned char, unsigned char)
                0x00000000c001bd4a                IDE::getBase(unsigned char)
                0x00000000c001bd5c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001be1c                IDE::read(unsigned char, unsigned char)
                0x00000000c001beca                IDE::waitInterrupt(unsigned char)
                0x00000000c001bf2c                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bf48                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bf64                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bfae                IDE::open(int, int, void*)
                0x00000000c001c3ec                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c4bc                IDE::detect()
                0x00000000c001c78a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c844                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c898      0x32a hw/diskctrl/satabus.32
                0x00000000c001c898                SATABus::close(int, int, void*)
                0x00000000c001c89c                SATABus::detect()
                0x00000000c001c89e                SATABus::SATABus()
                0x00000000c001c89e                SATABus::SATABus()
                0x00000000c001c924                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c956                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c99e                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c9be                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001c9e8                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001caf8                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cba2                SATABus::open(int, int, void*)
 .text          0x00000000c001cbc2      0x93f hw/diskphys/ata.32
                0x00000000c001cbc2                ATA::close(int, int, void*)
                0x00000000c001cbe6                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cbe8                ATA::ATA()
                0x00000000c001cbe8                ATA::ATA()
                0x00000000c001cc16                ATA::flush(bool)
                0x00000000c001cc64                ATA::readyForCommand()
                0x00000000c001ccb0                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d046                ATA::detectCHS()
                0x00000000c001d070                ATA::open(int, int, void*)
                0x00000000c001d13c                combineCharAndColour(char, unsigned char)
                0x00000000c001d14d                combineColours(unsigned char, unsigned char)
                0x00000000c001d15a                ATA::read(unsigned long long, int, void*)
                0x00000000c001d330                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d501        0x1 
 .text          0x00000000c001d502      0x618 hw/diskphys/atapi.32
                0x00000000c001d502                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d508                ATAPI::close(int, int, void*)
                0x00000000c001d52c                ATAPI::ATAPI()
                0x00000000c001d52c                ATAPI::ATAPI()
                0x00000000c001d55a                ATAPI::readyForCommand()
                0x00000000c001d5ac                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d874                ATAPI::diskRemoved()
                0x00000000c001d8ae                ATAPI::eject()
                0x00000000c001d8f6                ATAPI::diskInserted()
                0x00000000c001d902                ATAPI::detectMedia()
                0x00000000c001d9c0                ATAPI::open(int, int, void*)
                0x00000000c001daa0                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001db1a      0x807 hw/diskphys/sata.32
                0x00000000c001db1a                SATA::close(int, int, void*)
                0x00000000c001db3e                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001db40                SATA::open(int, int, void*)
                0x00000000c001dbea                SATA::SATA()
                0x00000000c001dbea                SATA::SATA()
                0x00000000c001dc18                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001de6c                SATA::read(unsigned long long, int, void*)
                0x00000000c001e0bc                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e321        0x1 
 .text          0x00000000c001e322      0x5d0 hw/diskphys/satapi.32
                0x00000000c001e322                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e328                SATAPI::close(int, int, void*)
                0x00000000c001e34c                SATAPI::SATAPI()
                0x00000000c001e34c                SATAPI::SATAPI()
                0x00000000c001e37a                SATAPI::diskRemoved()
                0x00000000c001e37c                SATAPI::diskInserted()
                0x00000000c001e398                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e676                SATAPI::eject()
                0x00000000c001e6b2                SATAPI::detectMedia()
                0x00000000c001e708                SATAPI::open(int, int, void*)
                0x00000000c001e808                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e8f2      0x45b hw/intctrl/apic.32
                0x00000000c001e8f2                IOAPIC::close(int, int, void*)
                0x00000000c001e8f8                apicGetBase()
                0x00000000c001e93e                IOAPIC::IOAPIC()
                0x00000000c001e93e                IOAPIC::IOAPIC()
                0x00000000c001e966                apicOpen()
                0x00000000c001eae2                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001eb14                IOAPIC::read(int)
                0x00000000c001eb3c                IOAPIC::open(int, int, void*)
                0x00000000c001ec22                IOAPIC::write(int, int)
                0x00000000c001ec4e                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ed4d        0x3 
 .text          0x00000000c001ed50       0xf0 hw/timer/apictimer.32
                0x00000000c001ed50                APICTimer::close(int, int, void*)
                0x00000000c001ed58                apicTimerHandler(regs*, void*)
                0x00000000c001ed80                APICTimer::open(int, int, void*)
                0x00000000c001edf0                APICTimer::write(int)
                0x00000000c001ee18                APICTimer::APICTimer()
                0x00000000c001ee18                APICTimer::APICTimer()
 .text          0x00000000c001ee40      0x1ad hw/timer/pit.32
                0x00000000c001ee40                PIT::write(int)
                0x00000000c001eec4                pitHandler(regs*, void*)
                0x00000000c001eeec                PIT::open(int, int, void*)
                0x00000000c001ef3c                PIT::close(int, int, void*)
                0x00000000c001ef6c                PIT::PIT()
                0x00000000c001ef6c                PIT::PIT()
 *fill*         0x00000000c001efed        0x3 
 .text          0x00000000c001eff0       0x83 arch/i386/avx.32
                0x00000000c001eff0                avxDetect
                0x00000000c001f01a                avxSave
                0x00000000c001f02b                avxLoad
                0x00000000c001f03c                avxInit
                0x00000000c001f05e                avxClose
                0x00000000c001f05f                wouldSheSayYes
 *fill*         0x00000000c001f073        0xd 
 .text          0x00000000c001f080      0x2ec arch/i386/interrupt.32
                0x00000000c001f080                isr0
                0x00000000c001f090                isr1
                0x00000000c001f09a                isr2
                0x00000000c001f0a4                isr3
                0x00000000c001f0ae                isr4
                0x00000000c001f0b8                isr5
                0x00000000c001f0c2                isr6
                0x00000000c001f0cc                isr7
                0x00000000c001f0d6                isr8
                0x00000000c001f0de                isr9
                0x00000000c001f0e8                isr10
                0x00000000c001f0f0                isr11
                0x00000000c001f0f8                isr12
                0x00000000c001f100                isr13
                0x00000000c001f11a                isr14
                0x00000000c001f122                isr15
                0x00000000c001f12c                isr16
                0x00000000c001f136                isr17
                0x00000000c001f140                isr18
                0x00000000c001f14a                irq3
                0x00000000c001f154                irq4
                0x00000000c001f15e                irq5
                0x00000000c001f168                irq6
                0x00000000c001f172                irq7
                0x00000000c001f17c                irq8
                0x00000000c001f186                irq9
                0x00000000c001f190                irq10
                0x00000000c001f19a                irq11
                0x00000000c001f1a4                irq12
                0x00000000c001f1ae                irq13
                0x00000000c001f1b8                irq14
                0x00000000c001f1c2                irq15
                0x00000000c001f1cc                irq1
                0x00000000c001f1d3                irq2
                0x00000000c001f1da                isr96
                0x00000000c001f1e1                irq0
                0x00000000c001f1e6                int_common_stub
                0x00000000c001f218                syscall_common_stub
                0x00000000c001f31c                irq16
                0x00000000c001f326                irq17
                0x00000000c001f330                irq18
                0x00000000c001f33a                irq19
                0x00000000c001f344                irq20
                0x00000000c001f34e                irq21
                0x00000000c001f358                irq22
                0x00000000c001f362                irq23
 *fill*         0x00000000c001f36c        0x4 
 .text          0x00000000c001f370       0x10 arch/i386/rdrand.32
                0x00000000c001f370                i386GetRDRAND
 .text          0x00000000c001f380       0x39 arch/i386/sse.32
                0x00000000c001f380                absolutelyNoChanceInHell
                0x00000000c001f380                sseDetect
                0x00000000c001f398                sseSave
                0x00000000c001f3a0                sseLoad
                0x00000000c001f3a8                sseInit
                0x00000000c001f3b8                sseClose
 *fill*         0x00000000c001f3b9        0x7 
 .text          0x00000000c001f3c0       0x49 arch/i386/x87.32
                0x00000000c001f3c6                x87Detect
                0x00000000c001f3e1                x87Save
                0x00000000c001f3e8                x87Load
                0x00000000c001f3ef                x87Init
                0x00000000c001f408                x87Close
 *fill*         0x00000000c001f409        0x3 
 .text          0x00000000c001f40c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f431        0x0 crtn.32
 *fill*         0x00000000c001f431        0x3 
 .text          0x00000000c001f434      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f434                __divdi3
 *fill*         0x00000000c001f57f        0x1 
 .text          0x00000000c001f580      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f580                __moddi3
 *fill*         0x00000000c001f6fe        0x2 
 .text          0x00000000c001f700       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f700                __udivdi3
 *fill*         0x00000000c001f7ff        0x1 
 .text          0x00000000c001f800      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f800                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f920        0x0
 .iplt          0x00000000c001f920        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f91a        0xf
 .init          0x00000000c001f91a        0x3 crti.32
                0x00000000c001f91a                _init
 .init          0x00000000c001f91d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f922        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f927        0x2 crtn.32

.fini           0x00000000c001f929        0xa
 .fini          0x00000000c001f929        0x3 crti.32
                0x00000000c001f929                _fini
 .fini          0x00000000c001f92c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f931        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f934       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f934       0x23 core/computer.32
                0x00000000c001f934                Computer::~Computer()
                0x00000000c001f934                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f958       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f958       0x2a core/computer.32
                0x00000000c001f958                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f982       0x21
 .text._Z10idleCommonv
                0x00000000c001f982       0x21 core/idle.32
                0x00000000c001f982                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f9a4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f9a4        0x2 core/unixfile.32
                0x00000000c001f9a4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f9a4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f9a6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f9a6       0x42 core/unixfile.32
                0x00000000c001f9a6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f9a6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f9e8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f9e8       0xd3 core/unixfile.32
                0x00000000c001f9e8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fabc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fabc        0x7 core/unixfile.32
                0x00000000c001fabc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fac4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fac4       0xa1 core/unixfile.32
                0x00000000c001fac4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb66        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fb66        0x8 core/unixfile.32
                0x00000000c001fb66                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb6e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb6e       0x1a hal/device.32
                0x00000000c001fb6e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fb6e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb88       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb88       0x2a hal/device.32
                0x00000000c001fb88                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fbb2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fbb2       0xdc hal/device.32
                0x00000000c001fbb2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc8e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fc8e       0x42 hal/device.32
                0x00000000c001fc8e                LinkedList<Device>::LinkedList()
                0x00000000c001fc8e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fcd0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fcd0       0x1c hal/timer.32
                0x00000000c001fcd0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fcec        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fcec        0x7 hal/timer.32
                0x00000000c001fcec                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fcf4       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fcf4       0xbc hal/timer.32
                0x00000000c001fcf4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fdb0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fdb0       0xda hal/timer.32
                0x00000000c001fdb0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fe8c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fe8c       0x23 hw/acpi.32
                0x00000000c001fe8c                ACPI::~ACPI()
                0x00000000c001fe8c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001feb0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001feb0       0x2a hw/acpi.32
                0x00000000c001feb0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fedc        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001fedc        0x2 hw/acpi.32
                0x00000000c001fedc                LinkedList<Device>::~LinkedList()
                0x00000000c001fedc                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fee0       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001fee0       0x1c hw/acpi.32
                0x00000000c001fee0                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fefc        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001fefc        0x7 hw/acpi.32
                0x00000000c001fefc                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ff04       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ff04       0xb8 hw/acpi.32
                0x00000000c001ff04                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ffbc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ffbc       0x23 hw/cpu.32
                0x00000000c001ffbc                CPU::~CPU()
                0x00000000c001ffbc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ffe0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ffe0       0x2a hw/cpu.32
                0x00000000c001ffe0                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002000c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002000c        0x8 sys/kill.32
                0x00000000c002000c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020014        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020014        0x2 thr/prcssthr.32
                0x00000000c0020014                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020014                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020018       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020018       0x49 thr/prcssthr.32
                0x00000000c0020018                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020018                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020064       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0020064       0x42 thr/prcssthr.32
                0x00000000c0020064                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0020064                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c00200a6       0x23
 .text._ZN3PCID2Ev
                0x00000000c00200a6       0x23 hw/bus/pci.32
                0x00000000c00200a6                PCI::~PCI()
                0x00000000c00200a6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00200ca       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00200ca       0x2a hw/bus/pci.32
                0x00000000c00200ca                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00200f4       0x23
 .text._ZN3IDED2Ev
                0x00000000c00200f4       0x23 hw/diskctrl/ide.32
                0x00000000c00200f4                IDE::~IDE()
                0x00000000c00200f4                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020118       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020118       0x2a hw/diskctrl/ide.32
                0x00000000c0020118                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0020142       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0020142       0x23 hw/diskctrl/satabus.32
                0x00000000c0020142                SATABus::~SATABus()
                0x00000000c0020142                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0020166       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0020166       0x2a hw/diskctrl/satabus.32
                0x00000000c0020166                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020190       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020190       0x23 hw/diskphys/ata.32
                0x00000000c0020190                ATA::~ATA()
                0x00000000c0020190                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00201b4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00201b4       0x2a hw/diskphys/ata.32
                0x00000000c00201b4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00201de       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00201de       0x23 hw/diskphys/atapi.32
                0x00000000c00201de                ATAPI::~ATAPI()
                0x00000000c00201de                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020202       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020202       0x2a hw/diskphys/atapi.32
                0x00000000c0020202                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002022c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002022c       0x23 hw/diskphys/sata.32
                0x00000000c002022c                SATA::~SATA()
                0x00000000c002022c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0020250       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0020250       0x2a hw/diskphys/sata.32
                0x00000000c0020250                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c002027a       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c002027a       0x23 hw/diskphys/satapi.32
                0x00000000c002027a                SATAPI::~SATAPI()
                0x00000000c002027a                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002029e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002029e       0x2a hw/diskphys/satapi.32
                0x00000000c002029e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00202c8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00202c8       0x23 hw/intctrl/apic.32
                0x00000000c00202c8                IOAPIC::~IOAPIC()
                0x00000000c00202c8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00202ec       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00202ec       0x2a hw/intctrl/apic.32
                0x00000000c00202ec                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020318       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020318       0x23 hw/timer/apictimer.32
                0x00000000c0020318                APICTimer::~APICTimer()
                0x00000000c0020318                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c002033c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c002033c       0x2a hw/timer/apictimer.32
                0x00000000c002033c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020368       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020368       0x23 hw/timer/pit.32
                0x00000000c0020368                PIT::~PIT()
                0x00000000c0020368                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c002038c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c002038c       0x2a hw/timer/pit.32
                0x00000000c002038c                PIT::~PIT()

.rodata         0x00000000c00203b6     0x31fa
                0x00000000c00203b6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00203b6        0x2 
 .ctors         0x00000000c00203b8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00203bc        0x4 core/unixfile.32
 .ctors         0x00000000c00203c0        0x4 thr/prcssthr.32
 .ctors         0x00000000c00203c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00203c8                end_ctors = .
                0x00000000c00203c8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00203c8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00203cc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00203cc                __DTOR_END__
                0x00000000c00203d0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00203d0       0x10 
 .rodata        0x00000000c00203e0      0x101 acpica/utclib.32
                0x00000000c00203e0                AcpiGbl_Ctypes
 *fill*         0x00000000c00204e1        0x3 
 .rodata        0x00000000c00204e4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c00204fc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0020546       0x1a 
 .rodata        0x00000000c0020560       0xed fs/fat/ff.32
 *fill*         0x00000000c002064d       0x13 
 .rodata        0x00000000c0020660      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020a60       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020acf      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020be4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020c4c       0x2c core/computer.32
                0x00000000c0020c4c                vtable for Computer
 .rodata.str1.4
                0x00000000c0020c78       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020ca8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020cb4       0x17 core/main.32
 *fill*         0x00000000c0020ccb        0x1 
 .rodata.str1.4
                0x00000000c0020ccc       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020d71       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020dc9       0x39 core/pipe.32
 *fill*         0x00000000c0020e02        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020e04       0x1c core/pipe.32
                0x00000000c0020e04                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020e20       0x2b core/terminal.32
 *fill*         0x00000000c0020e4b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0020e4c       0x1c core/terminal.32
                0x00000000c0020e4c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020e68       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020e8a       0x15 core/unixfile.32
 *fill*         0x00000000c0020e9f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020ea0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020eeb        0x8 core/unixfile.32
 *fill*         0x00000000c0020ef3        0x1 
 .rodata.str1.4
                0x00000000c0020ef4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020f14       0x1c core/unixfile.32
                0x00000000c0020f14                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020f30       0x1c core/unixfile.32
                0x00000000c0020f30                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020f4c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00211e0      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0021306       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0021339       0x11 dbg/kconsole.32
 *fill*         0x00000000c0021339        0x3 
 .rodata        0x00000000c002133c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002148c      0x169 dbg/usban.32
 *fill*         0x00000000c00215f5        0x3 
 .rodata.str1.4
                0x00000000c00215f8      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002172f      0x18b fs/symlink.32
                                        0x197 (size before relaxing)
 .rodata.str1.1
                0x00000000c00218ba       0x26 fs/vfs.32
                                         0x28 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c00218e0       0x6c fs/vfs.32
                0x00000000c00218e0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002194c       0x1c fs/vfs.32
                0x00000000c002194c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021968       0x1c fs/vfs.32
                0x00000000c0021968                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021984       0x2c hal/bus.32
                0x00000000c0021984                vtable for Bus
 .rodata.str1.1
                0x00000000c00219b0       0x1e hal/clock.32
 *fill*         0x00000000c00219ce        0x2 
 .rodata._ZTV5Clock
                0x00000000c00219d0       0x3c hal/clock.32
                0x00000000c00219d0                vtable for Clock
 *fill*         0x00000000c0021a0c       0x14 
 .rodata        0x00000000c0021a20       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021a50       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021aa8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021aa8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021aa8       0x2c hal/device.32
                0x00000000c0021aa8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021ad4       0x2c hal/device.32
                0x00000000c0021ad4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021b00       0x2c hal/diskctrl.32
                0x00000000c0021b00                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021b2c       0x38 hal/diskphys.32
                0x00000000c0021b2c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021b64       0x3e hal/intctrl.32
 *fill*         0x00000000c0021ba2        0x2 
 .rodata.str1.4
                0x00000000c0021ba4       0x5d hal/intctrl.32
 .rodata        0x00000000c0021c01       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021c54       0x34 hal/keybrd.32
                0x00000000c0021c54                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021c88       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021ccc       0x2c hal/logidisk.32
                0x00000000c0021ccc                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021cf8       0x2c hal/mouse.32
                0x00000000c0021cf8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021d24       0x34 hal/nic.32
                0x00000000c0021d24                vtable for NIC
 .rodata.str1.1
                0x00000000c0021d58        0xb hal/partition.32
 *fill*         0x00000000c0021d63        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021d64       0x44 hal/serial.32
                0x00000000c0021d64                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021da8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021da8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021da8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021da8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021da8       0x30 hal/timer.32
                0x00000000c0021da8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021dd8       0x10 hal/vcache.32
                0x00000000c0021dd8                vtable for VCache
 .rodata.str1.1
                0x00000000c0021de8       0x93 hal/video.32
 *fill*         0x00000000c0021e7b        0x1 
 .rodata._ZTV5Video
                0x00000000c0021e7c       0x4c hal/video.32
                0x00000000c0021e7c                vtable for Video
 .rodata.str1.4
                0x00000000c0021ec8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0021f63      0x156 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00220b9       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00220b9        0x8 hw/acpi.32
 *fill*         0x00000000c00220b9        0x3 
 .rodata._ZTV4ACPI
                0x00000000c00220bc       0x2c hw/acpi.32
                0x00000000c00220bc                vtable for ACPI
 .rodata.str1.1
                0x00000000c00220e8      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c0022263        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022264       0x2c hw/cpu.32
                0x00000000c0022264                vtable for CPU
 .rodata.str1.1
                0x00000000c0022290       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00222d0       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c002230c       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c002239d       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022466       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00224ae       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00224d9       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002254f       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022594        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002259e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00225bf       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022655       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c00226a9       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00226d5      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00228a1       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c00228f8      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022a08       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022a08       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022a08       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022a08        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022a08       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022aca        0x2 
 .rodata        0x00000000c0022acc       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022afc      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022c9b        0x1 
 .rodata.str1.4
                0x00000000c0022c9c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022d0f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0022d24       0x3c arch/i386/rtc.32
                0x00000000c0022d24                vtable for RTC
 .rodata.str1.1
                0x00000000c0022d60       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0022da1        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022da4       0x6c fs/fat/vfslink.32
                0x00000000c0022da4                vtable for FAT
 .rodata.str1.1
                0x00000000c0022e10       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0022e10      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0022f48       0x6c fs/iso9660/vfslink.32
                0x00000000c0022f48                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022fb4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022ff8       0x34 hal/sound/sndcard.32
                0x00000000c0022ff8                vtable for SoundCard
 .rodata.str1.4
                0x00000000c002302c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002306b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00230a3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023144       0x2c hw/bus/pci.32
                0x00000000c0023144                vtable for PCI
 .rodata.str1.1
                0x00000000c0023170       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c00231f7        0x1 
 .rodata._ZTV3IDE
                0x00000000c00231f8       0x2c hw/diskctrl/ide.32
                0x00000000c00231f8                vtable for IDE
 .rodata.str1.4
                0x00000000c0023224       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023248       0x2c hw/diskctrl/satabus.32
                0x00000000c0023248                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023274       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023286        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023288       0x38 hw/diskphys/ata.32
                0x00000000c0023288                vtable for ATA
 .rodata.str1.1
                0x00000000c00232c0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00232cd        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00232d0       0x38 hw/diskphys/atapi.32
                0x00000000c00232d0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0023308       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023384       0x38 hw/diskphys/sata.32
                0x00000000c0023384                vtable for SATA
 .rodata.str1.1
                0x00000000c00233bc       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00234a6        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00234a8       0x38 hw/diskphys/satapi.32
                0x00000000c00234a8                vtable for SATAPI
 .rodata        0x00000000c00234e0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00234e8       0x2c hw/intctrl/apic.32
                0x00000000c00234e8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023514       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002352f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023530       0x30 hw/timer/apictimer.32
                0x00000000c0023530                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023560       0x1d hw/timer/pit.32
 *fill*         0x00000000c002357d        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023580       0x30 hw/timer/pit.32
                0x00000000c0023580                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00235b0      0xbb1
 *(.data)
 .data          0x00000000c00235b0        0x0 crti.32
 .data          0x00000000c00235b0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00235b0                __dso_handle
 .data          0x00000000c00235b4        0x0 acpica/utclib.32
 .data          0x00000000c00235b4        0x0 core/malloc.32
 .data          0x00000000c00235b4        0x0 libk/ctype.32
 .data          0x00000000c00235b4        0x0 libk/string.32
 .data          0x00000000c00235b4        0x0 fs/fat/diskio.32
 .data          0x00000000c00235b4        0x0 fs/fat/ff.32
 .data          0x00000000c00235b4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00235b4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00235b4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00235b4        0x0 core/computer.32
 .data          0x00000000c00235b4        0x0 core/gdt.32
 .data          0x00000000c00235b4        0x0 core/idle.32
 .data          0x00000000c00235b4        0x0 core/idt.32
 .data          0x00000000c00235b4        0x4 core/kheap.32
 .data          0x00000000c00235b8        0x0 core/main.32
 .data          0x00000000c00235b8        0x4 core/physmgr.32
                0x00000000c00235b8                Phys::bitmap
 .data          0x00000000c00235bc        0x0 core/pipe.32
 *fill*         0x00000000c00235bc        0x4 
 .data          0x00000000c00235c0       0x60 core/terminal.32
                0x00000000c00235c0                VgaText::hiddenOut
                0x00000000c00235e0                ansiToVGAMappings
 .data          0x00000000c0023620        0x0 core/tss.32
 .data          0x00000000c0023620        0x4 core/unixfile.32
                0x00000000c0023620                UnixFile::nextFd
 .data          0x00000000c0023624       0x15 core/virtmgr.32
                0x00000000c0023624                Virt::pageAllocPtr
                0x00000000c0023628                Virt::bitmap
                0x00000000c002362c                Virt::swapfileSectorsPerPage
                0x00000000c0023630                Virt::swapfileLength
                0x00000000c0023634                Virt::swapfileSector
                0x00000000c0023638                Virt::swapfileDrive
 *fill*         0x00000000c0023639        0x3 
 .data          0x00000000c002363c        0x4 coreobjs/c++.32
                0x00000000c002363c                __stack_chk_guard
 .data          0x00000000c0023640        0x0 dbg/kconsole.32
 .data          0x00000000c0023640       0x28 dbg/usban.32
                0x00000000c0023640                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023668        0x0 fs/symlink.32
 .data          0x00000000c0023668        0x0 fs/vfs.32
 .data          0x00000000c0023668        0x0 hal/bus.32
 .data          0x00000000c0023668        0x0 hal/buzzer.32
 .data          0x00000000c0023668        0x0 hal/clock.32
 .data          0x00000000c0023668        0x0 hal/device.32
 .data          0x00000000c0023668        0x0 hal/diskctrl.32
 .data          0x00000000c0023668        0x0 hal/diskphys.32
 .data          0x00000000c0023668        0x0 hal/fpu.32
 .data          0x00000000c0023668        0x0 hal/intctrl.32
 .data          0x00000000c0023668        0x0 hal/keybrd.32
 .data          0x00000000c0023668        0x0 hal/logidisk.32
 .data          0x00000000c0023668        0x0 hal/mouse.32
 .data          0x00000000c0023668        0x0 hal/nic.32
 .data          0x00000000c0023668        0x0 hal/partition.32
 .data          0x00000000c0023668        0x0 hal/serial.32
 .data          0x00000000c0023668        0x0 hal/timer.32
 .data          0x00000000c0023668        0x0 hal/vcache.32
 .data          0x00000000c0023668        0x0 hal/video.32
 .data          0x00000000c0023668       0x10 hw/acpi.32
                0x00000000c0023668                legacyIRQRemaps
 .data          0x00000000c0023678        0x4 hw/cpu.32
                0x00000000c0023678                lastCode
 .data          0x00000000c002367c        0x0 krnl/atexit.32
 *fill*         0x00000000c002367c        0x4 
 .data          0x00000000c0023680      0x142 krnl/bootmsg.32
                0x00000000c0023680                KiSplashScreen
 .data          0x00000000c00237c2        0x0 krnl/compat.32
 *fill*         0x00000000c00237c2       0x1e 
 .data          0x00000000c00237e0      0x400 krnl/crc32.32
                0x00000000c00237e0                KiPolyLookupCRC32
 .data          0x00000000c0023be0       0x4d krnl/env.32
                0x00000000c0023be0                defaultSysEnv
 .data          0x00000000c0023c2d        0x0 krnl/inlines.32
 .data          0x00000000c0023c2d        0x0 krnl/panic.32
 .data          0x00000000c0023c2d        0x0 krnl/powctrl.32
 .data          0x00000000c0023c2d        0x0 krnl/random.32
 .data          0x00000000c0023c2d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023c2d       0x13 
 .data          0x00000000c0023c40       0x4c krnl/signal.32
                0x00000000c0023c40                KiDefaultSignalHandlers
 *fill*         0x00000000c0023c8c       0x14 
 .data          0x00000000c0023ca0       0xfc krnl/syscalls.32
                0x00000000c0023ca0                systemCallHandlers
 .data          0x00000000c0023d9c        0x0 net/ethernet.32
 *fill*         0x00000000c0023d9c        0x4 
 .data          0x00000000c0023da0      0x100 reg/cm.32
                0x00000000c0023da0                CmComponents
 .data          0x00000000c0023ea0        0x0 reg/registry.32
 .data          0x00000000c0023ea0        0x0 sys/eject.32
 .data          0x00000000c0023ea0        0x0 sys/exit.32
 .data          0x00000000c0023ea0        0x0 sys/getcwd.32
 .data          0x00000000c0023ea0        0x0 sys/getpid.32
 .data          0x00000000c0023ea0        0x0 sys/getramdata.32
 .data          0x00000000c0023ea0        0x0 sys/getvgaptr.32
 .data          0x00000000c0023ea0        0x0 sys/kill.32
 .data          0x00000000c0023ea0        0x0 sys/loaddll.32
 .data          0x00000000c0023ea0        0x0 sys/read.32
 .data          0x00000000c0023ea0        0x0 sys/registersignal.32
 .data          0x00000000c0023ea0        0x0 sys/registry.32
 .data          0x00000000c0023ea0        0x0 sys/sbrk.32
 .data          0x00000000c0023ea0        0x0 sys/setcwd.32
 .data          0x00000000c0023ea0        0x0 sys/settime.32
 .data          0x00000000c0023ea0        0x0 sys/symlink.32
 .data          0x00000000c0023ea0        0x0 sys/timezone.32
 .data          0x00000000c0023ea0        0x0 sys/truncate.32
 .data          0x00000000c0023ea0        0x0 sys/write.32
 .data          0x00000000c0023ea0        0x0 sys/wsbe.32
 .data          0x00000000c0023ea0        0x0 sys/yield.32
 .data          0x00000000c0023ea0        0x0 thr/elf.32
 .data          0x00000000c0023ea0        0x4 thr/prcssthr.32
                0x00000000c0023ea0                Thr::nextPID
 .data          0x00000000c0023ea4        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023ea4       0x1c 
 .data          0x00000000c0023ec0      0x2a0 arch/i386/hal.32
                0x00000000c0023ec0                exceptionNames
 .data          0x00000000c0024160        0x0 arch/i386/pic.32
 .data          0x00000000c0024160        0x0 arch/i386/rtc.32
 .data          0x00000000c0024160        0x0 arch/i386/vga.32
 .data          0x00000000c0024160        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024160        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024160        0x1 fs/iso9660/vfslink.32
                0x00000000c0024160                recentDriveletter
 .data          0x00000000c0024161        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024161        0x0 hal/sound/sndport.32
 .data          0x00000000c0024161        0x0 hw/bus/isa.32
 .data          0x00000000c0024161        0x0 hw/bus/pci.32
 .data          0x00000000c0024161        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024161        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024161        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024161        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024161        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024161        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024161        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024161        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024161        0x0 hw/timer/pit.32
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024161        0x0 crtn.32
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024161        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024164        0x0
 .got           0x00000000c0024164        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024164        0x0
 .got.plt       0x00000000c0024164        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024164        0x0
 .igot.plt      0x00000000c0024164        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024164        0x0
 .tm_clone_table
                0x00000000c0024164        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024164        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024161      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024161        0x3 
 .eh_frame      0x00000000c0024164        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024164        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024164       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00241bc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00241fc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024268       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
